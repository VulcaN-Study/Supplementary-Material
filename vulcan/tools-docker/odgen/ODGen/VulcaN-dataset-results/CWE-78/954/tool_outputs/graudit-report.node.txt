/src/index.js-124-  // read the config file
/src/index.js:125:  fs.readFile(configFile, (err, file) => {
/src/index.js-126-    if (err) return console.log('[reading config.json] ERROR:', err);
##############################################
/src/index.js-128-      // parse the JSON file
/src/index.js:129:      config = JSON.parse(String(file));
/src/index.js-130-      // execute the cli command
/src/index.js:131:      program.parse(process.argv);
/src/index.js-132-    } catch (err) {
##############################################
/src/authentication.js-9-      if (err) return resolve({});
/src/authentication.js:10:      fs.readFile(authFile, (err, file) => {
/src/authentication.js-11-        if (err) return reject(err);
/src/authentication.js:12:        resolve(JSON.parse(file));
/src/authentication.js-13-      });
##############################################
/src/authentication.js-19-  return new Promise((resolve, reject) => {
/src/authentication.js:20:    fs.writeFile(path.join('.', 'auth.json'), JSON.stringify(jsonData, null, 2), (err) => {
/src/authentication.js-21-      if (err) return reject(err);
