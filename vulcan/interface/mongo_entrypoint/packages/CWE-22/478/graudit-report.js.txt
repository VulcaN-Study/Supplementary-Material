/src/lib/main.js-77-    else {
/src/lib/main.js:78:        var server = http.createServer(this);
/src/lib/main.js-79-        return server.listen.apply(server, arguments);
##############################################
/src/lib/main.js-81-    //*/
/src/lib/main.js:82:    var server = http.createServer(this);
/src/lib/main.js-83-    return server.listen.apply(server, arguments);
##############################################
/src/lib/loop.js-30-        if (req.headers['content-type'] && req.headers['content-type'] === 'application/x-www-form-urlencoded') {
/src/lib/loop.js:31:            req.body = qs.parse(req.data, '&', '=');
/src/lib/loop.js-32-        }
##############################################
/src/lib/loop.js-38-function router(req, res) {
/src/lib/loop.js:39:    pathname = url.parse(req.url)['pathname'];
/src/lib/loop.js-40-    
##############################################
/src/lib/res.js-37-                // 创建读取流
/src/lib/res.js:38:                var readstream = fs.createReadStream(filepath, { encoding: 'binary' });
/src/lib/res.js-39-                var file = '';
##############################################
/src/lib/req.js-5-    // method get's query
/src/lib/req.js:6:    req.query = url.parse(req.url, true)['query'];
/src/lib/req.js-7-    
