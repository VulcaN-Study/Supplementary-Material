<report_mosca>
 <Path>/src/res/reload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 377 -                          var timer = setTimeout(function () {

 Line: 598 -                      var timer = setTimeout(function () {

 Line: 1804 -                          setTimeout(function () {

 Line: 2075 -                      self.pingTimeoutTimer = setTimeout(function () {

 Line: 2091 -                      self.pingIntervalTimer = setTimeout(function () {

 Line: 2267 -                          setTimeout(function () {

 Line: 2684 -                          setTimeout(function () {

 Line: 3008 -                                      setTimeout(function () {

 Line: 3021 -                          setTimeout(function () {

 Line: 3559 -                      setTimeout(function () {

 Line: 3597 -                  setTimeout(ondrain, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/res/reload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1744 -                      var query = clone(this.query);

 Line: 1747 -                      query.EIO = parser.protocol;

 Line: 1750 -                      query.transport = name;

 Line: 1753 -                      if (this.id) query.sid = this.id;

 Line: 1761 -                          query: query,

 Line: 2612 -                      // append to query string

 Line: 3392 -                  var query = this.query || {};

 Line: 3398 -                      query[this.timestampParam] = +new Date + '-' + Transport.timestamps++;

 Line: 3402 -                      query.b64 = 1;

 Line: 3405 -                  query = parseqs.encode(query);

 Line: 3413 -                  // prepend ? to query

 Line: 3415 -                      query = '?' + query;

 Line: 3418 -                  return schema + '://' + this.hostname + port + this.path + query;

 Line: 3629 -                  var query = this.query || {};

 Line: 3641 -                      query[this.timestampParam] = +new Date;

 Line: 3646 -                      query.b64 = 1;

 Line: 3649 -                  query = parseqs.encode(query);

 Line: 3651 -                  // prepend ? to query

 Line: 3653 -                      query = '?' + query;

 Line: 3656 -                  return schema + '://' + this.hostname + port + this.path + query;

 Line: 5352 -               * Compiles a querystring

 Line: 5373 -               * Parses a simple querystring into an object

</Result>
</report_mosca>

