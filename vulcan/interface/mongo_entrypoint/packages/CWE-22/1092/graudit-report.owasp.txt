/src/index.js-35-              class="${addClass(el)}"
/src/index.js:36:              onClick="location.href = this.innerText"
/src/index.js-37-            >
##############################################
/src/index.js-75-              el =>
/src/index.js:76:                `<button onClick="location.href = location.href + '/' + this.innerText"
/src/index.js-77-						class=${addClass(name + '/' + el)}>
##############################################
/src/lib/f-serv.js:1:"use strict";function _interopDefault(n){return n&&"object"==typeof n&&"default"in n?n.default:n}var http=require("http"),fs=require("fs"),marked=_interopDefault(require("marked")),open=_interopDefault(require("open"));const reset="[0m",blue=n=>`[34m${n}[0m`,cyan=n=>`[36m${n}[0m`,bold=n=>`[1m${n}[0m`;var addClass=n=>{const e=fs.lstatSync(n);let t="";return e.isFile()?(n=>{const e=n.slice(n.lastIndexOf(".")+1,n.length);/(package.json|yarn.lock|Pipfile(\.lock)?)/.test(n)?t+=n.slice(n.lastIndexOf("/")+1,n.length).replace(/\./g,"_"):t+=e})(n):t+="dir",t},cleanHtml=n=>n.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),template=n=>`\n<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <meta name="description" content="File explorer working on a server">\n  <title>f-serv</title>\n  <style>\n  button {\n    height: 2em;\n    border: none;\n    background: inherit;\n    font-size: 1.2em;\n    margin: .3em\n  }\n  button:hover {\n    cursor: pointer;\n    filter: brightness(90%)\n  }\n     \n  body {\n    display: flex;\n    flex-direction: column;\n    background: white;\n    margin: 0;\n    justify-content: center;\n    align-items: center;\n    font-family: sans-serif;\n  }\n  \n  h1 {\n    font-size: 3vw;\n    padding-top: 1em;\n    margin-bottom: 0\n  }\n  \n  body div {\n    flex-wrap: wrap;\n    width: 80vw;\n  }\n  \n  a {\n    font-size: 1.4em;\n    text-decoration: underline;\n    color: blue;\n    cursor: pointer\n  }\n  \n  main {\n    padding: 1em;\n  }\n\n  .toggle {\n    position: absolute;\n    top: 1em;\n    right: 1em;\n  }\n  \n  pre, code {\n    font-family: 'Fira Code', Consolas, monospace;\n  }\n  \n  pre {\n    padding: 0.5em;\n    background: whitesmoke;\n    width: 60vw;\n  }\n  \n  .js {\n    background: #e5e22f\n  }\n  \n  .yarn_lock, .yarn-integrity {\n    background: #2c8ebb;\n    color: white\n  }\n  \n  .md, .package_json {\n    background: #e52f35;\n    color: white\n  }\n  \n  .html, .rb {\n    background: red;\n    color: white\n  }\n  \n  .gitignore {\n    background: #f74e27;\n    color: white\n  }\n  \n  .dir {\n    border: 1px solid black\n  }\n  \n  .py, .python-version, .Pipfile, .Pipfile_lock {\n    background: #264d6f;\n    color: white\n  }\n  </style>\n  <script>\n  let isTable = false\n  const toggleGrid = () => {\n    const table = document.getElementsByTagName('div')[0]\n    if (isTable) {\n      table.style.display = 'block'\n      table.style['grid-template-rows'] = 'none'\n      table.style['grid-template-columns'] = 'none'\n      isTable = false\n    } else {\n      table.style.display = 'grid'\n      table.style['grid-template-rows'] = '1fr'\n      table.style['grid-template-columns'] = 'repeat(auto-fill, minmax(150px, 1fr))'\n      isTable = true\n    }\n  }\n  <\/script>\n</head>\n<body>\n<button class="toggle" onclick="toggleGrid()">Display mode <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"\n  width="26" height="26"\n  viewBox="0 0 26 26"\n  style=" fill:#000000;"><g id="surface1"><path style=" " d="M 1 0 C 0.398438 0 0 0.398438 0 1 L 0 25 C 0 25.601563 0.398438 26 1 26 L 25 26 C 25.601563 26 26 25.601563 26 25 L 26 1 C 26 0.398438 25.601563 0 25 0 Z M 2 2 L 6 2 L 6 6 L 2 6 Z M 8 2 L 12 2 L 12 6 L 8 6 Z M 14 2 L 18 2 L 18 6 L 14 6 Z M 20 2 L 24 2 L 24 6 L 20 6 Z M 2 8 L 6 8 L 6 12 L 2 12 Z M 8 8 L 12 8 L 12 12 L 8 12 Z M 14 8 L 18 8 L 18 12 L 14 12 Z M 20 8 L 24 8 L 24 12 L 20 12 Z M 2 14 L 6 14 L 6 18 L 2 18 Z M 8 14 L 12 14 L 12 18 L 8 18 Z M 14 14 L 18 14 L 18 18 L 14 18 Z M 20 14 L 24 14 L 24 18 L 20 18 Z M 2 20 L 6 20 L 6 24 L 2 24 Z M 8 20 L 12 20 L 12 24 L 8 24 Z M 14 20 L 18 20 L 18 24 L 14 24 Z M 20 20 L 24 20 L 24 24 L 20 24 Z "></path></g></svg></button>\n  ${n}\n  <span>by <a href="https://github.com/talentlessguy">v1rtl</a></span>\n</body>\n</html>\n`;const{chdir:chdir,cwd:cwd}=process,{readdir:readdir,readFile:readFile,lstat:lstat}=fs.promises,fServ=(n=80,e="./",t=!1)=>{http.createServer(async(n,t)=>{if(n.url=decodeURI(n.url),"/"===n.url){chdir(e);try{const n=await readdir("./");t.end(template(`\n        \n        <body style="height: 100vh" >\n        <h1>üìÅ ${cwd().toString().slice(cwd().lastIndexOf("/")+1,cwd().length)}\n        </h1>\n        <h4>${cwd()}</h4>\n        <div>\n        ${n.map(n=>`<button\n              class="${addClass(n)}"\n              onClick="location.href = this.innerText"\n            >\n            ${n}\n            </button>\n            `).join("")}</div></body>`))}catch(n){t.end(template(`\n        <h1>Oops! ‚ö† </h1>\n        <h2>${n}</h2>\n        `))}}else if("/favicon.ico"===n.url)t.end("");else{let e=n.url.slice(1,n.url.length);const i=!(await lstat(e)).isDirectory()&&fs.existsSync(e),l=i?await readFile(e):await readdir(e),a=cleanHtml(l.toString());t.end(template(`\n\t\t\t<h1>${i?"üìú":"üìÅ"} ${e.slice(e.lastIndexOf("/")+1,e.length)}</h1>\n\t\t\t<a onClick="history.back()">back</a>\n      <a href="/">home</a>\n\t\t${i?e.includes(".md")?`<main>${marked(a)}</main>`:`<pre>${a}</pre>`:"<div>"+l.map(n=>`<button onClick="location.href = location.href + '/' + this.innerText"\n\t\t\t\t\t\tclass=${addClass(e+"/"+n)}>\n\t\t\t\t\t\t\t${n}</button>`).join("")+"</div>"}`))}}).listen(n,async()=>{console.log(cyan("\nf-serv is starting from:"),blue(`\n\n${e||__dirname}`),cyan("\n\nApp is served on"),bold(`http://localhost:${n}`),cyan("\n\nQuit f-serv: Ctrl + C")),t&&await open(`http://localhost:${n}`)})};module.exports=fServ;
