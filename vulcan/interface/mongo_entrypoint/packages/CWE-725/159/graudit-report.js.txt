/src/theme/javascript/storage.js-24-        try {
/src/theme/javascript/storage.js:25:            var v = JSON.parse(localStorage[key]);
/src/theme/javascript/storage.js-26-            return v == null ? def : v;;
##############################################
/src/theme/assets/website/app.js-7522-jQuery.parseJSON = function( data ) {
/src/theme/assets/website/app.js:7523:	return JSON.parse( data + "" );
/src/theme/assets/website/app.js-7524-};
##############################################
/src/theme/assets/website/app.js-8561-
/src/theme/assets/website/app.js:8562:				xhr.open( options.type, options.url, options.async, options.username, options.password );
/src/theme/assets/website/app.js-8563-
##############################################
/src/theme/assets/website/app.js-23724-  var u = new Url;
/src/theme/assets/website/app.js:23725:  u.parse(url, parseQueryString, slashesDenoteHost);
/src/theme/assets/website/app.js-23726-  return u;
##############################################
/src/theme/assets/website/app.js-23935-    if (parseQueryString) {
/src/theme/assets/website/app.js:23936:      this.query = querystring.parse(this.query);
/src/theme/assets/website/app.js-23937-    }
##############################################
/src/theme/assets/website/app.js-24044-    var rel = new Url();
/src/theme/assets/website/app.js:24045:    rel.parse(relative, false, true);
/src/theme/assets/website/app.js-24046-    relative = rel;
##############################################
/src/theme/assets/website/app.js-24803-        try {
/src/theme/assets/website/app.js:24804:            var v = JSON.parse(localStorage[key]);
/src/theme/assets/website/app.js-24805-            return v == null ? def : v;;
##############################################
/src/lib/conrefs_loader.js-29-            //  Read file from absolute path
/src/lib/conrefs_loader.js:30:            return fs.readFile(filepath)
/src/lib/conrefs_loader.js-31-            .then(function(source) {
##############################################
/src/lib/init.js-72-                .then(function() {
/src/lib/init.js:73:                    return fs.writeFile(absolutePath, '# '+chapter.title+'\n');
/src/lib/init.js-74-                });
##############################################
/src/lib/plugin.js-75-    // Parse the resource path
/src/lib/plugin.js:76:    var parsed = url.parse(resource);
/src/lib/plugin.js-77-
##############################################
/src/lib/book.js-143-            return prev.then(function() {
/src/lib/book.js:144:                return book.parse();
/src/lib/book.js-145-            });
##############################################
/src/lib/book.js-533-    // Read file content
/src/lib/book.js:534:    return that.readFile(page.path)
/src/lib/book.js-535-    .then(function(content) {
##############################################
/src/lib/book.js-661-Book.prototype.readFile = function(filename) {
/src/lib/book.js:662:    return fs.readFile(
/src/lib/book.js-663-        this.resolve(filename),
##############################################
/src/lib/index.js-55-
/src/lib/index.js:56:                return book.parse()
/src/lib/index.js-57-                .then(function() {
##############################################
/src/lib/index.js-81-
/src/lib/index.js:82:                    return book.parse()
/src/lib/index.js-83-                    .then(function() {
##############################################
/src/lib/index.js-137-
/src/lib/index.js:138:                        return book.parse()
/src/lib/index.js-139-                        .then(function() {
##############################################
/src/lib/generators/json.js-31-
/src/lib/generators/json.js:32:        return fs.writeFile(
/src/lib/generators/json.js-33-            output,
##############################################
/src/lib/generators/json.js-56-        // Read readme from main language
/src/lib/generators/json.js:57:        return fs.readFile(
/src/lib/generators/json.js-58-            mainLang? path.join(that.options.output, mainLang, readme) : path.join(that.options.output, readme)
##############################################
/src/lib/generators/json.js-62-        // Extend it with infos about the languages
/src/lib/generators/json.js:63:        var json = JSON.parse(content);
/src/lib/generators/json.js-64-        _.extend(json, {
##############################################
/src/lib/generators/json.js-68-        // Write it as README.json
/src/lib/generators/json.js:69:        return fs.writeFile(
/src/lib/generators/json.js-70-            path.join(that.options.output, 'README.json'),
##############################################
/src/lib/generators/website.js-239-    .then(function(html) {
/src/lib/generators/website.js:240:        return fs.writeFile(
/src/lib/generators/website.js-241-            output,
##############################################
/src/lib/template.js-412-
/src/lib/template.js:413:    return that.book.readFile(filename)
/src/lib/template.js-414-    .then(function(content) {
##############################################
/src/lib/utils/page.js-142-                origin = src;
/src/lib/utils/page.js:143:                src = '/'+crc.crc32(origin).toString(16)+path.extname(url.parse(origin).pathname);
/src/lib/utils/page.js-144-                src = links.toAbsolute(src, options.base, options.output);
##############################################
/src/lib/utils/page.js-206-        } else if (links.isRelative(href)) {
/src/lib/utils/page.js:207:            var parts = url.parse(href);
/src/lib/utils/page.js-208-
##############################################
/src/lib/utils/page.js-330-                if (!image.content) return;
/src/lib/utils/page.js:331:                return fs.writeFile(imgin, image.content);
/src/lib/utils/page.js-332-            })
##############################################
/src/lib/utils/server.js-50-
/src/lib/utils/server.js:51:        that.running = http.createServer(function(req, res){
/src/lib/utils/server.js-52-            // Render error
##############################################
/src/lib/utils/server.js-65-            // Send file
/src/lib/utils/server.js:66:            send(req, url.parse(req.url).pathname)
/src/lib/utils/server.js-67-            .root(dir)
##############################################
/src/lib/utils/links.js-6-    try {
/src/lib/utils/links.js:7:        return Boolean(url.parse(href).protocol);
/src/lib/utils/links.js-8-    } catch(err) {
##############################################
/src/lib/utils/links.js-15-    try {
/src/lib/utils/links.js:16:        var parsed = url.parse(href);
/src/lib/utils/links.js-17-
##############################################
/src/lib/utils/links.js-26-    try {
/src/lib/utils/links.js:27:        var parsed = url.parse(href);
/src/lib/utils/links.js-28-        return !!(!parsed.protocol && !parsed.path && parsed.hash);
##############################################
/src/test/navigation.js-6-    before(function() {
/src/test/navigation.js:7:        return books.parse("summary")
/src/test/navigation.js-8-            .then(function(_book) {
##############################################
/src/test/format.js-2-    it('should provide formatting with book.formatString', function() {
/src/test/format.js:3:        return books.parse('basic')
/src/test/format.js-4-        .then(function(book) {
##############################################
/src/test/languages.js-5-        before(function() {
/src/test/languages.js:6:            return books.parse("languages")
/src/test/languages.js-7-                .then(function(_book) {
##############################################
/src/test/plugins.js-13-    before(function() {
/src/test/plugins.js:14:        return books.parse('basic')
/src/test/plugins.js-15-        .then(function(_book) {
##############################################
/src/test/resolve.js-6-    before(function() {
/src/test/resolve.js:7:        return books.parse("basic")
/src/test/resolve.js-8-            .then(function(_book) {
##############################################
/src/test/json.js-26-            before(function() {
/src/test/json.js:27:                page = JSON.parse(
/src/test/json.js-28-                    fs.readFileSync(
##############################################
/src/test/json.js-78-            before(function() {
/src/test/json.js:79:                page = JSON.parse(
/src/test/json.js-80-                    fs.readFileSync(
##############################################
/src/test/summary.js-8-        before(function() {
/src/test/summary.js:9:            return books.parse("summary")
/src/test/summary.js-10-                .then(function(_book) {
##############################################
/src/test/assertions.js-21-    this.obj.options.should.have.property('output').which.is.a.String();
/src/test/assertions.js:22:    this.assert(JSON.parse(fs.readFileSync(path.resolve(this.obj.options.output, file), { encoding: 'utf-8' })));
/src/test/assertions.js-23-});
##############################################
/src/test/helper.js-52-
/src/test/helper.js:53:    return BOOKS[bookId][testId].parse()
/src/test/helper.js-54-    .then(function() {
##############################################
/src/test/glossary.js-8-        before(function() {
/src/test/glossary.js:9:            return books.parse("glossary")
/src/test/glossary.js-10-                .then(function(_book) {
##############################################
/src/test/templating.js-6-    before(function() {
/src/test/templating.js:7:        return books.parse("basic")
/src/test/templating.js-8-            .then(function(_book) {
##############################################
/src/test/structure.js-4-    before(function() {
/src/test/structure.js:5:        return books.parse('structure')
/src/test/structure.js-6-            .then(function(_book) {
##############################################
/src/test/configuration.js-2-    it('should extract default title from README', function() {
/src/test/configuration.js:3:        return books.parse('basic')
/src/test/configuration.js-4-            .then(function(book) {
##############################################
/src/test/configuration.js-9-    it('should extract default description from README', function() {
/src/test/configuration.js:10:        return books.parse('basic')
/src/test/configuration.js-11-            .then(function(book) {
##############################################
/src/test/configuration.js-16-    it('should correctly load from json (book.json)', function() {
/src/test/configuration.js:17:        return books.parse('config-json')
/src/test/configuration.js-18-            .then(function(book) {
##############################################
/src/test/configuration.js-23-    it('should correctly load from JavaScript (book.js)', function() {
/src/test/configuration.js:24:        return books.parse('config-js')
/src/test/configuration.js-25-            .then(function(book) {
##############################################
/src/test/configuration.js-30-    it('should provide configuration on book.config.get', function() {
/src/test/configuration.js:31:        return books.parse('basic')
/src/test/configuration.js-32-            .then(function(book) {
