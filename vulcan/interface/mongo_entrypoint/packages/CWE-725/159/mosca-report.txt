<report_mosca>
 <Path>/src/theme/assets/website/app.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 3446 -  			setTimeout( jQuery.ready );

 Line: 6327 -  	setTimeout(function() {

 Line: 6882 -  		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );

 Line: 6906 -  		var timeout = setTimeout( next, time );

 Line: 8159 -  				timeoutTimer = setTimeout(function() {

 Line: 9360 -      'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',

 Line: 9909 -     * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;

 Line: 9966 -          setTimeout = context.setTimeout,

 Line: 10986 -        return setTimeout(function() { func.apply(undefined, args); }, wait);

 Line: 16922 -            timeoutId = setTimeout(delayed, remaining);

 Line: 16953 -              maxTimeoutId = setTimeout(maxDelayed, remaining);

 Line: 16960 -            timeoutId = setTimeout(delayed, wait);

 Line: 22030 -           * variable to store the setTimeout call

 Line: 22306 -              _resetTimer = setTimeout(_resetSequences, 1000);

 Line: 22358 -                  setTimeout(_resetSequences, 10);

 Line: 22843 -      var timeout = setTimeout(cleanUpNextTick);

 Line: 22872 -          setTimeout(drainQueue, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/theme/assets/website/app.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8452 -  // key/values into a query string

 Line: 11304 -       * @param {Object} object The object to query.

 Line: 11925 -       * @param {Object} object The object to query.

 Line: 11945 -       * @param {Array} array The array to query.

 Line: 13074 -       * @param {Function} func The function to query.

 Line: 13085 -       * @param {Function} func The function to query.

 Line: 13125 -       * @param {Object} object The object to query.

 Line: 13134 -       * @param {Object} object The object to query.

 Line: 13151 -       * @param {Object} object The object to query.

 Line: 13265 -       * @param {Object} object The object to query.

 Line: 13333 -       * @param {Object} [object] The object to query keys on.

 Line: 13579 -       * @param {Object} object The object to query.

 Line: 13757 -       * @param {Array} array The array to query.

 Line: 13792 -       * @param {Array} array The array to query.

 Line: 13841 -       * @param {Array} array The array to query.

 Line: 13896 -       * @param {Array} array The array to query.

 Line: 14079 -       * @param {Array} array The array to query.

 Line: 14191 -       * @param {Array} array The array to query.

 Line: 14259 -       * @param {Array} array The array to query.

 Line: 14466 -       * @param {Array} array The array to query.

 Line: 14581 -       * @param {Array} array The array to query.

 Line: 14616 -       * @param {Array} array The array to query.

 Line: 14665 -       * @param {Array} array The array to query.

 Line: 14720 -       * @param {Array} array The array to query.

 Line: 18745 -       * @param {Object} object The object to query.

 Line: 18773 -       * @param {Object} object The object to query.

 Line: 18867 -       * @param {Object} object The object to query.

 Line: 18901 -       * @param {Object} object The object to query.

 Line: 19053 -       * @param {Object} object The object to query.

 Line: 19118 -       * @param {Object} object The object to query.

 Line: 19259 -       * @param {Object} object The object to query.

 Line: 19289 -       * @param {Object} object The object to query.

 Line: 20483 -       * @param {Object} object The object to query.

 Line: 20658 -       * @param {Object} object The object to query.

 Line: 22542 -          return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;

 Line: 22610 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 23464 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 23550 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 23643 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 23718 -      querystring = require('querystring');

 Line: 23935 -        this.query = querystring.parse(this.query);

 Line: 23939 -      // no query string, but parseQueryString still requested

 Line: 23984 -        query = '';

 Line: 24000 -      query = querystring.stringify(this.query);

 Line: 24003 -    var search = this.search || (query && ('?' + query)) || '';

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/utils/server.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 74 -              socket.setTimeout(4000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/assertions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -      _.each(rules, function(validations, query) {

</Result>
</report_mosca>

