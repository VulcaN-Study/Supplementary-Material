[
  {
    "filename": "/src/lib/base64.c",
    "start_line": 93,
    "start_column": 16,
    "end_line": 93,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(value)"
  },
  {
    "filename": "/src/lib/base64.c",
    "start_line": 57,
    "start_column": 28,
    "end_line": 57,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((vlen * 4)"
  },
  {
    "filename": "/src/lib/base64.c",
    "start_line": 94,
    "start_column": 45,
    "end_line": 94,
    "end_column": 62,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((vlen * 3)"
  },
  {
    "filename": "/src/lib/base64.c",
    "start_line": 28,
    "start_column": 5,
    "end_line": 28,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 168,
    "start_column": 23,
    "end_line": 168,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(service)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 179,
    "start_column": 28,
    "end_line": 179,
    "end_column": 53,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(credentials_cache)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 350,
    "start_column": 35,
    "end_line": 350,
    "end_column": 59,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(credential_cache)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 482,
    "start_column": 30,
    "end_line": 482,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(user)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 540,
    "start_column": 26,
    "end_line": 540,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(service)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 544,
    "start_column": 29,
    "end_line": 544,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(service)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 582,
    "start_column": 22,
    "end_line": 582,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(username)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 877,
    "start_column": 20,
    "end_line": 877,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(service)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 1095,
    "start_column": 27,
    "end_line": 1095,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(\"FILE:\")"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 477,
    "start_column": 5,
    "end_line": 477,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buf, &buf_size, 4)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 310,
    "start_column": 33,
    "end_line": 310,
    "end_column": 62,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(name_token.length + 1)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 756,
    "start_column": 31,
    "end_line": 756,
    "end_column": 62,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(output_token.length + 1)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 778,
    "start_column": 30,
    "end_line": 778,
    "end_column": 61,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(output_token.length + 1)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 1220,
    "start_column": 11,
    "end_line": 1220,
    "end_column": 25,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(needed)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 312,
    "start_column": 7,
    "end_line": 312,
    "end_column": 76,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(state->username, (char*) name_token.value, name_token.length)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 480,
    "start_column": 5,
    "end_line": 480,
    "end_column": 39,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(buf + 4, user, sizeof(buf)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 757,
    "start_column": 5,
    "end_line": 757,
    "end_column": 78,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(state->username, (char*) output_token.value, output_token.length)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 779,
    "start_column": 2,
    "end_line": 779,
    "end_column": 77,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(state->targetname, (char*) output_token.value, output_token.length)"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 43,
    "start_column": 5,
    "end_line": 43,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 468,
    "start_column": 5,
    "end_line": 468,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 472,
    "start_column": 5,
    "end_line": 472,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 1097,
    "start_column": 46,
    "end_line": 1097,
    "end_column": 54,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 1217,
    "start_column": 14,
    "end_line": 1217,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/kerberosgss.c",
    "start_line": 1222,
    "start_column": 5,
    "end_line": 1222,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/win32/base64.c",
    "start_line": 80,
    "start_column": 21,
    "end_line": 80,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(value)"
  },
  {
    "filename": "/src/lib/win32/base64.c",
    "start_line": 45,
    "start_column": 28,
    "end_line": 45,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((vlen * 4)"
  },
  {
    "filename": "/src/lib/win32/base64.c",
    "start_line": 81,
    "start_column": 45,
    "end_line": 81,
    "end_column": 62,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((vlen * 3)"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 22,
    "start_column": 5,
    "end_line": 22,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 54,
    "start_column": 5,
    "end_line": 54,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 89,
    "start_column": 5,
    "end_line": 89,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 114,
    "start_column": 5,
    "end_line": 114,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 136,
    "start_column": 5,
    "end_line": 136,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 171,
    "start_column": 5,
    "end_line": 171,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 205,
    "start_column": 5,
    "end_line": 205,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 238,
    "start_column": 5,
    "end_line": 238,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/win32/kerberos_sspi.c",
    "start_line": 246,
    "start_column": 5,
    "end_line": 246,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  }
]