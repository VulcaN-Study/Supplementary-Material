{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 2
        },
        "extra": {
          "line": "  \"ignore\": [",
          "message": "Syntax error"
        },
        "path": "/src/.bithoundrc",
        "start": {
          "col": 11,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 14,
          "line": 2
        },
        "extra": {
          "line": "  \"registry\": \"https://registry.bower.io\"",
          "message": "Syntax error"
        },
        "path": "/src/.bowerrc",
        "start": {
          "col": 13,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 2
        },
        "extra": {
          "line": "\t\"extends\": \"eslint-config-airbnb-es5\",",
          "message": "Syntax error"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 11,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 15,
          "line": 2
        },
        "extra": {
          "line": "  \"attr-bans\": [",
          "message": "Syntax error"
        },
        "path": "/src/.htmllintrc",
        "start": {
          "col": 14,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 9,
          "line": 2
        },
        "extra": {
          "line": "\t\"boss\": true,",
          "message": "Syntax error"
        },
        "path": "/src/.jshintrc",
        "start": {
          "col": 8,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) 2012-2014 ExactTarget, Inc.",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 18,
          "line": 1
        },
        "extra": {
          "line": "web: tar -zcf dev/node_modules.tar.gz node_modules/ && grunt dist && node devserver.js",
          "message": "Syntax error"
        },
        "path": "/src/Procfile",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/test/tree-tests/data/guid.js",
          "match_lines": [
            4,
            4
          ],
          "match_position": [
            27,
            38
          ],
          "match_string": "\t\t\treturn Math.floor((1 + Math.random()) * 0x10000)"
        },
        {
          "file_path": "/src/js/repeater.js",
          "match_lines": [
            72,
            72
          ],
          "match_position": [
            51,
            62
          ],
          "match_string": "\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            204,
            204
          ],
          "match_position": [
            46,
            57
          ],
          "match_string": "\t\t\t\t}, data.infiniteScroll.delays[Math.floor(Math.random() * 4)]);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            226,
            226
          ],
          "match_position": [
            45,
            56
          ],
          "match_string": "\t\t\t}, data.infiniteScroll.delays[Math.floor(Math.random() * 4)]);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            427,
            427
          ],
          "match_position": [
            48,
            59
          ],
          "match_string": "\t\tvar randomBackgroundColor = '#' + Math.floor(Math.random() * 16777215).toString(16);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            607,
            607
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "\t\t\t}, loadDelays[Math.floor(Math.random() * 4)]);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            635,
            635
          ],
          "match_position": [
            77,
            88
          ],
          "match_string": "\t\t\t\t\tsrc: 'http://lorempixel.com/65/65/' + sampleImageCategories[Math.floor(Math.random() * 9)] + '/?_=' + i"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            642,
            642
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "\t\t\t}, loadDelays[Math.floor(Math.random() * 4)]);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            775,
            775
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "\t\t\t}, loadDelays[Math.floor(Math.random() * 4)]);"
        },
        {
          "file_path": "/src/index.js",
          "match_lines": [
            1088,
            1088
          ],
          "match_position": [
            27,
            38
          ],
          "match_string": "\t\t\treturn Math.floor((1 + Math.random()) * 0x10000)"
        },
        {
          "file_path": "/src/reference/dist/js/fuelux.js",
          "match_lines": [
            1930,
            1930
          ],
          "match_position": [
            60,
            71
          ],
          "match_string": "\t\t\t\tthis.clickStamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/reference/dist/js/fuelux.js",
          "match_lines": [
            5573,
            5573
          ],
          "match_position": [
            54,
            65
          ],
          "match_string": "\t\t\tthis.stamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/reference/dist/js/fuelux.js",
          "match_lines": [
            8674,
            8674
          ],
          "match_position": [
            60,
            71
          ],
          "match_string": "\t\t\t\tthis.clickStamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/dist/js/fuelux.js",
          "match_lines": [
            1930,
            1930
          ],
          "match_position": [
            60,
            71
          ],
          "match_string": "\t\t\t\tthis.clickStamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/dist/js/fuelux.js",
          "match_lines": [
            5573,
            5573
          ],
          "match_position": [
            54,
            65
          ],
          "match_string": "\t\t\tthis.stamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/dist/js/fuelux.js",
          "match_lines": [
            8674,
            8674
          ],
          "match_position": [
            60,
            71
          ],
          "match_string": "\t\t\t\tthis.clickStamp = new Date().getTime() + ( Math.floor( Math.random() * 100 ) + 1 );"
        },
        {
          "file_path": "/src/js/picker.js",
          "match_lines": [
            230,
            230
          ],
          "match_position": [
            57,
            68
          ],
          "match_string": "\t\t\tthis.clickStamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);"
        },
        {
          "file_path": "/src/js/placard.js",
          "match_lines": [
            290,
            290
          ],
          "match_position": [
            57,
            68
          ],
          "match_string": "\t\t\tthis.clickStamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {
    "handlebar_mustache_template": {
      "files": [
        {
          "file_path": "/src/test/regression/main.hbs",
          "match_position": [
            2437,
            2447
          ],
          "match_string": "{{{body}}}"
        },
        {
          "file_path": "/src/templates/handlebars/bootstrap/modal.hbs",
          "match_position": [
            670,
            680
          ],
          "match_string": "{{{body}}}"
        },
        {
          "file_path": "/src/dist/templates/handlebars/bootstrap/modal.hbs",
          "match_position": [
            670,
            680
          ],
          "match_string": "{{{body}}}"
        },
        {
          "file_path": "/src/reference/dist/templates/handlebars/fuelux/wizard.hbs",
          "match_position": [
            1042,
            1055
          ],
          "match_string": "{{{content}}}"
        },
        {
          "file_path": "/src/dist/templates/handlebars/fuelux/wizard.hbs",
          "match_position": [
            1042,
            1055
          ],
          "match_string": "{{{content}}}"
        },
        {
          "file_path": "/src/templates/handlebars/fuelux/wizard.hbs",
          "match_position": [
            1042,
            1055
          ],
          "match_string": "{{{content}}}"
        },
        {
          "file_path": "/src/reference/dist/templates/handlebars/bootstrap/modal.hbs",
          "match_position": [
            670,
            680
          ],
          "match_string": "{{{body}}}"
        },
        {
          "file_path": "/src/test/regression/components/repeater.hbs",
          "match_position": [
            4285,
            4310
          ],
          "match_string": "{{{this.listSelectable}}}"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The Handlebar.js/Mustache.js template has an unescaped variable. Untrusted user input passed to this variable results in Cross Site Scripting (XSS).",
        "id": "handlebar_mustache_template",
        "input_case": "exact",
        "owasp": "A1: Injection",
        "pattern": "{{{.+}}}|{{[ ]*&[\\w]+.*}}",
        "severity": "ERROR",
        "type": "Regex"
      }
    }
  }
}
