<report_mosca>
 <Path>/src/client/router.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 158 -    var paramNames, params, query;

 Line: 173 -    query = search.slice(1).split('&').reduce(function(memo, queryPart) {

 Line: 174 -      var parts = queryPart.split('=');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/shared/syncer.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 15 -        'delete': 'DELETE',

 Line: 59 -    var api, urlParts, verb, req, queryStr;

 Line: 67 -    queryStr = urlParts[1] || '';

 Line: 68 -    if (!_.isEmpty(options.data)) queryStr += '&' + qs.stringify(options.data);

 Line: 70 -     * if queryStr is initially an empty string, leading '&' will still get parsed correctly by qs.parse below.

 Line: 77 -      query: qs.parse(queryStr),

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/shared/base/collection.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -       * query for these models.

</Result>
</report_mosca>

