<report_mosca>
 <Path>/src/examples/using-ast-directly.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 8 -  function load(res, cb) { setTimeout(cb, 100, null, res + '-loaded'); }

 Line: 9 -  function prefix(prefstr, str, cb) { setTimeout(cb, 100, null, prefstr + str); }

 Line: 10 -  function postfix(str, poststr, cb) { setTimeout(cb, 100, null, str + poststr); }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/longer-example.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 5 -  function loadUser(uid, cb){ setTimeout(cb, 100, null, "User"+uid); }

 Line: 6 -  function loadFile(filename, cb){ setTimeout(cb, 100, null, 'Filedata'+filename); }

 Line: 8 -  function prepareDirectory(outDirname, cb){ setTimeout(cb, 200, null, 'dircreated-'+outDirname); }

 Line: 9 -  function writeOutput(html, user, cb){  setTimeout(cb, 300, null, html+'_bytesWritten'); }

 Line: 10 -  function loadEmailTemplate(cb) { setTimeout(cb, 50, null, 'emailmd'); }

 Line: 12 -  function deliverEmail(custEmailHtml, cb) { setTimeout(cb, 100, null, 'delivered-'+custEmailHtml); }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/using-log-events.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 11 -  function loadUser(uid, cb){ setTimeout(cb, 100, null, "User"+uid); }

 Line: 12 -  function loadFile(filename, cb){ setTimeout(cb, 100, null, 'Filedata'+filename); }

 Line: 14 -  function prepareDirectory(outDirname, cb){ setTimeout(cb, 200, null, 'dircreated-'+outDirname); }

 Line: 15 -  function writeOutput(html, user, cb){  setTimeout(cb, 300, null, html+'_bytesWritten'); }

 Line: 16 -  function loadEmailTemplate(cb) { setTimeout(cb, 50, null, 'emailmd'); }

 Line: 18 -  function deliverEmail(custEmailHtml, cb) { setTimeout(cb, 100, null, 'delivered-'+custEmailHtml); }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/simple.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 19 -    setTimeout(function () {

 Line: 25 -    setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/using-events1.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 47 -  function loadUser(uid, cb){ setTimeout(cb, 100, null, "User"+uid); }

 Line: 48 -  function loadFile(filename, cb){ setTimeout(cb, 100, null, 'Filedata'+filename); }

 Line: 50 -  function prepareDirectory(outDirname, cb){ setTimeout(cb, 200, null, 'dircreated-'+outDirname); }

 Line: 51 -  function writeOutput(html, user, cb){  setTimeout(cb, 300, null, html+'_bytesWritten'); }

 Line: 52 -  function loadEmailTemplate(cb) { setTimeout(cb, 50, null, 'emailmd'); }

 Line: 54 -  function deliverEmail(custEmailHtml, cb) { setTimeout(cb, 100, null, 'delivered-'+custEmailHtml); }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/promise-auto-resolve.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 32 -      setTimeout(function () { deferred.resolve(2); }, 10);

 Line: 38 -      setTimeout(function () { deferred.resolve(3); }, 10);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/core-when.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 15 -    setTimeout(function () {

 Line: 22 -    setTimeout(function () {

 Line: 30 -    setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/dsl.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 283 -    function loadUser(uid, cb){ setTimeout(cb, 100, null, "User"+uid); }

 Line: 284 -    function loadFile(filename, cb){ setTimeout(cb, 100, null, 'Filedata'+filename); }

 Line: 286 -    function prepareDirectory(outDirname, cb){ setTimeout(cb, 200, null, 'dircreated-'+outDirname); }

 Line: 287 -    function writeOutput(html, user, cb){  setTimeout(cb, 300, null, html+'_bytesWritten'); }

 Line: 288 -    function loadEmailTemplate(cb) { setTimeout(cb, 50, null, 'emailmd'); }

 Line: 290 -    function deliverEmail(custEmailHtml, cb) { setTimeout(cb, 100, null, 'delivered-'+custEmailHtml); }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/core-deferred.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 16 -    setTimeout(function () {

 Line: 23 -    setTimeout(function () {

 Line: 35 -    setTimeout(function () {

 Line: 69 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/core-promised.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 15 -    setTimeout(function () {

 Line: 22 -    setTimeout(function () {

 Line: 34 -    setTimeout(function () {

 Line: 68 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/module-use.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 100 -      setTimeout(function () { cb(null); }, 100); // returns undefined result

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/core.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 523 -      setTimeout(function () { cb(null); }, 100); // returns undefined result

</Result>
</report_mosca>

