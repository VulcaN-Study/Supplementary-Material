/src/tools/node.js-80-            sourcesContent[file] = code;
/src/tools/node.js:81:            toplevel = UglifyJS.parse(code, {
/src/tools/node.js-82-                filename: options.fromString ? "?" : file,
##############################################
/src/tools/node.js-199-    var data = fs.readFileSync(filename, "utf8");
/src/tools/node.js:200:    data = JSON.parse(data);
/src/tools/node.js-201-    if (data.vars) {
##############################################
/src/tools/node.js-224-            var cache = fs.readFileSync(filename, "utf8");
/src/tools/node.js:225:            cache = JSON.parse(cache)[key];
/src/tools/node.js-226-            if (!cache) throw "init";
##############################################
/src/tools/node.js-242-            data = fs.readFileSync(filename, "utf8");
/src/tools/node.js:243:            data = JSON.parse(data);
/src/tools/node.js-244-        } catch(ex) {
##############################################
/src/README.md-598-var result = UglifyJS.minify("compiled.js", {
/src/README.md:599:	inSourceMap: JSON.parse(my_source_map_string),
/src/README.md-600-	outSourceMap: "minified.js.map"
##############################################
/src/README.md-632-```javascript
/src/README.md:633:var toplevel_ast = UglifyJS.parse(code, options);
/src/README.md-634-```
##############################################
/src/README.md-651-	var code = fs.readFileSync(file, "utf8");
/src/README.md:652:	toplevel = UglifyJS.parse(code, {
/src/README.md-653-		filename: file,
##############################################
/src/bin/extract-props.js-17-if (ARGS.o) try {
/src/bin/extract-props.js:18:    output = JSON.parse(fs.readFileSync(ARGS.o, "utf8"));
/src/bin/extract-props.js-19-} catch(ex) {}
##############################################
/src/bin/extract-props.js-30-    var code = fs.readFileSync(filename, "utf8");
/src/bin/extract-props.js:31:    var ast = U2.parse(code);
/src/bin/extract-props.js-32-
##############################################
/src/bin/uglifyjs-253-if (ORIG_MAP) {
/src/bin/uglifyjs:254:    ORIG_MAP = JSON.parse(fs.readFileSync(ORIG_MAP));
/src/bin/uglifyjs-255-    if (files.length == 0) {
##############################################
/src/bin/uglifyjs-322-            if (ARGS.spidermonkey) {
/src/bin/uglifyjs:323:                var program = JSON.parse(code);
/src/bin/uglifyjs-324-                if (!TOPLEVEL) TOPLEVEL = program;
##############################################
/src/bin/uglifyjs-327-            else if (ARGS.acorn) {
/src/bin/uglifyjs:328:                TOPLEVEL = acorn.parse(code, {
/src/bin/uglifyjs-329-                    locations     : true,
##############################################
/src/bin/uglifyjs-335-                try {
/src/bin/uglifyjs:336:                    TOPLEVEL = UglifyJS.parse(code, {
/src/bin/uglifyjs-337-                        filename     : file,
##############################################
/src/bin/uglifyjs-478-        try {
/src/bin/uglifyjs:479:            ast = UglifyJS.parse(x, { expression: true });
/src/bin/uglifyjs-480-        } catch(ex) {
##############################################
/src/bin/uglifyjs-519-    } else {
/src/bin/uglifyjs:520:        fs.readFile(filename, "utf-8", cb);
/src/bin/uglifyjs-521-    }
