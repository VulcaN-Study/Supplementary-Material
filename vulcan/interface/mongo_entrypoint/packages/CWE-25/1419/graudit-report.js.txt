/src/reinstall.js-44-    let dirs = fs.readdirSync(root + '/node_modules');
/src/reinstall.js:45:    let newPack = JSON.parse(JSON.stringify(defaultPack));
/src/reinstall.js-46-    dirs = dirs.filter(dir => dir.match(/^iobroker\.?/i));
##############################################
/src/reinstall.js-49-        try {
/src/reinstall.js:50:            const pack = JSON.parse(fs.readFileSync(fileName).toString());
/src/reinstall.js-51-            return {name: pack.name, version: pack.version};
##############################################
/src/controller.js-97-    } else {
/src/controller.js:98:        let _config = JSON.parse(fs.readFileSync(configFile));
/src/controller.js-99-        if (!_config.states)  _config.states  = {type: 'file'};
##############################################
/src/controller.js-564-        try {
/src/controller.js:565:            subs = JSON.parse(state.val)
/src/controller.js-566-        } catch (e) {
##############################################
/src/controller.js-1433-                                try {
/src/controller.js:1434:                                    _ioPack = JSON.parse(fs.readFileSync(__dirname + '/io-package.json'));
/src/controller.js-1435-                                } catch (e) {
##############################################
/src/controller.js-1488-                    try {
/src/controller.js:1489:                        _result = JSON.parse(fs.readFileSync(dir + '/io-package.json'));
/src/controller.js-1490-                    } catch (e) {
##############################################
/src/controller.js-1503-                try {
/src/controller.js:1504:                    ioPack = JSON.parse(fs.readFileSync(__dirname + '/io-package.json'));
/src/controller.js-1505-                } catch (e) {
##############################################
/src/controller.js-1595-
/src/controller.js:1596:                    fs.createReadStream(logFile_, {
/src/controller.js-1597-                        start: (stats.size > 150 * lines) ? stats.size - 150 * lines : 0,
##############################################
/src/controller.js-1837-                    procs[instance._id] = procs[instance._id] || {};
/src/controller.js:1838:                    procs[instance._id].config = JSON.parse(JSON.stringify(instance));
/src/controller.js-1839-                    if (instance.common.enabled && (!instance.common.webExtension || !instance.native.webInstance)) count++;
##############################################
/src/controller.js-2778-                // npm3 requires version attribute
/src/controller.js:2779:                let p = JSON.parse(fs.readFileSync(__dirname + '/../../package.json').toString());
/src/controller.js-2780-                if (!p.version) {
##############################################
/src/lib/objects.js-3-var getConfigFileName = require(__dirname + '/tools').getConfigFileName;
/src/lib/objects.js:4:var config = JSON.parse(require('fs').readFileSync(getConfigFileName(), 'utf8'));
/src/lib/objects.js-5-if (!config.objects) config.objects = {type: 'file'};
##############################################
/src/lib/restart.js-153-            try {
/src/lib/restart.js:154:                var pids = JSON.parse(fs.readFileSync(__dirname + '/../pids.txt').toString());
/src/lib/restart.js-155-                killPids(pids, function () {
##############################################
/src/lib/multihostServer.js-230-                    try {
/src/lib/multihostServer.js:231:                        var data = JSON.parse(buffer[id]);
/src/lib/multihostServer.js-232-                        buffer[id] = '';
##############################################
/src/lib/objects/objectsInMemServer.js-360-                try {
/src/lib/objects/objectsInMemServer.js:361:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-362-                } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-667-            if (!memStore[id + '/' + attName]) log.error(namespace + ' File ' + id + ' / ' +  attName + ' is empty');
/src/lib/objects/objectsInMemServer.js:668:            this.writeFile(id, attName, memStore[id + '/' + attName] || '', options, function () {
/src/lib/objects/objectsInMemServer.js-669-                if (memStore[id + '/' + attName] !== undefined) delete memStore[id + '/' + attName];
##############################################
/src/lib/objects/objectsInMemServer.js-770-            return new Promise((resolve, reject) => {
/src/lib/objects/objectsInMemServer.js:771:                this.writeFile(id, name, options, (err, res, mimeType) =>{
/src/lib/objects/objectsInMemServer.js-772-                    if (!err) {
##############################################
/src/lib/objects/objectsInMemServer.js-788-                    try {
/src/lib/objects/objectsInMemServer.js:789:                        fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-790-                    } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-819-                    try {
/src/lib/objects/objectsInMemServer.js:820:                        fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'binary'));
/src/lib/objects/objectsInMemServer.js-821-                    } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-916-            return new Promise((resolve, reject) => {
/src/lib/objects/objectsInMemServer.js:917:                this.readFile(id, name, options, (err, res, mimeType) =>{
/src/lib/objects/objectsInMemServer.js-918-                    if (!err) {
##############################################
/src/lib/objects/objectsInMemServer.js-945-                if (fs.existsSync(objectsDir + id + '/_data.json')) {
/src/lib/objects/objectsInMemServer.js:946:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-947-                } else {
##############################################
/src/lib/objects/objectsInMemServer.js-966-                        cnt++;
/src/lib/objects/objectsInMemServer.js:967:                        that.unlink(id, name + '/' + fdir[f], options, function (err) {
/src/lib/objects/objectsInMemServer.js-968-                            if (!--cnt) {
##############################################
/src/lib/objects/objectsInMemServer.js-1058-                try {
/src/lib/objects/objectsInMemServer.js:1059:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'binary'));
/src/lib/objects/objectsInMemServer.js-1060-                } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-1224-                if (fs.existsSync(objectsDir + id + '/_data.json')) {
/src/lib/objects/objectsInMemServer.js:1225:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-1226-                } else {
##############################################
/src/lib/objects/objectsInMemServer.js-1282-                if (fs.existsSync(objectsDir + id + '/_data.json')) {
/src/lib/objects/objectsInMemServer.js:1283:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-1284-                } else {
##############################################
/src/lib/objects/objectsInMemServer.js-1381-                if (fs.existsSync(objectsDir + id + '/_data.json')) {
/src/lib/objects/objectsInMemServer.js:1382:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-1383-                } else {
##############################################
/src/lib/objects/objectsInMemServer.js-1477-                if (fs.existsSync(objectsDir + id + '/_data.json')) {
/src/lib/objects/objectsInMemServer.js:1478:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInMemServer.js-1479-                } else {
##############################################
/src/lib/objects/objectsInMemServer.js-1524-                    try {
/src/lib/objects/objectsInMemServer.js:1525:                        fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'binary'));
/src/lib/objects/objectsInMemServer.js-1526-                    } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-1647-                    try {
/src/lib/objects/objectsInMemServer.js:1648:                        fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'binary'));
/src/lib/objects/objectsInMemServer.js-1649-                    } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-2139-            try {
/src/lib/objects/objectsInMemServer.js:2140:                obj.common.data = JSON.parse(fs.readFileSync(file));
/src/lib/objects/objectsInMemServer.js-2141-            } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-2488-        for (let i = 0; i < keys.length; i++) {
/src/lib/objects/objectsInMemServer.js:2489:            result.push(JSON.parse(JSON.stringify(objects[keys[i]])));
/src/lib/objects/objectsInMemServer.js-2490-        }
##############################################
/src/lib/objects/objectsInMemServer.js-2602-
/src/lib/objects/objectsInMemServer.js:2603:        objects[id] = JSON.parse(JSON.stringify(obj));
/src/lib/objects/objectsInMemServer.js-2604-        publishAll('objects', id, obj);
##############################################
/src/lib/objects/objectsInMemServer.js-2742-
/src/lib/objects/objectsInMemServer.js:2743:        let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInMemServer.js-2744-
##############################################
/src/lib/objects/objectsInMemServer.js-3273-                if (!settings.certificates) return;
/src/lib/objects/objectsInMemServer.js:3274:                server.server = require('https').createServer(settings.certificates, function (req, res) {
/src/lib/objects/objectsInMemServer.js-3275-                    res.writeHead(501);
##############################################
/src/lib/objects/objectsInMemServer.js-3278-            } else {
/src/lib/objects/objectsInMemServer.js:3279:                server.server = require('http').createServer(function (req, res) {
/src/lib/objects/objectsInMemServer.js-3280-                    res.writeHead(501);
##############################################
/src/lib/objects/objectsInMemServer.js-3343-            try {
/src/lib/objects/objectsInMemServer.js:3344:                objects = JSON.parse(fs.readFileSync(objectsName).toString());
/src/lib/objects/objectsInMemServer.js-3345-            } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-3348-                    try {
/src/lib/objects/objectsInMemServer.js:3349:                        objects = JSON.parse(fs.readFileSync(objectsName + '.bak').toString());
/src/lib/objects/objectsInMemServer.js-3350-                    } catch (e) {
##############################################
/src/lib/objects/objectsInMemServer.js-3359-            try {
/src/lib/objects/objectsInMemServer.js:3360:                objects = JSON.parse(fs.readFileSync(objectsName + '.bak').toString());
/src/lib/objects/objectsInMemServer.js-3361-            } catch (e) {
##############################################
/src/lib/objects/objectsInMemClient.js-77-        if (!settings.connection.secure) {
/src/lib/objects/objectsInMemClient.js:78:            client = io.connect('http://'  + (settings.connection.host !=='0.0.0.0' ? settings.connection.host || '127.0.0.1' : '127.0.0.1') + ':' + (settings.connection.port || 9001));
/src/lib/objects/objectsInMemClient.js-79-        } else {
/src/lib/objects/objectsInMemClient.js:80:            client = io.connect('https://' + (settings.connection.host !=='0.0.0.0' ? settings.connection.host || '127.0.0.1' : '127.0.0.1') + ':' + (settings.connection.port || 9001));
/src/lib/objects/objectsInMemClient.js-81-        }
##############################################
/src/lib/objects/objectsInMemClient.js-179-			if (!memStore[id + '/' + attName]) log.error(settings.namespace + ' File ' + id + ' / ' +  attName + ' is empty');
/src/lib/objects/objectsInMemClient.js:180:            that.writeFile(id, attName, memStore[id + '/' + attName], options, function () {
/src/lib/objects/objectsInMemClient.js-181-                if (memStore[id + '/' + attName] !== undefined) delete memStore[id + '/' + attName];
##############################################
/src/lib/objects/objectsInMemClient.js-203-            return new Promise((resolve, reject) => {
/src/lib/objects/objectsInMemClient.js:204:                this.readFile(id, name, options, (err, arr) => {
/src/lib/objects/objectsInMemClient.js-205-                    if (err) {
##############################################
/src/lib/objects/objectsInRedis.js-188-                try {
/src/lib/objects/objectsInRedis.js:189:                    fileOptions[id] = JSON.parse(fs.readFileSync(objectsDir + id + '/_data.json', 'utf8'));
/src/lib/objects/objectsInRedis.js-190-                } catch (e) {
##############################################
/src/lib/objects/objectsInRedis.js-496-            if (!memStore[id + '/' + attName]) log.error('File ' + id + ' / ' +  attName + ' is empty');
/src/lib/objects/objectsInRedis.js:497:            that.writeFile(id, attName, memStore[id + '/' + attName] || '', options, function () {
/src/lib/objects/objectsInRedis.js-498-                if (memStore[id + '/' + attName] !== undefined) delete memStore[id + '/' + attName];
##############################################
/src/lib/objects/objectsInRedis.js-521-                } else {
/src/lib/objects/objectsInRedis.js:522:                    return that.writeFile(id, name, data, options, callback);
/src/lib/objects/objectsInRedis.js-523-                }
##############################################
/src/lib/objects/objectsInRedis.js-576-                } else {
/src/lib/objects/objectsInRedis.js:577:                    return that.readFile(id, name, options, callback);
/src/lib/objects/objectsInRedis.js-578-                }
##############################################
/src/lib/objects/objectsInRedis.js-619-                    } else {
/src/lib/objects/objectsInRedis.js:620:                        return that.unlink(id, name, options, callback);
/src/lib/objects/objectsInRedis.js-621-                    }
##############################################
/src/lib/objects/objectsInRedis.js-683-                    } else {
/src/lib/objects/objectsInRedis.js:684:                        return that.rename(id, oldName, newName, options, callback);
/src/lib/objects/objectsInRedis.js-685-                    }
##############################################
/src/lib/objects/objectsInRedis.js-1180-                try {
/src/lib/objects/objectsInRedis.js:1181:                    obj = obj ? JSON.parse(obj) : null;
/src/lib/objects/objectsInRedis.js-1182-                } catch (e) {
##############################################
/src/lib/objects/objectsInRedis.js-1184-                }
/src/lib/objects/objectsInRedis.js:1185:                callback(err, obj ? JSON.parse(obj) : null);
/src/lib/objects/objectsInRedis.js-1186-            });
##############################################
/src/lib/objects/objectsInRedis.js-1409-            try {
/src/lib/objects/objectsInRedis.js:1410:                oldObj = oldObj ? JSON.parse(oldObj) : null;
/src/lib/objects/objectsInRedis.js-1411-            } catch (e) {
##############################################
/src/lib/objects/objectsInRedis.js-1517-            try {
/src/lib/objects/objectsInRedis.js:1518:                oldObj = oldObj ? JSON.parse(oldObj) : null;
/src/lib/objects/objectsInRedis.js-1519-            } catch (e) {
##############################################
/src/lib/objects/objectsInRedis.js-1547-            client.mget(keys, (err, objs) => {
/src/lib/objects/objectsInRedis.js:1548:                let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInRedis.js-1549-
##############################################
/src/lib/objects/objectsInRedis.js-1608-                        const func = obj.views[search];
/src/lib/objects/objectsInRedis.js:1609:                        let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInRedis.js-1610-                        let result = {rows: []};
##############################################
/src/lib/objects/objectsInRedis.js-1688-                    for (let r = 0; r < objs.length; r++) {
/src/lib/objects/objectsInRedis.js:1689:                        let obj = JSON.parse(objs[r]);
/src/lib/objects/objectsInRedis.js-1690-                        if (!checkObject(obj, options, 4/*read*/)) continue;
##############################################
/src/lib/objects/objectsInRedis.js-1852-                        try {
/src/lib/objects/objectsInRedis.js:1853:                            const obj = message ? JSON.parse(message) : null;
/src/lib/objects/objectsInRedis.js-1854-                            onChange(id, obj);
##############################################
/src/lib/setup.js-133-        if (typeof config[attr] === 'object') {
/src/lib/setup.js:134:            const nextRoot = JSON.parse(JSON.stringify(root));
/src/lib/setup.js-135-            nextRoot.push(attr);
##############################################
/src/lib/setup.js-328-                dbConnect(params, (objects, states, isOffline) => {
/src/lib/setup.js:329:                    const config = JSON.parse(fs.readFileSync(require.resolve(tools.getConfigFileName())).toString());
/src/lib/setup.js-330-                    let exitCode = isOffline ? 100 : undefined;
##############################################
/src/lib/setup.js-464-                        if (fs.existsSync(tools.getConfigFileName())) {
/src/lib/setup.js:465:                            config = JSON.parse(fs.readFileSync(tools.getConfigFileName(), 'utf8'));
/src/lib/setup.js-466-                        } else {
##############################################
/src/lib/setup.js-1365-                                if (msg && (typeof msg === 'string') && (msg[0] === '{') && (msg[msg.length - 1] === '}')) {
/src/lib/setup.js:1366:                                    msg = JSON.parse(msg);
/src/lib/setup.js-1367-                                }
##############################################
/src/lib/setup.js-2319-                const config  = tools.getConfigFileName();
/src/lib/setup.js:2320:                const data    = JSON.parse(fs.readFileSync(config, 'utf8'));
/src/lib/setup.js-2321-
##############################################
/src/lib/setup.js-2523-                        }
/src/lib/setup.js:2524:                        _objects.readFile(adapt, parts.join('/'), (err, data) => {
/src/lib/setup.js-2525-                            if (err) console.error(err);
##############################################
/src/lib/setup.js-2548-                        const data = fs.readFileSync(toRead);
/src/lib/setup.js:2549:                        _objects.writeFile(adapt, path.join('/'), data, err => {
/src/lib/setup.js-2550-                            console.log('File "' + toRead + '" stored as "' + path.join('/') + '"');
##############################################
/src/lib/setup.js-2754-                        } else if (cmd === 'c' || cmd === 'connect') {
/src/lib/setup.js:2755:                            mh.connect(args[1], args[2], err => {
/src/lib/setup.js-2756-                                if (err) {
##############################################
/src/lib/setup.js-3050-
/src/lib/setup.js:3051:    const config = JSON.parse(fs.readFileSync(require.resolve(tools.getConfigFileName())).toString());
/src/lib/setup.js-3052-
##############################################
/src/lib/states/statesInRedis.js-136-                try {
/src/lib/states/statesInRedis.js:137:                    oldObj = JSON.parse(oldObj);
/src/lib/states/statesInRedis.js-138-                } catch (e) {
##############################################
/src/lib/states/statesInRedis.js-237-            if (typeof callback === 'function') {
/src/lib/states/statesInRedis.js:238:                callback(err, obj ? JSON.parse(obj) : null);
/src/lib/states/statesInRedis.js-239-            }
##############################################
/src/lib/states/statesInRedis.js-447-            log.silly(settings.namespace + ' redis get ' + id + ' ' + obj);
/src/lib/states/statesInRedis.js:448:            if (typeof callback === 'function') callback(obj ? JSON.parse(obj) : null);
/src/lib/states/statesInRedis.js-449-        });
##############################################
/src/lib/states/statesInRedis.js-470-            log.silly(settings.namespace + ' redis get ' + id + ' ' + obj);
/src/lib/states/statesInRedis.js:471:            if (typeof callback === 'function') callback(err, obj ? JSON.parse(obj) : null);
/src/lib/states/statesInRedis.js-472-        });
##############################################
/src/lib/states/statesInRedis.js-553-            settings.connection.options = settings.connection.options || {};
/src/lib/states/statesInRedis.js:554:            let opt = JSON.parse(JSON.stringify(settings.connection.options));
/src/lib/states/statesInRedis.js-555-            opt.return_buffers = true;
##############################################
/src/lib/states/statesInRedis.js-602-                    if (ioRegExp.test(channel)) {
/src/lib/states/statesInRedis.js:603:                        onChange(channel.slice(redisNamespace.length), message ? JSON.parse(message) : null);
/src/lib/states/statesInRedis.js-604-                    } else {
/src/lib/states/statesInRedis.js:605:                        onChange(channel, message ? JSON.parse(message) : null);
/src/lib/states/statesInRedis.js-606-                    }
##############################################
/src/lib/states/statesInMemClient.js-42-        if (!settings.connection.secure) {
/src/lib/states/statesInMemClient.js:43:            client = io.connect('http://'  + ((settings.connection.host && settings.connection.host !== '0.0.0.0') ? settings.connection.host : '127.0.0.1') + ':' + (settings.connection.port || 9000));
/src/lib/states/statesInMemClient.js-44-        } else {
/src/lib/states/statesInMemClient.js:45:            client = io.connect('https://' + ((settings.connection.host && settings.connection.host !== '0.0.0.0') ? settings.connection.host : '127.0.0.1') + ':' + (settings.connection.port || 9000));
/src/lib/states/statesInMemClient.js-46-        }
##############################################
/src/lib/states/statesInMemServer.js-143-            try {
/src/lib/states/statesInMemServer.js:144:                states = JSON.parse(fs.readFileSync(statesName).toString());
/src/lib/states/statesInMemServer.js-145-            } catch (e) {
##############################################
/src/lib/states/statesInMemServer.js-148-                    try {
/src/lib/states/statesInMemServer.js:149:                        states = JSON.parse(fs.readFileSync(statesName + '.bak').toString());
/src/lib/states/statesInMemServer.js-150-                    } catch (e) {
##############################################
/src/lib/states/statesInMemServer.js-159-            try {
/src/lib/states/statesInMemServer.js:160:                states = JSON.parse(fs.readFileSync(statesName + '.bak').toString());
/src/lib/states/statesInMemServer.js-161-            } catch (e) {
##############################################
/src/lib/states/statesInMemServer.js-978-                if (!settings.certificates) return;
/src/lib/states/statesInMemServer.js:979:                server.server = require('https').createServer(settings.certificates, function (req, res) {
/src/lib/states/statesInMemServer.js-980-                    res.writeHead(501);
##############################################
/src/lib/states/statesInMemServer.js-983-            } else {
/src/lib/states/statesInMemServer.js:984:                server.server = require('http').createServer(function (req, res) {
/src/lib/states/statesInMemServer.js-985-                    res.writeHead(501);
##############################################
/src/lib/winston-syslog.js-172-  //
/src/lib/winston-syslog.js:173:  this.connect(function (err) {
/src/lib/winston-syslog.js-174-    if (err) {
##############################################
/src/lib/winston-syslog.js-334-      self.retries++;
/src/lib/winston-syslog.js:335:      self.socket.connect(self.port, self.host);
/src/lib/winston-syslog.js-336-    }, interval * 1000);
##############################################
/src/lib/winston-syslog.js-351-
/src/lib/winston-syslog.js:352:  this.socket.connect(connectConfig);
/src/lib/winston-syslog.js-353-};
##############################################
/src/lib/scripts/scripts.js-32-        httpsGet(stableURL, function (err, body) {
/src/lib/scripts/scripts.js:33:            updateVersion(name, callback, JSON.parse(body));
/src/lib/scripts/scripts.js-34-        });
##############################################
/src/lib/scripts/scripts.js-55-    httpsGet(stableURL, function (err, body) {
/src/lib/scripts/scripts.js:56:        var sources = JSON.parse(body);
/src/lib/scripts/scripts.js-57-        var count = 0;
##############################################
/src/lib/letsencryptStore.js-157-                    if ('jwk' === format) {
/src/lib/letsencryptStore.js:158:                        return { privateKeyJwk: JSON.parse(key) };
/src/lib/letsencryptStore.js-159-                    }
##############################################
/src/lib/letsencryptStore.js-341-                        return fs.readFileAsync(path.join(args.accountsDir, node, 'regr.json'), 'utf8').then(function (text) {
/src/lib/letsencryptStore.js:342:                            var regr = JSON.parse(text);
/src/lib/letsencryptStore.js-343-                            regr.__accountId = node;
##############################################
/src/lib/letsencryptStore.js-380-            , _getAccountIdByPublicKey: function (keypair) {
/src/lib/letsencryptStore.js:381:                // we use insecure md5 - even though we know it's bad - because that's how the python client did
/src/lib/letsencryptStore.js-382-                return require('crypto').createHash('md5').update(keypair.publicKeyPem).digest('hex');
##############################################
/src/lib/letsencryptStore.js-441-                            try {
/src/lib/letsencryptStore.js:442:                                data = JSON.parse(text);
/src/lib/letsencryptStore.js-443-                            } catch(e) {
##############################################
/src/lib/adapter.js-65-if (fs.existsSync(getConfigFileName())) {
/src/lib/adapter.js:66:    config = JSON.parse(fs.readFileSync(getConfigFileName(), 'utf8'));
/src/lib/adapter.js-67-    if (!config.states)  config.states  = {type: 'file'};
##############################################
/src/lib/adapter.js-186-    if (fs.existsSync(this.adapterDir + '/package.json')) {
/src/lib/adapter.js:187:        this.pack = JSON.parse(fs.readFileSync(this.adapterDir + '/package.json', 'utf8'));
/src/lib/adapter.js-188-    } else {
##############################################
/src/lib/adapter.js-193-        if (fs.existsSync(this.adapterDir + '/io-package.json')) {
/src/lib/adapter.js:194:            this.ioPack = JSON.parse(fs.readFileSync(this.adapterDir + '/io-package.json', 'utf8'));
/src/lib/adapter.js-195-        } else {
##############################################
/src/lib/adapter.js-277-        that.getPortRunning = {port: port, callback: callback};
/src/lib/adapter.js:278:        const server = net.createServer();
/src/lib/adapter.js-279-        try {
##############################################
/src/lib/adapter.js-3069-
/src/lib/adapter.js:3070:            that.objects.unlink(_adapter, name, options, callback);
/src/lib/adapter.js-3071-        };
##############################################
/src/lib/adapter.js-3085-            }
/src/lib/adapter.js:3086:            that.objects.rename(_adapter, oldName, newName, options, callback);
/src/lib/adapter.js-3087-        };
##############################################
/src/lib/adapter.js-3111-         * <pre><code>
/src/lib/adapter.js:3112:         *      adapter.readFile('vis.0', '/main/vis-views.json', function (err, data) {
/src/lib/adapter.js-3113-         *        // All enums
##############################################
/src/lib/adapter.js-3138-
/src/lib/adapter.js:3139:            that.objects.readFile(_adapter, filename, options, callback);
/src/lib/adapter.js-3140-        };
##############################################
/src/lib/adapter.js-3150-         * <pre><code>
/src/lib/adapter.js:3151:         *      adapter.writeFile('vis.0', '/main/vis-views.json', function (err, data) {
/src/lib/adapter.js-3152-         *        // All enums
##############################################
/src/lib/adapter.js-3178-
/src/lib/adapter.js:3179:            that.objects.writeFile(_adapter, filename, data, options, callback);
/src/lib/adapter.js-3180-        };
##############################################
/src/lib/adapter.js-3587-                            try {
/src/lib/adapter.js:3588:                                that.patterns = JSON.parse(state.val);
/src/lib/adapter.js-3589-                                for (const p in that.patterns) {
##############################################
/src/lib/adapter.js-3621-                    try {
/src/lib/adapter.js:3622:                        subs = JSON.parse(state.val || '{}');
/src/lib/adapter.js-3623-                    } catch (e) {
##############################################
/src/lib/adapter.js-4524-                            for (let i = 0; i < keys.length; i++) {
/src/lib/adapter.js:4525:                                if (typeof arr[i] === 'string') arr[i] = JSON.parse(arr[i]);
/src/lib/adapter.js-4526-                                list[keys[i]] = arr[i] || {};
##############################################
/src/lib/adapter.js-4537-                        for (let i = 0; i < pattern.length; i++) {
/src/lib/adapter.js:4538:                            if (typeof arr[i] === 'string') arr[i] = JSON.parse(arr[i]);
/src/lib/adapter.js-4539-                            list[pattern[i]] = arr[i] || {};
##############################################
/src/lib/adapter.js-4590-                            for (let i = 0; i < res.rows.length; i++) {
/src/lib/adapter.js:4591:                                if (typeof arr[i] === 'string') arr[i] = JSON.parse(arr[i]);
/src/lib/adapter.js-4592-                                list[keys[i]] = arr[i] || null;
##############################################
/src/lib/adapter.js-4605-                                try {
/src/lib/adapter.js:4606:                                    arr[i] = JSON.parse(arr[i]);
/src/lib/adapter.js-4607-                                } catch (e) {
##############################################
/src/lib/adapter.js-4655-                            try {
/src/lib/adapter.js:4656:                                subs = JSON.parse(state.val);
/src/lib/adapter.js-4657-                            } catch (e) {
##############################################
/src/lib/adapter.js-4710-                            try {
/src/lib/adapter.js:4711:                                subs = JSON.parse(state.val);
/src/lib/adapter.js-4712-                            } catch (e) {
##############################################
/src/lib/logger.js-37-    if (typeof level === 'object') {
/src/lib/logger.js:38:        userOptions = JSON.parse(JSON.stringify(level));// don't use  Object.assign({}, level); because of deep clone
/src/lib/logger.js-39-
##############################################
/src/lib/multihostClient.js-90-            try {
/src/lib/multihostClient.js:91:                msg = JSON.parse(msg);
/src/lib/multihostClient.js-92-                if (onMessage) {
##############################################
/src/lib/letsencrypt.js-70-                // used for validation of requests like  http://example.com/.well-known/acme-challenge/BLABALBAL
/src/lib/letsencrypt.js:71:                require('http').createServer(lex.middleware(function redirectHttps(req, res) {
/src/lib/letsencrypt.js-72-                    res.setHeader('Location', 'https://' + req.headers.host + req.url);
##############################################
/src/lib/letsencrypt.js-79-
/src/lib/letsencrypt.js:80:            let options    = JSON.parse(JSON.stringify(certificates));
/src/lib/letsencrypt.js-81-            let defaultTls = tls.createSecureContext(certificates);
##############################################
/src/lib/letsencrypt.js-171-
/src/lib/letsencrypt.js:172:            server = require('https').createServer(options, lex.middleware(app));
/src/lib/letsencrypt.js-173-        } else {
/src/lib/letsencrypt.js:174:            server = require('https').createServer(certificates, app);
/src/lib/letsencrypt.js-175-        }
/src/lib/letsencrypt.js-176-    } else {
/src/lib/letsencrypt.js:177:        server = require('http').createServer(app);
/src/lib/letsencrypt.js-178-    }
##############################################
/src/lib/www/js/visUtils.js-99-                        if (operations[0].formula) {
/src/lib/www/js/visUtils.js:100:                            var n = JSON.parse(JSON.stringify(operations[0]));
/src/lib/www/js/visUtils.js-101-                            n.formula = parts[u];
##############################################
/src/lib/vis/states.js-15-    // calculate datapoints in one project
/src/lib/vis/states.js:16:    objects.readFile('vis.' + instance, '/' + project.file + '/vis-views.json', function (err, data) {
/src/lib/vis/states.js-17-        var json;
/src/lib/vis/states.js-18-        try {
/src/lib/vis/states.js:19:            json = JSON.parse(data);
/src/lib/vis/states.js-20-        } catch (e) {
##############################################
/src/lib/states.js-3-var getConfigFileName = require(__dirname + '/tools').getConfigFileName;
/src/lib/states.js:4:var config = JSON.parse(require('fs').readFileSync(getConfigFileName(), 'utf8'));
/src/lib/states.js-5-if (!config.states) config.states = {type: 'file'};
##############################################
/src/lib/setup/setupUpgrade.js-70-                try {
/src/lib/setup/setupUpgrade.js:71:                    iopack = JSON.parse(fs.readFileSync(__dirname + '/../../io-package.json', 'utf8'));
/src/lib/setup/setupUpgrade.js-72-                } catch (e) {
##############################################
/src/lib/setup/setupUpgrade.js-78-                try {
/src/lib/setup/setupUpgrade.js:79:                    iopack = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json', 'utf8'));
/src/lib/setup/setupUpgrade.js-80-                } catch (e) {
##############################################
/src/lib/setup/setupUpgrade.js-106-                try {
/src/lib/setup/setupUpgrade.js:107:                    iopack = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json', 'utf8'));
/src/lib/setup/setupUpgrade.js-108-                } catch (e) {
##############################################
/src/lib/setup/setupUpgrade.js-257-
/src/lib/setup/setupUpgrade.js:258:        const installed = JSON.parse(fs.readFileSync(__dirname + '/../../io-package.json', 'utf8'));
/src/lib/setup/setupUpgrade.js-259-        if (!installed || !installed.common || !installed.common.version) {
##############################################
/src/lib/setup/setupUpgrade.js-332-            if (configData === null && fs.existsSync(configFile)) {
/src/lib/setup/setupUpgrade.js:333:                configData = JSON.parse(fs.readFileSync(configFile));
/src/lib/setup/setupUpgrade.js-334-            }
##############################################
/src/lib/setup/setupUpload.js-67-        try {
/src/lib/setup/setupUpload.js:68:            let adapterConf = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json').toString());
/src/lib/setup/setupUpload.js-69-            if (adapterConf.common.restartAdapters) {
##############################################
/src/lib/setup/setupUpload.js-176-                if (!error && response.statusCode === 200) {
/src/lib/setup/setupUpload.js:177:                    objects.writeFile(adapter, target, body, err => {
/src/lib/setup/setupUpload.js-178-                        if (err) console.error(err);
##############################################
/src/lib/setup/setupUpload.js-187-            try {
/src/lib/setup/setupUpload.js:188:                objects.writeFile(adapter, target, fs.readFileSync(source), err => {
/src/lib/setup/setupUpload.js-189-                    if (err) console.error(err);
##############################################
/src/lib/setup/setupUpload.js-203-            const file = files.shift();
/src/lib/setup/setupUpload.js:204:            objects.unlink(file.adapter, file.path, err => {
/src/lib/setup/setupUpload.js-205-                err && console.error('Cannot delete file "' + file.path + '": ' + err);
##############################################
/src/lib/setup/setupUpload.js-380-
/src/lib/setup/setupUpload.js:381:                fs.createReadStream(file).pipe(
/src/lib/setup/setupUpload.js-382-                    objects.insert(id, attName, null, mimeType, {
##############################################
/src/lib/setup/setupUpload.js-522-                        objects.getObject(res.rows[i].id, (err, _obj) => {
/src/lib/setup/setupUpload.js:523:                            let newObject = JSON.parse(JSON.stringify(_obj));
/src/lib/setup/setupUpload.js-524-
##############################################
/src/lib/setup/setupUpload.js-597-            try {
/src/lib/setup/setupUpload.js:598:                iopack = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json', 'utf8'));
/src/lib/setup/setupUpload.js-599-            } catch (e) {
##############################################
/src/lib/setup/setupBackup.js-37-    function _copyFile(id, srcPath, destPath, callback) {
/src/lib/setup/setupBackup.js:38:        objects.readFile(id, srcPath, '', (err, data) => {
/src/lib/setup/setupBackup.js-39-            if (data) fs.writeFileSync(destPath, data);
##############################################
/src/lib/setup/setupBackup.js-200-            if (fs.existsSync(tools.getConfigFileName())) {
/src/lib/setup/setupBackup.js:201:                result.config = JSON.parse(fs.readFileSync(tools.getConfigFileName(), 'utf8'));
/src/lib/setup/setupBackup.js-202-            }
##############################################
/src/lib/setup/setupBackup.js-401-                        if (fs.existsSync(adapterDir + '/io-package.json')) {
/src/lib/setup/setupBackup.js:402:                            pkg = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json', 'utf8'));
/src/lib/setup/setupBackup.js-403-                        }
##############################################
/src/lib/setup/setupBackup.js-450-                called = true;
/src/lib/setup/setupBackup.js:451:                objects.writeFile(adapter, _path, fs.readFileSync(root + path + '/' + files[i]), null, err => {
/src/lib/setup/setupBackup.js-452-                    if (err) console.error('Error: ' + err);
##############################################
/src/lib/setup/setupBackup.js-480-        try {
/src/lib/setup/setupBackup.js:481:            restore = JSON.parse(data);
/src/lib/setup/setupBackup.js-482-        } catch (e) {
##############################################
/src/lib/setup/setupBackup.js-512-                            // Reload host objects
/src/lib/setup/setupBackup.js:513:                            const packageIO = JSON.parse(fs.readFileSync(__dirname + '/../../io-package.json', 'utf8'));
/src/lib/setup/setupBackup.js-514-                            reloadAdapterObject(0, packageIO ? packageIO.objects : null, () => {
##############################################
/src/lib/setup/setupMultihost.js-17-            if (fs.existsSync(configName)) {
/src/lib/setup/setupMultihost.js:18:                config = JSON.parse(fs.readFileSync(configName, 'utf8'));
/src/lib/setup/setupMultihost.js-19-            } else {
##############################################
/src/lib/setup/setupMultihost.js-199-    function connect(mhClient, ip, pass, callback) {
/src/lib/setup/setupMultihost.js:200:        mhClient.connect(ip, pass, function (err, oObjects, oStates, ipHost) {
/src/lib/setup/setupMultihost.js-201-            if (err) {
##############################################
/src/lib/setup/setupVendor.js-13-            try {
/src/lib/setup/setupVendor.js:14:                data = JSON.parse(fs.readFileSync(file).toString('utf8'));
/src/lib/setup/setupVendor.js-15-            } catch (e) {
##############################################
/src/lib/setup/setupVendor.js-94-        if (data.vendor) {
/src/lib/setup/setupVendor.js:95:            const vendor = JSON.parse(JSON.stringify(data.vendor));
/src/lib/setup/setupVendor.js:96:            data._vendor = JSON.parse(JSON.stringify(vendor));
/src/lib/setup/setupVendor.js-97-            data.vendor  = null;
##############################################
/src/lib/setup/setupInstall.js-161-            try {
/src/lib/setup/setupInstall.js:162:                const sourcesDist = JSON.parse(fs.readFileSync(__dirname + '/../../conf/sources-dist.json', 'utf8'));
/src/lib/setup/setupInstall.js-163-                sources[packetName] = sourcesDist[packetName];
##############################################
/src/lib/setup/setupInstall.js-232-                        try {
/src/lib/setup/setupInstall.js:233:                            packetIo = JSON.parse(fs.readFileSync(source + '/io-package.json', 'utf8'));
/src/lib/setup/setupInstall.js-234-                        } catch (e) {
##############################################
/src/lib/setup/setupInstall.js-451-            try {
/src/lib/setup/setupInstall.js:452:                adapterConf = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json').toString());
/src/lib/setup/setupInstall.js-453-            } catch (e) {
##############################################
/src/lib/setup/setupInstall.js-495-                            if (version !== null) {
/src/lib/setup/setupInstall.js:496:                                const iopkg_ = JSON.parse(fs.readFileSync(__dirname + '/../../package.json', 'utf8'));
/src/lib/setup/setupInstall.js-497-                                if (!semver.satisfies(iopkg_.version, version)) {
##############################################
/src/lib/setup/setupInstall.js-512-                                    if (version !== null) {
/src/lib/setup/setupInstall.js:513:                                        // var iopkg = JSON.parse(fs.readFileSync(__dirname + '/../../package.json'));
/src/lib/setup/setupInstall.js-514-                                        if (!semver.satisfies(objs.rows[t].value.common.version, version)) {
##############################################
/src/lib/setup/setupInstall.js-599-        try {
/src/lib/setup/setupInstall.js:600:            adapterConf = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json').toString());
/src/lib/setup/setupInstall.js-601-        } catch (e) {
##############################################
/src/lib/setup/setupInstall.js-769-                        const instanceObj = doc;
/src/lib/setup/setupInstall.js:770:                        doc = JSON.parse(JSON.stringify(doc));
/src/lib/setup/setupInstall.js-771-
##############################################
/src/lib/setup/setupInstall.js-965-                            try {
/src/lib/setup/setupInstall.js:966:                                adapterConf = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json').toString());
/src/lib/setup/setupInstall.js-967-                            } catch (e) {
##############################################
/src/lib/setup/setupVisDebug.js-31-                console.log('Upload "' + dir + '/' + dirs[d] + '"');
/src/lib/setup/setupVisDebug.js:32:                objects.writeFile(adapter, path  + '/' + dirs[d], fs.readFileSync(dir + '/' + dirs[d]), function () {
/src/lib/setup/setupVisDebug.js-33-                    if (!--count && callback) callback();
##############################################
/src/lib/setup/setupVisDebug.js-88-        var file = fs.readFileSync(visDir + '/www/index.html.original');
/src/lib/setup/setupVisDebug.js:89:        objects.writeFile('vis', 'index.html', file);
/src/lib/setup/setupVisDebug.js-90-
##############################################
/src/lib/setup/setupVisDebug.js-92-        file = fs.readFileSync(visDir + '/www/edit.html.original');
/src/lib/setup/setupVisDebug.js:93:        objects.writeFile('vis', 'edit.html', file);
/src/lib/setup/setupVisDebug.js-94-
##############################################
/src/lib/setup/setupVisDebug.js-99-        file = file.replace('# dev build '+ n, '# dev build ' + (parseInt(n, 10) + 1));
/src/lib/setup/setupVisDebug.js:100:        objects.writeFile('vis', 'cache.manifest', file);
/src/lib/setup/setupVisDebug.js-101-
/src/lib/setup/setupVisDebug.js-102-        file = fs.readFileSync(tools.getConfigFileName(), 'utf8');
/src/lib/setup/setupVisDebug.js:103:        file = JSON.parse(file);
/src/lib/setup/setupVisDebug.js-104-
##############################################
/src/lib/setup/setupVisDebug.js-117-            count++;
/src/lib/setup/setupVisDebug.js:118:            objects.readFile('vis', 'js/config.js', null, function (err, data) {
/src/lib/setup/setupVisDebug.js-119-                data = data.replace(/[\r\n]/g, '');
/src/lib/setup/setupVisDebug.js:120:                var json = JSON.parse(data.match(/"widgetSets":\s(.*)};/)[1]);
/src/lib/setup/setupVisDebug.js-121-                var found = false;
##############################################
/src/lib/setup/setupVisDebug.js-130-                    console.log('Modify config.js');
/src/lib/setup/setupVisDebug.js:131:                    var pckg = JSON.parse(fs.readFileSync(adapterDir + '/io-package.json').toString());
/src/lib/setup/setupVisDebug.js-132-                    if (pckg.native && pckg.native.dependencies && pckg.native.dependencies.length){
##############################################
/src/lib/setup/setupVisDebug.js-142-
/src/lib/setup/setupVisDebug.js:143:                    objects.writeFile('vis', 'js/config.js', data, function () {
/src/lib/setup/setupVisDebug.js-144-                        // upload all files into vis
##############################################
/src/lib/setup/setupSetup.js-81-            objects = _objects;
/src/lib/setup/setupSetup.js:82:            const iopkg = JSON.parse(fs.readFileSync(__dirname + '/../../io-package.json', 'utf8'));
/src/lib/setup/setupSetup.js-83-            if (checkCertificateOnly) {
##############################################
/src/lib/zipFiles.js-28-function _addFile(objects, id, name, options, zip, files, callback) {
/src/lib/zipFiles.js:29:    objects.readFile(id, name, options, function (err, data, mime) {
/src/lib/zipFiles.js-30-        if (!zip) {
##############################################
/src/lib/zipFiles.js-157-            try {
/src/lib/zipFiles.js:158:                data = options.parse(name, filename, data, options ? options.settings : null);
/src/lib/zipFiles.js-159-            } catch (e) {
##############################################
/src/lib/zipFiles.js-166-        _checkDir(objects, id, '', parts, options, function () {
/src/lib/zipFiles.js:167:            objects.writeFile(id, name + filename, data, options, function (err) {
/src/lib/zipFiles.js-168-                callback(_err || err);
##############################################
/src/lib/zipFiles.js-284-            try {
/src/lib/zipFiles.js:285:                data = options.parse(data, options ? options.settings : null);
/src/lib/zipFiles.js-286-            } catch (e) {
##############################################
/src/lib/zipFiles.js-294-            try {
/src/lib/zipFiles.js:295:                data.data = JSON.parse(data.data);
/src/lib/zipFiles.js-296-            } catch (e) {
##############################################
/src/lib/uploadFiles.js-101-
/src/lib/uploadFiles.js:102:        fs.createReadStream(file).pipe(
/src/lib/uploadFiles.js-103-            db.insert(yargs.argv.object, attName, null, mimeType, {
##############################################
/src/lib/tools.js-31-                    if (originalObj[attr] !== undefined) {
/src/lib/tools.js:32:                        newObj[attr] = JSON.parse(JSON.stringify(originalObj[attr]));
/src/lib/tools.js-33-                    } else {
##############################################
/src/lib/tools.js-74-            } else {
/src/lib/tools.js:75:                oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));
/src/lib/tools.js-76-                delete oldObject.nonEdit.password;
##############################################
/src/lib/tools.js-91-    } else if (newObject.nonEdit) {
/src/lib/tools.js:92:        oldObject.nonEdit = JSON.parse(JSON.stringify(newObject.nonEdit));
/src/lib/tools.js-93-        if (newObject.nonEdit.password) {
##############################################
/src/lib/tools.js-448-                try {
/src/lib/tools.js:449:                    sources = JSON.parse(body);
/src/lib/tools.js-450-                } catch (e) {
##############################################
/src/lib/tools.js-463-                try {
/src/lib/tools.js:464:                    sources = JSON.parse(fs.readFileSync(urlOrPath, 'utf8'));
/src/lib/tools.js-465-                } catch (e) {
##############################################
/src/lib/tools.js-473-                try {
/src/lib/tools.js:474:                    sources = JSON.parse(fs.readFileSync(__dirname + '/../' + urlOrPath, 'utf8'));
/src/lib/tools.js-475-                }catch (e) {
##############################################
/src/lib/tools.js-482-                try {
/src/lib/tools.js:483:                    sources = JSON.parse(fs.readFileSync(__dirname + '/../tmp/' + urlOrPath, 'utf8'));
/src/lib/tools.js-484-                } catch (e) {
##############################################
/src/lib/tools.js-506-                if (regExp.test(dirs[i]) && fs.existsSync(fileIoName)) {
/src/lib/tools.js:507:                    const ioPackage = JSON.parse(fs.readFileSync(fileIoName, 'utf8'));
/src/lib/tools.js:508:                    const package_  = fs.existsSync(fileName) ? JSON.parse(fs.readFileSync(fileName, 'utf8')) : {};
/src/lib/tools.js-509-
##############################################
/src/lib/tools.js-535-    // Get info about host
/src/lib/tools.js:536:    const ioPackage = JSON.parse(fs.readFileSync(path + 'io-package.json', 'utf8'));
/src/lib/tools.js:537:    const package_  = fs.existsSync(path + 'package.json') ? JSON.parse(fs.readFileSync(path + 'package.json', 'utf8')) : {};
/src/lib/tools.js-538-    const regExp    = new RegExp('^' + module.exports.appName + '\\.', 'i');
##############################################
/src/lib/tools.js-741-                try {
/src/lib/tools.js:742:                    json = JSON.parse(body);
/src/lib/tools.js-743-                } catch (e) {
##############################################
/src/lib/tools.js-795-        try {
/src/lib/tools.js:796:            sources = JSON.parse(fs.readFileSync(getDefaultDataDir() + 'sources.json', 'utf8'));
/src/lib/tools.js-797-        } catch (e) {
##############################################
/src/lib/tools.js-800-        try {
/src/lib/tools.js:801:            const sourcesDist = JSON.parse(fs.readFileSync(__dirname + '/../conf/sources-dist.json', 'utf8'));
/src/lib/tools.js-802-            sources = extend(true, sourcesDist, sources);
##############################################
/src/lib/tools.js-913-        const configName = getConfigFileName();
/src/lib/tools.js:914:        const config = JSON.parse(fs.readFileSync(configName, 'utf8'));
/src/lib/tools.js-915-        return config.system ? config.system.hostname || require('os').hostname() : require('os').hostname();
##############################################
/src/lib/tools.js-1359-                // create the file
/src/lib/tools.js:1360:                fs.writeFile(npmrcPath, 'package-lock=false\n', {encoding: 'utf8'}, callback);
/src/lib/tools.js-1361-                return;
