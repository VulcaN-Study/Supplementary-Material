<report_mosca>
 <Path>/src/controller.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 368 -              disconnectTimeout = setTimeout(function () {

 Line: 406 -                                      procs[id].restartTimer = setTimeout(function (_id) {

 Line: 447 -      setInterval(reportStatus, config.system.statisticsInterval);

 Line: 854 -          setTimeout(function () {

 Line: 1341 -                      setTimeout(function () {

 Line: 1469 -                          timeout = setTimeout(function () {

 Line: 1747 -                              setTimeout(function () {

 Line: 1873 -                      procs[id].restartTimer = setTimeout(function (_id) {

 Line: 1901 -                      procs[id].restartTimer = setTimeout(function (_id) {

 Line: 2012 -          storeTimer = setTimeout(function () {

 Line: 2063 -                  setTimeout(() => {

 Line: 2070 -                  setTimeout(() => {

 Line: 2077 -              setTimeout(() => {

 Line: 2084 -          setTimeout(() => {

 Line: 2319 -                          procs[id].restartTimer = setTimeout(function (_id) {

 Line: 2507 -                      timeout = setTimeout(function () {

 Line: 2585 -   setTimeout(function () {

 Line: 2587 -   disconnectTimeout = setTimeout(function () {

 Line: 2604 -   setTimeout(function () {

 Line: 2632 -              setTimeout(waitForInstances, 200);

 Line: 2673 -      timeout = setTimeout(function () {

 Line: 2704 -              setTimeout(function () {

 Line: 2846 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/multihostServer.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 184 -                  initTimer = setTimeout(function () {

 Line: 195 -                  initTimer = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/objects/objectsInMemServer.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 271 -              writeTimer = setTimeout(function () {

 Line: 2209 -              if (!configTimer) configTimer = setTimeout(saveConfig, 5000);

 Line: 2280 -              if (!configTimer) configTimer = setTimeout(saveConfig, 5000);

 Line: 2610 -              configTimer = setTimeout(saveConfig, 5000);

 Line: 2684 -                  configTimer = setTimeout(saveConfig, 5000);

 Line: 2742 -          let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');

 Line: 2996 -          if (!configTimer) configTimer = setTimeout(saveConfig, 5000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/objects/objectsInMemServer.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 48 -  const ACCESS_DELETE      = 'delete';

 Line: 1884 -              if (flag === ACCESS_DELETE && !options.acl.users.delete) {// delete

 Line: 1898 -              if (flag === ACCESS_DELETE) flag = ACCESS_WRITE; // write

 Line: 1912 -          if (flag === ACCESS_DELETE && !options.acl.object.delete) {// delete

 Line: 1921 -          if (flag === ACCESS_DELETE) flag = ACCESS_WRITE; // write

 Line: 2712 -          checkObjectRights(id, options, ACCESS_DELETE, (err, options) => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/objects/objectsInMemClient.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 128 -          connectionTimeout = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/objects/objectsInRedis.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1547 -                  let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');

 Line: 1608 -                          let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 449 -                          setTimeout(() => callback(), 2000)

 Line: 1118 -                              setTimeout(() => callback(), 1000);

 Line: 1165 -                              setTimeout(() => callback(), 1000);

 Line: 1194 -                              setTimeout(() => callback(), 1000);

 Line: 1585 -                                              setTimeout(() => callback(), 1000);

 Line: 1616 -                              setTimeout(() => callback(), 1000);

 Line: 1665 -                                              setTimeout(() => callback(), 1000);

 Line: 1697 -                              setTimeout(() => callback(), 1000);

 Line: 1756 -                                              setTimeout(() => callback(), 1000);

 Line: 1788 -                              setTimeout(() => callback(), 1000);

 Line: 1854 -                                              setTimeout(() => callback(), 1000);

 Line: 1888 -                              setTimeout(() => callback(), 1000);

 Line: 2616 -                              setTimeout(() => callback(), 200);

 Line: 3063 -      setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/states/statesInMemClient.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 97 -          connectionTimeout = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/states/statesInMemServer.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 688 -                  expiresInterval = setInterval(expiresCheck, 5000);

 Line: 697 -          if (!stateTimer) stateTimer = setTimeout(saveState, 30000);

 Line: 927 -              expiresInterval = setInterval(expiresCheck, 5000);

 Line: 946 -              stateTimer = setTimeout(saveState, 30000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/winston-syslog.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 246 -        setTimeout(_close, 200 * attempt);

 Line: 332 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/preinstallCheck.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 29 -              let timer = setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/adapter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 285 -                  setTimeout(() => that.getPort(port + 1, callback), 100);

 Line: 653 -                          setTimeout(stop, 2000, false, true);

 Line: 938 -                          setTimeout(() => process.exit(), 4000);

 Line: 5077 -                              that.logOffTimer = setTimeout(() => {

 Line: 5124 -                      setTimeout(() => process.exit(3), 1000);

 Line: 5254 -              reportInterval = setInterval(reportStatus, config.system.statisticsInterval);

 Line: 5361 -              setTimeout(function () {

 Line: 5370 -                      setTimeout(() => {

 Line: 5417 -              setTimeout(() => process.exit(6), 1000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/adapter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 59 -  // const ACCESS_DELETE      = 'delete';

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/logger.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 172 -              this._fileChecker = setInterval(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/multihostClient.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 68 -          timer = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupUpload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 318 -                  setTimeout(_adapter => {

 Line: 389 -                          setTimeout(upload, 50, adapter);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupMultihost.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 182 -                          process.stdout.write('\x1B[2K\x1B[200D' + query + new Array(rl.line.length + 1).join('*'));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupInstall.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1010 -                                      setTimeout(setObjs, 25);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupList.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 267 -                          setTimeout(processExit, 1000, null);

 Line: 292 -                              setTimeout(processExit, 1000, null);

 Line: 318 -                          setTimeout(processExit, 1000, null);

 Line: 370 -                              setTimeout(processExit, 1000, null);

 Line: 406 -                              setTimeout(processExit, 1000, null);

 Line: 530 -                          setTimeout(processExit, 1000, null);

 Line: 572 -                                  setTimeout(processExit, 1000, null);

 Line: 600 -                          setTimeout(processExit, 1000, null);

 Line: 623 -                              setTimeout(processExit, 1000, null);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupVisDebug.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 148 -                                  setTimeout(function () {

 Line: 160 -                              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/setup/setupSetup.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 51 -                          setTimeout(dbSetup, 25, iopkg, callback);

 Line: 55 -                      setTimeout(dbSetup, 25, iopkg, callback);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/uploadFiles.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 110 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/tools.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 667 -          sources._helper.timeout = setTimeout(function () {

 Line: 946 -          let timeout = setTimeout(() => {

</Result>
</report_mosca>

