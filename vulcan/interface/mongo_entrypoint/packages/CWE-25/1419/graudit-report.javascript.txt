/src/lib/objects/objectsInMemServer.js-2742-
/src/lib/objects/objectsInMemServer.js:2743:        let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInMemServer.js-2744-
##############################################
/src/lib/objects/objectsInRedis.js-1547-            client.mget(keys, (err, objs) => {
/src/lib/objects/objectsInRedis.js:1548:                let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInRedis.js-1549-
##############################################
/src/lib/objects/objectsInRedis.js-1608-                        const func = obj.views[search];
/src/lib/objects/objectsInRedis.js:1609:                        let f = eval('(' + func.map.replace(/emit/g, '_emit_') + ')');
/src/lib/objects/objectsInRedis.js-1610-                        let result = {rows: []};
##############################################
/src/lib/letsencryptStore.js-380-            , _getAccountIdByPublicKey: function (keypair) {
/src/lib/letsencryptStore.js:381:                // we use insecure md5 - even though we know it's bad - because that's how the python client did
/src/lib/letsencryptStore.js-382-                return require('crypto').createHash('md5').update(keypair.publicKeyPem).digest('hex');
