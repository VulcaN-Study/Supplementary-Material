/src/dist/build/profiler/profiler.js:1:"use strict";exports.__esModule=true;exports.createTrace=void 0;var _path=_interopRequireDefault(require("path"));var _mkdirp=_interopRequireDefault(require("mkdirp"));var _fs=_interopRequireDefault(require("fs"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}let inspector;try{inspector=require('inspector');}catch(e){console.log('Unable to CPU profile in < node 8.0');}class Profiler{constructor(inspector){this.session=undefined;this.inspector=inspector;}hasSession(){return this.session!==undefined;}startProfiling(){if(this.inspector===undefined){return Promise.resolve();}try{this.session=new inspector.Session();this.session.connect();}catch(_){this.session=undefined;return Promise.resolve();}return Promise.all([this.sendCommand('Profiler.setSamplingInterval',{interval:100}),this.sendCommand('Profiler.enable'),this.sendCommand('Profiler.start')]);}sendCommand(method,params){if(this.hasSession()){return new Promise((resolve,reject)=>{return this.session.post(method,params,(err,params)=>{if(err!==null){reject(err);}else{resolve(params);}});});}else{return Promise.resolve();}}destroy(){if(this.hasSession()){this.session.disconnect();}return Promise.resolve();}stopProfiling(){return this.sendCommand('Profiler.stop');}}const{Tracer}=require('chrome-trace-event');/**
/src/dist/build/profiler/profiler.js-2- * an object that wraps Tracer and Profiler with a counter
