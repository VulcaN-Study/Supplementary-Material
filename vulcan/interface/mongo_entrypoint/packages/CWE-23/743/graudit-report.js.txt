/src/bin/knight-26-    .option('-p, --port [port]', '[port] to use, defaults to 4000')
/src/bin/knight:27:    .parse(process.argv)
/src/bin/knight-28-
##############################################
/src/lib/create-server.js-8-module.exports = function (file, port) {
/src/lib/create-server.js:9:    const server = http.createServer((req, res) => {
/src/lib/create-server.js:10:        const parsedUrl = url.parse(req.url)
/src/lib/create-server.js-11-        let pathname = `.${parsedUrl.pathname}`
##############################################
/src/lib/create-server.js-23-            // read file from file system
/src/lib/create-server.js:24:            fs.readFile(pathname, (err, data) => {
/src/lib/create-server.js-25-                if (err) {
##############################################
/src/lib/create-server.js-30-                    // based on the URL path, extract the file extention. e.g. .js, .doc, ...
/src/lib/create-server.js:31:                    const ext = path.parse(pathname).ext
/src/lib/create-server.js-32-                    // if the file is found, set Content-type and send data
