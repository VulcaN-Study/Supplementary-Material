/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs:19:package <%= packageName %>.cucumber
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs-23-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs:24:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberIT.kt.ejs-25-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/StepDefs.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/StepDefs.kt.ejs:19:package <%= packageName %>.cucumber.stepdefs
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/StepDefs.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs:19:package <%= packageName %>.cucumber.stepdefs
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs-24-
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs:25:import <%= packageName %>.web.rest.UserResource
/src/generators/server/templates/src/test/kotlin/package/cucumber/stepdefs/UserStepDefs.kt.ejs-26-
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs:19:package <%= packageName %>.cucumber
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs-22-import io.cucumber.java.Before
##############################################
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs-28-@WebAppConfiguration
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs:29:@ContextConfiguration(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/cucumber/CucumberContextConfiguration.kt.ejs-30-class CucumberContextConfiguration {
##############################################
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs-19-
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs:20:package <%= packageName %>
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs-21-
##############################################
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs-33-        if(!started.get()) {
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs:34:            val redis = KGenericContainer("<%= DOCKER_REDIS %>")
/src/generators/server/templates/src/test/kotlin/package/RedisTestContainerExtension.kt.ejs-35-                    .withExposedPorts(6379)
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/jwt/TokenProviderTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/jwt/TokenProviderTest.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/test/kotlin/package/security/jwt/TokenProviderTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/security/jwt/TokenProviderTest.kt.ejs:21:import <%= packageName %>.security.ANONYMOUS
/src/generators/server/templates/src/test/kotlin/package/security/jwt/TokenProviderTest.kt.ejs-22-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/jwt/JWTFilterTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/jwt/JWTFilterTest.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/test/kotlin/package/security/jwt/JWTFilterTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/security/jwt/JWTFilterTest.kt.ejs:21:import <%= packageName %>.security.USER
/src/generators/server/templates/src/test/kotlin/package/security/jwt/JWTFilterTest.kt.ejs-22-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieCollectionTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieCollectionTest.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieCollectionTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs:22:import <%= packageName %>.web.filter.RefreshTokenFilter
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2AuthenticationServiceTest.kt.ejs-23-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/AudienceValidatorTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/AudienceValidatorTest.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/AudienceValidatorTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2CookieHelperTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2CookieHelperTest.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2CookieHelperTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2CookieHelperTest.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/OAuth2CookieHelperTest.kt.ejs-22-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieTokenExtractorTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieTokenExtractorTest.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/test/kotlin/package/security/oauth2/CookieTokenExtractorTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-21-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:22:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-24-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:25:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-27-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:28:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-29-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:30:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-31-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:32:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-33-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:34:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:35:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-36-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-78- */
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:79:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-80-<%_ if (databaseType === 'neo4j') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-108-        <%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:109:        val userOne = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-110-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-125-
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:126:        val userTwo = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-127-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-142-
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs:143:        val userThree = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/security/DomainUserDetailsServiceIT.kt.ejs-144-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/SecurityUtilsUnitTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/SecurityUtilsUnitTest.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/test/kotlin/package/security/SecurityUtilsUnitTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/security/OAuth2TokenMockUtil.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/security/OAuth2TokenMockUtil.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/test/kotlin/package/security/OAuth2TokenMockUtil.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/WithUnauthenticatedMockUser.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/WithUnauthenticatedMockUser.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/WithUnauthenticatedMockUser.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-21-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:22:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-24-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:25:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:27:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-28-<%_ if (authenticationType === 'uaa') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:29:import <%= packageName %>.config.SecurityBeanOverrideConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-30-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-31-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:32:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-33-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-60-<%_ if (authenticationType === 'uaa' && applicationType !== 'uaa') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:61:@SpringBootTest(classes = [SecurityBeanOverrideConfiguration::class, <%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-62-<%_ } else if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:63:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-64-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:65:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-66-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-186-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:187:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-188-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs:189:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorIT.kt.ejs-190-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-48-    @PostMapping("/method-argument")
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs:49:    fun methodArgument(@Valid @RequestBody test<%= dtoSuffix %>: Test<%= dtoSuffix %> ) = Unit
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-50-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-68-
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs:69:    class Test<%= dtoSuffix %> {
/src/generators/server/templates/src/test/kotlin/package/web/rest/errors/ExceptionTranslatorTestController.kt.ejs-70-        @field:NotNull
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-22-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:23:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-25-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:26:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:28:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:29:import <%= packageName %>.security.USER
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-30-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-69- */
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs:70:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/LogoutResourceIT.kt.ejs-71-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:21:import <%= packageName %>.config.KafkaProperties
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-22-import org.apache.kafka.clients.consumer.ConsumerRecord
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-56-@TestInstance(TestInstance.Lifecycle.PER_CLASS)
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:57:class <%= upperFirstCamelCase(baseName) %>KafkaResourceIT {
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-58-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-79-        // See discussion at https://github.com/jhipster/generator-jhipster/issues/11544#issuecomment-609065206
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:80:        kafkaContainer = KafkaContainer("<%= KAFKA_VERSION %>").withNetwork(null)
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-81-        kafkaContainer.start()
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-94-
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:95:        val kafkaResource = <%= upperFirstCamelCase(baseName) %>KafkaResource(kafkaProperties)
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-96-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-109-        <%_ if (!reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:110:        restMockMvc.perform(post("/api/<%= dasherizedBaseName %>-kafka/publish/topic-produce?message=value-produce"))
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-111-            .andExpect(status().isOk())
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-140-        <%_ if (!reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs:141:        val mvcResult = restMockMvc.perform(get("/api/<%= dasherizedBaseName %>-kafka/consume?topic=topic-consume"))
/src/generators/server/templates/src/test/kotlin/package/web/rest/KafkaResourceIT.kt.ejs-142-            .andExpect(status().isOk())
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-22-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:23:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-25-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:26:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-28-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:29:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-30-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:31:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:32:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:33:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:34:import <%= packageName %>.security.USER
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:35:import <%= packageName %>.service.UserService
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-36-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-81-import org.springframework.security.test.context.support.WithMockUser
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:82:import <%= packageName %>.web.rest.TEST_USER_LOGIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-83-import org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-88-<%_ if (reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:89:import <%= packageName %>.web.rest.ID_TOKEN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-90-import org.springframework.security.test.web.reactive.server.SecurityMockServerConfigurers.*
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-101-@WithMockUser(value = TEST_USER_LOGIN)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:102:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-103-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-176-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:177:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-178-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-179-<%_ if (reactive && searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:180:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-181-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-182-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:183:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-184-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:185:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:186:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-187-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-217-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:218:import <%= packageName %>.web.rest.TEST_USER_LOGIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-219-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-228-@WithMockUser(value = TEST_USER_LOGIN)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:229:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-230-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-291-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:292:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-293-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-294-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:295:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-296-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:297:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:298:import <%= packageName %>.config.DEFAULT_LANGUAGE
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-299-<%_ if (authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:300:import <%= packageName %>.domain.PersistentToken
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-301-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:302:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-303-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-304-<%_ if (databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:305:import <%= packageName %>.repository.AuthorityRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-306-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-307-<%_ if (authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:308:import <%= packageName %>.repository.PersistentTokenRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-309-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:310:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-311-<%_ if (reactive && searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:312:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-313-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:314:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:315:import <%= packageName %>.security.USER
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:316:import <%= packageName %>.service.UserService
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:317:import <%= packageName %>.service.dto.PasswordChangeDTO
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:318:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:319:import <%= packageName %>.web.rest.vm.KeyAndPasswordVM
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:320:import <%= packageName %>.web.rest.vm.ManagedUserVM
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-321-import org.apache.commons.lang3.RandomStringUtils
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-376-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:377:import <%= packageName %>.web.rest.TEST_USER_LOGIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-378-<%_ if (!reactive) { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-398-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:399:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-400-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-410-@WithMockUser(value = TEST_USER_LOGIN)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:411:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-412-<%_ if (databaseType === 'neo4j') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-521-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:522:        val user = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-523-            login = TEST_USER_LOGIN,
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-999-        testUser4.get().activated = true
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1000:        userService.updateUser((<%= asDto('User') %>(testUser4.get())))<% if (reactive) { %>.block()<% } %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1001-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1079-        val activationKey = "some activation key"
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1080:        var user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1081-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1128-    fun testSaveAccount() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1129:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1130-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1149-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1150:        val userDTO = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1151-            login = "not-used",
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1196-    fun testSaveInvalidEmail() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1197:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1198-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1211-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1212:        val userDTO = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1213-            login = "not-used",
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1250-    fun testSaveExistingEmail() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1251:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1252-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1265-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1266:        val anotherUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1267-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1280-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1281:        val userDTO = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1282-            login = "not-used",
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1318-    fun testSaveExistingEmailAndLogin() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1319:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1320-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1339-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1340:        val userDTO = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1341-            login = "not-used",
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1379-        val currentPassword = RandomStringUtils.random(60)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1380:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1381-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1422-        val currentPassword = RandomStringUtils.random(60)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1423:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1424-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1464-        val currentPassword = RandomStringUtils.random(60)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1465:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1466-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1508-        val currentPassword = RandomStringUtils.random(60)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1509:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1510-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1552-        val currentPassword = RandomStringUtils.random(60)
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1553:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1554-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1594-    fun testGetCurrentSessions() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1595:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1596-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1635-    fun testInvalidateSession() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1636:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1637-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1678-    fun testRequestPasswordReset() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1679:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1680-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1715-    fun testRequestPasswordResetUpperCaseEmail() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1716:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1717-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1769-    fun testFinishPasswordReset() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1770:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1771-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1812-    fun testFinishPasswordResetTooSmall() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs:1813:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/AccountResourceIT.kt.ejs-1814-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-21-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:22:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-24-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:25:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-27-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:28:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-29-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:30:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-31-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:32:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-33-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-34-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:35:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-36-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-37-<%_ if (databaseType !== 'cassandra' && databaseType !== 'couchbase') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:38:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-39-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:40:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:41:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-42-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:43:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-44-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:45:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:46:import <%= packageName %>.security.USER
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:47:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:48:import <%= packageName %>.service.mapper.UserMapper
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-49-<%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:50:import <%= packageName %>.web.rest.vm.ManagedUserVM
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-51-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-140-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:141:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-142-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:143:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-144-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-157-    /**
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:158:     * This repository is mocked in the <%= packageName %>.repository.search test package.
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-159-     *
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:160:     * @see <%= packageName %>.repository.search.UserSearchRepositoryMockConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-161-     */
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-186-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:187:    private lateinit var user: <%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-188-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-466-            .expectHeader().contentType(MediaType.APPLICATION_JSON)
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:467:            .returnResult(<%= asDto('User') %>::class.java).responseBody.blockFirst()
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-468-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-708-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:709:        val anotherUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-710-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-785-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:786:        val anotherUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-787-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-931-    fun testUserEquals() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:932:        equalsVerifier(<%= asEntity('User') %>::class)
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:933:        val user1 = <%= asEntity('User') %>(id = <% if (databaseType === 'sql' && authenticationType !== 'oauth2') { %>1L<% } else { %>"id1"<% } %>)
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:934:        val user2 = <%= asEntity('User') %>(id = user1.id)
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-935-        assertThat(user1).isEqualTo(user2)
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-943-    fun testUserDTOtoUser() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:944:        val userDTO = <%= asDto('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-945-            id = DEFAULT_ID,
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1054-        <%_ } else if (databaseType === 'couchbase'){ _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:1055:        private const val DEFAULT_ID = <%= asEntity('User') %>.PREFIX + DEFAULT_LOGIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1056-        <%_ } else { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1098-        @JvmStatic
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:1099:        fun createEntity(<% if (databaseType === 'sql' && !reactive) { %>em: EntityManager?<% } %>): <%= asEntity('User') %> {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:1100:            return <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1101-                <%_ if (databaseType === 'cassandra' || (authenticationType === 'oauth2' && databaseType !== 'couchbase')) { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1122-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs:1123:    fun assertPersistedUsers(userAssertion: (List<<%= asEntity('User') %>>) -> Unit) {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserResourceIT.kt.ejs-1124-        <%_ if (databaseType === 'couchbase') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-21-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:22:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-24-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:25:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-27-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:28:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-29-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-30-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:31:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-32-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:33:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-34-<%_ if (!skipUserManagement) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-35-    <%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:36:import <%= packageName %>.config.Constants
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-37-    <%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:38:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:39:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-40-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:41:import <%= packageName %>.web.rest.vm.LoginVM
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-42-import org.junit.jupiter.api.Test
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-90-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:91:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-92-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-121-    fun testAuthorize() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:122:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-123-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-172-    fun testAuthorizeWithRememberMe() {
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs:173:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/web/rest/UserJWTControllerIT.kt.ejs-174-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/ClientForwardControllerTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/ClientForwardControllerTest.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/ClientForwardControllerTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-22-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:23:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-25-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:26:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-28-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:29:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-30-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:31:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:32:import <%= packageName %>.repository.PersistenceAuditEventRepository
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:33:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-34-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-94-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:95:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-96-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs:97:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/web/rest/AuditResourceIT.kt.ejs-98-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs:21:package <%= packageName %>.web.rest
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-22-
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-31-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs:32:import <%= packageName %>.security.extractAuthorityFromClaims
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-33-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-105-/**
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs:106: * Mock user authentication for Spring SpEL expression used in [<%= packageName %>.repository.N1qlCouchbaseRepository].
/src/generators/server/templates/src/test/kotlin/package/web/rest/TestUtil.kt.ejs-107- */
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs:19:package <%= packageName %>.repository.timezone
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs-39-@Entity
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs:40:@Table(name = "<%= jhiTablePrefix %>_date_time_wrapper")
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapper.kt.ejs-41-class DateTimeWrapper(
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapperRepository.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapperRepository.kt.ejs:19:package <%= packageName %>.repository.timezone
/src/generators/server/templates/src/test/kotlin/package/repository/timezone/DateTimeWrapperRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/search/UserSearchRepositoryMockConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/repository/search/UserSearchRepositoryMockConfiguration.kt.ejs:19:package <%= packageName %>.repository.search
/src/generators/server/templates/src/test/kotlin/package/repository/search/UserSearchRepositoryMockConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-22-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:23:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-25-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:26:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:28:import <%= packageName %>.config.ANONYMOUS_USER
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-29-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:30:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-31-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:32:import <%= packageName %>.config.audit.AuditEventConverter
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:33:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-34-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-57-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:58:import <%= packageName %>.web.rest.mockAuthentication
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-59-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-65-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:66:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-67-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs:68:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/repository/CustomAuditEventRepositoryIT.kt.ejs-69-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/repository/CustomN1qlCouchbaseRepositoryTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/repository/CustomN1qlCouchbaseRepositoryTest.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/test/kotlin/package/repository/CustomN1qlCouchbaseRepositoryTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-21-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs:22:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-23-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-39-
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs:40:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/CassandraKeyspaceIT.kt.ejs-41-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-34-            .withImportOption(ImportOption.Predefined.DO_NOT_INCLUDE_TESTS)
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs:35:            .importPackages("<%= packageName %>")
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-36-
##############################################
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-38-            .that()
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs:39:                .resideInAnyPackage("<%= packageName %>.service..")
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-40-            .or()
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs:41:                .resideInAnyPackage("<%= packageName %>.repository..")
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-42-            .should().dependOnClassesThat()
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs:43:                .resideInAnyPackage("..<%= packageName %>.web..")
/src/generators/server/templates/src/test/kotlin/package/ArchTest.kt.ejs-44-        .because("Services and repositories should not depend on web layer")
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs-124-        if (container.documentRoot != null) {
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs:125:            assertThat(container.documentRoot).isEqualTo(File("<%= CLIENT_DIST_DIR %>"))
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTest.kt.ejs-126-        }
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs:22:import <%= packageName %>.service.MailService
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs-23-import org.mockito.Mockito
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs-36-    init {
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs:37:        Mockito.doNothing().`when`(mockMailService).sendActivationEmail(<%= asEntity('User') %>())
/src/generators/server/templates/src/test/kotlin/package/config/NoOpMailConfiguration.kt.ejs-38-    }
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/SecurityBeanOverrideConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/SecurityBeanOverrideConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/SecurityBeanOverrideConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs-44-            if (_couchbaseContainer == null) {
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs:45:                _couchbaseContainer = CouchbaseContainer("<%= DOCKER_COUCHBASE %>")
/src/generators/server/templates/src/test/kotlin/package/config/DatabaseConfigurationIT.kt.ejs-46-                    .withBucket(BucketDefinition(bucketName).withQuota(100))
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/OAuth2TestConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/OAuth2TestConfiguration.kt.ejs:19:package <%=packageName%>.config
/src/generators/server/templates/src/test/kotlin/package/config/OAuth2TestConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs:21:import <%= packageName %>.config.StaticResourcesWebConfiguration.Companion.RESOURCE_LOCATIONS
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs:22:import <%= packageName %>.config.StaticResourcesWebConfiguration.Companion.RESOURCE_PATHS
/src/generators/server/templates/src/test/kotlin/package/config/StaticResourcesWebConfigurerTest.kt.ejs-23-import com.nhaarman.mockitokotlin2.anyOrNull
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTestController.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTestController.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/WebConfigurerTestController.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:19:package <%= packageName %>.config.timezone
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-22-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:23:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-25-<%_ if (authenticationType === 'uaa' && applicationType !== 'uaa') { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:26:import <%= packageName %>.config.SecurityBeanOverrideConfiguration
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-28-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:29:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-30-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:31:import <%= packageName %>.repository.timezone.DateTimeWrapper
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:32:import <%= packageName %>.repository.timezone.DateTimeWrapperRepository
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-33-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-62-<%_ if (authenticationType === 'uaa' && applicationType !== 'uaa') { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:63:@SpringBootTest(classes = [SecurityBeanOverrideConfiguration::class, <%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-64-<%_ } else if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:65:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-66-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:67:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-68-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-213-    private fun generateSqlRequest(fieldName: String, id: Long): String =
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs:214:        format("SELECT %s FROM <%= jhiTablePrefix %>_date_time_wrapper where id=%d", fieldName, id)
/src/generators/server/templates/src/test/kotlin/package/config/timezone/HibernateTimeZoneIT.kt.ejs-215-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/ElasticsearchTestConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/ElasticsearchTestConfiguration.kt.ejs:19:package <%=packageName%>.config
/src/generators/server/templates/src/test/kotlin/package/config/ElasticsearchTestConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/TestSecurityConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/TestSecurityConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/TestSecurityConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs:21:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs:22:import <%= packageName %>.config.cassandra.CassandraConfiguration
/src/generators/server/templates/src/test/kotlin/package/config/CassandraConfigurationIT.kt.ejs-23-
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:19:package <%= packageName %>.service.mapper
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:22:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-23-<%_ if (authenticationType !== 'oauth2') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-36-<%_ } else if (databaseType === 'couchbase'){ _%>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:37:private const val DEFAULT_ID = <%= asEntity('User') %>.PREFIX + DEFAULT_LOGIN
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-38-<%_ } else { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-48-
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:49:    private lateinit var user: <%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:50:    private lateinit var userDto: <%= asDto('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-51-
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-54-        userMapper = UserMapper()
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:55:        user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-56-            login = DEFAULT_LOGIN,
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-69-
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs:70:        userDto = <%= asDto('User') %>(user)
/src/generators/server/templates/src/test/kotlin/package/service/mapper/UserMapperTest.kt.ejs-71-    }
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-19--%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:20:package <%= packageName %>.service
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-21-
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:22:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-23-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:24:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-25-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-26-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:27:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-28-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:29:import <%= packageName %>.repository.PersistenceAuditEventRepository
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:30:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-31-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-45-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:46:import <%= packageName %>.web.rest.mockAuthentication
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-47-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-48-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:49:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-50-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-59-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:60:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-61-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs:62:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/service/AuditEventServiceIT.kt.ejs-63-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-21-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:22:import <%= packageName %>.AbstractCassandraTest
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-24-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:25:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-27-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:28:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-29-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:30:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-31-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:32:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-33-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:34:import <%= packageName %>.config.ANONYMOUS_USER
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:35:import <%= packageName %>.config.DEFAULT_LANGUAGE
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-36-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:37:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-38-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-39-<%_ if ((databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') && authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:40:import <%= packageName %>.domain.PersistentToken
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-41-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-42-<%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:43:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-44-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-45-<%_ if ((databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') && authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:46:import <%= packageName %>.repository.PersistentTokenRepository
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-47-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-48-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:49:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-50-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-51-<%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:52:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-53-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-54-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:55:import <%= packageName %>.security.ANONYMOUS
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-56-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-124-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:125:import <%= packageName %>.web.rest.mockAuthentication
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-126-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-154-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:155:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-156-<%_ } else { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:157:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-158-<%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-184-    /**
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:185:     * This repository is mocked in the <%= packageName %>.repository.search test package.
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-186-     *
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:187:     * @see <%= packageName %>.repository.search.UserSearchRepositoryMockConfiguration
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-188-     */
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-201-
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:202:    private lateinit var user: <%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-203-    <%_ } _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-223-        <%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:224:        user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-225-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-441-
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs:442:    private fun generateUserToken(user: <%= asEntity('User') %>, tokenSeries: String, localDate: LocalDate) {
/src/generators/server/templates/src/test/kotlin/package/service/UserServiceIT.kt.ejs-443-        val token = PersistentToken(
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-20-
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:21:import <%= packageName %>.config.DEFAULT_LANGUAGE
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-22-<% if (databaseType === 'cassandra') { %>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:23:import <%= packageName %>.AbstractCassandraTest<% } %>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-24-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:25:import <%= packageName %>.RedisTestContainerExtension
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-27-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:28:import <%= packageName %>.AbstractNeo4jIT
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-29-<%_ } _%>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:30:import <%= packageName %>.<%= mainClass %>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:31:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-32-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-82- */
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:83:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-84-<%_ if (cacheProvider === 'redis') { _%>
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-177-    fun testSendEmailFromTemplate() {
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:178:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-179-            login = "john",
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-195-    fun testSendActivationEmail() {
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:196:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-197-            langKey = DEFAULT_LANGUAGE,
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-211-    fun testCreationEmail() {
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:212:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-213-            langKey = DEFAULT_LANGUAGE,
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-227-    fun testSendPasswordResetMail() {
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:228:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-229-            langKey = DEFAULT_LANGUAGE,
##############################################
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-256-    fun testSendLocalizedEmailForAllSupportedLanguages() {
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs:257:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/test/kotlin/package/service/MailServiceIT.kt.ejs-258-            login = "john",
##############################################
/src/generators/server/templates/src/test/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilterTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilterTest.kt.ejs:19:package <%= packageName %>.gateway.responserewriting
/src/generators/server/templates/src/test/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilterTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs-32-        if(!started.get()) {
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs:33:            val neo4jContainer = KGenericContainer("<%= DOCKER_NEO4J %>")
/src/generators/server/templates/src/test/kotlin/package/AbstractNeo4jIT.kt.ejs-34-                    .withExposedPorts(7687)
##############################################
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs-18--%>
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs-20-
##############################################
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs-51-        @JvmField
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs:52:        val CASSANDRA_CONTAINER = KGenericContainer("<%= DOCKER_CASSANDRA %>")
/src/generators/server/templates/src/test/kotlin/package/AbstractCassandraTest.kt.ejs-53-            .waitingFor(Wait.forListeningPort().withStartupTimeout(Duration.ofSeconds(30)))
##############################################
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs-33-        DefaultProfileUtil.addDefaultProfile(application.application())
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs:34:        return application.sources(<%= mainClass %>::class.java)
/src/generators/server/templates/src/main/kotlin/package/ApplicationWebXml.kt.ejs-35-    }
##############################################
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs:19:package <%= packageName %>.aop.logging
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs-56-    @Pointcut(
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs:57:        "within(<%= packageName %>.repository..*)" +
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs:58:            " || within(<%= packageName %>.service..*)" +
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs:59:            " || within(<%= packageName %>.web.rest..*)"
/src/generators/server/templates/src/main/kotlin/package/aop/logging/LoggingAspect.kt.ejs-60-    )
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedFeignClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedFeignClient.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedFeignClient.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/TokenRelayRequestInterceptor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/TokenRelayRequestInterceptor.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/TokenRelayRequestInterceptor.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/client/TokenRelayRequestInterceptor.kt.ejs:21:import <%= packageName %>.security.oauth2.AuthorizationHeaderUtil
/src/generators/server/templates/src/main/kotlin/package/client/TokenRelayRequestInterceptor.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/JWT_UserFeignClientInterceptor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/JWT_UserFeignClientInterceptor.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/JWT_UserFeignClientInterceptor.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/client/JWT_UserFeignClientInterceptor.kt.ejs:21:import <%= packageName %>.security.getCurrentUserJWT
/src/generators/server/templates/src/main/kotlin/package/client/JWT_UserFeignClientInterceptor.kt.ejs-22-import feign.RequestInterceptor
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2_UserFeignClientInterceptor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2_UserFeignClientInterceptor.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2_UserFeignClientInterceptor.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs-40-
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs:41:import <%= packageName %>.security.oauth2.AuthorizationHeaderUtil
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2InterceptedFeignConfiguration.kt.ejs-42-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedUserFeignClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedUserFeignClient.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/AuthorizedUserFeignClient.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2UserClientFeignConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2UserClientFeignConfiguration.kt.ejs:19:package <%= packageName %>.client
/src/generators/server/templates/src/main/kotlin/package/client/OAuth2UserClientFeignConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:19:package <%= packageName %>
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-21-<%_ if (applicationType === 'microservice' && authenticationType === 'uaa') { _%>
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:22:import <%= packageName %>.client.OAuth2InterceptedFeignConfiguration
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:24:import <%= packageName %>.config.ApplicationProperties
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-25-import io.github.jhipster.config.DefaultProfileUtil
##############################################
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-61-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:62:class <%= mainClass %>(private val env: Environment) {
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-63-
##############################################
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-66-    /**
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:67:     * Initializes <%= baseName %>.
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-68-     *
##############################################
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-101-        fun main(args: Array<String>) {
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:102:            val env = runApplication<<%= mainClass %>>(*args) { DefaultProfileUtil.addDefaultProfile(this) }.environment
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-103-            logApplicationStartup(env)
##############################################
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-107-        private fun logApplicationStartup(env: Environment) {
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs:108:            val log = LoggerFactory.getLogger(<%= mainClass %>::class.java)
/src/generators/server/templates/src/main/kotlin/package/Application.kt.ejs-109-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs:22:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs-23-import org.hibernate.validator.internal.constraintvalidators.hv.EmailValidator
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs-75-
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs:76:    private fun createSpringSecurityUser(lowercaseLogin: String, user: <%= asEntity('User') %>)
/src/generators/server/templates/src/main/kotlin/package/security/DomainUserDetailsService.kt.ejs-77-        : org.springframework.security.core.userdetails.User {
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTFilter.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTConfigurer.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTConfigurer.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTConfigurer.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/jwt/TokenProvider.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/jwt/TokenProvider.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/main/kotlin/package/security/jwt/TokenProvider.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs:19:package <%= packageName %>.security.jwt
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs-26-
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs:27:import <%= packageName %>.security.jwt.JWTFilter.Companion.AUTHORIZATION_HEADER
/src/generators/server/templates/src/main/kotlin/package/security/jwt/JWTRelayGatewayFilterFactory.kt.ejs-28-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2Cookies.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2Cookies.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2Cookies.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieTokenExtractor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieTokenExtractor.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieTokenExtractor.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/JwtGrantedAuthorityConverter.kt.ejs:1:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/JwtGrantedAuthorityConverter.kt.ejs-2-
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/JwtGrantedAuthorityConverter.kt.ejs:3:import <%= packageName %>.security.extractAuthorityFromClaims
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/JwtGrantedAuthorityConverter.kt.ejs-4-import org.springframework.core.convert.converter.Converter
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaSignatureVerifierClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaSignatureVerifierClient.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaSignatureVerifierClient.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaSignatureVerifierClient.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaSignatureVerifierClient.kt.ejs-22-import org.slf4j.LoggerFactory
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2SignatureVerifierClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2SignatureVerifierClient.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2SignatureVerifierClient.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AudienceValidator.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AudienceValidator.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AudienceValidator.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieCollection.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieCollection.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookieCollection.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuthIdpTokenResponseDTO.kt.ejs:1:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuthIdpTokenResponseDTO.kt.ejs-2-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimpleAuthoritiesExtractor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimpleAuthoritiesExtractor.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimpleAuthoritiesExtractor.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2AuthenticationService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2AuthenticationService.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2AuthenticationService.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimplePrincipalExtractor.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimplePrincipalExtractor.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/SimplePrincipalExtractor.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookiesHttpServletRequestWrapper.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookiesHttpServletRequestWrapper.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CookiesHttpServletRequestWrapper.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClientAdapter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClientAdapter.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClientAdapter.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClientAdapter.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClientAdapter.kt.ejs-22-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderUtil.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderUtil.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderUtil.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaTokenEndpointClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaTokenEndpointClient.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaTokenEndpointClient.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaTokenEndpointClient.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/UaaTokenEndpointClient.kt.ejs-22-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClient.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClient.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2TokenEndpointClient.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs-22-import com.netflix.zuul.context.RequestContext
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs:23:import <%= packageName %>.client.TokenRelayRequestInterceptor
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/AuthorizationHeaderFilter.kt.ejs-24-import org.springframework.core.Ordered
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2CookieHelper.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2CookieHelper.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2CookieHelper.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2CookieHelper.kt.ejs:21:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/OAuth2CookieHelper.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CachedUserInfoTokenServices.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CachedUserInfoTokenServices.kt.ejs:19:package <%= packageName %>.security.oauth2
/src/generators/server/templates/src/main/kotlin/package/security/oauth2/CachedUserInfoTokenServices.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/AuthoritiesConstants.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/AuthoritiesConstants.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/AuthoritiesConstants.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/SecurityUtils.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/SecurityUtils.kt.ejs:21:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/SecurityUtils.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/SpringSecurityAuditorAware.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/SpringSecurityAuditorAware.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/SpringSecurityAuditorAware.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/SpringSecurityAuditorAware.kt.ejs:21:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/main/kotlin/package/security/SpringSecurityAuditorAware.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/UserNotActivatedException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/UserNotActivatedException.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/UserNotActivatedException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/IatTokenEnhancer.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/IatTokenEnhancer.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/IatTokenEnhancer.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs:19:package <%= packageName %>.security
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs:21:import <%= packageName %>.domain.PersistentToken
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs:22:import <%= packageName %>.repository.PersistentTokenRepository
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs:23:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/security/PersistentTokenRememberMeServices.kt.ejs-24-<%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:19:package <%= packageName %>.domain
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-26-import org.springframework.data.annotation.Id
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:27:import org.springframework.data.<%= databaseType %>.core.mapping.Document
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-28-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-53-@Entity
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:54:@Table(name = "<%= jhiTablePrefix %>_authority")
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-55-    <%_ if (enableHibernateCache) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-63-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:64:@Table("<%= jhiTablePrefix %>_authority")
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-65-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-66-<%_ if (databaseType === 'mongodb') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:67:@Document(collection = "<%= jhiTablePrefix %>_authority")
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-68-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-72-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs:73:@Node("<%= jhiTablePrefix %>_authority")
/src/generators/server/templates/src/main/kotlin/package/domain/Authority.kt.ejs-74-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:19:package <%= packageName %>.domain
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-69-
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:70:import <%= packageName %>.config.ID_DELIMITER
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-71-import org.springframework.data.couchbase.core.mapping.id.GenerationStrategy.USE_ATTRIBUTES
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-76- *
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:77: * @see <%= packageName %>.security.PersistentTokenRememberMeServices
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-78- */
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-80-@Entity
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:81:@Table(name = "<%= jhiTablePrefix %>_persistent_token")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-82-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-86-<%_ if (databaseType === 'mongodb') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:87:@Document(collection = "<%= jhiTablePrefix %>_persistent_token")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-88-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-155-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs:156:    var user: <%= asEntity('User') %>? = null
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentToken.kt.ejs-157-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:19:package <%= packageName %>.domain
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-66-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:67:import <%= packageName %>.config.ID_DELIMITER
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-68-import org.springframework.data.couchbase.core.mapping.id.GenerationStrategy.UNIQUE
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-78-@Entity
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:79:@Table(name = "<%= jhiTablePrefix %>_persistent_audit_event")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-80-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:81:@Table("<%= jhiTablePrefix %>_persistent_audit_event")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-82-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-84-<%_ if (databaseType === 'mongodb') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:85:@Document(collection = "<%= jhiTablePrefix %>_persistent_audit_event")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-86-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-87-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:88:@Node("<%= jhiTablePrefix %>_persistent_audit_event")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-89-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-147-    @Column(name = "value")
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs:148:    @CollectionTable(name = "<%= jhiTablePrefix %>_persistent_audit_evt_data", joinColumns = [JoinColumn(name="event_id")])
/src/generators/server/templates/src/main/kotlin/package/domain/PersistentAuditEvent.kt.ejs-149-        <%_ } else { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:19:package <%= packageName %>.domain
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:21:import <%= packageName %>.config.LOGIN_REGEX
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-99-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:100:import <%= packageName %>.config.ID_DELIMITER
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-101-import org.springframework.data.couchbase.core.mapping.id.GenerationStrategy.USE_ATTRIBUTES
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-110-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:111:@Table(<% if (!reactive) { %>name = <% } %>"<%= jhiTablePrefix %>_user")
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-112-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-116-<%_ if (databaseType === 'mongodb') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:117:@org.springframework.data.mongodb.core.mapping.Document(collection = "<%= jhiTablePrefix %>_user")
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-118-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-119-<%_ if (databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:120:@Node("<%= jhiTablePrefix %>_user")
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-121-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-130-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:131:class <%= asEntity('User') %> (
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-132-<%_ if (databaseType === 'sql') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-339-    @JoinTable(
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:340:        name = "<%= jhiTablePrefix %>_user_authority",
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-341-        joinColumns = [JoinColumn(name = "user_id", referencedColumnName = "id")],
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-441-        if (this === other) return true
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:442:        if (other !is <%= asEntity('User') %>) return false
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-443-        if (other.id == null || id == null) return false
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-450-    override fun toString() =
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs:451:        "<%= asEntity('User') %>{" +
/src/generators/server/templates/src/main/kotlin/package/domain/User.kt.ejs-452-            "login='" + login + '\'' +
##############################################
/src/generators/server/templates/src/main/kotlin/package/domain/AbstractAuditingEntity.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/domain/AbstractAuditingEntity.kt.ejs:19:package <%= packageName %>.domain
/src/generators/server/templates/src/main/kotlin/package/domain/AbstractAuditingEntity.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs:19:package <%= packageName %>.web.websocket
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs:21:import <%= packageName %>.config.WebsocketConfiguration.Companion.IP_ADDRESS
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs-22-
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs:23:import <%= packageName %>.web.websocket.dto.ActivityDTO
/src/generators/server/templates/src/main/kotlin/package/web/websocket/ActivityService.kt.ejs-24-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/websocket/dto/ActivityDTO.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/websocket/dto/ActivityDTO.kt.ejs:19:package <%= packageName %>.web.websocket.dto
/src/generators/server/templates/src/main/kotlin/package/web/websocket/dto/ActivityDTO.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/filter/SpaWebFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/filter/SpaWebFilter.kt.ejs:19:package <%= packageName %>.web.filter
/src/generators/server/templates/src/main/kotlin/package/web/filter/SpaWebFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/filter/RouteDetectorFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/filter/RouteDetectorFilter.kt.ejs:19:package <%= packageName %>.web.filter
/src/generators/server/templates/src/main/kotlin/package/web/filter/RouteDetectorFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilterConfigurer.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilterConfigurer.kt.ejs:19:package <%= packageName %>.web.filter
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilterConfigurer.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilterConfigurer.kt.ejs:21:import <%= packageName %>.security.oauth2.OAuth2AuthenticationService
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilterConfigurer.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs:19:package <%= packageName %>.web.filter
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs:21:import <%= packageName %>.security.oauth2.OAuth2AuthenticationService
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs:22:import <%= packageName %>.security.oauth2.OAuth2CookieHelper
/src/generators/server/templates/src/main/kotlin/package/web/filter/RefreshTokenFilter.kt.ejs-23-import org.slf4j.LoggerFactory
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/KeyAndPasswordVM.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/KeyAndPasswordVM.kt.ejs:19:package <%= packageName %>.web.rest.vm
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/KeyAndPasswordVM.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs:19:package <%= packageName %>.web.rest.vm
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs:21:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-22-<%_ if (authenticationType !== 'oauth2') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-26-/**
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs:27: * View Model extending the [<%= asDto('User') %>], which is meant to be used in the user management UI.
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-28- */
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs:29:class ManagedUserVM : <%= asDto('User') %>() {
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/ManagedUserVM.kt.ejs-30-    <%_ if (authenticationType !== 'oauth2') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/RouteVM.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/RouteVM.kt.ejs:19:package <%= packageName %>.web.rest.vm
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/RouteVM.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/LoginVM.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/LoginVM.kt.ejs:19:package <%= packageName %>.web.rest.vm
/src/generators/server/templates/src/main/kotlin/package/web/rest/vm/LoginVM.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/LoginAlreadyUsedException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/LoginAlreadyUsedException.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/LoginAlreadyUsedException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ErrorConstants.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ErrorConstants.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ErrorConstants.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/InvalidPasswordException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/InvalidPasswordException.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/InvalidPasswordException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/FieldErrorVM.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/FieldErrorVM.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/FieldErrorVM.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-88-     */
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:89:    override fun process(entity: ResponseEntity<Problem>?, request: <%= requestClass %>?): <%- returnType %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-90-        if (entity == null) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-133-    override fun handleMethodArgumentNotValid(
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:134:        ex: MethodArgumentNotValidException, request: <%= requestClass %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-135-    ): <%- returnType %> {
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-137-    override fun handleBindingResult(
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:138:        ex: WebExchangeBindException, request: <%= requestClass %>)
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-139-    : <%- returnType %>  {
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-141-        val result = ex.bindingResult
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:142:        val fieldErrors = result.fieldErrors.map { FieldErrorVM(it.objectName.replaceFirst(Regex("<%= dtoSuffix %>$"), ""), it.field, it.code) }
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-143-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-155-    @ExceptionHandler
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:156:    fun handleEmailAlreadyUsedException(ex: <%= packageName %>.service.EmailAlreadyUsedException, request: <%= requestClass %>): <%- returnType %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-157-        val problem = EmailAlreadyUsedException()
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:158:        return create(problem, request, HeaderUtil.createFailureAlert(applicationName,  <%= enableTranslation %>, problem.entityName, problem.errorKey, problem.message))
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-159-    }
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-161-    @ExceptionHandler
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:162:    fun handleUsernameAlreadyUsedException(ex: <%= packageName %>.service.UsernameAlreadyUsedException, request: <%= requestClass %>): <%- returnType %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-163-        val problem = LoginAlreadyUsedException()
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:164:        return create(problem, request, HeaderUtil.createFailureAlert(applicationName,  <%= enableTranslation %>, problem.entityName, problem.errorKey, problem.message))
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-165-    }
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-167-    @ExceptionHandler
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:168:    fun handleInvalidPasswordException(ex: <%= packageName %>.service.InvalidPasswordException, request: <%= requestClass %>): <%- returnType %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-169-        return create(InvalidPasswordException(), request)
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-175-        ex: BadRequestAlertException,
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:176:        request: <%= requestClass %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-177-    ): <%- returnType %> =
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-179-            ex, request,
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:180:            HeaderUtil.createFailureAlert(applicationName, <%= enableTranslation %>, ex.entityName, ex.errorKey, ex.message)
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-181-        )
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-184-    @ExceptionHandler
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs:185:    fun handleConcurrencyFailure(ex: ConcurrencyFailureException, request: <%= requestClass %>): <%- returnType %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/ExceptionTranslator.kt.ejs-186-        val problem = Problem.builder()
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/EmailAlreadyUsedException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/EmailAlreadyUsedException.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/EmailAlreadyUsedException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/BadRequestAlertException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/BadRequestAlertException.kt.ejs:19:package <%= packageName %>.web.rest.errors
/src/generators/server/templates/src/main/kotlin/package/web/rest/errors/BadRequestAlertException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthResource.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthResource.kt.ejs:21:import <%= packageName %>.security.oauth2.OAuth2AuthenticationService
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthResource.kt.ejs-22-import org.slf4j.LoggerFactory
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/LogoutResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/LogoutResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/LogoutResource.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-21-_%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:22:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-23-
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-24-<%_ if (withAudit) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:25:import <%= packageName %>.config.ANONYMOUS_USER
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:27:import <%= packageName %>.security.jwt.JWTFilter
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:28:import <%= packageName %>.security.jwt.TokenProvider
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-29-<%_ if (withAudit) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:30:import <%= packageName %>.service.AuditEventService
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-31-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs:32:import <%= packageName %>.web.rest.vm.LoginVM
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserJWTController.kt.ejs-33-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs:21:import <%= packageName %>.service.AuditEventService
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-130-    <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs:131:    fun get(@PathVariable id: <%= pkType %>?): ResponseEntity<AuditEvent> =
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-132-        ResponseUtil.wrapOrNotFound(auditEventService.find(id!!))
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-133-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs:134:    fun get(@PathVariable id: <%= pkType %>?) = auditEventService.find(id!!)
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuditResource.kt.ejs-135-        .switchIfEmpty { Mono.error(ResponseStatusException(HttpStatus.NOT_FOUND)) }
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs:21:import <%= packageName %>.config.KafkaProperties
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs-22-import org.apache.kafka.clients.consumer.ConsumerRecord
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs-63-@RestController
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs:64:@RequestMapping("/api/<%= dasherizedBaseName %>-kafka")
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs:65:class <%= upperFirstCamelCase(baseName) %>KafkaResource(
/src/generators/server/templates/src/main/kotlin/package/web/rest/KafkaResource.kt.ejs-66-    private val kafkaProperties: KafkaProperties
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-22-    <%_ if (reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:23:import <%= packageName %>.security.getCurrentUserLogin
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-24-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:25:import <%= packageName %>.service.UserService
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:26:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-27-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-59-    @GetMapping("/account")
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:60:    fun getAccount(principal: Principal?): <% if (reactive) { %>Mono<<%= asDto('User') %>><% } else { %><%= asDto('User') %><% } %> =
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-61-        if (principal is AbstractAuthenticationToken) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-72-<%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:73:import <%= packageName %>.security.getCurrentUserLogin
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-74-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-139-<%_ if (authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:140:import <%= packageName %>.domain.PersistentToken
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:141:import <%= packageName %>.repository.PersistentTokenRepository
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-142-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:143:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:144:import <%= packageName %>.security.getCurrentUserLogin
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:145:import <%= packageName %>.service.MailService
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:146:import <%= packageName %>.service.UserService
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:147:import <%= packageName %>.service.dto.PasswordChangeDTO
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:148:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:149:import <%= packageName %>.web.rest.errors.EmailAlreadyUsedException
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:150:import <%= packageName %>.web.rest.errors.InvalidPasswordException
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:151:import <%= packageName %>.web.rest.errors.LoginAlreadyUsedException
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:152:import <%= packageName %>.web.rest.vm.KeyAndPasswordVM
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:153:import <%= packageName %>.web.rest.vm.ManagedUserVM
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-154-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-274-    @GetMapping("/account")
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:275:    fun getAccount(): <% if (reactive) { %>Mono<<%= asDto('User') %>><% } else { %><%= asDto('User') %><% } %> =
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-276-        userService.getUserWithAuthorities()
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:277:            .map { <%= asDto('User') %>(it) }
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-278-            <%_ if (!reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-292-    <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:293:    fun saveAccount(@Valid @RequestBody userDTO: <%= asDto('User') %>) {
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-294-        val userLogin = getCurrentUserLogin()
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-309-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs:310:    fun saveAccount(@Valid @RequestBody userDTO: <%= asDto('User') %>): Mono<Void> =
/src/generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs-311-        getCurrentUserLogin()
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/ClientForwardController.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/ClientForwardController.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/ClientForwardController.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthInfoResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthInfoResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/AuthInfoResource.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs:21:import <%= packageName %>.web.rest.vm.RouteVM
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs:22:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/web/rest/GatewayResource.kt.ejs-23-
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:21:import <%= packageName %>.config.LOGIN_REGEX
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-22-<%_ if (authenticationType !== 'oauth2' || searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:23:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-24-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-25-<%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:26:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-28-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:29:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-30-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:31:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-32-<%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:33:import <%= packageName %>.service.MailService
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-34-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:35:import <%= packageName %>.service.UserService
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:36:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-37-<%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:38:import <%= packageName %>.web.rest.errors.BadRequestAlertException
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:39:import <%= packageName %>.web.rest.errors.EmailAlreadyUsedException
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:40:import <%= packageName %>.web.rest.errors.LoginAlreadyUsedException
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-41-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-101- *
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:102: * This class accesses the [<% if (!(authenticationType !== 'oauth2' || searchEngine === 'elasticsearch')) { %><%= packageName %>.domain.<% } %><%= asEntity('User') %>] entity, and needs to fetch its collection of authorities.
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-103- *
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-155-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:156:    fun createUser(@Valid @RequestBody userDTO: <%= asDto('User') %>): <% if (reactive) { %>Mono<ResponseEntity<<%= asEntity('User') %>>><% } else { %>ResponseEntity<<%= asEntity('User') %>><% } %> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-157-        log.debug("REST request to save User : $userDTO")
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-214-    <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:215:    fun updateUser(@Valid @RequestBody userDTO: <%= asDto('User') %>): ResponseEntity<<%= asDto('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-216-        log.debug("REST request to update User : $userDTO")
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-231-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:232:    fun updateUser(@Valid @RequestBody userDTO: <%= asDto('User') %>) : Mono<ResponseEntity<<%= asDto('User') %>>> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-233-        log.debug("REST request to update User : $userDTO")
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-272-        <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:273:    fun getAllUsers(pageable: Pageable): ResponseEntity<List<<%= asDto('User') %>>> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-274-        val page = userService.getAllManagedUsers(pageable)
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-281-        pageable: Pageable
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:282:    ): Mono<ResponseEntity<Flux<<%= asDto('User') %>>>> =
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-283-        userService.countManagedUsers()
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:284:            .map { total -> PageImpl(mutableListOf<<%= asDto('User') %>>(), pageable, total!!) }
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-285-            .map { page -> PaginationUtil.generatePaginationHttpHeaders(UriComponentsBuilder.fromHttpRequest(request), page) }
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-307-    <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:308:    fun getUser(@PathVariable login: String): ResponseEntity<<%= asDto('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-309-        log.debug("REST request to get User : $login")
##############################################
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-311-            userService.getUserWithAuthoritiesByLogin(login)
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:312:                .map { <%= asDto('User') %>(it) })
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-313-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:314:    fun getUser(@PathVariable login: String): Mono<<%= asDto('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-315-        log.debug("REST request to get User : $login")
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-316-        return userService.getUserWithAuthoritiesByLogin(login)
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs:317:            .map { <%= asDto('User') %>(it) }
/src/generators/server/templates/src/main/kotlin/package/web/rest/UserResource.kt.ejs-318-            .switchIfEmpty(Mono.error(ResponseStatusException(HttpStatus.NOT_FOUND)))
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/ReactiveN1qlCouchbaseRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/ReactiveN1qlCouchbaseRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/ReactiveN1qlCouchbaseRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs-27-import com.couchbase.client.java.search.result.SearchQueryRow
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs:28:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/repository/reactive/CustomReactiveN1qlCouchbaseRepository.kt.ejs-29-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs:21:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs-22-<%_ if (databaseType === 'sql') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs-56-    <% if (!reactive) { %>// See https://github.com/neo4j/sdn-rx/issues/51<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs:57:    <<%= asEntity('Authority') %>> findAll(): <% if (reactive) { %>Flux<% } else { %>List<% } %>
/src/generators/server/templates/src/main/kotlin/package/repository/AuthorityRepository.kt.ejs-58-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs-27-import com.couchbase.client.java.search.result.SearchQueryRow
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs:28:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/repository/CustomN1qlCouchbaseRepository.kt.ejs-29-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-21-<%_ if (databaseType === 'sql' && reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:22:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:24:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-25-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-38-<%_ if (searchEngine === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:39:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-40-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-41-<%_ if (searchEngine === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:42:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-43-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-109-<% if (databaseType === 'couchbase') { %>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:110:import <%= packageName %>.config.ID_DELIMITER
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-111-<% } %>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-112-/**
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:113: * Spring Data <% if (databaseType === 'sql' && !reactive) { %>JPA<% } else if (databaseType === 'sql' && reactive) { %>R2DBC<% } else if (databaseType === 'mongodb') { %>MongoDB<% } else if (databaseType === 'couchbase') { %>Couchbase<% } else if (databaseType === 'cassandra') { %>Cassandra<% } else if (databaseType === 'neo4j') { %>Neo4j RX<% } %> repository for the [<%= asEntity('User') %>] entity.
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-114- */
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-122-@Repository
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:123:interface UserRepository : <% if (databaseType === 'sql') { %>JpaRepository<<%= asEntity('User') %>, <% if (authenticationType === 'oauth2') { %>String<% } else { %>Long<% } %>><% } %><% if (reactive) { %>Reactive<% } %><% if (databaseType === 'mongodb') { %>MongoRepository<<%= asEntity('User') %>, String><% } %><% if (databaseType === 'neo4j') { %>Neo4jRepository<<%= asEntity('User') %>, String><% } %><% if (databaseType === 'couchbase') { %>N1qlCouchbaseRepository<<%= asEntity('User') %>, String><%if (searchEngine === 'couchbase') { %>, SearchCouchbaseRepository<<%= asEntity('User') %>, String><% } } %> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-124-    <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-125-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:126:    fun findOneByActivationKey(activationKey: String): <%= optionalOrMono %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-127-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-129-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:130:    fun findAllByActivatedIsFalseAndActivationKeyIsNotNullAndCreatedDateBefore(dateTime: Instant): <% if (reactive) { %>Flux<% } else { %>List<% } %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-131-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-133-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:134:    fun findOneByResetKey(resetKey: String): <%= optionalOrMono %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-135-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-142-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:143:    fun findOneByEmailIgnoreCase(email: String?): <%= optionalOrMono %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-144-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-150-    @JvmDefault
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:151:    fun findOneByLogin(login: String): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:152:        return findById(<%= asEntity('User') %>.PREFIX + ID_DELIMITER + login)
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-153-    }
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-157-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:158:    fun findOneByLogin(login: String): <%= optionalOrMono %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-159-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:160:    fun findOneByLogin(login: String): <%= optionalOrMono %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-161-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-164-    <% if (!reactive) { %>// See https://github.com/neo4j/sdn-rx/issues/51<% } %>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:165:    <<%= asEntity('User') %>> findAll(): <% if (reactive) { %>Flux<% } else { %>List<% } %>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-166-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-173-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:174:    fun findOneWithAuthoritiesByLogin(login: String): Optional<<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-175-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-180-            <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:181:    fun findOneWithAuthoritiesByEmailIgnoreCase(email: String): Optional<<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-182-        <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-184-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:185:    fun findAllByLoginNot(pageable: Pageable, login: String): <% if (reactive) { %>Flux<% } else { %>Page<% } %><<%= asEntity('User') %>>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-186-    <%_ if (reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-204-    <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:205:    @Query("SELECT * FROM <%= jhiTablePrefix %>_user WHERE activation_key = :activationKey")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-206-    fun findOneByActivationKey(activationKey: String): Mono<User> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-207-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:208:    @Query("SELECT * FROM <%= jhiTablePrefix %>_user WHERE activated = false AND activation_key IS NOT NULL AND created_date < :dateTime")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-209-    fun findAllByActivatedIsFalseAndActivationKeyIsNotNullAndCreatedDateBefore(dateTime: LocalDateTime): Flux<User> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-210-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:211:    @Query("SELECT * FROM <%= jhiTablePrefix %>_user WHERE reset_key = :resetKey")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-212-    fun findOneByResetKey(resetKey: String): Mono<User> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-213-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:214:    @Query("SELECT * FROM <%= jhiTablePrefix %>_user WHERE LOWER(email) = LOWER(:email)")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-215-    fun findOneByEmailIgnoreCase(email: String): Mono<User>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-217-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:218:    @Query("SELECT * FROM <%= jhiTablePrefix %>_user WHERE login = :login")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-219-    fun findOneByLogin(login: String): Mono<User> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-220-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:221:    @Query("SELECT COUNT(DISTINCT id) FROM <%= jhiTablePrefix %>_user WHERE login != :anonymousUser")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-222-    fun countAllByLoginNot(anonymousUser: String): Mono<Long> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-223-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:224:    @Query("INSERT INTO <%= jhiTablePrefix %>_user_authority VALUES(:userId, :authority)")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-225-    fun saveUserAuthority(userId: <% if (authenticationType === 'oauth2') { %>String<% } else { %>Long<% } %>, authority: String): Mono<Void> 
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-226-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:227:    @Query("DELETE FROM <%= jhiTablePrefix %>_user_authority")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-228-    fun deleteAllUserAuthorities(): Mono<Void>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-264-    private fun findOneWithAuthoritiesBy(fieldName: String, fieldValue: Any): Mono<User> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:265:        return db.execute("SELECT * FROM <%= jhiTablePrefix %>_user u LEFT JOIN <%= jhiTablePrefix %>_user_authority ua ON u.id=ua.user_id WHERE u.$fieldName = :$fieldName")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-266-            .bind(fieldName, fieldValue)
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-296-    override fun delete(user: User): Mono<Void> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:297:        return db.execute("DELETE FROM <%= jhiTablePrefix %>_user_authority WHERE user_id = :userId")
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-298-            .bind("userId", user.id)
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-410-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:411:    fun findById(id: String): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-412-        <%_ if(!reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-424-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:425:    fun findOneByActivationKey(activationKey: String): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-426-        val stmt = findOneByActivationKeyStmt.bind()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-430-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:431:    fun findOneByResetKey(resetKey: String): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-432-        val stmt = findOneByResetKeyStmt.bind()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-439-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:440:    fun findOneByEmailIgnoreCase(email: String?): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-441-        val stmt = findOneByEmailStmt.bind()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-448-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:449:    fun findOneByLogin(login: String): <%= optionalOrMono %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-450-        val stmt = findOneByLoginStmt.bind()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-455-    <%_ if(!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:456:    fun findAll(): List<<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-457-        return mapper.map(session.execute(findAllStmt.bind())).all()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-459-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:460:    fun findAll(): Flux<<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-461-        return cqlTemplate.select(findAllStmt.bind(), User::class.java)
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-470-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:471:    fun save(user: <%= asEntity('User') %>): <% if(reactive) { %>Mono<<% } %><%= asEntity('User') %><% if(reactive) { %>><% } %> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-472-        val violations = validator.validate(user)
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-572-
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:573:    fun delete(user: <%= asEntity('User') %>)<% if(reactive) { %>: Mono<Void><% } %> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-574-        val batch = BatchStatement()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-591-    <%_ if(!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:592:    private fun findOneFromIndex(stmt: BoundStatement): Optional<<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-593-        val rs = session.execute(stmt)
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-615-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs:616:    private fun findOneFromIndex(stmt: BoundStatement): Mono<<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/repository/UserRepository.kt.ejs-617-        return session.execute(stmt).flatMap { rs -> rs.rows().next() }
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs:21:import <%= packageName %>.config.ANONYMOUS_USER
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs:22:import <%= packageName %>.config.audit.AuditEventConverter
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs:23:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/main/kotlin/package/repository/CustomAuditEventRepository.kt.ejs-24-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs:27:import <%= packageName %>.domain.PersistentToken
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs:28:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-29-<%_ if (databaseType !== 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-50-
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs:51:import <%= packageName %>.config.ID_DELIMITER
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-52-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-109-
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs:110:    fun findByUser( user: <%= asEntity('User') %>): MutableList<PersistentToken> {
/src/generators/server/templates/src/main/kotlin/package/repository/PersistentTokenRepository.kt.ejs-111-        val stmt = findPersistentTokenSeriesByUserIdStmt.bind()
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/N1qlCouchbaseRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/N1qlCouchbaseRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/N1qlCouchbaseRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs:19:package <%= packageName %>.repository.search
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs-22-<%_ if (reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs-41- */
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs:42:interface UserSearchRepository : <% if (reactive) {%>Reactive<% } %>ElasticsearchRepository<<%= asEntity('User') %>, <% if (databaseType === 'sql' && authenticationType !== 'oauth2') { %>Long<% } %><% if (['cassandra', 'mongodb', 'neo4j'].includes(databaseType) || authenticationType === 'oauth2') { %>String<% } %>><% if (reactive) {%>, UserSearchRepositoryInternal<% } %>
/src/generators/server/templates/src/main/kotlin/package/repository/search/UserSearchRepository.kt.ejs-43-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/search/SearchCouchbaseRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/search/SearchCouchbaseRepository.kt.ejs:19:package <%= packageName %>.repository.search
/src/generators/server/templates/src/main/kotlin/package/repository/search/SearchCouchbaseRepository.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs:21:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-22-<%_ if (!reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-61-
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs:62:    @Query("INSERT INTO <%= jhiTablePrefix %>_persistent_audit_evt_data VALUES(:eventId, :name, :value)")
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-63-    fun savePersistenceAuditEventData(eventId: Long, name: String, value: String): Mono<Void>
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-127-        val toDateLocal = LocalDateTime.ofInstant(toDate, ZoneOffset.UTC);
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs:128:        return databaseClient.execute("SELECT COUNT(DISTINCT event_id) FROM <%= jhiTablePrefix %>_persistent_audit_event " +
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-129-            "WHERE event_date > :fromDate AND event_date < :toDate")
##############################################
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-152-
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs:153:    private fun findAllEventData(id: Long): Mono<MutableMap<String, String?>> = databaseClient.select().from("<%= jhiTablePrefix %>_persistent_audit_evt_data")
/src/generators/server/templates/src/main/kotlin/package/repository/PersistenceAuditEventRepository.kt.ejs-154-        .project("name", "value")
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs-27-@Configuration
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs:28:@EnableFeignClients(basePackages = ["<%= packageName %>"])
/src/generators/server/templates/src/main/kotlin/package/config/FeignConfiguration.kt.ejs-29-@Import(FeignClientsConfiguration::class)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/audit/AuditEventConverter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/audit/AuditEventConverter.kt.ejs:19:package <%= packageName %>.config.audit
/src/generators/server/templates/src/main/kotlin/package/config/audit/AuditEventConverter.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/audit/AuditEventConverter.kt.ejs:21:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/main/kotlin/package/config/audit/AuditEventConverter.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs-29-const val ANONYMOUS_USER: String = "anonymoususer"
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs:30:const val DEFAULT_LANGUAGE: String = "<%= nativeLanguage %>"
/src/generators/server/templates/src/main/kotlin/package/config/Constants.kt.ejs-31-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/LocaleConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/LocaleConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/LocaleConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:19:package <%= packageName %>.config.oauth2
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:21:import <%= packageName %>.security.oauth2.CookieTokenExtractor
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:22:import <%= packageName %>.security.oauth2.OAuth2AuthenticationService
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:23:import <%= packageName %>.security.oauth2.OAuth2CookieHelper
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:24:import <%= packageName %>.security.oauth2.OAuth2TokenEndpointClient
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs:25:import <%= packageName %>.web.filter.RefreshTokenFilterConfigurer
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2AuthenticationConfiguration.kt.ejs-26-import org.springframework.context.annotation.Bean
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2Properties.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2Properties.kt.ejs:19:package <%= packageName %>.config.oauth2
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2Properties.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2JwtAccessTokenConverter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2JwtAccessTokenConverter.kt.ejs:19:package <%= packageName %>.config.oauth2
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2JwtAccessTokenConverter.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2JwtAccessTokenConverter.kt.ejs:21:import <%= packageName %>.security.oauth2.OAuth2SignatureVerifierClient
/src/generators/server/templates/src/main/kotlin/package/config/oauth2/OAuth2JwtAccessTokenConverter.kt.ejs-22-import org.slf4j.LoggerFactory
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/AsyncConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/AsyncConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/AsyncConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/UaaProperties.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/UaaProperties.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/UaaProperties.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/LoggingConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/LoggingConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/LoggingConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs-23-/**
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs:24: * Properties specific to <%= humanizedBaseName %>.
/src/generators/server/templates/src/main/kotlin/package/config/ApplicationProperties.kt.ejs-25- *
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/LoggingAspectConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/LoggingAspectConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/LoggingAspectConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/LoggingAspectConfiguration.kt.ejs:21:import <%= packageName %>.aop.logging.LoggingAspect
/src/generators/server/templates/src/main/kotlin/package/config/LoggingAspectConfiguration.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheFactoryConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheFactoryConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/CacheFactoryConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-22-
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs:23:import <%= packageName %>.gateway.accesscontrol.AccessControlFilter
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs:24:import <%= packageName %>.gateway.responserewriting.SwaggerBasePathRewritingFilter
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-25-<%_ if (cacheProvider === 'hazelcast') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs:26:import <%= packageName %>.gateway.ratelimiting.RateLimitingFilter
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-27-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-54-     *
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs:55:     * This uses Bucket4J to limit the API calls, see [<%= packageName %>.gateway.ratelimiting.RateLimitingFilter].
/src/generators/server/templates/src/main/kotlin/package/config/GatewayConfiguration.kt.ejs-56-     */
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/cassandra/CassandraConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/cassandra/CassandraConfiguration.kt.ejs:19:package <%= packageName %>.config.cassandra
/src/generators/server/templates/src/main/kotlin/package/config/cassandra/CassandraConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ElasticsearchConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/ElasticsearchConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/ElasticsearchConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/KafkaProperties.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/KafkaProperties.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/KafkaProperties.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/JacksonConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/JacksonConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/JacksonConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-21-_%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:22:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-23-
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:24:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-25-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:26:import <%= packageName %>.security.extractAuthorityFromClaims
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-27-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-28-<%_ if (authenticationType === 'jwt') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:29:import <%= packageName %>.security.jwt.JWTFilter
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:30:import <%= packageName %>.security.jwt.TokenProvider
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-31-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-33-    <%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:34:import <%= packageName %>.security.oauth2.AudienceValidator
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:35:import <%= packageName %>.security.oauth2.JwtGrantedAuthorityConverter
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-36-    <%_ if (withAudit) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:37:import <%= packageName %>.service.AuditEventService
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-38-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-42-    <%_ if (!skipUserManagement && withAudit) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:43:import <%= packageName %>.service.AuditEventService
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-44-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-54-<%_ if (!skipClient) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs:55:import <%= packageName %>.web.filter.SpaWebFilter
/src/generators/server/templates/src/main/kotlin/package/config/ReactiveSecurityConfiguration.kt.ejs-56-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DateTimeFormatConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/DateTimeFormatConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/DateTimeFormatConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/UaaConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/UaaConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/UaaConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/UaaConfiguration.kt.ejs:21:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/UaaConfiguration.kt.ejs-22-import io.github.jhipster.config.JHipsterProperties
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/metrics/CassandraHealthIndicator.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/metrics/CassandraHealthIndicator.kt.ejs:19:package <%= packageName %>.config.metrics
/src/generators/server/templates/src/main/kotlin/package/config/metrics/CassandraHealthIndicator.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/metrics/JHipsterHealthIndicatorConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/metrics/JHipsterHealthIndicatorConfiguration.kt.ejs:19:package <%= packageName %>.config.metrics
/src/generators/server/templates/src/main/kotlin/package/config/metrics/JHipsterHealthIndicatorConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-20-<%_ if (databaseType === 'mongodb') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-70-<%_ if (databaseType === 'mongodb') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs:71:@Enable<% if (reactive) { %>Reactive<% } %>MongoRepositories("<%= packageName %>.repository")
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-72-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-121-            // package to scan for migrations
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs:122:            setChangeLogsScanPackage("<%= packageName %>.config.dbmigrations")
/src/generators/server/templates/src/main/kotlin/package/config/CloudDatabaseConfiguration.kt.ejs-123-            isEnabled = true
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:19:package <%= packageName %>.config.dbmigrations
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:21:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:22:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:23:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:24:import <%= packageName %>.security.USER
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-25-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-53-
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:54:        val systemUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-55-            id = "user-0",
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-70-
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:71:        val anonymousUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-72-            id = "user-1",
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-86-
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:87:        val adminUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-88-            id = "user-2",
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-103-
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs:104:        val userUser = <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/config/dbmigrations/InitialSetupMigration.kt.ejs-105-            id = "user-3",
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/SwaggerConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/SwaggerConfiguration.kt.ejs:19:package <%= packageName %>.config.apidoc
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/SwaggerConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/GatewaySwaggerResourcesProvider.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/GatewaySwaggerResourcesProvider.kt.ejs:19:package <%= packageName %>.config.apidoc
/src/generators/server/templates/src/main/kotlin/package/config/apidoc/GatewaySwaggerResourcesProvider.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/UaaWebSecurityConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/UaaWebSecurityConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/UaaWebSecurityConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-57-<%_ if (springFox3) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs:58:            .apis(RequestHandlerSelectors.basePackage("<%= packageName %>.web.api").negate())
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-59-<%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs:60:            .apis(Predicates.not(RequestHandlerSelectors.basePackage("<%= packageName %>.web.api")))
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-61-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-94-            .select()
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs:95:            .apis(RequestHandlerSelectors.basePackage("<%= packageName %>.web.api"))
/src/generators/server/templates/src/main/kotlin/package/config/OpenApiConfiguration.kt.ejs-96-            .paths(regex(properties.defaultIncludePattern))
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/RestTemplateConfiguration.kt.ejs:1:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/RestTemplateConfiguration.kt.ejs-2-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-21-<%_ if (authenticationType === 'session' || authenticationType === 'jwt' || authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:22:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-23-    <%_ if (authenticationType === 'oauth2' && applicationType !== 'microservice') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:24:import <%= packageName %>.security.extractAuthorityFromClaims
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-25-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-26-    <%_ if (authenticationType === 'jwt') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:27:import <%= packageName %>.security.jwt.JWTConfigurer
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:28:import <%= packageName %>.security.jwt.TokenProvider
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-29-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-67-    <%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:68:import <%= packageName %>.security.oauth2.AudienceValidator
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-69-import org.springframework.security.authentication.AbstractAuthenticationToken
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-77-        <%_ if (applicationType === 'gateway' && serviceDiscoveryType) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:78:import <%= packageName %>.security.oauth2.AuthorizationHeaderFilter
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:79:import <%= packageName %>.security.oauth2.AuthorizationHeaderUtil
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-80-        <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-99-    <%_ if (authenticationType === 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:100:import <%= packageName %>.security.oauth2.JwtGrantedAuthorityConverter
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-101-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-334-<%_ if (authenticationType === 'uaa') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:335:import <%= packageName %>.config.oauth2.OAuth2JwtAccessTokenConverter
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:336:import <%= packageName %>.config.oauth2.OAuth2Properties
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:337:import <%= packageName %>.security.oauth2.OAuth2SignatureVerifierClient
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs:338:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/SecurityConfiguration.kt.ejs-339-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-82-    <%_ if (!skipUserManagement || (authenticationType === 'oauth2' && databaseType !== 'no')) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:83:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-84-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-229-            <%_ if (!skipUserManagement || (authenticationType === 'oauth2' && databaseType !== 'no')) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:230:            createCache(cm, <%= packageName %>.repository.UserRepository.USERS_BY_LOGIN_CACHE)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:231:            createCache(cm, <%= packageName %>.repository.UserRepository.USERS_BY_EMAIL_CACHE)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-232-                <%_ if (enableHibernateCache) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:233:            createCache(cm, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:234:            createCache(cm, <%= packageName %>.domain.Authority::class.java.name)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:235:            createCache(cm, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name + ".authorities")
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-236-                    <%_ if (authenticationType === 'session') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:237:            createCache(cm, <%= packageName %>.domain.PersistentToken::class.java.name)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:238:            createCache(cm, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name + ".persistentTokens")
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-239-                    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-276-        log.debug("Configuring Hazelcast")
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:277:        val hazelCastInstance = Hazelcast.getHazelcastInstanceByName("<%=baseName%>")
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-278-        if (hazelCastInstance != null) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-282-        val config = Config()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:283:        config.instanceName = "<%=baseName%>"
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-284-        <%_ if (serviceDiscoveryType === 'eureka' || serviceDiscoveryType === 'consul') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-332-        <%_ if (enableHibernateCache) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:333:        config.mapConfigs["<%= packageName %>.domain.*"] = initializeDomainMapConfig(jHipsterProperties)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-334-        <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-412-                GlobalConfigurationBuilder
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:413:                    .defaultClusteredBuilder().defaultCacheName("infinispan-<%=baseName%>-cluster-cache").transport().defaultTransport()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-414-                    .addProperty("configurationFile", jHipsterProperties.cache.infinispan.configFile)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:415:                    .clusterName("infinispan-<%=baseName%>-cluster").jmx()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-416-                    .enabled(jHipsterProperties.cache.infinispan.isStatsEnabled)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-421-            GlobalConfigurationBuilder
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:422:                .defaultClusteredBuilder().defaultCacheName("infinispan-<%=baseName%>-cluster-cache").transport()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-423-                .transport(JGroupsTransport())
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:424:                .clusterName("infinispan-<%=baseName%>-cluster").jmx()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-425-                .enabled(jHipsterProperties.cache.infinispan.isStatsEnabled)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-430-              GlobalConfigurationBuilder
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:431:                  .defaultClusteredBuilder().defaultCacheName("infinispan-<%=baseName%>-cluster-cache").transport()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-432-                  .transport(JGroupsTransport(getTransportChannel()))
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:433:                  .clusterName("infinispan-<%=baseName%>-cluster").jmx()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-434-                  .enabled(jHipsterProperties.cache.infinispan.isStatsEnabled)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-440-            GlobalConfigurationBuilder
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:441:                .defaultClusteredBuilder().defaultCacheName("infinispan-<%=baseName%>-cluster-cache").transport().defaultTransport()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-442-                .addProperty("configurationFile", jHipsterProperties.cache.infinispan.configFile)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:443:                .clusterName("infinispan-<%=baseName%>-cluster").jmx()
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-444-                .enabled(jHipsterProperties.cache.infinispan.isStatsEnabled)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-516-            <%_ if (!skipUserManagement || (authenticationType === 'oauth2' && databaseType !== 'no')) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:517:            Stream.of(<%= packageName %>.repository.UserRepository.USERS_BY_LOGIN_CACHE, <%= packageName %>.repository.UserRepository.USERS_BY_EMAIL_CACHE)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-518-                .forEach { cacheName -> manager.defineConfiguration(cacheName, ConfigurationBuilder().clustering()
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-741-            <%_ if (!skipUserManagement || (authenticationType === 'oauth2' && databaseType !== 'no')) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:742:            createCache(it, <%= packageName %>.repository<% if (reactive) { %>.reactive<% } %>.UserRepository.USERS_BY_LOGIN_CACHE, jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:743:            createCache(it, <%= packageName %>.repository<% if (reactive) { %>.reactive<% } %>.UserRepository.USERS_BY_EMAIL_CACHE, jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-744-                <%_ if (enableHibernateCache) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:745:            createCache(it, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name, jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:746:            createCache(it, <%= packageName %>.domain.Authority::class.java.name, jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:747:            createCache(it, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name + ".authorities", jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-748-                    <%_ if (authenticationType === 'session') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:749:            createCache(it, <%= packageName %>.domain.PersistentToken::class.java.name, jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs:750:            createCache(it, <%= packageName %>.domain.<%= asEntity('User') %>::class.java.name + ".persistentTokens", jcacheConfiguration)
/src/generators/server/templates/src/main/kotlin/package/config/CacheConfiguration.kt.ejs-751-                    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/ReactorConfiguration.kt.ejs:1:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/ReactorConfiguration.kt.ejs-2-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/StaticResourcesWebConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/StaticResourcesWebConfiguration.kt.ejs:19:package <%=packageName%>.config
/src/generators/server/templates/src/main/kotlin/package/config/StaticResourcesWebConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketConfiguration.kt.ejs:21:import <%= packageName %>.security.ANONYMOUS
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketConfiguration.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs-30-<%_ if (applicationType === 'microservice' && cacheProvider !== 'no') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs:31:import <%= packageName %>.security.oauth2.CachedUserInfoTokenServices
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs-32-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs:33:import <%= packageName %>.security.oauth2.SimpleAuthoritiesExtractor
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs:34:import <%= packageName %>.security.oauth2.SimplePrincipalExtractor
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2TokenServicesConfiguration.kt.ejs-35-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/LiquibaseConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/LiquibaseConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/LiquibaseConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs:19:package <%= packageName %>.config.neo4j
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs-57-
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs:58:            val userLabel = "<%= jhiTablePrefix %>_user"
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs:59:            val authorityLabel = "<%= jhiTablePrefix %>_authority"
/src/generators/server/templates/src/main/kotlin/package/config/neo4j/Neo4jMigrations.kt.ejs-60-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-35-import com.github.couchmove.Couchmove
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:36:import <%= packageName %>.repository.Custom<% if (reactive) { %>Reactive<% } %>N1qlCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-37-    <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:38:import <%= packageName %>.repository.<% if (reactive) { %>Reactive<% } %>N1qlCouchbaseRepository
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-39-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-135-    <%_ if (reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:136:@EnableR2dbcRepositories("<%= packageName %>.repository")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-137-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:138:@EnableJpaRepositories("<%= packageName %>.repository")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-139-@EnableJpaAuditing(auditorAwareRef = "springSecurityAuditorAware")
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-144-    <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:145:@Enable<% if (reactive) { %>Reactive<% } %>Neo4jRepositories(basePackages = ["<%= packageName %>.repository"], includeFilters = [ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = <% if (reactive) { %>Reactive<% } %>Neo4jRepository::class])])
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-146-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:147:@Enable<% if (reactive) { %>Reactive<% } %>Neo4jRepositories("<%= packageName %>.repository")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-148-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-150-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:151:@Enable<% if (reactive) { %>Reactive<% } %>ElasticsearchRepositories("<%= packageName %>.repository.search")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-152-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-154-    <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:155:@Enable<% if (reactive) { %>Reactive<% } %>MongoRepositories(basePackages = ["<%= packageName %>.repository"], includeFilters = [ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = [<% if (reactive) { %>Reactive<% } %>MongoRepository::class])])
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-156-    <%_ } else { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:157:@Enable<% if (reactive) { %>Reactive<% } %>MongoRepositories("<%= packageName %>.repository")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-158-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-171-<%_ if (databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:172:@Enable<% if (reactive) { %>Reactive<% } %>CouchbaseRepositories(repositoryBaseClass = Custom<% if (reactive) { %>Reactive<% } %>N1qlCouchbaseRepository::class, basePackages = ["<%= packageName %>.repository"]<%_ if (searchEngine === 'elasticsearch') { %>,
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-173-    includeFilters = [ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = [<% if (reactive) { %>Reactive<% } %>N1qlCouchbaseRepository::class])]<%_ } _%>)
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-248-            // package to scan for migrations
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs:249:            setChangeLogsScanPackage("<%= packageName %>.config.dbmigrations")
/src/generators/server/templates/src/main/kotlin/package/config/DatabaseConfiguration.kt.ejs-250-            isEnabled = true
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketSecurityConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketSecurityConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketSecurityConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketSecurityConfiguration.kt.ejs:21:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/WebsocketSecurityConfiguration.kt.ejs-22-import org.springframework.context.annotation.Configuration
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2SsoConfiguration.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2SsoConfiguration.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2SsoConfiguration.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2SsoConfiguration.kt.ejs:21:import <%= packageName %>.security.ADMIN
/src/generators/server/templates/src/main/kotlin/package/config/OAuth2SsoConfiguration.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs:19:package <%= packageName %>.config
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-168-            val prefixPath = resolvePathPrefix()
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs:169:            val root = File(prefixPath + "<%= CLIENT_DIST_DIR %>")
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-170-            if (root.exists() && root.isDirectory) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-188-        val extractedPath = fullExecutablePath.replace(rootPath, "")
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs:189:        val extractionEndIndex = extractedPath.indexOf("<%= BUILD_DIR %>")
/src/generators/server/templates/src/main/kotlin/package/config/WebConfigurer.kt.ejs-190-        if (extractionEndIndex <= 0) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:19:package <%= packageName %>.service.mapper
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-21-<%_ if (databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:22:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-23-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:24:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:25:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-26-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-29-/**
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:30: * Mapper for the entity [<%= asEntity('User') %>] and its DTO called [<%= asDto('User') %>].
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-31- *
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-37-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:38:    fun usersToUserDTOs(users: List<<%= asEntity('User') %>?>): MutableList<<%= asDto('User') %>> =
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-39-        users.asSequence()
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-42-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:43:    fun userToUserDTO(user: <%= asEntity('User') %>): <%= asDto('User') %> = <%= asDto('User') %>(user)
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-44-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:45:    fun userDTOsToUsers(userDTOs: List<<%= asDto('User') %>?>) =
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-46-        userDTOs.asSequence()
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-48-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:49:    fun userDTOToUser(userDTO: <%= asDto('User') %>?) =
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-50-        when (userDTO) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-52-            else -> {
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:53:                <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-54-                    id = userDTO.id,
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-83-
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs:84:    fun userFromId(id: <% if (databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase' || databaseType === 'cassandra' || authenticationType === 'oauth2') { %>String<% } else { %>Long<% } %>?) = id?.let { <%= asEntity('User') %>(id = it) }
/src/generators/server/templates/src/main/kotlin/package/service/mapper/UserMapper.kt.ejs-85-}
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-21-import io.github.jhipster.config.JHipsterProperties
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs:22:import <%= packageName %>.config.audit.AuditEventConverter
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-23-<%_ if (reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs:24:import <%= packageName %>.domain.PersistentAuditEvent
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-25-import reactor.core.publisher.toFlux
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs:27:import <%= packageName %>.repository.PersistenceAuditEventRepository
/src/generators/server/templates/src/main/kotlin/package/service/AuditEventService.kt.ejs-28-import org.slf4j.Logger
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/dto/PasswordChangeDTO.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/dto/PasswordChangeDTO.kt.ejs:19:package <%= packageName %>.service.dto
/src/generators/server/templates/src/main/kotlin/package/service/dto/PasswordChangeDTO.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:19:package <%= packageName %>.service.dto
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:21:import <%= packageName %>.config.LOGIN_REGEX
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-22-<%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:23:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-24-<%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-37- */
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:38:open class <%= asDto('User') %>(
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-39-    var id: <% if (databaseType === 'mongodb' || databaseType === 'couchbase' || databaseType === 'neo4j' || databaseType === 'cassandra' || authenticationType === 'oauth2') { %>String<% } else { %>Long<% } %>? = null,
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-79-    <%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:80:    constructor(user: <%= asEntity('User') %>) :
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-81-        this(
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-92-
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs:93:    override fun toString() = "<%= asDto('User') %>{" +
/src/generators/server/templates/src/main/kotlin/package/service/dto/UserDTO.kt.ejs-94-        "login='" + login + '\'' +
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/InvalidPasswordException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/InvalidPasswordException.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/InvalidPasswordException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:21:import <%= packageName %>.config.ANONYMOUS_USER
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:22:import <%= packageName %>.config.DEFAULT_LANGUAGE
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:23:import <%= packageName %>.config.SYSTEM_ACCOUNT
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-24-<%_ if (databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:25:import <%= packageName %>.domain.Authority
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-26-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-27-<%_ if (databaseType !== 'no') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:28:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-29-    <%_ if (databaseType === 'sql' || databaseType === 'mongodb' || databaseType === 'neo4j' || databaseType === 'couchbase') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:30:import <%= packageName %>.repository.AuthorityRepository
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-31-        <%_ if (authenticationType === 'session' && !reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:32:import <%= packageName %>.repository.PersistentTokenRepository
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-33-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-34-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:35:import <%= packageName %>.repository.UserRepository
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-36-    <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:37:import <%= packageName %>.repository.search.UserSearchRepository
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-38-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-39-    <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:40:import <%= packageName %>.security.USER
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-41-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:42:import <%= packageName %>.security.getCurrentUserLogin
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-43-<%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:44:import <%= packageName %>.service.dto.<%= asDto('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-45-<%_ if (authenticationType !== 'oauth2') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-127-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:128:    fun activateRegistration(key: String): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-129-        log.debug("Activating user for activation key $key")
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-163-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:164:    fun completePasswordReset(newPassword: String, key: String): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-165-        log.debug("Reset user password for reset key $key")
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-196-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:197:    fun requestPasswordReset(mail: String): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-198-        return userRepository.findOneByEmailIgnoreCase(mail)
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-199-            <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:200:            .filter(<%= asEntity('User') %>::activated)
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-201-            .map {
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-226-    <%_ } _%>   
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:227:    fun registerUser(userDTO: <%= asDto('User') %>, password: String): <% if (reactive) { %>Mono<<%= asEntity('User') %>><% } else { %><%= asEntity('User') %><% } %> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-228-        val login = userDTO.login ?: throw IllegalArgumentException("Empty login not allowed")
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-242-        }
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:243:        val newUser = <%= asEntity('User') %>()
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-244-        <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-303-            .then(Mono.fromCallable {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:304:                <%= asEntity('User') %>().apply {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-305-                    <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-349-    <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:350:    private fun removeNonActivatedUser(existingUser: <%= asEntity('User') %>): Boolean {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-351-        if (existingUser.activated) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-367-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:368:    fun createUser(userDTO: <%= asDto('User') %>): <% if (reactive) { %>Mono<<%= asEntity('User') %>><% } else { %><%= asEntity('User') %><% } %> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:369:        val user = <%= asEntity('User') %>(
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-370-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-444-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:445:    fun updateUser(userDTO: <%= asDto('User') %>): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asDto('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-446-        <%_ if (!reactive) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-447-        return Optional.of(userRepository.findById(userDTO.id!!))
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:448:            .filter(Optional<<%= asEntity('User') %>>::isPresent)
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-449-            .map { it.get() }
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-519-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:520:            .map { <%= asDto('User') %>(it) }
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-521-    }
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-614-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:615:        <% if (databaseType !== 'sql') { %>private <% } %> fun saveUser(user: <%= asEntity('User') %><% if (databaseType === 'sql' && authenticationType === 'oauth2') { %>, forceCreate: boolean<% } %>): Mono<<%= asEntity('User') %>> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-616-            <%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-693-    <%_ if (['sql', 'mongodb', 'neo4j', 'couchbase'].includes(databaseType)) { _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:694:    fun getAllManagedUsers(pageable: Pageable): <% if (reactive) { %>Flux<% } else { %>Page<% } %><<%= asDto('User') %>> =
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:695:        userRepository.findAllByLoginNot(pageable, ANONYMOUS_USER).map { <%= asDto('User') %>(it) }
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-696-        <%_ if (reactive) { _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-705-            .filter { ANONYMOUS_USER != it.login }
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:706:            .map { <%= asDto('User') %>(it) }
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-707-    <%_ } _%>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-711-    <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:712:    fun getUserWithAuthoritiesByLogin(login: String): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asEntity('User') %>> =
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-713-        userRepository.<% if (databaseType === 'sql') { %>findOneWithAuthoritiesByLogin(login)<% } else { %>findOneByLogin(login)<% } %>
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-718-        <%_ } _%>
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:719:    fun getUserWithAuthorities(): <% if (reactive) { %>Mono<% } else { %>Optional<% } %><<%= asEntity('User') %>> =
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-720-        getCurrentUserLogin().flatMap(userRepository::findOne<% if (databaseType === 'sql') { %>WithAuthorities<% } %>ByLogin)
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-797-
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:798:    private fun syncUserWithIdP(details: Map<String, Any>, user: <%= asEntity('User') %>): <% if (reactive) { %>Mono<<%= asEntity('User') %>><% } else { %><%= asEntity('User') %><% } %> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-799-        // save authorities in to sync user roles/groups between IdP and JHipster's local database
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-910-
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:911:    private fun clearUserCaches(user: <%= asEntity('User') %>) {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-912-        cacheManager.getCache(UserRepository.USERS_BY_LOGIN_CACHE)?.evict(user.login!!)
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-922-        @JvmStatic
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:923:        private fun getUser(details: Map<String, Any>): <%= databaseType === 'no' ? asDto('User') : asEntity('User') %> {
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs:924:            val user = <%= databaseType === 'no' ? asDto('User') : asEntity('User') %>()
/src/generators/server/templates/src/main/kotlin/package/service/UserService.kt.ejs-925-            // handle resource server JWT, where sub claim is email and uid is ID
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/UsernameAlreadyUsedException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/UsernameAlreadyUsedException.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/UsernameAlreadyUsedException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/EmailAlreadyUsedException.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/EmailAlreadyUsedException.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/EmailAlreadyUsedException.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:19:package <%= packageName %>.service
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity('User') %>
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-22-
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-86-    @Async
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:87:    fun sendEmailFromTemplate(user: <%= asEntity('User') %>, templateName: String, titleKey: String) {
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-88-        if (user.email == null) {
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-103-    @Async
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:104:    fun sendActivationEmail(user: <%= asEntity('User') %>) {
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-105-        log.debug("Sending activation email to '${user.email}'")
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-109-    @Async
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:110:    fun sendCreationEmail(user: <%= asEntity('User') %>) {
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-111-        log.debug("Sending creation email to '${user.email}'")
##############################################
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-115-    @Async
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs:116:    fun sendPasswordResetMail(user: <%= asEntity('User') %>) {
/src/generators/server/templates/src/main/kotlin/package/service/MailService.kt.ejs-117-        log.debug("Sending password reset email to '${user.email}'")
##############################################
/src/generators/server/templates/src/main/kotlin/package/gateway/accesscontrol/AccessControlFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/gateway/accesscontrol/AccessControlFilter.kt.ejs:19:package <%= packageName %>.gateway.accesscontrol
/src/generators/server/templates/src/main/kotlin/package/gateway/accesscontrol/AccessControlFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilter.kt.ejs:19:package <%= packageName %>.gateway.responserewriting
/src/generators/server/templates/src/main/kotlin/package/gateway/responserewriting/SwaggerBasePathRewritingFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/gateway/TokenRelayFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/gateway/TokenRelayFilter.kt.ejs:19:package <%= packageName %>.gateway
/src/generators/server/templates/src/main/kotlin/package/gateway/TokenRelayFilter.kt.ejs-20-
##############################################
/src/generators/server/templates/src/main/kotlin/package/gateway/ratelimiting/RateLimitingFilter.kt.ejs-18--%>
/src/generators/server/templates/src/main/kotlin/package/gateway/ratelimiting/RateLimitingFilter.kt.ejs:19:package <%= packageName %>.gateway.ratelimiting
/src/generators/server/templates/src/main/kotlin/package/gateway/ratelimiting/RateLimitingFilter.kt.ejs-20-
/src/generators/server/templates/src/main/kotlin/package/gateway/ratelimiting/RateLimitingFilter.kt.ejs:21:import <%= packageName %>.security.getCurrentUserLogin
/src/generators/server/templates/src/main/kotlin/package/gateway/ratelimiting/RateLimitingFilter.kt.ejs-22-
##############################################
/src/generators/server/templates/gradle/kotlin.gradle.ejs-44-
/src/generators/server/templates/gradle/kotlin.gradle.ejs:45:    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:<%= MOCKITO_KOTLIN_VERSION %>"
/src/generators/server/templates/gradle/kotlin.gradle.ejs-46-}<%_ if (databaseType === 'sql') { %>
##############################################
/src/generators/server/templates/gradle/kotlin.gradle.ejs-55-    kotlinOptions {
/src/generators/server/templates/gradle/kotlin.gradle.ejs:56:    	jvmTarget = "<%= JAVA_VERSION %>"
/src/generators/server/templates/gradle/kotlin.gradle.ejs-57-        javaParameters = true
##############################################
/src/generators/server/templates/gradle/kotlin.gradle.ejs-69-    input = files("src/main/kotlin")
/src/generators/server/templates/gradle/kotlin.gradle.ejs:70:    config = files("<%= DETEKT_CONFIG_FILE %>")
/src/generators/server/templates/gradle/kotlin.gradle.ejs-71-    reports {
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-18--%>
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:19:package <%= packageName %>.domain
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-22-import org.assertj.core.api.Assertions.assertThat
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:23:import <%= packageName %>.web.rest.equalsVerifier
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-24-<%_
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-37-
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:38:class <%= entityClass %>Test {
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-39-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-41-    fun equalsVerifier() {
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:42:        equalsVerifier(<%= asEntity(entityClass) %>::class)
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-43-    <%_if (!embedded) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:44:        val <%= asEntity(entityInstance) %>1 = <%= asEntity(entityClass) %>()
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:45:        <%= asEntity(entityInstance) %>1.id = <% if (databaseType === 'sql' && hasOauthUser === true) { %>UUID.randomUUID().toString()<% } else if (databaseType === 'sql') { %>1L<% } else if (databaseType === 'mongodb' || databaseType === 'couchbase') { %>"id1"<% } else if (databaseType === 'cassandra') { %>UUID.randomUUID()<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:46:        val <%= asEntity(entityInstance) %>2 = <%= asEntity(entityClass) %>()
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:47:        <%= asEntity(entityInstance) %>2.id = <%= asEntity(entityInstance) %>1.id
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:48:        assertThat(<%= asEntity(entityInstance) %>1).isEqualTo(<%= asEntity(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:49:        <%= asEntity(entityInstance) %>2.id = <% if (databaseType === 'sql' && hasOauthUser === true) { %>UUID.randomUUID().toString()<% } else if (databaseType === 'sql') { %>2L<% } else if (databaseType === 'mongodb' || databaseType === 'couchbase') { %>"id2"<% } else if (databaseType === 'cassandra') { %>UUID.randomUUID()<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:50:        assertThat(<%= asEntity(entityInstance) %>1).isNotEqualTo(<%= asEntity(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:51:        <%= asEntity(entityInstance) %>1.id = null
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs:52:        assertThat(<%= asEntity(entityInstance) %>1).isNotEqualTo(<%= asEntity(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/domain/EntityTest.kt.ejs-53-    <%_} _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-18--%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-61-<%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:62:import <%= packageName %>.AbstractCassandraTest
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-63-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-64-<%_ if (cacheProvider === 'redis') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:65:import <%= packageName %>.RedisTestContainerExtension
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-66-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:67:import <%= packageName %>.<%= mainClass %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-68-<%_ if (authenticationType === 'uaa') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:69:import <%= packageName %>.config.SecurityBeanOverrideConfiguration
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-70-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-71-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:72:import <%= packageName %>.config.TestSecurityConfiguration
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-73-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:74:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-75-<%_
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-82-            if ((relationshipValidate !== null && relationshipValidate === true) || jpaMetamodelFiltering || (isUsingMapsIdL1 === true)) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:83:import <%= packageName %>.domain.<%= asEntity(otherEntityNameCapitalized) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-84-<%_         imported.push(otherEntityNameCapitalized);
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-86-<%_ if (saveUserSnapshot) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:87:import <%= packageName %>.repository.UserRepository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-88-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:89:import <%= packageName %>.repository.<%= entityClass %>Repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-90-<%_ if (isUsingMapsId === true && ( dto !== 'mapstruct' && service === 'no')) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:91:import <%= packageName %>.repository.<%= mapsIdAssoc.otherEntityNameCapitalized %>Repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-92-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-93-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:94:import <%= packageName %>.repository.search.<%= entityClass %>SearchRepository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-95-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-96-<%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:97:import <%= packageName %>.service.<%= entityClass %>Service
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-98-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-99-<%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:100:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:101:import <%= packageName %>.service.mapper.<%= entityClass %>Mapper
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-102-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:103:import <%= packageName %>.web.rest.errors.ExceptionTranslator
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-104-<%_ if (jpaMetamodelFiltering) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:105:import <%= packageName %>.service.dto.<%= entityClass %>Criteria
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:106:import <%= packageName %>.service.<%= entityClass %>QueryService
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-107-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-205-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:206:<%_ for (idx in fields) { if (fields[idx].fieldIsEnum === true) { _%>import <%= packageName %>.domain.enumeration.<%= fields[idx].fieldType %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-207-<%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-209-/**
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:210: * Integration tests for the [<%= entityClass %>Resource] REST controller.
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-211- *
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:212: * @see <%= entityClass %>Resource
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-213- */
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-214-<%_ if (authenticationType === 'oauth2') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:215:@SpringBootTest(classes = [<%= mainClass %>::class, TestSecurityConfiguration::class])
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-216-<%_ } else if (authenticationType === 'uaa' && applicationType !== 'uaa') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:217:@SpringBootTest(classes = [SecurityBeanOverrideConfiguration::class, <%= mainClass %>::class])
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-218-<%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:219:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-220-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-239-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:240:class <%= entityClass %>ResourceIT <% if (databaseType === 'cassandra') { %>: AbstractCassandraTest() <% } %> {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-241-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-242-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:243:    private lateinit var <%= entityInstance %>Repository: <%= entityClass %>Repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-244-    <%_ if (isUsingMapsId === true && ( dto !== 'mapstruct' && service === 'no')) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-245-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:246:    private lateinit var <%= mapsIdRepoInstance %>: <%=mapsIdEntity%>Repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-247-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-255-    @Mock
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:256:    private lateinit var <%= entityInstance %>RepositoryMock: <%= entityClass %>Repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-257-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-260-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:261:    private lateinit var <%= entityInstance %>Mapper: <%= entityClass %>Mapper
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-262-    <%_ } if (service !== 'no') { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-265-    @Mock
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:266:    private lateinit var <%= entityInstance %>ServiceMock: <%= entityClass %>Service
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-267-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-269-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:270:    private lateinit var <%= entityInstance %>Service: <%= entityClass %>Service
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-271-    <%_ } if (searchEngine === 'elasticsearch') { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-273-    /**
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:274:     * This repository is mocked in the <%= packageName %>.repository.search test package.
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-275-     *
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:276:     * @see <%= packageName %>.repository.search.<%=entityClass%>SearchRepositoryMockConfiguration
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-277-     */
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-278-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:279:    private lateinit var mock<%= entityClass %>SearchRepository: <%= entityClass %>SearchRepository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-280-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-283-    @Autowired
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:284:    private lateinit var <%= entityInstance %>QueryService: <%= entityClass %>QueryService
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-285-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-308-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:309:    private lateinit var rest<%= entityClass %>MockMvc: MockMvc
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-310-    <%_ } else { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-315-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:316:    private lateinit var <%= asEntity(entityInstance) %>: <%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-317-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-330-            <%_ if (service !== 'no') { _%>		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:331:        val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>Service<% if (jpaMetamodelFiltering) { %>, <%= entityInstance %>QueryService<% } %><% if (saveUserSnapshot) { %>, userRepository<% } %>)		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-332-            <%_ } else { _%>		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:333:        val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>Repository<% if (dto === 'mapstruct') { %>, <%= entityInstance %>Mapper<% } %><% if (searchEngine === 'elasticsearch') { %>, mock<%= entityClass %>SearchRepository<% } %><% if (saveUserSnapshot) { %>, userRepository<% } %><% if (isUsingMapsId === true && dto !== 'mapstruct') { %>, <%= mapsIdRepoInstance _%> <% } %>)		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-334-            <%_ } _%>		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:335:         this.rest<%= entityClass %>MockMvc = MockMvcBuilders.standaloneSetup(<%= entityInstance %>Resource)		
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-336-             .setCustomArgumentResolvers(pageableArgumentResolver)		
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-347-        <%_ if (databaseType === 'mongodb' || databaseType === 'couchbase' || databaseType === 'cassandra' || databaseType === 'neo4j' ) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:348:        <%= entityInstance %>Repository.deleteAll()<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-349-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:350:        <%= asEntity(entityInstance) %> = createEntity(<% if (databaseType === 'sql') { %>em<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-351-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-353-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:354:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-355-    @Throws(Exception::class)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:356:    fun create<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:357:        val databaseSizeBeforeCreate = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-358-        <%_ if (reactive && searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-359-        // Configure the mock search repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:360:        `when`(mock<%= entityClass %>SearchRepository.save(any(<%= entityClass %>::class.java)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:361:            .thenAnswer { Mono.just(it.arguments[0] as <%= entityClass %>) }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-362-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-363-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:364:        // Create the <%= entityClass %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-365-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:366:        val <%= asDto(entityInstance) %> = <%= entityInstance %>Mapper.toDto(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-367-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-368-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:369:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:370:            post("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-371-                .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-374-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:375:        webTestClient.post().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-376-            .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-381-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:382:        // Validate the <%= entityClass %> in the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-383-        <%_ if (databaseType === 'couchbase') { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-385-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:386:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:387:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeCreate + 1)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-388-        <%_ if ( fields.length>0  || searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:389:        val test<%= entityClass %> = <%= entityInstance %>List[<%= entityInstance %>List.size - 1]
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-390-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-391-        <%_ for (idx in fields) { if (fields[idx].fieldType === 'ZonedDateTime') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:392:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-393-        <%_ } else if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:394:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:395:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>ContentType).isEqualTo(<%='DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase()%>_CONTENT_TYPE)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-396-        <%_ } else if (fields[idx].fieldType.toLowerCase() === 'boolean') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:397:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-398-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:399:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-400-        <%_ }} _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-403-        // Validate the id for MapsId, the ids must be same
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:404:        assertThat(test<%= entityClass %>.id).isEqualTo(test<%= entityClass %>.<%= mapsIdEntityInstance %>?.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-405-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-407-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:408:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-409-            <%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:410:        verify(mock<%= entityClass %>SearchRepository, times(1)).save(test<%= entityClass %>);
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-411-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-414-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:415:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:416:    fun create<%= entityClass %>WithExistingId() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:417:        val databaseSizeBeforeCreate = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-418-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:419:        // Create the <%= entityClass %> with an existing ID
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:420:        <%= asEntity(entityInstance) %>.id = <% if (databaseType === 'sql' && hasOauthUser === true) { %>UUID.randomUUID().toString()<% } else if (databaseType === 'sql') { %>1L<% } else if (databaseType === 'mongodb' || databaseType === 'couchbase') { %>"existing_id"<% } else if (databaseType === 'cassandra') { %>UUID.randomUUID()<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-421-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:422:        val <%= asDto(entityInstance) %> = <%= entityInstance %>Mapper.toDto(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-423-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-426-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:427:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:428:            post("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-429-                .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-432-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:433:        webTestClient.post().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-434-            .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-439-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:440:        // Validate the <%= entityClass %> in the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:441:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:442:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeCreate)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-443-        <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-444-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:445:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:446:        verify(mock<%= entityClass %>SearchRepository, times(0)).save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-447-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-450-    <%_ if (databaseType === 'sql' && isUsingMapsId === true) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:451:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-452-    @Throws(Exception::class)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:453:    fun update<%= entityClass %>MapsIdAssociationWithNewId() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-454-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-455-<%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:456:        <%= entityInstance %>Service.save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-457-<%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:458:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-459-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-460-        <%_ const alreadyGeneratedEntities = []; _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:461:        val databaseSizeBeforeCreate = <%= entityInstance %>Repository.findAll().size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-462-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-470-                <%_ if (alreadyGeneratedEntities.indexOf(otherEntityName) == -1) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:471:        val <%= otherEntityName %> = <%= otherEntityNameCapitalized %>ResourceIT.createEntity(em)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:472:        em.persist(<%= otherEntityName %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-473-        em.flush()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-477-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:478:        // Load the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:479:        val updated<%= asEntity(entityClass) %> = <%= entityInstance %>Repository.findById(<%= asEntity(entityInstance) %>.id).get()<% if (databaseType === 'sql') { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:480:        // Disconnect from session so that the updates on updated<%= asEntity(entityClass) %> are not directly saved in db
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:481:        em.detach(updated<%= asEntity(entityClass) %>)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-482-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:483:        // Update the <%= mapsIdEntity %> with new association value
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:484:        updated<%= asEntity(entityClass) %>.<%= mapsIdEntityInstance %> = <%= alreadyGeneratedEntities.pop() %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-485-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:486:        val updated<%= asDto(entityClass) %> = <%= entityInstance %>Mapper.toDto(updated<%= asEntity(entityClass) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-487-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-489-        // Update the entity
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:490:        rest<%= entityClass %>MockMvc.perform(put("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-491-            .contentType(MediaType.APPLICATION_JSON)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:492:            .content(convertObjectToJsonBytes(<%_ if (dto === 'mapstruct') { _%>updated<%= asDto(entityClass) %> <%_ } else { _%> updated<%= asEntity(entityClass) %> <%_ } _%>)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-493-            .andExpect(status().isOk)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-494-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:495:        // Validate the <%= entityClass %> in the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:496:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:497:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeCreate)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:498:        val test<%= entityClass %> = <%= entityInstance %>List.get(<%= entityInstance %>List.size - 1)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-499-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-502-        // Please look at https://github.com/jhipster/generator-jhipster/issues/9100. You can modify this test as necessary.
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:503:        // assertThat(test<%= entityClass %>.id).isEqualTo(test<%= entityClass %>.<%= mapsIdEntityInstance %>?.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-504-        <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:505:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-506-            <%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:507:        verify(mock<%= entityClass %>SearchRepository, times(2)).save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-508-            <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:509:        verify(mock<%= entityClass %>SearchRepository, times(1)).save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-510-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-519-    if (required) { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:520:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:521:    fun check<%= fields[idx].fieldInJavaBeanMethod %>IsRequired() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:522:        val databaseSizeBeforeTest = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-523-        // set the field null
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:524:        <%= asEntity(entityInstance) %>.<%= fields[idx].fieldName %> = null
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-525-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:526:        // Create the <%= entityClass %>, which fails.<% if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:527:        val <%= asDto(entityInstance) %> = <%= entityInstance %>Mapper.toDto(<%= asEntity(entityInstance) %>)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-528-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-529-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:530:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:531:            post("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-532-                .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-535-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:536:        webTestClient.post().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-537-            .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-545-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:546:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:547:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeTest)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-548-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-552-    @Test
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:553:    fun getAll<%= entityClassPlural %>AsStream() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-554-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-555-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:556:        <%= asEntity(entityInstance) %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-557-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:558:        <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-559-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:560:        val <%= entityInstance %>List = webTestClient.get().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-561-            .accept(MediaType.APPLICATION_STREAM_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-564-            .expectHeader().contentTypeCompatibleWith(MediaType.APPLICATION_STREAM_JSON)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:565:            .returnResult(<%= dto !== 'no' ? asDto(entityClass) : asEntity(entityClass) %>::class.java)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-566-            .responseBody
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-567-            <%_ if (dto !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:568:            .map(<%= entityInstance %>Mapper::toEntity)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-569-            <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:570:            .filter(<%= asEntity(entityInstance) %>::equals)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-571-            .collectList()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-573-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:574:        assertThat(<%= entityInstance %>List).isNotNull
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:575:        assertThat(<%= entityInstance %>List).hasSize(1)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:576:        val test<%= entityClass %> = <%= entityInstance %>List[0]
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-577-        <%_ for (idx in fields) { if (fields[idx].fieldType === 'ZonedDateTime') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:578:        assertThat(test<%= entityClass %>.<%= fields[idx].fieldName %>).isEqualTo(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-579-        <%_ } else if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:580:        assertThat(test<%= entityClass %>.<%= fields[idx].fieldName %>).isEqualTo(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:581:        assertThat(test<%= entityClass %>.<%= fields[idx].fieldName %>ContentType).isEqualTo(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>_CONTENT_TYPE)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-582-        <%_ } else if (fields[idx].fieldType.toLowerCase() === 'boolean') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:583:        assertThat(test<%= entityClass %>.<%= fields[idx].fieldName %>).isEqualTo(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-584-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:585:        assertThat(test<%= entityClass %>.<%= fields[idx].fieldName %>).isEqualTo(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-586-        <%_ }} _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-588-<%_  } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:589:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-590-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:591:    fun getAll<%= entityClassPlural %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-592-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-593-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:594:        <%= asEntity(entityInstance) %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-595-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:596:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-597-        
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-598-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:599:        // Get all the <%= entityInstance %>List
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:600:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %><% if (databaseType !== 'cassandra') { %>?sort=id,desc<% } %>"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-601-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-603-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:604:        webTestClient.get().uri("/api/<%= entityApiUrl %>?sort=id,desc")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-605-            .accept(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-612-        _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:613:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].id").value(hasItem(<%= idValue %>))<%= !reactive ? ')' : '' %><%_ } _%><% for (idx in fields) { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-614-            <%_ if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:615:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].<%= fields[idx].fieldName %>ContentType").value(hasItem(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>_CONTENT_TYPE))<%= !reactive ? ')' : '' %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-616-            <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:617:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].<%= fields[idx].fieldName %>").value(hasItem(<% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %>Base64Utils.encodeToString(<% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>sameInstant(<% } %><%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %><% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %><% if (databaseType === 'cassandra') { %>.array()<% } %>)<% } else if (fields[idx].fieldType === 'Integer') { %><% } else if (fields[idx].fieldType === 'Long') { %>?.toInt()<% } else if (fields[idx].fieldType === 'Float' || fields[idx].fieldType === 'Double') { %>.toDouble()<% } else if (fields[idx].fieldType === 'BigDecimal') { %>?.toInt()<% } else if (fields[idx].fieldType === 'Boolean') { %><% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>)<% } else if (fields[idx].fieldType !== 'String') { %>.toString()<% } %>))<%= !reactive ? ')' : '' %><%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-618-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-621-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:622:    fun getAll<%= entityClassPlural %>WithEagerRelationshipsIsEnabled() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-623-        <%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:624:        val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>ServiceMock<% if (jpaMetamodelFiltering) { %>, <%= entityInstance %>QueryService<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:625:        `when`(<%= entityInstance %>ServiceMock.findAllWithEagerRelationships(any())).thenReturn(<% if (!reactive) { %>PageImpl(mutableListOf())<% } else { %>Flux.empty()<% }%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-626-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:627:        val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>RepositoryMock<% if (dto === 'mapstruct') { %>, <%= entityInstance %>Mapper<% } %><% if (searchEngine === 'elasticsearch') { %>, mock<%= entityClass %>SearchRepository<% } %><% if (saveUserSnapshot) { %>, userRepository<% } %><% if (isUsingMapsId === true && dto !== 'mapstruct') { %>, <%= mapsIdRepoInstance _%> <% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:628:        `when`(<%= entityInstance %>RepositoryMock.findAllWithEagerRelationships(any())).thenReturn(<% if (!reactive) { %>PageImpl(mutableListOf())<% } else { %>Flux.empty()<% }%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-629-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-631-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:632:        val rest<%= entityClass %>MockMvc = MockMvcBuilders.standaloneSetup(<%= entityInstance %>Resource)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-633-            .setCustomArgumentResolvers(pageableArgumentResolver)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-637-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:638:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>?eagerload=true"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-639-            .andExpect(status().isOk)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-640-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:641:        webTestClient.get().uri("/api/<%= entityApiUrl %>?eagerload=true")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-642-            .exchange()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-646-        <%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:647:        verify(<%= entityInstance %>ServiceMock, times(1)).findAllWithEagerRelationships(any())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-648-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:649:        verify(<%= entityInstance %>RepositoryMock, times(1)).findAllWithEagerRelationships(any())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-650-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-654-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:655:    fun getAll<%= entityClassPlural %>WithEagerRelationshipsIsNotEnabled() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-656-        <%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:657:        val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>ServiceMock<% if (jpaMetamodelFiltering) { %>, <%= entityInstance %>QueryService<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:658:        `when`(<%= entityInstance %>ServiceMock.findAllWithEagerRelationships(any())).thenReturn(<% if (!reactive) { %>PageImpl(mutableListOf())<% } else { %>Flux.empty()<% }%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-659-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:660:            val <%= entityInstance %>Resource = <%= entityClass %>Resource(<%= entityInstance %>RepositoryMock<% if (dto === 'mapstruct') { %>, <%= entityInstance %>Mapper<% } %><% if (searchEngine === 'elasticsearch') { %>, mock<%= entityClass %>SearchRepository<% } %><% if (saveUserSnapshot) { %>, userRepository<% } %><% if (isUsingMapsId === true && dto !== 'mapstruct') { %>, <%= mapsIdRepoInstance _%> <% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:661:        `when`(<%= entityInstance %>RepositoryMock.findAllWithEagerRelationships(any())).thenReturn(<% if (!reactive) { %>PageImpl(mutableListOf())<% } else { %>Flux.empty()<% }%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-662-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-664-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:665:        val rest<%= entityClass %>MockMvc = MockMvcBuilders.standaloneSetup(<%= entityInstance %>Resource)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-666-            .setCustomArgumentResolvers(pageableArgumentResolver)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-670-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:671:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>?eagerload=true"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-672-            .andExpect(status().isOk)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-673-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:674:        webTestClient.get().uri("/api/<%= entityApiUrl %>?eagerload=true")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-675-            .exchange()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-679-        <%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:680:        verify(<%= entityInstance %>ServiceMock, times(1)).findAllWithEagerRelationships(any())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-681-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:682:        verify(<%= entityInstance %>RepositoryMock, times(1)).findAllWithEagerRelationships(any())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-683-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-686-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:687:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-688-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:689:    fun get<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-690-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-691-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:692:        <%= asEntity(entityInstance) %>.id =UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-693-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:694:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-695-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:696:        val id = <%= asEntity(entityInstance) %>.id
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-697-        assertNotNull(id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-698-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:699:        // Get the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-700-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:701:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>/{id}", id))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-702-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-704-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:705:        webTestClient.get().uri("/api/<%= entityApiUrl %>/{id}", id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-706-            .accept(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-712-        <%_ if (['sql', 'mongodb', 'couchbase', 'cassandra'].includes(databaseType)) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:713:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.id").value(<%= reactive ? '`is`(' : '' %><%= idValue %>))<%_ } _%><% for (idx in fields) { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-714-            <%_ if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:715:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.<%= fields[idx].fieldName %>ContentType").value(<%= reactive ? '`is`(' : '' %><%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>_CONTENT_TYPE))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-716-            <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:717:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.<%= fields[idx].fieldName %>").value(<%= reactive ? '`is`(' : '' %><% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %>Base64Utils.encodeToString(<% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>sameInstant(<% } %><%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %><% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %><% if (databaseType === 'cassandra') { %>.array()<% } %>)<% } else if (fields[idx].fieldType === 'Integer') { %><% } else if (fields[idx].fieldType === 'Long') { %>?.toInt()<% } else if (fields[idx].fieldType === 'Float' || fields[idx].fieldType === 'Double') { %>.toDouble()<% } else if (fields[idx].fieldType === 'BigDecimal') { %>?.toInt()<% } else if (fields[idx].fieldType === 'Boolean') { %><% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>)<% } else if (fields[idx].fieldType !== 'String') { %>.toString()<% } %>))<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-718-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-719-<%_ if (jpaMetamodelFiltering) {  %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:720:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-721-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:722:    fun get<%= entityClassPlural %>ByIdFiltering()  {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-723-      // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:724:      <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:725:      val id = <%= asEntity(entityInstance) %>.id
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-726-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:727:      default<%= entityClass %>ShouldBeFound("id.equals=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:728:      default<%= entityClass %>ShouldNotBeFound("id.notEquals=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-729-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:730:      default<%= entityClass %>ShouldBeFound("id.greaterThanOrEqual=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:731:      default<%= entityClass %>ShouldNotBeFound("id.greaterThan=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-732-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:733:      default<%= entityClass %>ShouldBeFound("id.lessThanOrEqual=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:734:      default<%= entityClass %>ShouldNotBeFound("id.lessThan=" + id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-735-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-741-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:742:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-743-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:744:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsEqualToSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-745-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:746:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-747-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:748:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> equals to <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:749:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.equals=$<%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-750-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:751:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> equals to <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:752:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.equals=$<%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-753-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-754-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:755:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-756-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:757:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsNotEqualToSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-758-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:759:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-760-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:761:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> not equals to <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:762:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.notEquals=" + <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-763-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:764:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> not equals to <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:765:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.notEquals=" + <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-766-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-767-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:768:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-769-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:770:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsInShouldWork() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-771-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:772:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-773-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:774:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> in <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%> or <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:775:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.in=$<%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>,$<%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-776-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:777:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> equals to <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:778:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.in=$<%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-779-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-780-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:781:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-782-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:783:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsNullOrNotNull() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-784-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:785:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-786-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:787:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is not null
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:788:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.specified=true")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-789-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:790:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is null
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:791:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.specified=false")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-792-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-796-                _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:797:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-798-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:799:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>ContainsSomething(){
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-800-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:801:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-802-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:803:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> contains <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:804:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.contains=" + <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-805-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:806:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> contains <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:807:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.contains=" + <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-808-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-809-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:810:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-811-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:812:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>NotContainsSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-813-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:814:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-815-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:816:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> does not contain <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:817:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.doesNotContain=" + <%='DEFAULT_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-818-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:819:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> does not contain <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:820:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.doesNotContain=" + <%='UPDATED_' + searchBy.fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-821-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-844-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:845:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-846-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:847:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsGreaterThanOrEqualToSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-848-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:849:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-850-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:851:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is greater than or equal to <%= defaultValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:852:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.greaterThanOrEqual=$<%= defaultValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-853-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:854:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is greater than or equal to <%= biggerValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:855:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.greaterThanOrEqual=$<%= biggerValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-856-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-857-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:858:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-859-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:860:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsLessThanOrEqualToSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-861-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:862:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-863-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:864:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is less than or equal to <%= defaultValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:865:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.lessThanOrEqual=$<%= defaultValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-866-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:867:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is less than or equal to <%= smallerValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:868:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.lessThanOrEqual=$<%= smallerValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-869-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-870-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:871:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-872-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:873:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsLessThanSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-874-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:875:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-876-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:877:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is less than <%= defaultValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:878:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.lessThan=$<%= defaultValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-879-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:880:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is less than <%= biggerValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:881:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.lessThan=$<%= biggerValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-882-    }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-883-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:884:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-885-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:886:    fun getAll<%= entityClassPlural %>By<%= searchBy.fieldInJavaBeanMethod %>IsGreaterThanSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-887-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:888:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-889-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:890:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is greater than <%= defaultValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:891:        default<%= entityClass %>ShouldNotBeFound("<%= searchBy.fieldName %>.greaterThan=$<%= defaultValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-892-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:893:        // Get all the <%= entityInstance %>List where <%= searchBy.fieldName %> is greater than <%= smallerValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:894:        default<%= entityClass %>ShouldBeFound("<%= searchBy.fieldName %>.greaterThan=$<%= smallerValue %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-895-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-900-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:901:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-902-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:903:    fun getAll<%= entityClassPlural %>By<%= relationship.relationshipNameCapitalized %>IsEqualToSomething() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-904-        // Initialize the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:905:        val <%= relationship.relationshipFieldName %> = <%= relationship.otherEntityNameCapitalized %>ResourceIT.createEntity(em)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:906:        em.persist(<%= relationship.relationshipFieldName %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-907-        em.flush()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-908-<%_ if (relationship.relationshipType === 'many-to-many' || relationship.relationshipType === 'one-to-many') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:909:        <%= asEntity(entityInstance) %>.add<%= relationship.relationshipNameCapitalized %>(<%= relationship.relationshipFieldName %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-910-<%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:911:        <%= asEntity(entityInstance) %>.<%= relationship.relationshipName %> = <%= relationship.relationshipFieldName %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-912-<%_     if (relationship.ownerSide === false) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:913:        <%= relationship.relationshipFieldName %>.<%= relationship.otherEntityRelationshipName %> = <%= asEntity(entityInstance) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-914-<%_     } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-915-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:916:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:917:        val <%= relationship.relationshipFieldName %>Id = <%= relationship.relationshipFieldName %>.id
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-918-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:919:        // Get all the <%= entityInstance %>List where <%= relationship.relationshipFieldName %> equals to <%= relationship.relationshipFieldName %>Id
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:920:        default<%= entityClass %>ShouldBeFound("<%= relationship.relationshipFieldName %>Id.equals=$<%= relationship.relationshipFieldName %>Id")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-921-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:922:        // Get all the <%= entityInstance %>List where <%= relationship.relationshipFieldName %> equals to <%= relationship.relationshipFieldName %>Id + 1
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:923:        default<%= entityClass %>ShouldNotBeFound("<%= relationship.relationshipFieldName %>Id.equals=${<%= relationship.relationshipFieldName %>Id?.plus(1)}")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-924-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-930-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:931:    private fun default<%= entityClass %>ShouldBeFound(filter: String) {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:932:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>?sort=id,desc&$filter"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-933-            .andExpect(status().isOk)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-934-            .andExpect(content().contentType(MediaType.APPLICATION_JSON_VALUE))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:935:            .andExpect(jsonPath("$.[*].id").value(hasItem(<%= asEntity(entityInstance) %><% if (databaseType === 'sql' && hasOauthUser === true) { %>.id?<% } else { %>.id?.toInt()<% } %>)))<% fields.forEach((field) => { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-936-            <%_ if ((field.fieldType === 'byte[]' || field.fieldType === 'ByteBuffer') && field.fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:937:            .andExpect(jsonPath("$.[*].<%=field.fieldName%>ContentType").value(hasItem(<%='DEFAULT_' + field.fieldNameUnderscored.toUpperCase()%>_CONTENT_TYPE)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-938-            <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:939:            .andExpect(jsonPath("$.[*].<%=field.fieldName%>").value(hasItem(<% if ((field.fieldType === 'byte[]' || field.fieldType === 'ByteBuffer') && field.fieldTypeBlobContent !== 'text') { %>Base64Utils.encodeToString(<% } else if (field.fieldType === 'ZonedDateTime') { %>sameInstant(<% } %><%='DEFAULT_' + field.fieldNameUnderscored.toUpperCase()%><% if ((field.fieldType === 'byte[]' || field.fieldType === 'ByteBuffer') && field.fieldTypeBlobContent !== 'text') { %><% if (databaseType === 'cassandra') { %>.array()<% } %>)<% } else if (field.fieldType === 'Integer') { %><% } else if (field.fieldType === 'Long') { %>?.toInt()<% } else if (field.fieldType === 'Float') { %>.toDouble()<% } else if (field.fieldType === 'Double') { %><% } else if (field.fieldType === 'BigDecimal') { %>?.toInt()<% } else if (field.fieldType === 'Boolean') { %><% } else if (field.fieldType === 'ZonedDateTime') { %>)<% } else if (field.fieldType === 'String' || field.fieldTypeBlobContent === 'text') { %><% } else if (field.fieldType !== 'String') { %>.toString()<% } %>)))<% }); %>;
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-940-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-941-        // Check, that the count call also returns 1
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:942:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>/count?sort=id,desc&$filter"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-943-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-951-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:952:    private fun default<%= entityClass %>ShouldNotBeFound(filter: String) {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:953:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>?sort=id,desc&$filter"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-954-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-959-        // Check, that the count call also returns 0
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:960:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>/count?sort=id,desc&$filter"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-961-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-966-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:967:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-968-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:969:    fun getNonExisting<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:970:        // Get the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-971-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:972:        rest<%= entityClass %>MockMvc.perform(get("/api/<%= entityApiUrl %>/{id}", <% if (['sql', 'mongodb', 'neo4j', 'couchbase'].includes(databaseType)) { %>Long.MAX_VALUE<% } else if (databaseType === 'cassandra') { %>UUID.randomUUID().toString()<% } %>))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-973-            .andExpect(status().isNotFound)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-974-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:975:        webTestClient.get().uri("/api/<%= entityApiUrl %>/{id}", <% if (['sql', 'mongodb', 'neo4j', 'couchbase'].includes(databaseType)) { %>Long.MAX_VALUE<% } else if (databaseType === 'cassandra') { %>UUID.randomUUID().toString()<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-976-            .accept(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-981-<%_ if (!readOnly) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:982:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:983:    fun update<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-984-        <%_ if (reactive && searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-985-        // Configure the mock search repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:986:        `when`(mock<%= entityClass %>SearchRepository.save(any(<%= entityClass %>::class.java)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:987:            .thenAnswer { Mono.just(it.arguments[0] as <%= entityClass %>) }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-988-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-990-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:991:        <%= asEntity(entityInstance) %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-992-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-993-<%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:994:        <%= entityInstance %>Service.save(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-995-<%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:996:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-997-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-998-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:999:        val databaseSizeBeforeUpdate = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1000-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1001:        // Update the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1002:        val id = <%= asEntity(entityInstance) %>.id
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1003-        assertNotNull(id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1004:        val updated<%= entityClass %> = <%= entityInstance %>Repository.findById(id)<%= reactive ? '.block()' : '.get()' %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1005-        <%_ if (databaseType === 'sql') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1006:        // Disconnect from session so that the updates on updated<%= entityClass %> are not directly saved in db
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1007:        em.detach(updated<%= entityClass %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1008-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1009-        <%_ for (idx in fields) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1010:        updated<%= entityClass %>.<%= fields[idx].fieldName %> = <%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1011-            <%_ if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1012:        updated<%= entityClass %>.<%= fields[idx].fieldName %>ContentType = <%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>_CONTENT_TYPE
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1013-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1015-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1016:        val <%= asDto(entityInstance) %> = <%= entityInstance %>Mapper.toDto(updated<%= entityClass %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1017-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1019-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1020:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1021:            put("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1022-                .contentType(MediaType.APPLICATION_JSON)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1023:                .content(convertObjectToJsonBytes(<% if (dto === 'mapstruct') { %><%= asDto(entityInstance) %><% } else { %>updated<%= entityClass %><% } %>))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1024-        ).andExpect(status().isOk)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1025-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1026:        webTestClient.put().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1027-            .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1032-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1033:        // Validate the <%= entityClass %> in the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1034:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1035:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeUpdate)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1036:        val test<%= entityClass %> = <%= entityInstance %>List[<%= entityInstance %>List.size - 1]
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1037-        <%_ for (idx in fields) { if (fields[idx].fieldType === 'ZonedDateTime') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1038:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1039-        <%_ } else if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1040:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1041:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>ContentType).isEqualTo(<%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>_CONTENT_TYPE)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1042-        <%_ } else if (fields[idx].fieldType.toLowerCase() === 'boolean') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1043:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1044-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1045:        assertThat(test<%= entityClass %>.<%=fields[idx].fieldName%>).isEqualTo(<%='UPDATED_' + fields[idx].fieldNameUnderscored.toUpperCase()%>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1046-        <%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1048-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1049:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1050:        verify(mock<%= entityClass %>SearchRepository, times(<%= service !== 'no' && dto !== 'mapstruct' ? '2' : '1' %>)).save(test<%= entityClass %>);
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1051-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1053-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1054:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1055:    fun updateNonExisting<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1056:        val databaseSizeBeforeUpdate = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1057-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1058-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1059:        // Create the <%= entityClass %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1060:        val <%= asDto(entityInstance) %> = <%= entityInstance %>Mapper.toDto(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1061-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1064-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1065:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1066:            put("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1067-                .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1070-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1071:        webTestClient.put().uri("/api/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1072-            .contentType(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1077-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1078:        // Validate the <%= entityClass %> in the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1079:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1080:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeUpdate)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1081-        <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1082-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1083:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1084:        verify(mock<%= entityClass %>SearchRepository, times(0)).save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1085-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1087-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1088:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1089-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1090:    fun delete<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1091-<%_ if (reactive && searchEngine === 'elasticsearch') { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1093-    <%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1094:        `when`(mock<%= entityClass %>SearchRepository.save(any(<%= entityClass %>::class.java)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1095:            .thenAnswer { Mono.just(it.arguments[0] as <%= entityClass %>) }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1096-    <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1097:        `when`(mock<%= entityClass %>SearchRepository.deleteById(any<%= primaryKeyType %>())).thenReturn(Mono.empty())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1098-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1100-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1101:        <%= asEntity(entityInstance) %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1102-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1103-<%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1104:        <%= entityInstance %>Service.save(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1105-<%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1106:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1107-<%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1108-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1109:        val databaseSizeBeforeDelete = <%= entityInstance %>Repository.findAll()<%= callListBlock %>.size
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1110-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1111-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1112:        // Delete the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1113:        rest<%= entityClass %>MockMvc.perform(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1114:            delete("/api/<%= entityApiUrl %>/{id}", <%= asEntity(entityInstance) %>.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1115-                .accept(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1117-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1118:        webTestClient.delete().uri("/api/<%= entityApiUrl %>/{id}", <%= asEntity(entityInstance) %>.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1119-            .accept(MediaType.APPLICATION_JSON)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1127-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1128:        val <%= entityInstance %>List = <%= entityInstance %>Repository.findAll()<%= callListBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1129:        assertThat(<%= entityInstance %>List).hasSize(databaseSizeBeforeDelete - 1)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1130-        <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1131-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1132:        // Validate the <%= entityClass %> in Elasticsearch
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1133:        verify(mock<%= entityClass %>SearchRepository, times(1)).deleteById(<%= asEntity(entityInstance) %>.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1134-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1138-<%_ if (searchEngine !== false) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1139:    @Test<%= transactionalAnnotation %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1140-    <% if (!reactive) { %>@Throws(Exception::class)<% } %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1141:    fun search<%= entityClass %>() {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1142-        // Configure the mock search repository
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1143-    <%_ if (reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1144:        `when`(mock<%= entityClass %>SearchRepository.save(any(<%= entityClass %>::class.java)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1145:            .thenAnswer { Mono.just(it.arguments[0] as <%= entityClass %>) }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1146-        <%_ if (pagination !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1147:        `when`(mock<%= entityClass %>SearchRepository.count()).thenReturn(Mono.just(1L))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1148-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1149-    <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1150:        // Initializesearch<%= entityClass %>() the database
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1151-    <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1152:        <%= asEntity(entityInstance) %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1153-    <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1154-    <%_ if (service !== 'no' && dto !== 'mapstruct') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1155:        <%= entityInstance %>Service.save(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1156-    <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1157:        <%= entityInstance %>Repository.<%= saveMethod %>(<%= asEntity(entityInstance) %>)<%= callBlock %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1158-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1160-        <%_ if (reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1161:        `when`(mock<%= entityClass %>SearchRepository.search("id:" + <%= asEntity(entityInstance) %>.id<%_ if (pagination !== 'no') { _%>, PageRequest.of(0, 20)<% }%>))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1162:            .thenReturn(Flux.just(<%= asEntity(entityInstance) %>))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1163-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1164-            <%_ if (pagination !== 'no') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1165:        `when`(mock<%= entityClass %>SearchRepository.search(queryStringQuery("id:" + <%= asEntity(entityInstance) %>.id), PageRequest.of(0, 20)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1166:            .thenReturn(PageImpl(listOf(<%= asEntity(entityInstance) %>), PageRequest.of(0, 1), 1))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1167-            <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1168:        `when`(mock<%= entityClass %>SearchRepository.search(queryStringQuery("id:" + <%= asEntity(entityInstance) %>.id)))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1169:            .thenReturn(listOf(<%= asEntity(entityInstance) %>))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1170-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1173-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1174:        // Wait for the <%= entityInstance %> to be indexed
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1175:        retryUntilNotEmpty(() -> <%= entityInstance %>Repository.search(<%= entityClass %>.PREFIX, "id:" + <%= entityInstance %>.id)<% if (reactive) { %>.collectList().block()<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1176-    <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1177:        // Search the <%= entityInstance %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1178-    <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1179:        rest<%= entityClass %>MockMvc.perform(get("/api/_search/<%= entityApiUrl %>?query=id:" + <%= asEntity(entityInstance) %>.id))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1180-            .andExpect(status().isOk)
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1182-    <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1183:        webTestClient.get().uri("/api/_search/<%= entityApiUrl %>?query=id:" + <%= asEntity(entityInstance) %>.id)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1184-            .exchange()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1189-    <%_ if (['sql', 'mongodb', 'couchbase', 'cassandra'].includes(databaseType)) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1190:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].id").value(hasItem(<%= idValue %>))<%= !reactive ? ')' : '' %><%_ } _%><% for (idx in fields) { %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1191-            <%_ if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1192:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].<%= fields[idx].fieldName %>ContentType").value(hasItem(<%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %>_CONTENT_TYPE))<%= !reactive ? ')' : '' %><%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1193:            <%= !reactive ? '.andExpect(' : '.' %>jsonPath("$.[*].<%= fields[idx].fieldName %>").value(hasItem(<% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %>Base64Utils.encodeToString(<% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>sameInstant(<% } %><%= 'DEFAULT_' + fields[idx].fieldNameUnderscored.toUpperCase() %><% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %><% if (databaseType === 'cassandra') { %>.array()<% } %>)<% } else if (fields[idx].fieldType === 'Integer') { %><% } else if (fields[idx].fieldType === 'Boolean') { %><% } else if (fields[idx].fieldType === 'Long') { %>?.toInt()<% } else if (fields[idx].fieldType === 'Float' || fields[idx].fieldType === 'Double') { %>.toDouble()<% } else if (fields[idx].fieldType === 'BigDecimal') { %>?.toInt()<% } else if (fields[idx].fieldType === 'ZonedDateTime') { %>)<% } else if (fields[idx].fieldType !== 'String') { %>.toString()<% } %>))<%= !reactive ? ')' : '' %><%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1194-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1280-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1281:        private const val <%=defaultValueName %> = "<%-sampleTextString %>"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1282:        private const val <%=updatedValueName %> = "<%-updatedTextString %>"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1283-        <%_ } else if (fieldType === 'Integer') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1284-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1285:        private const val <%=defaultValueName %>: Int = <%= defaultValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1286:        private const val <%=updatedValueName %>: Int = <%= updatedValue %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1287-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1288:        private const val <%=smallerValueName %>: Int = <%= defaultValue %> - 1
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1289-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1291-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1292:        private const val <%=defaultValueName %>: Long = <%= defaultValue %>L
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1293:        private const val <%=updatedValueName %>: Long = <%= updatedValue %>L
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1294-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1295:        private const val <%=smallerValueName %>: Long = <%= defaultValue %>L - 1L
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1296-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1298-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1299:        private const val <%=defaultValueName %>: <%=fieldType %> = <%= defaultValue %>F
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1300:        private const val <%=updatedValueName %>: <%=fieldType %> = <%= updatedValue %>F
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1301-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1302:        private const val <%=smallerValueName %>: <%=fieldType %> = <%= defaultValue %>F - 1F
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1303-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1305-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1306:        private const val <%=defaultValueName %>: <%=fieldType %> = <%= defaultValue %>.0
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1307:        private const val <%=updatedValueName %>: <%=fieldType %> = <%= updatedValue %>.0
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1308-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1309:        private const val <%=smallerValueName %>: <%=fieldType %> = <%= defaultValue %>.0 - 1.0
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1310-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1312-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1313:        private val <%=defaultValueName %>: BigDecimal = BigDecimal(<%= defaultValue %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1314:        private val <%=updatedValueName %>: BigDecimal = BigDecimal(<%= updatedValue %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1315-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1316:        private val <%=smallerValueName %>: BigDecimal = BigDecimal(<%= defaultValue %> - 1)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1317-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1319-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1320:        private val <%=defaultValueName %>: UUID = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1321:        private val <%=updatedValueName %>: UUID = UUID.randomUUID()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1322-        <%_ } else if (fieldType === 'LocalDate') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1323-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1324:        private val <%=defaultValueName %>: LocalDate = LocalDate.ofEpochDay(0L)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1325:        private val <%=updatedValueName %>: LocalDate = LocalDate.now(ZoneId.systemDefault())
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1326-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1327:        private val <%=smallerValueName %>: LocalDate = LocalDate.ofEpochDay(-1L)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1328-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1330-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1331:        private val <%=defaultValueName %>: Instant = Instant.ofEpochMilli(0L)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1332:        private val <%=updatedValueName %>: Instant = Instant.now().truncatedTo(ChronoUnit.MILLIS)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1333-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1334:        private val <%=smallerValueName %>: Instant = Instant.ofEpochMilli(-1L)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1335-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1337-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1338:        private val <%=defaultValueName %>: ZonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(0L), ZoneOffset.UTC)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1339:        private val <%=updatedValueName %>: ZonedDateTime = ZonedDateTime.now(ZoneId.systemDefault()).withNano(0)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1340-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1341:        private val <%=smallerValueName %>: ZonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(-1L), ZoneOffset.UTC)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1342-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1344-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1345:        private val <%=defaultValueName %>: Duration = Duration.ofHours(6)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1346:        private val <%=updatedValueName %>: Duration = Duration.ofHours(12)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1347-            <%_ if (needsSmallerValueName) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1348:        private val <%=smallerValueName %>: Duration = Duration.ofHours(5)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1349-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1351-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1352:        private const val <%=defaultValueName %>: Boolean = false
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1353:        private const val <%=updatedValueName %>: Boolean = true
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1354-        <%_ } else if ((fieldType === 'byte[]' || fieldType === 'ByteBuffer') && fieldTypeBlobContent !== 'text') { _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1356-        <%_ if (databaseType !== 'cassandra') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1357:        private val <%=defaultValueName %>: ByteArray = createByteArray(1, "0")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1358:        private val <%=updatedValueName %>: ByteArray = createByteArray(1, "1")
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1359-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1360:        private val <%=defaultValueName %>: ByteBuffer = ByteBuffer.wrap(createByteArray(1, "0"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1361:        private val <%=updatedValueName %>: ByteBuffer = ByteBuffer.wrap(createByteArray(1, "1"))
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1362-        <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1363:        private const val <%=defaultValueName %>_CONTENT_TYPE: String = "image/jpg"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1364:        private const val <%=updatedValueName %>_CONTENT_TYPE: String = "image/png"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1365-        <%_ } else if (isEnum) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1366-
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1367:        private val <%=defaultValueName %>: <%=fieldType %> = <%=fieldType %>.<%=enumValue1.name %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1368:        private val <%=updatedValueName %>: <%=fieldType %> = <%=fieldType %>.<%=enumValue2.name %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1369-        <%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1378-        @JvmStatic
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1379:        fun create<% if (fieldStatus === 'UPDATED_') { _%>Updated<%_ } %>Entity(<% if (databaseType === 'sql') { %>em: EntityManager<% } %>): <%= asEntity(entityClass) %> {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1380:            val <%= asEntity(entityInstance) %> = <%= asEntity(entityClass) %>(
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1381-            <%_ for (idx in fields) {
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1383-            _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1384:                <%= fields[idx].fieldName %> = <%=fieldStatus + fields[idx].fieldNameUnderscored.toUpperCase()%><% if ((fields[idx].fieldType === 'byte[]' || fields[idx].fieldType === 'ByteBuffer') && fields[idx].fieldTypeBlobContent !== 'text') { %>,
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1385:                <%= fields[idx].fieldName %>ContentType = <%=fieldStatus + fields[idx].fieldNameUnderscored.toUpperCase()%>_CONTENT_TYPE<% } %><%= comma %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1386-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1401-        <%_ if (otherEntityName === 'user') { // TODO or other entity has no unique fields _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1402:            val <%= otherEntityName %> = <%= otherEntityNameCapitalized %>ResourceIT.createEntity(<% if (databaseType === 'sql') { %>em<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1403-                <%_ if (databaseType === 'sql') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1404:            em.persist(<%= otherEntityName %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1405-            em.flush()
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1407-                <%_ if (databaseType === 'mongodb') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1408:            <%= otherEntityName %>.id = "fixed-id-for-tests"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1409-                <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1410-        <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1411:            val <%= otherEntityName %>: <%= otherEntityNameCapitalized %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1412-            <%_ if (databaseType === 'sql') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1413:            if (em.findAll(<%= otherEntityNameCapitalized %>::class).isEmpty()) {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1414:                <%= otherEntityName %> = <%= otherEntityNameCapitalized %>ResourceIT.create<% if (fieldStatus === 'UPDATED_') { %>Updated<% } %>Entity(<% if (databaseType === 'sql') { %>em<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1415:                em.persist(<%= otherEntityName %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1416-                em.flush()
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1417-            } else {
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1418:                <%= otherEntityName %> = em.findAll(<%= otherEntityNameCapitalized %>::class).get(0)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1419-            }
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1420-            <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1421:            <%= otherEntityName %> = <%= otherEntityNameCapitalized %>ResourceIT.create<% if (fieldStatus === 'UPDATED_') { %>Updated<% } %>Entity(<% if (databaseType === 'sql') { %>em<% } %>)
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1422-            <%_ } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1423-            <%_ if (databaseType === 'mongodb') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1424:            <%= otherEntityName %>.id = "fixed-id-for-tests"
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1425-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1428-                <%_ if (relationshipType === 'many-to-many' || relationshipType === 'one-to-many') { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1429:            <%= asEntity(entityInstance) %>.relationshipNamePlural.add(<%= otherEntityName %>);
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1430-            <%_ } else { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1431:            <%= asEntity(entityInstance) %>.<%= relationshipName %> = <%= otherEntityName %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1432-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1434-        <%_ } } _%>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs:1435:            return <%= asEntity(entityInstance) %>
/src/generators/entity-server/templates/src/test/kotlin/package/web/rest/EntityResourceIT.kt.ejs-1436-        }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-18--%>
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs:19:package <%= packageName %>.repository.search
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-24-/**
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs:25: * Configure a Mock version of <%= entityClass %>SearchRepository to test the
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-26- * application without starting Elasticsearch.
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-28-@Configuration
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs:29:class <%=entityClass%>SearchRepositoryMockConfiguration {
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-30-
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-31-    @MockBean
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs:32:    private lateinit var mock<%= entityClass %>SearchRepository: <%= entityClass %>SearchRepository
/src/generators/entity-server/templates/src/test/kotlin/package/repository/search/EntitySearchRepositoryMockConfiguration.kt.ejs-33-}
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-18--%>
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:19:package <%= packageName %>.service.mapper
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-30-
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:31:class <%= entityClass %>MapperTest {
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-32-
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:33:    private lateinit var <%= entityInstance %>Mapper: <%= entityClass %>Mapper
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-34-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-36-    fun setUp() {
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:37:        <%= entityInstance %>Mapper = <%= entityClass %>MapperImpl()
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-38-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-43-        val id = <%- id %>
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:44:        assertThat(<%= entityInstance %>Mapper.fromId(id)?.id).isEqualTo(id)
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs:45:        assertThat(<%= entityInstance %>Mapper.fromId(null)).isNull()
/src/generators/entity-server/templates/src/test/kotlin/package/service/mapper/EntityMapperTest.kt.ejs-46-    }
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-18--%>
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:19:package <%= packageName %>.service.dto
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-22-import org.assertj.core.api.Assertions.assertThat
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:23:import <%= packageName %>.web.rest.equalsVerifier
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-24-<%_
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-31-
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:32:class <%= asDto(entityClass) %>Test {
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-33-
##############################################
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-35-    fun dtoEqualsVerifier(){
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:36:        equalsVerifier(<%= asDto(entityClass) %>::class)
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-37-        <%_if (!embedded) { _%>
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:38:        val <%= asDto(entityInstance) %>1 = <%= asDto(entityClass) %>()
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:39:        <%= asDto(entityInstance) %>1.id = <%- id1 %>
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:40:        val <%= asDto(entityInstance) %>2 = <%= asDto(entityClass) %>()
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:41:        assertThat(<%= asDto(entityInstance) %>1).isNotEqualTo(<%= asDto(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:42:        <%= asDto(entityInstance) %>2.id = <%= asDto(entityInstance) %>1.id
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:43:        assertThat(<%= asDto(entityInstance) %>1).isEqualTo(<%= asDto(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:44:        <%= asDto(entityInstance) %>2.id = <%- id2 %>
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:45:        assertThat(<%= asDto(entityInstance) %>1).isNotEqualTo(<%= asDto(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:46:        <%= asDto(entityInstance) %>1.id = null
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs:47:        assertThat(<%= asDto(entityInstance) %>1).isNotEqualTo(<%= asDto(entityInstance) %>2)
/src/generators/entity-server/templates/src/test/kotlin/package/service/dto/EntityDTOTest.kt.ejs-48-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs:19:package <%= packageName %>.domain.enumeration
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-20-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-21-/**
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs:22: * The <%= enumName %> enumeration.
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-23- */
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs:24:enum class <%= enumName %><%if (!withoutCustomValues) { %>(val <%= enumName %>: String) <% } %>{
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-25-    <%_ if (withoutCustomValues) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs:26:        <%= enumValues.map(enumValue => enumValue.name).join(', ') %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-27-    <%_ } else {
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-28-        enumValues.forEach((enumWithCustomValue, index) => { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs:29:        <%= enumWithCustomValue.name %>("<%= enumWithCustomValue.value %>")<% if (index < enumValues.length - 1) { %>,<% } else { %><% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/enumeration/Enum.kt.ejs-30-    <%_ }); }_%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:19:package <%= packageName %>.domain
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-119-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:120:import <%= packageName %>.domain.enumeration.<%= element %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-121-<%_ }); _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-123-<%_ if (databaseType === 'couchbase' && !embedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:124:import <%= packageName %>.config.ID_DELIMITER
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-125-import org.springframework.data.couchbase.core.mapping.id.GenerationStrategy.UNIQUE
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-129-/**
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:130: * A <%= asEntity(entityClass) %>.
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-131- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-139-@Entity
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:140:@Table(name = "<%= entityTableName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-141-<%_     if (enableHibernateCache) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-145-    if (databaseType === 'mongodb') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:146:@Document(collection = "<%= entityTableName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-147-    <%_ } if (databaseType === 'neo4j') { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-152-    } if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:153:@Table("<%= entityInstance %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-154-    <%_ } if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:155:@org.springframework.data.elasticsearch.annotations.Document(indexName = "<%= entityInstance.toLowerCase() %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-156-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:157:data class <%= asEntity(entityClass) %>(
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-158-    <%_ if (!embedded) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-173-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:174:    var id: <%= primaryKeyType %>? = null,
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-175-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-227-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:228:    @Column(name = "<%-fieldNameAsDatabaseColumn %>"<% if (fieldValidate === true) { %><% if (fieldValidateRules.includes('maxlength')) { %>, length = <%= fieldValidateRulesMaxlength %><% } %><% if (required) { %>, nullable = false<% } %><% if (unique) { %>, unique = true<% } %><% } %>)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-229-        <%_ }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-231-    <%_ if (databaseType === 'mongodb' || databaseType === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:232:    @Field("<%=fieldNameUnderscored %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-233-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-234-    <%_ if (databaseType === 'neo4j') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:235:    @Property("<%=fieldNameUnderscored %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-236-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-237-    <%_ if (fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:238:    var <%= fieldName %>: <% if(fieldType === 'byte[]') { _%>ByteArray<%_ } else if(fieldType==='Integer'){ _%>Int<%_ } else { _%><%= fieldType %><% } %>? = null<%_ if (fieldType === 'byte[]' || fieldType === 'ByteBuffer') { _%>,<%_ } else { _%><%= comma %><%_ } %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-239-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:240:    var <%= fieldName %>: String? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-241-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-250-      <%_ if (databaseType === 'mongodb' || databaseType === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:251:    @Field("<%=fieldNameUnderscored %>_content_type")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-252-      <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-253-      <%_ if (databaseType === 'neo4j') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:254:    @Property("<%=fieldNameUnderscored %>_content_type")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-255-      <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:256:    var <%= fieldName %>ContentType: String? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-257-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-292-    _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:293:    @OneToMany(mappedBy = "<%= otherEntityRelationshipName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-294-            <%_ if (enableHibernateCache) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-300-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:301:    @Field("<%= relationshipFieldName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-302-        <%_ if (databaseType === 'couchbase' && !otherEntityIsEmbedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:303:    var <%= relationshipFieldName %>Ids: HashSet<String> = hashSetOf(),
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-304-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:305:    @N1qlJoin(on = "lks.<%= relationshipFieldName %>=meta(rks).id", fetchType = FetchType.IMMEDIATE)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-306-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-309-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:310:    var <%= relationshipFieldNamePlural %>: MutableSet<<%= asEntity(otherEntityNameCapitalized) %>> = mutableSetOf()<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-311-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-322-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:323:    @Field("<%= relationshipFieldName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-324-    <%_ if (databaseType === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:325:    var <%= relationshipFieldName %>Id: String? = null,
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-326-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:327:    @N1qlJoin(on = "lks.<%= relationshipFieldName %>=meta(rks).id", fetchType = FetchType.IMMEDIATE)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-328-    <%_ }
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-329-    } else if (databaseType === 'neo4j') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:330:    @Relationship("<%= relationshipFieldName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-331-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-332-    <%_ if (otherEntityRelationshipNamePlural !==undefined && otherEntityRelationshipNamePlural !== '') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:333:    @JsonIgnoreProperties(value = ["<%= otherEntityRelationshipNamePlural %>"], allowSetters = true)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-334-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:335:    var <%= relationshipFieldName %>: <%= asEntity(otherEntityNameCapitalized) %>? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-336-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-338-        if (databaseType === 'sql') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:339:    @ManyToMany<% if (ownerSide === false) { %>(mappedBy = "<%= otherEntityRelationshipNamePlural %>")<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-340-        <%_ if (enableHibernateCache) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-345-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:346:    @JoinTable(name = "<%= joinTableName %>",
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:347:        joinColumns = [JoinColumn(name = "<%= getColumnName(name) %>_id", referencedColumnName = "id")],
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:348:        inverseJoinColumns = [JoinColumn(name = "<%= getColumnName(relationships[idx].relationshipName) %>_id", referencedColumnName = "id")])
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-349-        <%_ }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-353-            <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:354:    @Field("<%= relationshipFieldNamePlural %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-355-        <%_ if (databaseType === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:356:    var <%= relationshipFieldName %>Ids: HashSet<String> = hashSetOf(),
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-357-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:358:    @N1qlJoin(on = "lks.<%= relationshipFieldNamePlural %>=meta(rks).id", fetchType = FetchType.IMMEDIATE)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-359-        <%_ }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-362-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:363:    var <%= relationshipFieldNamePlural %>: MutableSet<<%= asEntity(otherEntityNameCapitalized) %>> = mutableSetOf()<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-364-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-378-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:379:    @OneToOne(mappedBy = "<%= otherEntityRelationshipName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-380-    @JsonIgnore
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-385-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:386:    @Field("<%= relationshipFieldName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-387-     <%_ if (databaseType === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:388:    var <%= relationshipFieldName %>Id: String? = null,
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-389-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:390:    @N1qlJoin(on = "lks.<%= relationshipFieldName %>=meta(rks).id", fetchType = FetchType.IMMEDIATE)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-391-    <%_ }    if (ownerSide === false) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-394-        } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:395:    var <%= relationshipFieldName %>: <%= asEntity(otherEntityNameCapitalized) %>? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-396-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-430-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:431:    fun add<%= relationshipNameCapitalized %>(<%= otherEntityName %>: <%= asEntity(otherEntityNameCapitalized) %>): <%= asEntity(entityClass) %> {
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:432:        this.<%= relationshipFieldNamePlural %>.add(<%= otherEntityName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-433-        <%_ if (!otherEntityIsEmbedded || embedded && ownerSide === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-434-            <%_ if (databaseType === 'couchbase' && !otherEntityIsEmbedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:435:        <%= otherEntityName %>.id?.let { this.<%= relationshipFieldName %>Ids.add(it) }
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-436-            <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-437-            <%_ if (relationshipType === 'one-to-many') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:438:        <%= otherEntityName %>.<%= otherEntityRelationshipName %> = this
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-439-            <%_ } else if (otherEntityRelationshipNamePlural !== '' &&  ownerSide === false &&
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-441-                // JHipster version < 3.6.0 didn't ask for this relationship name _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:442:        <%= otherEntityName %>.<%= otherEntityRelationshipNamePlural %>.add(this)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-443-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-447-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:448:    fun remove<%= relationshipNameCapitalized %>(<%= otherEntityName %>: <%= asEntity(otherEntityNameCapitalized) %>): <%= asEntity(entityClass) %> {
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:449:        this.<%= relationshipFieldNamePlural %>.remove(<%= otherEntityName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-450-        <%_ if (!otherEntityIsEmbedded || embedded && ownerSide === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-451-            <%_ if (databaseType === 'couchbase' && !otherEntityIsEmbedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:452:        <%= otherEntityName %>.id?.let { this.<%= relationshipFieldName %>Ids.remove(it) }
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-453-            <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-454-            <%_ if (relationshipType === 'one-to-many') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:455:        <%= otherEntityName %>.<%= otherEntityRelationshipName %> = null
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-456-            <%_ } else if (otherEntityRelationshipNamePlural !== '' && ownerSide === false &&
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-458-                // JHipster version < 3.6.0 didn't ask for this relationship name _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:459:        <%= otherEntityName %>.<%= otherEntityRelationshipNamePlural %>.remove(this)
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-460-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-470-        if (this === other) return true
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:471:        if (other !is <%= asEntity(entityClass) %>) return false
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-472-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-481-
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:482:    override fun toString() = "<%= asEntity(entityClass) %>{" +
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-483-        <%_ if (!embedded) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-491-            const isNumeric = ['integer', 'long', 'float', 'double', 'bigdecimal'].includes(fieldType.toLowerCase());_%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:492:        ", <%= fieldName %>=<% if (! isNumeric) { %>'<% } %>$<%= fieldName %><% if (! isNumeric) { %>'<% } %>" +
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-493-            <%_ if ((fieldType === 'byte[]' || fieldType === 'ByteBuffer') && fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:494:        ", <%= fieldName %>ContentType='$<%= fieldName %>ContentType'" +
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-495-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-506-                if (relationshipType === 'many-to-one') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:507:        ", <%= relationshipFieldNamePlural %>='$<%= relationshipFieldNamePlural %>'" +
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-508-        <%_ } else if (relationshipType === 'one-to-one' && ownerSide === true) {
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-509-            _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:510:        ", <%= relationshipFieldName %>='$<%= relationshipFieldName %>'" +
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-511-        <%_ } } } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-517-        <%_ if (databaseType === 'couchbase' && !embedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs:518:        const val PREFIX = "<%= entityInstance.toLowerCase() %>"
/src/generators/entity-server/templates/src/main/kotlin/package/domain/Entity.kt.ejs-519-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-25-<%_ if (jpaMetamodelFiltering) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:26:    fun getAll<%= entityClassPlural %>(
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:27:        criteria: <%= entityClass %>Criteria<% if (pagination != 'no') { %>,
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-28-        pageable: Pageable
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-29-        <% if (reactive) { %>, request: ServerHttpRequest<% } %><% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:30:    ): ResponseEntity<MutableList<<%= instanceType %>>> {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:31:        log.debug("REST request to get <%= entityClassPlural %> by criteria: $criteria")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-32-    <%_ if (pagination === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:33:        val entityList = <%= entityInstance %>QueryService.findByCriteria(criteria)
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-34-        return ResponseEntity.ok().body(entityList)
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-35-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:36:        val page = <%= entityInstance %>QueryService.findByCriteria(criteria, pageable)
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-37-        val headers = PaginationUtil.generatePaginationHttpHeaders(<% if (!reactive) { %>ServletUriComponentsBuilder.fromCurrentRequest()<% } else { %>UriComponentsBuilder.fromHttpRequest(request)<% } %>, page)
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-42-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:43:     * `GET  /<%= entityApiUrl %>/count}` : count all the <%= entityInstancePlural %>.
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-44-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-47-     */
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:48:    @GetMapping("/<%= entityApiUrl %>/count")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:49:    fun count<%= entityClassPlural %>(criteria: <%= entityClass %>Criteria): ResponseEntity<Long> {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:50:        log.debug("REST request to count <%= entityClassPlural %> by criteria: $criteria")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:51:        return ResponseEntity.ok().body(<%= entityInstance %>QueryService.countByCriteria(criteria))
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-52-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-54-    <%_ if (pagination === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:55:    fun getAll<%= entityClassPlural %>(<% if (fieldsContainNoOwnerOneToOne) { %>@RequestParam(required = false) filter: String?<% } %><% if (fieldsContainOwnerManyToMany && fieldsContainNoOwnerOneToOne) { %>,<% } %><% if (fieldsContainOwnerManyToMany) { %>@RequestParam(required = false, defaultValue = "false") eagerload: Boolean<% }%>): <% if (reactive) { %>Mono<<% } %>MutableList<<%= instanceType %>><% if (reactive) { %>><% } %> {<%- include('get_all_stream_template', {viaService: viaService}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:56:        log.debug("REST request to get all <%= entityClassPlural %>")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-57-        <% if (viaService) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:58:        return <%= entityInstance %>Service.findAll()<% if (reactive) { %>.collectList()<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-59-        <% } else if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:60:        val <%= entityInstancePlural %> = <%= entityInstance %>Repository.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships<% } else { %>findAll<% } %>()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-61-            <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:62:        return <%= entityListToDtoListReference %>(<%= entityInstancePlural %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-63-            <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:64:        return <%= entityInstancePlural %>.map(<%= entityToDtoReference %>).collectList()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-65-            <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-66-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:67:        return <%= entityInstance %>Repository.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships<% } else { %>findAll<% } %>()<% if (reactive) { %>.collectList()<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-68-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-69-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:70:    fun getAll<%= entityClassPlural %>(pageable: Pageable<% if (reactive) { %>, request: ServerHttpRequest<% } %><% if (fieldsContainNoOwnerOneToOne) { %>, @RequestParam(required = false) filter: String?<% } %><% if (fieldsContainOwnerManyToMany) { %>, @RequestParam(required = false, defaultValue = "false") eagerload: Boolean<% } %>): <% if (reactive) { %>Mono<ResponseEntity<Flux<<%= instanceType %>>>><% } else { %>ResponseEntity<List<<%= instanceType %>>><% } %> {<%- include('get_all_stream_template', {viaService: viaService}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:71:        log.debug("REST request to get a page of <%= entityClassPlural %>")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-72-        <%_ if (!reactive) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-73-            <%_ if (fieldsContainOwnerManyToMany) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:74:        val page: Page<<%= instanceType %>> = if (eagerload) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:75:            <%= entityInstance %><%= viaService ? 'Service' : 'Repository' %>.findAllWithEagerRelationships(pageable)<% if (dto === 'mapstruct' && !viaService) { %>.map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-76-        } else {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:77:            <%= entityInstance %><%= viaService ? 'Service' : 'Repository' %>.findAll(pageable)<% if (dto === 'mapstruct' && !viaService) { %>.map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-78-        }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-80-        <%_ } else { _%>    
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:81:        val page = <%= entityInstance %><%= viaService ? 'Service' : 'Repository' %>.findAll(pageable)<% if (dto === 'mapstruct' && !viaService) { %>.map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-82-        val headers = PaginationUtil.generatePaginationHttpHeaders(<% if (!reactive) { %>ServletUriComponentsBuilder.fromCurrentRequest()<% } else { %>UriComponentsBuilder.fromHttpRequest(request)<% } %>, page);
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-86-        
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:87:        return <%= entityInstance %><%= viaService ? 'Service.countAll' : 'Repository.count' %>()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:88:            .map { PageImpl<<%= instanceType %>>(listOf(), pageable, it) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-89-            .map { PaginationUtil.generatePaginationHttpHeaders(UriComponentsBuilder.fromHttpRequest(request), it) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs:90:            .map { ResponseEntity.ok().headers(it).body(<%= entityInstance %><%= viaService ? 'Service.findAll' : 'Repository.findAllBy' %>(pageable)<% if (!viaService && dto === 'mapstruct') { %>.map(<%= entityToDtoReference %>)<% } %>) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_template.ejs-91-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/inject_template.ejs-49-_%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/inject_template.ejs:50:    <%= beans.map(bean => `private val ${bean.instance}: ${bean.class}`).join(',\n    ') %>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs-19-<%_ if (reactive) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs:20:        return <%= entityInstance %><%= viaService ? 'Service.delete' : 'Repository.deleteById' %>(id)<%_ if (!viaService && searchEngine === 'elasticsearch') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs:21:                .then(<%= entityInstance %>SearchRepository.deleteById(id))<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs-22-<%_ } else { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs:23:        <%= entityInstance %><%= viaService ? 'Service.delete' : 'Repository.deleteById' %>(id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs-24-        <%_ if (!viaService && searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs:25:        <%= entityInstance %>SearchRepository.deleteById(id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/delete_template.ejs-26-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-21-<%_ if (viaService) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs:22:        return <%= entityInstance %>Service.save(<%= instanceName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-23-<%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs:24:        return <%= entityInstance %>Repository.save(<%if (dto === 'mapstruct') { %><%= dtoToEntity %>(<% } %><%= instanceName %>)<%if (dto === 'mapstruct') { %>)<% } -%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-25-    <%_ if (searchEngine === 'elasticsearch') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs:26:            .flatMap { <%= entityInstance %>SearchRepository.save(it) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-27-    <%_ } -%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-28-    <%_ if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs:29:            .map(<%= entityToDtoReference  %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_reactive_template.ejs-30-    <%_ } -%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs-22-for (idx in relationships) { if (relationships[idx].relationshipType === 'one-to-one' && relationships[idx].ownerSide !== true) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:23:        if ("<%= relationships[idx].relationshipName.toLowerCase() %>-is-null".equals(filter)) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:24:            log.debug("REST request to get all <%= entityClass %>s where <%= relationships[idx].relationshipName %> is null")<% if (viaService) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:25:            return <% if (pagination !== 'no') { %>ResponseEntity(<% } %><%= entityInstance %>Service.findAllWhere<%= relationships[idx].relationshipNameCapitalized %>IsNull()<% if (pagination !== 'no') { %>,
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs-26-                    HttpStatus.OK)<% } %><% } else { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:27:            return <% if (pagination !== 'no') { %>ResponseEntity(<% } %><%= entityInstance %>Repository.findAll()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs-28-                .asSequence()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:29:                .filter { it.<%= relationships[idx].relationshipName %> == null }<% if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs:30:                .map(<%= entityToDtoReference %>)<% } if (pagination !== 'no') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_all_stream_template.ejs-31-                .toMutableList(), HttpStatus.OK)<% } else { %>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-25-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:26:     *  Get all the <%= entityInstancePlural %> where <%= relationships[idx].relationshipNameCapitalized %> is `null`.
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-27-     *  @return the list of entities.
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-29-    @Transactional(readOnly = true) <% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:30:    <% if (service === 'serviceImpl') { %>override <% } %>fun findAllWhere<%= relationships[idx].relationshipNameCapitalized %>IsNull(): MutableList<<%= instanceType %>>  {
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:31:        log.debug("Request to get all <%= entityInstancePlural %> where <%= relationships[idx].relationshipNameCapitalized %> is null")
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:32:        return <%= entityInstance %>Repository.findAll()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-33-            <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-34-            .asSequence()
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:35:            .filter { it.<%= relationships[idx].relationshipName %> == null }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:36:            .mapTo(mutableListOf()) { <%= entityToDtoReference %> }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-37-            <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs:38:            .filterTo(mutableListOf()) { it.<%= relationships[idx].relationshipName %> == null }
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_filtered_template.ejs-39-            <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-35-    if (isController === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:36:        if (Objects.isNull(<%= instanceName%>.<%= mapsIdAssoc.relationshipName %> <%_ if (dto === 'mapstruct') { _%> Id <%_ } _%>)) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-37-            throw BadRequestAlertException("Invalid association value provided", ENTITY_NAME, "null")
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-43-        resultEntity = asEntity(entityInstance) %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:44:        var <%= asEntity(entityInstance) %> = <%= dtoToEntity %>(<%= instanceName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-45-        <%_ if (isUsingMapsId === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:46:        val <%= otherEntityName %>Id = <%= instanceName %>.<%= mapsIdAssoc.relationshipName %>Id
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:47:        if (<%= otherEntityName %>Id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:48:            <%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:49:                .ifPresent { <%= asEntity(entityInstance) %>.<%= otherEntityName %> = it }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-50-        }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-51-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:52:        <%= asEntity(entityInstance) %> = <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:53:        <%= returnPrefix %> <%= entityToDto %>(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-54-    <%_ } else { resultEntity = 'result'; _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-55-        <%_ if (isUsingMapsId === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:56:        val <%= otherEntityName %>Id = <%= instanceName %>.<%= mapsIdAssoc.relationshipName %>?.id
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:57:        if (<%= otherEntityName %>Id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:58:            <%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:59:                .ifPresent { <%= asEntity(entityInstance) %>.<%= otherEntityName %> = it }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-60-        }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-61-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:62:        <%= returnPrefix %> <%= entityInstance %>Repository.save(<%= asEntity(entityInstance) %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-63-        <%_ } if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:64:        <%= entityInstance %>SearchRepository.save(<%= resultEntity %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-65-            <%_ if (returnDirectly) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-68-        <%_ if (isUsingMapsId === true && isController === false) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:69:        val <%= otherEntityName %>Id = <%= entityInstance %>.<%= mapsIdAssoc.relationshipName %>?.id
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:70:        if (<%= otherEntityName %>Id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:71:            <%= mapsIdRepoInstance %>.findById(<%= otherEntityName %>Id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:72:                .ifPresent { <%= asEntity(entityInstance) %>.<%= otherEntityName %> = it }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-73-        }
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-74-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs:75:        <%= returnPrefix %> <%= entityInstance %>Service.save(<%= instanceName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/save_template.ejs-76-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs-24-<%_ if (!viaService) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs:25:        <%- returnPrefix %> <%= entityInstance %>Repository.<% if (fieldsContainOwnerManyToMany === true) { %>findOneWithEagerRelationships(id)<% } else { %>findById(id)<% } %><% if (dto !== 'mapstruct') { %><% } else { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs:26:            .map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs-27-<%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs:28:        <%- returnPrefix %> <%= entityInstance %>Service.findOne(id)
/src/generators/entity-server/templates/src/main/kotlin/package/common/get_template.ejs-29-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-25-if (pagination === 'no') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:26:    fun search<%= entityClassPlural %>(@RequestParam query: String): <% if (reactive) { %>Mono<<% } %>MutableList<<%= instanceType %>><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:27:        log.debug("REST request to search <%= entityClassPlural %> for query $query")<%- include('search_stream_template', {viaService: viaService, fromResource: true}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-28-<% } if (pagination !== 'no') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:29:    fun search<%= entityClassPlural %>(@RequestParam query: String, pageable: Pageable<% if (reactive) { %>, request: ServerHttpRequest<% } %>): <% if (reactive) { %>Mono<<% } %>ResponseEntity<<%= listOrFlux %><<%= instanceType %>>><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:30:        log.debug("REST request to search for a page of <%= entityClassPlural %> for query $query")
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-31-        
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-34-
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:35:        val page = <%= entityInstance %>Service.search(query, pageable)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-36-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:37:        val page = <%= entityInstance %><% if (searchEngine == 'elasticsearch') { %>Search<% } %>Repository.search(<% if (searchEngine === 'elasticsearch') { %>queryStringQuery(query)<% } else { %><%= entityClass %>.PREFIX, query<% } %>, pageable)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-38-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-39-        val headers = PaginationUtil.generatePaginationHttpHeaders(<% if (!reactive) { %>ServletUriComponentsBuilder.fromCurrentRequest()<% } else { %>UriComponentsBuilder.fromHttpRequest(request)<% } %>, page)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:40:        return ResponseEntity.ok().headers(headers).body(<% if (!viaService && dto === 'mapstruct') { %><%= entityListToDtoListReference %>(<% } %>page.content<% if (!viaService && dto === 'mapstruct') { %>)<% } %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-41-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:42:        return <%= entityInstance %><%= viaService ?
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-43-                'Service.' + (searchEngine === 'elasticsearch' ? 'searchCount' : 'countAll') :
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-44-                (searchEngine === 'elasticsearch' ? 'Search' : '') + 'Repository.count' %>()
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:45:                .map { PageImpl<<%= instanceType %>>(listOf(), pageable, it) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-46-                .map { PaginationUtil.generatePaginationHttpHeaders(UriComponentsBuilder.fromHttpRequest(request), it) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs:47:                .map { ResponseEntity.ok().headers(it).body(<%= entityInstance %><%= viaService ? 'Service' : (searchEngine === 'elasticsearch' ? 'Search' : '') + 'Repository' %>.search(<% if (!viaService && searchEngine === 'couchbase') { %><%= entityClass %>.PREFIX, <% } %>query, pageable)<% if (!viaService && dto === 'mapstruct') { %>.map(<%= entityToDtoReference %>)<% } %>) }
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_template.ejs-48-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-25-            return StreamSupport
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:26:                .stream(<%= entityInstance %>SearchRepository.search(queryStringQuery(query)).spliterator(), false)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-27-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:28:            return <%= entityInstance %>Repository.search(<%= entityClass %>.PREFIX, query)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-29-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-30-        <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:31:                .map(<%= entityToDtoReference %>)
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-32-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-36-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:37:        return <%= entityInstance %><% if (searchEngine === 'elasticsearch') { %>Search<% } %>Repository.search(<% if (searchEngine === 'couchbase') { %><%= entityClass %>.PREFIX, <% } %>query)<%_ if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:38:            .map(<%= entityToDtoReference %>)<%_ } %><%_ if (fromResource) { _%>.collectList()<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-39-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-40-<%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs:41:        return <%= entityInstance %>Service.search(query)<% if (reactive && fromResource) { %>.collectList()<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/common/search_stream_template.ejs-42-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-40-<%_ if (dto !== 'mapstruct' || service === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:41:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-42-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-43-<%_ if (service !== 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:44:import <%= packageName %>.service.<%= entityClass %>Service
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-45-<%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:46:import <%= packageName %>.repository.<%= entityClass %>Repository
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-47-    <%_ if (isUsingMapsId === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:48:import <%= packageName %>.repository.<%= mapsIdAssoc.otherEntityNameCapitalized %>Repository
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-49-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-50-    <%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:51:import <%= packageName %>.repository.search.<%= entityClass %>SearchRepository
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-52-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-54-<%_ if (saveUserSnapshot) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:55:import <%= packageName %>.repository.UserRepository
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-56-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:57:import <%= packageName %>.web.rest.errors.BadRequestAlertException
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-58-<%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:59:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-60-<%_ if (service === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:61:import <%= packageName %>.service.mapper.<%= entityClass %>Mapper
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-62-<%_ } } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-63-<%_ if (jpaMetamodelFiltering) {  _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:64:import <%= packageName %>.service.dto.<%= entityClass %>Criteria
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:65:import <%= packageName %>.service.<%= entityClass %>QueryService
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-66-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-129-
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:130:private const val ENTITY_NAME = "<%= entityName %>"
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-131-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-132-/**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:133: * REST controller for managing [<%= packageName %>.domain.<%= asEntity(entityClass) %>].
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-134- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-139-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:140:class <%= entityClass %>Resource(
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-141-<%_
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-156-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:157:     * `POST  /<%= entityApiUrl %>` : Create a new <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-158-     *
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:159:     * @param <%= instanceName %> the <%= instanceName %> to create.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:160:     * @return the [ResponseEntity] with status `201 (Created)` and with body the new <%= instanceName %>, or with status `400 (Bad Request)` if the <%= entityInstance %> has already an ID.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-161-     * @throws URISyntaxException if the Location URI syntax is incorrect.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-162-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:163:    @PostMapping("/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:164:    fun create<%= entityClass %>(<% if (validation) { %>@Valid <% } %>@RequestBody <%= instanceName %>: <%= instanceType %>): <% if (reactive) { %>Mono<<% } %>ResponseEntity<<%= instanceType %>><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:165:        log.debug("REST request to save <%= entityClass %> : $<%= instanceName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:166:        if (<%= instanceName %>.id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-167-            throw BadRequestAlertException(
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:168:                "A new <%= entityInstance %> cannot already have an ID",
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-169-                ENTITY_NAME, "idexists"
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-173-            <%_ if (manyToManyWithUser) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:174:            if (<%= instanceName %>.users != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-175-                // Save users in case they are new and only exists in gateway
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:176:                userRepository.saveAll(<%= instanceName %>.users);
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-177-            }
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-178-            <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:179:            if (<%= instanceName %>.user != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-180-                // Save user in case it's new and only exists in gateway
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:181:                userRepository.save(<%= instanceName %>.user)
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-182-            }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-185-        <%_ if (databaseType === 'cassandra') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:186:        <%= instanceName %>.id = UUID.randomUUID()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-187-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-189-<%- include('../../common/save_template', {asEntity, asDto, viaService: viaService, returnDirectly: false, isUsingMapsId: isUsingMapsId, mapsIdAssoc: mapsIdAssoc, isController: true}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:190:        return ResponseEntity.created(URI("/api/<%= entityApiUrl %>/${result.id}"))
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:191:            .headers(HeaderUtil.createEntityCreationAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, result.id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>))
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-192-            .body(result)
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-196-                try {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:197:                    ResponseEntity.created(URI("/api/<%= entityApiUrl %>/${result.id}"))
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:198:                        .headers(HeaderUtil.createEntityCreationAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, result.id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>))
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-199-                        .body(result)
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-207-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:208:     * `PUT  /<%= entityApiUrl %>` : Updates an existing <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-209-     *
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:210:     * @param <%= instanceName %> the <%= instanceName %> to update.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:211:     * @return the [ResponseEntity] with status `200 (OK)` and with body the updated <%= instanceName %>,
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:212:     * or with status `400 (Bad Request)` if the <%= instanceName %> is not valid,
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:213:     * or with status `500 (Internal Server Error)` if the <%= instanceName %> couldn't be updated.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-214-     * @throws URISyntaxException if the Location URI syntax is incorrect.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-215-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:216:    @PutMapping("/<%= entityApiUrl %>")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:217:    fun update<%= entityClass %>(<% if (validation) { %>@Valid <% } %>@RequestBody <%= instanceName %>: <%= instanceType %>): <% if (reactive) { %>Mono<<% } %>ResponseEntity<<%= instanceType %>><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:218:        log.debug("REST request to update <%= entityClass %> : $<%= instanceName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:219:        if (<%= instanceName %>.id == null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-220-            throw BadRequestAlertException("Invalid id", ENTITY_NAME, "idnull")
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-223-            <%_ if (manyToManyWithUser) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:224:                if (<%= instanceName %>.users != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-225-                    // Save users in case they are new and only exists in gateway
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:226:                    userRepository.saveAll(<%= instanceName %>.users);
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-227-                }
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-228-                <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:229:                if (<%= instanceName %>.user != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-230-                    // Save user in case it's new and only exists in gateway
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:231:                    userRepository.save(<%= instanceName %>.user)
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-232-                }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-239-                HeaderUtil.createEntityUpdateAlert(
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:240:                    applicationName, <%= enableTranslation %>, ENTITY_NAME,
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:241:                     <%= instanceName %>.id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-242-                )
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-248-                        .map { result -> ResponseEntity.ok()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:249:                            .headers(HeaderUtil.createEntityUpdateAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, result.id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>))
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-250-                            .body(result)
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-255-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:256:     * `GET  /<%= entityApiUrl %>` : get all the <%= entityInstancePlural %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-257-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-267-     * @param filter the filter of the request.<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:268:     * @return the [ResponseEntity] with status `200 (OK)` and the list of <%= entityInstancePlural %> in body.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-269-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:270:    @GetMapping("/<%= entityApiUrl %>")<%_ if (databaseType === 'sql' && isUsingMapsId === true && !viaService) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-271-    @Transactional(readOnly = true)<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-275-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:276:     * `GET  /<%= entityApiUrl %>` : get all the <%= entityInstancePlural %> as a stream.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:277:     * @return the [Flux] of <%= entityInstancePlural %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-278-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:279:    @GetMapping(value = ["/<%= entityApiUrl %>"], produces = [MediaType.APPLICATION_STREAM_JSON_VALUE])
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-280-    <%_ if (databaseType === 'sql' && isUsingMapsId === true && !viaService) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-282-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:283:    fun getAll<%= entityClassPlural %>AsStream(): Flux<<%= instanceType %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:284:        log.debug("REST request to get all <%= entityClassPlural %> as a stream")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-285-        <%_ if (viaService) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:286:        return <%= entityInstance %>Service.findAll()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-287-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:288:        return <%= entityInstance %>Repository.findAll()<%_ if (dto === 'mapstruct') { _%>.map(<%= entityToDtoReference %>)<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-289-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-293-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:294:     * `GET  /<%= entityApiUrl %>/:id` : get the "id" <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-295-     *
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:296:     * @param id the id of the <%= instanceName %> to retrieve.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:297:     * @return the [ResponseEntity] with status `200 (OK)` and with body the <%= instanceName %>, or with status `404 (Not Found)`.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-298-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:299:    @GetMapping("/<%= entityApiUrl %>/{id}")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-300-    <%_ if (databaseType === 'sql' && isUsingMapsId === true && !viaService) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-302-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:303:    fun get<%= entityClass %>(@PathVariable id: <%= primaryKeyType %>): <% if (reactive) { %>Mono<<% } %>ResponseEntity<<%= instanceType %>><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:304:        log.debug("REST request to get <%= entityClass %> : $id")<%- include('../../common/get_template', {asEntity, asDto, viaService, returnDirectly:false}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:305:        return ResponseUtil.wrapOrNotFound(<%= instanceName %>)
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-306-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-308-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:309:     *  `DELETE  /<%= entityApiUrl %>/:id` : delete the "id" <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-310-     *
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:311:     * @param id the id of the <%= instanceName %> to delete.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-312-     * @return the [ResponseEntity] with status `204 (NO_CONTENT)`.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-313-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:314:    @DeleteMapping("/<%= entityApiUrl %>/{id}")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-315-    <%_ if (reactive) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-317-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:318:    fun delete<%= entityClass %>(@PathVariable id: <%= primaryKeyType %>): <% if (reactive) { %>Mono<<% } %>ResponseEntity<Void><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:319:        log.debug("REST request to delete <%= entityClass %> : $id")
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-320-<%- include('../../common/delete_template', {viaService: viaService, fromResource: true}); -%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-322-            return ResponseEntity.noContent()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:323:                .headers(HeaderUtil.createEntityDeletionAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>)).build()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-324-        <%_ } else { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-326-                .then(Mono.just(ResponseEntity.noContent()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:327:                    .headers(HeaderUtil.createEntityDeletionAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>)).build<Void>())
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-328-                )
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-331-                    ResponseEntity.noContent()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:332:                        .headers(HeaderUtil.createEntityDeletionAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, id<% if (primaryKeyType !== 'String') { %>.toString()<% } %>)).build<Void>()
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-333-                }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-340-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:341:     * `SEARCH  /_search/<%= entityApiUrl %>?query=:query` : search for the <%= entityInstance %> corresponding
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-342-     * to the query.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-343-     *
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:344:     * @param query the query of the <%= entityInstance %> search.
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-345-    <%_ if (pagination !== 'no') { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-352-     */
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs:353:    @GetMapping("/_search/<%= entityApiUrl %>")<%- include('../../common/search_template', {asEntity, asDto, viaService}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/web/rest/EntityResource.kt.ejs-354-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-20-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-22-<%_ if (fieldsContainOwnerManyToMany) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-44-<%_ if (searchEngine === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:45:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-46-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-72-/**
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:73: * Spring Data <% if (databaseType === 'mongodb') { %>MongoDB<% } if (databaseType === 'neo4j') { %>Neo4j<% } if (databaseType === 'couchbase') { %>Couchbase<% } if (databaseType === 'cassandra') { %>Cassandra<% } %> repository for the [<%= asEntity(entityClass) %>] entity.
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-74- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-78-@Repository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:79:interface <%=entityClass%>Repository : <% if (databaseType === 'sql') { %>JpaRepository<% } %><% if (databaseType === 'mongodb') { %>MongoRepository<% } %><% if (databaseType === 'neo4j') { %>Neo4jRepository<% } %><% if (databaseType === 'cassandra') { %>CassandraRepository<% } %><% if (databaseType === 'couchbase') { %>N1qlCouchbaseRepository<% } %><<%=asEntity(entityClass)%>, <%= primaryKeyType %>><% if (jpaMetamodelFiltering) { %>, JpaSpecificationExecutor<<%= asEntity(entityClass) %>><% } %><% if (searchEngine === 'couchbase') { %>, SearchCouchbaseRepository<<%= asEntity(entityClass) %>, <%= primaryKeyType %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-80-    <%_ for (idx in relationships) {
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-82-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:83:    @Query("select <%= entityInstance %> from <%= asEntity(entityClass) %> <%= entityInstance %> where <%= entityInstance %>.<%= relationships[idx].relationshipFieldName %>.login = ?#{principal.<% if (authenticationType === 'oauth2') { %>preferredUsername<% } else { %>username<% } %>}")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:84:    fun findBy<%= relationships[idx].relationshipNameCapitalized %>IsCurrentUser(): MutableList<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-85-    <%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-88-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:89:    @Query(value = "select distinct <%= entityInstance %> from <%= asEntity(entityClass) %> <%= entityInstance %><% for (idx in relationships) {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:90:    if (relationships[idx].relationshipType === 'many-to-many' && relationships[idx].ownerSide === true) { %> left join fetch <%= entityInstance %>.<%= relationships[idx].relationshipFieldNamePlural %><% } } %>",
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:91:        countQuery = "select count(distinct <%= entityInstance %>) from <%= asEntity(entityClass) %> <%= entityInstance %>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:92:    fun findAllWithEagerRelationships(pageable: Pageable): Page<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-93-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:94:    @Query("select distinct <%= entityInstance %> from <%= asEntity(entityClass) %> <%= entityInstance %><% for (idx in relationships) {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:95:    if (relationships[idx].relationshipType === 'many-to-many' && relationships[idx].ownerSide === true) { %> left join fetch <%= entityInstance %>.<%= relationships[idx].relationshipFieldNamePlural %><% } } %>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:96:    fun findAllWithEagerRelationships(): MutableList<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-97-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:98:    @Query("select <%= entityInstance %> from <%= asEntity(entityClass) %> <%= entityInstance %><% for (idx in relationships) {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:99:    if (relationships[idx].relationshipType === 'many-to-many' && relationships[idx].ownerSide === true) { %> left join fetch <%= entityInstance %>.<%= relationships[idx].relationshipFieldNamePlural %><% } } %> where <%= entityInstance %>.id =:id")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:100:    fun findOneWithEagerRelationships(@Param("id") id: <%= primaryKeyType %>): Optional<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-101-    <%_
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-104-    @Query("<%= (databaseType === 'mongodb')?'{}':'#{#n1ql.selectEntity} WHERE #{#n1ql.filter}'%>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:105:    fun findAllWithEagerRelationships(pageable: Pageable): Page<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-106-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-107-    @Query("<%= (databaseType === 'mongodb')?'{}':'#{#n1ql.selectEntity} WHERE #{#n1ql.filter}'%>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:108:    fun findAllWithEagerRelationships(): MutableList<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-109-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-110-    @Query("<%- (databaseType === 'mongodb')?"{'id': ?0}":"#{#n1ql.selectEntity} USE KEYS $1 WHERE #{#n1ql.filter}"%>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:111:    fun findOneWithEagerRelationships(id: <%= primaryKeyType %>): Optional<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-112-    <%_ } else if (databaseType === 'neo4j') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-113-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:114:    @Query("MATCH (n:<%= asEntity(entityClass) %>)<-[]-(m) RETURN n,m")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:115:    fun findAllWithEagerRelationships(pageable: Pageable): Page<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-116-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:117:    @Query("MATCH (e:<%= asEntity(entityClass) %> {id: $id}) RETURN e")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs:118:    fun findOneWithEagerRelationships(id: <%= primaryKeyType %>): Optional<<%= asEntity(entityClass) %>>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityRepository.kt.ejs-119-    <%_ }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:19:package <%= packageName %>.repository.search
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-20-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-21-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:22:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-23-<%_ if (reactive) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-46-/**
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:47: * Spring Data Elasticsearch repository for the [<%= asEntity(entityClass) %>] entity.
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-48- */
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:49:interface <%=entityClass%>SearchRepository :  <% if (reactive) {%>Reactive<% } %>ElasticsearchRepository<<%= asEntity(entityClass) %>, <%=primaryKeyType%>><% if (reactive) {%>, <%= entityClass %>SearchRepositoryInternal<% } %>{}
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-50-<%_ if (reactive) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:51:interface <%= entityClass %>SearchRepositoryInternal {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:52:     fun search(query: String<% if (pagination !== 'no') { %>, pageable: Pageable<% } %>): Flux<<%= entityClass %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-53-}
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-54-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:55:class <%= entityClass %>SearchRepositoryInternalImpl(private val reactiveElasticsearchTemplate: ReactiveElasticsearchTemplate): <%= entityClass %>SearchRepositoryInternal {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-56-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-57-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:58:     override fun search(query: String<% if (pagination !== 'no') { %>, pageable: Pageable<% } %>): Flux<<%= entityClass %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-59-        val nativeSearchQuery = NativeSearchQuery(queryStringQuery(query))
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-62-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs:63:        return reactiveElasticsearchTemplate.find(nativeSearchQuery, <%= entityClass %>::class.java)
/src/generators/entity-server/templates/src/main/kotlin/package/repository/search/EntitySearchRepository.kt.ejs-64-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:19:package <%= packageName %>.repository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-20-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:21:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-22-<%_ if (databaseType === 'cassandra') { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-25-<%_ if (searchEngine === 'couchbase') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:26:import <%= packageName %>.repository.search.SearchCouchbaseRepository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-27-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-57- /**
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:58: * Spring Data <% if (databaseType === 'mongodb') { %>MongoDB<% } if (databaseType === 'couchbase') { %>Couchbase<% } if (databaseType === 'cassandra') { %>Cassandra<% } if (databaseType === 'neo4j') { %>Neo4j<% } %> reactive repository for the <%= asEntity(entityClass) %> entity.
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-59- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-61-@Repository
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:62:interface <%= entityClass %>Repository: Reactive<% if (databaseType === 'mongodb') { %>Mongo<% } if (databaseType === 'couchbase') { %>N1qlCouchbase<% } if (databaseType === 'neo4j') { %>Neo4j<% } if (databaseType === 'cassandra') { %>Cassandra<% } %>Repository<<%= asEntity(entityClass) %>, <%= primaryKeyType %>><% if (searchEngine === 'couchbase') { %>, SearchCouchbaseRepository<<%= asEntity(entityClass) %>, <%= primaryKeyType %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-63-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-65-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:66:    fun findAllBy(pageable: Pageable): Flux<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-67-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-71-    @Query("<%= (databaseType === 'mongodb') ? '{}' : '#{#n1ql.selectEntity} WHERE #{#n1ql.filter}' %>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:72:    fun findAllWithEagerRelationships(pageable: Pageable): Flux<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-73-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-74-    @Query("<%= (databaseType === 'mongodb') ? '{}' : '#{#n1ql.selectEntity} WHERE #{#n1ql.filter}' %>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:75:    fun findAllWithEagerRelationships(): Flux<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-76-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-77-    @Query("<%- (databaseType === 'mongodb') ? "{'id': ?0}" : "#{#n1ql.selectEntity} USE KEYS $1 WHERE #{#n1ql.filter}" %>")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:78:    fun findOneWithEagerRelationships(id: <%= primaryKeyType %>): Mono<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-79-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-80-        <%_ if (databaseType === 'neo4j') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:81:    @Query("MATCH (n:<%= asEntity(entityClass) %>)<-[]-(m) RETURN n,m")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:82:    fun findAllWithEagerRelationships(pageable: Pageable): Flux<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-83-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:84:    @Query("MATCH (n:<%= asEntity(entityClass) %>)<-[]-(m) RETURN n,m")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:85:    fun findAllWithEagerRelationships(): Flux<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-86-
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:87:    @Query("MATCH (e:<%= asEntity(entityClass) %> {id: $id}) RETURN e")
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs:88:    fun findOneWithEagerRelationships(<%= primaryKeyType %> id): Mono<<%= asEntity(entityClass) %>> 
/src/generators/entity-server/templates/src/main/kotlin/package/repository/EntityReactiveRepository.kt.ejs-89-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:19:package <%= packageName %>.service.mapper
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-46-
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:47:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:48:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-49-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-59-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:60: * Mapper for the entity [<%= asEntity(entityClass) %>] and its DTO [<%= asDto(entityClass) %>].
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-61- */
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:62:@Mapper(componentModel = "spring", uses = [<%= existingMappings.map(otherEntityNameCapitalized => otherEntityNameCapitalized + 'Mapper::class').join(', ') %>])
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:63:interface <%= entityClass %>Mapper :
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:64:    EntityMapper<<%= asDto(entityClass) %>, <%= asEntity(entityClass) %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-65-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-90-    <%_ if (renMapAnotEnt === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:91:    override fun toDto(<%= asEntity(entityInstance) %>: <%= asEntity(entityClass) %>): <%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-92-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-125-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:126:    override fun toEntity(<%= asDto(entityInstance) %>: <%= asDto(entityClass) %>): <%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-127-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-129-    @JvmDefault
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:130:    fun fromId(id: <%= primaryKeyType %>?) = id?.let {
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:131:        val <%= asEntity(entityInstance) %> = <%= asEntity(entityClass) %>()
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:132:        <%= asEntity(entityInstance) %>.id = id
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs:133:        <%= asEntity(entityInstance) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/EntityMapper.kt.ejs-134-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/BaseEntityMapper.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/BaseEntityMapper.kt.ejs:19:package <%= packageName %>.service.mapper
/src/generators/entity-server/templates/src/main/kotlin/package/service/mapper/BaseEntityMapper.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:19:package <%= packageName %>.service
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-43-
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:44:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:45:import <%= packageName %>.domain.<%= asEntity(entityClass) %>_
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-46-<%_
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-58-_%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:59:import <%= packageName %>.domain.<%= relType %>_
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-60-<%_ }); _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:61:import <%= packageName %>.repository.<%= entityClass %>Repository<% if (searchEngine === 'elasticsearch') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:62:import <%= packageName %>.repository.search.<%= entityClass %>SearchRepository<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:63:import <%= packageName %>.service.dto.<%= entityClass %>Criteria
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-64-<%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:65:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:66:import <%= packageName %>.service.mapper.<%= entityClass %>Mapper
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-67-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-69-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:70: * Service for executing complex queries for [<%= asEntity(entityClass) %>] entities in the database.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:71: * The main input is a [<%= entityClass %>Criteria] which gets converted to [Specification],
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-72- * in a way that all the filters must apply.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:73: * It returns a [MutableList] of [<%= instanceType %>] or a [Page] of [<%= instanceType %>] which fulfills the criteria.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-74- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-76-@Transactional(readOnly = true)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:77:class <%= serviceClassName %>(
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-78-<%- include('../common/inject_template', {viaService: false, constructorName: serviceClassName, queryService: false, isUsingMapsId: false, mapsIdAssoc: null, isController: false}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:79:) : QueryService<<%= asEntity(entityClass) %>>() {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-80-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-83-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:84:     * Return a [MutableList] of [<%= instanceType %>] which matches the criteria from the database.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-85-     * @param criteria The object which holds all the filters, which the entities should match.
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-88-    @Transactional(readOnly = true)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:89:    fun findByCriteria(criteria: <%= criteria %>?): MutableList<<%= instanceType %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-90-        log.debug("find by criteria : $criteria")
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-92-    <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:93:        return <%= entityListToDto %>(<%= repository %>.findAll(specification))
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-94-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:95:        return <%= repository %>.findAll(specification)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-96-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-99-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:100:     * Return a [Page] of [<%= instanceType %>] which matches the criteria from the database.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-101-     * @param criteria The object which holds all the filters, which the entities should match.
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-105-    @Transactional(readOnly = true)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:106:    fun findByCriteria(criteria: <%= criteria %>?, page: Pageable): Page<<%= instanceType %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-107-        log.debug("find by criteria : $criteria, page: $page")
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-109-    <%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:110:        return <%= repository %>.findAll(specification, page)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:111:            .map(<%= entityToDtoReference %>)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-112-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:113:        return <%= repository %>.findAll(specification, page)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-114-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-122-    @Transactional(readOnly = true)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:123:    fun countByCriteria(criteria: <%= criteria %>?): Long {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-124-        log.debug("count by criteria : $criteria")
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-125-        val specification = createSpecification(criteria)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:126:        return <%= repository %>.count(specification)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-127-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-129-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:130:     * Function to convert [<%= criteria %>] to a [Specification].
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-131-     * @param criteria The object which holds all the filters, which the entities should match.
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-133-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:134:    protected fun createSpecification(criteria: <%= criteria %>?): Specification<<%= asEntity(entityClass) %>?> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:135:        var specification: Specification<<%= asEntity(entityClass) %>?> = Specification.where(null)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-136-        if (criteria != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-137-            if (criteria.id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:138:                specification = specification.and(<%= getSpecificationBuilder(primaryKeyType) %>(criteria.id, <%= asEntity(entityClass) %>_.id))
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-139-            }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-142-                if (isFilterableType(field.fieldType)) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:143:            if (criteria.<%= field.fieldName %> != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:144:                specification = specification.and(<%= getSpecificationBuilder(field.fieldType) %>(criteria.<%= field.fieldName %>, <%= asEntity(entityClass) %>_.<%= field.fieldName %>))
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-145-            }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-150-                const metamodelFieldName = (relationship.relationshipType === 'many-to-many' || relationship.relationshipType === 'one-to-many') ? relationship.relationshipFieldNamePlural : relationship.relationshipFieldName; _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:151:            if (criteria.<%= relationship.relationshipName %>Id != null) {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:152:                specification = specification.and(buildSpecification(criteria.<%= relationship.relationshipName %>Id) {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs:153:                    it.join(<%= asEntity(entityClass) %>_.<%= metamodelFieldName %>, JoinType.LEFT).get(<%= asEntity(relationship.otherEntityNameCapitalized) %>_.id)
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityQueryService.kt.ejs-154-                })
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:19:package <%= packageName %>.service.dto
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-23-<%_ for (idx in fields) { if (fields[idx].fieldIsEnum === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:24:import <%= packageName %>.domain.enumeration.<%= fields[idx].fieldType %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-25-<%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-87-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:88: * Criteria class for the [<%= packageName %>.domain.<%= asEntity(entityClass) %>] entity. This class is used in
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:89: * [<%= packageName %>.web.rest.<%= entityClass %>Resource] to receive all the possible filtering options from the
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-90- * Http GET request parameters.
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-91- * For example the following could be a valid request:
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:92: * ```/<%= entityApiUrl %>?id.greaterThan=5&attr1.contains=something&attr2.specified=false```
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-93- * As Spring is unable to properly convert the types, unless specific [Filter] class are used, we need to use
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-95- */
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:96:data class <%= entityClass %>Criteria(
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-97-<%_ filterVariables.forEach((filterVariable, index) => {
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-100-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:101:    var <%= filterVariable.name %>: <%- filterVariable.filterType %>? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-102-<%_ }) _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-104-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:105:    constructor(other: <%= entityClass %>Criteria) :
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-106-        this(
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-110-_%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:111:            other.<%= filterVariable.name %>?.copy()<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-112-<%_ }); _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-117-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:118:     * Class for filtering <%= key %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-119-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:120:    class <%= extraFilter.type %> : <%- extraFilter.superType %> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-121-        constructor()
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-122-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:123:        constructor(filter: <%= extraFilter.type %>) : super(filter)
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-124-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:125:        override fun copy() = <%= extraFilter.type %>(this)
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-126-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-128-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs:129:    override fun copy() = <%= entityClass %>Criteria(this)
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityCriteria.kt.ejs-130-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:19:package <%= packageName %>.service.dto
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-20-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-63-<%_ Object.keys(uniqueEnums).forEach(function(element) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:64:    import <%= packageName %>.domain.enumeration.<%= element %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-65-<%_ }); _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-81-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:82: * A DTO for the [<%= packageName %>.domain.<%= asEntity(entityClass) %>] entity.
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-83- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-86-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:87:data class <%= asDto(entityClass) %>(
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-88-    <% if (!embedded) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:89:    var id: <%= primaryKeyType %>? = null,
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-90-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-122-    <%_ if (fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:123:    var <%= fieldName %>: <% if(fieldType === 'byte[]') { _%>ByteArray<%_ } else if(fieldType==='Integer'){ _%>Int<%_ } else { _%><%= fieldType %><% } %>? = null<%_ if (fieldType === 'byte[]' || fieldType === 'ByteBuffer') { _%>,<%_ } else { _%><%= comma %><%_ } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-124-    <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:125:    var <%= fieldName %>: String? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-126-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-127-    <%_ if ((fieldType === 'byte[]' || fieldType === 'ByteBuffer') && fieldTypeBlobContent !== 'text') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:128:    var <%= fieldName %>ContentType: String? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-129-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-147-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:148:    var <%= relationshipFieldNamePlural %>: MutableSet<<%= asDto(otherEntityNameCapitalized) %>> = mutableSetOf()<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-149-    <%_ } else if (relationshipType === 'one-to-one' && ownerSide === true && otherEntityIsEmbedded) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:150:    var <%= relationshipFieldName %>: <%= asDto(otherEntityNameCapitalized) %><%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-151-    <%_ } else if (!embedded && (relationshipType === 'many-to-one' || (relationshipType === 'one-to-one' && ownerSide === true))) {
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-156-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:157:    var <%= relationshipFieldName %>Id: <%= otherEntityPrimaryKeyType %>? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-158-    <%_ if (otherEntityFieldCapitalized !== 'Id' && otherEntityFieldCapitalized !== '') {
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-161-
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:162:    var <%= relationshipFieldName %><%= otherEntityFieldCapitalized %>: String? = null<%= comma %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-163-    <%_ } } }); _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-168-        if (this === other) return true
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs:169:        if (other !is <%= asDto(entityClass) %>) return false
/src/generators/entity-server/templates/src/main/kotlin/package/service/dto/EntityDTO.kt.ejs-170-        <%_ if (!embedded) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:19:package <%= packageName %>.service<% if (service === 'serviceImpl') { %>.impl<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-20-<%_
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-43-<%_ if (service === 'serviceImpl') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:44:import <%= packageName %>.service.<%= entityClass %>Service
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-45-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:46:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:47:import <%= packageName %>.repository.<%= entityClass %>Repository
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-48-<%_ if (isUsingMapsId === true) { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:49:import <%= packageName %>.repository.<%= mapsIdAssoc.otherEntityNameCapitalized %>Repository
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-50-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-51-<%_ if (searchEngine === 'elasticsearch') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:52:import <%= packageName %>.repository.search.<%= entityClass %>SearchRepository
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-53-<%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-54-<%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:55:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:56:import <%= packageName %>.service.mapper.<%= entityClass %>Mapper
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-57-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-91-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:92: * Service Implementation for managing [<%= asEntity(entityClass) %>].
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-93- */
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-95-@Transactional<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:96:class <%= serviceClassName %>(
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-97-    <%- include('../../common/inject_template', {asEntity, asDto, viaService: false, constructorName: serviceClassName, queryService: false, isUsingMapsId: isUsingMapsId, mapsIdAssoc: mapsIdAssoc, isController: false}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:98:)<% if (service === 'serviceImpl') { %> : <%= entityClass %>Service<% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-99-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-103-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:104:     * Save a <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-105-     *
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:106:     * @param <%= instanceName %> the entity to save.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-107-     * @return the persisted entity.
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-109-     <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:110:    <% if (service === 'serviceImpl') { _%>override <% } %>fun save(<%= instanceName %>: <%= instanceType %>): <% if (reactive) { %>Mono<<% } %><%= instanceType %><% if (reactive) { %>><% } %> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:111:        log.debug("Request to save <%= entityClass %> : $<%= instanceName %>")
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-112-        <%_ if (!reactive) { _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-120-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:121:     * Get all the <%= entityInstancePlural %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-122-     *<% if (pagination !== 'no') { %>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-129-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:130:    <% if (service === 'serviceImpl') { %>override <% } %>fun findAll(<% if (pagination !== 'no') { %>pageable: Pageable<% } %>): <% if (pagination !== 'no') { %><%= pageOrFlux %><<%= instanceType %><% } else { %><%= listOrFlux %><<%= instanceType %><% } %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:131:        log.debug("Request to get all <%= entityClassPlural %>")
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-132-        <%_ if (pagination === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:133:        return <%= entityInstance %>Repository.<% if (fieldsContainOwnerManyToMany === true) { %>findAllWithEagerRelationships<% } else { %>findAll<% } %>()<% if (dto === 'mapstruct') { %><% if (reactive !== true) { %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:134:            .mapTo(mutableListOf(), <%= entityToDtoReference %>)<% } else { %>.map(<%= entityToDtoReference %> )<% } %><% } %>            
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-135-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:136:        return <%= entityInstance %>Repository.findAll<% if (reactive) { %>By<% } %>(pageable)<% if (dto === 'mapstruct') { %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:137:            .map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-138-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-144-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:145:     * Get all the <%= entityInstancePlural %> with eager load of many-to-many relationships.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-146-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-150-    <% if (service === 'serviceImpl') { %>override <% } %>fun findAllWithEagerRelationships(pageable: Pageable) =
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:151:        <%= entityInstance %>Repository.findAllWithEagerRelationships(pageable)<% if (dto !== 'mapstruct') { %><% } else { %>.map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-152-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-157-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:158:    * Returns the number of <%= entityInstancePlural %> available.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-159-    *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-161-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:162:    <% if (service === 'serviceImpl') { %>override <% } %>fun countAll() = <%= entityInstance %>Repository.count()
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-163-
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-166-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:167:    * Returns the number of <%= entityInstancePlural %> available in search repository.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-168-    *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-170-        <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:171:    <% if (service === 'serviceImpl') { %>override <% } %>fun searchCount() = <%= entityInstance %>SearchRepository.count()
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-172-    <%_  } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-176-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:177:     * Get one <%= entityInstance %> by id.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-178-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-185-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:186:    <% if (service === 'serviceImpl') { %>override <% } %>fun findOne(id: <%= primaryKeyType %>): <%= optionalOrMono %><<%= instanceType %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:187:        log.debug("Request to get <%= entityClass %> : $id")<%- include('../../common/get_template', {asEntity, asDto, viaService: false, returnDirectly:true}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-188-    }
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-191-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:192:     * Delete the <%= entityInstance %> by id.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-193-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-196-     <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:197:    <% if (service === 'serviceImpl') { %>override <% } %>fun delete(id: <%= primaryKeyType %>): <%- reactive ? 'Mono<Void>' : 'Unit' %> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:198:        log.debug("Request to delete <%= entityClass %> : $id")
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-199-<%- include('../../common/delete_template', {viaService: false, fromResource: false}); -%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-204-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:205:     * Search for the <%= entityInstance %> corresponding to the query.
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-206-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-214-    <%_ } _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:215:    <% if (service === 'serviceImpl') { %>override <% } %>fun search(query: String<% if (pagination !== 'no') { %>, pageable: Pageable<% } %>): <% if (pagination !== 'no') { %><%= pageOrFlux %><<%= instanceType %><% } else { %><%= listOrFlux %><<%= instanceType %><% } %>> {
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-216-        <%_ if (pagination === 'no') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:217:        log.debug("Request to search <%= entityClassPlural %> for query $query")<%- include('../../common/search_stream_template', {viaService: false, fromResource: false}); -%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-218-        <%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:219:        log.debug("Request to search for a page of <%= entityClassPlural %> for query $query")
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs:220:        return <%= entityInstance %><% if (searchEngine === 'elasticsearch') { %>Search<% } %>Repository.search(<% if (searchEngine === 'elasticsearch') { %><%= reactive ? 'query' : 'queryStringQuery(query)' %><% } else { %><%= entityClass %>.PREFIX, query<% } %>, pageable)<%_ if (dto !== 'mapstruct') { _%><% } else { %>.map(<%= entityToDtoReference %>)<% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/impl/EntityServiceImpl.kt.ejs-221-        <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-18--%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:19:package <%= packageName %>.service
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-20-<%_
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-28-<%_ if (dto === 'mapstruct') { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:29:import <%= packageName %>.service.dto.<%= asDto(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-30-<%_ } else { _%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:31:import <%= packageName %>.domain.<%= asEntity(entityClass) %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-32-<%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-51-/**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:52: * Service Interface for managing [<% if (dto === 'mapstruct') { %><%= packageName %>.domain.<% } %><%= asEntity(entityClass) %>].
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-53- */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:54:interface <%= entityClass %>Service {
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-55-
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-56-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:57:     * Save a <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-58-     *
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:59:     * @param <%= instanceName %> the entity to save.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-60-     * @return the persisted entity.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-61-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:62:    fun save(<%= instanceName %>: <%= instanceType %>): <% if (reactive) { %>Mono<<% } %><%= instanceType %><% if (reactive) { %>><% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-63-
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-64-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:65:     * Get all the <%= entityInstancePlural %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-66-     *<% if (pagination !== 'no') { %>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-69-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:70:    fun findAll(<% if (pagination !== 'no') { %>pageable: Pageable<% } %>): <% if (pagination !== 'no') { %><%= pageOrFlux %><<%= instanceType %><% } else { %><%= listOrFlux %><<%= instanceType %><% } %>>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-71-<% for (idx in relationships) { if (relationships[idx].relationshipType === 'one-to-one' && relationships[idx].ownerSide !== true) { -%>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-72-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:73:     * Get all the [<%= asDto(entityClass) %>] where <%= relationships[idx].relationshipNameCapitalized %> is `null`.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-74-     *
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:75:     * @return the {@link <%= listOrFlux %>} of entities.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-76-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:77:    fun findAllWhere<%= relationships[idx].relationshipNameCapitalized %>IsNull(): <%= listOrFlux %><<%= instanceType %>>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-78-<%_ } } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-81-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:82:     * Get all the <%= entityInstancePlural %> with eager load of many-to-many relationships.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-83-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-85-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:86:    fun findAllWithEagerRelationships(pageable: Pageable): <%= pageOrFlux %><<%= instanceType %>>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-87-    <%_ } _%>
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-89-        /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:90:         * Returns the number of <%= entityInstancePlural %> available.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-91-         *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-96-        /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:97:        * Returns the number of <%= entityInstancePlural %> available in search repository.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-98-        *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-103-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:104:     * Get the "id" <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-105-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-108-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:109:    fun findOne(id: <%= primaryKeyType %>): <%= optionalOrMono %><<%= instanceType %>>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-110-
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-111-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:112:     * Delete the "id" <%= entityInstance %>.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-113-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-115-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:116:    fun delete(id: <%= primaryKeyType %>)<% if (reactive) { %>: Mono<Void> <% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-117-    
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-121-    /**
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:122:     * Search for the <%= entityInstance %> corresponding to the query.
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-123-     *
##############################################
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-128-     */
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs:129:    fun search(query: String<% if (pagination !== 'no') { %>, pageable: Pageable<% } %>): <% if (pagination !== 'no') { %><%= pageOrFlux %><<%= instanceType %><% } else { %><%= listOrFlux %><<%= instanceType %><% } %>><% } %>
/src/generators/entity-server/templates/src/main/kotlin/package/service/EntityService.kt.ejs-130-}
##############################################
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs-14--%>
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs:15:package <%= packageName %>.service.impl
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs-16-
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs:17:import <%= packageName %>.service.<%= serviceClass %>
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs-18-import org.slf4j.LoggerFactory
##############################################
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs-23-@Transactional<% } %>
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs:24:class <%= serviceClass %>Impl : <%= serviceClass %> {
/src/generators/spring-service/templates/src/main/kotlin/package/service/impl/ServiceImpl.kt.ejs-25-
##############################################
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-14--%>
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs:15:package <%= packageName %>.service
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-16-
##############################################
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-23-@Transactional<% } %>
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs:24:class <%= serviceClass %> {
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-25-
##############################################
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-27-
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs:28:}<% } else  { %>interface <%= serviceClass %> {
/src/generators/spring-service/templates/src/main/kotlin/package/service/Service.kt.ejs-29-
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-18--%>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-20-
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:21:import <%= packageName %>.<%= mainClass %>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-22-import org.junit.jupiter.api.BeforeEach
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-29-<%_ for(let idx in mockRequestImports) { _%>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:30:import <%= mockRequestImports[idx] %>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-31-<%_ } _%>
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-33-/**
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:34: * Test class for the <%= controllerClass %> REST controller.
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-35- *
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:36: * @see <%= controllerClass %>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-37- */
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:38:@SpringBootTest(classes = [<%= mainClass %>::class])
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:39:class <%= controllerClass %>IT {
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-40-
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-46-
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:47:        val <%= controllerInstance %> = <%= controllerClass %>()
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-48-        restMockMvc = MockMvcBuilders
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:49:            .standaloneSetup(<%= controllerInstance %>)
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-50-            .build()
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-54-    /**
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:55:    * Test <%= controllerActions[idx].actionName %>
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-56-    */
##############################################
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-58-    @Throws(Exception::class)
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:59:    fun test<%= controllerActions[idx].actionNameUF %>() {
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs:60:        restMockMvc.perform(<%= controllerActions[idx].actionMethod.toLowerCase() %>("/api/<%= apiPrefix %>/<%= controllerActions[idx].actionPath %>"))
/src/generators/spring-controller/templates/src/test/kotlin/package/web/rest/ResourceIT.kt.ejs-61-            .andExpect(status().isOk)
##############################################
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-18--%>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:19:package <%= packageName %>.web.rest
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-20-
##############################################
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-25-<%_ for(let idx in mappingImports) { _%>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:26:import <%= mappingImports[idx] %>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-27-<%_ } _%>
##############################################
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-36-/**
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:37: * <%= controllerClass %> controller
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-38- */
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-39-@RestController
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:40:@RequestMapping("/api/<%= apiPrefix %>")
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:41:class <%= controllerClass %> {
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-42-
##############################################
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-46-    /**
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:47:    * <%= controllerActions[idx].actionMethod.toUpperCase() %> <%= controllerActions[idx].actionName %>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-48-    */
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:49:    @<%= controllerActions[idx].actionMethod %>Mapping("/<%= (controllerActions[idx].actionPath) %>")
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:50:    fun <%= controllerActions[idx].actionName %>(): <% if (reactiveController) { %>Mono<String><% } else { %>String<% } %> =
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-51-        <%_ if (reactiveController) { _%>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:52:        Mono.just("<%= controllerActions[idx].actionName %>")
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-53-        <%_ } else { _%>
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs:54:        "<%= controllerActions[idx].actionName %>"
/src/generators/spring-controller/templates/src/main/kotlin/package/web/rest/Resource.kt.ejs-55-        <%_ } _%>
