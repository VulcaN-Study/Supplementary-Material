/src/cli/cli.js-93-
/src/cli/cli.js:94:program.parse(process.argv);
/src/cli/cli.js-95-
##############################################
/src/generators/server/templates/src/test/java/package/web/rest/AuditResourceIT.java.ejs-74-    private static final String SAMPLE_TYPE = "SAMPLE_TYPE";
/src/generators/server/templates/src/test/java/package/web/rest/AuditResourceIT.java.ejs:75:    private static final Instant SAMPLE_TIMESTAMP = Instant.parse("2015-08-04T10:11:30Z");
/src/generators/server/templates/src/test/java/package/web/rest/AuditResourceIT.java.ejs-76-    private static final long SECONDS_PER_DAY = 60 * 60 * 24;
##############################################
/src/generators/server/templates/src/test/java/package/web/rest/TestUtil.java.ejs-115-            try {
/src/generators/server/templates/src/test/java/package/web/rest/TestUtil.java.ejs:116:                if (!date.isEqual(ZonedDateTime.parse(item))) {
/src/generators/server/templates/src/test/java/package/web/rest/TestUtil.java.ejs-117-                    mismatchDescription.appendText("was ").appendValue(item);
##############################################
/src/generators/server/templates/src/test/java/package/AbstractCassandraTest.java.ejs-68-
/src/generators/server/templates/src/test/java/package/AbstractCassandraTest.java.ejs:69:            Session session = cluster.connect();
/src/generators/server/templates/src/test/java/package/AbstractCassandraTest.java.ejs-70-            createTestKeyspace(session);
##############################################
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs-74-        dateTimeWrapper = new DateTimeWrapper();
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:75:        dateTimeWrapper.setInstant(Instant.parse("2014-11-12T05:50:00.0Z"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:76:        dateTimeWrapper.setLocalDateTime(LocalDateTime.parse("2014-11-12T07:50:00.0"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:77:        dateTimeWrapper.setOffsetDateTime(OffsetDateTime.parse("2011-12-14T08:30:00.0Z"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:78:        dateTimeWrapper.setZonedDateTime(ZonedDateTime.parse("2011-12-14T08:30:00.0Z"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:79:        dateTimeWrapper.setLocalTime(LocalTime.parse("14:30:00"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:80:        dateTimeWrapper.setOffsetTime(OffsetTime.parse("14:30:00+02:00"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs:81:        dateTimeWrapper.setLocalDate(LocalDate.parse("2016-09-10"));
/src/generators/server/templates/src/test/java/package/config/timezone/HibernateTimeZoneIT.java.ejs-82-
##############################################
/src/generators/server/templates/src/main/resources/config/application-tls.yml.ejs-6-#
/src/generators/server/templates/src/main/resources/config/application-tls.yml.ejs:7:# Another (easiest) solution with Chrome is to enable the "allow-insecure-localhost" flag
/src/generators/server/templates/src/main/resources/config/application-tls.yml.ejs:8:# at chrome://flags/#allow-insecure-localhost
/src/generators/server/templates/src/main/resources/config/application-tls.yml.ejs-9-# ===================================================================
##############################################
/src/generators/server/templates/src/main/java/package/config/cassandra/CassandraConfiguration.java.ejs-136-        log.debug("Configuring Cassandra session");
/src/generators/server/templates/src/main/java/package/config/cassandra/CassandraConfiguration.java.ejs:137:        return StringUtils.hasText(properties.getKeyspaceName()) ? cluster.connect(properties.getKeyspaceName()) : cluster.connect();
/src/generators/server/templates/src/main/java/package/config/cassandra/CassandraConfiguration.java.ejs-138-    }
##############################################
/src/generators/server/templates/src/main/java/package/config/DatabaseConfiguration.java.ejs-182-        log.debug("H2 database is available on port {}", port);
/src/generators/server/templates/src/main/java/package/config/DatabaseConfiguration.java.ejs:183:        return H2ConfigurationHelper.createServer(port);
/src/generators/server/templates/src/main/java/package/config/DatabaseConfiguration.java.ejs-184-    }
##############################################
/src/generators/client/prompts.js-131-            try {
/src/generators/client/prompts.js:132:                const { themes } = JSON.parse(body);
/src/generators/client/prompts.js-133-
##############################################
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-50-            it('should call correct URL', () => {
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs:51:                service.query({}).subscribe(() => { });
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-52-
##############################################
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-61-
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs:62:                service.query({}).subscribe((received) => {
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-63-                    expectedResult = received;
##############################################
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-72-
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs:73:                service.query({}).subscribe(null, (_error: any) => {
/src/generators/client/templates/angular/src/test/javascript/spec/app/admin/audits/audits.service.spec.ts.ejs-74-                    expectedResult = _error.status;
##############################################
/src/generators/client/templates/angular/src/main/webapp/swagger-ui/index.html.ejs-106-                <%_ } else if (authenticationType === 'jwt') { _%>
/src/generators/client/templates/angular/src/main/webapp/swagger-ui/index.html.ejs:107:                    var authToken = JSON.parse(localStorage.getItem("<%=jhiPrefixDashed %>-authenticationtoken") || sessionStorage.getItem("<%=jhiPrefixDashed %>-authenticationtoken"));
/src/generators/client/templates/angular/src/main/webapp/swagger-ui/index.html.ejs-108-                    var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization("Authorization", "Bearer " + authToken, "header");
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/account/activate/activate.component.ts.ejs-54-    login() {
/src/generators/client/templates/angular/src/main/webapp/app/account/activate/activate.component.ts.ejs:55:        this.modalRef = this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/account/activate/activate.component.ts.ejs-56-    }
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts.ejs-85-    login() {
/src/generators/client/templates/angular/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts.ejs:86:        this.modalRef = this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts.ejs-87-    }
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/account/register/register.component.ts.ejs-105-    openLogin() {
/src/generators/client/templates/angular/src/main/webapp/app/account/register/register.component.ts.ejs:106:        this.modalRef = this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/account/register/register.component.ts.ejs-107-    }
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/home/home.component.ts.ejs-74-        <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/client/templates/angular/src/main/webapp/app/home/home.component.ts.ejs:75:        this.modalRef = this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/home/home.component.ts.ejs-76-        <%_ } else { _%>
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs-69-                        this.loginService.logoutDirectly();
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs:70:                        this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs-71-                    } else {
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs-96-                    this.authServerProvider.logout();
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs:97:                    this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts.ejs-98-<% } else { %>
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/admin/health/health.component.ts.ejs-70-    showHealth(health: any) {
/src/generators/client/templates/angular/src/main/webapp/app/admin/health/health.component.ts.ejs:71:        const modalRef  = this.modalService.open(<%=jhiPrefixCapitalized%>HealthModalComponent);
/src/generators/client/templates/angular/src/main/webapp/app/admin/health/health.component.ts.ejs-72-        modalRef.componentInstance.currentHealth = health;
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-112-    loadAll() {
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs:113:        this.userService.query(<% if (databaseType !== 'cassandra') { %>{
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-114-            page: this.page - 1,
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-154-    deleteUser(user: User) {
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs:155:        const modalRef = this.modalService.open(UserMgmtDeleteDialogComponent, { size: 'lg', backdrop: 'static' });
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-156-        modalRef.componentInstance.user = user;
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-168-        <%_ if (databaseType !== 'cassandra') { _%>
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs:169:        this.links = this.parseLinks.parse(headers.get('link'));
/src/generators/client/templates/angular/src/main/webapp/app/admin/user-management/user-management.component.ts.ejs-170-        this.totalItems = headers.get('X-Total-Count');
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/admin/audits/audits.component.ts.ejs-132-    private onSuccess(data, headers) {
/src/generators/client/templates/angular/src/main/webapp/app/admin/audits/audits.component.ts.ejs:133:        this.links = this.parseLinks.parse(headers.get('link'));
/src/generators/client/templates/angular/src/main/webapp/app/admin/audits/audits.component.ts.ejs-134-        this.totalItems = headers.get('X-Total-Count');
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/layouts/navbar/navbar.component.ts.ejs-97-        <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/client/templates/angular/src/main/webapp/app/layouts/navbar/navbar.component.ts.ejs:98:        this.modalRef = this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/layouts/navbar/navbar.component.ts.ejs-99-        <%_ } else { _%>
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/login/login-modal.service.ts.ejs-35-        this.isOpen = true;
/src/generators/client/templates/angular/src/main/webapp/app/core/login/login-modal.service.ts.ejs:36:        const modalRef = this.modalService.open(<%=jhiPrefixCapitalized%>LoginModalComponent);
/src/generators/client/templates/angular/src/main/webapp/app/core/login/login-modal.service.ts.ejs-37-        modalRef.result.then((result) => {
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/account.service.ts.ejs-105-                <%_ if (websocket === 'spring-websocket') { _%>
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/account.service.ts.ejs:106:                this.trackerService.connect();
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/account.service.ts.ejs-107-                <%_ } _%>
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/user-route-access-service.ts.ejs-72-            <%_ if (authenticationType !== 'oauth2') { _%>
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/user-route-access-service.ts.ejs:73:            this.loginModalService.open();
/src/generators/client/templates/angular/src/main/webapp/app/core/auth/user-route-access-service.ts.ejs-74-            <%_ } else { _%>
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-51-    ) {
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs:52:        this.connection = this.createConnection();
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-53-        this.listener = this.createListener();
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-57-        if (this.connectedPromise === null) {
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs:58:          this.connection = this.createConnection();
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-59-        }
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-74-        <%_ } _%>
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs:75:        this.stompClient.connect(headers, () => {
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-76-            this.connectedPromise('success');
##############################################
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-118-            this.subscriber = this.stompClient.subscribe('/topic/tracker', (data) => {
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs:119:                this.listenerObserver.next(JSON.parse(data.body));
/src/generators/client/templates/angular/src/main/webapp/app/core/tracker/tracker.service.ts.ejs-120-            });
##############################################
/src/generators/client/templates/react/src/test/javascript/spec/app/utils.ts.ejs-19-// A dirty way to remove functions and undefined from an object for comparison
/src/generators/client/templates/react/src/test/javascript/spec/app/utils.ts.ejs:20:export const cleanupObj = obj => JSON.parse(JSON.stringify(obj));
##############################################
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs-106-                <%_ } else if (authenticationType === 'oauth2') { _%>
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs:107:                    var authToken = JSON.parse(localStorage.getItem("jhi-authenticationToken")).access_token;
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs-108-                    var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization("Authorization",
##############################################
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs-111-                <%_ } else if (authenticationType === 'jwt') { _%>
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs:112:                    var authToken = JSON.parse(localStorage.getItem("jhi-authenticationToken") || sessionStorage.getItem("jhi-authenticationToken"));
/src/generators/client/templates/react/src/main/webapp/swagger-ui/index.html.ejs-113-                    var apiKeyAuth = new SwaggerClient.ApiKeyAuthorization("Authorization", "Bearer " + authToken, "header");
##############################################
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs-34-
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs:35:const devTools = process.env.NODE_ENV === 'development' ? <DevTools /> : null;
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs-36-
##############################################
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs-54-          {/* If this slows down the app in dev disable it and enable when required  */}
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs:55:          {devTools}
/src/generators/client/templates/react/src/main/webapp/app/index.tsx.ejs-56-          <Component />
##############################################
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs-62-    subscriber = stompClient.subscribe('/topic/tracker', data => {
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs:63:      listenerObserver.next(JSON.parse(data.body));
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs-64-    });
##############################################
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs-93-
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs:94:  stompClient.connect(headers, () => {
/src/generators/client/templates/react/src/main/webapp/app/config/websocket-middleware.ts.ejs-95-    connectedPromise('success');
##############################################
/src/generators/client/templates/react/src/main/webapp/app/config/devtools.tsx.ejs-22-import DockMonitor from 'redux-devtools-dock-monitor';
/src/generators/client/templates/react/src/main/webapp/app/config/devtools.tsx.ejs:23:// You can toggle visibility of devTools with ctrl + H
/src/generators/client/templates/react/src/main/webapp/app/config/devtools.tsx.ejs-24-// and change their position with ctrl + Q
##############################################
/src/generators/utils.js-318-        file = render ? ejs.render(file, generator, {}) : file;
/src/generators/utils.js:319:        file = JSON.parse(file);
/src/generators/utils.js-320-        return file;
##############################################
/src/generators/utils.js-424-    if ((force || !configuration.baseName) && jhiCore.FileUtils.doesFileExist(filePath)) {
/src/generators/utils.js:425:        const yoRc = JSON.parse(fs.readFileSync(filePath, { encoding: 'utf-8' }));
/src/generators/utils.js-426-        configuration = yoRc['generator-jhipster'];
##############################################
/src/generators/entity-client/templates/angular/src/test/javascript/spec/app/entities/entity-management.service.spec.ts.ejs-218-                service
/src/generators/entity-client/templates/angular/src/test/javascript/spec/app/entities/entity-management.service.spec.ts.ejs:219:                    .query(expected)
/src/generators/entity-client/templates/angular/src/test/javascript/spec/app/entities/entity-management.service.spec.ts.ejs-220-                    .pipe(
##############################################
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/pagination-template.ejs-78-        <%_ } _%>
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/pagination-template.ejs:79:        this.<%= entityInstance %>Service.query(<%_ if (databaseType !== 'cassandra') { _%>{
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/pagination-template.ejs-80-            page: this.page - 1,
##############################################
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs-98-        <%_ if (databaseType !== 'cassandra') { _%>
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs:99:        this.links = this.parseLinks.parse(headers.get('link'));
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs-100-        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);
##############################################
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs-106-    protected paginate<%= entityClassPlural %>(data: I<%= entityAngularName %>[], headers: HttpHeaders) {
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs:107:        this.links = this.parseLinks.parse(headers.get('link'));
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management.component.ts.ejs-108-        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);
##############################################
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/no-pagination-template.ejs-58-       <%_ } _%>
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/no-pagination-template.ejs:59:        this.<%= entityInstance %>Service.query().pipe(
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/no-pagination-template.ejs-60-            filter((res: HttpResponse<I<%= entityAngularName %>[]>) => res.ok),
##############################################
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management-delete-dialog.component.ts.ejs-74-            setTimeout(() => {
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management-delete-dialog.component.ts.ejs:75:                this.ngbModalRef = this.modalService.open(<%= entityAngularName %>DeleteDialogComponent as Component, { size: 'lg', backdrop: 'static'});
/src/generators/entity-client/templates/angular/src/main/webapp/app/entities/entity-management-delete-dialog.component.ts.ejs-76-                this.ngbModalRef.componentInstance.<%= entityInstance %> = <%= entityInstance %>;
##############################################
/src/generators/aws-containers/aws-client.js-322-                        Key: filename,
/src/generators/aws-containers/aws-client.js:323:                        Body: fs.createReadStream(path)
/src/generators/aws-containers/aws-client.js-324-                    },
##############################################
/src/generators/generator-base-private.js-966-                query = `this.${relationship.otherEntityName}Service
/src/generators/generator-base-private.js:967:            .query({${filter}}).pipe(
/src/generators/generator-base-private.js-968-                filter((mayBeOk: HttpResponse<I${relationship.otherEntityAngularName}[]>) => mayBeOk.ok),
##############################################
/src/generators/generator-base-private.js-991-                }
/src/generators/generator-base-private.js:992:                query = `this.${relationship.otherEntityName}Service.query().pipe(
/src/generators/generator-base-private.js-993-                            filter((mayBeOk: HttpResponse<I${relationship.otherEntityAngularName}[]>) => mayBeOk.ok),
##############################################
/src/generators/openshift/templates/monitoring/jhipster-monitoring.yml.ejs-66-    value: jhipster-import-dashboards
/src/generators/openshift/templates/monitoring/jhipster-monitoring.yml.ejs:67:    description: Name of the preloaded kibana application dashboard
/src/generators/openshift/templates/monitoring/jhipster-monitoring.yml.ejs-68-    required: true
##############################################
/src/generators/openshift/templates/monitoring/jhipster-metrics.yml.ejs-151-          #- job_name: 'openshift-nodes'
/src/generators/openshift/templates/monitoring/jhipster-metrics.yml.ejs:152:          #  scheme: https  # remove if you want to scrape metrics on insecure port
/src/generators/openshift/templates/monitoring/jhipster-metrics.yml.ejs-153-          #  tls_config:
##############################################
/src/generators/aws/lib/s3.js-96-            const filePath = buildFolder + warKey;
/src/generators/aws/lib/s3.js:97:            const body = fs.createReadStream(filePath);
/src/generators/aws/lib/s3.js-98-
##############################################
/src/generators/heroku/index.js-98-                        } else {
/src/generators/heroku/index.js:99:                            const json = JSON.parse(stdout);
/src/generators/heroku/index.js-100-                            this.herokuAppName = json.app.name;
##############################################
/src/generators/app/prompts.js-177-            try {
/src/generators/app/prompts.js:178:                const moduleResponse = JSON.parse(body);
/src/generators/app/prompts.js-179-                const choices = [];
