/src/README.md:1:# safe-eval [![npm version](https://badge.fury.io/js/safe-eval.svg)](https://badge.fury.io/js/safe-eval)
/src/README.md-2-
##############################################
/src/README.md-4-
/src/README.md:5:`safe-eval` lets you execute JavaScript code without having to use the much discouraged and feared upon `eval()`. `safe-eval` has access to all the standard APIs of the [V8 JavaScript Engine](https://code.google.com/p/v8/). By default, it does not have access to the Node.js API, but can be given access using a conext object. It is implemented using [node's vm module](https://nodejs.org/api/vm.html).
/src/README.md-6-
/src/README.md:7:Currently, it works only with Node.js, and the JavaScript code must be an expression (something which evaluates to a value).
/src/README.md-8-
##############################################
/src/README.md-11-```sh
/src/README.md:12:npm install safe-eval --save
/src/README.md-13-```
##############################################
/src/README.md-17-```js
/src/README.md:18:var safeEval = require('safe-eval')
/src/README.md-19-```
##############################################
/src/README.md-24-
/src/README.md:25:`context` is an object of methods and properties, these methods and properties are interpreted as global objects in `code`. Be careful about the objects you are passing to the context API, because they can completely defeat the purpose of `safe-eval`.
/src/README.md-26-
##############################################
/src/README.md-33-var code = '"app" + "le"'
/src/README.md:34:var evaluated = safeEval(code) // "apple"
/src/README.md-35-```
##############################################
/src/README.md-39-var code = 'Math.floor(22/7)'
/src/README.md:40:var evaluated = safeEval(code) // 3.142857142857143
/src/README.md-41-```
##############################################
/src/README.md-45-var code = '{name: "Borat", hobbies: ["disco dance", "sunbathing"]}'
/src/README.md:46:var evaluated = safeEval(code) // {name: "Borat", hobbies: ["disco dance", "sunbathing"]}
/src/README.md-47-```
##############################################
/src/README.md-51-var code = '(function square(b) { return b * b; })(5)'
/src/README.md:52:var evaluated = safeEval(code) // 25
/src/README.md-53-```
##############################################
/src/README.md-67-}
/src/README.md:68:var evaluated = safeEval(code, context) // { pid: 16987, apple: 'APPLE' }
/src/README.md-69-```
##############################################
/src/package.json-1-{
/src/package.json:2:  "name": "safe-eval",
/src/package.json-3-  "version": "0.3.0",
/src/package.json:4:  "description": "Safer version of eval()",
/src/package.json-5-  "main": "index.js",
##############################################
/src/package.json-11-    "type": "git",
/src/package.json:12:    "url": "https://github.com/hacksparrow/safe-eval.git"
/src/package.json-13-  },
##############################################
/src/package.json-16-  "bugs": {
/src/package.json:17:    "url": "https://github.com/hacksparrow/safe-eval/issues"
/src/package.json-18-  },
/src/package.json:19:  "homepage": "https://github.com/hacksparrow/safe-eval",
/src/package.json-20-  "devDependencies": {
##############################################
/src/test/test.js-5-
/src/test/test.js:6:describe('safe-eval', function () {
/src/test/test.js-7-  it('should perform string concatenation', function () {
/src/test/test.js-8-    var code = '"app" + "le"'
/src/test/test.js:9:    var evaluated = safeEval(code)
/src/test/test.js:10:    assert(evaluated === 'apple')
/src/test/test.js-11-  })
##############################################
/src/test/test.js-14-    var code = '9 + 1'
/src/test/test.js:15:    var evaluated = safeEval(code)
/src/test/test.js:16:    assert(evaluated === 10)
/src/test/test.js-17-  })
##############################################
/src/test/test.js-20-    var code = 'Math.floor(22/7)'
/src/test/test.js:21:    var evaluated = safeEval(code)
/src/test/test.js:22:    assert(evaluated === Math.floor(22 / 7))
/src/test/test.js-23-  })
##############################################
/src/test/test.js-26-    var code = '{name: "Borat", hobbies: ["disco dance", "sunbathing"]}'
/src/test/test.js:27:    var evaluated = safeEval(code)
/src/test/test.js:28:    assert(evaluated.name === 'Borat')
/src/test/test.js:29:    assert(evaluated.hobbies[0] === 'disco dance')
/src/test/test.js:30:    assert(evaluated.hobbies[1] === 'sunbathing')
/src/test/test.js-31-  })
##############################################
/src/test/test.js-34-    var code = '(function square(b) { return b * b; })(5)'
/src/test/test.js:35:    var evaluated = safeEval(code)
/src/test/test.js:36:    assert(evaluated === 25)
/src/test/test.js-37-  })
##############################################
/src/test/test.js-51-    }
/src/test/test.js:52:    var evaluated = safeEval(code, context)
/src/test/test.js:53:    assert(evaluated.pid > 0)
/src/test/test.js:54:    assert(evaluated.apple === 'APPLE')
/src/test/test.js-55-  })
