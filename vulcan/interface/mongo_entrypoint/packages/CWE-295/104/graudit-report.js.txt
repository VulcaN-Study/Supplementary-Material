/src/index.js-103-        cache: opts.cache,
/src/index.js:104:        strictSSL: opts['strict-ssl']
/src/index.js-105-      })
##############################################
/src/test/util.js-40-    function (cb) {
/src/test/util.js:41:      fs.readFile(file1, cb)
/src/test/util.js-42-    },
/src/test/util.js-43-    function (cb) {
/src/test/util.js:44:      fs.readFile(file2, cb)
/src/test/util.js-45-    }
##############################################
/src/test/basic.js-276-        testPath = path.join(finalPath, 'test.txt')
/src/test/basic.js:277:        fs.writeFile(testPath, 'test', cb)
/src/test/basic.js-278-      }, function (cb) {
##############################################
/src/test/basic.js-318-        t.true(stats.isDirectory(), 'The expected output directory should exist')
/src/test/basic.js:319:        fs.readFile(path.join(opts.dir, 'package.json'), cb)
/src/test/basic.js-320-      }, function (pkg, cb) {
/src/test/basic.js:321:        packageJSON = JSON.parse(pkg)
/src/test/basic.js-322-        // Set opts name to use generateNamePath
##############################################
/src/test/basic.js-330-        }
/src/test/basic.js:331:        fs.readFile(path.join(finalPath, 'version'), cb)
/src/test/basic.js-332-      }, function (version, cb) {
##############################################
/src/test/basic.js-415-        // create file to ensure that directory will be not ignored because empty
/src/test/basic.js:416:        fs.open(path.join(outDir, 'ignoreMe'), 'w', cb)
/src/test/basic.js-417-      },
##############################################
/src/test/basic.js-457-        // create file to ensure that directory will be not ignored because empty
/src/test/basic.js:458:        fs.open(path.join(previousPackedResultDir, testFilename), 'w', cb)
/src/test/basic.js-459-      },
##############################################
/src/test/mac.js-35-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:36:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-37-      }, function (file, cb) {
/src/test/mac.js:38:        var obj = plist.parse(file)
/src/test/mac.js-39-        util.areFilesEqual(iconPath, path.join(resourcesPath, obj.CFBundleIconFile), cb)
##############################################
/src/test/mac.js-136-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:137:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-138-      }, function (file, cb) {
/src/test/mac.js:139:        var obj = plist.parse(file)
/src/test/mac.js-140-        t.equal(obj.TestKeyString, 'String data', 'TestKeyString should come from extend-info')
##############################################
/src/test/mac.js-176-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:177:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-178-      }, function (file, cb) {
/src/test/mac.js:179:        var obj = plist.parse(file)
/src/test/mac.js-180-        t.equal(obj.CFBundleVersion, '' + opts['build-version'], 'CFBundleVersion should reflect build-version')
##############################################
/src/test/mac.js-207-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:208:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-209-      }, function (file, cb) {
/src/test/mac.js:210:        var obj = plist.parse(file)
/src/test/mac.js-211-        t.equal(obj.LSApplicationCategoryType, opts['app-category-type'], 'LSApplicationCategoryType should reflect opts.["app-category-type"]')
##############################################
/src/test/mac.js-239-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:240:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-241-      }, function (file, cb) {
/src/test/mac.js:242:        var obj = plist.parse(file)
/src/test/mac.js-243-        t.equal(obj.CFBundleDisplayName, opts.name, 'CFBundleDisplayName should reflect opts.name')
##############################################
/src/test/mac.js-282-        t.true(stats.isFile(), 'The expected Info.plist file should exist in helper app')
/src/test/mac.js:283:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-284-      }, function (file, cb) {
/src/test/mac.js:285:        var obj = plist.parse(file)
/src/test/mac.js-286-        t.equal(obj.CFBundleName, opts.name, 'CFBundleName should reflect opts.name in helper app')
##############################################
/src/test/mac.js-295-        t.true(stats.isFile(), 'The expected Info.plist file should exist in helper EH app')
/src/test/mac.js:296:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-297-      }, function (file, cb) {
/src/test/mac.js:298:        var obj = plist.parse(file)
/src/test/mac.js-299-        t.equal(obj.CFBundleName, opts.name + ' Helper EH', 'CFBundleName should reflect opts.name in helper EH app')
##############################################
/src/test/mac.js-312-        t.true(stats.isFile(), 'The expected Info.plist file should exist in helper NP app')
/src/test/mac.js:313:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-314-      }, function (file, cb) {
/src/test/mac.js:315:        var obj = plist.parse(file)
/src/test/mac.js-316-        t.equal(obj.CFBundleName, opts.name + ' Helper NP', 'CFBundleName should reflect opts.name in helper NP app')
##############################################
/src/test/mac.js-348-        t.true(stats.isFile(), 'The expected Info.plist file should exist')
/src/test/mac.js:349:        fs.readFile(plistPath, 'utf8', cb)
/src/test/mac.js-350-      }, function (file, cb) {
/src/test/mac.js:351:        var obj = plist.parse(file)
/src/test/mac.js-352-        t.equal(obj.NSHumanReadableCopyright, opts['app-copyright'], 'NSHumanReadableCopyright should reflect opts["app-copyright"]')
##############################################
/src/mac.js-83-      var helperNPPlistFilename = path.join(frameworksPath, 'Electron Helper NP.app', 'Contents', 'Info.plist')
/src/mac.js:84:      var appPlist = plist.parse(fs.readFileSync(appPlistFilename).toString())
/src/mac.js:85:      var helperPlist = plist.parse(fs.readFileSync(helperPlistFilename).toString())
/src/mac.js:86:      var helperEHPlist = plist.parse(fs.readFileSync(helperEHPlistFilename).toString())
/src/mac.js:87:      var helperNPPlist = plist.parse(fs.readFileSync(helperNPPlistFilename).toString())
/src/mac.js-88-
##############################################
/src/mac.js-93-      if (opts['extend-info']) {
/src/mac.js:94:        var extendAppPlist = plist.parse(fs.readFileSync(opts['extend-info']).toString())
/src/mac.js-95-        for (var key in extendAppPlist) {
