/src/dist/exceljs.js-7953-
/src/dist/exceljs.js:7954:// <row r="<%=row.number%>"
/src/dist/exceljs.js:7955://     <% if(row.height) {%> ht="<%=row.height%>" customHeight="1"<% } %>
/src/dist/exceljs.js-7956-//     <% if(row.hidden) {%> hidden="1"<% } %>
/src/dist/exceljs.js:7957://     <% if(row.min > 0 && row.max > 0 && row.min <= row.max) {%> spans="<%=row.min%>:<%=row.max%>"<% } %>
/src/dist/exceljs.js:7958://     <% if (row.styleId) { %> s="<%=row.styleId%>" customFormat="1" <% } %>
/src/dist/exceljs.js-7959-//     x14ac:dyDescent="0.25">
/src/dist/exceljs.js-7960-//   <% row.cells.forEach(function(cell){ %>
/src/dist/exceljs.js:7961://     <%=cell.xml%><% }); %>
/src/dist/exceljs.js-7962-// </row>
##############################################
/src/dist/exceljs.js-9446-  // <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
/src/dist/exceljs.js:9447:  // <sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="<%=totalRefs%>" uniqueCount="<%=count%>">
/src/dist/exceljs.js:9448:  //   <si><t><%=text%></t></si>
/src/dist/exceljs.js-9449-  //   <si><r><rPr></rPr><t></t></r></si>
##############################################
/src/dist/es5/xlsx/xform/strings/shared-strings-xform.js.map:1:{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/shared-strings-xform.js"],"names":["utils","require","XmlStream","BaseXform","SharedStringXform","SharedStringsXform","module","exports","model","values","count","hash","rich","inherits","sharedStringXform","_sharedStringXform","uniqueCount","length","getString","index","add","value","richText","addRichText","addText","undefined","push","xml","toXml","render","xmlStream","_values","openXml","StdDocAttributes","openNode","xmlns","sx","forEach","sharedString","closeNode","parseOpen","node","parser","name","Error","JSON","stringify","parseText","text","parseClose"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,2BAAR,CAAhB;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;AACA,IAAIG,oBAAoBH,QAAQ,uBAAR,CAAxB;;AAEA,IAAII,qBAAqBC,OAAOC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AACxD,OAAKA,KAAL,GAAaA,SAAS;AACpBC,YAAQ,EADY;AAEpBC,WAAO;AAFa,GAAtB;AAIA,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKC,IAAL,GAAY,EAAZ;AACD,CAPD;;AASAZ,MAAMa,QAAN,CAAeR,kBAAf,EAAmCF,SAAnC,EAA8C;AAC5C,MAAIW,iBAAJ,GAAwB;AAAE,WAAO,KAAKC,kBAAL,KAA4B,KAAKA,kBAAL,GAA0B,IAAIX,iBAAJ,EAAtD,CAAP;AAAwF,GADtE;;AAG5C,MAAIK,MAAJ,GAAa;AACX,WAAO,KAAKD,KAAL,CAAWC,MAAlB;AACD,GAL2C;AAM5C,MAAIO,WAAJ,GAAkB;AAChB,WAAO,KAAKR,KAAL,CAAWC,MAAX,CAAkBQ,MAAzB;AACD,GAR2C;AAS5C,MAAIP,KAAJ,GAAY;AACV,WAAO,KAAKF,KAAL,CAAWE,KAAlB;AACD,GAX2C;;AAa5CQ,aAAW,mBAASC,KAAT,EAAgB;AACzB,WAAO,KAAKX,KAAL,CAAWC,MAAX,CAAkBU,KAAlB,CAAP;AACD,GAf2C;;AAiB5CC,OAAK,aAASC,KAAT,EAAgB;AACnB,WAAOA,MAAMC,QAAN,GACL,KAAKC,WAAL,CAAiBF,KAAjB,CADK,GAEL,KAAKG,OAAL,CAAaH,KAAb,CAFF;AAGD,GArB2C;AAsB5CG,WAAS,iBAASH,KAAT,EAAgB;AACvB,QAAIF,QAAQ,KAAKR,IAAL,CAAUU,KAAV,CAAZ;AACA,QAAIF,UAAUM,SAAd,EAAyB;AACvBN,cAAQ,KAAKR,IAAL,CAAUU,KAAV,IAAmB,KAAKb,KAAL,CAAWC,MAAX,CAAkBQ,MAA7C;AACA,WAAKT,KAAL,CAAWC,MAAX,CAAkBiB,IAAlB,CAAuBL,KAAvB;AACD;AACD,SAAKb,KAAL,CAAWE,KAAX;AACA,WAAOS,KAAP;AACD,GA9B2C;AA+B5CI,eAAa,qBAASF,KAAT,EAAgB;AAC3B;AACA,QAAIM,MAAM,KAAKb,iBAAL,CAAuBc,KAAvB,CAA6BP,KAA7B,CAAV;AACA,QAAIF,QAAQ,KAAKP,IAAL,CAAUe,GAAV,CAAZ;AACA,QAAIR,UAAUM,SAAd,EAAyB;AACvBN,cAAQ,KAAKP,IAAL,CAAUe,GAAV,IAAiB,KAAKnB,KAAL,CAAWC,MAAX,CAAkBQ,MAA3C;AACA,WAAKT,KAAL,CAAWC,MAAX,CAAkBiB,IAAlB,CAAuBL,KAAvB;AACD;AACD,SAAKb,KAAL,CAAWE,KAAX;AACA,WAAOS,KAAP;AACD,GAzC2C;;AA2C5C;AACA;AACA;AACA;AACA;;AAEAU,UAAQ,gBAASC,SAAT,EAAoBtB,KAApB,EAA2B;AACjCA,YAAQA,SAAS,KAAKuB,OAAtB;AACAD,cAAUE,OAAV,CAAkB9B,UAAU+B,gBAA5B;;AAEAH,cAAUI,QAAV,CAAmB,KAAnB,EAA0B;AACxBC,aAAO,2DADiB;AAExBzB,aAAOF,MAAME,KAFW;AAGxBM,mBAAaR,MAAMC,MAAN,CAAaQ;AAHF,KAA1B;;AAMA,QAAImB,KAAK,KAAKtB,iBAAd;AACAN,UAAMC,MAAN,CAAa4B,OAAb,CAAqB,UAASC,YAAT,EAAuB;AAC1CF,SAAGP,MAAH,CAAUC,SAAV,EAAqBQ,YAArB;AACD,KAFD;AAGAR,cAAUS,SAAV;AACD,GAhE2C;;AAkE5CC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,aAAO,IAAP;AACD;AACD,YAAQA,KAAKE,IAAb;AACE,WAAK,KAAL;AACE,eAAO,IAAP;AACF,WAAK,IAAL;AACE,aAAKD,MAAL,GAAc,KAAK5B,iBAAnB;AACA,aAAK4B,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,eAAO,IAAP;AACF;AACE,cAAM,IAAIG,KAAJ,CAAU,uCAAuCC,KAAKC,SAAL,CAAeL,IAAf,CAAjD,CAAN;AARJ;AAUD,GAjF2C;AAkF5CM,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYK,SAAZ,CAAsBC,IAAtB;AACD;AACF,GAtF2C;AAuF5CC,cAAY,oBAASN,IAAT,EAAe;AACzB,QAAI,KAAKD,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYO,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,aAAKnC,KAAL,CAAWC,MAAX,CAAkBiB,IAAlB,CAAuB,KAAKgB,MAAL,CAAYlC,KAAnC;AACA,aAAKA,KAAL,CAAWE,KAAX;AACA,aAAKgC,MAAL,GAAcjB,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQkB,IAAR;AACE,WAAK,KAAL;AACE,eAAO,KAAP;AACF;AACE,cAAM,IAAIC,KAAJ,CAAU,wCAAwCD,IAAlD,CAAN;AAJJ;AAMD;AAtG2C,CAA9C","file":"shared-strings-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2016 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar XmlStream = require('../../../utils/xml-stream');\r\nvar BaseXform = require('../base-xform');\r\nvar SharedStringXform = require('./shared-string-xform');\r\n\r\nvar SharedStringsXform = module.exports = function(model) {\r\n  this.model = model || {\r\n    values: [],\r\n    count: 0\r\n  };\r\n  this.hash = {};\r\n  this.rich = {};\r\n};\r\n\r\nutils.inherits(SharedStringsXform, BaseXform, {\r\n  get sharedStringXform() { return this._sharedStringXform || (this._sharedStringXform = new SharedStringXform()); },\r\n\r\n  get values() {\r\n    return this.model.values;\r\n  },\r\n  get uniqueCount() {\r\n    return this.model.values.length;\r\n  },\r\n  get count() {\r\n    return this.model.count;\r\n  },\r\n\r\n  getString: function(index) {\r\n    return this.model.values[index];\r\n  },\r\n\r\n  add: function(value) {\r\n    return value.richText ?\r\n      this.addRichText(value) :\r\n      this.addText(value);\r\n  },\r\n  addText: function(value) {\r\n    var index = this.hash[value];\r\n    if (index === undefined) {\r\n      index = this.hash[value] = this.model.values.length;\r\n      this.model.values.push(value);\r\n    }\r\n    this.model.count++;\r\n    return index;\r\n  },\r\n  addRichText: function(value) {\r\n    // TODO: add WeakMap here\r\n    var xml = this.sharedStringXform.toXml(value);\r\n    var index = this.rich[xml];\r\n    if (index === undefined) {\r\n      index = this.rich[xml] = this.model.values.length;\r\n      this.model.values.push(value);\r\n    }\r\n    this.model.count++;\r\n    return index;\r\n  },\r\n\r\n  // <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n  // <sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"<%=totalRefs%>\" uniqueCount=\"<%=count%>\">\r\n  //   <si><t><%=text%></t></si>\r\n  //   <si><r><rPr></rPr><t></t></r></si>\r\n  // </sst>\r\n\r\n  render: function(xmlStream, model) {\r\n    model = model || this._values;\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n\r\n    xmlStream.openNode('sst', {\r\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n      count: model.count,\r\n      uniqueCount: model.values.length\r\n    });\r\n\r\n    var sx = this.sharedStringXform;\r\n    model.values.forEach(function(sharedString) {\r\n      sx.render(xmlStream, sharedString);\r\n    });\r\n    xmlStream.closeNode();\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'sst':\r\n        return true;\r\n      case 'si':\r\n        this.parser = this.sharedStringXform;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        throw new Error('Unexpected xml node in parseOpen: ' + JSON.stringify(node));\r\n    }\r\n  },\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.values.push(this.parser.model);\r\n        this.model.count++;\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'sst':\r\n        return false;\r\n      default:\r\n        throw new Error('Unexpected xml node in parseClose: ' + name);\r\n    }\r\n  }\r\n});\r\n"]}
##############################################
/src/dist/es5/xlsx/xform/strings/shared-strings-xform.js-66-  // <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
/src/dist/es5/xlsx/xform/strings/shared-strings-xform.js:67:  // <sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="<%=totalRefs%>" uniqueCount="<%=count%>">
/src/dist/es5/xlsx/xform/strings/shared-strings-xform.js:68:  //   <si><t><%=text%></t></si>
/src/dist/es5/xlsx/xform/strings/shared-strings-xform.js-69-  //   <si><r><rPr></rPr><t></t></r></si>
##############################################
/src/dist/es5/xlsx/xform/sheet/row-xform.js-19-
/src/dist/es5/xlsx/xform/sheet/row-xform.js:20:// <row r="<%=row.number%>"
/src/dist/es5/xlsx/xform/sheet/row-xform.js:21://     <% if(row.height) {%> ht="<%=row.height%>" customHeight="1"<% } %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js-22-//     <% if(row.hidden) {%> hidden="1"<% } %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js:23://     <% if(row.min > 0 && row.max > 0 && row.min <= row.max) {%> spans="<%=row.min%>:<%=row.max%>"<% } %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js:24://     <% if (row.styleId) { %> s="<%=row.styleId%>" customFormat="1" <% } %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js-25-//     x14ac:dyDescent="0.25">
/src/dist/es5/xlsx/xform/sheet/row-xform.js-26-//   <% row.cells.forEach(function(cell){ %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js:27://     <%=cell.xml%><% }); %>
/src/dist/es5/xlsx/xform/sheet/row-xform.js-28-// </row>
##############################################
/src/dist/es5/xlsx/xform/sheet/row-xform.js.map:1:{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/row-xform.js"],"names":["utils","require","BaseXform","CellXform","RowXform","module","exports","map","c","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","cellXform","cells","forEach","cellModel","render","xmlStream","openNode","addAttribute","number","height","hidden","min","max","outlineLevel","collapsed","closeNode","parseOpen","node","parser","name","numRowsSeen","spans","attributes","split","span","parseInt","undefined","r","s","bestFit","ht","parseFloat","parseText","text","parseClose","push","reconcile","getStyleModel"],"mappings":"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","file":"row-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar CellXform = require('./cell-xform');\r\n\r\nvar RowXform = module.exports = function() {\r\n  this.map = {\r\n    c: new CellXform()\r\n  };\r\n};\r\n\r\n// <row r=\"<%=row.number%>\"\r\n//     <% if(row.height) {%> ht=\"<%=row.height%>\" customHeight=\"1\"<% } %>\r\n//     <% if(row.hidden) {%> hidden=\"1\"<% } %>\r\n//     <% if(row.min > 0 && row.max > 0 && row.min <= row.max) {%> spans=\"<%=row.min%>:<%=row.max%>\"<% } %>\r\n//     <% if (row.styleId) { %> s=\"<%=row.styleId%>\" customFormat=\"1\" <% } %>\r\n//     x14ac:dyDescent=\"0.25\">\r\n//   <% row.cells.forEach(function(cell){ %>\r\n//     <%=cell.xml%><% }); %>\r\n// </row>\r\n\r\nutils.inherits(RowXform, BaseXform, {\r\n\r\n  get tag() { return 'row'; },\r\n\r\n  prepare: function(model, options) {\r\n    var styleId = options.styles.addStyleModel(model.style);\r\n    if (styleId) {\r\n      model.styleId = styleId;\r\n    }\r\n    var cellXform = this.map.c;\r\n    model.cells.forEach(function(cellModel) {\r\n      cellXform.prepare(cellModel, options);\r\n    });\r\n  },\r\n  \r\n  render: function(xmlStream, model, options) {\r\n    xmlStream.openNode('row');\r\n    xmlStream.addAttribute('r', model.number);\r\n    if (model.height) {\r\n      xmlStream.addAttribute('ht', model.height);\r\n      xmlStream.addAttribute('customHeight', '1');\r\n    }\r\n    if (model.hidden) {\r\n      xmlStream.addAttribute('hidden', '1');\r\n    }\r\n    if (model.min > 0 && model.max > 0 && model.min <= model.max) {\r\n      xmlStream.addAttribute('spans', model.min + ':' + model.max);\r\n    }\r\n    if (model.styleId) {\r\n      xmlStream.addAttribute('s', model.styleId);\r\n      xmlStream.addAttribute('customFormat', '1');\r\n    }\r\n    xmlStream.addAttribute('x14ac:dyDescent', '0.25');\r\n    if (model.outlineLevel) {\r\n      xmlStream.addAttribute('outlineLevel', model.outlineLevel);\r\n    }\r\n    if (model.collapsed) {\r\n      xmlStream.addAttribute('collapsed', '1');\r\n    }\r\n\r\n    var cellXform = this.map.c;\r\n    model.cells.forEach(function(cellModel) {\r\n      cellXform.render(xmlStream, cellModel, options);\r\n    });\r\n\r\n    xmlStream.closeNode();\r\n  },\r\n  \r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    } else if (node.name === 'row') {\r\n      this.numRowsSeen += 1;\r\n      var spans = node.attributes.spans ? node.attributes.spans.split(':').map(function(span) { return parseInt(span, 10); }) : [undefined, undefined];\r\n      var model = this.model = {\r\n        number: parseInt(node.attributes.r, 10),\r\n        min: spans[0],\r\n        max: spans[1],\r\n        cells: []\r\n      };\r\n      if (node.attributes.s) {\r\n        model.styleId = parseInt(node.attributes.s, 10);\r\n      }\r\n      if (node.attributes.hidden) {\r\n        model.hidden = true;\r\n      }\r\n      if (node.attributes.bestFit) {\r\n        model.bestFit = true;\r\n      }\r\n      if (node.attributes.ht) {\r\n        model.height = parseFloat(node.attributes.ht);\r\n      }\r\n      if (node.attributes.outlineLevel) {\r\n        model.outlineLevel = parseInt(node.attributes.outlineLevel, 10);\r\n      }\r\n      if (node.attributes.collapsed) {\r\n        model.collapsed = true;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    this.parser = this.map[node.name];\r\n    if ((this.parser)) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  },\r\n  parseClose: function(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.cells.push(this.parser.model);\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  \r\n  reconcile: function(model, options) {\r\n    model.style = model.styleId ? options.styles.getStyleModel(model.styleId) : {};\r\n    if (model.styleId !== undefined) {\r\n      model.styleId = undefined;\r\n    }\r\n\r\n    var cellXform = this.map.c;\r\n    model.cells.forEach(function(cellModel) {\r\n      cellXform.reconcile(cellModel, options);\r\n    });\r\n  }\r\n});\r\n"]}
