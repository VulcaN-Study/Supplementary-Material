"Prototype pollution in utility function","Recursively assigning properties on objects may cause accidental modification of a built-in prototype object.","warning","Properties are copied from [[""source""|""relative:///dist/exceljs.js:29543:26:29543:31""]] to [[""target""|""relative:///dist/exceljs.js:29553:29:29553:34""]] without guarding against prototype pollution.","/dist/exceljs.js","29553","29","29553","34"
"Incomplete string escaping or encoding","A string transformer that does not replace or escape all occurrences of a meta-character may be ineffective.","warning","This does not escape backslash characters in the input.","/dist/exceljs.js","15076","25","15076","33"
"Incomplete string escaping or encoding","A string transformer that does not replace or escape all occurrences of a meta-character may be ineffective.","warning","This replaces only the first occurrence of '\\'.","/dist/exceljs.js","25684","28","25684","36"
"Useless regular-expression character escape","Prepending a backslash to an ordinary character in a string does not have any effect, and may make regular expressions constructed from this string behave unexpectedly.","error","The escape sequence '\.' is equivalent to just '.', so the sequence may still represent a meta-character when it is used in a [[""regular expression""|""relative:///dist/exceljs.js:26481:57:26481:110""]].","/dist/exceljs.js","26481","100","26481","101"
"Useless regular-expression character escape","Prepending a backslash to an ordinary character in a string does not have any effect, and may make regular expressions constructed from this string behave unexpectedly.","error","The escape sequence '\.' is equivalent to just '.', so the sequence may still represent a meta-character when it is used in a [[""regular expression""|""relative:///dist/exceljs.js:26482:58:26482:116""]].","/dist/exceljs.js","26482","106","26482","107"
"Useless regular-expression character escape","Prepending a backslash to an ordinary character in a string does not have any effect, and may make regular expressions constructed from this string behave unexpectedly.","error","The escape sequence '\.' is equivalent to just '.', so the sequence may still represent a meta-character when it is used in a [[""regular expression""|""relative:///dist/exceljs.js:26483:56:26483:112""]].","/dist/exceljs.js","26483","102","26483","103"
