/src/lib/node_modules/redeyed/node_modules/esprima/test/reflect.js-177-    }
/src/lib/node_modules/redeyed/node_modules/esprima/test/reflect.js:178:    throw new Error("expected " + errorType.name + " for " + uneval(src));
/src/lib/node_modules/redeyed/node_modules/esprima/test/reflect.js-179-}
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14038-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:14039:        'function eval() { }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14040-            type: 'FunctionDeclaration',
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14206-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:14207:        'function eval() { function inner() { "use strict" } }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14208-            type: 'FunctionDeclaration',
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14498-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:14499:        'var hi = function eval() { };': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-14500-            type: 'VariableDeclaration',
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16672-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:16673:        'function hello() {\'use strict\'; function eval() { } }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16674-            index: 41,
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16686-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:16687:        'function eval() {\'use strict\'; }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16688-            index: 9,
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16700-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:16701:        'function hello() {\'use strict\'; (function eval() { }()) }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16702-            index: 42,
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16714-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:16715:        '(function eval() {\'use strict\'; })()': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16716-            index: 10,
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16728-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:16729:        'function hello() {\'use strict\'; ({ s: function eval() { } }); }': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-16730-            index: 47,
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-18228-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:18229:        '"use strict"; function eval() {};': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-18230-            type: 'Program',
##############################################
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-18438-
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js:18439:        '"use strict"; (function eval() {});': {
/src/lib/node_modules/redeyed/node_modules/esprima/test/test.js-18440-            type: 'Program',
##############################################
/src/lib/node_modules/hosted-git-info/git-host-info.js-4-  github: {
/src/lib/node_modules/hosted-git-info/git-host-info.js:5:    // First two are insecure and generally shouldn't be used any more, but
/src/lib/node_modules/hosted-git-info/git-host-info.js-6-    // they are still supported.
##############################################
/src/lib/node_modules/node-uuid/uuid.js-47-      if ('undefined' !== typeof console && console.warn) {
/src/lib/node_modules/node-uuid/uuid.js:48:        console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()");
/src/lib/node_modules/node-uuid/uuid.js-49-      }
##############################################
/src/lib/node_modules/uglify-js/lib/compress.js-670-
/src/lib/node_modules/uglify-js/lib/compress.js:671:                    // Don't replace ref if eval() or with statement in scope.
/src/lib/node_modules/uglify-js/lib/compress.js-672-                    if (ref.scope.uses_eval || ref.scope.uses_with) break;
##############################################
/src/lib/node_modules/uglify-js/lib/compress.js-1467-            try {
/src/lib/node_modules/uglify-js/lib/compress.js:1468:                var val = this._eval(compressor);
/src/lib/node_modules/uglify-js/lib/compress.js-1469-                return !val || val instanceof RegExp || typeof val != "object" ? val : this;
##############################################
/src/lib/node_modules/uglify-js/lib/compress.js-1524-
/src/lib/node_modules/uglify-js/lib/compress.js:1525:            return node._eval(compressor);
/src/lib/node_modules/uglify-js/lib/compress.js-1526-        };
##############################################
/src/lib/node_modules/request/request.js-266-
/src/lib/node_modules/request/request.js:267:  if (self.strictSSL === false) {
/src/lib/node_modules/request/request.js:268:    self.rejectUnauthorized = false
/src/lib/node_modules/request/request.js-269-  }
##############################################
/src/lib/node_modules/request/request.js-616-  }
/src/lib/node_modules/request/request.js:617:  if (typeof self.rejectUnauthorized !== 'undefined') {
/src/lib/node_modules/request/request.js:618:    options.rejectUnauthorized = self.rejectUnauthorized
/src/lib/node_modules/request/request.js-619-  }
##############################################
/src/lib/node_modules/request/request.js-655-
/src/lib/node_modules/request/request.js:656:    if (typeof options.rejectUnauthorized !== 'undefined') {
/src/lib/node_modules/request/request.js-657-      if (poolKey) {
##############################################
/src/lib/node_modules/request/request.js-659-      }
/src/lib/node_modules/request/request.js:660:      poolKey += options.rejectUnauthorized
/src/lib/node_modules/request/request.js-661-    }
##############################################
/src/lib/node_modules/request/request.js-851-  if (self.httpModule === https &&
/src/lib/node_modules/request/request.js:852:      self.strictSSL && (!response.hasOwnProperty('socket') ||
/src/lib/node_modules/request/request.js-853-      !response.socket.authorized)) {
##############################################
/src/lib/node_modules/request/README.md-797-- `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)
/src/lib/node_modules/request/README.md:798:- `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.
/src/lib/node_modules/request/README.md-799-- `tunnel` - controls the behavior of
##############################################
/src/lib/node_modules/request/lib/tunnel.js-85-    ciphers            : request.ciphers,
/src/lib/node_modules/request/lib/tunnel.js:86:    rejectUnauthorized : request.rejectUnauthorized,
/src/lib/node_modules/request/lib/tunnel.js-87-    secureOptions      : request.secureOptions,
##############################################
/src/lib/node_modules/request/CHANGELOG.md-135-- [#1468](https://github.com/request/request/pull/1468) Re-enable io.js/node 0.12 build (@simov, @mikeal, @BBB)
/src/lib/node_modules/request/CHANGELOG.md:136:- [#1442](https://github.com/request/request/pull/1442) Fixed the issue with strictSSL tests on  0.12 & io.js by explicitly setting a cipher that matches the cert. (@BBB, @nicolasmccurdy, @demohi, @simov, @0x4139)
/src/lib/node_modules/request/CHANGELOG.md-137-- [#1460](https://github.com/request/request/pull/1460) localAddress or proxy config is lost when redirecting (@simov, @0x4139)
##############################################
/src/lib/node_modules/request/CHANGELOG.md-463-- [#502](https://github.com/request/request/pull/502) Fix POST (and probably other) requests that are retried after 401 Unauthorized (@nylen)
/src/lib/node_modules/request/CHANGELOG.md:464:- [#508](https://github.com/request/request/pull/508) Honor the .strictSSL option when using proxies (tunnel-agent) (@jhs)
/src/lib/node_modules/request/CHANGELOG.md-465-- [#512](https://github.com/request/request/pull/512) Make password optional to support the format: http://username@hostname/ (@pajato1)
##############################################
/src/lib/node_modules/request/CHANGELOG.md-567-- [#81](https://github.com/request/request/pull/81) Enhance redirect handling (@danmactough)
/src/lib/node_modules/request/CHANGELOG.md:568:- [#78](https://github.com/request/request/pull/78) Don't try to do strictSSL for non-ssl connections (@isaacs)
/src/lib/node_modules/request/CHANGELOG.md-569-- [#76](https://github.com/request/request/pull/76) Bug when a request fails and a timeout is set (@Marsup)
/src/lib/node_modules/request/CHANGELOG.md-570-- [#70](https://github.com/request/request/pull/70) add test script to package.json (@isaacs, @aheckmann)
/src/lib/node_modules/request/CHANGELOG.md:571:- [#73](https://github.com/request/request/pull/73) Fix #71 Respect the strictSSL flag (@isaacs)
/src/lib/node_modules/request/CHANGELOG.md-572-- [#69](https://github.com/request/request/pull/69) Flatten chunked requests properly (@isaacs)
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-256-
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:257:  if (self.strictSSL === false) {
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:258:    self.rejectUnauthorized = false
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-259-  }
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-609-  }
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:610:  if (typeof self.rejectUnauthorized !== 'undefined') {
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:611:    options.rejectUnauthorized = self.rejectUnauthorized
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-612-  }
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-648-
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:649:    if (typeof options.rejectUnauthorized !== 'undefined') {
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-650-      if (poolKey) {
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-652-      }
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:653:      poolKey += options.rejectUnauthorized
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-654-    }
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-950-  if (self.httpModule === https &&
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js:951:      self.strictSSL && (!response.hasOwnProperty('socket') ||
/src/lib/node_modules/bower-registry-client/node_modules/request/request.js-952-      !response.socket.authorized)) {
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/README.md-799-- `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)
/src/lib/node_modules/bower-registry-client/node_modules/request/README.md:800:- `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.
/src/lib/node_modules/bower-registry-client/node_modules/request/README.md-801-- `tunnel` - controls the behavior of
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/lib/tunnel.js-83-    ciphers            : request.ciphers,
/src/lib/node_modules/bower-registry-client/node_modules/request/lib/tunnel.js:84:    rejectUnauthorized : request.rejectUnauthorized,
/src/lib/node_modules/bower-registry-client/node_modules/request/lib/tunnel.js-85-    secureOptions      : request.secureOptions,
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-251-- [#1468](https://github.com/request/request/pull/1468) Re-enable io.js/node 0.12 build (@simov, @mikeal, @BBB)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md:252:- [#1442](https://github.com/request/request/pull/1442) Fixed the issue with strictSSL tests on  0.12 & io.js by explicitly setting a cipher that matches the cert. (@BBB, @nickmccurdy, @demohi, @simov, @0x4139)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-253-- [#1460](https://github.com/request/request/pull/1460) localAddress or proxy config is lost when redirecting (@simov, @0x4139)
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-559-- [#502](https://github.com/request/request/pull/502) Fix POST (and probably other) requests that are retried after 401 Unauthorized (@nylen)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md:560:- [#508](https://github.com/request/request/pull/508) Honor the .strictSSL option when using proxies (tunnel-agent) (@jhs)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-561-- [#512](https://github.com/request/request/pull/512) Make password optional to support the format: http://username@hostname/ (@pajato1)
##############################################
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-663-- [#81](https://github.com/request/request/pull/81) Enhance redirect handling (@danmactough)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md:664:- [#78](https://github.com/request/request/pull/78) Don't try to do strictSSL for non-ssl connections (@isaacs)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-665-- [#76](https://github.com/request/request/pull/76) Bug when a request fails and a timeout is set (@Marsup)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-666-- [#70](https://github.com/request/request/pull/70) add test script to package.json (@isaacs, @aheckmann)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md:667:- [#73](https://github.com/request/request/pull/73) Fix #71 Respect the strictSSL flag (@isaacs)
/src/lib/node_modules/bower-registry-client/node_modules/request/CHANGELOG.md-668-- [#69](https://github.com/request/request/pull/69) Flatten chunked requests properly (@isaacs)
##############################################
/src/lib/node_modules/bower-registry-client/lib/unregister.js-22-        ca: config.ca.register,
/src/lib/node_modules/bower-registry-client/lib/unregister.js:23:        strictSSL: config.strictSsl,
/src/lib/node_modules/bower-registry-client/lib/unregister.js-24-        timeout: config.timeout
##############################################
/src/lib/node_modules/bower-registry-client/lib/list.js-98-        headers: headers,
/src/lib/node_modules/bower-registry-client/lib/list.js:99:        strictSSL: this._config.strictSsl,
/src/lib/node_modules/bower-registry-client/lib/list.js-100-        timeout: this._config.timeout,
##############################################
/src/lib/node_modules/bower-registry-client/lib/search.js-106-        ca: this._config.ca.search[index],
/src/lib/node_modules/bower-registry-client/lib/search.js:107:        strictSSL: this._config.strictSsl,
/src/lib/node_modules/bower-registry-client/lib/search.js-108-        timeout: this._config.timeout,
##############################################
/src/lib/node_modules/bower-registry-client/lib/lookup.js-90-        ca: this._config.ca.search[index],
/src/lib/node_modules/bower-registry-client/lib/lookup.js:91:        strictSSL: this._config.strictSsl,
/src/lib/node_modules/bower-registry-client/lib/lookup.js-92-        timeout: this._config.timeout,
##############################################
/src/lib/node_modules/bower-registry-client/lib/register.js-22-        ca: config.ca.register,
/src/lib/node_modules/bower-registry-client/lib/register.js:23:        strictSSL: config.strictSsl,
/src/lib/node_modules/bower-registry-client/lib/register.js-24-        timeout: config.timeout,
##############################################
/src/lib/node_modules/safe-buffer/README.md-540-We think there's a serious design issue with the `Buffer` API as it exists today. It
/src/lib/node_modules/safe-buffer/README.md:541:promotes insecure software by putting high-risk functionality into a convenient API
/src/lib/node_modules/safe-buffer/README.md-542-with friendly "developer ergonomics".
##############################################
/src/lib/node_modules/safe-buffer/README.md-556-Well-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while
/src/lib/node_modules/safe-buffer/README.md:557:older, insecure packages would magically become safe from this attack vector.
/src/lib/node_modules/safe-buffer/README.md-558-
##############################################
/src/lib/node_modules/github/index.js-770-
/src/lib/node_modules/github/index.js:771:        if (this.config.rejectUnauthorized !== undefined)
/src/lib/node_modules/github/index.js:772:            options.rejectUnauthorized = this.config.rejectUnauthorized;
/src/lib/node_modules/github/index.js-773-
##############################################
/src/lib/core/resolvers/GitHubResolver.js-78-        ca: this._config.ca.default,
/src/lib/core/resolvers/GitHubResolver.js:79:        strictSSL: this._config.strictSsl,
/src/lib/core/resolvers/GitHubResolver.js-80-        timeout: this._config.timeout,
##############################################
/src/lib/core/resolvers/UrlResolver.js-62-            ca: this._config.ca.default,
/src/lib/core/resolvers/UrlResolver.js:63:            strictSSL: this._config.strictSsl,
/src/lib/core/resolvers/UrlResolver.js-64-            timeout: this._config.timeout,
##############################################
/src/lib/core/resolvers/UrlResolver.js-147-        ca: this._config.ca.default,
/src/lib/core/resolvers/UrlResolver.js:148:        strictSSL: this._config.strictSsl,
/src/lib/core/resolvers/UrlResolver.js-149-        timeout: this._config.timeout,
