/src/lib/dialects/postgres/data-types.js-264-    var b = new Buffer(value, 'hex');
/src/lib/dialects/postgres/data-types.js:265:    return wkx.Geometry.parse(b).toGeoJSON();
/src/lib/dialects/postgres/data-types.js-266-  };
##############################################
/src/lib/dialects/postgres/data-types.js-296-    var b = new Buffer(value, 'hex');
/src/lib/dialects/postgres/data-types.js:297:    return wkx.Geometry.parse(b).toGeoJSON();
/src/lib/dialects/postgres/data-types.js-298-  };
##############################################
/src/lib/dialects/postgres/data-types.js-319-    }
/src/lib/dialects/postgres/data-types.js:320:    return hstore.parse(value);
/src/lib/dialects/postgres/data-types.js-321-  };
##############################################
/src/lib/dialects/postgres/data-types.js-357-
/src/lib/dialects/postgres/data-types.js:358:    return range.parse(value, parser);
/src/lib/dialects/postgres/data-types.js-359-  };
##############################################
/src/lib/dialects/postgres/connection-manager.js-34-      self.lib.types.setTypeParser(oid, function (value) {
/src/lib/dialects/postgres/connection-manager.js:35:        return dataType.parse(value, oid, self.lib.types.getTypeParser);
/src/lib/dialects/postgres/connection-manager.js-36-      });
##############################################
/src/lib/dialects/postgres/connection-manager.js-43-        return self.lib.types.arrayParser.create(value, function (value) {
/src/lib/dialects/postgres/connection-manager.js:44:          return dataType.parse(value, oid, self.lib.types.getTypeParser);
/src/lib/dialects/postgres/connection-manager.js:45:        }).parse();
/src/lib/dialects/postgres/connection-manager.js-46-      });
##############################################
/src/lib/dialects/postgres/hstore.js-11-    if (value === null) return null;
/src/lib/dialects/postgres/hstore.js:12:    return hstore.parse(value);
/src/lib/dialects/postgres/hstore.js-13-}
##############################################
/src/lib/dialects/mysql/data-types.js-89-
/src/lib/dialects/mysql/data-types.js:90:    return wkx.Geometry.parse(value).toGeoJSON();
/src/lib/dialects/mysql/data-types.js-91-  };
##############################################
/src/lib/sequelize.js-105-    options = username || {};
/src/lib/sequelize.js:106:    urlParts = url.parse(arguments[0]);
/src/lib/sequelize.js-107-    // reset username and password to null so we don't pass the options as the username
