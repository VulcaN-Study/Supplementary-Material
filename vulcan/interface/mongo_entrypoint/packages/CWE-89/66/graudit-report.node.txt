/src/lib/ConnectionConfig.js-103-        // Try to parse this as a JSON expression first
/src/lib/ConnectionConfig.js:104:        options[key] = JSON.parse(value);
/src/lib/ConnectionConfig.js-105-      } catch (err) {
##############################################
/src/lib/protocol/sequences/Query.js-142-Query.prototype['RowDataPacket'] = function(packet, parser, connection) {
/src/lib/protocol/sequences/Query.js:143:  packet.parse(parser, this._resultSet.fieldPackets, this.typeCast, this.nestTables, connection);
/src/lib/protocol/sequences/Query.js-144-
##############################################
/src/lib/protocol/sequences/Query.js-153-  var self = this;
/src/lib/protocol/sequences/Query.js:154:  fs.readFile(path, 'utf-8', function(err, data) {
/src/lib/protocol/sequences/Query.js-155-    if (err) {
##############################################
/src/lib/protocol/Protocol.js-158-
/src/lib/protocol/Protocol.js:159:  packet.parse(this._parser);
/src/lib/protocol/Protocol.js-160-
##############################################
/src/test/FakeServer.js-21-FakeServer.prototype.listen = function(port, cb) {
/src/test/FakeServer.js:22:  this._server = Net.createServer(this._handleConnection.bind(this));
/src/test/FakeServer.js-23-  this._server.listen(port, cb);
##############################################
/src/test/FakeServer.js-85-
/src/test/FakeServer.js:86:  packet.parse(this._parser);
/src/test/FakeServer.js-87-
