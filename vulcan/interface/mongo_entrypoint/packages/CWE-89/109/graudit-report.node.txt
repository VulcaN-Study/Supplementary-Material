/src/bin/sequelize-94-  try {
/src/bin/sequelize:95:    urlParts = url.parse(urlString)
/src/bin/sequelize-96-    config.database = urlParts.path.replace(/^\//,  '');
##############################################
/src/bin/sequelize-158-  .option('--coffee', 'Consider coffee script files as migration source.')
/src/bin/sequelize:159:  .parse(process.argv)
/src/bin/sequelize-160-
##############################################
/src/lib/dialects/postgres/hstore.js-30-      case '[':
/src/lib/dialects/postgres/hstore.js:31:        return JSON.parse(part)
/src/lib/dialects/postgres/hstore.js-32-      default:
##############################################
/src/lib/dialects/postgres/query.js-140-            if (!!this.callee.daoFactory && !!this.callee.daoFactory.rawAttributes && !!this.callee.daoFactory.rawAttributes[key] && !!this.callee.daoFactory.rawAttributes[key].type && !!this.callee.daoFactory.rawAttributes[key].type.type && this.callee.daoFactory.rawAttributes[key].type.type === DataTypes.HSTORE.type) {
/src/lib/dialects/postgres/query.js:141:              record = hstore.parse(record)
/src/lib/dialects/postgres/query.js-142-            }
##############################################
/src/lib/dialects/postgres/query.js-155-            if (!!this.callee.daoFactory && !!this.callee.daoFactory.rawAttributes && !!this.callee.daoFactory.rawAttributes[key] && !!this.callee.daoFactory.rawAttributes[key].type && !!this.callee.daoFactory.rawAttributes[key].type.type && this.callee.daoFactory.rawAttributes[key].type.type === DataTypes.HSTORE.type) {
/src/lib/dialects/postgres/query.js:156:              record = hstore.parse(record)
/src/lib/dialects/postgres/query.js-157-            }
##############################################
/src/lib/sequelize.js-58-      options = username || {}
/src/lib/sequelize.js:59:      urlParts = url.parse(arguments[0])
/src/lib/sequelize.js-60-
