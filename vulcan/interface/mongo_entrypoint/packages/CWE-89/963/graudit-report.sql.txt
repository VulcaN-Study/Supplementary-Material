/src/src/mysql.js-41-    debug(configuration);
/src/src/mysql.js:42:    var db = sql.createConnection(configuration);
/src/src/mysql.js-43-    return Q.ninvoke(db, 'connect')
##############################################
/src/src/mysql.js-63-
/src/src/mysql.js:64:    connection.query(query, function(err, rows, fields) {
/src/src/mysql.js-65-      if (err) {
##############################################
/src/src/mssql.js-20-
/src/src/mssql.js:21:    return (new sql.Connection(config)).connect()
/src/src/mssql.js-22-      .then(function(con) {
##############################################
/src/index.js-32-  sql
/src/index.js:33:    .connect(config.db)
/src/index.js-34-    .catch(function(err) {
##############################################
/src/index.js-48-      // Get the query.
/src/index.js:49:      var query = (typeof route.query === 'function') ? route.query(req, res) : route.query;
/src/index.js-50-      var count = (typeof route.count === 'function') ? route.count(req, res) : route.count;
##############################################
/src/test/mysql.js-62-    it('connect to the db', function(done) {
/src/test/mysql.js:63:      sql.connect(config.db)
/src/test/mysql.js-64-        .then(function() {
##############################################
/src/test/mssql.js-66-    it('connect to the db', function(done) {
/src/test/mssql.js:67:      sql.connect(_.cloneDeep(config.db))
/src/test/mssql.js-68-        .then(function() {
##############################################
/src/test/postgresql.js-68-      temp.database = 'postgres';
/src/test/postgresql.js:69:      sql.connect(temp)
/src/test/postgresql.js-70-        .then(function() {
##############################################
/src/test/postgresql.js-132-    it('connect to the test db', function(done) {
/src/test/postgresql.js:133:      sql.connect(config.db)
/src/test/postgresql.js-134-        .then(function() {
