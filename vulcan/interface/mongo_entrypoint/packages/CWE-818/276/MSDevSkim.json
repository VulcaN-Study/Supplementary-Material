[
  {
    "filename": "/src/source/platform.c",
    "start_line": 37,
    "start_column": 9,
    "end_line": 37,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(copy, data, size)"
  },
  {
    "filename": "/src/source/platform.c",
    "start_line": 26,
    "start_column": 22,
    "end_line": 26,
    "end_column": 43,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(Buffer)"
  },
  {
    "filename": "/src/source/platform.c",
    "start_line": 35,
    "start_column": 18,
    "end_line": 35,
    "end_column": 30,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(size)"
  },
  {
    "filename": "/src/source/platform.c",
    "start_line": 71,
    "start_column": 31,
    "end_line": 71,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(buffer_size)"
  },
  {
    "filename": "/src/source/platform.c",
    "start_line": 67,
    "start_column": 18,
    "end_line": 67,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/source/platform.c",
    "start_line": 105,
    "start_column": 18,
    "end_line": 105,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/source/duk.c",
    "start_line": 168,
    "start_column": 9,
    "end_line": 168,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/source/duk.c",
    "start_line": 193,
    "start_column": 9,
    "end_line": 193,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/dependencies/fetch_dependencies.sh",
    "start_line": 35,
    "start_column": 12,
    "end_line": 35,
    "end_column": 18,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/features/common/simple.c",
    "start_line": 16,
    "start_column": 3,
    "end_line": 16,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/features/linking/linked.c",
    "start_line": 17,
    "start_column": 3,
    "end_line": 17,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/features/linking/linked_dynamic.c",
    "start_line": 17,
    "start_column": 3,
    "end_line": 17,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/features/linking/math.c",
    "start_line": 17,
    "start_column": 3,
    "end_line": 17,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  }
]