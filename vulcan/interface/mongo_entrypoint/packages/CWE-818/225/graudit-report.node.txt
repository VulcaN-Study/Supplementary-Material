/src/app/unpackZip.js-74-            return new Promise((resolve, reject) => {
/src/app/unpackZip.js:75:                fs.unlink(jvmPathToZipFile, function (err) {
/src/app/unpackZip.js-76-                    if (err) {
##############################################
/src/app/cleanUp.js-38-    return new Promise((resolve, reject) => {
/src/app/cleanUp.js:39:        fs.unlink(path, (err) => {
/src/app/cleanUp.js-40-            if (err) {
##############################################
/src/app/stateProvider.js-24-        console.log("0.2 Creating mutex object");
/src/app/stateProvider.js:25:        fs.appendFile(mutexFilePath, process.pid.toString(), (err) => {
/src/app/stateProvider.js-26-            if (err) {
##############################################
/src/app/stateProvider.js-39-        console.log("0.1 Checking already created mutex");
/src/app/stateProvider.js:40:        fs.readFile(mutexFilePath, (err, data) => {
/src/app/stateProvider.js-41-            if (err) {
##############################################
/src/app/stateProvider.js-66-                    console.log("0.2.2 Process with pid %d is finished", pid);
/src/app/stateProvider.js:67:                    fs.unlink(mutexFilePath, function(err) {
/src/app/stateProvider.js-68-                        if (err) {
##############################################
/src/app/stateProvider.js-109-    return new Promise((resolve, reject) => {
/src/app/stateProvider.js:110:        fs.unlink(mutexFilePath, function(err) {
/src/app/stateProvider.js-111-            if (err) {
