<report_mosca>
 <Path>/src/lib/nodeschnaps/node.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 28 -  global.setTimeout = require('timers').setTimeout;

 Line: 30 -  global.setInterval = require('timers').setInterval;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/nodeschnaps/node/process.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 184 -   * Should run on the next tick but in the moment it's only a setTimeout

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/nodeschnaps/node/binding/constants.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 189 -  constants.SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS = 2048

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/nodeschnaps/node/binding/contextify.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 30 -          return eval(code);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/lib/node/timers.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 0 -  QUnit.test( "timers.setTimeout", function(assert) {

 Line: 5 -          require('timers').setTimeout instanceof Function,

 Line: 10 -          setTimeout instanceof Function,

 Line: 14 -      require('timers').setTimeout(function() {

 Line: 31 -      var timer = require('timers').setTimeout(function() {}, 60000);

 Line: 38 -  QUnit.test( "timers.setInterval", function(assert) {

 Line: 43 -          require('timers').setInterval instanceof Function,

 Line: 48 -          setInterval instanceof Function,

 Line: 54 -      var timer = require('timers').setInterval(function() {

 Line: 75 -      var timer = require('timers').setInterval(function() {}, 60000);

 Line: 127 -      var timer = require('timers').setTimeout(function() {

</Result>
</report_mosca>

