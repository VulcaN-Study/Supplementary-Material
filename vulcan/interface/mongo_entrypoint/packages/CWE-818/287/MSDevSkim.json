[
  {
    "filename": "/src/libsass/copy_c_str.cpp",
    "start_line": 9,
    "start_column": 48,
    "end_line": 9,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(orig)"
  },
  {
    "filename": "/src/libsass/copy_c_str.cpp",
    "start_line": 9,
    "start_column": 26,
    "end_line": 9,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(char)"
  },
  {
    "filename": "/src/libsass/copy_c_str.cpp",
    "start_line": 10,
    "start_column": 5,
    "end_line": 10,
    "end_column": 23,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(copy, orig)"
  },
  {
    "filename": "/src/libsass/sass_interface.cpp",
    "start_line": 75,
    "start_column": 27,
    "end_line": 75,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(char*)"
  },
  {
    "filename": "/src/libsass/sass_interface.cpp",
    "start_line": 78,
    "start_column": 24,
    "end_line": 78,
    "end_column": 43,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(char)"
  },
  {
    "filename": "/src/libsass/eval.cpp",
    "start_line": 434,
    "start_column": 39,
    "end_line": 434,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/libsass/eval.cpp",
    "start_line": 439,
    "start_column": 39,
    "end_line": 439,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/libsass/eval.cpp",
    "start_line": 445,
    "start_column": 39,
    "end_line": 445,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/libsass/sass2scss.cpp",
    "start_line": 762,
    "start_column": 3,
    "end_line": 762,
    "end_column": 29,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy (cstr, scss.c_str()"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 73,
    "start_column": 33,
    "end_line": 73,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(msg.size()"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 83,
    "start_column": 33,
    "end_line": 83,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(msg.size()"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 141,
    "start_column": 41,
    "end_line": 141,
    "end_column": 72,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(union Sass_Value)"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 150,
    "start_column": 47,
    "end_line": 150,
    "end_column": 86,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(struct Sass_KeyValuePair)"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 74,
    "start_column": 9,
    "end_line": 74,
    "end_column": 36,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(msg_str, msg.c_str()"
  },
  {
    "filename": "/src/libsass/sass.cpp",
    "start_line": 84,
    "start_column": 9,
    "end_line": 84,
    "end_column": 36,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(msg_str, msg.c_str()"
  },
  {
    "filename": "/src/libsass/parser.cpp",
    "start_line": 25,
    "start_column": 24,
    "end_line": 25,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(str)"
  },
  {
    "filename": "/src/libsass/token.hpp",
    "start_line": 17,
    "start_column": 61,
    "end_line": 17,
    "end_column": 70,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(s)"
  }
]