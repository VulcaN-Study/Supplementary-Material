/src/src/node/RosTCP.js-21-  if (!this.socket && (options.host || options.port)) {
/src/src/node/RosTCP.js:22:    this.connect({
/src/src/node/RosTCP.js-23-      host: options.host,
##############################################
/src/src/node/RosTCP.js-44-    var events = socketAdapter(this);
/src/src/node/RosTCP.js:45:    this.socket = net.connect(url)
/src/src/node/RosTCP.js-46-      .on('data', events.onmessage)
##############################################
/src/src/core/Param.js-39-  paramClient.callService(request, function(result) {
/src/src/core/Param.js:40:    var value = JSON.parse(result.value);
/src/src/core/Param.js-41-    callback(value);
##############################################
/src/src/core/SocketAdapter.js-46-    }
/src/src/core/SocketAdapter.js:47:    callback(JSON.parse(jsonData));
/src/src/core/SocketAdapter.js-48-  };
##############################################
/src/src/core/SocketAdapter.js-103-    onmessage: function onMessage(message) {
/src/src/core/SocketAdapter.js:104:      var data = JSON.parse(typeof message === 'string' ? message : message.data);
/src/src/core/SocketAdapter.js-105-      if (data.op === 'png') {
##############################################
/src/src/core/Ros.js-47-    this.socketio = (options.url.indexOf('http') !== -1);
/src/src/core/Ros.js:48:    this.connect(options.url);
/src/src/core/Ros.js-49-  }
##############################################
/src/doc/core_Param.js.html-67-  paramClient.callService(request, function(result) {
/src/doc/core_Param.js.html:68:    var value = JSON.parse(result.value);
/src/doc/core_Param.js.html-69-    callback(value);
##############################################
/src/doc/node_RosTCP.js.html-49-  if (!this.socket &amp;&amp; (options.host || options.port)) {
/src/doc/node_RosTCP.js.html:50:    this.connect({
/src/doc/node_RosTCP.js.html-51-      host: options.host,
##############################################
/src/doc/node_RosTCP.js.html-72-    var events = socketAdapter(this);
/src/doc/node_RosTCP.js.html:73:    this.socket = net.connect(url)
/src/doc/node_RosTCP.js.html-74-      .on('data', events.onmessage)
##############################################
/src/doc/core_Ros.js.html-75-    this.socketio = (options.url.indexOf('http') !== -1);
/src/doc/core_Ros.js.html:76:    this.connect(options.url);
/src/doc/core_Ros.js.html-77-  }
##############################################
/src/doc/core_SocketAdapter.js.html-74-    }
/src/doc/core_SocketAdapter.js.html:75:    callback(JSON.parse(jsonData));
/src/doc/core_SocketAdapter.js.html-76-  };
##############################################
/src/doc/core_SocketAdapter.js.html-131-    onmessage: function onMessage(message) {
/src/doc/core_SocketAdapter.js.html:132:      var data = JSON.parse(typeof message === 'string' ? message : message.data);
/src/doc/core_SocketAdapter.js.html-133-      if (data.op === 'png') {
