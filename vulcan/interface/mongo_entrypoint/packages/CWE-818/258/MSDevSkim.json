[
  {
    "filename": "/src/install.sh",
    "start_line": 4,
    "start_column": 35,
    "end_line": 4,
    "end_column": 41,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/c++/include/tins/dhcpv6.h",
    "start_line": 934,
    "start_column": 14,
    "end_line": 934,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&buffer[index], &uint16_t_buffer, sizeof(uint16_t)"
  },
  {
    "filename": "/src/c++/include/tins/dhcpv6.h",
    "start_line": 950,
    "start_column": 14,
    "end_line": 950,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&size, ptr + index, sizeof(uint16_t)"
  },
  {
    "filename": "/src/c++/include/tins/memory_helpers.h",
    "start_line": 51,
    "start_column": 10,
    "end_line": 51,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(output_buffer, buffer, size)"
  },
  {
    "filename": "/src/c++/include/tins/memory_helpers.h",
    "start_line": 56,
    "start_column": 10,
    "end_line": 56,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&value, buffer, sizeof(value)"
  },
  {
    "filename": "/src/c++/include/tins/memory_helpers.h",
    "start_line": 60,
    "start_column": 10,
    "end_line": 60,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buffer, ptr, size)"
  },
  {
    "filename": "/src/c++/include/tins/memory_helpers.h",
    "start_line": 65,
    "start_column": 10,
    "end_line": 65,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buffer, &value, sizeof(value)"
  },
  {
    "filename": "/src/c++/include/tins/pdu_option.h",
    "start_line": 289,
    "start_column": 18,
    "end_line": 289,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&output.first, opt.data_ptr(), sizeof(T)"
  },
  {
    "filename": "/src/c++/include/tins/pdu_option.h",
    "start_line": 290,
    "start_column": 18,
    "end_line": 290,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&output.second, opt.data_ptr() + sizeof(T), sizeof(U)"
  },
  {
    "filename": "/src/c++/include/tins/dot11/dot11_base.h",
    "start_line": 164,
    "start_column": 9,
    "end_line": 164,
    "end_column": 12,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "CTS"
  }
]