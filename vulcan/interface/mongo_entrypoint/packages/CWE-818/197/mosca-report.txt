<report_mosca>
 <Path>/src/api/validate/src/images.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -  const SELECT_BOUNDARY = 200000;

 Line: 15 -    printData(largeImages, options, 'BIGGER_IMAGES', SELECT_BOUNDARY);

 Line: 38 -      .then(result => result.filter(file => file.size >= SELECT_BOUNDARY));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/api/update.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 44 -        throw new Error(err.message || i18n.UPDATE_ERR)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/bin/login/login.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 71 -      deferred.reject(new CoError('CANNOT_GET_DATA_FROM_COMMAND_LINE_ERR'));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/bin/screen/src/ProgressHandler.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 16 -  	this.timer = setInterval(this._updateProgress.bind(this, jobId), 1000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/bin/utils/checkUpdate.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -      logger.info(i18n.UPDATE_AVAILABLE, version, pkg.version, registry)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/api/validate/src/images.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 42 -  var SELECT_BOUNDARY = 200000;

 Line: 54 -                      printData(largeImages, options, 'BIGGER_IMAGES', SELECT_BOUNDARY);

 Line: 76 -          .then(function (result) { return result.filter(function (file) { return file.size >= SELECT_BOUNDARY; }); });

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/api/update.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 40 -          throw new Error(err.message || i18n.UPDATE_ERR);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/bin/login/login.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 63 -          deferred.reject(new CoError('CANNOT_GET_DATA_FROM_COMMAND_LINE_ERR'));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/bin/screen/src/ProgressHandler.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 11 -      this.timer = setInterval(this._updateProgress.bind(this, jobId), 1000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/modules/Request/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 25 -          return sendRequest('DELETE', url, data);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/services/presentation/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 36 -          var query = {

 Line: 42 -          return this.request.get(url, { qs: query })

 Line: 121 -          var query = {

 Line: 124 -          return this.request.get(url, { qs: query })

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/services/key-cloak/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 162 -              var query = url.query;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/services/key-cloak/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 177 -        const query = url.query;

</Result>
</report_mosca>

