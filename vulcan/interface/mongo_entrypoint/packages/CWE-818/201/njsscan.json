{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# EditorConfig is awesome\r",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.editorconfig",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (C) 2010-2018 Robot Developers\r",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# EditorConfig is awesome\r",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/robot/.editorconfig",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (C) 2010-2016 Robot Developers\r",
          "message": "Syntax error"
        },
        "path": "/src/src/robot/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "################################################################################\r",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/robot/Makefile",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "################################################################################\r",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/robot/Source/Makefile",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "################################################################################\r",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/robot/Test/Makefile",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/lib/range.js",
          "match_lines": [
            65,
            65
          ],
          "match_position": [
            11,
            22
          ],
          "match_string": "\t\treturn (Math.random() * (this.max -"
        },
        {
          "file_path": "/src/lib/timer.js",
          "match_lines": [
            141,
            141
          ],
          "match_position": [
            13,
            24
          ],
          "match_string": "\t\telse d = (Math.random() *"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/lib/hash.js",
          "match_lines": [
            136,
            136
          ],
          "match_position": [
            4,
            31
          ],
          "match_string": "\t\t\treturn this.result === hash;"
        },
        {
          "file_path": "/src/lib/hash.js",
          "match_lines": [
            152,
            152
          ],
          "match_position": [
            4,
            31
          ],
          "match_string": "\t\t\treturn this.result !== hash;"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
