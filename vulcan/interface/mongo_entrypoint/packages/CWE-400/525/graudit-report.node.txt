/src/README.md-11-var Cookie = tough.Cookie;
/src/README.md:12:var cookie = Cookie.parse(header);
/src/README.md-13-cookie.value = 'somethingdifferent';
##############################################
/src/README.md-45-
/src/README.md:46:Parse a cookie date string into a `Date`.  Parses according to RFC6265 Section 5.1.1, not `Date.parse()`.
/src/README.md-47-
##############################################
/src/README.md-65-
/src/README.md:66:The `path` parameter MUST be _only_ the pathname part of a URI (i.e. excludes the hostname, query, fragment, etc.).  This is the `.pathname` property of node's `uri.parse()` output.
/src/README.md-67-
##############################################
/src/README.md-75-
/src/README.md:76:alias for `Cookie.parse(cookieString[, options])`
/src/README.md-77-
##############################################
/src/README.md-117-
/src/README.md:118:### `Cookie.parse(cookieString[, options])`
/src/README.md-119-
##############################################
/src/README.md-133-else
/src/README.md:134:  cookies = [Cookie.parse(res.headers['set-cookie'])];
/src/README.md-135-```
##############################################
/src/README.md-213-
/src/README.md:214:Does the reverse of `cookie.toJSON()`. If passed a string, will `JSON.parse()` that first.
/src/README.md-215-
/src/README.md:216:Any `Date` properties (i.e., `.expires`, `.creation`, and `.lastAccessed`) are parsed via `Date.parse()`, not the tough-cookie `parseDate`, since it's JavaScript/JSON-y timestamps being handled at this layer.
/src/README.md-217-
##############################################
/src/lib/cookie.js-477-  try {
/src/lib/cookie.js:478:    obj = JSON.parse(str);
/src/lib/cookie.js-479-  } catch (e) {
##############################################
/src/lib/cookie.js-914-  if (!(cookie instanceof Cookie)) {
/src/lib/cookie.js:915:    cookie = Cookie.parse(cookie, { loose: loose });
/src/lib/cookie.js-916-  }
##############################################
/src/lib/cookie.js-1263-  var serialized = typeof strOrObj === 'string' ?
/src/lib/cookie.js:1264:    JSON.parse(strOrObj) : strOrObj;
/src/lib/cookie.js-1265-  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);
