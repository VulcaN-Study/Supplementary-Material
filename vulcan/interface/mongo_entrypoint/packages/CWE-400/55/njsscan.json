{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) 2011-2016 Tim Wood, Iskren Chernev, Moment.js contributors",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/locale/ko.js",
          "match_lines": [
            59,
            59
          ],
          "match_position": [
            13,
            38
          ],
          "match_string": "            return token === '\uc624\ud6c4';"
        },
        {
          "file_path": "/src/min/locales.js",
          "match_lines": [
            4030,
            4030
          ],
          "match_position": [
            13,
            38
          ],
          "match_string": "            return token === '\uc624\ud6c4';"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            7623,
            7623
          ],
          "match_position": [
            13,
            38
          ],
          "match_string": "            return token === '\uc624\ud6c4';"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            504,
            504
          ],
          "match_position": [
            26,
            59
          ],
          "match_string": "        while (i >= 0 && localFormattingTokens.test(format)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            688,
            688
          ],
          "match_position": [
            48,
            87
          ],
          "match_string": "            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            690,
            690
          ],
          "match_position": [
            54,
            94
          ],
          "match_string": "            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            692,
            692
          ],
          "match_position": [
            35,
            70
          ],
          "match_string": "            } else if (!strict && this._monthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            2596,
            2596
          ],
          "match_position": [
            48,
            91
          ],
          "match_string": "            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            2598,
            2598
          ],
          "match_position": [
            54,
            98
          ],
          "match_string": "            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            2600,
            2600
          ],
          "match_position": [
            53,
            95
          ],
          "match_string": "            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/min/moment-with-locales.js",
          "match_lines": [
            2602,
            2602
          ],
          "match_position": [
            35,
            74
          ],
          "match_string": "            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            510,
            510
          ],
          "match_position": [
            26,
            59
          ],
          "match_string": "        while (i >= 0 && localFormattingTokens.test(format)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            694,
            694
          ],
          "match_position": [
            48,
            87
          ],
          "match_string": "            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            696,
            696
          ],
          "match_position": [
            54,
            94
          ],
          "match_string": "            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            698,
            698
          ],
          "match_position": [
            35,
            70
          ],
          "match_string": "            } else if (!strict && this._monthsParse[i].test(monthName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            2602,
            2602
          ],
          "match_position": [
            48,
            91
          ],
          "match_string": "            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            2604,
            2604
          ],
          "match_position": [
            54,
            98
          ],
          "match_string": "            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            2606,
            2606
          ],
          "match_position": [
            53,
            95
          ],
          "match_string": "            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/moment.js",
          "match_lines": [
            2608,
            2608
          ],
          "match_position": [
            35,
            74
          ],
          "match_string": "            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {"
        },
        {
          "file_path": "/src/package.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            20,
            41
          ],
          "match_string": "            return /\\.js$/.test(filename);"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
