{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) 2013-2016 Andrew Nesbitt",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 12
        },
        "extra": {
          "line": "emcc $@",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/bin/emcc",
        "start": {
          "col": 7,
          "line": 12
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This file is for unifying the coding style for different editors and IDEs",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/.editorconfig",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 2
        },
        "extra": {
          "line": "Copyright (C) 2012 by Hampton Catlin",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/COPYING",
        "start": {
          "col": 15,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 2
        },
        "extra": {
          "line": "Copyright (C) 2012-2016 by the Sass Open Source Foundation",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/LICENSE",
        "start": {
          "col": 15,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 9
        },
        "extra": {
          "line": "# Solaris/Illumos flavors",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/Makefile",
        "start": {
          "col": 1,
          "line": 9
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 2,
          "line": 5
        },
        "extra": {
          "line": ": ${SASS_SPEC_PATH:=\"sass-spec\"}",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/script/bootstrap",
        "start": {
          "col": 1,
          "line": 5
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 48,
          "line": 3
        },
        "extra": {
          "line": "echo \"                                        \"",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/script/branding",
        "start": {
          "col": 6,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 7
        },
        "extra": {
          "line": "# export this path right here (was in script/spec before)",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/script/ci-build-libsass",
        "start": {
          "col": 1,
          "line": 7
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 4,
          "line": 29
        },
        "extra": {
          "line": "  # osx doesn't seem to know gcov lib?",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/script/ci-build-plugin",
        "start": {
          "col": 3,
          "line": 29
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 3
        },
        "extra": {
          "line": "gem install minitest",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/script/ci-install-compiler",
        "start": {
          "col": 5,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 5,
          "line": 2
        },
        "extra": {
          "line": "if [ \"x$COVERAGE\" == \"xyes\" ]; then",
          "message": "Syntax error"
        },
        "path": "/src/src/libsass/script/ci-install-deps",
        "start": {
          "col": 4,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 4,
          "line": 5
        },
        "extra": {
          "line": "  # find / -name \"gcovr\"",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/script/ci-report-coverage",
        "start": {
          "col": 3,
          "line": 5
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 2
        },
        "extra": {
          "line": "# Copyright (C) 2011-2013 Free Software Foundation, Inc.",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/libsass/script/tap-driver",
        "start": {
          "col": 1,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 3,
          "line": 1
        },
        "extra": {
          "line": "$@ $TEST_FLAGS --tap --silent | tapout tap",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/src/libsass/script/tap-runner",
        "start": {
          "col": 2,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 9,
          "line": 2
        },
        "extra": {
          "line": "  \"env\": {",
          "message": "Syntax error"
        },
        "path": "/src/test/.eslintrc",
        "start": {
          "col": 8,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/index.js",
          "match_lines": [
            252,
            252
          ],
          "match_position": [
            8,
            59
          ],
          "match_string": "  if (!/^\\*|@warn|@error|@debug|\\w+\\(.*\\)$/.test(signature)) {"
        },
        {
          "file_path": "/src/lib/index.js",
          "match_lines": [
            253,
            253
          ],
          "match_position": [
            10,
            30
          ],
          "match_string": "    if (!/\\w+/.test(signature)) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
