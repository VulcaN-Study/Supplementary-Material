/src/lib/modules/apostrophe-oembed/public/js/always.js-28-      }
/src/lib/modules/apostrophe-oembed/public/js/always.js:29:      return self.query(options, function(err, result) {
/src/lib/modules/apostrophe-oembed/public/js/always.js-30-        if (err || (options.type && (result.type !== options.type))) {
##############################################
/src/lib/modules/apostrophe-oembed/index.js-82-        };
/src/lib/modules/apostrophe-oembed/index.js:83:        return self.query(req, url, options, function(err, result) {
/src/lib/modules/apostrophe-oembed/index.js-84-          if (err) {
##############################################
/src/lib/modules/apostrophe-db/index.js-134-      var connectOptions = _.assign(baseOptions, self.options.connect || {});
/src/lib/modules/apostrophe-db/index.js:135:      return mongo.MongoClient.connect(uri, connectOptions, function (err, dbArg) {
/src/lib/modules/apostrophe-db/index.js-136-        self.apos.db = dbArg;
##############################################
/src/test/attachments.js-95-        // make sure it exists in mongo
/src/test/attachments.js:96:        apos.db.collection(collectionName).findOne({
/src/test/attachments.js-97-          _id: info._id
##############################################
/src/test/attachments.js-143-            // make sure it exists in mongo
/src/test/attachments.js:144:            apos.db.collection(collectionName).findOne({
/src/test/attachments.js-145-              _id: result._id
##############################################
/src/test/attachments.js-168-          // make sure it exists in mongo
/src/test/attachments.js:169:          apos.db.collection(collectionName).findOne({
/src/test/attachments.js-170-            _id: result._id
