{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# nada",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 20,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) Isaac Z. Schlueter (\"Author\")",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 29,
          "line": 1
        },
        "extra": {
          "line": "files =  semver.browser.js \\",
          "message": "Lexical error: unrecognised symbol, in token rule:\\"
        },
        "path": "/src/Makefile",
        "start": {
          "col": 28,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/semver.browser.js",
          "match_lines": [
            227,
            227
          ],
          "match_position": [
            11,
            25
          ],
          "match_string": "  return (r.test(version)) ? new SemVer(version, loose) : null;"
        },
        {
          "file_path": "/src/semver.browser.js",
          "match_lines": [
            488,
            488
          ],
          "match_position": [
            14,
            28
          ],
          "match_string": "  var anum = numeric.test(a);"
        },
        {
          "file_path": "/src/semver.browser.js",
          "match_lines": [
            1052,
            1052
          ],
          "match_position": [
            10,
            28
          ],
          "match_string": "  return range.test(version);"
        },
        {
          "file_path": "/src/semver.js",
          "match_lines": [
            237,
            237
          ],
          "match_position": [
            11,
            25
          ],
          "match_string": "  return (r.test(version)) ? new SemVer(version, loose) : null;"
        },
        {
          "file_path": "/src/semver.js",
          "match_lines": [
            498,
            498
          ],
          "match_position": [
            14,
            28
          ],
          "match_string": "  var anum = numeric.test(a);"
        },
        {
          "file_path": "/src/semver.js",
          "match_lines": [
            1062,
            1062
          ],
          "match_position": [
            10,
            28
          ],
          "match_string": "  return range.test(version);"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
