/src/node6/lib/NetworkManager.js-930-    const content = (yield this.text());
/src/node6/lib/NetworkManager.js:931:    return JSON.parse(content);
/src/node6/lib/NetworkManager.js-932-  });}
##############################################
/src/node6/lib/JSHandle.js-934-   */
/src/node6/lib/JSHandle.js:935:  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/JSHandle.js-936-  const gen = fn.call(this);
##############################################
/src/node6/lib/JSHandle.js-975-   */
/src/node6/lib/JSHandle.js:976:  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/JSHandle.js-977-  const gen = fn.call(this);
##############################################
/src/node6/lib/Puppeteer.js-42-  connect(options) {
/src/node6/lib/Puppeteer.js:43:    return this._launcher.connect(options);
/src/node6/lib/Puppeteer.js-44-  }
##############################################
/src/node6/lib/DOMWorld.js-302-   */
/src/node6/lib/DOMWorld.js:303:  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/DOMWorld.js-304-  const gen = fn.call(this);
##############################################
/src/node6/lib/DOMWorld.js-330-    const document = (yield this._document());
/src/node6/lib/DOMWorld.js:331:    return document.$eval(selector, pageFunction, ...args);
/src/node6/lib/DOMWorld.js-332-  });}
##############################################
/src/node6/lib/DOMWorld.js-339-   */
/src/node6/lib/DOMWorld.js:340:  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/DOMWorld.js-341-  const gen = fn.call(this);
##############################################
/src/node6/lib/DOMWorld.js-367-    const document = (yield this._document());
/src/node6/lib/DOMWorld.js:368:    const value = (yield document.$$eval(selector, pageFunction, ...args));
/src/node6/lib/DOMWorld.js-369-    return value;
##############################################
/src/node6/lib/DOMWorld.js-482-    } = options;
/src/node6/lib/DOMWorld.js:483:    // We rely upon the fact that document.open() will reset frame lifecycle with "init"
/src/node6/lib/DOMWorld.js-484-    // lifecycle event. @see https://crrev.com/608658
/src/node6/lib/DOMWorld.js-485-    (yield this.evaluate(html => {
/src/node6/lib/DOMWorld.js:486:      document.open();
/src/node6/lib/DOMWorld.js-487-      document.write(html);
##############################################
/src/node6/lib/DOMWorld.js-885-      assert(helper.isString(value), 'Values must be strings. Found value "' + value + '" of type "' + (typeof value) + '"');
/src/node6/lib/DOMWorld.js:886:    return this.$eval(selector, (element, values) => {
/src/node6/lib/DOMWorld.js-887-      if (element.nodeName.toLowerCase() !== 'select')
##############################################
/src/node6/lib/Page.js-483-   */
/src/node6/lib/Page.js:484:  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/Page.js-485-  const gen = fn.call(this);
##############################################
/src/node6/lib/Page.js-510-})(function*(){
/src/node6/lib/Page.js:511:    return this.mainFrame().$eval(selector, pageFunction, ...args);
/src/node6/lib/Page.js-512-  });}
##############################################
/src/node6/lib/Page.js-519-   */
/src/node6/lib/Page.js:520:  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/Page.js-521-  const gen = fn.call(this);
##############################################
/src/node6/lib/Page.js-546-})(function*(){
/src/node6/lib/Page.js:547:    return this.mainFrame().$$eval(selector, pageFunction, ...args);
/src/node6/lib/Page.js-548-  });}
##############################################
/src/node6/lib/Page.js-1142-})(function*(){
/src/node6/lib/Page.js:1143:    const {name, seq, args} = JSON.parse(event.payload);
/src/node6/lib/Page.js-1144-    let expression = null;
##############################################
/src/node6/lib/BrowserFetcher.js-348-  /** @type {Object} */
/src/node6/lib/BrowserFetcher.js:349:  const options = URL.parse(url);
/src/node6/lib/BrowserFetcher.js-350-  options.method = method;
##############################################
/src/node6/lib/BrowserFetcher.js-354-    /** @type {Object} */
/src/node6/lib/BrowserFetcher.js:355:    const parsedProxyURL = URL.parse(proxyURL);
/src/node6/lib/BrowserFetcher.js-356-    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';
##############################################
/src/node6/lib/BrowserFetcher.js-358-    options.agent = new ProxyAgent(parsedProxyURL);
/src/node6/lib/BrowserFetcher.js:359:    options.rejectUnauthorized = false;
/src/node6/lib/BrowserFetcher.js-360-  }
##############################################
/src/node6/lib/FrameManager.js-728-   */
/src/node6/lib/FrameManager.js:729:  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/FrameManager.js-730-  const gen = fn.call(this);
##############################################
/src/node6/lib/FrameManager.js-755-})(function*(){
/src/node6/lib/FrameManager.js:756:    return this._mainWorld.$eval(selector, pageFunction, ...args);
/src/node6/lib/FrameManager.js-757-  });}
##############################################
/src/node6/lib/FrameManager.js-764-   */
/src/node6/lib/FrameManager.js:765:  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {
/src/node6/lib/FrameManager.js-766-  const gen = fn.call(this);
##############################################
/src/node6/lib/FrameManager.js-791-})(function*(){
/src/node6/lib/FrameManager.js:792:    return this._mainWorld.$$eval(selector, pageFunction, ...args);
/src/node6/lib/FrameManager.js-793-  });}
##############################################
/src/node6/lib/Connection.js-122-    debugProtocol('â—€ RECV ' + message);
/src/node6/lib/Connection.js:123:    const object = JSON.parse(message);
/src/node6/lib/Connection.js-124-    if (object.method === 'Target.attachedToTarget') {
##############################################
/src/node6/lib/Launcher.js-480-  const endpointURL = URL.resolve(browserURL, '/json/version');
/src/node6/lib/Launcher.js:481:  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });
/src/node6/lib/Launcher.js-482-  const request = http.request(requestOptions, res => {
##############################################
/src/node6/lib/Launcher.js-491-    res.on('data', chunk => data += chunk);
/src/node6/lib/Launcher.js:492:    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));
/src/node6/lib/Launcher.js-493-  });
##############################################
/src/lib/NetworkManager.js-618-    const content = await this.text();
/src/lib/NetworkManager.js:619:    return JSON.parse(content);
/src/lib/NetworkManager.js-620-  }
##############################################
/src/lib/JSHandle.js-414-   */
/src/lib/JSHandle.js:415:  async $eval(selector, pageFunction, ...args) {
/src/lib/JSHandle.js-416-    const elementHandle = await this.$(selector);
##############################################
/src/lib/JSHandle.js-429-   */
/src/lib/JSHandle.js:430:  async $$eval(selector, pageFunction, ...args) {
/src/lib/JSHandle.js-431-    const arrayHandle = await this.executionContext().evaluateHandle(
##############################################
/src/lib/Puppeteer.js-42-  connect(options) {
/src/lib/Puppeteer.js:43:    return this._launcher.connect(options);
/src/lib/Puppeteer.js-44-  }
##############################################
/src/lib/DOMWorld.js-146-   */
/src/lib/DOMWorld.js:147:  async $eval(selector, pageFunction, ...args) {
/src/lib/DOMWorld.js-148-    const document = await this._document();
/src/lib/DOMWorld.js:149:    return document.$eval(selector, pageFunction, ...args);
/src/lib/DOMWorld.js-150-  }
##############################################
/src/lib/DOMWorld.js-157-   */
/src/lib/DOMWorld.js:158:  async $$eval(selector, pageFunction, ...args) {
/src/lib/DOMWorld.js-159-    const document = await this._document();
/src/lib/DOMWorld.js:160:    const value = await document.$$eval(selector, pageFunction, ...args);
/src/lib/DOMWorld.js-161-    return value;
##############################################
/src/lib/DOMWorld.js-196-    } = options;
/src/lib/DOMWorld.js:197:    // We rely upon the fact that document.open() will reset frame lifecycle with "init"
/src/lib/DOMWorld.js-198-    // lifecycle event. @see https://crrev.com/608658
/src/lib/DOMWorld.js-199-    await this.evaluate(html => {
/src/lib/DOMWorld.js:200:      document.open();
/src/lib/DOMWorld.js-201-      document.write(html);
##############################################
/src/lib/DOMWorld.js-391-      assert(helper.isString(value), 'Values must be strings. Found value "' + value + '" of type "' + (typeof value) + '"');
/src/lib/DOMWorld.js:392:    return this.$eval(selector, (element, values) => {
/src/lib/DOMWorld.js-393-      if (element.nodeName.toLowerCase() !== 'select')
##############################################
/src/lib/Page.js-327-   */
/src/lib/Page.js:328:  async $eval(selector, pageFunction, ...args) {
/src/lib/Page.js:329:    return this.mainFrame().$eval(selector, pageFunction, ...args);
/src/lib/Page.js-330-  }
##############################################
/src/lib/Page.js-337-   */
/src/lib/Page.js:338:  async $$eval(selector, pageFunction, ...args) {
/src/lib/Page.js:339:    return this.mainFrame().$$eval(selector, pageFunction, ...args);
/src/lib/Page.js-340-  }
##############################################
/src/lib/Page.js-544-  async _onBindingCalled(event) {
/src/lib/Page.js:545:    const {name, seq, args} = JSON.parse(event.payload);
/src/lib/Page.js-546-    let expression = null;
##############################################
/src/lib/BrowserFetcher.js-270-  /** @type {Object} */
/src/lib/BrowserFetcher.js:271:  const options = URL.parse(url);
/src/lib/BrowserFetcher.js-272-  options.method = method;
##############################################
/src/lib/BrowserFetcher.js-276-    /** @type {Object} */
/src/lib/BrowserFetcher.js:277:    const parsedProxyURL = URL.parse(proxyURL);
/src/lib/BrowserFetcher.js-278-    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';
##############################################
/src/lib/BrowserFetcher.js-280-    options.agent = new ProxyAgent(parsedProxyURL);
/src/lib/BrowserFetcher.js:281:    options.rejectUnauthorized = false;
/src/lib/BrowserFetcher.js-282-  }
##############################################
/src/lib/FrameManager.js-442-   */
/src/lib/FrameManager.js:443:  async $eval(selector, pageFunction, ...args) {
/src/lib/FrameManager.js:444:    return this._mainWorld.$eval(selector, pageFunction, ...args);
/src/lib/FrameManager.js-445-  }
##############################################
/src/lib/FrameManager.js-452-   */
/src/lib/FrameManager.js:453:  async $$eval(selector, pageFunction, ...args) {
/src/lib/FrameManager.js:454:    return this._mainWorld.$$eval(selector, pageFunction, ...args);
/src/lib/FrameManager.js-455-  }
##############################################
/src/lib/Connection.js-96-    debugProtocol('â—€ RECV ' + message);
/src/lib/Connection.js:97:    const object = JSON.parse(message);
/src/lib/Connection.js-98-    if (object.method === 'Target.attachedToTarget') {
##############################################
/src/lib/Launcher.js-402-  const endpointURL = URL.resolve(browserURL, '/json/version');
/src/lib/Launcher.js:403:  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });
/src/lib/Launcher.js-404-  const request = http.request(requestOptions, res => {
##############################################
/src/lib/Launcher.js-413-    res.on('data', chunk => data += chunk);
/src/lib/Launcher.js:414:    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));
/src/lib/Launcher.js-415-  });
