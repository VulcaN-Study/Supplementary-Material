/src/node6/lib/NetworkManager.js-930-    const content = (yield this.text());
/src/node6/lib/NetworkManager.js:931:    return JSON.parse(content);
/src/node6/lib/NetworkManager.js-932-  });}
##############################################
/src/node6/lib/DOMWorld.js-482-    } = options;
/src/node6/lib/DOMWorld.js:483:    // We rely upon the fact that document.open() will reset frame lifecycle with "init"
/src/node6/lib/DOMWorld.js-484-    // lifecycle event. @see https://crrev.com/608658
/src/node6/lib/DOMWorld.js-485-    (yield this.evaluate(html => {
/src/node6/lib/DOMWorld.js:486:      document.open();
/src/node6/lib/DOMWorld.js-487-      document.write(html);
##############################################
/src/node6/lib/Page.js-1142-})(function*(){
/src/node6/lib/Page.js:1143:    const {name, seq, args} = JSON.parse(event.payload);
/src/node6/lib/Page.js-1144-    let expression = null;
##############################################
/src/node6/lib/BrowserFetcher.js-348-  /** @type {Object} */
/src/node6/lib/BrowserFetcher.js:349:  const options = URL.parse(url);
/src/node6/lib/BrowserFetcher.js-350-  options.method = method;
##############################################
/src/node6/lib/BrowserFetcher.js-354-    /** @type {Object} */
/src/node6/lib/BrowserFetcher.js:355:    const parsedProxyURL = URL.parse(proxyURL);
/src/node6/lib/BrowserFetcher.js-356-    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';
##############################################
/src/node6/lib/Connection.js-122-    debugProtocol('◀ RECV ' + message);
/src/node6/lib/Connection.js:123:    const object = JSON.parse(message);
/src/node6/lib/Connection.js-124-    if (object.method === 'Target.attachedToTarget') {
##############################################
/src/node6/lib/Launcher.js-480-  const endpointURL = URL.resolve(browserURL, '/json/version');
/src/node6/lib/Launcher.js:481:  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });
/src/node6/lib/Launcher.js-482-  const request = http.request(requestOptions, res => {
##############################################
/src/node6/lib/Launcher.js-491-    res.on('data', chunk => data += chunk);
/src/node6/lib/Launcher.js:492:    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));
/src/node6/lib/Launcher.js-493-  });
##############################################
/src/lib/NetworkManager.js-618-    const content = await this.text();
/src/lib/NetworkManager.js:619:    return JSON.parse(content);
/src/lib/NetworkManager.js-620-  }
##############################################
/src/lib/DOMWorld.js-196-    } = options;
/src/lib/DOMWorld.js:197:    // We rely upon the fact that document.open() will reset frame lifecycle with "init"
/src/lib/DOMWorld.js-198-    // lifecycle event. @see https://crrev.com/608658
/src/lib/DOMWorld.js-199-    await this.evaluate(html => {
/src/lib/DOMWorld.js:200:      document.open();
/src/lib/DOMWorld.js-201-      document.write(html);
##############################################
/src/lib/Page.js-544-  async _onBindingCalled(event) {
/src/lib/Page.js:545:    const {name, seq, args} = JSON.parse(event.payload);
/src/lib/Page.js-546-    let expression = null;
##############################################
/src/lib/BrowserFetcher.js-270-  /** @type {Object} */
/src/lib/BrowserFetcher.js:271:  const options = URL.parse(url);
/src/lib/BrowserFetcher.js-272-  options.method = method;
##############################################
/src/lib/BrowserFetcher.js-276-    /** @type {Object} */
/src/lib/BrowserFetcher.js:277:    const parsedProxyURL = URL.parse(proxyURL);
/src/lib/BrowserFetcher.js-278-    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';
##############################################
/src/lib/Connection.js-96-    debugProtocol('◀ RECV ' + message);
/src/lib/Connection.js:97:    const object = JSON.parse(message);
/src/lib/Connection.js-98-    if (object.method === 'Target.attachedToTarget') {
##############################################
/src/lib/Launcher.js-402-  const endpointURL = URL.resolve(browserURL, '/json/version');
/src/lib/Launcher.js:403:  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });
/src/lib/Launcher.js-404-  const request = http.request(requestOptions, res => {
##############################################
/src/lib/Launcher.js-413-    res.on('data', chunk => data += chunk);
/src/lib/Launcher.js:414:    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));
/src/lib/Launcher.js-415-  });
