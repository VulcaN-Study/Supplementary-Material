{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 7,
          "line": 52
        },
        "extra": {
          "line": "\t\t\t\t}()}",
          "message": "Syntax error"
        },
        "path": "/src/admin/src/views/home.js",
        "start": {
          "col": 6,
          "line": 52
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This file is for unifying the coding style for different editors and IDEs",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.editorconfig",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 7
        },
        "extra": {
          "line": "fields/types/**/lib/*",
          "message": "Lexical error: end of file in comment"
        },
        "path": "/src/.eslintignore",
        "start": {
          "col": 1,
          "line": 7
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 11,
          "line": 2
        },
        "extra": {
          "line": "\t\"parser\": \"babel-eslint\",",
          "message": "Syntax error"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 10,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 15,
          "line": 3
        },
        "extra": {
          "line": "/test/",
          "message": "Syntax error"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 9,
          "line": 1
        },
        "extra": {
          "line": "(The MIT License)",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 6,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "express_open_redirect": {
      "files": [
        {
          "file_path": "/src/lib/session.js",
          "match_lines": [
            211,
            212
          ],
          "match_position": [
            3,
            56
          ],
          "match_string": "\t\tvar from = new RegExp('^\\/keystone\\/?$', 'i').test(req.url) ? '' : '?from=' + req.url;\n\n\t\treturn res.redirect(keystone.get('signin url') + from);"
        },
        {
          "file_path": "/src/admin/routes/views/item.js",
          "match_lines": [
            13,
            13
          ],
          "match_position": [
            11,
            52
          ],
          "match_string": "\t\t\treturn res.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/item.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            11,
            52
          ],
          "match_string": "\t\t\treturn res.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/item.js",
          "match_lines": [
            89,
            89
          ],
          "match_position": [
            12,
            69
          ],
          "match_string": "\t\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + item.id);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            30,
            31
          ],
          "match_position": [
            4,
            56
          ],
          "match_string": "\t\t\tvar qs = querystring.stringify(req.query);\n\n\t\t\treturn res.redirect(req.path + ((qs) ? '?' + qs : ''));"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            31,
            31
          ],
          "match_position": [
            11,
            56
          ],
          "match_string": "\t\t\treturn res.redirect(req.path + ((qs) ? '?' + qs : ''));"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            85,
            85
          ],
          "match_position": [
            12,
            53
          ],
          "match_string": "\t\t\t\treturn res.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            90,
            90
          ],
          "match_position": [
            12,
            81
          ],
          "match_string": "\t\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + items.results[0].id);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            167,
            167
          ],
          "match_position": [
            5,
            46
          ],
          "match_string": "\t\t\t\tres.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            181,
            181
          ],
          "match_position": [
            29,
            70
          ],
          "match_string": "\t\t\tif (err || !item) return res.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            191,
            191
          ],
          "match_position": [
            5,
            46
          ],
          "match_string": "\t\t\t\tres.redirect('/keystone/' + req.list.path);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            201,
            211
          ],
          "match_position": [
            3,
            69
          ],
          "match_string": "\t\titem = new req.list.model();\n\n\t\titem.save(function(err) {\n\n\n\n\t\t\tif (err) {\n\n\t\t\t\tconsole.log('There was an error creating the new ' + req.list.singular + ':');\n\n\t\t\t\tconsole.log(err);\n\n\t\t\t\treq.flash('error', 'There was an error creating the new ' + req.list.singular + '.');\n\n\t\t\t\trenderView();\n\n\t\t\t} else {\n\n\t\t\t\treq.flash('success', 'New ' + req.list.singular + ' ' + req.list.getDocumentName(item) + ' created.');\n\n\t\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + item.id);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            211,
            211
          ],
          "match_position": [
            12,
            69
          ],
          "match_string": "\t\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + item.id);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            220,
            242
          ],
          "match_position": [
            3,
            68
          ],
          "match_string": "\t\titem = new req.list.model();\n\n\t\tvar updateHandler = item.getUpdateHandler(req);\n\n\n\n\t\tviewLocals.showCreateForm = true; // always show the create form after a create. success will redirect.\n\n\n\n\t\tif (req.list.nameIsInitial) {\n\n\t\t\tif (!req.list.nameField.validateInput(req.body, true, item)) {\n\n\t\t\t\tupdateHandler.addValidationError(req.list.nameField.path, req.list.nameField.label + ' is required.');\n\n\t\t\t}\n\n\t\t\treq.list.nameField.updateItem(item, req.body);\n\n\t\t}\n\n\n\n\t\tupdateHandler.process(req.body, {\n\n\t\t\t// flashErrors: true,\n\n\t\t\tlogErrors: true,\n\n\t\t\tfields: req.list.initialFields\n\n\t\t}, function(err) {\n\n\t\t\tif (err) {\n\n\t\t\t\tviewLocals.createErrors = err;\n\n\t\t\t\treturn renderView();\n\n\t\t\t}\n\n\t\t\treq.flash('success', 'New ' + req.list.singular + ' ' + req.list.getDocumentName(item) + ' created.');\n\n\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + item.id);"
        },
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            242,
            242
          ],
          "match_position": [
            11,
            68
          ],
          "match_string": "\t\t\treturn res.redirect('/keystone/' + req.list.path + '/' + item.id);"
        },
        {
          "file_path": "/src/admin/routes/views/signin.js",
          "match_lines": [
            30,
            30
          ],
          "match_position": [
            5,
            32
          ],
          "match_string": "\t\t\t\tres.redirect(req.query.from);"
        },
        {
          "file_path": "/src/lib/core/mount.js",
          "match_lines": [
            468,
            468
          ],
          "match_position": [
            6,
            47
          ],
          "match_string": "\t\t\t\t\tres.redirect(keystone._redirects[req.path]);"
        }
      ],
      "metadata": {
        "cwe": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
        "description": "Untrusted user input in redirect() can result in Open Redirect vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "generic_error_disclosure": {
      "files": [
        {
          "file_path": "/src/lib/core/createItems.js",
          "match_lines": [
            310,
            310
          ],
          "match_position": [
            5,
            28
          ],
          "match_string": "\t\t\t\tconsole.trace(err.stack);"
        }
      ],
      "metadata": {
        "cwe": "CWE-209: Generation of Error Message Containing Sensitive Information",
        "description": "Error messages with stack traces may expose sensitive information about the application.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "WARNING"
      }
    },
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/lib/security/csrf.js",
          "match_lines": [
            19,
            19
          ],
          "match_position": [
            9,
            55
          ],
          "match_string": "\treturn crypto.pseudoRandomBytes(exports.SECRET_LENGTH).toString('base64');"
        },
        {
          "file_path": "/src/fields/components/DateInput.js",
          "match_lines": [
            19,
            19
          ],
          "match_position": [
            19,
            30
          ],
          "match_string": "\t\t\tid: Math.round(Math.random() * 100000)"
        },
        {
          "file_path": "/src/fields/types/password/PasswordType.js",
          "match_lines": [
            99,
            99
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "\tvar len = Math.round(Math.random() * 4) + 6;"
        },
        {
          "file_path": "/src/admin/public/js/lib/marked/marked.js",
          "match_lines": [
            740,
            740
          ],
          "match_position": [
            9,
            20
          ],
          "match_string": "    if (Math.random() > 0.5) {"
        },
        {
          "file_path": "/src/admin/public/js/lib/underscore/underscore-1.5.1.js",
          "match_lines": [
            1046,
            1046
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    return min + Math.floor(Math.random() * (max - min + 1));"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_logic_bypass": {
      "files": [
        {
          "file_path": "/src/admin/routes/views/list.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            7,
            46
          ],
          "match_string": "\t\tif (req.query.sort === req.list.defaultSort) {"
        },
        {
          "file_path": "/src/admin/api/item/delete.js",
          "match_lines": [
            10,
            10
          ],
          "match_position": [
            18,
            47
          ],
          "match_string": "\tif (req.user && req.params.id === req.user.id) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-807: Reliance on Untrusted Inputs in a Security Decision",
        "description": "User controlled data is used for application business logic decision making. This expose protected data or functionality.",
        "owasp": "A5: Broken Access Control",
        "severity": "ERROR"
      }
    },
    "node_md5": {
      "files": [
        {
          "file_path": "/src/fields/types/email/EmailType.js",
          "match_lines": [
            36,
            36
          ],
          "match_position": [
            3,
            26
          ],
          "match_string": "\t\tcrypto.createHash('md5').update(value.toLowerCase().trim()).digest('hex'),"
        },
        {
          "file_path": "/src/admin/app/browserify.js",
          "match_lines": [
            87,
            87
          ],
          "match_position": [
            14,
            37
          ],
          "match_string": "\t\tvar etag = crypto.createHash('md5').update(src).digest('hex').slice(0, 6);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_nosqli_injection": {
      "files": [
        {
          "file_path": "/src/lib/session.js",
          "match_lines": [
            88,
            100
          ],
          "match_position": [
            3,
            15
          ],
          "match_string": "\t\tvar emailRegExp = new RegExp('^' + utils.escapeRegExp(lookup.email) + '$', 'i');\n\n\t\t// match email address and password\n\n\t\tUser.model.findOne({ email: emailRegExp }).exec(function(err, user) {\n\n\t\t\tif (user) {\n\n\t\t\t\tuser._.password.compare(lookup.password, function(err, isMatch) {\n\n\t\t\t\t\tif (!err && isMatch) {\n\n\t\t\t\t\t\tpostHookedSigninWithUser(user, req, res, onSuccess, onFail);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tonFail(err);\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t} else {\n\n\t\t\t\tonFail(err);"
        },
        {
          "file_path": "/src/admin/api/session/signin.js",
          "match_lines": [
            13,
            36
          ],
          "match_position": [
            2,
            48
          ],
          "match_string": "\tvar emailRegExp = new RegExp('^' + utils.escapeRegExp(req.body.email) + '$', 'i');\n\n\tUser.model.findOne({ email: emailRegExp }).exec(function (err, user) {\n\n\t\tif (user) {\n\n\t\t\tkeystone.callHook(user, 'pre:signin', function (err) {\n\n\t\t\t\tif (err) return res.json({ error: 'pre:signin error', detail: err });\n\n\t\t\t\tuser._.password.compare(req.body.password, function (err, isMatch) {\n\n\t\t\t\t\tif (isMatch) {\n\n\t\t\t\t\t\tsession.signinWithUser(user, req, res, function () {\n\n\t\t\t\t\t\t\tkeystone.callHook(user, 'post:signin', function (err) {\n\n\t\t\t\t\t\t\t\tif (err) return res.json({ error: 'post:signin error', detail: err });\n\n\t\t\t\t\t\t\t\tres.json({ success: true, user: user });\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else if (err) {\n\n\t\t\t\t\t\treturn res.status(500).json({ error: 'bcrypt error', detail: err });\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn res.json({ error: 'invalid details' });\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t} else if (err) {\n\n\t\t\treturn res.status(500).json({ error: 'database error', detail: err });\n\n\t\t} else {\n\n\t\t\treturn res.json({ error: 'invalid details' });"
        }
      ],
      "metadata": {
        "cwe": "CWE-943: Improper Neutralization of Special Elements in Data Query Logic",
        "description": "Untrusted user input in findOne() function can result in NoSQL Injection.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_sha1": {
      "files": [
        {
          "file_path": "/src/lib/security/csrf.js",
          "match_lines": [
            15,
            15
          ],
          "match_position": [
            16,
            40
          ],
          "match_string": "\treturn salt + crypto.createHash('sha1').update(salt + secret).digest('base64');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "SHA1 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/session.js",
          "match_lines": [
            211,
            211
          ],
          "match_position": [
            14,
            61
          ],
          "match_string": "\t\tvar from = new RegExp('^\\/keystone\\/?$', 'i').test(req.url) ? '' : '?from=' + req.url;"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {
    "pug_jade_template": {
      "files": [
        {
          "file_path": "/src/templates/layout/base.jade",
          "match_position": [
            4027,
            4040
          ],
          "match_string": "!{csrf_query}"
        },
        {
          "file_path": "/src/templates/layout/base.jade",
          "match_position": [
            4358,
            4381
          ],
          "match_string": "!{cloudinary_js_config}"
        },
        {
          "file_path": "/src/templates/views/home.jade",
          "match_position": [
            189,
            233
          ],
          "match_string": "!{JSON.stringify(_.map(lists, getListMeta))}"
        },
        {
          "file_path": "/src/templates/views/home.jade",
          "match_position": [
            146,
            168
          ],
          "match_string": "!{JSON.stringify(nav)}"
        },
        {
          "file_path": "/src/templates/views/home.jade",
          "match_position": [
            262,
            311
          ],
          "match_string": "!{JSON.stringify(orphanedLists.map(getListMeta))}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            460,
            493
          ],
          "match_string": "!{JSON.stringify(showCreateForm)}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            583,
            622
          ],
          "match_string": "!{JSON.stringify(createErrors || null)}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            681,
            708
          ],
          "match_string": "!{JSON.stringify(colPaths)}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            736,
            767
          ],
          "match_string": "!{ Number(list.perPage) || 50 }"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            275,
            311
          ],
          "match_string": "!{JSON.stringify(list.getOptions())}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            1007,
            1020
          ],
          "match_string": "!{csrf_query}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            345,
            380
          ],
          "match_string": "!{JSON.stringify(wysiwygOptions)} }"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            523,
            551
          ],
          "match_string": "!{JSON.stringify(submitted)}"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            788,
            833
          ],
          "match_string": "!{ JSON.stringify(_.omit(items, 'results')) }"
        },
        {
          "file_path": "/src/templates/views/list.jade",
          "match_position": [
            889,
            917
          ],
          "match_string": "!{ JSON.stringify(filters) }"
        },
        {
          "file_path": "/src/templates/views/item.jade",
          "match_position": [
            199,
            235
          ],
          "match_string": "!{JSON.stringify(list.getOptions())}"
        },
        {
          "file_path": "/src/templates/views/item.jade",
          "match_position": [
            327,
            337
          ],
          "match_string": "!{item.id}"
        },
        {
          "file_path": "/src/templates/views/item.jade",
          "match_position": [
            269,
            304
          ],
          "match_string": "!{JSON.stringify(wysiwygOptions)} }"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The Pug.js/Jade.js template has an unescaped variable. Untrusted user input passed to this variable results in Cross Site Scripting (XSS).",
        "id": "pug_jade_template",
        "input_case": "exact",
        "owasp": "A1: Injection",
        "pattern": "!{.+}",
        "severity": "ERROR",
        "type": "Regex"
      }
    }
  }
}
