[
 {
  "id": 1,
  "file": "/src/test/eval.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "\nconst eval = require(\"../index\");\n\ntap.test(\"eval a math expression\", async t => {\n  const expression = \"1 + 2\";\n  const result = eval(expression);\n  t.equal(result, 3);\n});\n\ntap.test(\"eval a function\", async t => {\n  const expression = `",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 2,
  "file": "/src/test/eval.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  const expression = `\n    (a, b) => {\n      return a + b\n    }\n  `;\n  const fn = eval(expression);\n  const result = fn(1, 2);\n  t.equal(result, 3);\n});\n\ntap.test(\"eval with context\", async t => {",
  "line": 17,
  "start": 12,
  "end": 23
 },
 {
  "id": 3,
  "file": "/src/test/eval.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  const context = {\n    a: 1,\n    b: 2\n  };\n  const expression = \"a + b + 3\";\n  const result = eval(expression, context);\n  t.equal(result, 6);\n});\n\ntap.test(\"eval in sandbox\", async t => {\n  const a = 1;",
  "line": 28,
  "start": 23,
  "end": 34
 },
 {
  "id": 4,
  "file": "/src/test/eval.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "});\n\ntap.test(\"eval in sandbox\", async t => {\n  const a = 1;\n  const expression = \"a + 2\";\n  t.throw(() => eval(expression));\n});\n",
  "line": 35,
  "start": 30,
  "end": 38
 }
]
