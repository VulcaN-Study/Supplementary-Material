/src/framework/src/org/apache/cordova/engine/SystemWebViewClient.java-331-            CordovaResourceApi resourceApi = parentEngine.resourceApi;
/src/framework/src/org/apache/cordova/engine/SystemWebViewClient.java:332:            Uri origUri = Uri.parse(url);
/src/framework/src/org/apache/cordova/engine/SystemWebViewClient.java-333-            // Allow plugins to intercept WebView requests.
##############################################
/src/framework/src/org/apache/cordova/Config.java-37-        parser = new ConfigXmlParser();
/src/framework/src/org/apache/cordova/Config.java:38:        parser.parse(action);
/src/framework/src/org/apache/cordova/Config.java-39-        //TODO: Add feature to bring this back.  Some preferences should be overridden by intents, but not all
##############################################
/src/framework/src/org/apache/cordova/Whitelist.java-157-
/src/framework/src/org/apache/cordova/Whitelist.java:158:        Uri parsedUri = Uri.parse(uri);
/src/framework/src/org/apache/cordova/Whitelist.java-159-        // Look for match in white list
##############################################
/src/framework/src/org/apache/cordova/CordovaResourceApi.java-153-            case URI_TYPE_CONTENT: {
/src/framework/src/org/apache/cordova/CordovaResourceApi.java:154:                Cursor cursor = contentResolver.query(uri, LOCAL_FILE_PROJECTION, null, null, null);
/src/framework/src/org/apache/cordova/CordovaResourceApi.java-155-                if (cursor != null) {
##############################################
/src/framework/src/org/apache/cordova/CordovaResourceApi.java-264-                    // Will occur if the file is compressed.
/src/framework/src/org/apache/cordova/CordovaResourceApi.java:265:                    inputStream = assetManager.open(assetPath);
/src/framework/src/org/apache/cordova/CordovaResourceApi.java-266-                }
##############################################
/src/framework/src/org/apache/cordova/CordovaActivity.java-157-        ConfigXmlParser parser = new ConfigXmlParser();
/src/framework/src/org/apache/cordova/CordovaActivity.java:158:        parser.parse(this);
/src/framework/src/org/apache/cordova/CordovaActivity.java-159-        preferences = parser.getPreferences();
##############################################
/src/framework/src/org/apache/cordova/CordovaWebViewImpl.java-229-            intent.addCategory(Intent.CATEGORY_BROWSABLE);
/src/framework/src/org/apache/cordova/CordovaWebViewImpl.java:230:            Uri uri = Uri.parse(url);
/src/framework/src/org/apache/cordova/CordovaWebViewImpl.java-231-            // Omitting the MIME type for file: URLs causes "No Activity found to handle Intent".
##############################################
/src/framework/src/org/apache/cordova/CordovaPlugin.java-337-    protected Uri fromPluginUri(Uri pluginUri) {
/src/framework/src/org/apache/cordova/CordovaPlugin.java:338:        return Uri.parse(pluginUri.getQueryParameter("origUri"));
/src/framework/src/org/apache/cordova/CordovaPlugin.java-339-    }
##############################################
/src/node_modules/elementtree/README.md-123-data = fs.readFileSync('document.xml').toString();
/src/node_modules/elementtree/README.md:124:etree = et.parse(data);
/src/node_modules/elementtree/README.md-125-
##############################################
/src/node_modules/elementtree/tests/test-simple.js-182-  var file = readFile('xml2.xml');
/src/node_modules/elementtree/tests/test-simple.js:183:  var etree2 = et.parse(file);
/src/node_modules/elementtree/tests/test-simple.js-184-  var xml3 = etree2.write({'indent': 4});
##############################################
/src/node_modules/elementtree/tests/test-simple.js-190-  var data = readFile('xml1.xml');
/src/node_modules/elementtree/tests/test-simple.js:191:  var etree = et.parse(data);
/src/node_modules/elementtree/tests/test-simple.js-192-
##############################################
/src/node_modules/elementtree/tests/test-simple.js-207-  var data = readFile('xml1.xml');
/src/node_modules/elementtree/tests/test-simple.js:208:  var etree = et.parse(data);
/src/node_modules/elementtree/tests/test-simple.js-209-
##############################################
/src/node_modules/elementtree/tests/test-simple.js-218-  var data = readFile('xml1.xml');
/src/node_modules/elementtree/tests/test-simple.js:219:  var etree = et.parse(data);
/src/node_modules/elementtree/tests/test-simple.js-220-
##############################################
/src/node_modules/elementtree/lib/elementtree.js-583-  var tree = new ElementTree();
/src/node_modules/elementtree/lib/elementtree.js:584:  tree.parse(source, parser);
/src/node_modules/elementtree/lib/elementtree.js-585-  return tree;
##############################################
/src/node_modules/elementtree/lib/elementtree.js-605-  var et = new ElementTree();
/src/node_modules/elementtree/lib/elementtree.js:606:  return et.parse(data);
/src/node_modules/elementtree/lib/elementtree.js-607-};
##############################################
/src/node_modules/xmldom/dom-parser.js-25-	if(source){
/src/node_modules/xmldom/dom-parser.js:26:		sax.parse(source,defaultNSMap,entityMap);
/src/node_modules/xmldom/dom-parser.js-27-	}else{
##############################################
/src/node_modules/sax/examples/hello-world.js:1:require("http").createServer(function (req, res) {
/src/node_modules/sax/examples/hello-world.js-2-  res.writeHead(200, {"content-type":"application/json"})
##############################################
/src/node_modules/sax/examples/get-products.js-10-
/src/node_modules/sax/examples/get-products.js:11:fs.readFile(xmlFile, function (er, d) {
/src/node_modules/sax/examples/get-products.js:12:  http.createServer(function (req, res) {
/src/node_modules/sax/examples/get-products.js-13-    if (er) throw er
##############################################
/src/node_modules/sax/examples/pretty-print.js-61-var xmlfile = require("path").join(process.cwd(), process.argv[2])
/src/node_modules/sax/examples/pretty-print.js:62:var fstr = fs.createReadStream(xmlfile, { encoding: "utf8" })
/src/node_modules/sax/examples/pretty-print.js-63-
##############################################
/src/node_modules/sax/README.md-81-    // same chunks coming in also go out.
/src/node_modules/sax/README.md:82:    fs.createReadStream("file.xml")
/src/node_modules/sax/README.md-83-      .pipe(saxStream)
/src/node_modules/sax/README.md:84:      .pipe(fs.createReadStream("file-copy.xml"))
/src/node_modules/sax/README.md-85-
##############################################
/src/node_modules/semver/semver.js-661-  this.loose = loose;
/src/node_modules/semver/semver.js:662:  this.parse(comp);
/src/node_modules/semver/semver.js-663-
##############################################
/src/node_modules/plist/README.md-33-// now use the `parse()` and `build()` functions
/src/node_modules/plist/README.md:34:var val = plist.parse('<plist><string>Hello World!</string></plist>');
/src/node_modules/plist/README.md-35-console.log(val);  // "Hello World!"
##############################################
/src/node_modules/plist/README.md-46-  // now use the `parse()` and `build()` functions
/src/node_modules/plist/README.md:47:  var val = plist.parse('<plist><string>Hello World!</string></plist>');
/src/node_modules/plist/README.md-48-  console.log(val);  // "Hello World!"
##############################################
/src/node_modules/plist/README.md-62-
/src/node_modules/plist/README.md:63:var obj = plist.parse(fs.readFileSync('myPlist.plist', 'utf8'));
/src/node_modules/plist/README.md-64-console.log(JSON.stringify(obj));
##############################################
/src/node_modules/plist/README.md-71-
/src/node_modules/plist/README.md:72:var obj = plist.parse('<plist><string>Hello World!</string></plist>');
/src/node_modules/plist/README.md-73-console.log(obj);  // Hello World!
##############################################
/src/node_modules/plist/lib/node.js-28-function parseFile (filename, fn) {
/src/node_modules/plist/lib/node.js:29:  fs.readFile(filename, { encoding: 'utf8' }, onread);
/src/node_modules/plist/lib/node.js-30-  function onread (err, inxml) {
##############################################
/src/node_modules/plist/dist/plist-parse.js-2095-	if(source){
/src/node_modules/plist/dist/plist-parse.js:2096:		sax.parse(source,defaultNSMap,entityMap);
/src/node_modules/plist/dist/plist-parse.js-2097-	}else{
##############################################
/src/node_modules/plist/dist/plist.js-171-function parseFile (filename, fn) {
/src/node_modules/plist/dist/plist.js:172:  fs.readFile(filename, { encoding: 'utf8' }, onread);
/src/node_modules/plist/dist/plist.js-173-  function onread (err, inxml) {
##############################################
/src/node_modules/plist/dist/plist.js-6027-	if(source){
/src/node_modules/plist/dist/plist.js:6028:		sax.parse(source,defaultNSMap,entityMap);
/src/node_modules/plist/dist/plist.js-6029-	}else{
##############################################
/src/node_modules/nopt/lib/nopt.js-76-               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {
/src/node_modules/nopt/lib/nopt.js:77:          val = JSON.parse(val)
/src/node_modules/nopt/lib/nopt.js-78-          debug("jsonable %j", val)
##############################################
/src/node_modules/nopt/lib/nopt.js-81-          val = +val
/src/node_modules/nopt/lib/nopt.js:82:        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {
/src/node_modules/nopt/lib/nopt.js-83-          debug("convert to date", val)
##############################################
/src/node_modules/nopt/lib/nopt.js-146-function validateDate (data, k, val) {
/src/node_modules/nopt/lib/nopt.js:147:  debug("validate Date %j %j %j", k, val, Date.parse(val))
/src/node_modules/nopt/lib/nopt.js:148:  var s = Date.parse(val)
/src/node_modules/nopt/lib/nopt.js-149-  if (isNaN(s)) return false
##############################################
/src/node_modules/nopt/lib/nopt.js-163-function validateUrl (data, k, val) {
/src/node_modules/nopt/lib/nopt.js:164:  val = url.parse(String(val))
/src/node_modules/nopt/lib/nopt.js-165-  if (!val.host) return false
##############################################
/src/node_modules/nopt/lib/nopt.js-303-        if (la === "true" || la === "false") {
/src/node_modules/nopt/lib/nopt.js:304:          val = JSON.parse(la)
/src/node_modules/nopt/lib/nopt.js-305-          la = null
##############################################
/src/node_modules/minimatch/minimatch.js-469-            // not a valid class!
/src/node_modules/minimatch/minimatch.js:470:            var sp = this.parse(cs, SUBPARSE)
/src/node_modules/minimatch/minimatch.js-471-            re = re.substr(0, reClassStart) + '\\[' + sp[0] + '\\]'
##############################################
/src/node_modules/minimatch/minimatch.js-508-    cs = pattern.substr(classStart + 1)
/src/node_modules/minimatch/minimatch.js:509:    sp = this.parse(cs, SUBPARSE)
/src/node_modules/minimatch/minimatch.js-510-    re = re.substr(0, reClassStart) + '\\[' + sp[0]
##############################################
/src/node_modules/cordova-common/src/ConfigChanges/ConfigFile.js-83-                modules.bplist.parseBuffer(fs.readFileSync(filepath)) :
/src/node_modules/cordova-common/src/ConfigChanges/ConfigFile.js:84:                modules.plist.parse(fs.readFileSync(filepath, 'utf8'));
/src/node_modules/cordova-common/src/ConfigChanges/ConfigFile.js-85-    }
##############################################
/src/node_modules/cordova-common/src/PlatformJson.js-34-    if (fs.existsSync(filePath)) {
/src/node_modules/cordova-common/src/PlatformJson.js:35:        root = JSON.parse(fs.readFileSync(filePath, 'utf-8'));
/src/node_modules/cordova-common/src/PlatformJson.js-36-    }
##############################################
/src/node_modules/cordova-common/src/util/plist-helpers.js-26-function graftPLIST(doc, xml, selector) {
/src/node_modules/cordova-common/src/util/plist-helpers.js:27:    var obj = plist.parse('<plist>'+xml+'</plist>');
/src/node_modules/cordova-common/src/util/plist-helpers.js-28-
##############################################
/src/node_modules/cordova-common/src/util/plist-helpers.js-53-function prunePLIST(doc, xml, selector) {
/src/node_modules/cordova-common/src/util/plist-helpers.js:54:    var obj = plist.parse('<plist>'+xml+'</plist>');
/src/node_modules/cordova-common/src/util/plist-helpers.js-55-
##############################################
/src/node_modules/bplist-parser/bplistParser.js-11-
/src/node_modules/bplist-parser/bplistParser.js:12:// EPOCH = new SimpleDateFormat("yyyy MM dd zzz").parse("2001 01 01 GMT").getTime();
/src/node_modules/bplist-parser/bplistParser.js-13-// ...but that's annoying in a static initializer because it can throw exceptions, ick.
##############################################
/src/node_modules/bplist-parser/bplistParser.js-36-  } else {
/src/node_modules/bplist-parser/bplistParser.js:37:    fs.readFile(fileNameOrBuffer, function (err, data) {
/src/node_modules/bplist-parser/bplistParser.js-38-      if (err) { return callback(err); }
##############################################
/src/node_modules/properties-parser/index.js-321-
/src/node_modules/properties-parser/index.js:322:		fs.writeFile(newPath, this.toString(), callback || function() {});
/src/node_modules/properties-parser/index.js-323-	};
##############################################
/src/node_modules/properties-parser/index.js-329-
/src/node_modules/properties-parser/index.js:330:	return fs.readFile(path, function(err, text) {
/src/node_modules/properties-parser/index.js-331-		if(err) { return callback(err, null); }
##############################################
/src/node_modules/properties-parser/index.js-346-
/src/node_modules/properties-parser/index.js:347:	return fs.readFile(path, function(err, data) {
/src/node_modules/properties-parser/index.js-348-		if(err) { return callback(err, null); }
##############################################
/src/node_modules/q/README.md-521-var deferred = Q.defer();
/src/node_modules/q/README.md:522:FS.readFile("foo.txt", "utf-8", function (error, text) {
/src/node_modules/q/README.md-523-    if (error) {
##############################################
/src/node_modules/q/README.md-582-
/src/node_modules/q/README.md:583:    request.open("GET", url, true);
/src/node_modules/q/README.md-584-    request.onload = onload;
##############################################
/src/node_modules/q/README.md-636-
/src/node_modules/q/README.md:637:        request.open("GET", url, true);
/src/node_modules/q/README.md-638-        request.onload = onload;
##############################################
/src/node_modules/q/README.md-804-var deferred = Q.defer();
/src/node_modules/q/README.md:805:FS.readFile("foo.txt", "utf-8", deferred.makeNodeResolver());
/src/node_modules/q/README.md-806-return deferred.promise;
##############################################
/src/cordova-js-src/exec.js-214-    } else {
/src/cordova-js-src/exec.js:215:        payload.push(JSON.parse(message));
/src/cordova-js-src/exec.js-216-    }
##############################################
/src/cordova-js-src/exec.js-223-        // This is deprecated on the .java side. It doesn't work with CSP enabled.
/src/cordova-js-src/exec.js:224:        eval(message.slice(1));
/src/cordova-js-src/exec.js-225-    } else if (firstChar == 'S' || firstChar == 'F') {
##############################################
/src/bin/templates/project/build.gradle-281-    if (!storeFile.isAbsolute()) {
/src/bin/templates/project/build.gradle:282:        storeFile = RelativePath.parse(true, storeFile.toString()).getFile(propsFile.getParentFile())
/src/bin/templates/project/build.gradle-283-    }
##############################################
/src/bin/templates/project/assets/www/cordova.js-1060-    } else {
/src/bin/templates/project/assets/www/cordova.js:1061:        payload.push(JSON.parse(message));
/src/bin/templates/project/assets/www/cordova.js-1062-    }
##############################################
/src/bin/templates/project/assets/www/cordova.js-1069-        // This is deprecated on the .java side. It doesn't work with CSP enabled.
/src/bin/templates/project/assets/www/cordova.js:1070:        eval(message.slice(1));
/src/bin/templates/project/assets/www/cordova.js-1071-    } else if (firstChar == 'S' || firstChar == 'F') {
##############################################
/src/bin/templates/cordova/lib/build.js-92-        var buildjson = fs.readFileSync(buildConfig, 'utf8');
/src/bin/templates/cordova/lib/build.js:93:        var config = JSON.parse(buildjson.replace(/^\ufeff/, '')); // Remove BOM
/src/bin/templates/cordova/lib/build.js-94-        if (config.android && config.android[ret.buildType]) {
##############################################
/src/test/src/org/apache/cordova/test/CordovaWebViewTestActivity.java-61-        ConfigXmlParser parser = new ConfigXmlParser();
/src/test/src/org/apache/cordova/test/CordovaWebViewTestActivity.java:62:        parser.parse(this);
/src/test/src/org/apache/cordova/test/CordovaWebViewTestActivity.java-63-
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-60-                    return cordovaWebView.getResourceApi().remapUri(
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:61:                            Uri.parse("data:text/plain;charset=utf-8,pass"));
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-62-                }
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-89-                imageBitmap, "app-icon", "desc");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:90:        return Uri.parse(stored);
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-91-    }
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-135-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:136:            Uri contentUri = Uri.parse("content://media/external/images/media/999999999");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-137-            performApiTest(contentUri, null, null, false, false);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-140-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:141:            Uri assetUri = Uri.parse("file:///android_asset/www/index.html?foo#bar"); // Also check for stripping off ? and # correctly.
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-142-            performApiTest(assetUri, "text/html", null, true, false);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-145-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:146:            Uri assetUri = Uri.parse("file:///android_asset/www/missing.html");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-147-            performApiTest(assetUri, "text/html", null, false, false);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-152-            try {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:153:                Uri fileUri = Uri.parse(f.toURI().toString() + "?foo#bar"); // Also check for stripping off ? and # correctly.
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-154-                performApiTest(fileUri, "text/plain", f, true, true);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-161-            File f = new File(Environment.getExternalStorageDirectory() + "/somefilethatdoesntexist");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:162:            Uri fileUri = Uri.parse(f.toURI().toString());
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-163-            try {
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-171-            File f = new File(Environment.getExternalStorageDirectory() + "/somedirthatismissing" + System.currentTimeMillis() + "/somefilethatdoesntexist");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:172:            Uri fileUri = Uri.parse(f.toURI().toString());
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-173-            performApiTest(fileUri, null, f, false, true);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-176-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:177:            Uri uri = Uri.parse("somescheme://foo");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-178-            performApiTest(uri, null, null, false, false);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-182-            try {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:183:                resourceApi.openForRead(Uri.parse("/foo"));
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-184-                fail("Should have thrown for relative URI 1.");
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-187-            try {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:188:                resourceApi.openForRead(Uri.parse("//foo/bar"));
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-189-                fail("Should have thrown for relative URI 2.");
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-192-            try {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:193:                resourceApi.openForRead(Uri.parse("foo.png"));
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-194-                fail("Should have thrown for relative URI 3.");
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-199-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:200:            Uri uri = Uri.parse("plugin-uri://foohost/android_asset/www/index.html?pluginRewrite=yes");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-201-            performApiTest(uri, "text/plain", null, true, false);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-204-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:205:            Uri assetUri = Uri.parse("file:///android_asset/www/index.html");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-206-            resourceApi.setThreadCheckingEnabled(true);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-214-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:215:            Uri uri = Uri.parse("data:text/plain;charset=utf-8,pa%20ss");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-216-            OpenForReadResult readResult = resourceApi.openForRead(uri);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-222-        {
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:223:            Uri uri = Uri.parse("data:text/js;charset=utf-8;base64,cGFzcw==");
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-224-            OpenForReadResult readResult = resourceApi.openForRead(uri);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-231-            String origUri = "http://orig/foo?pluginUri";
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:232:            Uri uri = resourceApi.remapUri(Uri.parse(origUri));
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-233-            OpenForReadResult readResult = resourceApi.openForRead(uri);
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-247-                "var x = new XMLHttpRequest;\n" +
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:248:                        "x.open('GET', 'file:///foo?pluginRewrite=1', false);\n" +
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-249-                        "x.send();\n" +
##############################################
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-267-            "var x = new XMLHttpRequest;\n" +
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java:268:            "x.open('GET', 'http://foo/bar', false);\n" + 
/src/test/androidTest/src/org/apache/cordova/test/CordovaResourceApiTest.java-269-            "x.send();\n" + 
##############################################
/src/test/assets/www/xhr/index.html-43-          console.log("GET "+url);
/src/test/assets/www/xhr/index.html:44:          xmlhttp.open("GET", url , true);
/src/test/assets/www/xhr/index.html-45-          xmlhttp.send();
