/src/app.js-5-
/src/app.js:6:http.createServer(controller).listen(port);
/src/app.js-7-console.log("Server has started, on port:" + port);
##############################################
/src/static/form/fileUploadWithProgress.html-52-		xhr.addEventListener("abort", uploadCanceled, false);
/src/static/form/fileUploadWithProgress.html:53:		xhr.open("POST", "fileUpload!upload");
/src/static/form/fileUploadWithProgress.html-54-		xhr.send(fd);
##############################################
/src/static/start/index.js-14-			data: {name: 'hjf', age: 32},
/src/static/start/index.js:15:			dataType: 'json', //返回的字符串按json解析，JSON.parse()
/src/static/start/index.js-16-			success: function (result){
##############################################
/src/static/start/jquery-1.8.1.js-513-		if ( window.JSON && window.JSON.parse ) {
/src/static/start/jquery-1.8.1.js:514:			return window.JSON.parse( data );
/src/static/start/jquery-1.8.1.js-515-		}
##############################################
/src/static/start/jquery-1.8.1.js-8244-					if ( s.username ) {
/src/static/start/jquery-1.8.1.js:8245:						xhr.open( s.type, s.url, s.async, s.username, s.password );
/src/static/start/jquery-1.8.1.js-8246-					} else {
/src/static/start/jquery-1.8.1.js:8247:						xhr.open( s.type, s.url, s.async );
/src/static/start/jquery-1.8.1.js-8248-					}
##############################################
/src/action/register.js-17-	var mysql = require('mysql');
/src/action/register.js:18:	var connection = mysql.createConnection({
/src/action/register.js-19-		host: '127.0.0.1',
##############################################
/src/action/register.js-25-
/src/action/register.js:26:	connection.query('SELECT 1 + 1 AS solution', function(err, rows, fields) {
/src/action/register.js-27-		if (err){ 
##############################################
/src/controller.js-17-			//采用formidable
/src/controller.js:18:			var form = new formidable.IncomingForm();
/src/controller.js-19-			//sets encoding for incoming form fields
##############################################
/src/controller.js-29-			form.hash = 'md5';
/src/controller.js:30:			form.parse(request, function(err, fields, files){
/src/controller.js-31-				//?bug 如果客户端参数有name重复的，fields中会覆盖
##############################################
/src/controller.js-65-				var newPath = config.uploadDir + file.name;
/src/controller.js:66:				fs.rename(file.path, newPath, function(err){
/src/controller.js-67-					if(err){
##############################################
/src/controller.js-96-		case 'GET':
/src/controller.js:97:			var parsedUrl = url.parse(request.url);
/src/controller.js:98:			query = querystring.parse(parsedUrl.query); 
/src/controller.js-99-			proxy(request, response, query);
##############################################
/src/controller.js-110-function proxy(request, response, query){
/src/controller.js:111:	var pathname = url.parse(request.url).pathname;
/src/controller.js-112-	console.log('####the path name is:' + pathname);
##############################################
/src/lib/util/util4HTML.js-6-exports.getHTMLBinary = function (path, callback){
/src/lib/util/util4HTML.js:7:	fs.readFile(path, 'binary', callback);
/src/lib/util/util4HTML.js-8-};
##############################################
/src/controller_v0.1.js-30-					// console.log('@@@进入了application/x-www-form-urlencoded的处理');
/src/controller_v0.1.js:31:					query = querystring.parse(dataBuffer.toString());
/src/controller_v0.1.js-32-				}
##############################################
/src/controller_v0.1.js-35-			//采用formidable
/src/controller_v0.1.js:36:			var form = new formidable.IncomingForm();
/src/controller_v0.1.js-37-			//sets encoding for incoming form fields
##############################################
/src/controller_v0.1.js-45-			form.hash = 'md5';
/src/controller_v0.1.js:46:			form.parse(request, function(err, fields, files){
/src/controller_v0.1.js-47-				//?bug 如果客户端参数有name重复的，fields中会覆盖
##############################################
/src/controller_v0.1.js-81-				var newPath = 'e:\\nodejs-tmp\\' + file.name;
/src/controller_v0.1.js:82:				fs.rename(file.path, newPath, function(err){
/src/controller_v0.1.js-83-					if(err){
##############################################
/src/controller_v0.1.js-111-		case 'GET':
/src/controller_v0.1.js:112:			var parsedUrl = url.parse(request.url);
/src/controller_v0.1.js:113:			query = querystring.parse(parsedUrl.query); 
/src/controller_v0.1.js-114-			proxy(request, response, query);
##############################################
/src/controller_v0.1.js-125-function proxy(request, response, query){
/src/controller_v0.1.js:126:	var pathname = url.parse(request.url).pathname;
/src/controller_v0.1.js-127-	console.log('####the path name is:' + pathname);
##############################################
/src/controller_v0.1.js-238-					file.data = new Buffer(matchedStrArray[4]); //不能逆向转换：Buffer -utf8-> String; String --utf8--> Buffer 
/src/controller_v0.1.js:239:					fs.writeFile(file.name, file.data, function (error){
/src/controller_v0.1.js-240-						if(error){
##############################################
/src/controller_v0.1.js-279-		console.log(tmp.toString());
/src/controller_v0.1.js:280:		fs.appendFile('bufferData1.txt', tmp, function(err){
/src/controller_v0.1.js-281-			if(err){
