/src/README.md-14-
/src/README.md:15:    var documents = YAML.parse('Hello world!');
/src/README.md-16-    var data = YAML.stringify({ fancy: ['object', 'structure'] });
##############################################
/src/README.md-19-
/src/README.md:20:    YAML.readFile('myfile.yml', function(error, documents) {
/src/README.md-21-      /* ... */
##############################################
/src/README.md-25-    var doc2 = { another: 'doc' };
/src/README.md:26:    YAML.writeFile('myfile.yml', doc1, doc2, function(error) {
/src/README.md-27-      /* ... */
##############################################
/src/testutil.js-47-  var data = YAML.stringify.apply(null, input),
/src/testutil.js:48:      output = YAML.parse(data);
/src/testutil.js-49-  t.ok(
##############################################
/src/tests/badinput.js-18-
/src/tests/badinput.js:19:  YAML.readFile(testutil.inputPath('badinput'), function(err) {
/src/tests/badinput.js-20-    t.equal(err.message,
##############################################
/src/tests/api.js-16-  pos = 0;
/src/tests/api.js:17:  YAML.stream.parse('foo', handler);
/src/tests/api.js-18-
/src/tests/api.js-19-  pos = 0;
/src/tests/api.js:20:  YAML.stream.parse('foo', {
/src/tests/api.js-21-    onStreamStart: handler,
##############################################
/src/tests/api.js-64-
/src/tests/api.js:65:  var result = YAML.parse(input);
/src/tests/api.js-66-  t.ok(_.isEqual(result, expected), 'should be equal', {
##############################################
/src/tests/api.js-106-
/src/tests/api.js:107:  YAML.writeFile(file, input, function(error) {
/src/tests/api.js:108:    YAML.readFile(file, function(error, result) {
/src/tests/api.js-109-      fs.unlinkSync(file);
##############################################
/src/tests/api.js-124-
/src/tests/api.js:125:  YAML.writeFile(file, input, function(error) {
/src/tests/api.js-126-    var result = require(file);
##############################################
/src/index.js-19-//
/src/index.js:20://     var output = yaml.stream.parse(input, handler);
/src/index.js-21-//
##############################################
/src/index.js-37-
/src/index.js:38:  binding.parse(input, handler);
/src/index.js-39-};
##############################################
/src/index.js-253-  var documents = [];
/src/index.js:254:  YAML.stream.parse(input, parserHandler = {
/src/index.js-255-    onDocumentEnd: null,
##############################################
/src/index.js-318-
/src/index.js:319:  fs.readFile(filename, 'utf-8', function(err, data) {
/src/index.js-320-    if (err) {
##############################################
/src/index.js-326-    try {
/src/index.js:327:      documents = YAML.parse(data, tagHandlers);
/src/index.js-328-    }
##############################################
/src/index.js-340-  var data = fs.readFileSync(filename, 'utf-8');
/src/index.js:341:  return YAML.parse(data, tagHandlers);
/src/index.js-342-};
##############################################
/src/index.js-438-
/src/index.js:439:  fs.writeFile(filename, data, callback);
/src/index.js-440-};
