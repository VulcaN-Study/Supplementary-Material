/src/man/man7/npm-scripts.7-206-.nf
/src/man/man7/npm-scripts.7:207:http\.createServer(\.\.\.)\.listen(process\.env\.npm_package_config_port)
/src/man/man7/npm-scripts.7-208-.
##############################################
/src/man/man7/npm-config.7-178-.nf
/src/man/man7/npm-config.7:179:http\.createServer(\.\.\.)\.listen(process\.env\.npm_package_config_port)
/src/man/man7/npm-config.7-180-.
##############################################
/src/node_modules/sha/README.md-35-```js
/src/node_modules/sha/README.md:36:fs.createReadStream('src')
/src/node_modules/sha/README.md-37-  .pipe(sha.stream('expected'))
##############################################
/src/node_modules/sha/index.js-70-  var hash = crypto.createHash(algorithm)
/src/node_modules/sha/index.js:71:  var source = fs.createReadStream(file)
/src/node_modules/sha/index.js-72-  var errState = null
##############################################
/src/node_modules/npm-install-checks/index.js-113-  var er = new Error("Unresolvable cycle detected")
/src/node_modules/npm-install-checks/index.js:114:  var tree = [target._id, JSON.parse(JSON.stringify(ancestors))]
/src/node_modules/npm-install-checks/index.js-115-    , t = Object.getPrototypeOf(ancestors)
##############################################
/src/node_modules/npm-install-checks/index.js-117-    if (t === p) t.THIS_IS_P = true
/src/node_modules/npm-install-checks/index.js:118:    tree.push(JSON.parse(JSON.stringify(t)))
/src/node_modules/npm-install-checks/index.js-119-    t = Object.getPrototypeOf(t)
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-342-        # Don't leave turds behind.
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py:343:        os.unlink(self.tmp_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-344-        raise
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-364-          # one.
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py:365:          os.unlink(self.tmp_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-366-        else:
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-384-            os.remove(filename)
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py:385:          os.rename(self.tmp_path, filename)
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-386-      except Exception:
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-387-        # Don't leave turds behind.
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py:388:        os.unlink(self.tmp_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/common.py-389-        raise
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py-213-    # Rely on exception handling to report errors.
/src/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py:214:    fd = os.open(lockfile, os.O_RDONLY|os.O_NOCTTY|os.O_CREAT, 0o666)
/src/node_modules/node-gyp/gyp/pylib/gyp/mac_tool.py-215-    fcntl.flock(fd, fcntl.LOCK_EX)
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-456-        # one.
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py:457:        os.unlink(new_pbxproj_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-458-      else:
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-472-        os.chmod(new_pbxproj_path, 0666 & ~umask)
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py:473:        os.rename(new_pbxproj_path, pbxproj_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-474-
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-477-      # creating the xcodeproj directory, get rid of that too.
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py:478:      os.unlink(new_pbxproj_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/xcode.py-479-      if self.created_dir:
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/msvs.py-2014-    # We don't need this filter anymore.  Delete the old filter file.
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/msvs.py:2015:    os.unlink(filters_path)
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/msvs.py-2016-
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py-92-      else:
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py:93:        os.unlink(dest)
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py-94-    if os.path.isdir(source):
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py-178-      if our_data != assert_data:
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py:179:        os.unlink(out)
/src/node_modules/node-gyp/gyp/pylib/gyp/win_tool.py-180-        def dump(filename):
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-160-
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:161:  ast = compiler.parse(file_contents)
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-162-  assert isinstance(ast, Module)
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-864-          # <!(python modulename param eters). Do this in |build_file_dir|.
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:865:          oldwd = os.getcwd()  # Python doesn't like os.open('.'): no fchdir.
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-866-          if build_file_dir:  # build_file_dir may be None (see above).
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/flock_tool.py-41-    # hack instead.
/src/node_modules/node-gyp/gyp/pylib/gyp/flock_tool.py:42:    fd = os.open(lockfile, os.O_WRONLY|os.O_NOCTTY|os.O_CREAT, 0666)
/src/node_modules/node-gyp/gyp/pylib/gyp/flock_tool.py-43-    op = struct.pack('hhllhhl', fcntl.F_WRLCK, 0, 0, 0, 0, 0, 0)
##############################################
/src/node_modules/node-gyp/lib/configure.js-141-      try {
/src/node_modules/node-gyp/lib/configure.js:142:        version = semver.parse(versionStr)
/src/node_modules/node-gyp/lib/configure.js-143-      } catch (e) {
##############################################
/src/node_modules/node-gyp/lib/configure.js-240-    configs.push(configPath)
/src/node_modules/node-gyp/lib/configure.js:241:    fs.writeFile(configPath, [prefix, json, ''].join('\n'), findConfigs)
/src/node_modules/node-gyp/lib/configure.js-242-  }
##############################################
/src/node_modules/node-gyp/lib/build.js-40-  function loadConfigGypi () {
/src/node_modules/node-gyp/lib/build.js:41:    fs.readFile(configPath, 'utf8', function (err, data) {
/src/node_modules/node-gyp/lib/build.js-42-      if (err) {
##############################################
/src/node_modules/node-gyp/lib/build.js-49-      }
/src/node_modules/node-gyp/lib/build.js:50:      config = JSON.parse(data.replace(/\#.+\n/, ''))
/src/node_modules/node-gyp/lib/build.js-51-
##############################################
/src/node_modules/node-gyp/lib/build.js-189-      log.verbose('"' + buildType + '" dir needed to be created?', isNew)
/src/node_modules/node-gyp/lib/build.js:190:      var rs = fs.createReadStream(archNodeLibPath)
/src/node_modules/node-gyp/lib/build.js-191-        , ws = fs.createWriteStream(buildNodeLibPath)
##############################################
/src/node_modules/node-gyp/lib/install.js-49-  // parse the version to normalize and ensure it's valid
/src/node_modules/node-gyp/lib/install.js:50:  var version = semver.parse(versionStr)
/src/node_modules/node-gyp/lib/install.js-51-  if (!version) {
##############################################
/src/node_modules/node-gyp/lib/install.js-95-      var installVersionFile = path.resolve(devDir, 'installVersion')
/src/node_modules/node-gyp/lib/install.js:96:      fs.readFile(installVersionFile, 'ascii', function (err, ver) {
/src/node_modules/node-gyp/lib/install.js-97-        if (err && err.code != 'ENOENT') {
##############################################
/src/node_modules/node-gyp/lib/install.js-219-      if (tarPath) {
/src/node_modules/node-gyp/lib/install.js:220:        var input = fs.createReadStream(tarballUrl)
/src/node_modules/node-gyp/lib/install.js-221-        input.pipe(gunzip).pipe(extracter)
##############################################
/src/node_modules/node-gyp/lib/install.js-274-        var installVersionPath = path.resolve(devDir, 'installVersion')
/src/node_modules/node-gyp/lib/install.js:275:        fs.writeFile(installVersionPath, gyp.package.installVersion + '\n', deref)
/src/node_modules/node-gyp/lib/install.js-276-
##############################################
/src/node_modules/node-gyp/lib/remove.js-29-  // parse the version to normalize and make sure it's valid
/src/node_modules/node-gyp/lib/remove.js:30:  var version = semver.parse(v)
/src/node_modules/node-gyp/lib/remove.js-31-
##############################################
/src/node_modules/ini/README.md-28-
/src/node_modules/ini/README.md:29:    var config = ini.parse(fs.readFileSync('./config.ini', 'utf-8'))
/src/node_modules/ini/README.md-30-
##############################################
/src/node_modules/ini/ini.js-76-      case 'false':
/src/node_modules/ini/ini.js:77:      case 'null': value = JSON.parse(value)
/src/node_modules/ini/ini.js-78-    }
##############################################
/src/node_modules/ini/ini.js-147-    }
/src/node_modules/ini/ini.js:148:    try { val = JSON.parse(val) } catch (_) {}
/src/node_modules/ini/ini.js-149-  } else {
##############################################
/src/node_modules/ini/test/bar.js-18-    console.log(s, data[k])
/src/node_modules/ini/test/bar.js:19:    t.deepEqual(ini.parse(s), data[k])
/src/node_modules/ini/test/bar.js-20-  }
##############################################
/src/node_modules/read/test/defaults.js-39-  child.on(CLOSE, function () {
/src/node_modules/read/test/defaults.js:40:    result = JSON.parse(result)
/src/node_modules/read/test/defaults.js-41-    t.same(result, {"user":"test-user","pass":"test-pass","verify":"test-pass","passMatch":true})
##############################################
/src/node_modules/read/test/basic.js-39-  child.on(CLOSE, function () {
/src/node_modules/read/test/basic.js:40:    result = JSON.parse(result)
/src/node_modules/read/test/basic.js-41-    t.same(result, {"user":"a user","pass":"a password","verify":"a password","passMatch":true})
##############################################
/src/node_modules/fstream-npm/node_modules/fstream-ignore/ignore.js-127-  var ig = path.resolve(this.path, e)
/src/node_modules/fstream-npm/node_modules/fstream-ignore/ignore.js:128:  fs.readFile(ig, function (er, data) {
/src/node_modules/fstream-npm/node_modules/fstream-ignore/ignore.js-129-    if (er) return cb(er)
##############################################
/src/node_modules/fstream-npm/node_modules/fstream-ignore/test/00-setup.js-58-          t.test("writeFile "+file, function (t) {
/src/node_modules/fstream-npm/node_modules/fstream-ignore/test/00-setup.js:59:            fs.writeFile(file, path.basename(file), function (er) {
/src/node_modules/fstream-npm/node_modules/fstream-ignore/test/00-setup.js-60-              t.ifError(er, "writing "+file)
##############################################
/src/node_modules/fstream-npm/fstream-npm.js-188-  try {
/src/node_modules/fstream-npm/fstream-npm.js:189:    var p = this.package = JSON.parse(buf)
/src/node_modules/fstream-npm/fstream-npm.js-190-  } catch (er) {
##############################################
/src/node_modules/cmd-shim/index.js-33-function rm (path, cb) {
/src/node_modules/cmd-shim/index.js:34:  fs.unlink(path, function(er) {
/src/node_modules/cmd-shim/index.js-35-    cb()
##############################################
/src/node_modules/cmd-shim/index.js-65-      return cb(er)
/src/node_modules/cmd-shim/index.js:66:    fs.readFile(from, "utf8", function (er, data) {
/src/node_modules/cmd-shim/index.js-67-      if (er) return writeShim_(from, to, null, null, cb)
##############################################
/src/node_modules/cmd-shim/index.js-156-  var then = times(2, next, cb)
/src/node_modules/cmd-shim/index.js:157:  fs.writeFile(to + ".cmd", cmd, "utf8", then)
/src/node_modules/cmd-shim/index.js:158:  fs.writeFile(to, sh, "utf8", then)
/src/node_modules/cmd-shim/index.js-159-  function next () {
##############################################
/src/node_modules/cmd-shim/test/00-setup.js-23-      t.test('write ' + f, function (t) {
/src/node_modules/cmd-shim/test/00-setup.js:24:        fs.writeFile(path.resolve(fixtures, f), froms[f], function (er) {
/src/node_modules/cmd-shim/test/00-setup.js-25-          if (er)
##############################################
/src/node_modules/block-stream/README.md-9-var block = new BlockStream(512)
/src/node_modules/block-stream/README.md:10:fs.createReadStream("some-file").pipe(block)
/src/node_modules/block-stream/README.md-11-block.pipe(fs.createWriteStream("block-file"))
##############################################
/src/node_modules/block-stream/package.json-27-  "license": "BSD",
/src/node_modules/block-stream/package.json:28:  "readme": "# block-stream\n\nA stream of blocks.\n\nWrite data into it, and it'll output data in buffer blocks the size you\nspecify, padding with zeroes if necessary.\n\n```javascript\nvar block = new BlockStream(512)\nfs.createReadStream(\"some-file\").pipe(block)\nblock.pipe(fs.createWriteStream(\"block-file\"))\n```\n\nWhen `.end()` or `.flush()` is called, it'll pad the block with zeroes.\n",
/src/node_modules/block-stream/package.json-29-  "readmeFilename": "README.md",
##############################################
/src/node_modules/block-stream/test/basic.js-6-  var fs = require("fs")
/src/node_modules/block-stream/test/basic.js:7:  var fstr = fs.createReadStream(__filename, {encoding: "utf8"})
/src/node_modules/block-stream/test/basic.js-8-  fstr.pipe(b)
##############################################
/src/node_modules/semver/semver.browser.js-533-  this.loose = loose;
/src/node_modules/semver/semver.browser.js:534:  this.parse(comp);
/src/node_modules/semver/semver.browser.js-535-
##############################################
/src/node_modules/semver/semver.min.js:1:(function(e){if(typeof module==="object"&&module.exports===e)e=module.exports=H;e.SEMVER_SPEC_VERSION="2.0.0";var r=e.re=[];var t=e.src=[];var n=0;var i=n++;t[i]="0|[1-9]\\d*";var s=n++;t[s]="[0-9]+";var a=n++;t[a]="\\d*[a-zA-Z-][a-zA-Z0-9-]*";var o=n++;t[o]="("+t[i]+")\\."+"("+t[i]+")\\."+"("+t[i]+")";var f=n++;t[f]="("+t[s]+")\\."+"("+t[s]+")\\."+"("+t[s]+")";var u=n++;t[u]="(?:"+t[i]+"|"+t[a]+")";var c=n++;t[c]="(?:"+t[s]+"|"+t[a]+")";var l=n++;t[l]="(?:-("+t[u]+"(?:\\."+t[u]+")*))";var p=n++;t[p]="(?:-?("+t[c]+"(?:\\."+t[c]+")*))";var h=n++;t[h]="[0-9A-Za-z-]+";var v=n++;t[v]="(?:\\+("+t[h]+"(?:\\."+t[h]+")*))";var m=n++;var g="v?"+t[o]+t[l]+"?"+t[v]+"?";t[m]="^"+g+"$";var w="[v=\\s]*"+t[f]+t[p]+"?"+t[v]+"?";var d=n++;t[d]="^"+w+"$";var y=n++;t[y]="((?:<|>)?=?)";var b=n++;t[b]=t[s]+"|x|X|\\*";var $=n++;t[$]=t[i]+"|x|X|\\*";var j=n++;t[j]="[v=\\s]*("+t[$]+")"+"(?:\\.("+t[$]+")"+"(?:\\.("+t[$]+")"+"(?:("+t[l]+")"+")?)?)?";var k=n++;t[k]="[v=\\s]*("+t[b]+")"+"(?:\\.("+t[b]+")"+"(?:\\.("+t[b]+")"+"(?:("+t[p]+")"+")?)?)?";var E=n++;t[E]="^"+t[y]+"\\s*"+t[j]+"$";var x=n++;t[x]="^"+t[y]+"\\s*"+t[k]+"$";var R=n++;t[R]="(?:~>?)";var S=n++;t[S]="(\\s*)"+t[R]+"\\s+";r[S]=new RegExp(t[S],"g");var V="$1~";var I=n++;t[I]="^"+t[R]+t[j]+"$";var T=n++;t[T]="^"+t[R]+t[k]+"$";var A=n++;t[A]="(?:\\^)";var C=n++;t[C]="(\\s*)"+t[A]+"\\s+";r[C]=new RegExp(t[C],"g");var M="$1^";var z=n++;t[z]="^"+t[A]+t[j]+"$";var P=n++;t[P]="^"+t[A]+t[k]+"$";var Z=n++;t[Z]="^"+t[y]+"\\s*("+w+")$|^$";var q=n++;t[q]="^"+t[y]+"\\s*("+g+")$|^$";var L=n++;t[L]="(\\s*)"+t[y]+"\\s*("+w+"|"+t[j]+")";r[L]=new RegExp(t[L],"g");var X="$1$2$3";var _=n++;t[_]="^\\s*("+t[j]+")"+"\\s+-\\s+"+"("+t[j]+")"+"\\s*$";var N=n++;t[N]="^\\s*("+t[k]+")"+"\\s+-\\s+"+"("+t[k]+")"+"\\s*$";var O=n++;t[O]="(<|>)?=?\\s*\\*";for(var B=0;B<n;B++){if(!r[B])r[B]=new RegExp(t[B])}e.parse=D;function D(e,t){var n=t?r[d]:r[m];return n.test(e)?new H(e,t):null}e.valid=F;function F(e,r){var t=D(e,r);return t?t.version:null}e.clean=G;function G(e,r){var t=D(e,r);return t?t.version:null}e.SemVer=H;function H(e,t){if(e instanceof H){if(e.loose===t)return e;else e=e.version}else if(typeof e!=="string"){throw new TypeError("Invalid Version: "+e)}if(!(this instanceof H))return new H(e,t);this.loose=t;var n=e.trim().match(t?r[d]:r[m]);if(!n)throw new TypeError("Invalid Version: "+e);this.raw=e;this.major=+n[1];this.minor=+n[2];this.patch=+n[3];if(!n[4])this.prerelease=[];else this.prerelease=n[4].split(".").map(function(e){return/^[0-9]+$/.test(e)?+e:e});this.build=n[5]?n[5].split("."):[];this.format()}H.prototype.format=function(){this.version=this.major+"."+this.minor+"."+this.patch;if(this.prerelease.length)this.version+="-"+this.prerelease.join(".");return this.version};H.prototype.inspect=function(){return'<SemVer "'+this+'">'};H.prototype.toString=function(){return this.version};H.prototype.compare=function(e){if(!(e instanceof H))e=new H(e,this.loose);return this.compareMain(e)||this.comparePre(e)};H.prototype.compareMain=function(e){if(!(e instanceof H))e=new H(e,this.loose);return Q(this.major,e.major)||Q(this.minor,e.minor)||Q(this.patch,e.patch)};H.prototype.comparePre=function(e){if(!(e instanceof H))e=new H(e,this.loose);if(this.prerelease.length&&!e.prerelease.length)return-1;else if(!this.prerelease.length&&e.prerelease.length)return 1;else if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r];var n=e.prerelease[r];if(t===undefined&&n===undefined)return 0;else if(n===undefined)return 1;else if(t===undefined)return-1;else if(t===n)continue;else return Q(t,n)}while(++r)};H.prototype.inc=function(e){switch(e){case"premajor":this.inc("major");this.inc("pre");break;case"preminor":this.inc("minor");this.inc("pre");break;case"prepatch":this.inc("patch");this.inc("pre");break;case"prerelease":if(this.prerelease.length===0)this.inc("patch");this.inc("pre");break;case"major":this.major++;this.minor=-1;case"minor":this.minor++;this.patch=0;this.prerelease=[];break;case"patch":if(this.prerelease.length===0)this.patch++;this.prerelease=[];break;case"pre":if(this.prerelease.length===0)this.prerelease=[0];else{var r=this.prerelease.length;while(--r>=0){if(typeof this.prerelease[r]==="number"){this.prerelease[r]++;r=-2}}if(r===-1)this.prerelease.push(0)}break;default:throw new Error("invalid increment argument: "+e)}this.format();return this};e.inc=J;function J(e,r,t){try{return new H(e,t).inc(r).version}catch(n){return null}}e.compareIdentifiers=Q;var K=/^[0-9]+$/;function Q(e,r){var t=K.test(e);var n=K.test(r);if(t&&n){e=+e;r=+r}return t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}e.rcompareIdentifiers=U;function U(e,r){return Q(r,e)}e.compare=W;function W(e,r,t){return new H(e,t).compare(r)}e.compareLoose=Y;function Y(e,r){return W(e,r,true)}e.rcompare=er;function er(e,r,t){return W(r,e,t)}e.sort=rr;function rr(r,t){return r.sort(function(r,n){return e.compare(r,n,t)})}e.rsort=tr;function tr(r,t){return r.sort(function(r,n){return e.rcompare(r,n,t)})}e.gt=nr;function nr(e,r,t){return W(e,r,t)>0}e.lt=ir;function ir(e,r,t){return W(e,r,t)<0}e.eq=sr;function sr(e,r,t){return W(e,r,t)===0}e.neq=ar;function ar(e,r,t){return W(e,r,t)!==0}e.gte=or;function or(e,r,t){return W(e,r,t)>=0}e.lte=fr;function fr(e,r,t){return W(e,r,t)<=0}e.cmp=ur;function ur(e,r,t,n){var i;switch(r){case"===":i=e===t;break;case"!==":i=e!==t;break;case"":case"=":case"==":i=sr(e,t,n);break;case"!=":i=ar(e,t,n);break;case">":i=nr(e,t,n);break;case">=":i=or(e,t,n);break;case"<":i=ir(e,t,n);break;case"<=":i=fr(e,t,n);break;default:throw new TypeError("Invalid operator: "+r)}return i}e.Comparator=cr;function cr(e,r){if(e instanceof cr){if(e.loose===r)return e;else e=e.value}if(!(this instanceof cr))return new cr(e,r);this.loose=r;this.parse(e);if(this.semver===lr)this.value="";else this.value=this.operator+this.semver.version}var lr={};cr.prototype.parse=function(e){var t=this.loose?r[Z]:r[q];var n=e.match(t);if(!n)throw new TypeError("Invalid comparator: "+e);this.operator=n[1];if(!n[2])this.semver=lr;else{this.semver=new H(n[2],this.loose);if(this.operator==="<"&&!this.semver.prerelease.length){this.semver.prerelease=["0"];this.semver.format()}}};cr.prototype.inspect=function(){return'<SemVer Comparator "'+this+'">'};cr.prototype.toString=function(){return this.value};cr.prototype.test=function(e){return this.semver===lr?true:ur(e,this.operator,this.semver,this.loose)};e.Range=pr;function pr(e,r){if(e instanceof pr&&e.loose===r)return e;if(!(this instanceof pr))return new pr(e,r);this.loose=r;this.raw=e;this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length});if(!this.set.length){throw new TypeError("Invalid SemVer Range: "+e)}this.format()}pr.prototype.inspect=function(){return'<SemVer Range "'+this.range+'">'};pr.prototype.format=function(){this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim();return this.range};pr.prototype.toString=function(){return this.range};pr.prototype.parseRange=function(e){var t=this.loose;e=e.trim();var n=t?r[N]:r[_];e=e.replace(n,kr);e=e.replace(r[L],X);e=e.replace(r[S],V);e=e.replace(r[C],M);e=e.split(/\s+/).join(" ");var i=t?r[Z]:r[q];var s=e.split(" ").map(function(e){return vr(e,t)}).join(" ").split(/\s+/);if(this.loose){s=s.filter(function(e){return!!e.match(i)})}s=s.map(function(e){return new cr(e,t)});return s};e.toComparators=hr;function hr(e,r){return new pr(e,r).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})}function vr(e,r){e=dr(e,r);e=gr(e,r);e=br(e,r);e=jr(e,r);return e}function mr(e){return!e||e.toLowerCase()==="x"||e==="*"}function gr(e,r){return e.trim().split(/\s+/).map(function(e){return wr(e,r)}).join(" ")}function wr(e,t){var n=t?r[T]:r[I];return e.replace(n,function(e,r,t,n,i){var s;if(mr(r))s="";else if(mr(t))s=">="+r+".0.0-0 <"+(+r+1)+".0.0-0";else if(mr(n))s=">="+r+"."+t+".0-0 <"+r+"."+(+t+1)+".0-0";else if(i){if(i.charAt(0)!=="-")i="-"+i;s=">="+r+"."+t+"."+n+i+" <"+r+"."+(+t+1)+".0-0"}else s=">="+r+"."+t+"."+n+"-0"+" <"+r+"."+(+t+1)+".0-0";return s})}function dr(e,r){return e.trim().split(/\s+/).map(function(e){return yr(e,r)}).join(" ")}function yr(e,t){var n=t?r[P]:r[z];return e.replace(n,function(e,r,t,n,i){var s;if(mr(r))s="";else if(mr(t))s=">="+r+".0.0-0 <"+(+r+1)+".0.0-0";else if(mr(n)){if(r==="0")s=">="+r+"."+t+".0-0 <"+r+"."+(+t+1)+".0-0";else s=">="+r+"."+t+".0-0 <"+(+r+1)+".0.0-0"}else if(i){if(i.charAt(0)!=="-")i="-"+i;if(r==="0"){if(t==="0")s="="+r+"."+t+"."+n+i;else s=">="+r+"."+t+"."+n+i+" <"+r+"."+(+t+1)+".0-0"}else s=">="+r+"."+t+"."+n+i+" <"+(+r+1)+".0.0-0"}else{if(r==="0"){if(t==="0")s="="+r+"."+t+"."+n;else s=">="+r+"."+t+"."+n+"-0"+" <"+r+"."+(+t+1)+".0-0"}else s=">="+r+"."+t+"."+n+"-0"+" <"+(+r+1)+".0.0-0"}return s})}function br(e,r){return e.split(/\s+/).map(function(e){return $r(e,r)}).join(" ")}function $r(e,t){e=e.trim();var n=t?r[x]:r[E];return e.replace(n,function(e,r,t,n,i,s){var a=mr(t);var o=a||mr(n);var f=o||mr(i);var u=f;if(r==="="&&u)r="";if(r&&u){if(a)t=0;if(o)n=0;if(f)i=0;if(r===">"){r=">=";if(a){}else if(o){t=+t+1;n=0;i=0}else if(f){n=+n+1;i=0}}e=r+t+"."+n+"."+i+"-0"}else if(a){e="*"}else if(o){e=">="+t+".0.0-0 <"+(+t+1)+".0.0-0"}else if(f){e=">="+t+"."+n+".0-0 <"+t+"."+(+n+1)+".0-0"}return e})}function jr(e,t){return e.trim().replace(r[O],"")}function kr(e,r,t,n,i,s,a,o,f,u,c,l,p){if(mr(t))r="";else if(mr(n))r=">="+t+".0.0-0";else if(mr(i))r=">="+t+"."+n+".0-0";else r=">="+r;if(mr(f))o="";else if(mr(u))o="<"+(+f+1)+".0.0-0";else if(mr(c))o="<"+f+"."+(+u+1)+".0-0";else if(l)o="<="+f+"."+u+"."+c+"-"+l;else o="<="+o;return(r+" "+o).trim()}pr.prototype.test=function(e){if(!e)return false;for(var r=0;r<this.set.length;r++){if(Er(this.set[r],e))return true}return false};function Er(e,r){for(var t=0;t<e.length;t++){if(!e[t].test(r))return false}return true}e.satisfies=xr;function xr(e,r,t){try{r=new pr(r,t)}catch(n){return false}return r.test(e)}e.maxSatisfying=Rr;function Rr(e,r,t){return e.filter(function(e){return xr(e,r,t)}).sort(function(e,r){return er(e,r,t)})[0]||null}e.validRange=Sr;function Sr(e,r){try{return new pr(e,r).range||"*"}catch(t){return null}}e.ltr=Vr;function Vr(e,r,t){return Tr(e,r,"<",t)}e.gtr=Ir;function Ir(e,r,t){return Tr(e,r,">",t)}e.outside=Tr;function Tr(e,r,t,n){e=new H(e,n);r=new pr(r,n);var i,s,a,o,f;switch(t){case">":i=nr;s=fr;a=ir;o=">";f=">=";break;case"<":i=ir;s=or;a=nr;o="<";f="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(xr(e,r,n)){return false}for(var u=0;u<r.set.length;++u){var c=r.set[u];var l=null;var p=null;c.forEach(function(e){l=l||e;p=p||e;if(i(e.semver,l.semver,n)){l=e}else if(a(e.semver,p.semver,n)){p=e}});if(l.operator===o||l.operator===f){return false}if((!p.operator||p.operator===o)&&s(e,p.semver)){return false}else if(p.operator===f&&a(e,p.semver)){return false}}return true}if(typeof define==="function"&&define.amd)define(e)})(typeof exports==="object"?exports:typeof define==="function"&&define.amd?{}:semver={});
##############################################
/src/node_modules/semver/semver.js-543-  this.loose = loose;
/src/node_modules/semver/semver.js:544:  this.parse(comp);
/src/node_modules/semver/semver.js-545-
##############################################
/src/node_modules/lockfile/test/basic.js-168-      fs.open = fs._open
/src/node_modules/lockfile/test/basic.js:169:      return fs.open(path, mode, cb)
/src/node_modules/lockfile/test/basic.js-170-    }
##############################################
/src/node_modules/lockfile/test/basic.js-191-      fs.open = fs._open
/src/node_modules/lockfile/test/basic.js:192:      return fs.open(path, mode, cb)
/src/node_modules/lockfile/test/basic.js-193-    }
##############################################
/src/node_modules/lockfile/lockfile.js-60-  delete locks[path]
/src/node_modules/lockfile/lockfile.js:61:  fs.unlink(path, function (unlinkEr) { cb() })
/src/node_modules/lockfile/lockfile.js-62-}
##############################################
/src/node_modules/lockfile/lockfile.js-76-  debug('check', path, opts)
/src/node_modules/lockfile/lockfile.js:77:  fs.open(path, 'r', function (er, fd) {
/src/node_modules/lockfile/lockfile.js-78-    if (er) {
##############################################
/src/node_modules/lockfile/lockfile.js-155-  // if this succeeds, then we're in business.
/src/node_modules/lockfile/lockfile.js:156:  fs.open(path, wx, function (er, fd) {
/src/node_modules/lockfile/lockfile.js-157-    if (!er) {
##############################################
/src/node_modules/fstream/lib/file-reader.js-36-  var me = this
/src/node_modules/fstream/lib/file-reader.js:37:    , stream = me._stream = fs.createReadStream(me._path, me.props)
/src/node_modules/fstream/lib/file-reader.js-38-
##############################################
/src/node_modules/request/request.js-138-  } else {
/src/node_modules/request/request.js:139:    if (typeof self.uri == "string") self.uri = url.parse(self.uri)
/src/node_modules/request/request.js-140-  }
##############################################
/src/node_modules/request/request.js-146-  if (self.proxy) {
/src/node_modules/request/request.js:147:    if (typeof self.proxy == 'string') self.proxy = url.parse(self.proxy)
/src/node_modules/request/request.js-148-
##############################################
/src/node_modules/request/request.js-517-  var proxy = this.proxy
/src/node_modules/request/request.js:518:  if (typeof proxy === 'string') proxy = url.parse(proxy)
/src/node_modules/request/request.js-519-  var isHttps = (proxy && proxy.protocol === 'https:') || this.uri.protocol === 'https:'
##############################################
/src/node_modules/request/request.js-781-    var uriPrev = self.uri
/src/node_modules/request/request.js:782:    self.uri = url.parse(redirectTo)
/src/node_modules/request/request.js-783-
##############################################
/src/node_modules/request/request.js-876-          // The UTF8 BOM [0xEF,0xBB,0xBF] is converted to [0xFE,0xFF] in the JS UTC16/UCS2 representation.
/src/node_modules/request/request.js:877:          // Strip this value out when the encoding is set to 'utf8', as upstream consumers won't expect it and it breaks JSON.parse().
/src/node_modules/request/request.js-878-          if (self.encoding === 'utf8' && buffer[0].length > 0 && buffer[0][0] === "\uFEFF") {
##############################################
/src/node_modules/request/request.js-885-          try {
/src/node_modules/request/request.js:886:            response.body = JSON.parse(response.body)
/src/node_modules/request/request.js-887-          } catch (e) {}
##############################################
/src/node_modules/request/request.js-973-  var base
/src/node_modules/request/request.js:974:  if (!clobber && this.uri.query) base = qs.parse(this.uri.query)
/src/node_modules/request/request.js-975-  else base = {}
##############################################
/src/node_modules/request/request.js-984-
/src/node_modules/request/request.js:985:  this.uri = url.parse(this.uri.href.split('?')[0] + '?' + qs.stringify(base))
/src/node_modules/request/request.js-986-  this.url = this.uri
##############################################
/src/node_modules/request/request.js-1133-     ) {
/src/node_modules/request/request.js:1134:    form = qs.parse(this.body)
/src/node_modules/request/request.js-1135-  }
/src/node_modules/request/request.js-1136-  if (this.uri.query) {
/src/node_modules/request/request.js:1137:    form = qs.parse(this.uri.query)
/src/node_modules/request/request.js-1138-  }
##############################################
/src/node_modules/request/node_modules/node-uuid/README.md-121-
/src/node_modules/request/node_modules/node-uuid/README.md:122:### uuid.parse(id[, buffer[, offset]])
/src/node_modules/request/node_modules/node-uuid/README.md-123-### uuid.unparse(buffer[, offset])
##############################################
/src/node_modules/request/node_modules/node-uuid/README.md-133-```javascript
/src/node_modules/request/node_modules/node-uuid/README.md:134:var bytes = uuid.parse('797ff043-11eb-11e1-80d6-510998755d10'); // -> <Buffer 79 7f f0 43 11 eb 11 e1 80 d6 51 09 98 75 5d 10>
/src/node_modules/request/node_modules/node-uuid/README.md-135-var string = uuid.unparse(bytes); // -> '797ff043-11eb-11e1-80d6-510998755d10'
##############################################
/src/node_modules/request/node_modules/node-uuid/package.json-26-  "version": "1.4.1",
/src/node_modules/request/node_modules/node-uuid/package.json:27:  "readme": "# node-uuid\n\nSimple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.\n\nFeatures:\n\n* Generate RFC4122 version 1 or version 4 UUIDs\n* Runs in node.js and all browsers.\n* Registered as a [ComponentJS](https://github.com/component/component) [component](https://github.com/component/component/wiki/Components) ('broofa/node-uuid').\n* Cryptographically strong random # generation on supporting platforms\n* 1.1K minified and gzip'ed  (Want something smaller?  Check this [crazy shit](https://gist.github.com/982883) out! )\n* [Annotated source code](http://broofa.github.com/node-uuid/docs/uuid.html)\n\n## Getting Started\n\nInstall it in your browser:\n\n```html\n<script src=\"uuid.js\"></script>\n```\n\nOr in node.js:\n\n```\nnpm install node-uuid\n```\n\n```javascript\nvar uuid = require('node-uuid');\n```\n\nThen create some ids ...\n\n```javascript\n// Generate a v1 (time-based) id\nuuid.v1(); // -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a'\n\n// Generate a v4 (random) id\nuuid.v4(); // -> '110ec58a-a0f2-4ac4-8393-c866d813b8d1'\n```\n\n## API\n\n### uuid.v1([`options` [, `buffer` [, `offset`]]])\n\nGenerate and return a RFC4122 v1 (timestamp-based) UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.\n  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.\n  * `msecs` - (Number | Date) Time in milliseconds since unix Epoch.  Default: The current time is used.\n  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNotes:\n\n1. The randomly generated node id is only guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nuuid.v1({\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678\n});   // -> \"710b962e-041c-11e1-9234-0123456789ab\"\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nvar arr = new Array(32); // -> []\nuuid.v1(null, arr, 0);   // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15]\nuuid.v1(null, arr, 16);  // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15 02 a3 1c b0 14 32 11 e1 85 58 0b 48 8e 4f c1 15]\n\n// Optionally use uuid.unparse() to get stringify the ids\nuuid.unparse(buffer);    // -> '02a2ce90-1432-11e1-8558-0b488e4fc115'\nuuid.unparse(buffer, 16) // -> '02a31cb0-1432-11e1-8558-0b488e4fc115'\n```\n\n### uuid.v4([`options` [, `buffer` [, `offset`]]])\n\nGenerate and return a RFC4122 v4 UUID.\n\n* `options` - (Object) Optional uuid state to apply. Properties may include:\n\n  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values\n  * `rng` - (Function) Random # generator to use.  Set to one of the built-in generators - `uuid.mathRNG` (all platforms), `uuid.nodeRNG` (node.js only), `uuid.whatwgRNG` (WebKit only) - or a custom function that returns an array[16] of byte values.\n\n* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n* `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nuuid.v4({\n  random: [\n    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,\n    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36\n  ]\n});\n// -> \"109156be-c4fb-41ea-b1b4-efe1671c5836\"\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nvar buffer = new Array(32); // (or 'new Buffer' in node.js)\nuuid.v4(null, buffer, 0);\nuuid.v4(null, buffer, 16);\n```\n\n### uuid.parse(id[, buffer[, offset]])\n### uuid.unparse(buffer[, offset])\n\nParse and unparse UUIDs\n\n  * `id` - (String) UUID(-like) string\n  * `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written. Default: A new Array or Buffer is used\n  * `offset` - (Number) Starting index in `buffer` at which to begin writing. Default: 0\n\nExample parsing and unparsing a UUID string\n\n```javascript\nvar bytes = uuid.parse('797ff043-11eb-11e1-80d6-510998755d10'); // -> <Buffer 79 7f f0 43 11 eb 11 e1 80 d6 51 09 98 75 5d 10>\nvar string = uuid.unparse(bytes); // -> '797ff043-11eb-11e1-80d6-510998755d10'\n```\n\n### uuid.noConflict()\n\n(Browsers only) Set `uuid` property back to it's previous value.\n\nReturns the node-uuid object.\n\nExample:\n\n```javascript\nvar myUuid = uuid.noConflict();\nmyUuid.v1(); // -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a'\n```\n\n## Deprecated APIs\n\nSupport for the following v1.2 APIs is available in v1.3, but is deprecated and will be removed in the next major version.\n\n### uuid([format [, buffer [, offset]]])\n\nuuid() has become uuid.v4(), and the `format` argument is now implicit in the `buffer` argument. (i.e. if you specify a buffer, the format is assumed to be binary).\n\n### uuid.BufferClass\n\nThe class of container created when generating binary uuid data if no buffer argument is specified.  This is expected to go away, with no replacement API.\n\n## Testing\n\nIn node.js\n\n```\n> cd test\n> node test.js\n```\n\nIn Browser\n\n```\nopen test/test.html\n```\n\n### Benchmarking\n\nRequires node.js\n\n```\nnpm install uuid uuid-js\nnode benchmark/benchmark.js\n```\n\nFor a more complete discussion of node-uuid performance, please see the `benchmark/README.md` file, and the [benchmark wiki](https://github.com/broofa/node-uuid/wiki/Benchmark)\n\nFor browser performance [checkout the JSPerf tests](http://jsperf.com/node-uuid-performance).\n\n## Release notes\n\n### 1.4.0\n\n* Improved module context detection\n* Removed public RNG functions\n\n### 1.3.2\n\n* Improve tests and handling of v1() options (Issue #24)\n* Expose RNG option to allow for perf testing with different generators\n\n### 1.3.0\n\n* Support for version 1 ids, thanks to [@ctavan](https://github.com/ctavan)!\n* Support for node.js crypto API\n* De-emphasizing performance in favor of a) cryptographic quality PRNGs where available and b) more manageable code\n",
/src/node_modules/request/node_modules/node-uuid/package.json-28-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/node_modules/node-uuid/test/test.js-123-id = '00112233445566778899aabbccddeeff';
/src/node_modules/request/node_modules/node-uuid/test/test.js:124:assert(uuid.unparse(uuid.parse(id.substr(0,10))) ==
/src/node_modules/request/node_modules/node-uuid/test/test.js-125-  '00112233-4400-0000-0000-000000000000', 'Short parse');
/src/node_modules/request/node_modules/node-uuid/test/test.js:126:assert(uuid.unparse(uuid.parse('(this is the uuid -> ' + id + id)) ==
/src/node_modules/request/node_modules/node-uuid/test/test.js-127-  '00112233-4455-6677-8899-aabbccddeeff', 'Dirty parse');
##############################################
/src/node_modules/request/node_modules/node-uuid/test/test.js-165-
/src/node_modules/request/node_modules/node-uuid/test/test.js:166:    if (id != uuid.unparse(uuid.parse(id))) {
/src/node_modules/request/node_modules/node-uuid/test/test.js-167-      assert(fail, id + ' is not a valid id');
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/package.json-23-  },
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/package.json:24:  "readme": "# delayed-stream\n\nBuffers events from a stream until you are ready to handle them.\n\n## Installation\n\n``` bash\nnpm install delayed-stream\n```\n\n## Usage\n\nThe following example shows how to write a http echo server that delays its\nresponse by 1000 ms.\n\n``` javascript\nvar DelayedStream = require('delayed-stream');\nvar http = require('http');\n\nhttp.createServer(function(req, res) {\n  var delayed = DelayedStream.create(req);\n\n  setTimeout(function() {\n    res.writeHead(200);\n    delayed.pipe(res);\n  }, 1000);\n});\n```\n\nIf you are not using `Stream#pipe`, you can also manually release the buffered\nevents by calling `delayedStream.resume()`:\n\n``` javascript\nvar delayed = DelayedStream.create(req);\n\nsetTimeout(function() {\n  // Emit all buffered events and resume underlaying source\n  delayed.resume();\n}, 1000);\n```\n\n## Implementation\n\nIn order to use this meta stream properly, here are a few things you should\nknow about the implementation.\n\n### Event Buffering / Proxying\n\nAll events of the `source` stream are hijacked by overwriting the `source.emit`\nmethod. Until node implements a catch-all event listener, this is the only way.\n\nHowever, delayed-stream still continues to emit all events it captures on the\n`source`, regardless of whether you have released the delayed stream yet or\nnot.\n\nUpon creation, delayed-stream captures all `source` events and stores them in\nan internal event buffer. Once `delayedStream.release()` is called, all\nbuffered events are emitted on the `delayedStream`, and the event buffer is\ncleared. After that, delayed-stream merely acts as a proxy for the underlaying\nsource.\n\n### Error handling\n\nError events on `source` are buffered / proxied just like any other events.\nHowever, `delayedStream.create` attaches a no-op `'error'` listener to the\n`source`. This way you only have to handle errors on the `delayedStream`\nobject, rather than in two places.\n\n### Buffer limits\n\ndelayed-stream provides a `maxDataSize` property that can be used to limit\nthe amount of data being buffered. In order to protect you from bad `source`\nstreams that don't react to `source.pause()`, this feature is enabled by\ndefault.\n\n## API\n\n### DelayedStream.create(source, [options])\n\nReturns a new `delayedStream`. Available options are:\n\n* `pauseStream`\n* `maxDataSize`\n\nThe description for those properties can be found below.\n\n### delayedStream.source\n\nThe `source` stream managed by this object. This is useful if you are\npassing your `delayedStream` around, and you still want to access properties\non the `source` object.\n\n### delayedStream.pauseStream = true\n\nWhether to pause the underlaying `source` when calling\n`DelayedStream.create()`. Modifying this property afterwards has no effect.\n\n### delayedStream.maxDataSize = 1024 * 1024\n\nThe amount of data to buffer before emitting an `error`.\n\nIf the underlaying source is emitting `Buffer` objects, the `maxDataSize`\nrefers to bytes.\n\nIf the underlaying source is emitting JavaScript strings, the size refers to\ncharacters.\n\nIf you know what you are doing, you can set this property to `Infinity` to\ndisable this feature. You can also modify this property during runtime.\n\n### delayedStream.maxDataSize = 1024 * 1024\n\nThe amount of data to buffer before emitting an `error`.\n\nIf the underlaying source is emitting `Buffer` objects, the `maxDataSize`\nrefers to bytes.\n\nIf the underlaying source is emitting JavaScript strings, the size refers to\ncharacters.\n\nIf you know what you are doing, you can set this property to `Infinity` to\ndisable this feature.\n\n### delayedStream.dataSize = 0\n\nThe amount of data buffered so far.\n\n### delayedStream.readable\n\nAn ECMA5 getter that returns the value of `source.readable`.\n\n### delayedStream.resume()\n\nIf the `delayedStream` has not been released so far, `delayedStream.release()`\nis called.\n\nIn either case, `source.resume()` is called.\n\n### delayedStream.pause()\n\nCalls `source.pause()`.\n\n### delayedStream.pipe(dest)\n\nCalls `delayedStream.resume()` and then proxies the arguments to `source.pipe`.\n\n### delayedStream.release()\n\nEmits and clears all events that have been buffered up so far. This does not\nresume the underlaying source, use `delayedStream.resume()` instead.\n\n## License\n\ndelayed-stream is licensed under the MIT license.\n",
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/package.json-25-  "readmeFilename": "Readme.md",
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Readme.md-19-
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Readme.md:20:http.createServer(function(req, res) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Readme.md-21-  var delayed = DelayedStream.create(req);
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-http-upload.js-7-
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-http-upload.js:8:var server = http.createServer(function(req, res) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-http-upload.js-9-  var delayed = DelayedStream.create(req, {maxDataSize: UPLOAD.length});
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/package.json-24-  },
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/package.json:25:  "readme": "# combined-stream\n\nA stream that emits multiple other streams one after another.\n\n## Installation\n\n``` bash\nnpm install combined-stream\n```\n\n## Usage\n\nHere is a simple example that shows how you can use combined-stream to combine\ntwo files into one:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nWhile the example above works great, it will pause all source streams until\nthey are needed. If you don't want that to happen, you can set `pauseStreams`\nto `false`:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create({pauseStreams: false});\ncombinedStream.append(fs.createReadStream('file1.txt'));\ncombinedStream.append(fs.createReadStream('file2.txt'));\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\nHowever, what if you don't have all the source streams yet, or you don't want\nto allocate the resources (file descriptors, memory, etc.) for them right away?\nWell, in that case you can simply provide a callback that supplies the stream\nby calling a `next()` function:\n\n``` javascript\nvar CombinedStream = require('combined-stream');\nvar fs = require('fs');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file1.txt'));\n});\ncombinedStream.append(function(next) {\n  next(fs.createReadStream('file2.txt'));\n});\n\ncombinedStream.pipe(fs.createWriteStream('combined.txt'));\n```\n\n## API\n\n### CombinedStream.create([options])\n\nReturns a new combined stream object. Available options are:\n\n* `maxDataSize`\n* `pauseStreams`\n\nThe effect of those options is described below.\n\n### combinedStream.pauseStreams = true\n\nWhether to apply back pressure to the underlaying streams. If set to `false`,\nthe underlaying streams will never be paused. If set to `true`, the\nunderlaying streams will be paused right after being appended, as well as when\n`delayedStream.pipe()` wants to throttle.\n\n### combinedStream.maxDataSize = 2 * 1024 * 1024\n\nThe maximum amount of bytes (or characters) to buffer for all source streams.\nIf this value is exceeded, `combinedStream` emits an `'error'` event.\n\n### combinedStream.dataSize = 0\n\nThe amount of bytes (or characters) currently buffered by `combinedStream`.\n\n### combinedStream.append(stream)\n\nAppends the given `stream` to the combinedStream object. If `pauseStreams` is\nset to `true, this stream will also be paused right away.\n\n`streams` can also be a function that takes one parameter called `next`. `next`\nis a function that must be invoked in order to provide the `next` stream, see\nexample above.\n\nRegardless of how the `stream` is appended, combined-stream always attaches an\n`'error'` listener to it, so you don't have to do that manually.\n\nSpecial case: `stream` can also be a String or Buffer.\n\n### combinedStream.write(data)\n\nYou should not call this, `combinedStream` takes care of piping the appended\nstreams into itself for you.\n\n### combinedStream.resume()\n\nCauses `combinedStream` to start drain the streams it manages. The function is\nidempotent, and also emits a `'resume'` event each time which usually goes to\nthe stream that is currently being drained.\n\n### combinedStream.pause();\n\nIf `combinedStream.pauseStreams` is set to `false`, this does nothing.\nOtherwise a `'pause'` event is emitted, this goes to the stream that is\ncurrently being drained, so you can use it to apply back pressure.\n\n### combinedStream.end();\n\nSets `combinedStream.writable` to false, emits an `'end'` event, and removes\nall streams from the queue.\n\n### combinedStream.destroy();\n\nSame as `combinedStream.end()`, except it emits a `'close'` event instead of\n`'end'`.\n\n## License\n\ncombined-stream is licensed under the MIT license.\n",
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/package.json-26-  "readmeFilename": "Readme.md",
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-20-var combinedStream = CombinedStream.create();
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:21:combinedStream.append(fs.createReadStream('file1.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:22:combinedStream.append(fs.createReadStream('file2.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-23-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-35-var combinedStream = CombinedStream.create({pauseStreams: false});
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:36:combinedStream.append(fs.createReadStream('file1.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:37:combinedStream.append(fs.createReadStream('file2.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-38-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-52-combinedStream.append(function(next) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:53:  next(fs.createReadStream('file1.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-54-});
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-55-combinedStream.append(function(next) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md:56:  next(fs.createReadStream('file2.txt'));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/Readme.md-57-});
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js-11-  var combinedStream = CombinedStream.create({pauseStreams: false, maxDataSize: 20736});
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js:12:  combinedStream.append(fs.createReadStream(FILE1));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js:13:  combinedStream.append(fs.createReadStream(FILE2));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js-14-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js-12-  var combinedStream = CombinedStream.create();
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js:13:  combinedStream.append(fs.createReadStream(FILE1));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js:14:  combinedStream.append(fs.createReadStream(FILE2));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js-15-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js-11-  var combinedStream = CombinedStream.create({pauseStreams: false});
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js:12:  combinedStream.append(fs.createReadStream(FILE1));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js:13:  combinedStream.append(fs.createReadStream(FILE2));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js-14-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js-19-  var combinedStream = CombinedStream.create();
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js:20:  combinedStream.append(fs.createReadStream(FILE1));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js-21-  combinedStream.append(BUFFER);
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js:22:  combinedStream.append(fs.createReadStream(FILE2));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js-23-  combinedStream.append(function(next) {
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-is-stream-like.js-5-var FILE1 = common.dir.fixture + '/file1.txt';
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-is-stream-like.js:6:var fileStream = fs.createReadStream(FILE1);
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-is-stream-like.js-7-
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js-12-  combinedStream.append(function(next) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js:13:    next(fs.createReadStream(FILE1));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js-14-  });
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js-15-  combinedStream.append(function(next) {
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js:16:    next(fs.createReadStream(FILE2));
/src/node_modules/request/node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js-17-  });
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1072-```js
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md:1073:fs.readFile('data.txt', 'utf-8', cb, {});
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1074-```
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1081-  readData: function(cb, results){
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md:1082:    fs.readFile('data.txt', 'utf-8', cb);
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1083-  }
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1222-    function(callback){
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md:1223:        fs.writeFile('testfile1', 'test1', callback);
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1224-    },
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1225-    function(callback){
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md:1226:        fs.writeFile('testfile2', 'test2', callback);
/src/node_modules/request/node_modules/form-data/node_modules/async/README.md-1227-    }
##############################################
/src/node_modules/request/node_modules/form-data/node_modules/async/package.json-37-  },
/src/node_modules/request/node_modules/form-data/node_modules/async/package.json:38:  "readme": "# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual 'functional'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn't working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type=\"text/javascript\" src=\"async.js\"></script>\n<script type=\"text/javascript\">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name=\"forEach\" />\n<a name=\"each\" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name=\"forEachSeries\" />\n<a name=\"eachSeries\" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name=\"forEachLimit\" />\n<a name=\"eachLimit\" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than \"limit\" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first \"limit\" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name=\"map\" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map(['file1','file2','file3'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name=\"mapSeries\" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name=\"mapLimit\" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than \"limit\" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first \"limit\" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map(['file1','file2','file3'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name=\"filter\" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter(['file1','file2','file3'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name=\"filterSeries\" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name=\"reject\" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name=\"rejectSeries\" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name=\"reduce\" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it's probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name=\"reduceRight\" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name=\"detect\" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect(['file1','file2','file3'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name=\"detectSeries\" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name=\"sortBy\" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy(['file1','file2','file3'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name=\"some\" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some(['file1','file2','file3'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name=\"every\" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every(['file1','file2','file3'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name=\"concat\" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name=\"concatSeries\" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name=\"series\" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, 'one');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, 'two');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to ['one', 'two']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name=\"parallel\" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, 'one');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, 'two');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal ['one','two'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name=\"parallel\" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of \"limit\" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first \"limit\" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name=\"whilst\" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name=\"doWhilst\" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name=\"until\" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name=\"doUntil\" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name=\"forever\" />\n### forever(fn, callback)\n\nCalls the asynchronous function 'fn' repeatedly, in series, indefinitely.\nIf an error is passed to fn's callback then 'callback' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name=\"waterfall\" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task's callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, 'one', 'two');\n    },\n    function(arg1, arg2, callback){\n        callback(null, 'three');\n    },\n    function(arg1, callback){\n        // arg1 now equals 'three'\n        callback(null, 'done');\n    }\n], function (err, result) {\n   // result now equals 'done'    \n});\n```\n\n---------------------------------------\n<a name=\"compose\" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name=\"applyEach\" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], 'bucket', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name=\"applyEachSeries\" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name=\"queue\" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task's callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log('hello ' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log('all items have been processed');\n}\n\n// add some items to the queue\n\nq.push({name: 'foo'}, function (err) {\n    console.log('finished processing foo');\n});\nq.push({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {\n    console.log('finished processing bar');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\n```\n\n---------------------------------------\n\n<a name=\"cargo\" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log('hello ' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: 'foo'}, function (err) {\n    console.log('finished processing foo');\n});\ncargo.push({name: 'bar'}, function (err) {\n    console.log('finished processing bar');\n});\ncargo.push({name: 'baz'}, function (err) {\n    console.log('finished processing baz');\n});\n```\n\n---------------------------------------\n\n<a name=\"auto\" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, 'data.txt', 'utf-8');\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile('data.txt', 'utf-8', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile('data.txt', 'utf-8', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function's execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: ['get_data', 'make_folder', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: ['write_file', function(callback, results){\n        // once the file is written let's email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let's email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name=\"iterator\" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It's also possible to\n'peek' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p('one'); },\n    function(){ sys.p('two'); },\n    function(){ sys.p('three'); }\n]);\n\nnode> var iterator2 = iterator();\n'one'\nnode> var iterator3 = iterator2();\n'two'\nnode> iterator3();\n'three'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n'three'\n```\n\n---------------------------------------\n\n<a name=\"apply\" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, 'testfile1', 'test1'),\n    async.apply(fs.writeFile, 'testfile2', 'test2'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile('testfile1', 'test1', callback);\n    },\n    function(callback){\n        fs.writeFile('testfile2', 'test2', callback);\n    }\n]);\n```\n\nIt's possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, 'one');\nnode> fn('two', 'three');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name=\"nextTick\" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push('two');\n    // call_order now equals ['one','two']\n});\ncall_order.push('one')\n```\n\n<a name=\"times\" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: 'user' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name=\"timesSeries\" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name=\"memoize\" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn('some name', function () {\n    // callback\n});\n```\n\n<a name=\"unmemoize\" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name=\"log\" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, 'hello ' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, 'world');\n'hello world'\n```\n\n---------------------------------------\n\n<a name=\"dir\" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, 'world');\n{hello: 'world'}\n```\n\n---------------------------------------\n\n<a name=\"noConflict\" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n",
/src/node_modules/request/node_modules/form-data/node_modules/async/package.json-39-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/node_modules/form-data/package.json-37-  },
/src/node_modules/request/node_modules/form-data/package.json:38:  "readme": "# Form-Data [![Build Status](https://travis-ci.org/felixge/node-form-data.png?branch=master)](https://travis-ci.org/felixge/node-form-data) [![Dependency Status](https://gemnasium.com/felixge/node-form-data.png)](https://gemnasium.com/felixge/node-form-data)\n\nA module to create readable ```\"multipart/form-data\"``` streams. Can be used to submit forms and file uploads to other web applications.\n\nThe API of this module is inspired by the [XMLHttpRequest-2 FormData Interface][xhr2-fd].\n\n[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface\n[streams2-thing]: http://nodejs.org/api/stream.html#stream_compatibility_with_older_node_versions\n\n## Install\n\n```\nnpm install form-data\n```\n\n## Usage\n\nIn this example we are constructing a form with 3 fields that contain a string,\na buffer and a file stream.\n\n``` javascript\nvar FormData = require('form-data');\nvar fs = require('fs');\n\nvar form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n```\n\nAlso you can use http-response stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar http = require('http');\n\nvar form = new FormData();\n\nhttp.request('http://nodejs.org/images/logo.png', function(response) {\n  form.append('my_field', 'my value');\n  form.append('my_buffer', new Buffer(10));\n  form.append('my_logo', response);\n});\n```\n\nOr @mikeal's request stream:\n\n``` javascript\nvar FormData = require('form-data');\nvar request = require('request');\n\nvar form = new FormData();\n\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_logo', request('http://nodejs.org/images/logo.png'));\n```\n\nIn order to submit this form to a web application, call ```submit(url, [callback])``` method:\n\n``` javascript\nform.submit('http://example.org/', function(err, res) {\n  // res – response object (http.IncomingMessage)  //\n  res.resume(); // for node-0.10.x\n});\n\n```\n\nFor more advanced request manipulations ```submit()``` method returns ```http.ClientRequest``` object, or you can choose from one of the alternative submission methods.\n\n### Alternative submission methods\n\nYou can use node's http client interface:\n\n``` javascript\nvar http = require('http');\n\nvar request = http.request({\n  method: 'post',\n  host: 'example.org',\n  path: '/upload',\n  headers: form.getHeaders()\n});\n\nform.pipe(request);\n\nrequest.on('response', function(res) {\n  console.log(res.statusCode);\n});\n```\n\nOr if you would prefer the `'Content-Length'` header to be set for you:\n\n``` javascript\nform.submit('example.org/upload', function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\nTo use custom headers and pre-known length in parts:\n\n``` javascript\nvar CRLF = '\\r\\n';\nvar form = new FormData();\n\nvar options = {\n  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,\n  knownLength: 1\n};\n\nform.append('my_buffer', buffer, options);\n\nform.submit('http://example.com/', function(err, res) {\n  if (err) throw err;\n  console.log('Done');\n});\n```\n\nForm-Data can recognize and fetch all the required information from common types of streams (```fs.readStream```, ```http.response``` and ```mikeal's request```), for some other types of streams you'd need to provide \"file\"-related information manually:\n\n``` javascript\nsomeModule.stream(function(err, stdout, stderr) {\n  if (err) throw err;\n\n  var form = new FormData();\n\n  form.append('file', stdout, {\n    filename: 'unicycle.jpg',\n    contentType: 'image/jpg',\n    knownLength: 19806\n  });\n\n  form.submit('http://example.com/', function(err, res) {\n    if (err) throw err;\n    console.log('Done');\n  });\n});\n```\n\nFor edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:\n\n``` javascript\nform.submit({\n  host: 'example.com',\n  path: '/probably.php?extra=params',\n  auth: 'username:password'\n}, function(err, res) {\n  console.log(res.statusCode);\n});\n```\n\n## Notes\n\n- ```getLengthSync()``` method DOESN'T calculate length for streams, use ```knownLength``` options as workaround.\n- If it feels like FormData hangs after submit and you're on ```node-0.10```, please check [Compatibility with Older Node Versions][streams2-thing]\n\n## TODO\n\n- Add new streams (0.10) support and try really hard not to break it for 0.8.x.\n\n## License\n\nForm-Data is licensed under the MIT license.\n",
/src/node_modules/request/node_modules/form-data/package.json-39-  "readmeFilename": "Readme.md",
##############################################
/src/node_modules/request/node_modules/form-data/Readme.md-27-form.append('my_buffer', new Buffer(10));
/src/node_modules/request/node_modules/form-data/Readme.md:28:form.append('my_file', fs.createReadStream('/foo/bar.jpg'));
/src/node_modules/request/node_modules/form-data/Readme.md-29-```
##############################################
/src/node_modules/request/node_modules/hawk/node_modules/hoek/README.md-268-
/src/node_modules/request/node_modules/hawk/node_modules/hoek/README.md:269:Hoek.rename(obj, "a", "c");     // obj is now {c : 1, b : 2}
/src/node_modules/request/node_modules/hawk/node_modules/hoek/README.md-270-
##############################################
/src/node_modules/request/node_modules/hawk/node_modules/hoek/package.json-40-  ],
/src/node_modules/request/node_modules/hawk/node_modules/hoek/package.json:41:  "readme": "<a href=\"https://github.com/spumko\"><img src=\"https://raw.github.com/spumko/spumko/master/images/from.png\" align=\"right\" /></a>\r\n![hoek Logo](https://raw.github.com/spumko/hoek/master/images/hoek.png)\r\n\r\nGeneral purpose node utilities\r\n\r\n[![Build Status](https://secure.travis-ci.org/spumko/hoek.png)](http://travis-ci.org/spumko/hoek)\r\n\r\n# Table of Contents\r\n\r\n* [Introduction](#introduction \"Introduction\")\r\n* [Object](#object \"Object\")\r\n  * [clone](#cloneobj \"clone\")\r\n  * [merge](#mergetarget-source-isnulloverride-ismergearrays \"merge\")\r\n  * [applyToDefaults](#applytodefaultsdefaults-options \"applyToDefaults\")\r\n  * [unique](#uniquearray-key \"unique\")\r\n  * [mapToObject](#maptoobjectarray-key \"mapToObject\")\r\n  * [intersect](#intersectarray1-array2 \"intersect\")\r\n  * [matchKeys](#matchkeysobj-keys \"matchKeys\")\r\n  * [flatten](#flattenarray-target \"flatten\")\r\n  * [removeKeys](#removekeysobject-keys \"removeKeys\")\r\n  * [reach](#reachobj-chain \"reach\")\r\n  * [inheritAsync](#inheritasyncself-obj-keys \"inheritAsync\")\r\n  * [rename](#renameobj-from-to \"rename\")\r\n* [Timer](#timer \"Timer\")\r\n* [Binary Encoding/Decoding](#binary \"Binary Encoding/Decoding\")\r\n  * [base64urlEncode](#binary64urlEncodevalue \"binary64urlEncode\")\r\n  * [base64urlDecode](#binary64urlDecodevalue \"binary64urlDecode\")\r\n* [Escaping Characters](#escaped \"Escaping Characters\")\r\n  * [escapeHtml](#escapeHtmlstring \"escapeHtml\")\r\n  * [escapeHeaderAttribute](#escapeHeaderAttributeattribute \"escapeHeaderAttribute\")\r\n  * [escapeRegex](#escapeRegexstring \"escapeRegex\")\r\n* [Errors](#errors \"Errors\")\r\n  * [assert](#assertmessage \"assert\")\r\n  * [abort](#abortmessage \"abort\")\r\n  * [displayStack](#displayStackslice \"displayStack\")\r\n  * [callStack](#callStackslice \"callStack\")\r\n  * [toss](#tosscondition \"toss\")\r\n* [Load files](#load-files \"Load Files\")\r\n  * [loadPackage](#loadPackagedir \"loadpackage\")\r\n  * [loadDirModules](#loadDirModulespath-excludefiles-target \"loaddirmodules\")\r\n\r\n\r\n\r\n# Introduction\r\n\r\nThe *Hoek* general purpose node utilities library is used to aid in a variety of manners. It comes with useful methods for Arrays (clone, merge, applyToDefaults), Objects (removeKeys, copy), Asserting and more. \r\n\r\nFor example, to use Hoek to set configuration with default options:\r\n```javascript\r\nvar Hoek = require('hoek');\r\n\r\nvar default = {url : \"www.github.com\", port : \"8000\", debug : true}\r\n\r\nvar config = Hoek.applyToDefaults(default, {port : \"3000\", admin : true});\r\n\r\n// In this case, config would be { url: 'www.github.com', port: '3000', debug: true, admin: true }\r\n```\r\n\r\nUnder each of the sections (such as Array), there are subsections which correspond to Hoek methods. Each subsection will explain how to use the corresponding method. In each js excerpt below, the var Hoek = require('hoek') is omitted for brevity.\r\n\r\n## Object\r\n\r\nHoek provides several helpful methods for objects and arrays.\r\n\r\n### clone(obj)\r\n\r\nThis method is used to clone an object or an array. A *deep copy* is made (duplicates everything, including values that are objects). \r\n\r\n```javascript\r\n\r\nvar nestedObj = {\r\n        w: /^something$/ig,\r\n        x: {\r\n            a: [1, 2, 3],\r\n            b: 123456,\r\n            c: new Date()\r\n        },\r\n        y: 'y',\r\n        z: new Date()\r\n    };\r\n\r\nvar copy = Hoek.clone(nestedObj);\r\n\r\ncopy.x.b = 100;\r\n\r\nconsole.log(copy.y)        // results in 'y'\r\nconsole.log(nestedObj.x.b) // results in 123456\r\nconsole.log(copy.x.b)      // results in 100\r\n```\r\n\r\n### merge(target, source, isNullOverride, isMergeArrays)\r\nisNullOverride, isMergeArrays default to true\r\n\r\nMerge all the properties of source into target, source wins in conflic, and by default null and undefined from source are applied\r\n\r\n\r\n```javascript\r\n\r\nvar target = {a: 1, b : 2}\r\nvar source = {a: 0, c: 5}\r\nvar source2 = {a: null, c: 5}\r\n\r\nvar targetArray = [1, 2, 3];\r\nvar sourceArray = [4, 5];\r\n\r\nvar newTarget = Hoek.merge(target, source);     // results in {a: 0, b: 2, c: 5}\r\nnewTarget = Hoek.merge(target, source2);        // results in {a: null, b: 2, c: 5}\r\nnewTarget = Hoek.merge(target, source2, false); // results in {a: 1, b: 2, c: 5}\r\n\r\nnewTarget = Hoek.merge(targetArray, sourceArray)              // results in [1, 2, 3, 4, 5]\r\nnewTarget = Hoek.merge(targetArray, sourceArray, true, false) // results in [4, 5]\r\n\r\n\r\n\r\n\r\n```\r\n\r\n### applyToDefaults(defaults, options)\r\n\r\nApply options to a copy of the defaults\r\n\r\n```javascript\r\n\r\nvar defaults = {host: \"localhost\", port: 8000};\r\nvar options = {port: 8080};\r\n\r\nvar config = Hoek.applyToDefaults(defaults, options); // results in {host: \"localhost\", port: 8080};\r\n\r\n\r\n```\r\n\r\n### unique(array, key)\r\n\r\nRemove duplicate items from Array\r\n\r\n```javascript\r\n\r\nvar array = [1, 2, 2, 3, 3, 4, 5, 6];\r\n\r\nvar newArray = Hoek.unique(array); // results in [1,2,3,4,5,6];\r\n\r\narray = [{id: 1}, {id: 1}, {id: 2}];\r\n\r\nnewArray = Hoek.unique(array, \"id\") // results in [{id: 1}, {id: 2}]\r\n\r\n```\r\n\r\n### mapToObject(array, key)\r\n\r\nConvert an Array into an Object\r\n\r\n```javascript\r\n\r\nvar array = [1,2,3];\r\nvar newObject = Hoek.mapToObject(array); // results in [{\"1\": true}, {\"2\": true}, {\"3\": true}]\r\n\r\narray = [{id: 1}, {id: 2}];\r\nnewObject = Hoek.mapToObject(array, \"id\") // results in [{\"id\": 1}, {\"id\": 2}]\r\n\r\n```\r\n### intersect(array1, array2)\r\n\r\nFind the common unique items in two arrays\r\n\r\n```javascript\r\n\r\nvar array1 = [1, 2, 3];\r\nvar array2 = [1, 4, 5];\r\n\r\nvar newArray = Hoek.intersect(array1, array2) // results in [1]\r\n\r\n```\r\n\r\n### matchKeys(obj, keys) \r\n\r\nFind which keys are present\r\n\r\n```javascript\r\n\r\nvar obj = {a: 1, b: 2, c: 3};\r\nvar keys = [\"a\", \"e\"];\r\n\r\nHoek.matchKeys(obj, keys) // returns [\"a\"]\r\n\r\n```\r\n\r\n### flatten(array, target)\r\n\r\nFlatten an array\r\n\r\n```javascript\r\n\r\nvar array = [1, 2, 3];\r\nvar target = [4, 5]; \r\n\r\nvar flattenedArray = Hoek.flatten(array, target) // results in [4, 5, 1, 2, 3];\r\n\r\n```\r\n\r\n### removeKeys(object, keys)\r\n\r\nRemove keys\r\n\r\n```javascript\r\n\r\nvar object = {a: 1, b: 2, c: 3, d: 4};\r\n\r\nvar keys = [\"a\", \"b\"];\r\n\r\nHoek.removeKeys(object, keys) // object is now {c: 3, d: 4}\r\n\r\n```\r\n\r\n### reach(obj, chain)\r\n\r\nConverts an object key chain string to reference\r\n\r\n```javascript\r\n\r\nvar chain = 'a.b.c';\r\nvar obj = {a : {b : { c : 1}}};\r\n\r\nHoek.reach(obj, chain) // returns 1\r\n\r\n```\r\n\r\n### inheritAsync(self, obj, keys) \r\n\r\nInherits a selected set of methods from an object, wrapping functions in asynchronous syntax and catching errors\r\n\r\n```javascript\r\n\r\nvar targetFunc = function () { };\r\n\r\nvar proto = {\r\n                a: function () {\r\n                    return 'a!';\r\n                },\r\n                b: function () {\r\n                    return 'b!';\r\n                },\r\n                c: function () {\r\n                    throw new Error('c!');\r\n                }\r\n            };\r\n\r\nvar keys = ['a', 'c'];\r\n\r\nHoek.inheritAsync(targetFunc, proto, ['a', 'c']);\r\n\r\nvar target = new targetFunc();\r\n\r\ntarget.a(function(err, result){console.log(result)}         // returns 'a!'       \r\n\r\ntarget.c(function(err, result){console.log(result)}         // returns undefined\r\n\r\ntarget.b(function(err, result){console.log(result)}         // gives error: Object [object Object] has no method 'b'\r\n\r\n```\r\n\r\n### rename(obj, from, to)\r\n\r\nRename a key of an object\r\n\r\n```javascript\r\n\r\nvar obj = {a : 1, b : 2};\r\n\r\nHoek.rename(obj, \"a\", \"c\");     // obj is now {c : 1, b : 2}\r\n\r\n```\r\n\r\n\r\n# Timer\r\n\r\nA Timer object. Initializing a new timer object sets the ts to the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC.\r\n\r\n```javascript\r\n\r\n\r\nexample : \r\n\r\n\r\nvar timerObj = new Hoek.Timer();\r\nconsole.log(\"Time is now: \" + timerObj.ts)\r\nconsole.log(\"Elapsed time from initialization: \" + timerObj.elapsed() + 'milliseconds')\r\n\r\n```\r\n\r\n# Binary Encoding/Decoding\r\n\r\n### base64urlEncode(value)\r\n\r\nEncodes value in Base64 or URL encoding\r\n\r\n### base64urlDecode(value)\r\n\r\nDecodes data in Base64 or URL encoding.\r\n# Escaping Characters\r\n\r\nHoek provides convenient methods for escaping html characters. The escaped characters are as followed:\r\n\r\n```javascript\r\n\r\ninternals.htmlEscaped = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '`': '&#x60;'\r\n};\r\n\r\n```\r\n\r\n### escapeHtml(string)\r\n\r\n```javascript\r\n\r\nvar string = '<html> hey </html>';\r\nvar escapedString = Hoek.escapeHtml(string); // returns &lt;html&gt; hey &lt;/html&gt;\r\n\r\n```\r\n\r\n### escapeHeaderAttribute(attribute)\r\n\r\nEscape attribute value for use in HTTP header\r\n\r\n```javascript\r\n\r\nvar a = Hoek.escapeHeaderAttribute('I said \"go w\\\\o me\"');  //returns I said \\\"go w\\\\o me\\\"\r\n\r\n\r\n```\r\n\r\n\r\n### escapeRegex(string)\r\n\r\nEscape string for Regex construction\r\n\r\n```javascript\r\n\r\nvar a = Hoek.escapeRegex('4^f$s.4*5+-_?%=#!:@|~\\\\/`\"(>)[<]d{}s,');  // returns 4\\^f\\$s\\.4\\*5\\+\\-_\\?%\\=#\\!\\:@\\|~\\\\\\/`\"\\(>\\)\\[<\\]d\\{\\}s\\,\r\n\r\n\r\n\r\n```\r\n\r\n# Errors\r\n\r\n### assert(message)\r\n\r\n```javascript\r\n\r\nvar a = 1, b =2;\r\n\r\nHoek.assert(a === b, 'a should equal b');  // ABORT: a should equal b\r\n\r\n```\r\n\r\n### abort(message)\r\n\r\nFirst checks if process.env.NODE_ENV === 'test', and if so, throws error message. Otherwise,\r\ndisplays most recent stack and then exits process.\r\n\r\n\r\n\r\n### displayStack(slice)\r\n\r\nDisplays the trace stack\r\n\r\n```javascript\r\n\r\nvar stack = Hoek.displayStack();\r\nconsole.log(stack) // returns something like:\r\n\r\n[ 'null (/Users/user/Desktop/hoek/test.js:4:18)',\r\n  'Module._compile (module.js:449:26)',\r\n  'Module._extensions..js (module.js:467:10)',\r\n  'Module.load (module.js:356:32)',\r\n  'Module._load (module.js:312:12)',\r\n  'Module.runMain (module.js:492:10)',\r\n  'startup.processNextTick.process._tickCallback (node.js:244:9)' ]\r\n\r\n```\r\n\r\n### callStack(slice)\r\n\r\nReturns a trace stack array.\r\n\r\n```javascript\r\n\r\nvar stack = Hoek.callStack();\r\nconsole.log(stack)  // returns something like:\r\n\r\n[ [ '/Users/user/Desktop/hoek/test.js', 4, 18, null, false ],\r\n  [ 'module.js', 449, 26, 'Module._compile', false ],\r\n  [ 'module.js', 467, 10, 'Module._extensions..js', false ],\r\n  [ 'module.js', 356, 32, 'Module.load', false ],\r\n  [ 'module.js', 312, 12, 'Module._load', false ],\r\n  [ 'module.js', 492, 10, 'Module.runMain', false ],\r\n  [ 'node.js',\r\n    244,\r\n    9,\r\n    'startup.processNextTick.process._tickCallback',\r\n    false ] ]\r\n\r\n\r\n```\r\n\r\n### toss(condition)\r\n\r\ntoss(condition /*, [message], callback */)\r\n\r\nReturn an error as first argument of a callback\r\n\r\n\r\n# Load Files\r\n\r\n### loadPackage(dir)\r\n\r\nLoad and parse package.json process root or given directory\r\n\r\n```javascript\r\n\r\nvar pack = Hoek.loadPackage();  // pack.name === 'hoek'\r\n\r\n```\r\n\r\n### loadDirModules(path, excludeFiles, target) \r\n\r\nLoads modules from a given path; option to exclude files (array).\r\n\r\n\r\n\r\n\r\n",
/src/node_modules/request/node_modules/hawk/node_modules/hoek/package.json-42-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/node_modules/hawk/node_modules/hoek/lib/index.js-445-        try {
/src/node_modules/request/node_modules/hawk/node_modules/hoek/lib/index.js:446:            result = JSON.parse(Fs.readFileSync(filepath));
/src/node_modules/request/node_modules/hawk/node_modules/hoek/lib/index.js-447-        }
##############################################
/src/node_modules/request/node_modules/hawk/node_modules/hoek/test/index.js-813-            var a = { b: 'c' };
/src/node_modules/request/node_modules/hawk/node_modules/hoek/test/index.js:814:            Hoek.rename(a, 'b', 'x');
/src/node_modules/request/node_modules/hawk/node_modules/hoek/test/index.js-815-            expect(a.b).to.not.exist;
##############################################
/src/node_modules/request/node_modules/hawk/README.md-146-
/src/node_modules/request/node_modules/hawk/README.md:147:Http.createServer(handler).listen(8000, 'example.com');
/src/node_modules/request/node_modules/hawk/README.md-148-```
##############################################
/src/node_modules/request/node_modules/hawk/README.md-407-
/src/node_modules/request/node_modules/hawk/README.md:408:Http.createServer(handler).listen(8000, 'example.com');
/src/node_modules/request/node_modules/hawk/README.md-409-```
##############################################
/src/node_modules/request/node_modules/hawk/package.json-44-  ],
/src/node_modules/request/node_modules/hawk/package.json:45:  "readme": "![hawk Logo](https://raw.github.com/hueniverse/hawk/master/images/hawk.png)\n\n<img align=\"right\" src=\"https://raw.github.com/hueniverse/hawk/master/images/logo.png\" /> **Hawk** is an HTTP authentication scheme using a message authentication code (MAC) algorithm to provide partial\nHTTP request cryptographic verification. For more complex use cases such as access delegation, see [Oz](https://github.com/hueniverse/oz).\n\nCurrent version: **1.0**\n\n[![Build Status](https://secure.travis-ci.org/hueniverse/hawk.png)](http://travis-ci.org/hueniverse/hawk)\n\n# Table of Content\n\n- [**Introduction**](#introduction)\n  - [Replay Protection](#replay-protection)\n  - [Usage Example](#usage-example)\n  - [Protocol Example](#protocol-example)\n    - [Payload Validation](#payload-validation)\n    - [Response Payload Validation](#response-payload-validation)\n  - [Browser Support and Considerations](#browser-support-and-considerations)\n<p></p>\n- [**Single URI Authorization**](#single-uri-authorization)\n  - [Usage Example](#bewit-usage-example)\n<p></p>\n- [**Security Considerations**](#security-considerations)\n  - [MAC Keys Transmission](#mac-keys-transmission)\n  - [Confidentiality of Requests](#confidentiality-of-requests)\n  - [Spoofing by Counterfeit Servers](#spoofing-by-counterfeit-servers)\n  - [Plaintext Storage of Credentials](#plaintext-storage-of-credentials)\n  - [Entropy of Keys](#entropy-of-keys)\n  - [Coverage Limitations](#coverage-limitations)\n  - [Future Time Manipulation](#future-time-manipulation)\n  - [Client Clock Poisoning](#client-clock-poisoning)\n  - [Bewit Limitations](#bewit-limitations)\n  - [Host Header Forgery](#host-header-forgery)\n<p></p>\n- [**Frequently Asked Questions**](#frequently-asked-questions)\n<p></p>\n- [**Acknowledgements**](#acknowledgements)\n\n# Introduction\n\n**Hawk** is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with\npartial cryptographic verification of the request and response, covering the HTTP method, request URI, host,\nand optionally the request payload.\n\nSimilar to the HTTP [Digest access authentication schemes](http://www.ietf.org/rfc/rfc2617.txt), **Hawk** uses a set of\nclient credentials which include an identifier (e.g. username) and key (e.g. password). Likewise, just as with the Digest scheme,\nthe key is never included in authenticated requests. Instead, it is used to calculate a request MAC value which is\nincluded in its place.\n\nHowever, **Hawk** has several differences from Digest. In particular, while both use a nonce to limit the possibility of\nreplay attacks, in **Hawk** the client generates the nonce and uses it in combination with a timestamp, leading to less\n\"chattiness\" (interaction with the server).\n\nAlso unlike Digest, this scheme is not intended to protect the key itself (the password in Digest) because\nthe client and server must both have access to the key material in the clear.\n\nThe primary design goals of this scheme are to:\n* simplify and improve HTTP authentication for services that are unwilling or unable to deploy TLS for all resources,\n* secure credentials against leakage (e.g., when the client uses some form of dynamic configuration to determine where\n  to send an authenticated request), and\n* avoid the exposure of credentials sent to a malicious server over an unauthenticated secure channel due to client\n  failure to validate the server's identity as part of its TLS handshake.\n\nIn addition, **Hawk** supports a method for granting third-parties temporary access to individual resources using\na query parameter called _bewit_ (in falconry, a leather strap used to attach a tracking device to the leg of a hawk).\n\nThe **Hawk** scheme requires the establishment of a shared symmetric key between the client and the server,\nwhich is beyond the scope of this module. Typically, the shared credentials are established via an initial\nTLS-protected phase or derived from some other shared confidential information available to both the client\nand the server.\n\n\n## Replay Protection\n\nWithout replay protection, an attacker can use a compromised (but otherwise valid and authenticated) request more \nthan once, gaining access to a protected resource. To mitigate this, clients include both a nonce and a timestamp when \nmaking requests. This gives the server enough information to prevent replay attacks.\n\nThe nonce is generated by the client, and is a string unique across all requests with the same timestamp and\nkey identifier combination. \n\nThe timestamp enables the server to restrict the validity period of the credentials where requests occuring afterwards\nare rejected. It also removes the need for the server to retain an unbounded number of nonce values for future checks.\nBy default, **Hawk** uses a time window of 1 minute to allow for time skew between the client and server (which in\npractice translates to a maximum of 2 minutes as the skew can be positive or negative).\n\nUsing a timestamp requires the client's clock to be in sync with the server's clock. **Hawk** requires both the client\nclock and the server clock to use NTP to ensure synchronization. However, given the limitations of some client types\n(e.g. browsers) to deploy NTP, the server provides the client with its current time (in seconds precision) in response\nto a bad timestamp.\n\nThere is no expectation that the client will adjust its system clock to match the server (in fact, this would be a\npotential attack vector). Instead, the client only uses the server's time to calculate an offset used only\nfor communications with that particular server. The protocol rewards clients with synchronized clocks by reducing\nthe number of round trips required to authenticate the first request.\n\n\n## Usage Example\n\nServer code:\n\n```javascript\nvar Http = require('http');\nvar Hawk = require('hawk');\n\n\n// Credentials lookup function\n\nvar credentialsFunc = function (id, callback) {\n\n    var credentials = {\n        key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n        algorithm: 'sha256',\n        user: 'Steve'\n    };\n\n    return callback(null, credentials);\n};\n\n// Create HTTP server\n\nvar handler = function (req, res) {\n\n    // Authenticate incoming request\n\n    Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n\n        // Prepare response\n\n        var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');\n        var headers = { 'Content-Type': 'text/plain' };\n\n        // Generate Server-Authorization response header\n\n        var header = Hawk.server.header(credentials, artifacts, { payload: payload, contentType: headers['Content-Type'] });\n        headers['Server-Authorization'] = header;\n\n        // Send the response back\n\n        res.writeHead(!err ? 200 : 401, headers);\n        res.end(payload);\n    });\n};\n\n// Start server\n\nHttp.createServer(handler).listen(8000, 'example.com');\n```\n\nClient code:\n\n```javascript\nvar Request = require('request');\nvar Hawk = require('hawk');\n\n\n// Client credentials\n\nvar credentials = {\n    id: 'dh37fgj492je',\n    key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n    algorithm: 'sha256'\n}\n\n// Request options\n\nvar requestOptions = {\n    uri: 'http://example.com:8000/resource/1?b=1&a=2',\n    method: 'GET',\n    headers: {}\n};\n\n// Generate Authorization request header\n\nvar header = Hawk.client.header('http://example.com:8000/resource/1?b=1&a=2', 'GET', { credentials: credentials, ext: 'some-app-data' });\nrequestOptions.headers.Authorization = header.field;\n\n// Send authenticated request\n\nRequest(requestOptions, function (error, response, body) {\n\n    // Authenticate the server's response\n\n    var isValid = Hawk.client.authenticate(response, credentials, header.artifacts, { payload: body });\n\n    // Output results\n\n    console.log(response.statusCode + ': ' + body + (isValid ? ' (valid)' : ' (invalid)'));\n});\n```\n\n**Hawk** utilized the [**SNTP**](https://github.com/hueniverse/sntp) module for time sync management. By default, the local\nmachine time is used. To automatically retrieve and synchronice the clock within the application, use the SNTP 'start()' method.\n\n```javascript\nHawk.sntp.start();\n```\n\n\n## Protocol Example\n\nThe client attempts to access a protected resource without authentication, sending the following HTTP request to\nthe resource server:\n\n```\nGET /resource/1?b=1&a=2 HTTP/1.1\nHost: example.com:8000\n```\n\nThe resource server returns an authentication challenge.\n\n```\nHTTP/1.1 401 Unauthorized\nWWW-Authenticate: Hawk\n```\n\nThe client has previously obtained a set of **Hawk** credentials for accessing resources on the \"http://example.com/\"\nserver. The **Hawk** credentials issued to the client include the following attributes:\n\n* Key identifier: dh37fgj492je\n* Key: werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn\n* Algorithm: sha256\n\nThe client generates the authentication header by calculating a timestamp (e.g. the number of seconds since January 1,\n1970 00:00:00 GMT), generating a nonce, and constructing the normalized request string (each value followed by a newline\ncharacter):\n\n```\nhawk.1.header\n1353832234\nj4h3g2\nGET\n/resource/1?b=1&a=2\nexample.com\n8000\n\nsome-app-ext-data\n\n```\n\nThe request MAC is calculated using HMAC with the specified hash algorithm \"sha256\" and the key over the normalized request string.\nThe result is base64-encoded to produce the request MAC:\n\n```\n6R4rV5iE+NPoym+WwjeHzjAGXUtLNIxmo1vpMofpLAE=\n```\n\nThe client includes the **Hawk** key identifier, timestamp, nonce, application specific data, and request MAC with the request using\nthe HTTP `Authorization` request header field:\n\n```\nGET /resource/1?b=1&a=2 HTTP/1.1\nHost: example.com:8000\nAuthorization: Hawk id=\"dh37fgj492je\", ts=\"1353832234\", nonce=\"j4h3g2\", ext=\"some-app-ext-data\", mac=\"6R4rV5iE+NPoym+WwjeHzjAGXUtLNIxmo1vpMofpLAE=\"\n```\n\nThe server validates the request by calculating the request MAC again based on the request received and verifies the validity\nand scope of the **Hawk** credentials. If valid, the server responds with the requested resource.\n\n\n### Payload Validation\n\n**Hawk** provides optional payload validation. When generating the authentication header, the client calculates a payload hash\nusing the specified hash algorithm. The hash is calculated over the concatenated value of (each followed by a newline character):\n* `hawk.1.payload`\n* the content-type in lowercase, without any parameters (e.g. `application/json`)\n* the request payload prior to any content encoding (the exact representation requirements should be specified by the server for payloads other than simple single-part ascii to ensure interoperability)\n\nFor example:\n\n* Payload: `Thank you for flying Hawk`\n* Content Type: `text/plain`\n* Hash (sha256): `Yi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=`\n\nResults in the following input to the payload hash function (newline terminated values):\n\n```\nhawk.1.payload\ntext/plain\nThank you for flying Hawk\n\n```\n\nWhich produces the following hash value:\n\n```\nYi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=\n```\n\nThe client constructs the normalized request string (newline terminated values):\n\n```\nhawk.1.header\n1353832234\nj4h3g2\nPOST\n/resource/1?a=1&b=2\nexample.com\n8000\nYi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=\nsome-app-ext-data\n\n```\n\nThen calculates the request MAC and includes the **Hawk** key identifier, timestamp, nonce, payload hash, application specific data,\nand request MAC, with the request using the HTTP `Authorization` request header field:\n\n```\nPOST /resource/1?a=1&b=2 HTTP/1.1\nHost: example.com:8000\nAuthorization: Hawk id=\"dh37fgj492je\", ts=\"1353832234\", nonce=\"j4h3g2\", hash=\"Yi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=\", ext=\"some-app-ext-data\", mac=\"aSe1DERmZuRl3pI36/9BdZmnErTw3sNzOOAUlfeKjVw=\"\n```\n\nIt is up to the server if and when it validates the payload for any given request, based solely on it's security policy\nand the nature of the data included.\n\nIf the payload is available at the time of authentication, the server uses the hash value provided by the client to construct\nthe normalized string and validates the MAC. If the MAC is valid, the server calculates the payload hash and compares the value\nwith the provided payload hash in the header. In many cases, checking the MAC first is faster than calculating the payload hash.\n\nHowever, if the payload is not available at authentication time (e.g. too large to fit in memory, streamed elsewhere, or processed\nat a different stage in the application), the server may choose to defer payload validation for later by retaining the hash value\nprovided by the client after validating the MAC.\n\nIt is important to note that MAC validation does not mean the hash value provided by the client is valid, only that the value\nincluded in the header was not modified. Without calculating the payload hash on the server and comparing it to the value provided\nby the client, the payload may be modified by an attacker.\n\n\n## Response Payload Validation\n\n**Hawk** provides partial response payload validation. The server includes the `Server-Authorization` response header which enables the\nclient to authenticate the response and ensure it is talking to the right server. **Hawk** defines the HTTP `Server-Authorization` header\nas a response header using the exact same syntax as the `Authorization` request header field.\n\nThe header is contructed using the same process as the client's request header. The server uses the same credentials and other\nartifacts provided by the client to constructs the normalized request string. The `ext` and `hash` values are replaced with\nnew values based on the server response. The rest as identical to those used by the client.\n\nThe result MAC digest is included with the optional `hash` and `ext` values:\n\n```\nServer-Authorization: Hawk mac=\"XIJRsMl/4oL+nn+vKoeVZPdCHXB4yJkNnBbTbHFZUYE=\", hash=\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\", ext=\"response-specific\"\n```\n\n\n## Browser Support and Considerations\n\nA browser script is provided for including using a `<script>` tag in [lib/browser.js](/lib/browser.js).\n\n**Hawk** relies on the _Server-Authorization_ and _WWW-Authenticate_ headers in its response to communicate with the client.\nTherefore, in case of CORS requests, it is important to consider sending _Access-Control-Expose-Headers_ with the value\n_\"WWW-Authenticate, Server-Authorization\"_ on each response from your server. As explained in the\n[specifications](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header), it will indicate that these headers\ncan safely be accessed by the client (using getResponseHeader() on the XmlHttpRequest object). Otherwise you will be met with a\n[\"simple response header\"](http://www.w3.org/TR/cors/#simple-response-header) which excludes these fields and would prevent the\nHawk client from authenticating the requests.You can read more about the why and how in this\n[article](http://www.html5rocks.com/en/tutorials/cors/#toc-adding-cors-support-to-the-server)\n\n\n# Single URI Authorization\n\nThere are cases in which limited and short-term access to a protected resource is granted to a third party which does not\nhave access to the shared credentials. For example, displaying a protected image on a web page accessed by anyone. **Hawk**\nprovides limited support for such URIs in the form of a _bewit_ - a URI query parameter appended to the request URI which contains\nthe necessary credentials to authenticate the request.\n\nBecause of the significant security risks involved in issuing such access, bewit usage is purposely limited only to GET requests\nand for a finite period of time. Both the client and server can issue bewit credentials, however, the server should not use the same\ncredentials as the client to maintain clear traceability as to who issued which credentials.\n\nIn order to simplify implementation, bewit credentials do not support single-use policy and can be replayed multiple times within\nthe granted access timeframe. \n\n\n## Bewit Usage Example\n\nServer code:\n\n```javascript\nvar Http = require('http');\nvar Hawk = require('hawk');\n\n\n// Credentials lookup function\n\nvar credentialsFunc = function (id, callback) {\n\n    var credentials = {\n        key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n        algorithm: 'sha256'\n    };\n\n    return callback(null, credentials);\n};\n\n// Create HTTP server\n\nvar handler = function (req, res) {\n\n    Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n\n        res.writeHead(!err ? 200 : 401, { 'Content-Type': 'text/plain' });\n        res.end(!err ? 'Access granted' : 'Shoosh!');\n    });\n};\n\nHttp.createServer(handler).listen(8000, 'example.com');\n```\n\nBewit code generation:\n\n```javascript\nvar Request = require('request');\nvar Hawk = require('hawk');\n\n\n// Client credentials\n\nvar credentials = {\n    id: 'dh37fgj492je',\n    key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n    algorithm: 'sha256'\n}\n\n// Generate bewit\n\nvar duration = 60 * 5;      // 5 Minutes\nvar bewit = Hawk.uri.getBewit('http://example.com:8080/resource/1?b=1&a=2', { credentials: credentials, ttlSec: duration, ext: 'some-app-data' });\nvar uri = 'http://example.com:8000/resource/1?b=1&a=2' + '&bewit=' + bewit;\n```\n\n\n# Security Considerations\n\nThe greatest sources of security risks are usually found not in **Hawk** but in the policies and procedures surrounding its use.\nImplementers are strongly encouraged to assess how this module addresses their security requirements. This section includes\nan incomplete list of security considerations that must be reviewed and understood before deploying **Hawk** on the server.\nMany of the protections provided in **Hawk** depends on whether and how they are used.\n\n### MAC Keys Transmission\n\n**Hawk** does not provide any mechanism for obtaining or transmitting the set of shared credentials required. Any mechanism used\nto obtain **Hawk** credentials must ensure that these transmissions are protected using transport-layer mechanisms such as TLS.\n\n### Confidentiality of Requests\n\nWhile **Hawk** provides a mechanism for verifying the integrity of HTTP requests, it provides no guarantee of request\nconfidentiality. Unless other precautions are taken, eavesdroppers will have full access to the request content. Servers should\ncarefully consider the types of data likely to be sent as part of such requests, and employ transport-layer security mechanisms\nto protect sensitive resources.\n\n### Spoofing by Counterfeit Servers\n\n**Hawk** provides limited verification of the server authenticity. When receiving a response back from the server, the server\nmay choose to include a response `Server-Authorization` header which the client can use to verify the response. However, it is up to\nthe server to determine when such measure is included, to up to the client to enforce that policy.\n\nA hostile party could take advantage of this by intercepting the client's requests and returning misleading or otherwise\nincorrect responses. Service providers should consider such attacks when developing services using this protocol, and should\nrequire transport-layer security for any requests where the authenticity of the resource server or of server responses is an issue.\n\n### Plaintext Storage of Credentials\n\nThe **Hawk** key functions the same way passwords do in traditional authentication systems. In order to compute the request MAC,\nthe server must have access to the key in plaintext form. This is in contrast, for example, to modern operating systems, which\nstore only a one-way hash of user credentials.\n\nIf an attacker were to gain access to these keys - or worse, to the server's database of all such keys - he or she would be able\nto perform any action on behalf of any resource owner. Accordingly, it is critical that servers protect these keys from unauthorized\naccess.\n\n### Entropy of Keys\n\nUnless a transport-layer security protocol is used, eavesdroppers will have full access to authenticated requests and request\nMAC values, and will thus be able to mount offline brute-force attacks to recover the key used. Servers should be careful to\nassign keys which are long enough, and random enough, to resist such attacks for at least the length of time that the **Hawk**\ncredentials are valid.\n\nFor example, if the credentials are valid for two weeks, servers should ensure that it is not possible to mount a brute force\nattack that recovers the key in less than two weeks. Of course, servers are urged to err on the side of caution, and use the\nlongest key reasonable.\n\nIt is equally important that the pseudo-random number generator (PRNG) used to generate these keys be of sufficiently high\nquality. Many PRNG implementations generate number sequences that may appear to be random, but which nevertheless exhibit\npatterns or other weaknesses which make cryptanalysis or brute force attacks easier. Implementers should be careful to use\ncryptographically secure PRNGs to avoid these problems.\n\n### Coverage Limitations\n\nThe request MAC only covers the HTTP `Host` header and optionally the `Content-Type` header. It does not cover any other headers\nwhich can often affect how the request body is interpreted by the server. If the server behavior is influenced by the presence\nor value of such headers, an attacker can manipulate the request headers without being detected. Implementers should use the\n`ext` feature to pass application-specific information via the `Authorization` header which is protected by the request MAC.\n\nThe response authentication, when performed, only covers the response payload, content-type, and the request information \nprovided by the client in it's request (method, resource, timestamp, nonce, etc.). It does not cover the HTTP status code or\nany other response header field (e.g. Location) which can affect the client's behaviour.\n\n### Future Time Manipulation\n\nThe protocol relies on a clock sync between the client and server. To accomplish this, the server informs the client of its\ncurrent time when an invalid timestamp is received.\n\nIf an attacker is able to manipulate this information and cause the client to use an incorrect time, it would be able to cause\nthe client to generate authenticated requests using time in the future. Such requests will fail when sent by the client, and will\nnot likely leave a trace on the server (given the common implementation of nonce, if at all enforced). The attacker will then\nbe able to replay the request at the correct time without detection.\n\nThe client must only use the time information provided by the server if:\n* it was delivered over a TLS connection and the server identity has been verified, or\n* the `tsm` MAC digest calculated using the same client credentials over the timestamp has been verified.\n\n### Client Clock Poisoning\n\nWhen receiving a request with a bad timestamp, the server provides the client with its current time. The client must never use\nthe time received from the server to adjust its own clock, and must only use it to calculate an offset for communicating with\nthat particular server.\n\n### Bewit Limitations\n\nSpecial care must be taken when issuing bewit credentials to third parties. Bewit credentials are valid until expiration and cannot\nbe revoked or limited without using other means. Whatever resource they grant access to will be completely exposed to anyone with\naccess to the bewit credentials which act as bearer credentials for that particular resource. While bewit usage is limited to GET\nrequests only and therefore cannot be used to perform transactions or change server state, it can still be used to expose private\nand sensitive information.\n\n### Host Header Forgery\n\nHawk validates the incoming request MAC against the incoming HTTP Host header. However, unless the optional `host` and `port`\noptions are used with `server.authenticate()`, a malicous client can mint new host names pointing to the server's IP address and\nuse that to craft an attack by sending a valid request that's meant for another hostname than the one used by the server. Server\nimplementors must manually verify that the host header received matches their expectation (or use the options mentioned above).\n\n# Frequently Asked Questions\n\n### Where is the protocol specification?\n\nIf you are looking for some prose explaining how all this works, **this is it**. **Hawk** is being developed as an open source\nproject instead of a standard. In other words, the [code](/hueniverse/hawk/tree/master/lib) is the specification. Not sure about\nsomething? Open an issue!\n\n### Is it done?\n\nAt if version 0.10.0, **Hawk** is feature-complete. However, until this module reaches version 1.0.0 it is considered experimental\nand is likely to change. This also means your feedback and contribution are very welcome. Feel free to open issues with questions\nand suggestions.\n\n### Where can I find **Hawk** implementations in other languages?\n\n**Hawk**'s only reference implementation is provided in JavaScript as a node.js module. However, others are actively porting it to other\nplatforms. There is already a [PHP](https://github.com/alexbilbie/PHP-Hawk),\n[.NET](https://github.com/pcibraro/hawknet), and [JAVA](https://github.com/wealdtech/hawk) libraries available. The full list\nis maintained [here](https://github.com/hueniverse/hawk/issues?labels=port). Please add an issue if you are working on another\nport. A cross-platform test-suite is in the works.\n\n### Why isn't the algorithm part of the challenge or dynamically negotiated?\n\nThe algorithm used is closely related to the key issued as different algorithms require different key sizes (and other\nrequirements). While some keys can be used for multiple algorithm, the protocol is designed to closely bind the key and algorithm\ntogether as part of the issued credentials.\n\n### Why is Host and Content-Type the only headers covered by the request MAC?\n\nIt is really hard to include other headers. Headers can be changed by proxies and other intermediaries and there is no\nwell-established way to normalize them. Many platforms change the case of header field names and values. The only\nstraight-forward solution is to include the headers in some blob (say, base64 encoded JSON) and include that with the request,\nan approach taken by JWT and other such formats. However, that design violates the HTTP header boundaries, repeats information,\nand introduces other security issues because firewalls will not be aware of these \"hidden\" headers. In addition, any information\nrepeated must be compared to the duplicated information in the header and therefore only moves the problem elsewhere.\n\n### Why not just use HTTP Digest?\n\nDigest requires pre-negotiation to establish a nonce. This means you can't just make a request - you must first send\na protocol handshake to the server. This pattern has become unacceptable for most web services, especially mobile\nwhere extra round-trip are costly.\n\n### Why bother with all this nonce and timestamp business?\n\n**Hawk** is an attempt to find a reasonable, practical compromise between security and usability. OAuth 1.0 got timestamp\nand nonces halfway right but failed when it came to scalability and consistent developer experience. **Hawk** addresses\nit by requiring the client to sync its clock, but provides it with tools to accomplish it.\n\nIn general, replay protection is a matter of application-specific threat model. It is less of an issue on a TLS-protected\nsystem where the clients are implemented using best practices and are under the control of the server. Instead of dropping\nreplay protection, **Hawk** offers a required time window and an optional nonce verification. Together, it provides developers\nwith the ability to decide how to enforce their security policy without impacting the client's implementation.\n\n### What are `app` and `dlg` in the authorization header and normalized mac string?\n\nThe original motivation for **Hawk** was to replace the OAuth 1.0 use cases. This included both a simple client-server mode which\nthis module is specifically designed for, and a delegated access mode which is being developed separately in\n[Oz](https://github.com/hueniverse/oz). In addition to the **Hawk** use cases, Oz requires another attribute: the application id `app`.\nThis provides binding between the credentials and the application in a way that prevents an attacker from tricking an application\nto use credentials issued to someone else. It also has an optional 'delegated-by' attribute `dlg` which is the application id of the\napplication the credentials were directly issued to. The goal of these two additions is to allow Oz to utilize **Hawk** directly,\nbut with the additional security of delegated credentials.\n\n### What is the purpose of the static strings used in each normalized MAC input?\n\nWhen calculating a hash or MAC, a static prefix (tag) is added. The prefix is used to prevent MAC values from being\nused or reused for a purpose other than what they were created for (i.e. prevents switching MAC values between a request,\nresponse, and a bewit use cases). It also protects against expliots created after a potential change in how the protocol\ncreates the normalized string. For example, if a future version would switch the order of nonce and timestamp, it\ncan create an exploit opportunity for cases where the nonce is similar in format to a timestamp.\n\n### Does **Hawk** have anything to do with OAuth?\n\nShort answer: no.\n\n**Hawk** was originally proposed as the OAuth MAC Token specification. However, the OAuth working group in its consistent\nincompetence failed to produce a final, usable solution to address one of the most popular use cases of OAuth 1.0 - using it\nto authenticate simple client-server transactions (i.e. two-legged). As you can guess, the OAuth working group is still hard\nat work to produce more garbage.\n\n**Hawk** provides a simple HTTP authentication scheme for making client-server requests. It does not address the OAuth use case\nof delegating access to a third party. If you are looking for an OAuth alternative, check out [Oz](https://github.com/hueniverse/oz).\n\n\n# Acknowledgements\n\n**Hawk** is a derivative work of the [HTTP MAC Authentication Scheme](http://tools.ietf.org/html/draft-hammer-oauth-v2-mac-token-05) proposal\nco-authored by Ben Adida, Adam Barth, and Eran Hammer, which in turn was based on the OAuth 1.0 community specification.\n\nSpecial thanks to Ben Laurie for his always insightful feedback and advice.\n\nThe **Hawk** logo was created by [Chris Carrasco](http://chriscarrasco.com).\n",
/src/node_modules/request/node_modules/hawk/package.json-46-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/node_modules/hawk/lib/client.js-17-/*
/src/node_modules/request/node_modules/hawk/lib/client.js:18:    uri: 'http://example.com/resource?a=b' or object from Url.parse()
/src/node_modules/request/node_modules/hawk/lib/client.js-19-    method: HTTP verb (e.g. 'GET', 'POST')
##############################################
/src/node_modules/request/node_modules/hawk/lib/client.js-82-    if (typeof uri === 'string') {
/src/node_modules/request/node_modules/hawk/lib/client.js:83:        uri = Url.parse(uri);
/src/node_modules/request/node_modules/hawk/lib/client.js-84-    }
##############################################
/src/node_modules/request/node_modules/hawk/lib/client.js-207-/*
/src/node_modules/request/node_modules/hawk/lib/client.js:208:    uri: 'http://example.com/resource?a=b' or object from Url.parse()
/src/node_modules/request/node_modules/hawk/lib/client.js-209-    options: {
##############################################
/src/node_modules/request/node_modules/hawk/lib/client.js-263-    if (typeof uri === 'string') {
/src/node_modules/request/node_modules/hawk/lib/client.js:264:        uri = Url.parse(uri);
/src/node_modules/request/node_modules/hawk/lib/client.js-265-    }
##############################################
/src/node_modules/request/node_modules/hawk/lib/browser.js-480-
/src/node_modules/request/node_modules/hawk/lib/browser.js:481:var CryptoJS=CryptoJS||function(h,r){var k={},l=k.lib={},n=function(){},f=l.Base={extend:function(a){n.prototype=this;var b=new n;a&&b.mixIn(a);b.hasOwnProperty("init")||(b.init=function(){b.$super.init.apply(this,arguments)});b.init.prototype=b;b.$super=this;return b},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},j=l.WordArray=f.extend({init:function(a,b){a=this.words=a||[];this.sigBytes=b!=r?b:4*a.length},toString:function(a){return(a||s).stringify(this)},concat:function(a){var b=this.words,d=a.words,c=this.sigBytes;a=a.sigBytes;this.clamp();if(c%4)for(var e=0;e<a;e++)b[c+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((c+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)b[c+e>>>2]=d[e>>>2];else b.push.apply(b,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,b=this.sigBytes;a[b>>>2]&=4294967295<<32-8*(b%4);a.length=h.ceil(b/4)},clone:function(){var a=f.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var b=[],d=0;d<a;d+=4)b.push(4294967296*h.random()|0);return new j.init(b,a)}}),m=k.enc={},s=m.Hex={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++){var e=b[c>>>2]>>>24-8*(c%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join("")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c+=2)d[c>>>3]|=parseInt(a.substr(c,2),16)<<24-4*(c%8);return new j.init(d,b/2)}},p=m.Latin1={stringify:function(a){var b=a.words;a=a.sigBytes;for(var d=[],c=0;c<a;c++)d.push(String.fromCharCode(b[c>>>2]>>>24-8*(c%4)&255));return d.join("")},parse:function(a){for(var b=a.length,d=[],c=0;c<b;c++)d[c>>>2]|=(a.charCodeAt(c)&255)<<24-8*(c%4);return new j.init(d,b)}},t=m.Utf8={stringify:function(a){try{return decodeURIComponent(escape(p.stringify(a)))}catch(b){throw Error("Malformed UTF-8 data");}},parse:function(a){return p.parse(unescape(encodeURIComponent(a)))}},q=l.BufferedBlockAlgorithm=f.extend({reset:function(){this._data=new j.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=t.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var b=this._data,d=b.words,c=b.sigBytes,e=this.blockSize,f=c/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;c=h.min(4*a,c);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);b.sigBytes-=c}return new j.init(g,c)},clone:function(){var a=f.clone.call(this);a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:f.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,d){return(new a.init(d)).finalize(b)}},_createHmacHelper:function(a){return function(b,d){return(new u.HMAC.init(a,d)).finalize(b)}}});var u=k.algo={};return k}(Math);
/src/node_modules/request/node_modules/hawk/lib/browser.js-482-(function () { var k = CryptoJS, b = k.lib, m = b.WordArray, l = b.Hasher, d = [], b = k.algo.SHA1 = l.extend({ _doReset: function () { this._hash = new m.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]) }, _doProcessBlock: function (n, p) { for (var a = this._hash.words, e = a[0], f = a[1], h = a[2], j = a[3], b = a[4], c = 0; 80 > c; c++) { if (16 > c) d[c] = n[p + c] | 0; else { var g = d[c - 3] ^ d[c - 8] ^ d[c - 14] ^ d[c - 16]; d[c] = g << 1 | g >>> 31 } g = (e << 5 | e >>> 27) + b + d[c]; g = 20 > c ? g + ((f & h | ~f & j) + 1518500249) : 40 > c ? g + ((f ^ h ^ j) + 1859775393) : 60 > c ? g + ((f & h | f & j | h & j) - 1894007588) : g + ((f ^ h ^ j) - 899497514); b = j; j = h; h = f << 30 | f >>> 2; f = e; e = g } a[0] = a[0] + e | 0; a[1] = a[1] + f | 0; a[2] = a[2] + h | 0; a[3] = a[3] + j | 0; a[4] = a[4] + b | 0 }, _doFinalize: function () { var b = this._data, d = b.words, a = 8 * this._nDataBytes, e = 8 * b.sigBytes; d[e >>> 5] |= 128 << 24 - e % 32; d[(e + 64 >>> 9 << 4) + 14] = Math.floor(a / 4294967296); d[(e + 64 >>> 9 << 4) + 15] = a; b.sigBytes = 4 * d.length; this._process(); return this._hash }, clone: function () { var b = l.clone.call(this); b._hash = this._hash.clone(); return b } }); k.SHA1 = l._createHelper(b); k.HmacSHA1 = l._createHmacHelper(b) })();
/src/node_modules/request/node_modules/hawk/lib/browser.js-483-(function (k) { for (var g = CryptoJS, h = g.lib, v = h.WordArray, j = h.Hasher, h = g.algo, s = [], t = [], u = function (q) { return 4294967296 * (q - (q | 0)) | 0 }, l = 2, b = 0; 64 > b;) { var d; a: { d = l; for (var w = k.sqrt(d), r = 2; r <= w; r++) if (!(d % r)) { d = !1; break a } d = !0 } d && (8 > b && (s[b] = u(k.pow(l, 0.5))), t[b] = u(k.pow(l, 1 / 3)), b++); l++ } var n = [], h = h.SHA256 = j.extend({ _doReset: function () { this._hash = new v.init(s.slice(0)) }, _doProcessBlock: function (q, h) { for (var a = this._hash.words, c = a[0], d = a[1], b = a[2], k = a[3], f = a[4], g = a[5], j = a[6], l = a[7], e = 0; 64 > e; e++) { if (16 > e) n[e] = q[h + e] | 0; else { var m = n[e - 15], p = n[e - 2]; n[e] = ((m << 25 | m >>> 7) ^ (m << 14 | m >>> 18) ^ m >>> 3) + n[e - 7] + ((p << 15 | p >>> 17) ^ (p << 13 | p >>> 19) ^ p >>> 10) + n[e - 16] } m = l + ((f << 26 | f >>> 6) ^ (f << 21 | f >>> 11) ^ (f << 7 | f >>> 25)) + (f & g ^ ~f & j) + t[e] + n[e]; p = ((c << 30 | c >>> 2) ^ (c << 19 | c >>> 13) ^ (c << 10 | c >>> 22)) + (c & d ^ c & b ^ d & b); l = j; j = g; g = f; f = k + m | 0; k = b; b = d; d = c; c = m + p | 0 } a[0] = a[0] + c | 0; a[1] = a[1] + d | 0; a[2] = a[2] + b | 0; a[3] = a[3] + k | 0; a[4] = a[4] + f | 0; a[5] = a[5] + g | 0; a[6] = a[6] + j | 0; a[7] = a[7] + l | 0 }, _doFinalize: function () { var d = this._data, b = d.words, a = 8 * this._nDataBytes, c = 8 * d.sigBytes; b[c >>> 5] |= 128 << 24 - c % 32; b[(c + 64 >>> 9 << 4) + 14] = k.floor(a / 4294967296); b[(c + 64 >>> 9 << 4) + 15] = a; d.sigBytes = 4 * b.length; this._process(); return this._hash }, clone: function () { var b = j.clone.call(this); b._hash = this._hash.clone(); return b } }); g.SHA256 = j._createHelper(h); g.HmacSHA256 = j._createHmacHelper(h) })(Math);
/src/node_modules/request/node_modules/hawk/lib/browser.js:484:(function(){var c=CryptoJS,k=c.enc.Utf8;c.algo.HMAC=c.lib.Base.extend({init:function(a,b){a=this._hasher=new a.init;"string"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++)h[d]^=1549556828,j[d]^=909522486;f.sigBytes=g.sigBytes=e;this.reset()},reset:function(){var a=this._hasher;a.reset();a.update(this._iKey)},update:function(a){this._hasher.update(a);return this},finalize:function(a){var b=this._hasher;a=b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a))}})})();
/src/node_modules/request/node_modules/hawk/lib/browser.js-485-(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3)for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++)b.push(c.charAt(d>>>6*(3-g)&63));if(e=c.charAt(64))for(;b.length%4;)b.push(e);return b.join("")},parse:function(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++)if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++}return j.create(c,a)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}})();
##############################################
/src/node_modules/request/node_modules/hawk/test/index.js-46-
/src/node_modules/request/node_modules/hawk/test/index.js:47:            req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials, ext: 'some-app-data' }).field;
/src/node_modules/request/node_modules/hawk/test/index.js-48-            expect(req.authorization).to.exist;
##############################################
/src/node_modules/request/node_modules/hawk/example/usage.js-46-
/src/node_modules/request/node_modules/hawk/example/usage.js:47:Http.createServer(handler).listen(8000, '127.0.0.1');
/src/node_modules/request/node_modules/hawk/example/usage.js-48-
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-9-var Cookie = cookies.Cookie;
/src/node_modules/request/node_modules/tough-cookie/README.md:10:var cookie = Cookie.parse(header);
/src/node_modules/request/node_modules/tough-cookie/README.md-11-cookie.value = 'somethingdifferent';
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-41-
/src/node_modules/request/node_modules/tough-cookie/README.md:42:Parse a cookie date string into a `Date`.  Parses according to RFC6265 Section 5.1.1, not `Date.parse()`.  If strict is set to true then leading/trailing non-seperator characters around the time part will cause the parsing to fail (e.g. "Thu, 01 Jan 1970 00:00:010 GMT" has an extra trailing zero but Chrome, an assumedly RFC-compliant browser, treats this as valid).
/src/node_modules/request/node_modules/tough-cookie/README.md-43-
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-65-
/src/node_modules/request/node_modules/tough-cookie/README.md:66:The `path` parameter MUST be _only_ the pathname part of a URI (i.e. excludes the hostname, query, fragment, etc.).  This is the `.pathname` property of node's `uri.parse()` output.
/src/node_modules/request/node_modules/tough-cookie/README.md-67-
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-77-
/src/node_modules/request/node_modules/tough-cookie/README.md:78:alias for `Cookie.parse(header[,strict])`
/src/node_modules/request/node_modules/tough-cookie/README.md-79-
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-117-
/src/node_modules/request/node_modules/tough-cookie/README.md:118:Cookie.parse(header[,strict=false])
/src/node_modules/request/node_modules/tough-cookie/README.md-119------------------------------------
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-128-else
/src/node_modules/request/node_modules/tough-cookie/README.md:129:  cookies = [Cookie.parse(res.headers['set-cookie'])];
/src/node_modules/request/node_modules/tough-cookie/README.md-130-```
##############################################
/src/node_modules/request/node_modules/tough-cookie/README.md-134-
/src/node_modules/request/node_modules/tough-cookie/README.md:135:Convert a JSON string to a `Cookie` object.  Does a `JSON.parse()` and converts the `.created`, `.lastAccessed` and `.expires` properties into `Date` objects.
/src/node_modules/request/node_modules/tough-cookie/README.md-136-
##############################################
/src/node_modules/request/node_modules/tough-cookie/package.json-41-  },
/src/node_modules/request/node_modules/tough-cookie/package.json:42:  "readme": "[RFC6265](http://tools.ietf.org/html/rfc6265) Cookies and CookieJar for Node.js\n\n![Tough Cookie](http://www.goinstant.com.s3.amazonaws.com/tough-cookie.jpg)\n\n# Synopsis\n\n``` javascript\nvar cookies = require('tough-cookie'); // note: not 'cookie', 'cookies' or 'node-cookie'\nvar Cookie = cookies.Cookie;\nvar cookie = Cookie.parse(header);\ncookie.value = 'somethingdifferent';\nheader = cookie.toString();\n\nvar cookiejar = new cookies.CookieJar();\ncookiejar.setCookie(cookie, 'http://currentdomain.example.com/path', cb);\n// ...\ncookiejar.getCookies('http://example.com/otherpath',function(err,cookies) {\n  res.headers['cookie'] = cookies.join('; ');\n});\n```\n\n# Installation\n\nIt's _so_ easy!\n\n`npm install tough-cookie`\n\nRequires `punycode`, which should get installed automatically for you.  Note that node.js v0.6.2+ bundles punycode by default.\n\nWhy the name?  NPM modules `cookie`, `cookies` and `cookiejar` were already taken.\n\n# API\n\ncookies\n=======\n\nFunctions on the module you get from `require('tough-cookie')`.  All can be used as pure functions and don't need to be \"bound\".\n\nparseDate(string[,strict])\n-----------------\n\nParse a cookie date string into a `Date`.  Parses according to RFC6265 Section 5.1.1, not `Date.parse()`.  If strict is set to true then leading/trailing non-seperator characters around the time part will cause the parsing to fail (e.g. \"Thu, 01 Jan 1970 00:00:010 GMT\" has an extra trailing zero but Chrome, an assumedly RFC-compliant browser, treats this as valid).\n\nformatDate(date)\n----------------\n\nFormat a Date into a RFC1123 string (the RFC6265-recommended format).\n\ncanonicalDomain(str)\n--------------------\n\nTransforms a domain-name into a canonical domain-name.  The canonical domain-name is a trimmed, lowercased, stripped-of-leading-dot and optionally punycode-encoded domain-name (Section 5.1.2 of RFC6265).  For the most part, this function is idempotent (can be run again on its output without ill effects).\n\ndomainMatch(str,domStr[,canonicalize=true])\n-------------------------------------------\n\nAnswers \"does this real domain match the domain in a cookie?\".  The `str` is the \"current\" domain-name and the `domStr` is the \"cookie\" domain-name.  Matches according to RFC6265 Section 5.1.3, but it helps to think of it as a \"suffix match\".\n\nThe `canonicalize` parameter will run the other two paramters through `canonicalDomain` or not.\n\ndefaultPath(path)\n-----------------\n\nGiven a current request/response path, gives the Path apropriate for storing in a cookie.  This is basically the \"directory\" of a \"file\" in the path, but is specified by Section 5.1.4 of the RFC.\n\nThe `path` parameter MUST be _only_ the pathname part of a URI (i.e. excludes the hostname, query, fragment, etc.).  This is the `.pathname` property of node's `uri.parse()` output.\n\npathMatch(reqPath,cookiePath)\n-----------------------------\n\nAnswers \"does the request-path path-match a given cookie-path?\" as per RFC6265 Section 5.1.4.  Returns a boolean.\n\nThis is essentially a prefix-match where `cookiePath` is a prefix of `reqPath`.\n\nparse(header[,strict=false])\n----------------------------\n\nalias for `Cookie.parse(header[,strict])`\n\nfromJSON(string)\n----------------\n\nalias for `Cookie.fromJSON(string)`\n\ngetPublicSuffix(hostname)\n-------------------------\n\nReturns the public suffix of this hostname.  The public suffix is the shortest domain-name upon which a cookie can be set.  Returns `null` if the hostname cannot have cookies set for it.\n\nFor example: `www.example.com` and `www.subdomain.example.com` both have public suffix `example.com`.\n\nFor further information, see http://publicsuffix.org/.  This module derives its list from that site.\n\ncookieCompare(a,b)\n------------------\n\nFor use with `.sort()`, sorts a list of cookies into the recommended order given in the RFC (Section 5.4 step 2).  Longest `.path`s go first, then sorted oldest to youngest.\n\n``` javascript\nvar cookies = [ /* unsorted array of Cookie objects */ ];\ncookies = cookies.sort(cookieCompare);\n```\n\npermuteDomain(domain)\n---------------------\n\nGenerates a list of all possible domains that `domainMatch()` the parameter.  May be handy for implementing cookie stores.\n\n\npermutePath(path)\n-----------------\n\nGenerates a list of all possible paths that `pathMatch()` the parameter.  May be handy for implementing cookie stores.\n\nCookie\n======\n\nCookie.parse(header[,strict=false])\n-----------------------------------\n\nParses a single Cookie or Set-Cookie HTTP header into a `Cookie` object.  Returns `undefined` if the string can't be parsed.  If in strict mode, returns `undefined` if the cookie doesn't follow the guidelines in section 4 of RFC6265.  Generally speaking, strict mode can be used to validate your own generated Set-Cookie headers, but acting as a client you want to be lenient and leave strict mode off.\n\nHere's how to process the Set-Cookie header(s) on a node HTTP/HTTPS response:\n\n``` javascript\nif (res.headers['set-cookie'] instanceof Array)\n  cookies = res.headers['set-cookie'].map(Cookie.parse);\nelse\n  cookies = [Cookie.parse(res.headers['set-cookie'])];\n```\n\nCookie.fromJSON(string)\n-----------------------\n\nConvert a JSON string to a `Cookie` object.  Does a `JSON.parse()` and converts the `.created`, `.lastAccessed` and `.expires` properties into `Date` objects.\n\nProperties\n==========\n\n  * _key_ - string - the name or key of the cookie (default \"\")\n  * _value_ - string - the value of the cookie (default \"\")\n  * _expires_ - `Date` - if set, the `Expires=` attribute of the cookie (defaults to the string `\"Infinity\"`). See `setExpires()`\n  * _maxAge_ - seconds - if set, the `Max-Age=` attribute _in seconds_ of the cookie.  May also be set to strings `\"Infinity\"` and `\"-Infinity\"` for non-expiry and immediate-expiry, respectively.  See `setMaxAge()`\n  * _domain_ - string - the `Domain=` attribute of the cookie\n  * _path_ - string - the `Path=` of the cookie\n  * _secure_ - boolean - the `Secure` cookie flag\n  * _httpOnly_ - boolean - the `HttpOnly` cookie flag\n  * _extensions_ - `Array` - any unrecognized cookie attributes as strings (even if equal-signs inside)\n               \nAfter a cookie has been passed through `CookieJar.setCookie()` it will have the following additional attributes:\n\n  * _hostOnly_ - boolean - is this a host-only cookie (i.e. no Domain field was set, but was instead implied)\n  * _pathIsDefault_ - boolean - if true, there was no Path field on the cookie and `defaultPath()` was used to derive one.\n  * _created_ - `Date` - when this cookie was added to the jar\n  * _lastAccessed_ - `Date` - last time the cookie got accessed. Will affect cookie cleaning once implemented.  Using `cookiejar.getCookies(...)` will update this attribute.\n\nConstruction([{options}])\n------------\n\nReceives an options object that can contain any Cookie properties, uses the default for unspecified properties.\n\n.toString()\n-----------\n\nencode to a Set-Cookie header value.  The Expires cookie field is set using `formatDate()`, but is omitted entirely if `.expires` is `Infinity`.\n\n.cookieString()\n---------------\n\nencode to a Cookie header value (i.e. the `.key` and `.value` properties joined with '=').\n\n.setExpires(String)\n-------------------\n\nsets the expiry based on a date-string passed through `parseDate()`.  If parseDate returns `null` (i.e. can't parse this date string), `.expires` is set to `\"Infinity\"` (a string) is set.\n\n.setMaxAge(number)\n-------------------\n\nsets the maxAge in seconds.  Coerces `-Infinity` to `\"-Infinity\"` and `Infinity` to `\"Infinity\"` so it JSON serializes correctly.\n\n.expiryTime([now=Date.now()])\n-----------------------------\n\n.expiryDate([now=Date.now()])\n-----------------------------\n\nexpiryTime() Computes the absolute unix-epoch milliseconds that this cookie expires. expiryDate() works similarly, except it returns a `Date` object.  Note that in both cases the `now` parameter should be milliseconds.\n\nMax-Age takes precedence over Expires (as per the RFC). The `.created` attribute -- or, by default, the `now` paramter -- is used to offset the `.maxAge` attribute.\n\nIf Expires (`.expires`) is set, that's returned.\n\nOtherwise, `expiryTime()` returns `Infinity` and `expiryDate()` returns a `Date` object for \"Tue, 19 Jan 2038 03:14:07 GMT\" (latest date that can be expressed by a 32-bit `time_t`; the common limit for most user-agents).\n\n.TTL([now=Date.now()])\n---------\n\ncompute the TTL relative to `now` (milliseconds).  The same precedence rules as for `expiryTime`/`expiryDate` apply.\n\nThe \"number\" `Infinity` is returned for cookies without an explicit expiry and `0` is returned if the cookie is expired.  Otherwise a time-to-live in milliseconds is returned.\n\n.canonicalizedDoman()\n---------------------\n\n.cdomain()\n----------\n\nreturn the canonicalized `.domain` field.  This is lower-cased and punycode (RFC3490) encoded if the domain has any non-ASCII characters.\n\n.validate()\n-----------\n\nStatus: *IN PROGRESS*. Works for a few things, but is by no means comprehensive.\n\nvalidates cookie attributes for semantic correctness.  Useful for \"lint\" checking any Set-Cookie headers you generate.  For now, it returns a boolean, but eventually could return a reason string -- you can future-proof with this construct:\n\n``` javascript\nif (cookie.validate() === true) {\n  // it's tasty\n} else {\n  // yuck!\n}\n```\n\nCookieJar\n=========\n\nConstruction([store = new MemoryCookieStore()][, rejectPublicSuffixes])\n------------\n\nSimply use `new CookieJar()`.  If you'd like to use a custom store, pass that to the constructor otherwise a `MemoryCookieStore` will be created and used.\n\n\nAttributes\n----------\n\n  * _rejectPublicSuffixes_ - boolean - reject cookies with domains like \"com\" and \"co.uk\" (default: `true`)\n                         \nSince eventually this module would like to support database/remote/etc. CookieJars, continuation passing style is used for CookieJar methods.\n\n.setCookie(cookieOrString, currentUrl, [{options},] cb(err,cookie))\n-------------------------------------------------------------------\n\nAttempt to set the cookie in the cookie jar.  If the operation fails, an error will be given to the callback `cb`, otherwise the cookie is passed through.  The cookie will have updated `.created`, `.lastAccessed` and `.hostOnly` properties.\n\nThe `options` object can be omitted and can have the following properties:\n\n  * _http_ - boolean - default `true` - indicates if this is an HTTP or non-HTTP API.  Affects HttpOnly cookies.\n  * _secure_ - boolean - autodetect from url - indicates if this is a \"Secure\" API.  If the currentUrl starts with `https:` or `wss:` then this is defaulted to `true`, otherwise `false`.\n  * _now_ - Date - default `new Date()` - what to use for the creation/access time of cookies\n  * _strict_ - boolean - default `false` - perform extra checks\n  * _ignoreError_ - boolean - default `false` - silently ignore things like parse errors and invalid domains.  CookieStore errors aren't ignored by this option.\n\nAs per the RFC, the `.hostOnly` property is set if there was no \"Domain=\" parameter in the cookie string (or `.domain` was null on the Cookie object).  The `.domain` property is set to the fully-qualified hostname of `currentUrl` in this case.  Matching this cookie requires an exact hostname match (not a `domainMatch` as per usual).\n\n.storeCookie(cookie, [{options},] cb(err,cookie))\n-------------------------------------------------\n\n__REMOVED__ removed in lieu of the CookieStore API below\n                                                \n.getCookies(currentUrl, [{options},] cb(err,cookies))\n-----------------------------------------------------\n\nRetrieve the list of cookies that can be sent in a Cookie header for the current url.\n\nIf an error is encountered, that's passed as `err` to the callback, otherwise an `Array` of `Cookie` objects is passed.  The array is sorted with `cookieCompare()` unless the `{sort:false}` option is given.\n\nThe `options` object can be omitted and can have the following properties:\n\n  * _http_ - boolean - default `true` - indicates if this is an HTTP or non-HTTP API.  Affects HttpOnly cookies.\n  * _secure_ - boolean - autodetect from url - indicates if this is a \"Secure\" API.  If the currentUrl starts with `https:` or `wss:` then this is defaulted to `true`, otherwise `false`.\n  * _now_ - Date - default `new Date()` - what to use for the creation/access time of cookies\n  * _expire_ - boolean - default `true` - perform expiry-time checking of cookies and asynchronously remove expired cookies from the store.  Using `false` will return expired cookies and **not** remove them from the store (which is useful for replaying Set-Cookie headers, potentially).\n  * _allPaths_ - boolean - default `false` - if `true`, do not scope cookies by path. The default uses RFC-compliant path scoping. **Note**: may not be supported by the CookieStore `fetchCookies` function (the default MemoryCookieStore supports it).\n\nThe `.lastAccessed` property of the returned cookies will have been updated.\n\n.getCookieString(...)\n---------------------\n\nAccepts the same options as `.getCookies()` but passes a string suitable for a Cookie header rather than an array to the callback.  Simply maps the `Cookie` array via `.cookieString()`.\n\n.getSetCookieStrings(...)\n-------------------------\n\nAccepts the same options as `.getCookies()` but passes an array of strings suitable for Set-Cookie headers (rather than an array of `Cookie`s) to the callback.  Simply maps the cookie array via `.toString()`.\n\n# CookieStore API\n\nThe storage model for each `CookieJar` instance can be replaced with a custom implementation.  The default is `MemoryCookieStore` which can be found in the `lib/memstore.js` file.  The API uses continuation-passing-style to allow for asynchronous stores.\n\nAll `domain` parameters will have been normalized before calling.\n\nThe Cookie store must have all of the following methods.\n\nstore.findCookie(domain, path, key, cb(err,cookie))\n---------------------------------------------------\n\nRetrieve a cookie with the given domain, path and key (a.k.a. name).  The RFC maintains that exactly one of these cookies should exist in a store.  If the store is using versioning, this means that the latest/newest such cookie should be returned.\n\nCallback takes an error and the resulting `Cookie` object.  If no cookie is found then `null` MUST be passed instead (i.e. not an error).\n\nstore.findCookies(domain, path, cb(err,cookies))\n------------------------------------------------\n\nLocates cookies matching the given domain and path.  This is most often called in the context of `cookiejar.getCookies()` above.\n\nIf no cookies are found, the callback MUST be passed an empty array.\n\nThe resulting list will be checked for applicability to the current request according to the RFC (domain-match, path-match, http-only-flag, secure-flag, expiry, etc.), so it's OK to use an optimistic search algorithm when implementing this method.  However, the search algorithm used SHOULD try to find cookies that `domainMatch()` the domain and `pathMatch()` the path in order to limit the amount of checking that needs to be done.\n\nAs of version 0.9.12, the `allPaths` option to `cookiejar.getCookies()` above will cause the path here to be `null`.  If the path is `null`, path-matching MUST NOT be performed (i.e. domain-matching only).\n\nstore.putCookie(cookie, cb(err))\n--------------------------------\n\nAdds a new cookie to the store.  The implementation SHOULD replace any existing cookie with the same `.domain`, `.path`, and `.key` properties -- depending on the nature of the implementation, it's possible that between the call to `fetchCookie` and `putCookie` that a duplicate `putCookie` can occur.\n\nThe `cookie` object MUST NOT be modified; the caller will have already updated the `.creation` and `.lastAccessed` properties.\n\nPass an error if the cookie cannot be stored.\n\nstore.updateCookie(oldCookie, newCookie, cb(err))\n-------------------------------------------------\n\nUpdate an existing cookie.  The implementation MUST update the `.value` for a cookie with the same `domain`, `.path` and `.key`.  The implementation SHOULD check that the old value in the store is equivalent to `oldCookie` - how the conflict is resolved is up to the store.\n\nThe `.lastAccessed` property will always be different between the two objects and `.created` will always be the same.  Stores MAY ignore or defer the `.lastAccessed` change at the cost of affecting how cookies are sorted (or selected for deletion).\n\nStores may wish to optimize changing the `.value` of the cookie in the store versus storing a new cookie.  If the implementation doesn't define this method a stub that calls `putCookie(newCookie,cb)` will be added to the store object.\n\nThe `newCookie` and `oldCookie` objects MUST NOT be modified.\n\nPass an error if the newCookie cannot be stored.\n\nstore.removeCookie(domain, path, key, cb(err))\n----------------------------------------------\n\nRemove a cookie from the store (see notes on `findCookie` about the uniqueness constraint).\n\nThe implementation MUST NOT pass an error if the cookie doesn't exist; only pass an error due to the failure to remove an existing cookie.\n\nstore.removeCookies(domain, path, cb(err))\n------------------------------------------\n\nRemoves matching cookies from the store.  The `path` paramter is optional, and if missing means all paths in a domain should be removed.\n\nPass an error ONLY if removing any existing cookies failed.\n\n# TODO\n\n  * _full_ RFC5890/RFC5891 canonicalization for domains in `cdomain()`\n    * the optional `punycode` requirement implements RFC3492, but RFC6265 requires RFC5891\n  * better tests for `validate()`?\n\n# Copyright and License\n\n(tl;dr: MIT with some MPL/1.1)\n\nCopyright GoInstant, Inc. and other contributors. All rights reserved.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n\nPortions may be licensed under different licenses (in particular public-suffix.txt is MPL/1.1); please read the LICENSE file for full details.\n",
/src/node_modules/request/node_modules/tough-cookie/package.json-43-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/node_modules/tough-cookie/generate-pubsuffix.js-25-
/src/node_modules/request/node_modules/tough-cookie/generate-pubsuffix.js:26:fs.readFile('./public-suffix.txt', 'utf8', function(err,string) {
/src/node_modules/request/node_modules/tough-cookie/generate-pubsuffix.js-27-  if (err) throw err;
##############################################
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js-448-  try {
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js:449:    obj = JSON.parse(str);
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js-450-  } catch (e) {
##############################################
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js-735-  if (!(cookie instanceof Cookie))
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js:736:    cookie = Cookie.parse(cookie, options.strict === true);
/src/node_modules/request/node_modules/tough-cookie/lib/cookie.js-737-  if (!cookie) {
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-287-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:288:        return Cookie.parse('a=bcd',true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-289-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-298-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:299:        return Cookie.parse('a=bcd; Expires=Tue, 18 Oct 2011 07:05:03 GMT',true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-300-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-310-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:311:        return Cookie.parse('abc="xyzzy!"; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Path=/aBc',true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-312-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-327-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:328:        return Cookie.parse('abc="xyzzy!"; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Path=/aBc; Domain=example.com; Secure; HTTPOnly; Max-Age=1234; Foo=Bar; Baz', true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-329-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-348-    "invalid expires": {
/src/node_modules/request/node_modules/tough-cookie/test.js:349:      "strict": function() { assert.ok(!Cookie.parse("a=b; Expires=xyzzy", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-350-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:351:        var c = Cookie.parse("a=b; Expires=xyzzy");
/src/node_modules/request/node_modules/tough-cookie/test.js-352-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-356-    "zero max-age": {
/src/node_modules/request/node_modules/tough-cookie/test.js:357:      "strict": function() { assert.ok(!Cookie.parse("a=b; Max-Age=0", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-358-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:359:        var c = Cookie.parse("a=b; Max-Age=0");
/src/node_modules/request/node_modules/tough-cookie/test.js-360-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-364-    "negative max-age": {
/src/node_modules/request/node_modules/tough-cookie/test.js:365:      "strict": function() { assert.ok(!Cookie.parse("a=b; Max-Age=-1", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-366-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:367:        var c = Cookie.parse("a=b; Max-Age=-1");
/src/node_modules/request/node_modules/tough-cookie/test.js-368-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-372-    "empty domain": {
/src/node_modules/request/node_modules/tough-cookie/test.js:373:      "strict": function() { assert.ok(!Cookie.parse("a=b; domain=", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-374-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:375:        var c = Cookie.parse("a=b; domain=");
/src/node_modules/request/node_modules/tough-cookie/test.js-376-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-380-    "dot domain": {
/src/node_modules/request/node_modules/tough-cookie/test.js:381:      "strict": function() { assert.ok(!Cookie.parse("a=b; domain=.", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-382-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:383:        var c = Cookie.parse("a=b; domain=.");
/src/node_modules/request/node_modules/tough-cookie/test.js-384-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-389-      "strict lowercases": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:390:        var c = Cookie.parse("a=b; domain=EXAMPLE.COM");
/src/node_modules/request/node_modules/tough-cookie/test.js-391-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-394-      "non-strict lowercases": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:395:        var c = Cookie.parse("a=b; domain=EXAMPLE.COM");
/src/node_modules/request/node_modules/tough-cookie/test.js-396-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-401-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:402:        return Cookie.parse("a=b; Domain=example.com.", true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-403-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-407-    "empty path": {
/src/node_modules/request/node_modules/tough-cookie/test.js:408:      "strict": function() { assert.ok(!Cookie.parse("a=b; path=", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-409-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:410:        var c = Cookie.parse("a=b; path=");
/src/node_modules/request/node_modules/tough-cookie/test.js-411-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-415-    "no-slash path": {
/src/node_modules/request/node_modules/tough-cookie/test.js:416:      "strict": function() { assert.ok(!Cookie.parse("a=b; path=xyzzy", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-417-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:418:        var c = Cookie.parse("a=b; path=xyzzy");
/src/node_modules/request/node_modules/tough-cookie/test.js-419-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-430-      "strict": function (t) {
/src/node_modules/request/node_modules/tough-cookie/test.js:431:        assert.ok(!Cookie.parse(t[0], true));
/src/node_modules/request/node_modules/tough-cookie/test.js:432:        assert.ok(!Cookie.parse(t[1], true));
/src/node_modules/request/node_modules/tough-cookie/test.js-433-      },
/src/node_modules/request/node_modules/tough-cookie/test.js-434-      "non-strict": function (t) {
/src/node_modules/request/node_modules/tough-cookie/test.js:435:        var c1 = Cookie.parse(t[0]);
/src/node_modules/request/node_modules/tough-cookie/test.js:436:        var c2 = Cookie.parse(t[1]);
/src/node_modules/request/node_modules/tough-cookie/test.js-437-        assert.ok(c1);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-442-    "secure-with-value": {
/src/node_modules/request/node_modules/tough-cookie/test.js:443:      "strict": function() { assert.ok(!Cookie.parse("a=b; Secure=xyzzy", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-444-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:445:        var c = Cookie.parse("a=b; Secure=xyzzy");
/src/node_modules/request/node_modules/tough-cookie/test.js-446-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-450-    "httponly-with-value": {
/src/node_modules/request/node_modules/tough-cookie/test.js:451:      "strict": function() { assert.ok(!Cookie.parse("a=b; HttpOnly=xyzzy", true)) },
/src/node_modules/request/node_modules/tough-cookie/test.js-452-      "non-strict": function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:453:        var c = Cookie.parse("a=b; HttpOnly=xyzzy");
/src/node_modules/request/node_modules/tough-cookie/test.js-454-        assert.ok(c);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-459-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:460:        return Cookie.parse("\x08", true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-461-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-465-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:466:        return Cookie.parse("a=b; domain=kyoto.jp", true) || null;
/src/node_modules/request/node_modules/tough-cookie/test.js-467-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-478-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:479:        return Cookie.parse("GAPS=1:A1aaaaAaAAa1aaAaAaaAAAaaa1a11a:aaaAaAaAa-aaaA1-;Path=/;Expires=Thu, 17-Apr-2014 02:12:29 GMT;Secure;HttpOnly");
/src/node_modules/request/node_modules/tough-cookie/test.js-480-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-496-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:497:        return Cookie.parse("queryPref=b=c&d=e; Path=/f=g; Expires=Thu, 17 Apr 2014 02:12:29 GMT; HttpOnly");
/src/node_modules/request/node_modules/tough-cookie/test.js-498-      },
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-586-      var now = Date.now();
/src/node_modules/request/node_modules/tough-cookie/test.js:587:      cookies.push(Cookie.parse("a=0; Domain=example.com"));
/src/node_modules/request/node_modules/tough-cookie/test.js:588:      cookies.push(Cookie.parse("b=1; Domain=www.example.com"));
/src/node_modules/request/node_modules/tough-cookie/test.js:589:      cookies.push(Cookie.parse("c=2; Domain=example.com; Path=/pathA"));
/src/node_modules/request/node_modules/tough-cookie/test.js:590:      cookies.push(Cookie.parse("d=3; Domain=www.example.com; Path=/pathA"));
/src/node_modules/request/node_modules/tough-cookie/test.js:591:      cookies.push(Cookie.parse("e=4; Domain=example.com; Path=/pathA/pathB"));
/src/node_modules/request/node_modules/tough-cookie/test.js:592:      cookies.push(Cookie.parse("f=5; Domain=www.example.com; Path=/pathA/pathB"));
/src/node_modules/request/node_modules/tough-cookie/test.js-593-
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-618-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:619:        var c = Cookie.parse("a=b; Domain=example.com; Path=/");
/src/node_modules/request/node_modules/tough-cookie/test.js-620-        assert.strictEqual(c.hostOnly, null);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-638-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:639:        var c = Cookie.parse("a=b; Domain=example.com");
/src/node_modules/request/node_modules/tough-cookie/test.js-640-        assert.strictEqual(c.hostOnly, null);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-652-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:653:        var c = Cookie.parse("a=b; Domain=example.com");
/src/node_modules/request/node_modules/tough-cookie/test.js-654-        assert.strictEqual(c.hostOnly, null);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-666-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:667:        var c = Cookie.parse("a=b");
/src/node_modules/request/node_modules/tough-cookie/test.js-668-        assert.strictEqual(c.path, null);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-678-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:679:        var c = Cookie.parse("a=b; Domain=fooxample.com; Path=/");
/src/node_modules/request/node_modules/tough-cookie/test.js-680-        cj.setCookie(c, 'http://example.com/index.html', this.callback);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-689-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:690:        var c = Cookie.parse("a=b; Domain=www.example.com; Path=/");
/src/node_modules/request/node_modules/tough-cookie/test.js-691-        cj.setCookie(c, 'http://example.com/index.html', this.callback);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-700-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:701:        var c = Cookie.parse("a=b; Domain=example.com; Path=/");
/src/node_modules/request/node_modules/tough-cookie/test.js-702-        cj.setCookie(c, 'http://www.app.example.com/index.html', this.callback);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-711-        var cj = new CookieJar();
/src/node_modules/request/node_modules/tough-cookie/test.js:712:        var c = Cookie.parse("a=b; Domain=example.com; Path=/; HttpOnly");
/src/node_modules/request/node_modules/tough-cookie/test.js-713-        cj.setCookie(c, 'http://example.com/index.html', {http:false}, this.callback);
##############################################
/src/node_modules/request/node_modules/tough-cookie/test.js-946-      topic: function() {
/src/node_modules/request/node_modules/tough-cookie/test.js:947:        var c = Cookie.parse('alpha=beta; Domain=example.com; Path=/foo; Expires=Tue, 19 Jan 2038 03:14:07 GMT; HttpOnly');
/src/node_modules/request/node_modules/tough-cookie/test.js-948-        return JSON.stringify(c);
##############################################
/src/node_modules/request/node_modules/qs/package.json-29-  },
/src/node_modules/request/node_modules/qs/package.json:30:  "readme": "# node-querystring\n\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\n\n## Installation\n\n    $ npm install qs\n\n## Examples\n\n```js\nvar qs = require('qs');\n\nqs.parse('user[name][first]=Tobi&user[email]=tobi@learnboost.com');\n// => { user: { name: { first: 'Tobi' }, email: 'tobi@learnboost.com' } }\n\nqs.stringify({ user: { name: 'Tobi', email: 'tobi@learnboost.com' }})\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\n```\n\n## Testing\n\nInstall dev dependencies:\n\n    $ npm install -d\n\nand execute:\n\n    $ make test\n\nbrowser:\n\n    $ open test/browser/index.html\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
/src/node_modules/request/node_modules/qs/package.json-31-  "readmeFilename": "Readme.md",
##############################################
/src/node_modules/request/node_modules/qs/Readme.md-13-
/src/node_modules/request/node_modules/qs/Readme.md:14:qs.parse('user[name][first]=Tobi&user[email]=tobi@learnboost.com');
/src/node_modules/request/node_modules/qs/Readme.md-15-// => { user: { name: { first: 'Tobi' }, email: 'tobi@learnboost.com' } }
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.int.js-8-
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.int.js:9:	data = JSON.parse(mod_fs.readFileSync('./int.json').toString());
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.int.js-10-	parser = mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.typedef.js-8-
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.typedef.js:9:	data = JSON.parse(mod_fs.readFileSync('./typedef.json').toString());
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.typedef.js-10-	parser = mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.float.js-8-
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.float.js:9:	data = JSON.parse(mod_fs.readFileSync('./float.json').toString());
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.float.js-10-	parser = mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.psinfo.js-12-
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.psinfo.js:13:	data = JSON.parse(mod_fs.readFileSync('./psinfo.json').toString());
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.psinfo.js-14-	mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.struct.js-8-
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.struct.js:9:	data = JSON.parse(mod_fs.readFileSync('./struct.json').toString());
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/tst/ctf/tst.struct.js-10-	parser = mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/package.json-13-  "main": "ctype.js",
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/package.json:14:  "readme": "Node-CType is a way to read and write binary data in structured and easy to use\nformat. Its name comes from the C header file.\n\nTo get started, simply clone the repository or use npm to install it. Once it is\nthere, simply require it.\n\ngit clone git://github.com/rmustacc/node-ctype\nnpm install ctype\nvar mod_ctype = require('ctype')\n\n\nThere are two APIs that you can use, depending on what abstraction you'd like.\nThe low level API let's you read and write individual integers and floats from\nbuffers. The higher level API let's you read and write structures of these. To\nillustrate this, let's looks look at how we would read and write a binary\nencoded x,y point.\n\nIn C we would define this structure as follows:\n\ntypedef struct point {\n\tuint16_t\tp_x;\n\tuint16_t\tp_y;\n} point_t;\n\nTo read a binary encoded point from a Buffer, we first need to create a CType\nparser (where we specify the endian and other options) and add the typedef.\n\nvar parser = new mod_ctype.Parser({ endian: 'big' });\nparser.typedef('point_t', [\n\t{ x: { type: 'uint16_t' } },\n\t{ y: { type: 'uint16_t' } }\n]);\n\nFrom here, given a buffer buf and an offset into it, we can read a point.\n\nvar out = parser.readData([ { point: { type: 'point_t' } } ], buffer, 0);\nconsole.log(out);\n{ point: { x: 23, y: 42 } }\n\nAnother way to get the same information would be to use the low level methods.\nNote that these require you to manually deal with the offset. Here's how we'd\nget the same values of x and y from the buffer.\n\nvar x = mod_ctype.ruint16(buf, 'big', 0);\nvar y = mod_ctype.ruint16(buf, 'big', 2);\nconsole.log(x + ', ' + y);\n23, 42\n\nThe true power of this API comes from the ability to define and nest typedefs,\njust as you would in C. By default, the following types are defined by default.\nNote that they return a Number, unless indicated otherwise.\n\n    * int8_t\n    * int16_t\n    * int32_t\n    * int64_t (returns an array where val[0] << 32 + val[1] would be the value)\n    * uint8_t\n    * uint16_t\n    * uint32_t\n    * uint64_t (returns an array where val[0] << 32 + val[1] would be the value)\n    * float\n    * double\n    * char (either returns a buffer with that character or a uint8_t)\n    * char[] (returns an object with the buffer and the number of characters read which is either the total amount requested or until the first 0)\n\n\nctf2json integration:\n\nNode-CType supports consuming the output of ctf2json. Once you read in a JSON file,\nall you have to do to add all the definitions it contains is:\n\nvar data, parser;\ndata = JSON.parse(parsedJSONData);\nparser = mod_ctype.parseCTF(data, { endian: 'big' });\n\nFor more documentation, see the file README.old. Full documentation is in the\nprocess of being rewritten as a series of manual pages which will be available\nin the repository and online for viewing.\n\nTo read the ctio manual page simple run, from the root of the workspace:\n\nman -Mman -s 3ctype ctio\n",
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/package.json-15-  "readmeFilename": "README",
##############################################
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/README-72-var data, parser;
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/README:73:data = JSON.parse(parsedJSONData);
/src/node_modules/request/node_modules/http-signature/node_modules/ctype/README-74-parser = mod_ctype.parseCTF(data, { endian: 'big' });
##############################################
/src/node_modules/request/node_modules/http-signature/README.md-53-
/src/node_modules/request/node_modules/http-signature/README.md:54:    https.createServer(options, function (req, res) {
/src/node_modules/request/node_modules/http-signature/README.md-55-      var rc = 200;
##############################################
/src/node_modules/request/node_modules/http-signature/package.json-27-  },
/src/node_modules/request/node_modules/http-signature/package.json:28:  "readme": "# node-http-signature\n\nnode-http-signature is a node.js library that has client and server components\nfor Joyent's [HTTP Signature Scheme](http_signing.md).\n\n## Usage\n\nNote the example below signs a request with the same key/cert used to start an\nHTTP server. This is almost certainly not what you actaully want, but is just\nused to illustrate the API calls; you will need to provide your own key\nmanagement in addition to this library.\n\n### Client\n\n    var fs = require('fs');\n    var https = require('https');\n    var httpSignature = require('http-signature');\n\n    var key = fs.readFileSync('./key.pem', 'ascii');\n\n    var options = {\n      host: 'localhost',\n      port: 8443,\n      path: '/',\n      method: 'GET',\n      headers: {}\n    };\n\n    // Adds a 'Date' header in, signs it, and adds the\n    // 'Authorization' header in.\n    var req = https.request(options, function(res) {\n      console.log(res.statusCode);\n    });\n\n\n    httpSignature.sign(req, {\n      key: key,\n      keyId: './cert.pem'\n    });\n\n    req.end();\n\n### Server\n\n    var fs = require('fs');\n    var https = require('https');\n    var httpSignature = require('http-signature');\n\n    var options = {\n      key: fs.readFileSync('./key.pem'),\n      cert: fs.readFileSync('./cert.pem')\n    };\n\n    https.createServer(options, function (req, res) {\n      var rc = 200;\n      var parsed = httpSignature.parseRequest(req);\n      var pub = fs.readFileSync(parsed.keyId, 'ascii');\n      if (!httpSignature.verifySignature(parsed, pub))\n        rc = 401;\n\n      res.writeHead(rc);\n      res.end();\n    }).listen(8443);\n\n## Installation\n\n    npm install http-signature\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/joyent/node-http-signature/issues>.\n",
/src/node_modules/request/node_modules/http-signature/package.json-29-  "readmeFilename": "README.md",
##############################################
/src/node_modules/request/README.md-28-```javascript
/src/node_modules/request/README.md:29:fs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))
/src/node_modules/request/README.md-30-```
##############################################
/src/node_modules/request/README.md-40-```javascript
/src/node_modules/request/README.md:41:http.createServer(function (req, resp) {
/src/node_modules/request/README.md-42-  if (req.url === '/doodle.png') {
##############################################
/src/node_modules/request/README.md-54-```javascript
/src/node_modules/request/README.md:55:http.createServer(function (req, resp) {
/src/node_modules/request/README.md-56-  if (req.url === '/doodle.png') {
##############################################
/src/node_modules/request/README.md-74-
/src/node_modules/request/README.md:75:http.createServer(function (req, resp) {
/src/node_modules/request/README.md-76-  if (req.url === '/doodle.png') {
##############################################
/src/node_modules/request/README.md-102-form.append('my_buffer', new Buffer([1, 2, 3]))
/src/node_modules/request/README.md:103:form.append('my_file', fs.createReadStream(path.join(__dirname, 'doodle.png'))
/src/node_modules/request/README.md-104-form.append('remote_file', request('http://google.com/doodle.png'))
##############################################
/src/node_modules/request/README.md-143-  // verified with twitter that they are authorizing your app.
/src/node_modules/request/README.md:144:  var access_token = qs.parse(body)
/src/node_modules/request/README.md-145-    , oauth =
##############################################
/src/node_modules/request/README.md-153-  request.post({url:url, oauth:oauth}, function (e, r, body) {
/src/node_modules/request/README.md:154:    var perm_token = qs.parse(body)
/src/node_modules/request/README.md-155-      , oauth =
##############################################
/src/node_modules/request/README.md-193-	if (!error && response.statusCode == 200) {
/src/node_modules/request/README.md:194:		var info = JSON.parse(body);
/src/node_modules/request/README.md-195-		console.log(info.stargazers_count + " Stars");
##############################################
/src/node_modules/request/README.md-206-
/src/node_modules/request/README.md:207:* `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`
/src/node_modules/request/README.md-208-* `qs` - object containing querystring values to be appended to the `uri`
##############################################
/src/node_modules/request/package.json-51-  },
/src/node_modules/request/package.json:52:  "readme": "# Request -- Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don’t already provide one).\n\n```javascript\nfs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```javascript\nrequest.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))\n```\n\nNow let’s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    if (req.method === 'PUT') {\n      req.pipe(request.put('http://mysite.com/doodle.png'))\n    } else if (req.method === 'GET' || req.method === 'HEAD') {\n      request.get('http://mysite.com/doodle.png').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    var x = request('http://mysite.com/doodle.png')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in ≥ Node 0.5.x you can do one line proxying. :)\n\n```javascript\nreq.pipe(request('http://mysite.com/doodle.png')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({'proxy':'http://localproxy.com'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    r.get('http://google.com/doodle.png').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nURL-encoded forms are simple.\n\n```javascript\nrequest.post('http://service.com/upload', {form:{key:'value'}})\n// or\nrequest.post('http://service.com/upload').form({key:'value'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don’t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post('http://service.com/upload')\nvar form = r.form()\nform.append('my_field', 'my_value')\nform.append('my_buffer', new Buffer([1, 2, 3]))\nform.append('my_file', fs.createReadStream(path.join(__dirname, 'doodle.png'))\nform.append('remote_file', request('http://google.com/doodle.png'))\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get('http://some.server.com/').auth('username', 'password', false);\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to `true`, which causes a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a `401` response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false`; otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require('querystring')\n  , oauth =\n    { callback: 'http://mysite.com/callback/'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = 'https://api.twitter.com/oauth/request_token'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = 'https://api.twitter.com/oauth/access_token'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = 'https://api.twitter.com/1/users/show.json?'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n### Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```\nvar request = require('request');\n\nvar options = {\n\turl: 'https://api.github.com/repos/mikeal/request',\n\theaders: {\n\t\t'User-Agent': 'request'\n\t}\n};\n\nfunction callback(error, response, body) {\n\tif (!error && response.statusCode == 200) {\n\t\tvar info = JSON.parse(body);\n\t\tconsole.log(info.stargazers_count + \" Stars\");\n\t\tconsole.log(info.forks_count + \" Forks\");\n\t}\n}\n\nrequest(options, callback);\n```\n\n### request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n* `qs` - object containing querystring values to be appended to the `uri`\n* `method` - http method (default: `\"GET\"`)\n* `headers` - http headers (default: `{}`)\n* `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer` or `String`.\n* `form` - when passed an object, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no options, a `FormData` instance is returned (and is piped to request).\n* `auth` - A hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as JSON.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`)\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n* `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n* `encoding` - Encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`.\n* `pool` - A hash object containing the agents for these requests. If omitted, the request will use the global pool (which is set to node's default `maxSockets`)\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n* `oauth` - Options for OAuth HMAC-SHA1 signing. See documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n* `jar` - If `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n* `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`. Also requires the property `bucket`, unless you’re specifying your `bucket` as part of the path, or the request doesn’t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n\n\nThe callback argument gets 3 arguments: \n\n1. An `error` when applicable (usually from the `http.Client` option, not the `http.ClientRequest` object)\n2. An `http.ClientResponse` object\n3. The third is the `response` body (`String` or `Buffer`)\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as `request()`, but defaults to `method: \"PUT\"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as `request()`, but defaults to `method: \"PATCH\"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as `request()`, but defaults to `method: \"POST\"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: \"HEAD\"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as `request()`, but defaults to `method: \"DELETE\"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nSame as `request()` (for uniformity).\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie('cookie_string_here')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require('request')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand\n    , multipart:\n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)\n      } else {\n        console.log('error: '+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie jar (instead `request`’s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie('your_cookie_here')\nj.add(cookie)\nrequest({url: 'http://www.google.com', jar: j}, function () {\n  request('http://images.google.com')\n})\n```\n",
/src/node_modules/request/package.json-53-  "readmeFilename": "README.md",
##############################################
/src/node_modules/uid-number/uid-number.js-37-    try {
/src/node_modules/uid-number/uid-number.js:38:      out = JSON.parse(out+"")
/src/node_modules/uid-number/uid-number.js-39-    } catch (ex) {
##############################################
/src/node_modules/graceful-fs/polyfills.js-24-    callback = callback || noop
/src/node_modules/graceful-fs/polyfills.js:25:    fs.open( path
/src/node_modules/graceful-fs/polyfills.js-26-           , constants.O_WRONLY | constants.O_SYMLINK
##############################################
/src/node_modules/graceful-fs/polyfills.js-68-    fs.lutimes = function (path, at, mt, cb) {
/src/node_modules/graceful-fs/polyfills.js:69:      fs.open(path, constants.O_SYMLINK, function (er, fd) {
/src/node_modules/graceful-fs/polyfills.js-70-        cb = cb || noop
##############################################
/src/node_modules/graceful-fs/test/open.js-11-  fs.closeSync(fd)
/src/node_modules/graceful-fs/test/open.js:12:  fs.open(__filename, 'r', function (er, fd) {
/src/node_modules/graceful-fs/test/open.js-13-    if (er) throw er
##############################################
/src/node_modules/graceful-fs/test/open.js-32-
/src/node_modules/graceful-fs/test/open.js:33:  fs.open('neither does this file', 'r', function (er, fd) {
/src/node_modules/graceful-fs/test/open.js-34-    t.ok(er, 'should throw')
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-242-          data.bugs = {email:data.bugs}
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:243:        else if(url.parse(data.bugs).protocol)
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-244-          data.bugs = {url: data.bugs}
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-252-        if(oldBugs.url) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:253:          if(typeof(oldBugs.url) == "string" && url.parse(oldBugs.url).protocol)
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-254-            data.bugs.url = oldBugs.url
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-285-    }
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js:286:    if(!url.parse(data.homepage).protocol) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/lib/fixer.js-287-      this.warn("missingProtocolHomepage")
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/consistency.js-19-      filename = __dirname + "/fixtures/" + entryName
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/consistency.js:20:      fs.readFile(filename, function(err, contents) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/consistency.js-21-        if (err) return next(err)
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/consistency.js:22:        data = JSON.parse(contents.toString())
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/consistency.js-23-        normalize(data, warn)
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-19-  t.equal( warnings.length, 1, "There's exactly one warning.")
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js:20:  fs.readFile(rpjPath, function(err, data) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-21-    if(err) throw err
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-22-    // Various changes have been made
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js:23:    t.notEqual(packageData, JSON.parse(data), "Output is different from input.")
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-24-    t.end()
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-29-  var packageData = require(rpjPath)
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js:30:  fs.readFile(rpjPath, function(err, data) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-31-    if(err) throw err
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js:32:    normalize(JSON.parse(data))
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/normalize.js-33-    t.ok(true, "If you read this, this means I'm still alive.")
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/github-urls.js-22-    filename = __dirname + "/fixtures/" + entryName
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/github-urls.js:23:    fs.readFile(filename, function(err, contents) {
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/github-urls.js-24-      if (err) return next(err)
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/github-urls.js:25:      data = JSON.parse(contents.toString())
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/github-urls.js-26-      normalize(data, warn)
##############################################
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/basic.js-9-    if (err) throw err;
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/basic.js:10:    var originalData = JSON.parse(contents.toString())
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/basic.js:11:    var data = JSON.parse(contents.toString())
/src/node_modules/read-package-json/node_modules/normalize-package-data/test/basic.js-12-    normalize(data)
##############################################
/src/node_modules/read-package-json/read-json.js-57-function readJson_ (file, log, strict, cb) {
/src/node_modules/read-package-json/read-json.js:58:                fs.readFile(file, "utf8", function (er, d) {
/src/node_modules/read-package-json/read-json.js-59-                                parseJson(file, er, d, log, strict, cb)
##############################################
/src/node_modules/read-package-json/read-json.js-81-                try {
/src/node_modules/read-package-json/read-json.js:82:                                d = JSON.parse(stripBOM(d))
/src/node_modules/read-package-json/read-json.js-83-                } catch (er) {
##############################################
/src/node_modules/read-package-json/read-json.js-95-                var index = path.resolve(path.dirname(file), "index.js")
/src/node_modules/read-package-json/read-json.js:96:                fs.readFile(index, "utf8", function (er2, d) {
/src/node_modules/read-package-json/read-json.js-97-                                if (er2) return cb(er);
##############################################
/src/node_modules/read-package-json/read-json.js-185-                var af = path.resolve(path.dirname(file), "AUTHORS")
/src/node_modules/read-package-json/read-json.js:186:                fs.readFile(af, "utf8", function (er, ad) {
/src/node_modules/read-package-json/read-json.js-187-                                // ignore error.  just checking it.
##############################################
/src/node_modules/read-package-json/read-json.js-208-                var gitDesc = path.resolve(dir, '.git/description')
/src/node_modules/read-package-json/read-json.js:209:                fs.readFile(gitDesc, 'utf8', function (er, desc) {
/src/node_modules/read-package-json/read-json.js-210-                                if (desc) desc = desc.trim()
##############################################
/src/node_modules/read-package-json/read-json.js-260-                var rmfn = path.basename(rm);
/src/node_modules/read-package-json/read-json.js:261:                fs.readFile(rm, "utf8", function (er, rm) {
/src/node_modules/read-package-json/read-json.js-262-                                // maybe not readable, or something.
##############################################
/src/node_modules/read-package-json/read-json.js-314-                var head = path.resolve(dir, '.git/HEAD')
/src/node_modules/read-package-json/read-json.js:315:                fs.readFile(head, 'utf8', function (er, head) {
/src/node_modules/read-package-json/read-json.js-316-                                if (er) return cb(null, data);
##############################################
/src/node_modules/read-package-json/read-json.js-326-                headFile = path.resolve(dir, '.git', headFile)
/src/node_modules/read-package-json/read-json.js:327:                fs.readFile(headFile, 'utf8', function (er, head) {
/src/node_modules/read-package-json/read-json.js-328-                                if (er || !head) return cb(null, data)
##############################################
/src/node_modules/read-package-json/read-json.js-370-                try {
/src/node_modules/read-package-json/read-json.js:371:                                return JSON.parse(data)
/src/node_modules/read-package-json/read-json.js-372-                } catch (er) {
##############################################
/src/node_modules/slide/README.md-66-  asyncMap(files, function (f, cb) {
/src/node_modules/slide/README.md:67:    fs.writeFile(f, what, cb)
/src/node_modules/slide/README.md-68-  }, cb)
##############################################
/src/node_modules/slide/package.json-27-  "license": "ISC",
/src/node_modules/slide/package.json:28:  "readme": "# Controlling Flow: callbacks are easy\n\n## What's actually hard?\n\n- Doing a bunch of things in a specific order.\n- Knowing when stuff is done.\n- Handling failures.\n- Breaking up functionality into parts (avoid nested inline callbacks)\n\n\n## Common Mistakes\n\n- Abandoning convention and consistency.\n- Putting all callbacks inline.\n- Using libraries without grokking them.\n- Trying to make async code look sync.\n\n## Define Conventions\n\n- Two kinds of functions: *actors* take action, *callbacks* get results.\n- Essentially the continuation pattern. Resulting code *looks* similar\n  to fibers, but is *much* simpler to implement.\n- Node works this way in the lowlevel APIs already, and it's very ﬂexible.\n\n## Callbacks\n\n- Simple responders\n- Must always be prepared to handle errors, that's why it's the first argument.\n- Often inline anonymous, but not always.\n- Can trap and call other callbacks with modified data, or pass errors upwards.\n\n## Actors\n\n- Last argument is a callback.\n- If any error occurs, and can't be handled, pass it to the callback and return.\n- Must not throw. Return value ignored.\n- return x ==> return cb(null, x)\n- throw er ==> return cb(er)\n\n```javascript\n// return true if a path is either\n// a symlink or a directory.\nfunction isLinkOrDir (path, cb) {\n  fs.lstat(path, function (er, s) {\n    if (er) return cb(er)\n    return cb(null, s.isDirectory() || s.isSymbolicLink())\n  })\n}\n```\n\n# asyncMap\n\n## Usecases\n\n- I have a list of 10 files, and need to read all of them, and then continue when they're all done.\n- I have a dozen URLs, and need to fetch them all, and then continue when they're all done.\n- I have 4 connected users, and need to send a message to all of them, and then continue when that's done.\n- I have a list of n things, and I need to dosomething with all of them, in parallel, and get the results once they're all complete.\n\n\n## Solution\n\n```javascript\nvar asyncMap = require(\"slide\").asyncMap\nfunction writeFiles (files, what, cb) {\n  asyncMap(files, function (f, cb) {\n    fs.writeFile(f, what, cb)\n  }, cb)\n}\nwriteFiles([my, file, list], \"foo\", cb)\n```\n\n# chain\n\n## Usecases\n\n- I have to do a bunch of things, in order. Get db credentials out of a file,\n  read the data from the db, write that data to another file.\n- If anything fails, do not continue.\n- I still have to provide an array of functions, which is a lot of boilerplate,\n  and a pita if your functions take args like\n\n```javascript\nfunction (cb) {\n  blah(a, b, c, cb)\n}\n```\n\n- Results are discarded, which is a bit lame.\n- No way to branch.\n\n## Solution\n\n- reduces boilerplate by converting an array of [fn, args] to an actor\n  that takes no arguments (except cb)\n- A bit like Function#bind, but tailored for our use-case.\n- bindActor(obj, \"method\", a, b, c)\n- bindActor(fn, a, b, c)\n- bindActor(obj, fn, a, b, c)\n- branching, skipping over falsey arguments\n\n```javascript\nchain([\n  doThing && [thing, a, b, c]\n, isFoo && [doFoo, \"foo\"]\n, subChain && [chain, [one, two]]\n], cb)\n```\n\n- tracking results: results are stored in an optional array passed as argument,\n  last result is always in results[results.length - 1].\n- treat chain.first and chain.last as placeholders for the first/last\n  result up until that point.\n\n\n## Non-trivial example\n\n- Read number files in a directory\n- Add the results together\n- Ping a web service with the result\n- Write the response to a file\n- Delete the number files\n\n```javascript\nvar chain = require(\"slide\").chain\nfunction myProgram (cb) {\n  var res = [], last = chain.last, first = chain.first\n  chain([\n    [fs, \"readdir\", \"the-directory\"]\n  , [readFiles, \"the-directory\", last]\n  , [sum, last]\n  , [ping, \"POST\", \"example.com\", 80, \"/foo\", last]\n  , [fs, \"writeFile\", \"result.txt\", last]\n  , [rmFiles, \"./the-directory\", first]\n  ], res, cb)\n}\n```\n\n# Conclusion: Convention Profits\n\n- Consistent API from top to bottom.\n- Sneak in at any point to inject functionality. Testable, reusable, ...\n- When ruby and python users whine, you can smile condescendingly.\n",
/src/node_modules/slide/package.json-29-  "readmeFilename": "README.md",
##############################################
/src/node_modules/nopt/lib/nopt.js-76-               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {
/src/node_modules/nopt/lib/nopt.js:77:          val = JSON.parse(val)
/src/node_modules/nopt/lib/nopt.js-78-          debug("jsonable %j", val)
##############################################
/src/node_modules/nopt/lib/nopt.js-81-          val = +val
/src/node_modules/nopt/lib/nopt.js:82:        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {
/src/node_modules/nopt/lib/nopt.js-83-          debug("convert to date", val)
##############################################
/src/node_modules/nopt/lib/nopt.js-144-function validateDate (data, k, val) {
/src/node_modules/nopt/lib/nopt.js:145:  debug("validate Date %j %j %j", k, val, Date.parse(val))
/src/node_modules/nopt/lib/nopt.js:146:  var s = Date.parse(val)
/src/node_modules/nopt/lib/nopt.js-147-  if (isNaN(s)) return false
##############################################
/src/node_modules/nopt/lib/nopt.js-161-function validateUrl (data, k, val) {
/src/node_modules/nopt/lib/nopt.js:162:  val = url.parse(String(val))
/src/node_modules/nopt/lib/nopt.js-163-  if (!val.host) return false
##############################################
/src/node_modules/nopt/lib/nopt.js-300-        if (la === "true" || la === "false") {
/src/node_modules/nopt/lib/nopt.js:301:          val = JSON.parse(la)
/src/node_modules/nopt/lib/nopt.js-302-          la = null
##############################################
/src/node_modules/tar/examples/extracter.js-3-
/src/node_modules/tar/examples/extracter.js:4:fs.createReadStream(__dirname + "/../test/fixtures/c.tar")
/src/node_modules/tar/examples/extracter.js-5-  .pipe(tar.Extract({ path: __dirname + "/extract" }))
##############################################
/src/node_modules/tar/examples/reader.js-3-
/src/node_modules/tar/examples/reader.js:4:fs.createReadStream(__dirname + "/../test/fixtures/c.tar")
/src/node_modules/tar/examples/reader.js-5-  .pipe(tar.Parse())
##############################################
/src/node_modules/tar/test/extract.js-284-  var extract = tar.Extract(target)
/src/node_modules/tar/test/extract.js:285:  var inp = fs.createReadStream(file)
/src/node_modules/tar/test/extract.js-286-
##############################################
/src/node_modules/tar/test/parse.js-339-
/src/node_modules/tar/test/parse.js:340:  fs.createReadStream(file)
/src/node_modules/tar/test/parse.js-341-    .pipe(parser)
##############################################
/src/node_modules/minimatch/node_modules/sigmund/bench.js-13-
/src/node_modules/minimatch/node_modules/sigmund/bench.js:14:http.createServer(function (q, s) {
/src/node_modules/minimatch/node_modules/sigmund/bench.js-15-  sreq = q
##############################################
/src/node_modules/minimatch/node_modules/sigmund/test/basic.js-12-
/src/node_modules/minimatch/node_modules/sigmund/test/basic.js:13:var obj3 = JSON.parse(JSON.stringify(obj1))
/src/node_modules/minimatch/node_modules/sigmund/test/basic.js-14-obj3.c = /def/
##############################################
/src/node_modules/minimatch/minimatch.js-683-    var cs = pattern.substr(classStart + 1)
/src/node_modules/minimatch/minimatch.js:684:      , sp = this.parse(cs, SUBPARSE)
/src/node_modules/minimatch/minimatch.js-685-    re = re.substr(0, reClassStart) + "\\[" + sp[0]
##############################################
/src/node_modules/npm-registry-client/index.js-34-  if (registry) {
/src/node_modules/npm-registry-client/index.js:35:    registry = url.parse(registry)
/src/node_modules/npm-registry-client/index.js-36-    if (!registry.protocol) throw new Error(
##############################################
/src/node_modules/npm-registry-client/lib/get.js-24-
/src/node_modules/npm-registry-client/lib/get.js:25:  var parsed = url.parse(uri)
/src/node_modules/npm-registry-client/lib/get.js-26-  assert(parsed.protocol, "must have a URL that starts with npm:, http:, or https:")
##############################################
/src/node_modules/npm-registry-client/lib/get.js-43-  fs.stat(cache, function (er, stat) {
/src/node_modules/npm-registry-client/lib/get.js:44:    if (!er) fs.readFile(cache, function (er, data) {
/src/node_modules/npm-registry-client/lib/get.js:45:      try { data = JSON.parse(data) }
/src/node_modules/npm-registry-client/lib/get.js-46-      catch (ex) { data = null }
##############################################
/src/node_modules/npm-registry-client/lib/get.js-60-    if (er) return cb(er)
/src/node_modules/npm-registry-client/lib/get.js:61:    fs.readFile(cache, function (er, data) {
/src/node_modules/npm-registry-client/lib/get.js-62-      if (er) return requestAll_.call(this, uri, 0, {}, cache, cb)
/src/node_modules/npm-registry-client/lib/get.js-63-      try {
/src/node_modules/npm-registry-client/lib/get.js:64:        data = JSON.parse(data)
/src/node_modules/npm-registry-client/lib/get.js-65-      } catch (ex) {
/src/node_modules/npm-registry-client/lib/get.js:66:        fs.writeFile(cache, "{}", function (er) {
/src/node_modules/npm-registry-client/lib/get.js-67-          if (er) return cb(new Error("Broken cache."))
##############################################
/src/node_modules/npm-registry-client/lib/get.js-94-    var headers = res.headers
/src/node_modules/npm-registry-client/lib/get.js:95:      , updated = updates._updated || Date.parse(headers.date)
/src/node_modules/npm-registry-client/lib/get.js-96-    Object.keys(updates).forEach(function (p) {
##############################################
/src/node_modules/npm-registry-client/lib/get.js-99-    data._updated = updated
/src/node_modules/npm-registry-client/lib/get.js:100:    fs.writeFile( cache, JSON.stringify(data)
/src/node_modules/npm-registry-client/lib/get.js-101-                , function (er) {
##############################################
/src/node_modules/npm-registry-client/lib/get.js-195-    if (er) return saved()
/src/node_modules/npm-registry-client/lib/get.js:196:    fs.writeFile(cache, JSON.stringify(data), function (er) {
/src/node_modules/npm-registry-client/lib/get.js-197-      if (er || uid === null || gid === null) {
##############################################
/src/node_modules/npm-registry-client/lib/request.js-26-
/src/node_modules/npm-registry-client/lib/request.js:27:  var parsed = url.parse(uri)
/src/node_modules/npm-registry-client/lib/request.js-28-
##############################################
/src/node_modules/npm-registry-client/lib/request.js-95-
/src/node_modules/npm-registry-client/lib/request.js:96:  var remote = url.parse(where)
/src/node_modules/npm-registry-client/lib/request.js-97-  , auth = this.conf.get('_auth')
##############################################
/src/node_modules/npm-registry-client/lib/request.js-252-
/src/node_modules/npm-registry-client/lib/request.js:253:    var urlObj = url.parse(where)
/src/node_modules/npm-registry-client/lib/request.js-254-    if (urlObj.auth)
##############################################
/src/node_modules/npm-registry-client/lib/request.js-265-      try {
/src/node_modules/npm-registry-client/lib/request.js:266:        parsed = JSON.parse(data)
/src/node_modules/npm-registry-client/lib/request.js-267-      } catch (ex) {
##############################################
/src/node_modules/npm-registry-client/lib/request.js-290-    if (parsed && parsed.error && response.statusCode >= 400) {
/src/node_modules/npm-registry-client/lib/request.js:291:      var w = url.parse(where).pathname.substr(1)
/src/node_modules/npm-registry-client/lib/request.js-292-      var name
##############################################
/src/node_modules/npm-registry-client/lib/publish.js-30-    if (er) return cb(er)
/src/node_modules/npm-registry-client/lib/publish.js:31:    fs.readFile(tarball, function(er, tarbuffer) {
/src/node_modules/npm-registry-client/lib/publish.js-32-      if (er) return cb(er)
##############################################
/src/node_modules/npm-registry-client/lib/publish.js-57-  root.versions[ data.version ] = data
/src/node_modules/npm-registry-client/lib/publish.js:58:  data.maintainers = JSON.parse(JSON.stringify(root.maintainers))
/src/node_modules/npm-registry-client/lib/publish.js-59-  var tag = data.tag || this.conf.get('tag') || "latest"
##############################################
/src/node_modules/npm-registry-client/lib/publish.js-142-  }
/src/node_modules/npm-registry-client/lib/publish.js:143:  var maint = JSON.parse(JSON.stringify(root.maintainers))
/src/node_modules/npm-registry-client/lib/publish.js-144-  root.versions[newVersion].maintainers = maint
##############################################
/src/node_modules/npm-registry-client/lib/unpublish.js-77-
/src/node_modules/npm-registry-client/lib/unpublish.js:78:      var tb = url.parse(dist.tarball)
/src/node_modules/npm-registry-client/lib/unpublish.js-79-
##############################################
/src/node_modules/npm-registry-client/lib/unpublish.js-84-            var d = dist.bin[bt]
/src/node_modules/npm-registry-client/lib/unpublish.js:85:            detach.call(this, uri, data, url.parse(d.tarball).pathname, null, cb)
/src/node_modules/npm-registry-client/lib/unpublish.js-86-          }.bind(this)
##############################################
/src/node_modules/npm-registry-client/lib/upload.js-15-    if (er) return cb(er)
/src/node_modules/npm-registry-client/lib/upload.js:16:    var s = fs.createReadStream(file)
/src/node_modules/npm-registry-client/lib/upload.js-17-    s.size = stat.size
##############################################
/src/node_modules/npm-registry-client/test/deprecate.js-34-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/deprecate.js:35:      var updated = JSON.parse(b)
/src/node_modules/npm-registry-client/test/deprecate.js-36-
##############################################
/src/node_modules/npm-registry-client/test/publish.js-25-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/publish.js:26:      var o = JSON.parse(b)
/src/node_modules/npm-registry-client/test/publish.js-27-      t.equal(o._id, "npm-registry-client")
##############################################
/src/node_modules/npm-registry-client/test/unpublish.js-34-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/unpublish.js:35:      var updated = JSON.parse(b)
/src/node_modules/npm-registry-client/test/unpublish.js-36-      t.notOk(updated.versions[VERSION])
##############################################
/src/node_modules/npm-registry-client/test/star.js-33-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/star.js:34:      var updated = JSON.parse(b)
/src/node_modules/npm-registry-client/test/star.js-35-
##############################################
/src/node_modules/npm-registry-client/test/lib/server.js-3-var http = require('http')
/src/node_modules/npm-registry-client/test/lib/server.js:4:var server = http.createServer(handler)
/src/node_modules/npm-registry-client/test/lib/server.js-5-var port = server.port = process.env.PORT || 1337
##############################################
/src/node_modules/npm-registry-client/test/adduser-new.js-28-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/adduser-new.js:29:      var o = JSON.parse(b)
/src/node_modules/npm-registry-client/test/adduser-new.js-30-      userdata.password = password
##############################################
/src/node_modules/npm-registry-client/test/adduser-update.js-41-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/adduser-update.js:42:      var o = JSON.parse(b)
/src/node_modules/npm-registry-client/test/adduser-update.js-43-      userdata.password = password
##############################################
/src/node_modules/npm-registry-client/test/tag.js-23-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/tag.js:24:      var updated = JSON.parse(b)
/src/node_modules/npm-registry-client/test/tag.js-25-
##############################################
/src/node_modules/npm-registry-client/test/publish-again.js-24-    req.on("end", function () {
/src/node_modules/npm-registry-client/test/publish-again.js:25:      var o = lastTime = JSON.parse(b)
/src/node_modules/npm-registry-client/test/publish-again.js-26-      t.equal(o._id, "npm-registry-client")
##############################################
/src/node_modules/npm-registry-client/test/publish-again.js-60-    req.on("end", function() {
/src/node_modules/npm-registry-client/test/publish-again.js:61:      var o = JSON.parse(b)
/src/node_modules/npm-registry-client/test/publish-again.js-62-      t.equal(o._rev, "asdf")
##############################################
/src/node_modules/init-package-json/node_modules/promzard/promzard.js-47-
/src/node_modules/init-package-json/node_modules/promzard/promzard.js:48:  fs.readFile(this.file, 'utf8', function (er, d) {
/src/node_modules/init-package-json/node_modules/promzard/promzard.js-49-    if (er && this.backupFile) {
##############################################
/src/node_modules/init-package-json/node_modules/promzard/test/fn.input-12-  a_function: function (cb) {
/src/node_modules/init-package-json/node_modules/promzard/test/fn.input:13:    fs.readFile(__filename, 'utf8', cb)
/src/node_modules/init-package-json/node_modules/promzard/test/fn.input-14-  },
##############################################
/src/node_modules/init-package-json/node_modules/promzard/test/exports.js-27-    console.error('output=%j', output)
/src/node_modules/init-package-json/node_modules/promzard/test/exports.js:28:    output = JSON.parse(output)
/src/node_modules/init-package-json/node_modules/promzard/test/exports.js-29-    t.same({
##############################################
/src/node_modules/init-package-json/node_modules/promzard/test/fn.js-33-    console.error('output=%j', output)
/src/node_modules/init-package-json/node_modules/promzard/test/fn.js:34:    output = JSON.parse(output)
/src/node_modules/init-package-json/node_modules/promzard/test/fn.js-35-    t.same(output, expect);
##############################################
/src/node_modules/init-package-json/node_modules/promzard/test/basic.js-86-    console.error('actual', actual)
/src/node_modules/init-package-json/node_modules/promzard/test/basic.js:87:    actual = JSON.parse(actual)
/src/node_modules/init-package-json/node_modules/promzard/test/basic.js-88-    t.deepEqual(actual, expect)
##############################################
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js-8-
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js:9:fs.readFile(package, 'utf8', function (er, d) {
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js-10-  if (er) ctx = {}
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js:11:  try { ctx = JSON.parse(d); pkg = JSON.parse(d) }
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js-12-  catch (e) { ctx = {} }
##############################################
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js-31-    console.error('package data %s', JSON.stringify(data, null, 2))
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js:32:    fs.writeFile(package, JSON.stringify(pkg, null, 2), function (er) {
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init.js-33-      if (er) throw er
##############################################
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-90-            return next()
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js:91:          fs.readFile('node_modules/' + d + '/package.json', function (er, p) {
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-92-            if (er) return next()
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js:93:            try { p = JSON.parse(p) } catch (e) { return next() }
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-94-            if (!p.version) return next()
##############################################
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-114-            return next()
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js:115:          fs.readFile('node_modules/' + d + '/package.json', function (er, p) {
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-116-            if (er) return next()
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js:117:            try { p = JSON.parse(p) } catch (e) { return next() }
/src/node_modules/init-package-json/node_modules/promzard/example/npm-init/init-input.js-118-            if (!p.version) return next()
##############################################
/src/node_modules/init-package-json/default-input.js-25-      var dp = path.join(dirname, 'node_modules', d, 'package.json')
/src/node_modules/init-package-json/default-input.js:26:      fs.readFile(dp, 'utf8', function (er, p) {
/src/node_modules/init-package-json/default-input.js-27-        if (er) return next()
/src/node_modules/init-package-json/default-input.js:28:        try { p = JSON.parse(p) }
/src/node_modules/init-package-json/default-input.js-29-        catch (e) { return next() }
##############################################
/src/node_modules/init-package-json/default-input.js-140-  exports.repository = function (cb) {
/src/node_modules/init-package-json/default-input.js:141:    fs.readFile('.git/config', 'utf8', function (er, gconf) {
/src/node_modules/init-package-json/default-input.js-142-      if (er || !gconf) return cb(null, prompt('git repository'))
##############################################
/src/node_modules/init-package-json/init-package-json.js-98-          } else {
/src/node_modules/init-package-json/init-package-json.js:99:            fs.writeFile(package, d, 'utf8', function (er) {
/src/node_modules/init-package-json/init-package-json.js-100-              return cb(er, pkg)
##############################################
/src/node_modules/init-package-json/test/basic.input-9-exports.main = package.main || 'main.js'
/src/node_modules/init-package-json/test/basic.input:10:exports.config = JSON.parse(JSON.stringify(config))
/src/node_modules/init-package-json/test/basic.input-11-try {delete exports.config.config}catch(e){}
##############################################
/src/node_modules/init-package-json/test/basic.input-14-try {delete exports.config.package}catch(e){}
/src/node_modules/init-package-json/test/basic.input:15:exports.package = JSON.parse(JSON.stringify(package))
##############################################
/src/node_modules/npmconf/node_modules/config-chain/readme.markdown-127-
/src/node_modules/npmconf/node_modules/config-chain/readme.markdown:128:## cc.parse(content, file, type)
/src/node_modules/npmconf/node_modules/config-chain/readme.markdown-129-
##############################################
/src/node_modules/npmconf/node_modules/config-chain/package.json-24-  },
/src/node_modules/npmconf/node_modules/config-chain/package.json:25:  "readme": "#config-chain\n\nUSE THIS MODULE TO LOAD ALL YOUR CONFIGURATIONS\n\n``` js\n\n  //npm install config-chain\n\n  var cc = require('config-chain')\n    , opts = require('optimist').argv //ALWAYS USE OPTIMIST FOR COMMAND LINE OPTIONS.\n    , env = opts.env || process.env.YOUR_APP_ENV || 'dev' //SET YOUR ENV LIKE THIS.\n\n  // EACH ARG TO CONFIGURATOR IS LOADED INTO CONFIGURATION CHAIN\n  // EARLIER ITEMS OVERIDE LATER ITEMS\n  // PUTS COMMAND LINE OPTS FIRST, AND DEFAULTS LAST!\n\n  //strings are interpereted as filenames.\n  //will be loaded synchronously\n\n  var conf =\n  cc(\n    //OVERRIDE SETTINGS WITH COMMAND LINE OPTS\n    opts,\n\n    //ENV VARS IF PREFIXED WITH 'myApp_'\n\n    cc.env('myApp_'), //myApp_foo = 'like this'\n\n    //FILE NAMED BY ENV\n    path.join(__dirname,  'config.' + env + '.json'),\n\n    //IF `env` is PRODUCTION\n    env === 'prod'\n      ? path.join(__dirname, 'special.json') //load a special file\n      : null //NULL IS IGNORED!\n\n    //SUBDIR FOR ENV CONFIG\n    path.join(__dirname,  'config', env, 'config.json'),\n\n    //SEARCH PARENT DIRECTORIES FROM CURRENT DIR FOR FILE\n    cc.find('config.json'),\n\n    //PUT DEFAULTS LAST\n    {\n      host: 'localhost'\n      port: 8000\n    })\n\n  var host = conf.get('host')\n\n  // or\n\n  var host = conf.store.host\n\n```\n\nFINALLY, EASY FLEXIBLE CONFIGURATIONS!\n\n##see also: [proto-list](https://github.com/isaacs/proto-list/)\n\nWHATS THAT YOU SAY?\n\nYOU WANT A \"CLASS\" SO THAT YOU CAN DO CRAYCRAY JQUERY CRAPS?\n\nEXTEND WITH YOUR OWN FUNCTIONALTY!?\n\n## CONFIGCHAIN LIVES TO SERVE ONLY YOU!\n\n```javascript\nvar cc = require('config-chain')\n\n// all the stuff you did before\nvar config = cc({\n      some: 'object'\n    },\n    cc.find('config.json'),\n    cc.env('myApp_')\n  )\n  // CONFIGS AS A SERVICE, aka \"CaaS\", aka EVERY DEVOPS DREAM OMG!\n  .addUrl('http://configurator:1234/my-configs')\n  // ASYNC FTW!\n  .addFile('/path/to/file.json')\n\n  // OBJECTS ARE OK TOO, they're SYNC but they still ORDER RIGHT\n  // BECAUSE PROMISES ARE USED BUT NO, NOT *THOSE* PROMISES, JUST\n  // ACTUAL PROMISES LIKE YOU MAKE TO YOUR MOM, KEPT OUT OF LOVE\n  .add({ another: 'object' })\n\n  // DIE A THOUSAND DEATHS IF THIS EVER HAPPENS!!\n  .on('error', function (er) {\n    // IF ONLY THERE WAS SOMETHIGN HARDER THAN THROW\n    // MY SORROW COULD BE ADEQUATELY EXPRESSED.  /o\\\n    throw er\n  })\n\n  // THROW A PARTY IN YOUR FACE WHEN ITS ALL LOADED!!\n  .on('load', function (config) {\n    console.awesome('HOLY SHIT!')\n  })\n```\n\n# BORING API DOCS\n\n## cc(...args)\n\nMAKE A CHAIN AND ADD ALL THE ARGS.\n\nIf the arg is a STRING, then it shall be a JSON FILENAME.\n\nSYNC I/O!\n\nRETURN THE CHAIN!\n\n## cc.json(...args)\n\nJoin the args INTO A JSON FILENAME!\n\nSYNC I/O!\n\n## cc.find(relativePath)\n\nSEEK the RELATIVE PATH by climbing the TREE OF DIRECTORIES.\n\nRETURN THE FOUND PATH!\n\nSYNC I/O!\n\n## cc.parse(content, file, type)\n\nParse the content string, and guess the type from either the\nspecified type or the filename.\n\nRETURN THE RESULTING OBJECT!\n\nNO I/O!\n\n## cc.env(prefix, env=process.env)\n\nGet all the keys on the provided env object (or process.env) which are\nprefixed by the specified prefix, and put the values on a new object.\n\nRETURN THE RESULTING OBJECT!\n\nNO I/O!\n\n## cc.ConfigChain()\n\nThe ConfigChain class for CRAY CRAY JQUERY STYLE METHOD CHAINING!\n\nOne of these is returned by the main exported function, as well.\n\nIt inherits (prototypically) from\n[ProtoList](https://github.com/isaacs/proto-list/), and also inherits\n(parasitically) from\n[EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\n\nIt has all the methods from both, and except where noted, they are\nunchanged.\n\n### LET IT BE KNOWN THAT chain IS AN INSTANCE OF ConfigChain.\n\n## chain.sources\n\nA list of all the places where it got stuff.  The keys are the names\npassed to addFile or addUrl etc, and the value is an object with some\ninfo about the data source.\n\n## chain.addFile(filename, type, [name=filename])\n\nFilename is the name of the file.  Name is an arbitrary string to be\nused later if you desire.  Type is either 'ini' or 'json', and will\ntry to guess intelligently if omitted.\n\nLoaded files can be saved later.\n\n## chain.addUrl(url, type, [name=url])\n\nSame as the filename thing, but with a url.\n\nCan't be saved later.\n\n## chain.addEnv(prefix, env, [name='env'])\n\nAdd all the keys from the env object that start with the prefix.\n\n## chain.addString(data, file, type, [name])\n\nParse the string and add it to the set.  (Mainly used internally.)\n\n## chain.add(object, [name])\n\nAdd the object to the set.\n\n## chain.root {Object}\n\nThe root from which all the other config objects in the set descend\nprototypically.\n\nPut your defaults here.\n\n## chain.set(key, value, name)\n\nSet the key to the value on the named config object.  If name is\nunset, then set it on the first config object in the set.  (That is,\nthe one with the highest priority, which was added first.)\n\n## chain.get(key, [name])\n\nGet the key from the named config object explicitly, or from the\nresolved configs if not specified.\n\n## chain.save(name, type)\n\nWrite the named config object back to its origin.\n\nCurrently only supported for env and file config types.\n\nFor files, encode the data according to the type.\n\n## chain.on('save', function () {})\n\nWhen one or more files are saved, emits `save` event when they're all\nsaved.\n\n## chain.on('load', function (chain) {})\n\nWhen the config chain has loaded all the specified files and urls and\nsuch, the 'load' event fires.\n",
/src/node_modules/npmconf/node_modules/config-chain/package.json-26-  "readmeFilename": "readme.markdown",
##############################################
/src/node_modules/npmconf/node_modules/config-chain/index.js-46-  if (!type) {
/src/node_modules/npmconf/node_modules/config-chain/index.js:47:    try { return JSON.parse(content) }
/src/node_modules/npmconf/node_modules/config-chain/index.js:48:    catch (er) { return ini.parse(content) }
/src/node_modules/npmconf/node_modules/config-chain/index.js-49-  } else if (type === 'json') {
/src/node_modules/npmconf/node_modules/config-chain/index.js-50-    if (this.emit) {
/src/node_modules/npmconf/node_modules/config-chain/index.js:51:      try { return JSON.parse(content) }
/src/node_modules/npmconf/node_modules/config-chain/index.js-52-      catch (er) { this.emit('error', er) }
/src/node_modules/npmconf/node_modules/config-chain/index.js-53-    } else {
/src/node_modules/npmconf/node_modules/config-chain/index.js:54:      return JSON.parse(content)
/src/node_modules/npmconf/node_modules/config-chain/index.js-55-    }
/src/node_modules/npmconf/node_modules/config-chain/index.js-56-  } else {
/src/node_modules/npmconf/node_modules/config-chain/index.js:57:    return ini.parse(content)
/src/node_modules/npmconf/node_modules/config-chain/index.js-58-  }
##############################################
/src/node_modules/npmconf/node_modules/config-chain/index.js-175-  this._saving ++
/src/node_modules/npmconf/node_modules/config-chain/index.js:176:  fs.writeFile(target.path, data, 'utf8', function (er) {
/src/node_modules/npmconf/node_modules/config-chain/index.js-177-    this._saving --
##############################################
/src/node_modules/npmconf/node_modules/config-chain/index.js-195-  this._await()
/src/node_modules/npmconf/node_modules/config-chain/index.js:196:  fs.readFile(file, 'utf8', function (er, data) {
/src/node_modules/npmconf/node_modules/config-chain/index.js-197-    if (er) this.emit('error', er)
##############################################
/src/node_modules/npmconf/node_modules/config-chain/index.js-242-ConfigChain.prototype.addString = function (data, file, type, marker) {
/src/node_modules/npmconf/node_modules/config-chain/index.js:243:  data = this.parse(data, file, type)
/src/node_modules/npmconf/node_modules/config-chain/index.js-244-  this.add(data, marker)
##############################################
/src/node_modules/npmconf/node_modules/config-chain/test/chain-class.js-15-var reqs = 0
/src/node_modules/npmconf/node_modules/config-chain/test/chain-class.js:16:http.createServer(function (q, s) {
/src/node_modules/npmconf/node_modules/config-chain/test/chain-class.js-17-  if (++reqs === 2) this.close()
##############################################
/src/node_modules/npmconf/config-defs.js-7-  , semver = require("semver")
/src/node_modules/npmconf/config-defs.js:8:  , stableFamily = semver.parse(process.version)
/src/node_modules/npmconf/config-defs.js-9-  , nopt = require("nopt")
##############################################
/src/node_modules/npmconf/test/save.js-62-    var foundConf = ini.stringify(conf.sources.user.data)
/src/node_modules/npmconf/test/save.js:63:    t.same(ini.parse(foundConf), ini.parse(expectConf))
/src/node_modules/npmconf/test/save.js-64-    fs.unlinkSync(common.userconfig)
##############################################
/src/node_modules/npmconf/test/save.js-68-      var uc = fs.readFileSync(conf.get('userconfig'), 'utf8')
/src/node_modules/npmconf/test/save.js:69:      t.same(ini.parse(uc), ini.parse(expectFile))
/src/node_modules/npmconf/test/save.js-70-      t.end()
##############################################
/src/node_modules/npmconf/npmconf.js-236-  if (!data.trim())
/src/node_modules/npmconf/npmconf.js:237:    fs.unlink(target.path, done)
/src/node_modules/npmconf/npmconf.js-238-  else {
##############################################
/src/node_modules/npmconf/npmconf.js-241-        return then(er)
/src/node_modules/npmconf/npmconf.js:242:      fs.writeFile(target.path, data, 'utf8', function (er) {
/src/node_modules/npmconf/npmconf.js-243-        if (er)
##############################################
/src/node_modules/npmconf/npmconf.js-279-  this._await()
/src/node_modules/npmconf/npmconf.js:280:  fs.readFile(file, 'utf8', function (er, data) {
/src/node_modules/npmconf/npmconf.js-281-    if (er) // just ignore missing files.
##############################################
/src/node_modules/npmconf/npmconf.js-337-  if (f.match(/^".*"$/))
/src/node_modules/npmconf/npmconf.js:338:    f = JSON.parse(f)
/src/node_modules/npmconf/npmconf.js-339-
##############################################
/src/node_modules/rimraf/rimraf.js-87-
/src/node_modules/rimraf/rimraf.js:88:  options.unlink(p, function (er) {
/src/node_modules/rimraf/rimraf.js-89-    if (er) {
##############################################
/src/node_modules/rimraf/rimraf.js-119-        else
/src/node_modules/rimraf/rimraf.js:120:          options.unlink(p, cb)
/src/node_modules/rimraf/rimraf.js-121-      })
##############################################
/src/node_modules/npm-cache-filename/index.js-9-
/src/node_modules/npm-cache-filename/index.js:10:  u = url.parse(u);;
/src/node_modules/npm-cache-filename/index.js-11-  var h = u.host.replace(/:/g, '_');;
##############################################
/src/node_modules/glob/test/00-setup.js-42-      }
/src/node_modules/glob/test/00-setup.js:43:      fs.writeFile(f, "i like tests", function (er) {
/src/node_modules/glob/test/00-setup.js-44-        t.ifError(er, "make file")
##############################################
/src/node_modules/glob/test/00-setup.js-137-  var data = JSON.stringify(bashOutput, null, 2) + "\n"
/src/node_modules/glob/test/00-setup.js:138:  fs.writeFile(fname, data, function (er) {
/src/node_modules/glob/test/00-setup.js-139-    t.ifError(er)
##############################################
/src/html/doc/misc/npm-config.html-88-</code></pre><p>and the server.js is this:</p>
/src/html/doc/misc/npm-config.html:89:<pre><code>http.createServer(...).listen(process.env.npm_package_config_port)
/src/html/doc/misc/npm-config.html-90-</code></pre><p>then the user could change the behavior by doing:</p>
##############################################
/src/html/doc/misc/npm-scripts.html-132-</code></pre><p>and the server.js is this:</p>
/src/html/doc/misc/npm-scripts.html:133:<pre><code>http.createServer(...).listen(process.env.npm_package_config_port)
/src/html/doc/misc/npm-scripts.html-134-</code></pre><p>then the user could change the behavior by doing:</p>
##############################################
/src/lib/config.js-68-    if (er) return cb(er)
/src/lib/config.js:69:    fs.readFile(f, "utf8", function (er, data) {
/src/lib/config.js-70-      if (er) data = ""
##############################################
/src/lib/cache.js-253-  // otherwise, treat as name@version
/src/lib/cache.js:254:  var p = url.parse(spec) || {}
/src/lib/cache.js-255-  log.verbose("parsed url", p)
##############################################
/src/lib/cache.js-326-
/src/lib/cache.js:327:  fs.writeFile(tmp, JSON.stringify(data), "utf8", function (er) {
/src/lib/cache.js-328-    if (er) return done(er)
/src/lib/cache.js:329:    fs.rename(tmp, pj, function (er) {
/src/lib/cache.js-330-      done(er, data)
##############################################
/src/lib/npm.js-43-  // startup, ok to do this synchronously
/src/lib/npm.js:44:  var j = JSON.parse(fs.readFileSync(
/src/lib/npm.js-45-    path.join(__dirname, "../package.json"))+"")
##############################################
/src/lib/pack.js-49-                             , "package.tgz" )
/src/lib/pack.js:50:      , from = fs.createReadStream(cached)
/src/lib/pack.js-51-      , to = fs.createWriteStream(fname)
##############################################
/src/lib/completion.js-155-
/src/lib/completion.js:156:  fs.readFile(p, "utf8", function (er, d) {
/src/lib/completion.js-157-    if (er) return cb(er)
##############################################
/src/lib/outdated.js-266-
/src/lib/outdated.js:267:  if (isGitUrl(url.parse(req)))
/src/lib/outdated.js-268-    return doIt("git", "git")
##############################################
/src/lib/outdated.js-307-      // there is no newer version available
/src/lib/outdated.js:308:      var dFromUrl = d._from && url.parse(d._from).protocol
/src/lib/outdated.js:309:      var cFromUrl = curr && curr.from && url.parse(curr.from).protocol
/src/lib/outdated.js-310-
##############################################
/src/lib/update.js-37-      // use the initial installation method (repo, tar, git) for updating
/src/lib/update.js:38:      if (url.parse(req).protocol) what = req
/src/lib/update.js-39-      npm.commands.install(where, what, cb)
##############################################
/src/lib/install.js-286-
/src/lib/install.js:287:    fs.readFile(wrapfile, "utf8", function (er, wrapjson) {
/src/lib/install.js-288-      if (er) {
##############################################
/src/lib/install.js-294-      try {
/src/lib/install.js:295:        newwrap = JSON.parse(wrapjson)
/src/lib/install.js-296-      } catch (ex) {
##############################################
/src/lib/install.js-324-  return (w.resolved) ? w.resolved
/src/lib/install.js:325:       : (w.from && url.parse(w.from).protocol) ? w.from
/src/lib/install.js-326-       : w.version
##############################################
/src/lib/install.js-350-        var t = tree[k]
/src/lib/install.js:351:          , u = url.parse(t.from)
/src/lib/install.js-352-          , w = t.what.split("@")
##############################################
/src/lib/install.js-365-  // tricky npm-specific stuff that's in there.
/src/lib/install.js:366:  fs.readFile(saveTarget, function (er, data) {
/src/lib/install.js-367-    // ignore errors here, just don't save it.
/src/lib/install.js-368-    try {
/src/lib/install.js:369:      data = JSON.parse(data.toString("utf8"))
/src/lib/install.js-370-    } catch (ex) {
##############################################
/src/lib/install.js-402-    data = JSON.stringify(data, null, 2) + "\n"
/src/lib/install.js:403:    fs.writeFile(saveTarget, data, function (er) {
/src/lib/install.js-404-      cb(er, installed, tree, pretty)
##############################################
/src/lib/install.js-723-      if (maybeGit)
/src/lib/install.js:724:        isGit = isGitUrl(url.parse(maybeGit))
/src/lib/install.js-725-
##############################################
/src/lib/version.js-24-  if (args.length > 1) return cb_(version.usage)
/src/lib/version.js:25:  fs.readFile(path.join(process.cwd(), "package.json"), function (er, data) {
/src/lib/version.js-26-    if (!args.length) {
##############################################
/src/lib/version.js-32-      try {
/src/lib/version.js:33:        data = JSON.parse(data.toString())
/src/lib/version.js-34-      } catch (er) {
##############################################
/src/lib/version.js-49-    try {
/src/lib/version.js:50:      data = JSON.parse(data)
/src/lib/version.js-51-    } catch (er) {
##############################################
/src/lib/version.js-121-function write (data, cb) {
/src/lib/version.js:122:  fs.writeFile( path.join(process.cwd(), "package.json")
/src/lib/version.js-123-              , new Buffer(JSON.stringify(data, null, 2) + "\n")
##############################################
/src/lib/help-search.js-34-  asyncMap(files, function (file, cb) {
/src/lib/help-search.js:35:    fs.readFile(file, 'utf8', function (er, data) {
/src/lib/help-search.js-36-      res[file] = data
##############################################
/src/lib/uninstall.js-80-    // filled in, for mans and other bs.
/src/lib/uninstall.js:81:    fs.readFile(pj, 'utf8', function (er, json) {
/src/lib/uninstall.js-82-      var pkg
/src/lib/uninstall.js-83-      try {
/src/lib/uninstall.js:84:        pkg = JSON.parse(json)
/src/lib/uninstall.js-85-      } catch (_) {}
##############################################
/src/lib/uninstall.js-122-
/src/lib/uninstall.js:123:      fs.writeFile(pj, JSON.stringify(pkg, null, 2) + "\n", function (er) {
/src/lib/uninstall.js-124-        return cb_(er, data)
##############################################
/src/lib/ls.js-263-  if (data._resolved) {
/src/lib/ls.js:264:    if (isGitUrl(url.parse(data._resolved)))
/src/lib/ls.js-265-      out.label += " (" + data._resolved + ")"
##############################################
/src/lib/ls.js-299-    }
/src/lib/ls.js:300:    var u = url.parse(from)
/src/lib/ls.js-301-    if (u.protocol) extras.push(from)
##############################################
/src/lib/shrinkwrap.js-72-
/src/lib/shrinkwrap.js:73:  fs.writeFile(file, swdata, function (er) {
/src/lib/shrinkwrap.js-74-    if (er) return cb(er)
##############################################
/src/lib/cache/maybe-github.js-11-  var u = "git://github.com/" + p
/src/lib/cache/maybe-github.js:12:    , up = url.parse(u)
/src/lib/cache/maybe-github.js-13-  log.info("maybeGithub", "Attempting %s from %s", p, u)
##############################################
/src/lib/cache/maybe-github.js-17-      var upriv = "git+ssh://git@github.com:" + p
/src/lib/cache/maybe-github.js:18:        , uppriv = url.parse(upriv)
/src/lib/cache/maybe-github.js-19-
##############################################
/src/lib/cache/add-remote-git.js-230-      log.verbose("git rev-list -n1 " + co, stdout)
/src/lib/cache/add-remote-git.js:231:      var parsed = url.parse(origUrl)
/src/lib/cache/add-remote-git.js-232-      parsed.hash = stdout
##############################################
/src/lib/cache/add-named.js-172-      // detached tarballs may not work.
/src/lib/cache/add-named.js:173:      var tb = url.parse(dist.tarball)
/src/lib/cache/add-named.js:174:      var rp = url.parse(npm.config.get("registry"))
/src/lib/cache/add-named.js-175-      if (tb.hostname === rp.hostname
/src/lib/cache/add-named.js-176-          && tb.protocol !== rp.protocol) {
/src/lib/cache/add-named.js:177:        tb.protocol = url.parse(npm.config.get("registry")).protocol
/src/lib/cache/add-named.js-178-        delete tb.href
##############################################
/src/lib/cache/add-local-tarball.js-59-    if (er) return cb(er)
/src/lib/cache/add-local-tarball.js:60:    var from = fs.createReadStream(p)
/src/lib/cache/add-local-tarball.js-61-      , to = fs.createWriteStream(tmp)
##############################################
/src/lib/cache/add-local-tarball.js-120-      var json = JSON.stringify(pkgData, null, 2)
/src/lib/cache/add-local-tarball.js:121:      fs.writeFile(pj, json, "utf8", function (er) {
/src/lib/cache/add-local-tarball.js-122-        cb(er, pkgData)
##############################################
/src/lib/cache/add-local-tarball.js-195-      if (er) return cb(er)
/src/lib/cache/add-local-tarball.js:196:      var read = fs.createReadStream(tgz)
/src/lib/cache/add-local-tarball.js-197-      var write = fs.createWriteStream(target)
##############################################
/src/lib/utils/fetch.js-65-function makeRequest (remote, fstr, headers) {
/src/lib/utils/fetch.js:66:  remote = url.parse(remote)
/src/lib/utils/fetch.js-67-  log.http("GET", remote.href)
/src/lib/utils/fetch.js:68:  regHost = regHost || url.parse(npm.config.get("registry")).host
/src/lib/utils/fetch.js-69-
##############################################
/src/lib/utils/tar.js-202-
/src/lib/utils/tar.js:203:  var fst = fs.createReadStream(tarball)
/src/lib/utils/tar.js-204-
##############################################
/src/lib/utils/tar.js-313-            }
/src/lib/utils/tar.js:314:            fs.writeFile(j, JSON.stringify(d) + "\n", cb)
/src/lib/utils/tar.js-315-          })
##############################################
/src/lib/repo.js-67-    }
/src/lib/repo.js:68:    url = url_.parse(url)
/src/lib/repo.js-69-    var protocol = url.protocol === 'https:'
##############################################
/src/test/packages/npm-test-shrinkwrap/test.js-14-
/src/test/packages/npm-test-shrinkwrap/test.js:15:  var actual = JSON.parse(stdout)
/src/test/packages/npm-test-shrinkwrap/test.js-16-  var expected = require("./npm-shrinkwrap.json")
##############################################
/src/test/tap/shrinkwrap-dev-dependency.js-25-
/src/test/tap/shrinkwrap-dev-dependency.js:26:          fs.readFile(desiredResultsPath, function (err, desired) {
/src/test/tap/shrinkwrap-dev-dependency.js-27-            if (err) return t.fail(err)
/src/test/tap/shrinkwrap-dev-dependency.js-28-
/src/test/tap/shrinkwrap-dev-dependency.js:29:            t.deepEqual(results, JSON.parse(desired))
/src/test/tap/shrinkwrap-dev-dependency.js-30-            s.close()
##############################################
/src/test/tap/install-save-prefix.js-31-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-prefix.js:32:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-prefix.js:33:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-prefix.js-34-          t.deepEqual(pkgJson.dependencies, {
##############################################
/src/test/tap/install-save-prefix.js-57-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-prefix.js:58:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-prefix.js:59:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-prefix.js-60-          t.deepEqual(pkgJson.devDependencies, {
##############################################
/src/test/tap/install-save-prefix.js-83-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-prefix.js:84:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-prefix.js:85:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-prefix.js-86-          t.deepEqual(pkgJson.dependencies, {
##############################################
/src/test/tap/install-save-prefix.js-110-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-prefix.js:111:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-prefix.js:112:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-prefix.js-113-          t.deepEqual(pkgJson.devDependencies, {
##############################################
/src/test/tap/install-save-prefix.js-133-function resetPackageJSON(pkg) {
/src/test/tap/install-save-prefix.js:134:  var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-prefix.js-135-  delete pkgJson.dependencies
##############################################
/src/test/tap/publish-config.js-21-  var child
/src/test/tap/publish-config.js:22:  require('http').createServer(function (req, res) {
/src/test/tap/publish-config.js-23-    t.pass('got request on the fakey fake registry')
##############################################
/src/test/tap/sorted-package-json.js-24-
/src/test/tap/sorted-package-json.js:25:  var before = JSON.parse(fs.readFileSync(packageJson).toString())
/src/test/tap/sorted-package-json.js-26-
##############################################
/src/test/tap/sorted-package-json.js-45-      var result = fs.readFileSync(packageJson).toString()
/src/test/tap/sorted-package-json.js:46:        , resultAsJson = JSON.parse(result)
/src/test/tap/sorted-package-json.js-47-
##############################################
/src/test/tap/shrinkwrap-empty-deps.js-19-        if (err) return t.fail(err)
/src/test/tap/shrinkwrap-empty-deps.js:20:        fs.readFile(desiredResultsPath, function (err, desired) {
/src/test/tap/shrinkwrap-empty-deps.js-21-          if (err) return t.fail(err)
##############################################
/src/test/tap/shrinkwrap-empty-deps.js-25-            "dependencies": {}
/src/test/tap/shrinkwrap-empty-deps.js:26:          }, JSON.parse(desired))
/src/test/tap/shrinkwrap-empty-deps.js-27-          cleanup()
##############################################
/src/test/tap/update-save.js-55-
/src/test/tap/update-save.js:56:    var pkgdata = JSON.parse(fs.readFileSync(PKG, 'utf8'))
/src/test/tap/update-save.js-57-    t.deepEqual(pkgdata.dependencies, {mkdirp: '^0.3.5'}, 'only dependencies updated')
##############################################
/src/test/tap/update-save.js-70-
/src/test/tap/update-save.js:71:    var pkgdata = JSON.parse(fs.readFileSync(PKG, 'utf8'))
/src/test/tap/update-save.js-72-    t.deepEqual(pkgdata.dependencies, DEFAULT_PKG.dependencies, 'dependencies should be untouched')
##############################################
/src/test/tap/update-save.js-89-
/src/test/tap/update-save.js:90:    var pkgdata = JSON.parse(fs.readFileSync(PKG, 'utf8'))
/src/test/tap/update-save.js-91-    t.deepEqual(pkgdata.dependencies, DEFAULT_PKG.dependencies, 'dependencies should be untouched')
##############################################
/src/test/tap/update-save.js-108-
/src/test/tap/update-save.js:109:    var pkgdata = JSON.parse(fs.readFileSync(PKG, 'utf8'))
/src/test/tap/update-save.js-110-    t.deepEqual(pkgdata.dependencies, {mkdirp: '^0.3.5'}, 'dependencies should not include optional dependencies')
##############################################
/src/test/tap/update-save.js-123-
/src/test/tap/update-save.js:124:    var pkgdata = JSON.parse(fs.readFileSync(PKG, 'utf8'))
/src/test/tap/update-save.js-125-    t.deepEqual(pkgdata.dependencies, {
##############################################
/src/test/tap/outdated-json.js-52-        child.on('exit', function () {
/src/test/tap/outdated-json.js:53:          out = JSON.parse(out)
/src/test/tap/outdated-json.js-54-          t.deepEqual(out, expected)
##############################################
/src/test/tap/cache-add-unpublished.js-38-test("setup", function (t) {
/src/test/tap/cache-add-unpublished.js:39:  server = http.createServer(function(req, res) {
/src/test/tap/cache-add-unpublished.js-40-    res.end(JSON.stringify(doc))
##############################################
/src/test/tap/prepublish.js-28-  function next () {
/src/test/tap/prepublish.js:29:    fs.writeFile(pkg + '/package.json', JSON.stringify({
/src/test/tap/prepublish.js-30-      name: 'npm-test-prepublish',
##############################################
/src/test/tap/install-save-exact.js-31-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-exact.js:32:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-exact.js:33:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-exact.js-34-          t.deepEqual(pkgJson.dependencies, {
##############################################
/src/test/tap/install-save-exact.js-59-          var p = path.resolve(pkg, 'node_modules/underscore/package.json')
/src/test/tap/install-save-exact.js:60:          t.ok(JSON.parse(fs.readFileSync(p)))
/src/test/tap/install-save-exact.js:61:          var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-exact.js-62-          console.log(pkgJson)
##############################################
/src/test/tap/install-save-exact.js-83-function resetPackageJSON(pkg) {
/src/test/tap/install-save-exact.js:84:  var pkgJson = JSON.parse(fs.readFileSync(pkg + '/package.json', 'utf8'))
/src/test/tap/install-save-exact.js-85-  delete pkgJson.dependencies
##############################################
/src/test/tap/peer-deps.js-25-
/src/test/tap/peer-deps.js:26:          fs.readFile(desiredResultsPath, function (err, desired) {
/src/test/tap/peer-deps.js-27-            if (err) return t.fail(err)
/src/test/tap/peer-deps.js-28-
/src/test/tap/peer-deps.js:29:            t.deepEqual(results, JSON.parse(desired))
/src/test/tap/peer-deps.js-30-            s.close()
##############################################
/src/test/tap/test-run-ls.js-29-    t.notOk(code)
/src/test/tap/test-run-ls.js:30:    t.equal(JSON.parse(so).test, testscript)
/src/test/tap/test-run-ls.js-31-    t.end()
##############################################
/src/test/tap/install-at-locally.js-21-      var p = path.resolve(pkg, 'node_modules/install-at-locally/package.json')
/src/test/tap/install-at-locally.js:22:      t.ok(JSON.parse(fs.readFileSync(p, 'utf8')))
/src/test/tap/install-at-locally.js-23-      t.end()
##############################################
/src/test/tap/install-at-locally.js-31-      var p = path.resolve(pkg, 'node_modules/install-at-locally/package.json')
/src/test/tap/install-at-locally.js:32:      t.ok(JSON.parse(fs.readFileSync(p, 'utf8')))
/src/test/tap/install-at-locally.js-33-      t.end()
##############################################
/src/test/tap/shrinkwrap-shared-dev-dependency.js-25-
/src/test/tap/shrinkwrap-shared-dev-dependency.js:26:          fs.readFile(desiredResultsPath, function (err, desired) {
/src/test/tap/shrinkwrap-shared-dev-dependency.js-27-            if (err) return t.fail(err)
/src/test/tap/shrinkwrap-shared-dev-dependency.js-28-
/src/test/tap/shrinkwrap-shared-dev-dependency.js:29:            t.deepEqual(results, JSON.parse(desired))
/src/test/tap/shrinkwrap-shared-dev-dependency.js-30-            s.close()
##############################################
/src/test/tap/referer.js-6-test("should send referer http header", function (t) {
/src/test/tap/referer.js:7:  var server = http.createServer(function (q, s) {
/src/test/tap/referer.js-8-    t.equal(q.headers.referer, "install foo")
##############################################
/src/doc/misc/npm-config.md-98-
/src/doc/misc/npm-config.md:99:    http.createServer(...).listen(process.env.npm_package_config_port)
/src/doc/misc/npm-config.md-100-
##############################################
/src/doc/misc/npm-scripts.md-149-
/src/doc/misc/npm-scripts.md:150:    http.createServer(...).listen(process.env.npm_package_config_port)
/src/doc/misc/npm-scripts.md-151-
