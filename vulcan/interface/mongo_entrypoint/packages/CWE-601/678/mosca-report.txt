<report_mosca>
 <Path>/src/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -  var ignore = { hash: 1, query: 1 };

 Line: 145 -   * @param {Boolean|Function} parser Parser for the query string.

 Line: 164 -    //    where the boolean indicates that the query string should also be parsed.

 Line: 228 -    // Also parse the supplied query string in to an object. If we're supplied

 Line: 282 -   * @param {Boolean|Function} fn  When setting the query, it will be the function

 Line: 283 -   *                               used to parse the query.

 Line: 371 -   * @param {Function} stringify Optional query stringify function.

 Line: 378 -    var query

 Line: 394 -    query = 'object' === typeof url.query ? stringify(url.query) : url.query;

 Line: 395 -    if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/url-parse.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 39 -  var ignore = { hash: 1, query: 1 };

 Line: 147 -   * @param {Boolean|Function} parser Parser for the query string.

 Line: 166 -    //    where the boolean indicates that the query string should also be parsed.

 Line: 230 -    // Also parse the supplied query string in to an object. If we're supplied

 Line: 284 -   * @param {Boolean|Function} fn  When setting the query, it will be the function

 Line: 285 -   *                               used to parse the query.

 Line: 373 -   * @param {Function} stringify Optional query stringify function.

 Line: 380 -    var query

 Line: 396 -    query = 'object' === typeof url.query ? stringify(url.query) : url.query;

 Line: 397 -    if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

 Line: 434 -   * Simple query string parser.

 Line: 436 -   * @param {String} query The query string that needs to be parsed.

 Line: 440 -  function querystring(query) {

 Line: 452 -      // querystrings.

 Line: 462 -   * Transform a query string to an object.

 Line: 469 -  function querystringify(obj, prefix) {

 Line: 491 -  exports.stringify = querystringify;

 Line: 492 -  exports.parse = querystring;

</Result>
</report_mosca>

