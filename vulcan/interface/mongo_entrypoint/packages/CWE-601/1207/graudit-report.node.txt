/src/examples/file-server.js-7-
/src/examples/file-server.js:8:require('http').createServer(function (request, response) {
/src/examples/file-server.js-9-    file.serve(request, response, function (err, res) {
##############################################
/src/README.md-20-
/src/README.md:21:require('http').createServer(function (request, response) {
/src/README.md-22-    request.addListener('end', function () {
##############################################
/src/README.md-67-
/src/README.md:68:require('http').createServer(function (request, response) {
/src/README.md-69-    request.addListener('end', function () {
##############################################
/src/README.md-86-```js
/src/README.md:87:require('http').createServer(function (request, response) {
/src/README.md-88-    request.addListener('end', function () {
##############################################
/src/README.md-109-
/src/README.md:110:require('http').createServer(function (request, response) {
/src/README.md-111-    request.addListener('end', function () {
##############################################
/src/bin/cli.js-89-if (argv.headers) {
/src/bin/cli.js:90:    (options = options || {}).headers = JSON.parse(argv.headers);
/src/bin/cli.js-91-}
##############################################
/src/bin/cli.js-94-    (options = options || {}).headers =
/src/bin/cli.js:95:        JSON.parse(fs.readFileSync(argv['header-file']));
/src/bin/cli.js-96-}
##############################################
/src/bin/cli.js-107-
/src/bin/cli.js:108:require('http').createServer(function (request, response) {
/src/bin/cli.js-109-    request.addListener('end', function () {
##############################################
/src/lib/node-static.js-59-            var headers = {};
/src/lib/node-static.js:60:            var originalPathname = decodeURI(url.parse(req.url).pathname);
/src/lib/node-static.js-61-            if (originalPathname.length && originalPathname.charAt(originalPathname.length - 1) !== '/') {
##############################################
/src/lib/node-static.js-67-            // Stream a directory of files as a single file.
/src/lib/node-static.js:68:            fs.readFile(path.join(pathname, 'index.json'), function (e, contents) {
/src/lib/node-static.js-69-                if (e) { return finish(404, {}) }
/src/lib/node-static.js:70:                var index = JSON.parse(contents);
/src/lib/node-static.js-71-                streamFiles(index.files);
##############################################
/src/lib/node-static.js-173-    try {
/src/lib/node-static.js:174:        pathname = decodeURI(url.parse(req.url).pathname);
/src/lib/node-static.js-175-    }
##############################################
/src/lib/node-static.js-267-Server.prototype.respondNoGzip = function (pathname, status, contentType, _headers, files, stat, req, res, finish) {
/src/lib/node-static.js:268:    var mtime           = Date.parse(stat.mtime),
/src/lib/node-static.js-269-        key             = pathname || files[0],
##############################################
/src/lib/node-static.js-271-        clientETag      = req.headers['if-none-match'],
/src/lib/node-static.js:272:        clientMTime     = Date.parse(req.headers['if-modified-since']),
/src/lib/node-static.js-273-        startByte       = 0,
##############################################
/src/lib/node-static.js-362-            // Stream the file to the client
/src/lib/node-static.js:363:            fs.createReadStream(file, {
/src/lib/node-static.js-364-                flags: 'r',
##############################################
/src/test/integration/node-static-test.js-27-    topic: function () {
/src/test/integration/node-static-test.js:28:      server = require('http').createServer(function (request, response) {
/src/test/integration/node-static-test.js-29-        fileServer.serve(request, response, function(err, result) {
##############################################
/src/test/integration/node-static-test.js-67-      server.close();
/src/test/integration/node-static-test.js:68:      server = require('http').createServer(function (request, response) {
/src/test/integration/node-static-test.js-69-        fileServer.serve(request, response);
##############################################
/src/test/integration/node-static-test.js-254-      request.get(TEST_SERVER + '/index.html', function(error, response, body){
/src/test/integration/node-static-test.js:255:        var modified = Date.parse(response.headers['last-modified']);
/src/test/integration/node-static-test.js-256-        var oneDayLater = new Date(modified + (24 * 60 * 60 * 1000)).toUTCString();
##############################################
/src/test/integration/node-static-test.js-366-
/src/test/integration/node-static-test.js:367:      server = require('http').createServer(function (request, response) {
/src/test/integration/node-static-test.js-368-        fileServer.serve(request, response);
