/src/src/scripts/walkie.coffee-51-                when 200
/src/src/scripts/walkie.coffee:52:                  events = JSON.parse(body)
/src/src/scripts/walkie.coffee-53-                  project.timestamp = strftime format
##############################################
/src/src/scripts/walkie.coffee-82-              when 200
/src/src/scripts/walkie.coffee:83:                projects = JSON.parse(body)
/src/src/scripts/walkie.coffee-84-                target = false
##############################################
/src/src/scripts/walkie.coffee-107-        if robot.brain.data.walkie["#{accountID}/#{projectID}"]?
/src/src/scripts/walkie.coffee:108:          msg.send "Walkie has stopped scanning on #{JSON.parse(robot.brain.data.walkie["#{accountID}/#{projectID}"]).projectName}"
/src/src/scripts/walkie.coffee-109-          delete robot.brain.data.walkie["#{accountID}/#{projectID}"]
##############################################
/src/src/scripts/sprintly.coffee-60-        if res.statusCode == 200
/src/src/scripts/sprintly.coffee:61:          item = JSON.parse(body)
/src/src/scripts/sprintly.coffee-62-          msg.send itemSummary(item)
##############################################
/src/src/scripts/sprintly.coffee-99-          if res.statusCode < 400
/src/src/scripts/sprintly.coffee:100:            item = JSON.parse(body)
/src/src/scripts/sprintly.coffee-101-            if msg.match[2] is 'delete'
##############################################
/src/src/scripts/sprintly.coffee-147-    if res.statusCode == 200
/src/src/scripts/sprintly.coffee:148:      payload = JSON.parse(body)
/src/src/scripts/sprintly.coffee-149-      if payload.length > 0
##############################################
/src/src/scripts/sprintly.coffee-165-        if res.statusCode == 200
/src/src/scripts/sprintly.coffee:166:          payload = JSON.parse(body)
/src/src/scripts/sprintly.coffee-167-          user_email = user.auth.split(':')[0]
##############################################
/src/src/scripts/google-search-api.coffee-31-        resp = "";
/src/src/scripts/google-search-api.coffee:32:        results = JSON.parse(body)
/src/src/scripts/google-search-api.coffee-33-        if results.error
##############################################
/src/src/scripts/isup.coffee-24-    .get() (err, res, body) ->
/src/src/scripts/isup.coffee:25:      response = JSON.parse(body)
/src/src/scripts/isup.coffee-26-      if response.status_code is 1
##############################################
/src/src/scripts/corgime.coffee-27-      .get() (err, res, body) ->
/src/src/scripts/corgime.coffee:28:        msg.send corgi for corgi in JSON.parse(body)
##############################################
/src/src/scripts/scalr.coffee-55-    .post() (err, res, body) ->
/src/src/scripts/scalr.coffee:56:      response = JSON.parse(body)
/src/src/scripts/scalr.coffee-57-      if response.result
##############################################
/src/src/scripts/rubygems.coffee-21-      .get() (err, res, body) ->
/src/src/scripts/rubygems.coffee:22:        results = JSON.parse(body)
/src/src/scripts/rubygems.coffee-23-        gems=[]
##############################################
/src/src/scripts/trolololo.coffee-35-        res.on 'end', () ->
/src/src/scripts/trolololo.coffee:36:          parsedData = JSON.parse(data.join(''))
/src/src/scripts/trolololo.coffee-37-          images = parsedData.data.images
##############################################
/src/src/scripts/github-status.coffee-34-    .get() (err, res, body) ->
/src/src/scripts/github-status.coffee:35:      json = JSON.parse(body)
/src/src/scripts/github-status.coffee-36-      now = new Date()
##############################################
/src/src/scripts/github-status.coffee-43-    .get() (err, res, body) ->
/src/src/scripts/github-status.coffee:44:      json = JSON.parse(body)
/src/src/scripts/github-status.coffee-45-      date = new Date(json['created_on'])
##############################################
/src/src/scripts/github-status.coffee-52-    .get() (err, res, body) ->
/src/src/scripts/github-status.coffee:53:      json = JSON.parse(body)
/src/src/scripts/github-status.coffee-54-      buildMessage = (message) ->
##############################################
/src/src/scripts/rofl.coffee-17-      .get() (err, res, body) ->
/src/src/scripts/rofl.coffee:18:        msg.send JSON.parse(body).rofl
##############################################
/src/src/scripts/quakes.coffee-27-
/src/src/scripts/quakes.coffee:28:      list  = JSON.parse( body ).features
/src/src/scripts/quakes.coffee-29-      count = 0
##############################################
/src/src/scripts/webcam.coffee-32-      .get() (err, res, body) ->
/src/src/scripts/webcam.coffee:33:        response = JSON.parse(body)
/src/src/scripts/webcam.coffee-34-        previews = (webcam.preview_url for webcam in response.webcams.webcam)
##############################################
/src/src/scripts/fml.coffee-23-      .get() (err, res, body) ->
/src/src/scripts/fml.coffee:24:        fmls = JSON.parse(body)
/src/src/scripts/fml.coffee-25-        random = Math.round(Math.random() * fmls.responseData.feed.entries.length)
##############################################
/src/src/scripts/jira.coffee-110-    httprequest.get() (err, res, body) ->
/src/src/scripts/jira.coffee:111:        cb JSON.parse(body)
/src/src/scripts/jira.coffee-112-
##############################################
/src/src/scripts/keep-alive.coffee-24-ping = (url) ->
/src/src/scripts/keep-alive.coffee:25:  parsedUrl = URL.parse(url)
/src/src/scripts/keep-alive.coffee-26-  options   =
##############################################
/src/src/scripts/jenkins-notifier.coffee-27-    @failing ||= []
/src/src/scripts/jenkins-notifier.coffee:28:    query = querystring.parse(url.parse(req.url).query)
/src/src/scripts/jenkins-notifier.coffee-29-
##############################################
/src/src/scripts/gemwhois.coffee-21-        try
/src/src/scripts/gemwhois.coffee:22:          json = JSON.parse(body)
/src/src/scripts/gemwhois.coffee-23-          msg.send "     gem name: #{json.name}\n
##############################################
/src/src/scripts/wunderground.coffee-60-        # check for a non-200 response. cache it for some short amount of time && msg.send 'unavailable'
/src/src/scripts/wunderground.coffee:61:        data = JSON.parse(body)
/src/src/scripts/wunderground.coffee-62-
##############################################
/src/src/scripts/wunderground.coffee-118-  else
/src/src/scripts/wunderground.coffee:119:    retrieved = Date.parse(data.retrieved)
/src/src/scripts/wunderground.coffee-120-    data.lifetime * 1000 - (now.getTime() - retrieved)
##############################################
/src/src/scripts/file-brain.coffee-25-    if data
/src/src/scripts/file-brain.coffee:26:      robot.brain.mergeData JSON.parse(data)
/src/src/scripts/file-brain.coffee-27-  catch error
##############################################
/src/src/scripts/ruby.coffee-25-          when 200
/src/src/scripts/ruby.coffee:26:            result = JSON.parse(body)
/src/src/scripts/ruby.coffee-27-
##############################################
/src/src/scripts/reddit.coffee-37-
/src/src/scripts/reddit.coffee:38:      list  = JSON.parse( body ).data.children
/src/src/scripts/reddit.coffee-39-      count = 0
##############################################
/src/src/scripts/speak.coffee-47-      .post( "client_id=#{clientId}&client_secret=#{clientSecret}&scope=#{tokenScope}&grant_type=client_credentials") (err, res, body) ->
/src/src/scripts/speak.coffee:48:        parsedBody = JSON.parse(body)
/src/src/scripts/speak.coffee-49-        if err or parsedBody.error
##############################################
/src/src/scripts/urban.coffee-49-    .get() (err, res, body) ->
/src/src/scripts/urban.coffee:50:      result = JSON.parse(body)
/src/src/scripts/urban.coffee-51-      if result.list.length
##############################################
/src/src/scripts/coderwall.coffee-26-        else
/src/src/scripts/coderwall.coffee:27:          profile = JSON.parse(body)
/src/src/scripts/coderwall.coffee-28-          # Give an intro to the coderwall profile
##############################################
/src/src/scripts/gif-me.coffee-25-      .get() (err, res, body) ->
/src/src/scripts/gif-me.coffee:26:        images = JSON.parse(body).data
/src/src/scripts/gif-me.coffee-27-        if images.length > 0
##############################################
/src/src/scripts/transmission.coffee-49-        response = ''
/src/src/scripts/transmission.coffee:50:        torrents = JSON.parse(body).arguments.torrents
/src/src/scripts/transmission.coffee-51-        if torrents.length == 0
##############################################
/src/src/scripts/pokefacts.coffee-21-      .get() (err, res, body) ->
/src/src/scripts/pokefacts.coffee:22:        tweets = JSON.parse(body)
/src/src/scripts/pokefacts.coffee-23-        msg.send tweets.length
##############################################
/src/src/scripts/uptime-robot.coffee-29-
/src/src/scripts/uptime-robot.coffee:30:        response = JSON.parse(body)
/src/src/scripts/uptime-robot.coffee-31-
##############################################
/src/src/scripts/uptime-robot.coffee-53-      .get() (err, res, body) ->
/src/src/scripts/uptime-robot.coffee:54:        response = JSON.parse(body)
/src/src/scripts/uptime-robot.coffee-55-
##############################################
/src/src/scripts/salesforce.coffee-37-		msg.http(auth_url).post() (err, res, body) ->
/src/src/scripts/salesforce.coffee:38:			oath_token = JSON.parse(body).access_token
/src/src/scripts/salesforce.coffee-39-
##############################################
/src/src/scripts/salesforce.coffee-48-					
/src/src/scripts/salesforce.coffee:49:					results = JSON.parse(body)
/src/src/scripts/salesforce.coffee-50-
##############################################
/src/src/scripts/salesforce.coffee-67-		msg.http(auth_url).post() (err, res, body) ->
/src/src/scripts/salesforce.coffee:68:			oath_token = JSON.parse(body).access_token
/src/src/scripts/salesforce.coffee-69-
##############################################
/src/src/scripts/salesforce.coffee-79-
/src/src/scripts/salesforce.coffee:80:					accounts = JSON.parse(body)
/src/src/scripts/salesforce.coffee-81-					if accounts.records == undefined || accounts.records.length == 0
##############################################
/src/src/scripts/time.coffee-37-        try
/src/src/scripts/time.coffee:38:          result = JSON.parse(body)['data']
/src/src/scripts/time.coffee-39-          city = result['request'][0]['query']
##############################################
/src/src/scripts/iwdrm.coffee-27-          else
/src/src/scripts/iwdrm.coffee:28:            success JSON.parse(body)
/src/src/scripts/iwdrm.coffee-29-    clean_quotes = (text) ->
##############################################
/src/src/scripts/stock.coffee-20-      .get() (err, res, body) ->
/src/src/scripts/stock.coffee:21:        result = JSON.parse(body.replace(/\/\/ /, ''))
/src/src/scripts/stock.coffee-22-
##############################################
/src/src/scripts/jira-issues.coffee-33-    res.on 'end', () ->
/src/src/scripts/jira-issues.coffee:34:      json = JSON.parse(data)
/src/src/scripts/jira-issues.coffee-35-      jiraPrefixes = ( entry.key for entry in json )
##############################################
/src/src/scripts/jira-issues.coffee-53-                try
/src/src/scripts/jira-issues.coffee:54:                  json = JSON.parse(body)
/src/src/scripts/jira-issues.coffee-55-                  key = json.key
##############################################
/src/src/scripts/faceup.coffee-33-    .get() (err, res, body) ->
/src/src/scripts/faceup.coffee:34:      images = JSON.parse(body)
/src/src/scripts/faceup.coffee-35-      images = images.responseData.results
##############################################
/src/src/scripts/youtube-info.coffee-23-  robot.hear /(https?:\/\/www\.youtube\.com\/watch\?.+?)(?:\s|$)/i, (msg) ->
/src/src/scripts/youtube-info.coffee:24:    url_parsed = url.parse(msg.match[1])
/src/src/scripts/youtube-info.coffee:25:    query_parsed = querystring.parse(url_parsed.query)
/src/src/scripts/youtube-info.coffee-26-
##############################################
/src/src/scripts/youtube-info.coffee-33-          if res.statusCode is 200
/src/src/scripts/youtube-info.coffee:34:            data = JSON.parse(body)
/src/src/scripts/youtube-info.coffee-35-            entry = data.entry
##############################################
/src/src/scripts/make_me.coffee-63-              msg.reply "I can't see anything, what does it look like to you? I hear the machine is #{locked_msg}."
/src/src/scripts/make_me.coffee:64:              images = JSON.parse(body)?.images
/src/src/scripts/make_me.coffee-65-              for image in images
##############################################
/src/src/scripts/http-say.coffee-22-  robot.router.get "/hubot/say", (req, res) ->
/src/src/scripts/http-say.coffee:23:    query = querystring.parse(req._parsedUrl.query)
/src/src/scripts/http-say.coffee-24-
##############################################
/src/src/scripts/wordnik.coffee-28-    fetch_wordnik_resource(msg, word, 'definitions', {}) (err, res, body) ->
/src/src/scripts/wordnik.coffee:29:      definitions = JSON.parse(body)
/src/src/scripts/wordnik.coffee-30-      
##############################################
/src/src/scripts/wordnik.coffee-54-    fetch_wordnik_resource(msg, word, 'audio', {}) (err, res, body) ->
/src/src/scripts/wordnik.coffee:55:        pronunciations = JSON.parse(body)
/src/src/scripts/wordnik.coffee-56-      
##############################################
/src/src/scripts/wordnik.coffee-66-    fetch_wordnik_resource(msg, word, '', {includeSuggestions: 'true'}) (err, res, body) ->
/src/src/scripts/wordnik.coffee:67:      wordinfo = JSON.parse(body)
/src/src/scripts/wordnik.coffee-68-      if wordinfo.canonicalForm
##############################################
/src/src/scripts/lastfm_np.coffee-24-    .get() (err, res, body) ->
/src/src/scripts/lastfm_np.coffee:25:      results = JSON.parse(body)
/src/src/scripts/lastfm_np.coffee-26-      if results.error
##############################################
/src/src/scripts/word-of-the-day.coffee-41-      else
/src/src/scripts/word-of-the-day.coffee:42:        wotd = JSON.parse(body)
/src/src/scripts/word-of-the-day.coffee-43-        if wotd.wordstring?
##############################################
/src/src/scripts/rally.coffee-110-			switch res.statusCode
/src/src/scripts/rally.coffee:111:				when 200 then json_body = JSON.parse(body)
/src/src/scripts/rally.coffee-112-				else json_body = null
##############################################
/src/src/scripts/heroku-status.coffee-33-      try
/src/src/scripts/heroku-status.coffee:34:        json = JSON.parse(body)
/src/src/scripts/heroku-status.coffee-35-        msg.send "Production:  #{json['status']['Production']}\n" +
##############################################
/src/src/scripts/heroku-status.coffee-44-      try
/src/src/scripts/heroku-status.coffee:45:        json = JSON.parse(body)
/src/src/scripts/heroku-status.coffee-46-        buildIssue = (issue) ->
##############################################
/src/src/scripts/heroku-status.coffee-56-      try
/src/src/scripts/heroku-status.coffee:57:        json = JSON.parse(body)
/src/src/scripts/heroku-status.coffee-58-        msg.send "Title:     #{json['title']}\n" +
##############################################
/src/src/scripts/modulepuppy.coffee-27-    .get() (err, res, body) ->
/src/src/scripts/modulepuppy.coffee:28:      results = JSON.parse(body)
/src/src/scripts/modulepuppy.coffee-29-      modules=[]
##############################################
/src/src/scripts/chartbeat.coffee-37-
/src/src/scripts/chartbeat.coffee:38:        response = JSON.parse(body)
/src/src/scripts/chartbeat.coffee-39-        people = response.people || []
##############################################
/src/src/scripts/bitbucket-activity.coffee-35-          if send
/src/src/scripts/bitbucket-activity.coffee:36:            d = new Date(Date.parse(c.created_on)).toFormat("MM/DD/YY HH24:MI")
/src/src/scripts/bitbucket-activity.coffee-37-            stamp = "#{d}"
##############################################
/src/src/scripts/odesk.coffee-50-  try
/src/src/scripts/odesk.coffee:51:    results = JSON.parse(body)['jobs']['job']
/src/src/scripts/odesk.coffee-52-    for job in results
##############################################
/src/src/scripts/odesk.coffee-71-    .get() (err, res, body) ->
/src/src/scripts/odesk.coffee:72:      response = JSON.parse(body)
/src/src/scripts/odesk.coffee-73-      url = response['data']['url']
##############################################
/src/src/scripts/basecamp.coffee-48-          return
/src/src/scripts/basecamp.coffee:49:        content = JSON.parse(body)
/src/src/scripts/basecamp.coffee-50-        handler content
##############################################
/src/src/scripts/tweet.coffee-21-      .get() (err, res, body) ->
/src/src/scripts/tweet.coffee:22:        tweets = JSON.parse(body)
/src/src/scripts/tweet.coffee-23-
##############################################
/src/src/scripts/eval.coffee-35-      .get() (err, res, body) ->
/src/src/scripts/eval.coffee:36:        langs = JSON.parse(body)
/src/src/scripts/eval.coffee-37-        robot.brain.data.eval_langs = langs
##############################################
/src/src/scripts/eval.coffee-91-        .get() (err, res, body) ->
/src/src/scripts/eval.coffee:92:          out = JSON.parse(body)
/src/src/scripts/eval.coffee-93-          ret = out.stdout or out.stderr
##############################################
/src/src/scripts/eval.coffee-115-        .get() (err, res, body) ->
/src/src/scripts/eval.coffee:116:          out = JSON.parse(body)
/src/src/scripts/eval.coffee-117-          ret = out.stdout or out.stderr
##############################################
/src/src/scripts/horse.coffee-24-            .get() (err, res, body) ->
/src/src/scripts/horse.coffee:25:                tweets = JSON.parse(body)
/src/src/scripts/horse.coffee-26-
##############################################
/src/src/scripts/tweet-content.coffee-19-
/src/src/scripts/tweet-content.coffee:20:			tweet = JSON.parse(body)
/src/src/scripts/tweet-content.coffee-21-
##############################################
/src/src/scripts/gitlab.coffee-48-  handler = (type, req, res) ->
/src/src/scripts/gitlab.coffee:49:    query = querystring.parse(url.parse(req.url).query)
/src/src/scripts/gitlab.coffee-50-    hook = req.body
##############################################
/src/src/scripts/tryerlang.coffee-23-      .post(data) (err, res, body) ->
/src/src/scripts/tryerlang.coffee:24:        response = JSON.parse(body)
/src/src/scripts/tryerlang.coffee-25-        msg.send response.result
##############################################
/src/src/scripts/hipchat-api.coffee-24-    https = require 'https'
/src/src/scripts/hipchat-api.coffee:25:    query = querystring.parse(req._parsedUrl.query)
/src/src/scripts/hipchat-api.coffee-26-
##############################################
/src/src/scripts/hipchat-api.coffee-50-        res.on 'end', () ->
/src/src/scripts/hipchat-api.coffee:51:            json = JSON.parse(data)
/src/src/scripts/hipchat-api.coffee-52-            console.log "Hipchat response ", data
##############################################
/src/src/scripts/tvshow.coffee-47-                            edate = new Date()
/src/src/scripts/tvshow.coffee:48:                            edate.setTime(Date.parse(episode.airdate+' '+show.airtime))
/src/src/scripts/tvshow.coffee-49-                            if edate.getTime() > now.getTime()
##############################################
/src/src/scripts/sosearch.coffee-56-        output.on 'end', ()->
/src/src/scripts/sosearch.coffee:57:          parsedData = JSON.parse(data)
/src/src/scripts/sosearch.coffee-58-          if parsedData.error
##############################################
/src/src/scripts/vanity.coffee-59-        if res.statusCode == 200
/src/src/scripts/vanity.coffee:60:          countFollowers msg, JSON.parse(body), (output) ->
/src/src/scripts/vanity.coffee-61-            msg.send output
##############################################
/src/src/scripts/ethperpadlite-ideas.js-33-  try {
/src/src/scripts/ethperpadlite-ideas.js:34:    data = JSON.parse(rawText);
/src/src/scripts/ethperpadlite-ideas.js-35-  } catch(err) {
##############################################
/src/src/scripts/wat.coffee-20-      .get() (err, res, body) ->
/src/src/scripts/wat.coffee:21:        msg.send JSON.parse(body).wat
##############################################
/src/src/scripts/teamcity.coffee-69-         err = body unless res.statusCode == 200
/src/src/scripts/teamcity.coffee:70:         projects = JSON.parse(body).project unless err
/src/src/scripts/teamcity.coffee-71-         callback err, msg, projects
##############################################
/src/src/scripts/teamcity.coffee-82-         err = body unless res.statusCode == 200
/src/src/scripts/teamcity.coffee:83:         buildTypes = JSON.parse(body).buildType unless err
/src/src/scripts/teamcity.coffee-84-         callback err, msg, buildTypes
##############################################
/src/src/scripts/teamcity.coffee-96-        err = body unless res.statusCode == 200
/src/src/scripts/teamcity.coffee:97:        builds = JSON.parse(body).build unless err
/src/src/scripts/teamcity.coffee-98-        callback err, msg, builds
##############################################
/src/src/scripts/teamcity.coffee-121-        err = body unless res.statusCode = 200
/src/src/scripts/teamcity.coffee:122:        buildName = JSON.parse(body).name unless err
/src/src/scripts/teamcity.coffee-123-        callback err, msg, buildName
##############################################
/src/src/scripts/teamcity.coffee-127-      if typeof(builds)=='string'
/src/src/scripts/teamcity.coffee:128:        builds=JSON.parse(builds)
/src/src/scripts/teamcity.coffee-129-      if builds['count']==0
##############################################
/src/src/scripts/bing-images.coffee-30-      try
/src/src/scripts/bing-images.coffee:31:        images = JSON.parse(body).d.results
/src/src/scripts/bing-images.coffee-32-        image = msg.random images
##############################################
/src/src/scripts/brewerydb.coffee-27-      .get() (err, res, body) ->
/src/src/scripts/brewerydb.coffee:28:          data = JSON.parse(body)['data']
/src/src/scripts/brewerydb.coffee-29-          if data
##############################################
/src/src/scripts/klout.coffee-60-        .get() (error, response, body)->
/src/src/scripts/klout.coffee:61:            scoreRecord = JSON.parse( body )
/src/src/scripts/klout.coffee-62-            thisPlayer.score = scoreRecord.score
##############################################
/src/src/scripts/klout.coffee-79-                return
/src/src/scripts/klout.coffee:80:            kloutIdRec = JSON.parse( body )
/src/src/scripts/klout.coffee-81-            player.id = kloutIdRec.id
##############################################
/src/src/scripts/janky.coffee-16-URL  = require "url"
/src/src/scripts/janky.coffee:17:url  = URL.parse(process.env.HUBOT_JANKY_URL)
/src/src/scripts/janky.coffee-18-HTTP = require(url.protocol.replace(/:$/, ""))
##############################################
/src/src/scripts/janky.coffee-147-      response = ""
/src/src/scripts/janky.coffee:148:      builds = JSON.parse(body)
/src/src/scripts/janky.coffee-149-
##############################################
/src/src/scripts/catfacts.coffee-20-                # passes back the complete reponse
/src/src/scripts/catfacts.coffee:21:                response = JSON.parse(body)
/src/src/scripts/catfacts.coffee-22-                if response.success == "true"
##############################################
/src/src/scripts/spotify.coffee-19-      if res.statusCode is 200
/src/src/scripts/spotify.coffee:20:        data = JSON.parse(body)
/src/src/scripts/spotify.coffee-21-        msg.send spotify[data.info.type](data)
##############################################
/src/src/scripts/gosling.coffee-20-  msg.http("http://api.tumblr.com/v2/blog/programmerryangosling.tumblr.com/posts?api_key=#{api_key}&offset=#{rand}&limit=1").get() (err, res, body) ->
/src/src/scripts/gosling.coffee:21:    post = JSON.parse(body)
/src/src/scripts/gosling.coffee-22-    msg.send(post.response.posts[0].photos[0].original_size.url)
##############################################
/src/src/scripts/gosling.coffee-25-  msg.http("http://api.tumblr.com/v2/blog/programmerryangosling.tumblr.com/info?api_key=#{api_key}").get() (err, res, body) ->
/src/src/scripts/gosling.coffee:26:    total_posts = JSON.parse(body).response.blog.posts
/src/src/scripts/gosling.coffee-27-    rand = Math.floor(Math.random() * total_posts)
##############################################
/src/src/scripts/quandora.coffee-42-                console.log(body)
/src/src/scripts/quandora.coffee:43:                response = JSON.parse(body)
/src/src/scripts/quandora.coffee-44-                if response.type == "question-search-result"
##############################################
/src/src/scripts/chat.coffee-19-      .get() (err, res, body) ->
/src/src/scripts/chat.coffee:20:        msg.send JSON.parse(body).text
##############################################
/src/src/scripts/abstract.coffee-22-        return res.send "Sorry, the tubes are broken." if err
/src/src/scripts/abstract.coffee:23:        data = JSON.parse(body.toString("utf8"))
/src/src/scripts/abstract.coffee-24-        return unless data
##############################################
/src/src/scripts/twitter_mention.coffee-29-        .get() (err, res, body) ->
/src/src/scripts/twitter_mention.coffee:30:          tweets = JSON.parse(body)
/src/src/scripts/twitter_mention.coffee-31-          if tweets.results? and tweets.results.length > 0
##############################################
/src/src/scripts/dribbble.coffee-22-    else
/src/src/scripts/dribbble.coffee:23:      data = JSON.parse(body)
/src/src/scripts/dribbble.coffee-24-      msg.send data.image_url
##############################################
/src/src/scripts/dribbble.coffee-32-      .get() (err, res, body) ->
/src/src/scripts/dribbble.coffee:33:        data = JSON.parse(body)
/src/src/scripts/dribbble.coffee-34-        idx = Math.floor(Math.random() * (data.shots.length - 2))
##############################################
/src/src/scripts/hangman.coffee-130-    .get() (err, res, body) ->
/src/src/scripts/hangman.coffee:131:      result = JSON.parse(body)
/src/src/scripts/hangman.coffee-132-      word = if result
##############################################
/src/src/scripts/hangman.coffee-142-    .get() (err, res, body) ->
/src/src/scripts/hangman.coffee:143:      definitions = JSON.parse(body)
/src/src/scripts/hangman.coffee-144-
##############################################
/src/src/scripts/sugarcrm.coffee-59-      sugarCRMCall msg, url, 'get_report_entries', data, (err, res, body) ->
/src/src/scripts/sugarcrm.coffee:60:        json          = JSON.parse(body)
/src/src/scripts/sugarcrm.coffee-61-        entries       = json.entry_list[0]
##############################################
/src/src/scripts/sugarcrm.coffee-90-  sugarCRMCall msg, url, 'login', data, (err, res, body) ->
/src/src/scripts/sugarcrm.coffee:91:    sessionID = JSON.parse(body).id
/src/src/scripts/sugarcrm.coffee-92-    callback(sessionID)
##############################################
/src/src/scripts/reddit-random-top.coffee-31-
/src/src/scripts/reddit-random-top.coffee:32:        posts = JSON.parse(body)
/src/src/scripts/reddit-random-top.coffee-33-
##############################################
/src/src/scripts/buscemi.coffee-31-    .get() (err, res, body) ->
/src/src/scripts/buscemi.coffee:32:      images = JSON.parse(body)
/src/src/scripts/buscemi.coffee-33-      images = images.responseData.results
##############################################
/src/src/scripts/facepalm.coffee-32-    .get() (err, res, body) ->
/src/src/scripts/facepalm.coffee:33:      images = JSON.parse(body)
/src/src/scripts/facepalm.coffee-34-      images = images.responseData.results
##############################################
/src/src/scripts/clojure.coffee-29-              ringSessionID = res.headers["set-cookie"][0].match(/ring-session=([-a-z0-9]+);/)[1]
/src/src/scripts/clojure.coffee:30:            result = JSON.parse(body)
/src/src/scripts/clojure.coffee-31-
##############################################
/src/src/scripts/squeezebox.coffee-107-  _cmd msg, ["status","-",1,"tags:cgABbehldiqtyrSuoKLN"], (err,res,body) ->
/src/src/scripts/squeezebox.coffee:108:    r=JSON.parse(body).result
/src/src/scripts/squeezebox.coffee-109-    t=r.remoteMeta
##############################################
/src/src/scripts/spin.coffee-82-			else
/src/src/scripts/spin.coffee:83:				body = JSON.parse(body)
/src/src/scripts/spin.coffee-84-				if body.response is 'error'
##############################################
/src/src/scripts/rotten.coffee-27-      (err, res, body) =>
/src/src/scripts/rotten.coffee:28:        @__links = JSON.parse(body)['links']
/src/src/scripts/rotten.coffee-29-        callback @__links[match]
##############################################
/src/src/scripts/rotten.coffee-36-          (err, res, body) =>
/src/src/scripts/rotten.coffee:37:            @__movie_links = JSON.parse(body)['links']
/src/src/scripts/rotten.coffee-38-            callback @__movie_links[match]
##############################################
/src/src/scripts/rotten.coffee-45-          (err, res, body) =>
/src/src/scripts/rotten.coffee:46:            @__dvd_links = JSON.parse(body)['links']
/src/src/scripts/rotten.coffee-47-            callback @__dvd_links[match]
##############################################
/src/src/scripts/rotten.coffee-55-          (err, res, body) ->
/src/src/scripts/rotten.coffee:56:            movies = JSON.parse(body)['movies']
/src/src/scripts/rotten.coffee-57-
##############################################
/src/src/scripts/rotten.coffee-77-          (err, res, body) ->
/src/src/scripts/rotten.coffee:78:            movies = JSON.parse(body)['movies']
/src/src/scripts/rotten.coffee-79-           
##############################################
/src/src/scripts/rotten.coffee-89-      (err, res, body) ->
/src/src/scripts/rotten.coffee:90:        movie = JSON.parse(body)['movies'][0]
/src/src/scripts/rotten.coffee-91-           
##############################################
/src/src/scripts/github-commits.coffee-27-  robot.router.post "/hubot/gh-commits", (req, res) ->
/src/src/scripts/github-commits.coffee:28:    query = querystring.parse(url.parse(req.url).query)
/src/src/scripts/github-commits.coffee-29-
##############################################
/src/src/scripts/cheer.coffee-27-      .get() (err, res, body) ->
/src/src/scripts/cheer.coffee:28:        images = JSON.parse(body)
/src/src/scripts/cheer.coffee-29-        images = images.data
##############################################
/src/src/scripts/darksky.coffee-29-      .get() (err, res, body) ->
/src/src/scripts/darksky.coffee:30:        result = JSON.parse(body)
/src/src/scripts/darksky.coffee-31-
##############################################
/src/src/scripts/darksky.coffee-44-    .get() (err, res, body) ->
/src/src/scripts/darksky.coffee:45:      result = JSON.parse(body)
/src/src/scripts/darksky.coffee-46-
##############################################
/src/src/scripts/pagerduty.coffee-180-        switch res.statusCode
/src/src/scripts/pagerduty.coffee:181:          when 200 then json_body = JSON.parse(body)
/src/src/scripts/pagerduty.coffee-182-          else
##############################################
/src/src/scripts/pagerduty.coffee-200-        switch res.statusCode
/src/src/scripts/pagerduty.coffee:201:          when 200 then json_body = JSON.parse(body)
/src/src/scripts/pagerduty.coffee-202-          else
##############################################
/src/src/scripts/pagerduty.coffee-220-        switch res.statusCode
/src/src/scripts/pagerduty.coffee:221:          when 201 then json_body = JSON.parse(body)
/src/src/scripts/pagerduty.coffee-222-          else
##############################################
/src/src/scripts/pagerduty.coffee-324-          when 200
/src/src/scripts/pagerduty.coffee:325:            json = JSON.parse(body)
/src/src/scripts/pagerduty.coffee-326-            cb(json)
##############################################
/src/src/scripts/travis.coffee-31-      .get() (err, res, body) ->
/src/src/scripts/travis.coffee:32:        response = JSON.parse(body)
/src/src/scripts/travis.coffee-33-        if response.last_build_status == 0
##############################################
/src/src/scripts/travis.coffee-40-  robot.router.post "/hubot/travis", (req, res) ->
/src/src/scripts/travis.coffee:41:    query = querystring.parse url.parse(req.url).query
/src/src/scripts/travis.coffee-42-    res.end JSON.stringify {
##############################################
/src/src/scripts/meme_generator.coffee-162-    .get() (err, res, body) ->
/src/src/scripts/meme_generator.coffee:163:      result = JSON.parse(body)['result']
/src/src/scripts/meme_generator.coffee-164-      if result? and result['instanceUrl']? and result['instanceImageUrl']? and result['instanceID']?
##############################################
/src/src/scripts/giphy.coffee-16-    .get() (err, res, body) ->
/src/src/scripts/giphy.coffee:17:      response = JSON.parse(body)
/src/src/scripts/giphy.coffee-18-      images = response.data.gifs
##############################################
/src/src/scripts/redis-brain.coffee-36-      else if reply
/src/src/scripts/redis-brain.coffee:37:        robot.brain.mergeData JSON.parse(reply.toString())
/src/src/scripts/redis-brain.coffee-38-      else
##############################################
/src/src/scripts/imgur-info.coffee-28-      if res.statusCode is 200
/src/src/scripts/imgur-info.coffee:29:        data = JSON.parse(body)
/src/src/scripts/imgur-info.coffee-30-        msg.send "imgur: #{data.data.title}"
##############################################
/src/src/scripts/redmine.coffee-370-
/src/src/scripts/redmine.coffee:371:    endpoint = URL.parse(@url)
/src/src/scripts/redmine.coffee-372-    pathname = endpoint.pathname.replace /^\/$/, ''
##############################################
/src/src/scripts/redmine.coffee-396-            try
/src/src/scripts/redmine.coffee:397:              callback null, JSON.parse(data), response.statusCode
/src/src/scripts/redmine.coffee-398-            catch err
##############################################
/src/src/scripts/pg-brain.coffee-42-    if row['storage']?
/src/src/scripts/pg-brain.coffee:43:      robot.brain.mergeData JSON.parse(row['storage'].toString())
/src/src/scripts/pg-brain.coffee-44-      robot.logger.debug "pg-brain loaded."
##############################################
/src/src/scripts/xbmc.coffee-59-getYouTubeVideoIdFrom = (videoUrl) ->
/src/src/scripts/xbmc.coffee:60:  uri = url.parse((if /^http/.test videoUrl then videoUrl else 'http://'+videoUrl), true)
/src/src/scripts/xbmc.coffee-61-  if /youtube.com$/.test uri.host
##############################################
/src/src/scripts/crossing.coffee-30-        json_border_data = parser.toJson( body )
/src/src/scripts/crossing.coffee:31:        border = JSON.parse( json_border_data )["border_wait_time"]["port"]
/src/src/scripts/crossing.coffee-32-        for port in border
##############################################
/src/src/scripts/deploy.coffee-30-  robot.router.get "/hubot/deploy", (req, res) ->
/src/src/scripts/deploy.coffee:31:    query = qs.parse(req._parsedUrl.query)
/src/src/scripts/deploy.coffee-32-    environment = query.environment
##############################################
/src/src/scripts/deploy.coffee-50-  robot.router.get "/hubot/deployhost", (req, res) ->
/src/src/scripts/deploy.coffee:51:    query = qs.parse(req._parsedUrl.query)
/src/src/scripts/deploy.coffee-52-    hosts = query.hosts
##############################################
/src/src/scripts/jenkins.coffee-63-          try
/src/src/scripts/jenkins.coffee:64:            content = JSON.parse(body)
/src/src/scripts/jenkins.coffee-65-            response += "JOB: #{content.displayName}\n"
##############################################
/src/src/scripts/jenkins.coffee-109-                  try
/src/src/scripts/jenkins.coffee:110:                    content = JSON.parse(body)
/src/src/scripts/jenkins.coffee-111-                    console.log(JSON.stringify(content, null, 4))
##############################################
/src/src/scripts/jenkins.coffee-137-          try
/src/src/scripts/jenkins.coffee:138:            content = JSON.parse(body)
/src/src/scripts/jenkins.coffee-139-            for job in content.jobs
##############################################
/src/src/scripts/futurama.coffee-59-    msg.http(url).get() (err, res, body) ->
/src/src/scripts/futurama.coffee:60:      resp = JSON.parse(body)
/src/src/scripts/futurama.coffee-61-      rand = msg.random resp.result
##############################################
/src/src/scripts/futurama.coffee-72-  msg.http(url).get() (err, res, body) ->
/src/src/scripts/futurama.coffee:73:    resp = JSON.parse(body)
/src/src/scripts/futurama.coffee-74-    msg.send resp.result.instanceImageUrl
##############################################
/src/src/scripts/github-activity.coffee-40-          if send
/src/src/scripts/github-activity.coffee:41:            d = new Date(Date.parse(c.commit.committer.date)).toFormat("DD/MM HH24:MI")
/src/src/scripts/github-activity.coffee-42-            msg.send "[#{d} -> #{c.commit.committer.name}] #{c.commit.message}"
##############################################
/src/src/scripts/commandlinefu.coffee-35-        # choose a random command from the returned list
/src/src/scripts/commandlinefu.coffee:36:        cc = msg.random JSON.parse(body)
/src/src/scripts/commandlinefu.coffee-37-        cb("-- #{cc.summary}\n#{cc.command}")
##############################################
/src/src/scripts/chuck-norris.coffee-31-        else
/src/src/scripts/chuck-norris.coffee:32:          message_from_chuck = JSON.parse(body)
/src/src/scripts/chuck-norris.coffee-33-          if message_from_chuck.length == 0
##############################################
/src/src/scripts/xkcd.coffee-25-        else
/src/src/scripts/xkcd.coffee:26:          object = JSON.parse(body)
/src/src/scripts/xkcd.coffee-27-          msg.send object.title, object.img, object.alt
##############################################
/src/src/scripts/xkcd.coffee-36-        else
/src/src/scripts/xkcd.coffee:37:          object = JSON.parse(body)
/src/src/scripts/xkcd.coffee-38-          msg.send object.title, object.img, object.alt
##############################################
/src/src/scripts/xkcd.coffee-45-            else
/src/src/scripts/xkcd.coffee:46:               max = JSON.parse(body).num 
/src/src/scripts/xkcd.coffee-47-               num = Math.floor((Math.random()*max)+1)
##############################################
/src/src/scripts/xkcd.coffee-49-               .get() (err, res, body) ->
/src/src/scripts/xkcd.coffee:50:                 object = JSON.parse(body)
/src/src/scripts/xkcd.coffee-51-                 msg.send object.title, object.img, object.alt
##############################################
/src/src/scripts/beanstalk.coffee-85-            return
/src/src/scripts/beanstalk.coffee:86:          content = JSON.parse(body)
/src/src/scripts/beanstalk.coffee-87-          if content.errors
##############################################
/src/src/scripts/harvest.coffee-337-      if 200 <= res.statusCode <= 299
/src/src/scripts/harvest.coffee:338:        callback res.statusCode, JSON.parse(body)
/src/src/scripts/harvest.coffee-339-      else
##############################################
/src/src/scripts/harvest.coffee-345-      if 200 <= res.statusCode <= 299
/src/src/scripts/harvest.coffee:346:        callback res.statusCode, JSON.parse(body)
/src/src/scripts/harvest.coffee-347-      else
##############################################
/src/src/scripts/harvest.coffee-362-            if 200 <= res.statusCode <= 299
/src/src/scripts/harvest.coffee:363:              callback res.statusCode, JSON.parse(body)
/src/src/scripts/harvest.coffee-364-            else
##############################################
/src/src/scripts/harvest.coffee-379-        if 200 <= res.statusCode <= 299
/src/src/scripts/harvest.coffee:380:          callback res.statusCode, JSON.parse(body)
/src/src/scripts/harvest.coffee-381-        else
##############################################
/src/src/scripts/harvest.coffee-391-        if 200 <= res.statusCode <= 299
/src/src/scripts/harvest.coffee:392:          callback res.statusCode, JSON.parse(body)
/src/src/scripts/harvest.coffee-393-        else
##############################################
/src/src/scripts/meme_captain.coffee-91-    try
/src/src/scripts/meme_captain.coffee:92:      result = JSON.parse(body)
/src/src/scripts/meme_captain.coffee-93-    catch error
##############################################
/src/src/scripts/rageface.coffee-41-		.get() (err, res, body) ->
/src/src/scripts/rageface.coffee:42:			json_body = JSON.parse(body)
/src/src/scripts/rageface.coffee-43-			items = json_body.items.shuffle()
##############################################
/src/src/scripts/jokels.coffee-15-    msg.http('http://jokels.com/random_joke').get() (err, res, body) ->
/src/src/scripts/jokels.coffee:16:      joke = JSON.parse(body).joke
/src/src/scripts/jokels.coffee-17-      vote = joke.up_votes - joke.down_votes
##############################################
/src/src/scripts/play.coffee-49-    authedRequest message, '/now_playing', 'get', {}, (err, res, body) ->
/src/src/scripts/play.coffee:50:      json = JSON.parse(body)
/src/src/scripts/play.coffee-51-      str = "\"#{json.name}\" by #{json.artist}, from \"#{json.album}\"."
##############################################
/src/src/scripts/play.coffee-56-    authedRequest message, '/queue', 'get', {}, (err, res, body) ->
/src/src/scripts/play.coffee:57:      json = JSON.parse(body)
/src/src/scripts/play.coffee-58-      song = json.songs[1]
##############################################
/src/src/scripts/play.coffee-70-    authedRequest message, '/next', 'put', {}, (err, res, body) ->
/src/src/scripts/play.coffee:71:      json = JSON.parse(body)
/src/src/scripts/play.coffee-72-      message.send("On to the next one (which conveniently is #{json.artist}'s \"#{json.name}\")")
##############################################
/src/src/scripts/play.coffee-123-    authedRequest message, '/play', 'put', {}, (err, res, body) ->
/src/src/scripts/play.coffee:124:      json = JSON.parse(body)
/src/src/scripts/play.coffee-125-      message.send("Okay! :)")
##############################################
/src/src/scripts/play.coffee-129-    authedRequest message, '/pause', 'put', {}, (err, res, body) ->
/src/src/scripts/play.coffee:130:      json = JSON.parse(body)
/src/src/scripts/play.coffee-131-      message.send("Okay. :(")
##############################################
/src/src/scripts/play.coffee-139-    authedRequest message, '/now_playing', 'get', {}, (err, res, body) ->
/src/src/scripts/play.coffee:140:      json = JSON.parse(body)
/src/src/scripts/play.coffee-141-      url  = "#{URL}/song/#{json.id}/download"
##############################################
/src/src/scripts/play.coffee-145-    authedRequest message, '/now_playing', 'get', {}, (err, res, body) ->
/src/src/scripts/play.coffee:146:      json = JSON.parse(body)
/src/src/scripts/play.coffee-147-      url  = "#{URL}/artist/#{escape json.artist}/album/#{escape json.album}/download"
##############################################
/src/src/scripts/play.coffee-152-    authedRequest message, '/queue/stars', 'post', {}, (err, res, body) ->
/src/src/scripts/play.coffee:153:      json = JSON.parse(body)
/src/src/scripts/play.coffee-154-
##############################################
/src/src/scripts/play.coffee-162-    authedRequest message, '/now_playing', 'post', {}, (err, res, body) ->
/src/src/scripts/play.coffee:163:      json = JSON.parse(body)
/src/src/scripts/play.coffee-164-      message.send("It's certainly not a pedestrian song, is it. I'll make a "+
##############################################
/src/src/scripts/play.coffee-177-
/src/src/scripts/play.coffee:178:      json = JSON.parse(body)
/src/src/scripts/play.coffee-179-      str = json.songs.map (song) ->
##############################################
/src/src/scripts/tctransit.coffee-41-      .get() (err, res, body) =>
/src/src/scripts/tctransit.coffee:42:        stops = JSON.parse(body)
/src/src/scripts/tctransit.coffee-43-        if stops.count <= 0
##############################################
/src/src/scripts/tctransit.coffee-55-      .get() (err, res, body) =>
/src/src/scripts/tctransit.coffee:56:        stops = JSON.parse(body)
/src/src/scripts/tctransit.coffee-57-        # too bad, no stops found for this
##############################################
/src/src/scripts/ip.coffee-19-      .get() (err, res, body) ->
/src/src/scripts/ip.coffee:20:        json = JSON.parse(body)
/src/src/scripts/ip.coffee-21-        switch res.statusCode                                
##############################################
/src/src/scripts/s3-brain.coffee-102-    if response && response.buffer
/src/src/scripts/s3-brain.coffee:103:      robot.brain.mergeData JSON.parse(response.buffer.toString())
/src/src/scripts/s3-brain.coffee-104-    else
##############################################
/src/src/scripts/offthegrid.coffee-25-    .get() (err, res, body) =>
/src/src/scripts/offthegrid.coffee:26:      descr = JSON.parse(body).description unless err
/src/src/scripts/offthegrid.coffee-27-      @description = descr
##############################################
/src/src/scripts/offthegrid.coffee-40-      return msg.send "Unable to get list of events: #{res.statusCode + ':\n' + body}" if res.statusCode != 200
/src/src/scripts/offthegrid.coffee:41:      graph_data = JSON.parse(body)
/src/src/scripts/offthegrid.coffee-42-      outstandingCallbacks = 0
##############################################
/src/src/scripts/mongo-brain.coffee-42-
/src/src/scripts/mongo-brain.coffee:43:  db.open((err, client) ->
/src/src/scripts/mongo-brain.coffee-44-    if err
##############################################
/src/src/scripts/flattr.coffee-28-          return
/src/src/scripts/flattr.coffee:29:        search = JSON.parse(body)
/src/src/scripts/flattr.coffee-30-        msg.send "I found #{search.total_items} things when looking for \"#{query}\". The top 3 are:"
##############################################
/src/src/scripts/flattr.coffee-43-          return
/src/src/scripts/flattr.coffee:44:        user = JSON.parse(body)
/src/src/scripts/flattr.coffee-45-        if user.error == "not_found"
##############################################
/src/src/scripts/flattr.coffee-76-          return
/src/src/scripts/flattr.coffee:77:        thing = JSON.parse(body)
/src/src/scripts/flattr.coffee-78-        msg.send "Thing: [#{thing.flattrs}] #{thing.title} - #{thing.link}"
##############################################
/src/src/scripts/flattr.coffee-87-          return
/src/src/scripts/flattr.coffee:88:        location = JSON.parse(body)
/src/src/scripts/flattr.coffee-89-        if location.message == 'found'
##############################################
/src/src/scripts/flattr.coffee-92-            .get() (err, res, body) ->
/src/src/scripts/flattr.coffee:93:              thing = JSON.parse(body)
/src/src/scripts/flattr.coffee-94-              msg.send "Thing: [#{thing.flattrs}] #{thing.title} - #{thing.link}"
##############################################
/src/src/scripts/stranger.coffee-19-            .get() (err, res, body) ->
/src/src/scripts/stranger.coffee:20:                stranger = JSON.parse(body)
/src/src/scripts/stranger.coffee-21-                msg.send "Meet #{stranger.name}, the #{stranger.nationality} #{stranger.gender}. Learn more about #{if stranger.gender == 'male' then 'him' else 'her'} at #{stranger.url}"
##############################################
/src/src/scripts/rdio.coffee-42-    nonce = Math.round(Math.random() * 1000000).toString()
/src/src/scripts/rdio.coffee:43:    parsedUrl = url.parse(urlString, true)
/src/src/scripts/rdio.coffee-44-
##############################################
/src/src/scripts/tumblr.coffee-33-
/src/src/scripts/tumblr.coffee:34:        content = JSON.parse(body)
/src/src/scripts/tumblr.coffee-35-
##############################################
/src/src/scripts/aww.coffee-20-      .get() (err, res, body) ->
/src/src/scripts/aww.coffee:21:        result = JSON.parse(body)
/src/src/scripts/aww.coffee-22-
##############################################
/src/src/scripts/sendgrid.coffee-95-    .get() (err, res, body) ->
/src/src/scripts/sendgrid.coffee:96:      parsedBody = JSON.parse(body)
/src/src/scripts/sendgrid.coffee-97-      if parsedBody.error
##############################################
/src/src/scripts/espn.coffee-28-      .get() (err, res, body) ->
/src/src/scripts/espn.coffee:29:        result = JSON.parse(body)
/src/src/scripts/espn.coffee-30-
##############################################
/src/src/scripts/espn.coffee-44-      .get() (err, res, body) ->
/src/src/scripts/espn.coffee:45:        result = JSON.parse(body)
/src/src/scripts/espn.coffee-46-        getTeamPage msg, result, (url) ->
##############################################
/src/src/scripts/espn.coffee-51-        .get() (err, res, body) ->
/src/src/scripts/espn.coffee:52:          result = JSON.parse(body)
/src/src/scripts/espn.coffee-53-          getTeamPage msg, result, (url) ->
##############################################
/src/src/scripts/espn.coffee-58-        .get() (err, res, body) ->
/src/src/scripts/espn.coffee:59:          result = JSON.parse(body)
/src/src/scripts/espn.coffee-60-          getTeamPage msg, result, (url) ->
##############################################
/src/src/scripts/espn.coffee-65-        .get() (err, res, body) ->
/src/src/scripts/espn.coffee:66:          result = JSON.parse(body)
/src/src/scripts/espn.coffee-67-          getTeamPage msg, result, (url) ->
##############################################
/src/src/scripts/rollout.coffee-31-    msg.http(endpoint + 'features.json').get() (err, res, body) ->
/src/src/scripts/rollout.coffee:32:      json = JSON.parse(body)
/src/src/scripts/rollout.coffee-33-      msg.send json.sort().join("\n")
##############################################
/src/src/scripts/locpix.coffee-20-      .get() (err, res, body) ->
/src/src/scripts/locpix.coffee:21:        response = JSON.parse(body)
/src/src/scripts/locpix.coffee-22-        images = response.results
##############################################
/src/src/scripts/list-jira-bugs.coffee-96-        .get() (err, res, body) ->
/src/src/scripts/list-jira-bugs.coffee:97:            callback( err, JSON.parse(body) )
/src/src/scripts/list-jira-bugs.coffee-98-
##############################################
/src/src/scripts/punchfork.coffee-27-        else
/src/src/scripts/punchfork.coffee:28:          object = JSON.parse(body)
/src/src/scripts/punchfork.coffee-29-          msg.send object.recipes[0].title
##############################################
/src/src/scripts/talklikewarrenellis.coffee-20-      .get() (err, res, body) ->
/src/src/scripts/talklikewarrenellis.coffee:21:        msg.send JSON.parse(body).quote
/src/src/scripts/talklikewarrenellis.coffee-22-
##############################################
/src/src/scripts/talklikewarrenellis.coffee-25-      .get() (err, res, body) ->
/src/src/scripts/talklikewarrenellis.coffee:26:        msg.send JSON.parse(body).quote
/src/src/scripts/talklikewarrenellis.coffee-27-
##############################################
/src/src/scripts/geocodeme.coffee-34-      .get() (err, res, body) ->
/src/src/scripts/geocodeme.coffee:35:        response = JSON.parse(body)
/src/src/scripts/geocodeme.coffee-36-        return cb "No idea. Tried using a map? https://maps.google.com/" unless response.results?.length
##############################################
/src/src/scripts/notify.coffee-114-        res.on "data", (data) ->
/src/src/scripts/notify.coffee:115:          userData = JSON.parse(data.toString())
/src/src/scripts/notify.coffee-116-          callback null, userData.user.status=="offline"
