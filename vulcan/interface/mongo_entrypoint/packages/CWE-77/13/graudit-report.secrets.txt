/src/src/scripts/scalr.coffee-7-# Configuration:
/src/src/scripts/scalr.coffee:8:#   SCALR_API_KEY = Scalr API key
/src/src/scripts/scalr.coffee:9:#   SCALR_SECRET_KEY = Scalr secret key
/src/src/scripts/scalr.coffee-10-#   SCALR_FARM_NAME = Scalr Farm name
##############################################
/src/src/scripts/scalr.coffee-34-  failure = (
/src/src/scripts/scalr.coffee:35:    !process.env.SCALR_API_KEY || 
/src/src/scripts/scalr.coffee-36-    !process.env.SCALR_SECRET_KEY || 
##############################################
/src/src/scripts/scalr.coffee-48-    .query({
/src/src/scripts/scalr.coffee:49:      api_key: process.env.SCALR_API_KEY,
/src/src/scripts/scalr.coffee-50-      secret_key: process.env.SCALR_SECRET_KEY,
##############################################
/src/src/scripts/web.coffee-10-#   HUBOT_BITLY_USERNAME
/src/src/scripts/web.coffee:11:#   HUBOT_BITLY_API_KEY
/src/src/scripts/web.coffee-12-#
##############################################
/src/src/scripts/web.coffee-67-          login: process.env.HUBOT_BITLY_USERNAME
/src/src/scripts/web.coffee:68:          apiKey: process.env.HUBOT_BITLY_API_KEY
/src/src/scripts/web.coffee-69-          shortUrl: url
##############################################
/src/src/scripts/wunderground.coffee-52-  else
/src/src/scripts/wunderground.coffee:53:    if not process.env.HUBOT_WUNDERGROUND_API_KEY?
/src/src/scripts/wunderground.coffee:54:      msg.send "HUBOT_WUNDERGROUND_API_KEY is not set. Sign up at http://www.wunderground.com/weather/api/."
/src/src/scripts/wunderground.coffee-55-      return
##############################################
/src/src/scripts/wunderground.coffee-57-    msg
/src/src/scripts/wunderground.coffee:58:      .http("http://api.wunderground.com/api/#{process.env.HUBOT_WUNDERGROUND_API_KEY}/#{service}/q/#{query}.json")
/src/src/scripts/wunderground.coffee-59-      .get() (err, res, body) ->
##############################################
/src/src/scripts/getajob.coffee-7-# Configuration:
/src/src/scripts/getajob.coffee:8:#   HUBOT_AUTHENTIC_JOBS_API_KEY
/src/src/scripts/getajob.coffee-9-#
##############################################
/src/src/scripts/getajob.coffee-20-    params =
/src/src/scripts/getajob.coffee:21:      api_key: process.env.HUBOT_AUTHENTIC_JOBS_API_KEY
/src/src/scripts/getajob.coffee-22-      method: "aj.jobs.search"
##############################################
/src/src/scripts/speak.coffee-8-#   HUBOT_MSTRANSLATE_CLIENT_ID
/src/src/scripts/speak.coffee:9:#   HUBOT_MSTRANSLATE_CLIENT_SECRET
/src/src/scripts/speak.coffee-10-#
##############################################
/src/src/scripts/speak.coffee-20-    clientId = process.env.HUBOT_MSTRANSLATE_CLIENT_ID
/src/src/scripts/speak.coffee:21:    clientSecret = process.env.HUBOT_MSTRANSLATE_CLIENT_SECRET
/src/src/scripts/speak.coffee-22-    langs = ["en"]
##############################################
/src/src/scripts/speak.coffee-37-      msg.send "MS Translate Client Secret isn't set, follow steps at http://msdn.microsoft.com/en-us/library/hh454950.aspx"
/src/src/scripts/speak.coffee:38:      msg.send "Then, set the HUBOT_MSTRANSLATE_CLIENT_SECRET environment variable"
/src/src/scripts/speak.coffee-39-      return
##############################################
/src/src/scripts/speak.coffee-41-    clientId = encodeURIComponent(clientId)
/src/src/scripts/speak.coffee:42:    clientSecret  = encodeURIComponent(clientSecret)
/src/src/scripts/speak.coffee-43-
##############################################
/src/src/scripts/speak.coffee-46-      #can you do this by passing in an object literal? i tried but it didn't work...
/src/src/scripts/speak.coffee:47:      .post( "client_id=#{clientId}&client_secret=#{clientSecret}&scope=#{tokenScope}&grant_type=client_credentials") (err, res, body) ->
/src/src/scripts/speak.coffee-48-        parsedBody = JSON.parse(body)
##############################################
/src/src/scripts/aws.coffee-29-key = process.env.HUBOT_AWS_ACCESS_KEY_ID
/src/src/scripts/aws.coffee:30:secret = process.env.HUBOT_AWS_SECRET_ACCESS_KEY
/src/src/scripts/aws.coffee-31-
##############################################
/src/src/scripts/uptime-robot.coffee-7-# Configuration:
/src/src/scripts/uptime-robot.coffee:8:#   HUBOT_UPTIMEROBOT_APIKEY
/src/src/scripts/uptime-robot.coffee-9-#
##############################################
/src/src/scripts/uptime-robot.coffee-19-module.exports = (robot) ->
/src/src/scripts/uptime-robot.coffee:20:  apikey = process.env.HUBOT_UPTIMEROBOT_APIKEY
/src/src/scripts/uptime-robot.coffee-21-
##############################################
/src/src/scripts/uptime-robot.coffee-23-    msg.http("http://api.uptimerobot.com/getMonitors")
/src/src/scripts/uptime-robot.coffee:24:      .query({ apiKey: apikey, logs: 0, format: "json", noJsonCallback: 1 })
/src/src/scripts/uptime-robot.coffee-25-      .get() (err, res, body) ->
##############################################
/src/src/scripts/uptime-robot.coffee-51-    msg.http("http://api.uptimerobot.com/newMonitor")
/src/src/scripts/uptime-robot.coffee:52:      .query({ apiKey: apikey, monitorFriendlyName: monitorFriendlyName, monitorURL: monitorUrl, monitorType: 1, format: "json", noJsonCallback: 1 })
/src/src/scripts/uptime-robot.coffee-53-      .get() (err, res, body) ->
##############################################
/src/src/scripts/salesforce.coffee-9-#	SF_CONSUMER_KEY = consumer key from the Remote Access Setup page in Salesforce
/src/src/scripts/salesforce.coffee:10:#	SF_CONSUMER_SECRET = consumer secret from the Remote Access Setup page in Salesforce
/src/src/scripts/salesforce.coffee-11-#	SF_USERNAME = a valid salesforce login
##############################################
/src/src/scripts/salesforce.coffee-22-sf_consumer_key = process.env.SF_CONSUMER_KEY
/src/src/scripts/salesforce.coffee:23:sf_consumer_secret = process.env.SF_CONSUMER_SECRET
/src/src/scripts/salesforce.coffee-24-sf_username = process.env.SF_USERNAME
##############################################
/src/src/scripts/salesforce.coffee-26-
/src/src/scripts/salesforce.coffee:27:auth_url = "#{sf_instance}/services/oauth2/token?grant_type=password&client_id=#{sf_consumer_key}&client_secret=#{sf_consumer_secret}&username=#{sf_username}&password=#{sf_password}"
/src/src/scripts/salesforce.coffee-28-query_url = "#{sf_instance}/services/data/v20.0/query?q="
##############################################
/src/src/scripts/time.coffee-7-# Configuration:
/src/src/scripts/time.coffee:8:#   HUBOT_WWO_API_KEY
/src/src/scripts/time.coffee-9-#
##############################################
/src/src/scripts/time.coffee-26-  robot.respond /time in (.*)/i, (msg) ->
/src/src/scripts/time.coffee:27:    unless process.env.HUBOT_WWO_API_KEY
/src/src/scripts/time.coffee:28:      msg.send 'Please, set HUBOT_WWO_API_KEY environment variable'
/src/src/scripts/time.coffee-29-      return
##############################################
/src/src/scripts/time.coffee-32-        q: msg.match[1]
/src/src/scripts/time.coffee:33:        key: process.env.HUBOT_WWO_API_KEY
/src/src/scripts/time.coffee-34-        format: 'json'
##############################################
/src/src/scripts/iwdrm.coffee-7-# Configuration:
/src/src/scripts/iwdrm.coffee:8:#   HUBOT_TUMBLR_API_KEY
/src/src/scripts/iwdrm.coffee-9-#
##############################################
/src/src/scripts/iwdrm.coffee-18-    tumblr_request = (offset, success) ->
/src/src/scripts/iwdrm.coffee:19:      params = { api_key: process.env.HUBOT_TUMBLR_API_KEY, limit: 1, offset: offset }
/src/src/scripts/iwdrm.coffee-20-      msg.http('http://api.tumblr.com/v2/blog/iwdrm.tumblr.com/posts/photo')
##############################################
/src/src/scripts/yelp.coffee-44-consumer_key = process.env.HUBOT_YELP_CONSUMER_KEY
/src/src/scripts/yelp.coffee:45:consumer_secret = process.env.HUBOT_YELP_CONSUMER_SECRET
/src/src/scripts/yelp.coffee-46-token = process.env.HUBOT_YELP_TOKEN
/src/src/scripts/yelp.coffee:47:token_secret = process.env.HUBOT_YELP_TOKEN_SECRET
/src/src/scripts/yelp.coffee-48-
##############################################
/src/src/scripts/bitly.coffee-8-#   HUBOT_BITLY_USERNAME
/src/src/scripts/bitly.coffee:9:#   HUBOT_BITLY_API_KEY
/src/src/scripts/bitly.coffee-10-#
##############################################
/src/src/scripts/bitly.coffee-24-        login: process.env.HUBOT_BITLY_USERNAME
/src/src/scripts/bitly.coffee:25:        apiKey: process.env.HUBOT_BITLY_API_KEY
/src/src/scripts/bitly.coffee-26-        longUrl: msg.match[3]
##############################################
/src/src/scripts/bitly.coffee-37-        login: process.env.HUBOT_BITLY_USERNAME
/src/src/scripts/bitly.coffee:38:        apiKey: process.env.HUBOT_BITLY_API_KEY
/src/src/scripts/bitly.coffee-39-        shortUrl: msg.match
##############################################
/src/src/scripts/wordnik.coffee-7-# Configuration:
/src/src/scripts/wordnik.coffee:8:#   WORDNIK_API_KEY
/src/src/scripts/wordnik.coffee-9-#
##############################################
/src/src/scripts/wordnik.coffee-77-  # FIXME prefix with HUBOT_ for
/src/src/scripts/wordnik.coffee:78:  if process.env.WORDNIK_API_KEY == undefined
/src/src/scripts/wordnik.coffee:79:    msg.send "Missing WORDNIK_API_KEY env variable."
/src/src/scripts/wordnik.coffee-80-    return
##############################################
/src/src/scripts/wordnik.coffee-83-    .query(query)
/src/src/scripts/wordnik.coffee:84:    .header('api_key', process.env.WORDNIK_API_KEY)
/src/src/scripts/wordnik.coffee-85-    .get(callback)
##############################################
/src/src/scripts/lastfm_np.coffee-8-# Configuration:
/src/src/scripts/lastfm_np.coffee:9:#   HUBOT_LASTFM_APIKEY
/src/src/scripts/lastfm_np.coffee-10-#
##############################################
/src/src/scripts/lastfm_np.coffee-20-  user = usr ? msg.match[2]
/src/src/scripts/lastfm_np.coffee:21:  apiKey = process.env.HUBOT_LASTFM_APIKEY
/src/src/scripts/lastfm_np.coffee-22-  msg.http('http://ws.audioscrobbler.com/2.0/?')
/src/src/scripts/lastfm_np.coffee:23:    .query(method: 'user.getrecenttracks', user: user, api_key: apiKey, format: 'json')
/src/src/scripts/lastfm_np.coffee-24-    .get() (err, res, body) ->
##############################################
/src/src/scripts/word-of-the-day.coffee-8-#   WOTD_PROVIDER - to 'wordnik' or 'dictionary'
/src/src/scripts/word-of-the-day.coffee:9:#   WORDNIK_API_KEY - API key from http://developer.wordnik.com/ or http://developer.dictionary.com/
/src/src/scripts/word-of-the-day.coffee-10-#
##############################################
/src/src/scripts/word-of-the-day.coffee-26-  robot.respond /(word of the day|wotd)\s?(me)?\s?(short)?(.*)$/i, (msg) ->
/src/src/scripts/word-of-the-day.coffee:27:    # FIXME prefix WOTD_PROVIDER and DICTIONARY_API_KEY with HUBOT_ for consistency
/src/src/scripts/word-of-the-day.coffee:28:    if process.env.WOTD_PROVIDER is "wordnik" and process.env.WORDNIK_API_KEY?
/src/src/scripts/word-of-the-day.coffee-29-      wotd_wordnik msg, msg.match[3]?
/src/src/scripts/word-of-the-day.coffee:30:    else if process.env.WOTD_PROVIDER is "dictionary" and process.env.DICTIONARY_API_KEY?
/src/src/scripts/word-of-the-day.coffee-31-      wotd_dictionary msg, msg.match[3]?
/src/src/scripts/word-of-the-day.coffee-32-    else
/src/src/scripts/word-of-the-day.coffee:33:      msg.send "Missing WOTD_PROVIDER, WORDNIK_API_KEY or DICTIONARY_API_KEY env variable"
/src/src/scripts/word-of-the-day.coffee-34-
##############################################
/src/src/scripts/word-of-the-day.coffee-36-  msg.http("http://api.wordnik.com/api/wordoftheday.json")
/src/src/scripts/word-of-the-day.coffee:37:    .header("api_key", process.env.WORDNIK_API_KEY)
/src/src/scripts/word-of-the-day.coffee-38-    .get() (err, res, body) ->
##############################################
/src/src/scripts/word-of-the-day.coffee-56-  msg.http("http://api-pub.dictionary.com/v001")
/src/src/scripts/word-of-the-day.coffee:57:    .query(vid: process.env.DICTIONARY_API_KEY, type: "wotd")
/src/src/scripts/word-of-the-day.coffee-58-    .get() (err, res, body) ->
##############################################
/src/src/scripts/mite.coffee-78-      .headers
/src/src/scripts/mite.coffee:79:        'X-MiteApiKey': "#{@key}",
/src/src/scripts/mite.coffee-80-        'Accept': 'application/json'
##############################################
/src/src/scripts/mite.coffee-93-      .headers
/src/src/scripts/mite.coffee:94:        'X-MiteApiKey': "#{@key}",
/src/src/scripts/mite.coffee-95-        'Accept': 'application/json'
##############################################
/src/src/scripts/mite.coffee-109-      .headers
/src/src/scripts/mite.coffee:110:        'X-MiteApiKey': "#{@key}",
/src/src/scripts/mite.coffee-111-        'Content-type': "application/json",
##############################################
/src/src/scripts/mite.coffee-124-      .headers
/src/src/scripts/mite.coffee:125:        'X-MiteApiKey': "#{@key}",
/src/src/scripts/mite.coffee-126-        'Accept': 'application/json'
##############################################
/src/src/scripts/mite.coffee-141-      .headers
/src/src/scripts/mite.coffee:142:        'X-MiteApiKey': "#{@key}",
/src/src/scripts/mite.coffee-143-        'Content-type': "application/json",
##############################################
/src/src/scripts/chartbeat.coffee-8-#   HUBOT_CHARTBEAT_SITE
/src/src/scripts/chartbeat.coffee:9:#   HUBOT_CHARTBEAT_API_KEY <use global key for access to all sites>
/src/src/scripts/chartbeat.coffee-10-# 
##############################################
/src/src/scripts/chartbeat.coffee-29-    site = if (msg.match[2] == 'me') then process.env.HUBOT_CHARTBEAT_SITE else msg.match[2]
/src/src/scripts/chartbeat.coffee:30:    apiKey = process.env.HUBOT_CHARTBEAT_API_KEY
/src/src/scripts/chartbeat.coffee-31-
/src/src/scripts/chartbeat.coffee:32:    msg.http("http://api.chartbeat.com/live/quickstats/v3/?apikey=#{apiKey}&host=#{site}")
/src/src/scripts/chartbeat.coffee-33-      .get() (err, res, body) ->
##############################################
/src/src/scripts/odesk.coffee-8-#   HUBOT_BITLY_USERNAME
/src/src/scripts/odesk.coffee:9:#   HUBOT_BITLY_API_KEY
/src/src/scripts/odesk.coffee-10-#   (preferred but not required)
##############################################
/src/src/scripts/odesk.coffee-52-    for job in results
/src/src/scripts/odesk.coffee:53:      if process.env.HUBOT_BITLY_USERNAME && process.env.HUBOT_BITLY_API_KEY
/src/src/scripts/odesk.coffee-54-        shortenUrl msg, job, "https://www.odesk.com/o/jobs/job/#{job['legacy_ciphertext']}"
##############################################
/src/src/scripts/odesk.coffee-67-      login: process.env.HUBOT_BITLY_USERNAME
/src/src/scripts/odesk.coffee:68:      apiKey: process.env.HUBOT_BITLY_API_KEY
/src/src/scripts/odesk.coffee-69-      longUrl: url
##############################################
/src/src/scripts/sosearch.coffee-21-# API keys are public for Stackapps
/src/src/scripts/sosearch.coffee:22:hubot_stackapps_apikey = 'BeOjD228tEOZP6gbYoChsg'
/src/src/scripts/sosearch.coffee-23-
##############################################
/src/src/scripts/sosearch.coffee-41-      intitle: encodeURIComponent(search)
/src/src/scripts/sosearch.coffee:42:      key: hubot_stackapps_apikey
/src/src/scripts/sosearch.coffee-43-      tagged: encodeURIComponent(tags.join(':'))
##############################################
/src/src/scripts/ethperpadlite-ideas.js-84-  }
/src/src/scripts/ethperpadlite-ideas.js:85:  return url + 'api/1/getText?apikey=' + key + '&padID=' + pad;
/src/src/scripts/ethperpadlite-ideas.js-86-}
##############################################
/src/src/scripts/brewerydb.coffee-7-# Configuration:
/src/src/scripts/brewerydb.coffee:8:#   BREWERYDB_API_KEY
/src/src/scripts/brewerydb.coffee-9-#
##############################################
/src/src/scripts/brewerydb.coffee-17-  robot.respond /beer me (.*)/i, (msg) ->
/src/src/scripts/brewerydb.coffee:18:    unless process.env.BREWERYDB_API_KEY?
/src/src/scripts/brewerydb.coffee:19:      msg.send "Please specify your BreweyDB API key in BREWERYDB_API_KEY"
/src/src/scripts/brewerydb.coffee-20-      return
##############################################
/src/src/scripts/brewerydb.coffee-24-        withBreweries: "Y"
/src/src/scripts/brewerydb.coffee:25:        key: process.env.BREWERYDB_API_KEY
/src/src/scripts/brewerydb.coffee-26-        q: msg.match[1].replace(" ", "+")
##############################################
/src/src/scripts/klout.coffee-10-# Configuration:
/src/src/scripts/klout.coffee:11:#   HUBOT_KLOUT_API_KEY must be set in the environment. 
/src/src/scripts/klout.coffee-12-#   The competitors list is automatically created and includes the last 9 valid twitter handles. 
##############################################
/src/src/scripts/klout.coffee-22-
/src/src/scripts/klout.coffee:23:klout_api_key = () ->
/src/src/scripts/klout.coffee:24:    return process.env.HUBOT_KLOUT_API_KEY
/src/src/scripts/klout.coffee-25-    
##############################################
/src/src/scripts/klout.coffee-27-    robot.respond /.*(klout) [@]?(.+)$/i, (msg) ->
/src/src/scripts/klout.coffee:28:        unless klout_api_key()
/src/src/scripts/klout.coffee:29:            msg.send "I wont report any scores until your environment HUBOT_KLOUT_API_KEY is set"
/src/src/scripts/klout.coffee-30-            return
##############################################
/src/src/scripts/klout.coffee-57-    thisPlayer = hashlist[index]
/src/src/scripts/klout.coffee:58:    url = "http://api.klout.com/v2/user.json/#{thisPlayer.id}/score?key=#{klout_api_key()}"
/src/src/scripts/klout.coffee-59-    msg.http(url)
##############################################
/src/src/scripts/klout.coffee-68-getKloutScoreByName = (name, msg, callback)->
/src/src/scripts/klout.coffee:69:    url = "http://api.klout.com/v2/identity.json/twitter?key=#{klout_api_key()}&screenName=#{name}"
/src/src/scripts/klout.coffee-70-    msg.http(url)
##############################################
/src/src/scripts/gosling.coffee-7-# Configuration:
/src/src/scripts/gosling.coffee:8:#   HUBOT_TUMBLR_API_KEY
/src/src/scripts/gosling.coffee-9-#
##############################################
/src/src/scripts/gosling.coffee-16-
/src/src/scripts/gosling.coffee:17:api_key = process.env.HUBOT_TUMBLR_API_KEY
/src/src/scripts/gosling.coffee-18-
/src/src/scripts/gosling.coffee-19-getRandomGoslingImageUrl = (msg, rand) ->
/src/src/scripts/gosling.coffee:20:  msg.http("http://api.tumblr.com/v2/blog/programmerryangosling.tumblr.com/posts?api_key=#{api_key}&offset=#{rand}&limit=1").get() (err, res, body) ->
/src/src/scripts/gosling.coffee-21-    post = JSON.parse(body)
##############################################
/src/src/scripts/gosling.coffee-24-getGoslingImage = (msg) ->
/src/src/scripts/gosling.coffee:25:  msg.http("http://api.tumblr.com/v2/blog/programmerryangosling.tumblr.com/info?api_key=#{api_key}").get() (err, res, body) ->
/src/src/scripts/gosling.coffee-26-    total_posts = JSON.parse(body).response.blog.posts
##############################################
/src/src/scripts/hangman.coffee-9-# Configuration:
/src/src/scripts/hangman.coffee:10:#   WORDNIK_API_KEY
/src/src/scripts/hangman.coffee-11-#
##############################################
/src/src/scripts/hangman.coffee-104-
/src/src/scripts/hangman.coffee:105:    if process.env.WORDNIK_API_KEY == undefined
/src/src/scripts/hangman.coffee:106:      msg.send("Missing WORDNIK_API_KEY env variable.")
/src/src/scripts/hangman.coffee-107-      return
##############################################
/src/src/scripts/hangman.coffee-128-    .headers
/src/src/scripts/hangman.coffee:129:      api_key: process.env.WORDNIK_API_KEY
/src/src/scripts/hangman.coffee-130-    .get() (err, res, body) ->
##############################################
/src/src/scripts/hangman.coffee-140-  msg.http("http://api.wordnik.com/v4/word.json/#{escape(word)}/definitions")
/src/src/scripts/hangman.coffee:141:    .header("api_key", process.env.WORDNIK_API_KEY)
/src/src/scripts/hangman.coffee-142-    .get() (err, res, body) ->
##############################################
/src/src/scripts/spin.coffee-41-# spun vars. spinner API signup coming soon!
/src/src/scripts/spin.coffee:42:secret_key = env.HUBOT_SPINNER_SECRET_KEY
/src/src/scripts/spin.coffee-43-access_key = env.HUBOT_SPINNER_ACCESS_KEY
##############################################
/src/src/scripts/asana.coffee-7-# Configuration:
/src/src/scripts/asana.coffee:8:#   HUBOT_ASANA_API_KEY - find this in Account Settings -> API
/src/src/scripts/asana.coffee-9-#   
/src/src/scripts/asana.coffee-10-#   HUBOT_ASANA_WORKSPACE_ID - list all workspaces using
/src/src/scripts/asana.coffee:11:#   curl -u <api_key>: https://app.asana.com/api/1.0/workspaces
/src/src/scripts/asana.coffee-12-#   (note the colon after the api key)  
##############################################
/src/src/scripts/asana.coffee-14-#   HUBOT_ASANA_PROJECT_ID - list all projects in the workspace using:
/src/src/scripts/asana.coffee:15:#   curl -u <api_key>: https://app.asana.com/api/1.0/workspaces/<workspace id>/projects
/src/src/scripts/asana.coffee-16-#
##############################################
/src/src/scripts/asana.coffee-28-project = process.env.HUBOT_ASANA_PROJECT_ID
/src/src/scripts/asana.coffee:29:api_key = process.env.HUBOT_ASANA_API_KEY
/src/src/scripts/asana.coffee-30-
##############################################
/src/src/scripts/asana.coffee-32-getRequest = (msg, path, callback) ->
/src/src/scripts/asana.coffee:33:  auth = 'Basic ' + new Buffer("#{api_key}:").toString('base64')
/src/src/scripts/asana.coffee-34-  msg.http("#{url}#{path}")
##############################################
/src/src/scripts/asana.coffee-40-  stringParams = JSON.stringify params
/src/src/scripts/asana.coffee:41:  auth = 'Basic ' + new Buffer("#{api_key}:").toString('base64')
/src/src/scripts/asana.coffee-42-  msg.http("#{url}#{path}")
##############################################
/src/src/scripts/rotten.coffee-7-# Configuration:
/src/src/scripts/rotten.coffee:8:#   HUBOT_ROTTEN_TOMATOES_API_KEY
/src/src/scripts/rotten.coffee-9-#
##############################################
/src/src/scripts/rotten.coffee-21-    @api_url = "http://api.rottentomatoes.com/api/public/v1.0"
/src/src/scripts/rotten.coffee:22:    @api_key = process.env.HUBOT_ROTTEN_TOMATOES_API_KEY
/src/src/scripts/rotten.coffee-23-
##############################################
/src/src/scripts/rotten.coffee-99-  send: (url, options, callback) =>
/src/src/scripts/rotten.coffee:100:    options.apikey = @api_key
/src/src/scripts/rotten.coffee-101-    @robot.http(url).query(options).get()(callback)
##############################################
/src/src/scripts/darksky.coffee-7-# Configuration
/src/src/scripts/darksky.coffee:8:#   HUBOT_DARK_SKY_API_KEY
/src/src/scripts/darksky.coffee-9-#   HUBOT_DARK_SKY_DEFAULT_LOCATION
##############################################
/src/src/scripts/darksky.coffee-41-darkSkyMe = (msg, lat, lng, cb) ->
/src/src/scripts/darksky.coffee:42:  url = "https://api.forecast.io/forecast/#{process.env.HUBOT_DARK_SKY_API_KEY}/#{lat},#{lng}/"
/src/src/scripts/darksky.coffee-43-  msg.http(url)
##############################################
/src/src/scripts/pagerduty.coffee-21-#
/src/src/scripts/pagerduty.coffee:22:#   HUBOT_PAGERDUTY_API_KEY - API Access Key
/src/src/scripts/pagerduty.coffee-23-#   HUBOT_PAGERDUTY_SUBDOMAIN
/src/src/scripts/pagerduty.coffee:24:#   HUBOT_PAGERDUTY_SERVICE_API_KEY - Service API Key from a 'General API Service'
/src/src/scripts/pagerduty.coffee-25-#   HUBOT_PAGERDUTY_SCHEDULE_ID
##############################################
/src/src/scripts/pagerduty.coffee-31-pagerDutyUsers = {}
/src/src/scripts/pagerduty.coffee:32:pagerDutyApiKey        = process.env.HUBOT_PAGERDUTY_API_KEY
/src/src/scripts/pagerduty.coffee-33-pagerDutySubdomain     = process.env.HUBOT_PAGERDUTY_SUBDOMAIN
/src/src/scripts/pagerduty.coffee-34-pagerDutyBaseUrl       = "https://#{pagerDutySubdomain}.pagerduty.com/api/v1"
/src/src/scripts/pagerduty.coffee:35:pagerDutyServiceApiKey = process.env.HUBOT_PAGERDUTY_SERVICE_API_KEY
/src/src/scripts/pagerduty.coffee-36-pagerDutyScheduleId    = process.env.HUBOT_PAGERDUTY_SCHEDULE_ID
##############################################
/src/src/scripts/pagerduty.coffee-146-      missingAnything |= true
/src/src/scripts/pagerduty.coffee:147:    unless pagerDutyApiKey?
/src/src/scripts/pagerduty.coffee:148:      msg.send "PagerDuty API Key is missing:  Ensure that HUBOT_PAGERDUTY_API_KEY is set."
/src/src/scripts/pagerduty.coffee-149-      missingAnything |= true
##############################################
/src/src/scripts/pagerduty.coffee-173-  
/src/src/scripts/pagerduty.coffee:174:    auth = "Token token=#{pagerDutyApiKey}"
/src/src/scripts/pagerduty.coffee-175-    msg.http(pagerDutyBaseUrl + url)
##############################################
/src/src/scripts/pagerduty.coffee-192-    json = JSON.stringify(data)
/src/src/scripts/pagerduty.coffee:193:    auth = "Token token=#{pagerDutyApiKey}"
/src/src/scripts/pagerduty.coffee-194-    msg.http(pagerDutyBaseUrl + url)
##############################################
/src/src/scripts/pagerduty.coffee-212-    json = JSON.stringify(data)
/src/src/scripts/pagerduty.coffee:213:    auth = "Token token=#{pagerDutyApiKey}"
/src/src/scripts/pagerduty.coffee-214-    msg.http(pagerDutyBaseUrl + url)
##############################################
/src/src/scripts/pagerduty.coffee-260-  pagerDutyIntegrationAPI = (msg, cmd, args, cb) ->
/src/src/scripts/pagerduty.coffee:261:    unless pagerDutyServiceApiKey?
/src/src/scripts/pagerduty.coffee-262-      msg.send "PagerDuty API service key is missing."
/src/src/scripts/pagerduty.coffee:263:      msg.send "Ensure that HUBOT_PAGERDUTY_SERVICE_API_KEY is set."
/src/src/scripts/pagerduty.coffee-264-      return
##############################################
/src/src/scripts/pagerduty.coffee-268-      when "trigger"
/src/src/scripts/pagerduty.coffee:269:        data = JSON.stringify { service_key: pagerDutyServiceApiKey, event_type: "trigger", description: "#{args}"}
/src/src/scripts/pagerduty.coffee-270-        pagerDutyIntergrationPost msg, data, (json) ->
##############################################
/src/src/scripts/trajectorystorylisten.coffee-7-# Configuration:
/src/src/scripts/trajectorystorylisten.coffee:8:#   HUBOT_TRAJECTORY_APIKEY: your Trajectory API key
/src/src/scripts/trajectorystorylisten.coffee-9-#   HUBOT_TRAJECTORY_ACCOUNT: your Trajectory account number
##############################################
/src/src/scripts/trajectorystorylisten.coffee-18-  robot.hear /apptrajectory\.com\/\w+\/(\w+)\/(stories|ideas)\/(\d+)/i, (msg) ->
/src/src/scripts/trajectorystorylisten.coffee:19:    apiKey  = process.env.HUBOT_TRAJECTORY_APIKEY
/src/src/scripts/trajectorystorylisten.coffee-20-    account = process.env.HUBOT_TRAJECTORY_ACCOUNT
/src/src/scripts/trajectorystorylisten.coffee-21-
/src/src/scripts/trajectorystorylisten.coffee:22:    unless apiKey && account
/src/src/scripts/trajectorystorylisten.coffee:23:      msg.send "Please set HUBOT_TRAJECTORY_APIKEY and HUBOT_TRAJECTORY_ACCOUNT correctly"
/src/src/scripts/trajectorystorylisten.coffee-24-      return
##############################################
/src/src/scripts/trajectorystorylisten.coffee-29-
/src/src/scripts/trajectorystorylisten.coffee:30:    baseURL = "https://www.apptrajectory.com/api/#{apiKey}/accounts/#{account}/projects/#{project}"
/src/src/scripts/trajectorystorylisten.coffee-31-    detailsURL = {
##############################################
/src/src/scripts/mailchimp-subscribe.coffee-7-# Configuration:
/src/src/scripts/mailchimp-subscribe.coffee:8:#   MAILCHIMP_API_KEY
/src/src/scripts/mailchimp-subscribe.coffee-9-#   MAILCHIMP_LIST_ID
##############################################
/src/src/scripts/mailchimp-subscribe.coffee-18-
/src/src/scripts/mailchimp-subscribe.coffee:19:apiKey = process.env.MAILCHIMP_API_KEY
/src/src/scripts/mailchimp-subscribe.coffee-20-listId = process.env.MAILCHIMP_LIST_ID
##############################################
/src/src/scripts/mailchimp-subscribe.coffee-29-  try
/src/src/scripts/mailchimp-subscribe.coffee:30:    api = new MailChimpAPI(apiKey,
/src/src/scripts/mailchimp-subscribe.coffee-31-      version: "1.3"
##############################################
/src/src/scripts/newrelic.coffee-9-#   HUBOT_NEWRELIC_APP_ID
/src/src/scripts/newrelic.coffee:10:#   HUBOT_NEWRELIC_API_KEY
/src/src/scripts/newrelic.coffee-11-# 
##############################################
/src/src/scripts/newrelic.coffee-28-    appId     = process.env.HUBOT_NEWRELIC_APP_ID
/src/src/scripts/newrelic.coffee:29:    apiKey    = process.env.HUBOT_NEWRELIC_API_KEY
/src/src/scripts/newrelic.coffee-30-    Parser = require("xml2js").Parser
/src/src/scripts/newrelic.coffee-31-    
/src/src/scripts/newrelic.coffee:32:    msg.http("https://rpm.newrelic.com/accounts/#{accountId}/applications/#{appId}/threshold_values.xml?api_key=#{apiKey}")
/src/src/scripts/newrelic.coffee-33-      .get() (err, res, body) ->
##############################################
/src/src/scripts/webshot.coffee-8-#   HUBOT_WEBTHUMB_USER
/src/src/scripts/webshot.coffee:9:#   HUBOT_WEBTHUMB_API_KEY
/src/src/scripts/webshot.coffee-10-#
##############################################
/src/src/scripts/webshot.coffee-20-  robot.respond /webshot( me)? (.*)/i, (msg) ->
/src/src/scripts/webshot.coffee:21:    if process.env.HUBOT_WEBTHUMB_USER and process.env.HUBOT_WEBTHUMB_API_KEY
/src/src/scripts/webshot.coffee-22-      url = msg.match[2]
/src/src/scripts/webshot.coffee-23-      console.log(url)
/src/src/scripts/webshot.coffee:24:      msg.send 'http://webthumb.bluga.net/easythumb.php?user=' + process.env.HUBOT_WEBTHUMB_USER + '&url=' + encodeURIComponent(url) + '&size=large&hash=' + webthumbhash(process.env.HUBOT_WEBTHUMB_API_KEY, url) + '&cache=14#.jpeg'
/src/src/scripts/webshot.coffee-25-
/src/src/scripts/webshot.coffee:26:webthumbhash = (apikey, url) =>
/src/src/scripts/webshot.coffee-27-  now = new Date
##############################################
/src/src/scripts/webshot.coffee-30-  day = (now.getUTCDate() < 10 ? '0' : '') + now.getUTCDate()
/src/src/scripts/webshot.coffee:31:  hashlib.md5(now.getUTCFullYear().toString() + month + day + url + apikey)
##############################################
/src/src/scripts/s3-brain.coffee-56-  key               = process.env.HUBOT_S3_BRAIN_ACCESS_KEY_ID
/src/src/scripts/s3-brain.coffee:57:  secret            = process.env.HUBOT_S3_BRAIN_SECRET_ACCESS_KEY
/src/src/scripts/s3-brain.coffee-58-  bucket            = process.env.HUBOT_S3_BRAIN_BUCKET
##############################################
/src/src/scripts/tumblr.coffee-8-#   HUBOT_TUMBLR_BLOG_NAME
/src/src/scripts/tumblr.coffee:9:#   HUBOT_TUMBLR_API_KEY
/src/src/scripts/tumblr.coffee-10-#
##############################################
/src/src/scripts/tumblr.coffee-19-  blog_name = process.env.HUBOT_TUMBLR_BLOG_NAME
/src/src/scripts/tumblr.coffee:20:  api_key   = process.env.HUBOT_TUMBLR_API_KEY
/src/src/scripts/tumblr.coffee-21-
##############################################
/src/src/scripts/tumblr.coffee-26-    msg.http("http://api.tumblr.com/v2/blog/#{blog_name}.tumblr.com/posts/photo")
/src/src/scripts/tumblr.coffee:27:      .query(api_key: api_key, limit: count)
/src/src/scripts/tumblr.coffee-28-      .get() (err, res, body) ->
##############################################
/src/src/scripts/sendgrid.coffee-91-  opts.api_user = env.HUBOT_SENDGRID_USER
/src/src/scripts/sendgrid.coffee:92:  opts.api_key = env.HUBOT_SENDGRID_KEY
/src/src/scripts/sendgrid.coffee-93-  msg.http("https://sendgrid.com/api/stats.get.json")
##############################################
/src/src/scripts/espn.coffee-19-
/src/src/scripts/espn.coffee:20:espnApiKey = process.env.HUBOT_ESPN_ACCOUNT_KEY
/src/src/scripts/espn.coffee:21:unless espnApiKey
/src/src/scripts/espn.coffee-22-  throw "You must enter your HUBOT_ESPN_ACCOUNT_KEY in your environment variables"
##############################################
/src/src/scripts/espn.coffee-26-    search = escape(msg.match[2])
/src/src/scripts/espn.coffee:27:    msg.http('http://api.espn.com/v1/sports/news/headlines?apikey=' + espnApiKey)
/src/src/scripts/espn.coffee-28-      .get() (err, res, body) ->
##############################################
/src/src/scripts/espn.coffee-42-  robot.respond /(espn)( mlb) (.*)/i, (msg) ->
/src/src/scripts/espn.coffee:43:    msg.http('http://api.espn.com/v1/sports/baseball/mlb/teams?apikey=' + espnApiKey)
/src/src/scripts/espn.coffee-44-      .get() (err, res, body) ->
##############################################
/src/src/scripts/espn.coffee-49-  robot.respond /(espn)( nfl) (.*)/i, (msg) ->
/src/src/scripts/espn.coffee:50:      msg.http('http://api.espn.com/v1/sports/football/nfl/teams?apikey=' + espnApiKey)
/src/src/scripts/espn.coffee-51-        .get() (err, res, body) ->
##############################################
/src/src/scripts/espn.coffee-56-  robot.respond /(espn)( nba) (.*)/i, (msg) ->
/src/src/scripts/espn.coffee:57:      msg.http('http://api.espn.com/v1/sports/basketball/nba/teams?apikey=' + espnApiKey)
/src/src/scripts/espn.coffee-58-        .get() (err, res, body) ->
##############################################
/src/src/scripts/espn.coffee-63-  robot.respond /(espn)( nhl) (.*)/i, (msg) ->
/src/src/scripts/espn.coffee:64:      msg.http('http://api.espn.com/v1/sports/hockey/nhl/teams?apikey=' + espnApiKey)
/src/src/scripts/espn.coffee-65-        .get() (err, res, body) ->
##############################################
/src/src/scripts/punchfork.coffee-7-# Configuration:
/src/src/scripts/punchfork.coffee:8:#   HUBOT_PUNCHFORK_APIKEY
/src/src/scripts/punchfork.coffee-9-#
##############################################
/src/src/scripts/punchfork.coffee-20-      
/src/src/scripts/punchfork.coffee:21:    api_key = process.env.HUBOT_PUNCHFORK_APIKEY
/src/src/scripts/punchfork.coffee-22-
/src/src/scripts/punchfork.coffee:23:    msg.http("http://api.punchfork.com/recipes?key=#{api_key}&q=#{keyword}&count=1")
/src/src/scripts/punchfork.coffee-24-      .get() (err, res, body) ->
##############################################
/src/src/scripts/notify.coffee-10-# Commands:
/src/src/scripts/notify.coffee:11:#   hubot notify me by prowl with YOUR_PROWL_API_KEY
/src/src/scripts/notify.coffee:12:#   hubot notify me by nma with YOUR_NMA_API_KEY
/src/src/scripts/notify.coffee-13-#   hubot notify me by sms with 15556667890
##############################################
/src/src/scripts/notify.coffee-67-    if username == "all" or username == "everyone"
/src/src/scripts/notify.coffee:68:      for username, apikey of robot.brain.data.notifiers
/src/src/scripts/notify.coffee-69-        unless username.toLowerCase() == msg.message.user.name.toLowerCase()
/src/src/scripts/notify.coffee:70:          notifies.push apikey
/src/src/scripts/notify.coffee:71:    else if apikey = robot.brain.data.notifiers[username.toLowerCase()]
/src/src/scripts/notify.coffee:72:      notifies.push apikey
/src/src/scripts/notify.coffee-73-
/src/src/scripts/notify.coffee-74-    for notifier in notifies
/src/src/scripts/notify.coffee:75:      [protocol, apikey...] = notifier.split(':')
/src/src/scripts/notify.coffee:76:      apikey = apikey.join('')
/src/src/scripts/notify.coffee:77:      msg.send("Notified #{protocol} by #{apikey}")
/src/src/scripts/notify.coffee-78-
##############################################
/src/src/scripts/notify.coffee-80-        when "prowl"
/src/src/scripts/notify.coffee:81:          notification = new Prowl.connection(apikey)
/src/src/scripts/notify.coffee-82-          notification.send
##############################################
/src/src/scripts/notify.coffee-87-          console.error "Sending sms"
/src/src/scripts/notify.coffee:88:          sendSms apikey, msg
/src/src/scripts/notify.coffee-89-        
##############################################
/src/src/scripts/notify.coffee-91-          params =
/src/src/scripts/notify.coffee:92:            apikey: apikey
/src/src/scripts/notify.coffee-93-            application: "Hubot"
##############################################
/src/src/scripts/notify.coffee-151-  robot.respond /notify me by prowl with (\w+)/i, (msg) ->
/src/src/scripts/notify.coffee:152:    apikey = msg.match[1].toLowerCase()
/src/src/scripts/notify.coffee-153-    robot.brain.data.notifiers ?= {}
/src/src/scripts/notify.coffee:154:    robot.brain.data.notifiers[msg.message.user.name.toLowerCase()] = "prowl:#{apikey}"
/src/src/scripts/notify.coffee-155-    msg.send "OK"
##############################################
/src/src/scripts/notify.coffee-157-  robot.respond /notify me by nma with (\w+)/i, (msg) ->
/src/src/scripts/notify.coffee:158:    apikey = msg.match[1].toLowerCase()
/src/src/scripts/notify.coffee-159-    robot.brain.data.notifiers ?= {}
/src/src/scripts/notify.coffee:160:    robot.brain.data.notifiers[msg.message.user.name.toLowerCase()] = "nma:#{apikey}"
/src/src/scripts/notify.coffee-161-    msg.send "OK"
##############################################
/src/src/scripts/notify.coffee-170-  robot.respond /list notifiers/i, (msg) ->
/src/src/scripts/notify.coffee:171:    for username, apikey of robot.brain.data.notifiers
/src/src/scripts/notify.coffee:172:      msg.send("I notify #{username} with #{apikey}")
