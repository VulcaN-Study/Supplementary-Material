/src/README.md-192-// Use connect method to connect to the server
/src/README.md:193:MongoClient.connect(url, function(err, client) {
/src/README.md-194-  assert.equal(null, err);
##############################################
/src/README.md-251-// Use connect method to connect to the server
/src/README.md:252:MongoClient.connect(url, function(err, client) {
/src/README.md-253-  assert.equal(null, err);
##############################################
/src/README.md-307-// Use connect method to connect to the server
/src/README.md:308:MongoClient.connect(url, function(err, client) {
/src/README.md-309-  assert.equal(null, err);
##############################################
/src/README.md-373-// Use connect method to connect to the server
/src/README.md:374:MongoClient.connect(url, function(err, client) {
/src/README.md-375-  assert.equal(null, err);
##############################################
/src/README.md-418-// Use connect method to connect to the server
/src/README.md:419:MongoClient.connect(url, function(err, client) {
/src/README.md-420-  assert.equal(null, err);
##############################################
/src/README.md-465-// Use connect method to connect to the server
/src/README.md:466:MongoClient.connect(url, function(err, client) {
/src/README.md-467-  assert.equal(null, err);
##############################################
/src/HISTORY.md-1497-* Emit authenticate event on db after authenticate method has finished on db instance (Issue #984)
/src/HISTORY.md:1498:* Allows creation of MongoClient and do new MongoClient().connect(..). Emits open event when connection correct allowing for apps to react on event.
/src/HISTORY.md-1499-
##############################################
/src/lib/cursor.js-35- * // Connect using MongoClient
/src/lib/cursor.js:36: * MongoClient.connect(url, function(err, client) {
/src/lib/cursor.js-37- *   // Create a collection we want to drop later
##############################################
/src/lib/collection.js-77- * // Connect using MongoClient
/src/lib/collection.js:78: * MongoClient.connect(url, function(err, client) {
/src/lib/collection.js-79- *   // Create a collection we want to drop later
##############################################
/src/lib/topologies/mongos.js-341-    // Start connection
/src/lib/topologies/mongos.js:342:    self.s.coreTopology.connect(_options);
/src/lib/topologies/mongos.js-343-  }
##############################################
/src/lib/topologies/replset.js-380-    // Start connection
/src/lib/topologies/replset.js:381:    self.s.coreTopology.connect(_options);
/src/lib/topologies/replset.js-382-  }
##############################################
/src/lib/topologies/server.js-359-    // Start connection
/src/lib/topologies/server.js:360:    self.s.coreTopology.connect(_options);
/src/lib/topologies/server.js-361-  }
##############################################
/src/lib/operations/mongo_client_ops.js-312-  // Connect
/src/lib/operations/mongo_client_ops.js:313:  return url.connect(
/src/lib/operations/mongo_client_ops.js-314-    finalOptions,
##############################################
/src/lib/operations/mongo_client_ops.js-358-  // Connect to topology
/src/lib/operations/mongo_client_ops.js:359:  server.connect(options, (err, topology) => {
/src/lib/operations/mongo_client_ops.js-360-    if (err) {
##############################################
/src/lib/operations/mongo_client_ops.js-416-  // Open the connection
/src/lib/operations/mongo_client_ops.js:417:  topology.connect(options, (err, newTopology) => {
/src/lib/operations/mongo_client_ops.js-418-    if (err) {
##############################################
/src/lib/command_cursor.js-23- * // Connect using MongoClient
/src/lib/command_cursor.js:24: * MongoClient.connect(url, function(err, client) {
/src/lib/command_cursor.js-25- *   // Create a collection we want to drop later
##############################################
/src/lib/gridfs/grid_store.js-20- * // Connect using MongoClient
/src/lib/gridfs/grid_store.js:21: * MongoClient.connect(url, function(err, client) {
/src/lib/gridfs/grid_store.js-22- *   const db = client.db(dbName);
##############################################
/src/lib/admin.js-26- * // Connect using MongoClient
/src/lib/admin.js:27: * MongoClient.connect(url, function(err, client) {
/src/lib/admin.js-28- *   // Use the admin database for the operation
##############################################
/src/lib/aggregation_cursor.js-22- * // Connect using MongoClient
/src/lib/aggregation_cursor.js:23: * MongoClient.connect(url, function(err, client) {
/src/lib/aggregation_cursor.js-24- *   // Create a collection we want to drop later
##############################################
/src/lib/mongo_client.js-28- * const mongoClient = new MongoClient(url);
/src/lib/mongo_client.js:29: * mongoClient.connect(function(err, client) {
/src/lib/mongo_client.js-30- *   const db = client.db(dbName);
##############################################
/src/lib/mongo_client.js-42- * // Connect using MongoClient
/src/lib/mongo_client.js:43: * MongoClient.connect(url, function(err, client) {
/src/lib/mongo_client.js-44- *   const db = client.db(dbName);
##############################################
/src/lib/mongo_client.js-371-  // Execute the connect method
/src/lib/mongo_client.js:372:  return mongoClient.connect(callback);
/src/lib/mongo_client.js-373-};
##############################################
/src/lib/db.js-53- * // Connect using MongoClient
/src/lib/db.js:54: * MongoClient.connect(url, function(err, client) {
/src/lib/db.js-55- *   // Select the database by name
##############################################
/src/lib/db.js-535-  // Get the cursor
/src/lib/db.js:536:  cursor = this.collection(CONSTANTS.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);
/src/lib/db.js-537-  // Do we have a readPreference, apply it
