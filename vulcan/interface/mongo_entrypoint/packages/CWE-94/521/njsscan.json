{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 13,
          "line": 2
        },
        "extra": {
          "line": "  \"extends\": \"standard\",",
          "message": "Syntax error"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 12,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 15,
          "line": 2
        },
        "extra": {
          "line": "*.swp",
          "message": "Syntax error"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 1
        },
        "extra": {
          "line": "MIT License",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 67,
          "line": 9
        },
        "extra": {
          "line": ".PHONY : test test-connection test-integration bench test-native \\",
          "message": "Lexical error: unrecognised symbol, in token rule:\\"
        },
        "path": "/src/Makefile",
        "start": {
          "col": 66,
          "line": 9
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_md5": {
      "files": [
        {
          "file_path": "/src/lib/utils.js",
          "match_lines": [
            138,
            138
          ],
          "match_position": [
            10,
            33
          ],
          "match_string": "  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/lib/client.js",
          "match_lines": [
            93,
            94
          ],
          "match_position": [
            11,
            70
          ],
          "match_string": "          if (undefined !== pass) {\n\n            self.connectionParameters.password = self.password = pass"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
