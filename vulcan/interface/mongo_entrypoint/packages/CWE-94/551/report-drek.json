[
 {
  "id": 1,
  "file": "/src/examples/browser/angle_configuration.html",
  "filetype": "html",
  "search": "<input",
  "match": "    </td>\n  </tr>\n  <tr>\n    <th>Expression</th>\n    <td>\n      <input id=\"expression\" type=\"text\" value=\"sin(45)\" />\n      <input id=\"evaluate\" type=\"button\" value=\"Evaluate\">\n    </td>\n  </tr>\n  <tr>\n    <th>Result</th>",
  "line": 39,
  "start": 34,
  "end": 45
 },
 {
  "id": 2,
  "file": "/src/examples/browser/angle_configuration.html",
  "filetype": "html",
  "search": "<input",
  "match": "  </tr>\n  <tr>\n    <th>Expression</th>\n    <td>\n      <input id=\"expression\" type=\"text\" value=\"sin(45)\" />\n      <input id=\"evaluate\" type=\"button\" value=\"Evaluate\">\n    </td>\n  </tr>\n  <tr>\n    <th>Result</th>\n    <td id=\"result\"></td>",
  "line": 40,
  "start": 35,
  "end": 46
 },
 {
  "id": 3,
  "file": "/src/examples/browser/angle_configuration.html",
  "filetype": "html",
  "search": "<script",
  "match": "    th {\n      text-align: left;\n    }\n  </style>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n\n<p>\n  This code example extends the trigonometric functions of math.js with configurable angles: degrees, radians, or gradians.",
  "line": 17,
  "start": 12,
  "end": 23
 },
 {
  "id": 4,
  "file": "/src/examples/browser/angle_configuration.html",
  "filetype": "html",
  "search": "<script",
  "match": "    <th>Result</th>\n    <td id=\"result\"></td>\n  </tr>\n</table>\n\n<script>\n  var replacements = {};\n\n  // our extended configuration options\n  var config = {\n    angles: 'deg' // 'rad', 'deg', 'grad'",
  "line": 49,
  "start": 44,
  "end": 55
 },
 {
  "id": 5,
  "file": "/src/examples/browser/angle_configuration.html",
  "filetype": "html",
  "search": "<select",
  "match": "\n<table>\n  <tr>\n    <th>Angles</th>\n    <td>\n      <select id=\"angles\">\n        <option value=\"deg\">deg</option>\n        <option value=\"grad\">grad</option>\n        <option value=\"rad\">rad</option>\n      </select>\n    </td>",
  "line": 29,
  "start": 24,
  "end": 35
 },
 {
  "id": 6,
  "file": "/src/examples/browser/basic_usage.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | basic usage</title>\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n\n<script>\n  function print(value) {",
  "line": 5,
  "start": 1,
  "end": 11
 },
 {
  "id": 7,
  "file": "/src/examples/browser/basic_usage.html",
  "filetype": "html",
  "search": "<script",
  "match": "  <title>math.js | basic usage</title>\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n\n<script>\n  function print(value) {\n    var precision = 14;\n    document.write(math.format(value, precision) + '<br>');\n  }\n",
  "line": 9,
  "start": 4,
  "end": 15
 },
 {
  "id": 8,
  "file": "/src/examples/browser/currency_conversion.html",
  "filetype": "html",
  "search": "<input",
  "match": "<p>\n  <label for=\"expr\">Enter an expression with currencies:</label>\n</p>\n<div id=\"form\" style=\"display: none;\">\n  <p>\n    <input id=\"expr\" value=\"5 EUR + 2 * 3 EUR in USD\" /><br/>\n  </p>\n  <p id=\"result\"></p>\n</div>\n\n<script>",
  "line": 44,
  "start": 39,
  "end": 50
 },
 {
  "id": 9,
  "file": "/src/examples/browser/currency_conversion.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | currency conversion</title>\n\n  <script src=\"../../dist/math.js\"></script>\n\n  <style>\n    body,\n    html,\n    input {",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 10,
  "file": "/src/examples/browser/currency_conversion.html",
  "filetype": "html",
  "search": "<script",
  "match": "    <input id=\"expr\" value=\"5 EUR + 2 * 3 EUR in USD\" /><br/>\n  </p>\n  <p id=\"result\"></p>\n</div>\n\n<script>\n  fetchAndImportCurrencies()\n      .then(function (currencies) {\n        document.getElementById('expr').oninput = evaluate;\n        document.getElementById('form').style.display = '';\n        document.getElementById('info').innerHTML = 'Available currencies: ' + currencies.join(', ');",
  "line": 49,
  "start": 44,
  "end": 55
 },
 {
  "id": 11,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<input",
  "match": "\n<table>\n  <tr>\n    <th>Argument separator</th>\n    <td>\n      <input id=\"args\" type=\"text\" value=\";\">\n    </td>\n  </tr>\n  <tr>\n    <th>Decimal separator</th>\n    <td>",
  "line": 29,
  "start": 24,
  "end": 35
 },
 {
  "id": 12,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<input",
  "match": "    </td>\n  </tr>\n  <tr>\n    <th>Decimal separator</th>\n    <td>\n      <input id=\"decimals\" type=\"text\" value=\",\">\n    </td>\n  </tr>\n  <tr>\n    <th>Expression</th>\n    <td>",
  "line": 35,
  "start": 30,
  "end": 41
 },
 {
  "id": 13,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<input",
  "match": "    </td>\n  </tr>\n  <tr>\n    <th>Expression</th>\n    <td>\n      <input id=\"expression\" type=\"text\" value=\"sum(3,4; 2,1; 2,0)\" />\n      <input id=\"evaluate\" type=\"button\" value=\"Evaluate\">\n    </td>\n  </tr>\n  <tr>\n    <th>Result</th>",
  "line": 41,
  "start": 36,
  "end": 47
 },
 {
  "id": 14,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<input",
  "match": "  </tr>\n  <tr>\n    <th>Expression</th>\n    <td>\n      <input id=\"expression\" type=\"text\" value=\"sum(3,4; 2,1; 2,0)\" />\n      <input id=\"evaluate\" type=\"button\" value=\"Evaluate\">\n    </td>\n  </tr>\n  <tr>\n    <th>Result</th>\n    <td id=\"result\"></td>",
  "line": 42,
  "start": 37,
  "end": 48
 },
 {
  "id": 15,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<script",
  "match": "    th {\n      text-align: left;\n    }\n  </style>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n\n<p>\n  This code example shows how to apply custom separators for function arguments and decimal separator.",
  "line": 17,
  "start": 12,
  "end": 23
 },
 {
  "id": 16,
  "file": "/src/examples/browser/custom_separators.html",
  "filetype": "html",
  "search": "<script",
  "match": "    <th>Result</th>\n    <td id=\"result\"></td>\n  </tr>\n</table>\n\n<script>\n  // pointers to the input elements\n  var expression = document.getElementById('expression');\n  var evaluate   = document.getElementById('evaluate');\n  var result     = document.getElementById('result');\n  var args       = document.getElementById('args');",
  "line": 51,
  "start": 46,
  "end": 57
 },
 {
  "id": 17,
  "file": "/src/examples/browser/old_browsers.html",
  "filetype": "html",
  "search": "<!--",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | old browsers</title>\n\n  <!-- es5-shim for old browsers (IE8 and older) -->\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-shim.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-sham.min.js\"></script>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 18,
  "file": "/src/examples/browser/old_browsers.html",
  "filetype": "html",
  "search": "<script",
  "match": "<html>\n<head>\n  <title>math.js | old browsers</title>\n\n  <!-- es5-shim for old browsers (IE8 and older) -->\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-shim.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-sham.min.js\"></script>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 19,
  "file": "/src/examples/browser/old_browsers.html",
  "filetype": "html",
  "search": "<script",
  "match": "<head>\n  <title>math.js | old browsers</title>\n\n  <!-- es5-shim for old browsers (IE8 and older) -->\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-shim.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-sham.min.js\"></script>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n",
  "line": 8,
  "start": 3,
  "end": 14
 },
 {
  "id": 20,
  "file": "/src/examples/browser/old_browsers.html",
  "filetype": "html",
  "search": "<script",
  "match": "\n  <!-- es5-shim for old browsers (IE8 and older) -->\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-shim.min.js\"></script>\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/es5-shim/2.2.0/es5-sham.min.js\"></script>\n\n  <script src=\"../../dist/math.js\"></script>\n</head>\n<body>\n\n<p>\n  To run math.js in old browsers (IE8 and older),",
  "line": 10,
  "start": 5,
  "end": 16
 },
 {
  "id": 21,
  "file": "/src/examples/browser/old_browsers.html",
  "filetype": "html",
  "search": "<script",
  "match": "<p>\n  To run math.js in old browsers (IE8 and older),\n  the <a href=\"https://github.com/kriskowal/es5-shim\">es5-shim</a> library is needed.\n</p>\n\n<script>\n  function print(value) {\n    var precision = 14;\n    document.write(math.format(value, precision) + '<br>');\n  }\n",
  "line": 19,
  "start": 14,
  "end": 25
 },
 {
  "id": 22,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<!--",
  "match": "<html>\n<head>\n  <title>math.js | plot</title>\n  <script src=\"../../dist/math.js\"></script>\n\n  <!-- load http://maurizzzio.github.io/function-plot/ -->\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://wzrd.in/standalone/function-plot@1.14.0\"></script>\n\n  <style>\n    input[type=text] {",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 23,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<form",
  "match": "    }\n  </style>\n</head>\n<body>\n\n<form id=\"form\">\n  <label for=\"eq\">Enter an equation:</label>\n  <input type=\"text\" id=\"eq\" value=\"4 * sin(x) + 5 * cos(x/2)\" />\n  <input type=\"submit\" value=\"Draw\" />\n</form>\n",
  "line": 30,
  "start": 25,
  "end": 36
 },
 {
  "id": 24,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<input",
  "match": "</head>\n<body>\n\n<form id=\"form\">\n  <label for=\"eq\">Enter an equation:</label>\n  <input type=\"text\" id=\"eq\" value=\"4 * sin(x) + 5 * cos(x/2)\" />\n  <input type=\"submit\" value=\"Draw\" />\n</form>\n\n<div id=\"plot\"></div>\n",
  "line": 32,
  "start": 27,
  "end": 38
 },
 {
  "id": 25,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<input",
  "match": "<body>\n\n<form id=\"form\">\n  <label for=\"eq\">Enter an equation:</label>\n  <input type=\"text\" id=\"eq\" value=\"4 * sin(x) + 5 * cos(x/2)\" />\n  <input type=\"submit\" value=\"Draw\" />\n</form>\n\n<div id=\"plot\"></div>\n\n<p>",
  "line": 33,
  "start": 28,
  "end": 39
 },
 {
  "id": 26,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | plot</title>\n  <script src=\"../../dist/math.js\"></script>\n\n  <!-- load http://maurizzzio.github.io/function-plot/ -->\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://wzrd.in/standalone/function-plot@1.14.0\"></script>\n",
  "line": 5,
  "start": 1,
  "end": 11
 },
 {
  "id": 27,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<script",
  "match": "<head>\n  <title>math.js | plot</title>\n  <script src=\"../../dist/math.js\"></script>\n\n  <!-- load http://maurizzzio.github.io/function-plot/ -->\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://wzrd.in/standalone/function-plot@1.14.0\"></script>\n\n  <style>\n    input[type=text] {\n      width: 300px;",
  "line": 8,
  "start": 3,
  "end": 14
 },
 {
  "id": 28,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<script",
  "match": "  <title>math.js | plot</title>\n  <script src=\"../../dist/math.js\"></script>\n\n  <!-- load http://maurizzzio.github.io/function-plot/ -->\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\"></script>\n  <script src=\"https://wzrd.in/standalone/function-plot@1.14.0\"></script>\n\n  <style>\n    input[type=text] {\n      width: 300px;\n    }",
  "line": 9,
  "start": 4,
  "end": 15
 },
 {
  "id": 29,
  "file": "/src/examples/browser/plot.html",
  "filetype": "html",
  "search": "<script",
  "match": "\n<p>\n  Plot library: <a href=\"https://github.com/maurizzzio/function-plot\">https://github.com/maurizzzio/function-plot</a>\n</p>\n\n<script>\n  function draw() {\n    try {\n      functionPlot({\n        target: '#plot',\n        data: [{",
  "line": 42,
  "start": 37,
  "end": 48
 },
 {
  "id": 30,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "</h1>\n\n<table>\n  <tr>\n    <th>Expression</th>\n    <td><input type=\"text\" id=\"expr\"/></td>\n  </tr>\n  <tr>\n    <th>Pretty print</th>\n    <td><div id=\"pretty\">$$$$</div></td>\n  </tr>",
  "line": 53,
  "start": 48,
  "end": 59
 },
 {
  "id": 31,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "    <th>Result</th>\n    <td><div id=\"result\"></div></td>\n  </tr>\n</table>\n<b>Parenthesis option:</b>\n<input type=\"radio\" name=\"parenthesis\" value=\"keep\" onclick=\"parenthesis = 'keep'; expr.oninput();\" checked>keep\n<input type=\"radio\" name=\"parenthesis\" value=\"auto\" onclick=\"parenthesis = 'auto'; expr.oninput();\">auto\n<input type=\"radio\" name=\"parenthesis\" value=\"all\" onclick=\"parenthesis = 'all'; expr.oninput();\">all\n<br/>\n<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide",
  "line": 65,
  "start": 60,
  "end": 71
 },
 {
  "id": 32,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "    <td><div id=\"result\"></div></td>\n  </tr>\n</table>\n<b>Parenthesis option:</b>\n<input type=\"radio\" name=\"parenthesis\" value=\"keep\" onclick=\"parenthesis = 'keep'; expr.oninput();\" checked>keep\n<input type=\"radio\" name=\"parenthesis\" value=\"auto\" onclick=\"parenthesis = 'auto'; expr.oninput();\">auto\n<input type=\"radio\" name=\"parenthesis\" value=\"all\" onclick=\"parenthesis = 'all'; expr.oninput();\">all\n<br/>\n<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide\n<input type=\"radio\" name=\"implicit\" value=\"show\" onclick=\"implicit = 'show'; expr.oninput();\">show",
  "line": 66,
  "start": 61,
  "end": 72
 },
 {
  "id": 33,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "  </tr>\n</table>\n<b>Parenthesis option:</b>\n<input type=\"radio\" name=\"parenthesis\" value=\"keep\" onclick=\"parenthesis = 'keep'; expr.oninput();\" checked>keep\n<input type=\"radio\" name=\"parenthesis\" value=\"auto\" onclick=\"parenthesis = 'auto'; expr.oninput();\">auto\n<input type=\"radio\" name=\"parenthesis\" value=\"all\" onclick=\"parenthesis = 'all'; expr.oninput();\">all\n<br/>\n<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide\n<input type=\"radio\" name=\"implicit\" value=\"show\" onclick=\"implicit = 'show'; expr.oninput();\">show\n",
  "line": 67,
  "start": 62,
  "end": 73
 },
 {
  "id": 34,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "<input type=\"radio\" name=\"parenthesis\" value=\"keep\" onclick=\"parenthesis = 'keep'; expr.oninput();\" checked>keep\n<input type=\"radio\" name=\"parenthesis\" value=\"auto\" onclick=\"parenthesis = 'auto'; expr.oninput();\">auto\n<input type=\"radio\" name=\"parenthesis\" value=\"all\" onclick=\"parenthesis = 'all'; expr.oninput();\">all\n<br/>\n<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide\n<input type=\"radio\" name=\"implicit\" value=\"show\" onclick=\"implicit = 'show'; expr.oninput();\">show\n\n\n<script>\n  var expr = document.getElementById('expr'),",
  "line": 70,
  "start": 65,
  "end": 76
 },
 {
  "id": 35,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<input",
  "match": "<input type=\"radio\" name=\"parenthesis\" value=\"auto\" onclick=\"parenthesis = 'auto'; expr.oninput();\">auto\n<input type=\"radio\" name=\"parenthesis\" value=\"all\" onclick=\"parenthesis = 'all'; expr.oninput();\">all\n<br/>\n<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide\n<input type=\"radio\" name=\"implicit\" value=\"show\" onclick=\"implicit = 'show'; expr.oninput();\">show\n\n\n<script>\n  var expr = document.getElementById('expr'),\n      pretty = document.getElementById('pretty'),",
  "line": 71,
  "start": 66,
  "end": 77
 },
 {
  "id": 36,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | pretty printing with MathJax</title>\n\n  <script src=\"../../dist/math.js\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML.js\"></script>\n\n  <style>\n    body,\n    html,",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 37,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<script",
  "match": "<html>\n<head>\n  <title>math.js | pretty printing with MathJax</title>\n\n  <script src=\"../../dist/math.js\"></script>\n  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/mathjax/2.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML.js\"></script>\n\n  <style>\n    body,\n    html,\n    table td,",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 38,
  "file": "/src/examples/browser/pretty_printing_with_mathjax.html",
  "filetype": "html",
  "search": "<script",
  "match": "<b>Implicit multiplication:</b>\n<input type=\"radio\" name=\"implicit\" value=\"hide\" onclick=\"implicit = 'hide'; expr.oninput();\" checked>hide\n<input type=\"radio\" name=\"implicit\" value=\"show\" onclick=\"implicit = 'show'; expr.oninput();\">show\n\n\n<script>\n  var expr = document.getElementById('expr'),\n      pretty = document.getElementById('pretty'),\n      result = document.getElementById('result'),\n      parenthesis = 'keep',\n      implicit = 'hide';",
  "line": 74,
  "start": 69,
  "end": 80
 },
 {
  "id": 39,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<form",
  "match": "\t\t}\n\t</style>\n</head>\n<body>\n<h1>Expression evaluation and HTML code generation with math.js</h1>\n<form>\n\t<fieldset>\n\t\tParenthesis option:\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"keep\" checked>keep</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"auto\">auto</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>",
  "line": 91,
  "start": 86,
  "end": 97
 },
 {
  "id": 40,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "<body>\n<h1>Expression evaluation and HTML code generation with math.js</h1>\n<form>\n\t<fieldset>\n\t\tParenthesis option:\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"keep\" checked>keep</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"auto\">auto</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>\n\t</fieldset>\n\t<fieldset>\n\t\tImplicit multiplication:",
  "line": 94,
  "start": 89,
  "end": 100
 },
 {
  "id": 41,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "<h1>Expression evaluation and HTML code generation with math.js</h1>\n<form>\n\t<fieldset>\n\t\tParenthesis option:\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"keep\" checked>keep</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"auto\">auto</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>\n\t</fieldset>\n\t<fieldset>\n\t\tImplicit multiplication:\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"hide\" checked>hide</label>",
  "line": 95,
  "start": 90,
  "end": 101
 },
 {
  "id": 42,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "<form>\n\t<fieldset>\n\t\tParenthesis option:\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"keep\" checked>keep</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"auto\">auto</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>\n\t</fieldset>\n\t<fieldset>\n\t\tImplicit multiplication:\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"hide\" checked>hide</label>\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"show\">show</label>",
  "line": 96,
  "start": 91,
  "end": 102
 },
 {
  "id": 43,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"auto\">auto</label>\n\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>\n\t</fieldset>\n\t<fieldset>\n\t\tImplicit multiplication:\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"hide\" checked>hide</label>\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"show\">show</label>\n\t</fieldset>\n</form>\n<table>\n\t<tr>",
  "line": 100,
  "start": 95,
  "end": 106
 },
 {
  "id": 44,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "\t\t<label><input type=\"radio\" name=\"parenthesis\" value=\"all\">all</label>\n\t</fieldset>\n\t<fieldset>\n\t\tImplicit multiplication:\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"hide\" checked>hide</label>\n\t\t<label><input type=\"radio\" name=\"implicit\" value=\"show\">show</label>\n\t</fieldset>\n</form>\n<table>\n\t<tr>\n\t\t<th>Expression</th>",
  "line": 101,
  "start": 96,
  "end": 107
 },
 {
  "id": 45,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<input",
  "match": "\t</fieldset>\n</form>\n<table>\n\t<tr>\n\t\t<th>Expression</th>\n\t\t<td><input type=\"text\" id=\"expr\"/></td>\n\t</tr>\n\t<tr>\n\t\t<th>Result</th>\n\t\t<td><div id=\"result\"></div></td>\n\t</tr>",
  "line": 107,
  "start": 102,
  "end": 113
 },
 {
  "id": 46,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>math.js | printing HTML</title>\n\n\t<script src=\"../../dist/math.js\"></script>\n\n\t<style>\n\t\tbody {\n\t\t\tfont-size: 11pt;\n\t\t\tfont-family: verdana, arial, sans-serif;",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 47,
  "file": "/src/examples/browser/printing_html.html",
  "filetype": "html",
  "search": "<script",
  "match": "\t<tr>\n\t\t<th>HTML code</th>\n\t\t<td><div id=\"code\">$$$$</div></td>\n\t</tr>\n</table>\n<script>\n  var expr = document.getElementById('expr');\n  var output = document.getElementById('output');\n  var code = document.getElementById('code');\n  var result = document.getElementById('result');\n  var options = {parenthesis: 'keep', implicit: 'hide'};",
  "line": 122,
  "start": 117,
  "end": 128
 },
 {
  "id": 48,
  "file": "/src/examples/browser/requirejs_loading.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | require.js loading</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.20/require.min.js\"></script>\n</head>\n<body>\n\n<script>\n  // load math.js using require.js",
  "line": 5,
  "start": 1,
  "end": 11
 },
 {
  "id": 49,
  "file": "/src/examples/browser/requirejs_loading.html",
  "filetype": "html",
  "search": "<script",
  "match": "  <title>math.js | require.js loading</title>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.20/require.min.js\"></script>\n</head>\n<body>\n\n<script>\n  // load math.js using require.js\n  require(['../../dist/math.js'], function (math) {\n    // evaluate some expression\n    var result = math.eval('1.2 * (2 + 4.5)');\n    document.write(result);",
  "line": 9,
  "start": 4,
  "end": 15
 },
 {
  "id": 50,
  "file": "/src/examples/browser/rocket_trajectory_optimization.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>math.js | rocket trajectory optimization</title>\n\n  <script src=\"../../dist/math.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\n\n  <style>\n    body {\n      font-family: sans-serif;",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 51,
  "file": "/src/examples/browser/rocket_trajectory_optimization.html",
  "filetype": "html",
  "search": "<script",
  "match": "<html>\n<head>\n  <title>math.js | rocket trajectory optimization</title>\n\n  <script src=\"../../dist/math.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\n\n  <style>\n    body {\n      font-family: sans-serif;\n    }",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 52,
  "file": "/src/examples/browser/rocket_trajectory_optimization.html",
  "filetype": "html",
  "search": "<script",
  "match": "  </p>\n\n  <canvas id=canvas1 width=1600 height=400></canvas>\n  <canvas id=canvas2 width=800 height=400></canvas>\n\n  <script>\n\n    function ndsolve(f, x0, dt, tmax) {\n      var n = f.size()[0];  // Number of variables\n      var x = x0.clone();   // Current values of variables\n      var dxdt = [];        // Temporary variable to hold time-derivatives",
  "line": 24,
  "start": 19,
  "end": 30
 },
 {
  "id": 53,
  "file": "/src/examples/browser/webworkers/webworkers.html",
  "filetype": "html",
  "search": "<script",
  "match": "  preventing the user interface from freezing during heavy calculations.\n</p>\n\n<p id=\"results\"></p>\n\n<script>\n  /**\n   * MathWorker evaluates expressions asynchronously in a web worker.\n   *\n   * Example usage:\n   *",
  "line": 16,
  "start": 11,
  "end": 22
 },
 {
  "id": 54,
  "file": "/src/test/expression/security.test.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  })\n\n  it ('should not allow calling Object via a __defineGetter__', function () {\n    assert.throws(function () {\n      math.eval('expression.node.AssignmentNode.prototype.__defineGetter__(\"_compile\", ' +\n          '{}.valueOf.bind(\"\".toString.bind(\"console.log(\\'hacked...\\')\"))); eval(\"a = 2\")')\n    }, /Error: Undefined symbol expression/);\n  })\n\n  it ('should not allow calling eval via a custom compiled SymbolNode', function () {\n    assert.throws(function () {",
  "line": 148,
  "start": 143,
  "end": 154
 },
 {
  "id": 55,
  "file": "/src/test/expression/security.test.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    }, /TypeError: Unexpected type of argument in function subset \\(expected: Index, actual: Object, index: 1\\)/);\n  })\n\n  it ('should not allow using restricted properties via subset (2)', function () {\n    assert.throws(function () {\n      math.eval(\"scope={}; setter = eval(\\\"f(obj, name, newValue, assign) = (obj[name] = newValue)\\\", scope); o = parse(\\\"1\\\"); setter(o, \\\"value\\\", \\\"eval\\\", subset); scope.obj.compile().eval()(\\\"console.log('hacked...')\\\")\")\n    }, /Error: Undefined symbol name/);\n  })\n\n  it ('should not allow using restricted properties via subset (3)', function () {\n    assert.throws(function () {",
  "line": 202,
  "start": 197,
  "end": 208
 },
 {
  "id": 56,
  "file": "/src/test/expression/security.test.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    }, /Error: No access to property \"value/);\n  })\n\n  it ('should not allow inserting fake nodes with bad code via node.map or node.transform', function () {\n    assert.throws(function () {\n      math.eval(\"badValue = {\\\"isNode\\\": true, \\\"_compile\\\": eval(\\\"f(a, b) = \\\\\\\"eval\\\\\\\"\\\")}; x = eval(\\\"f(child, path, parent) = path ==\\\\\\\"value\\\\\\\" ? newChild : child\\\", {\\\"newChild\\\": badValue}); parse(\\\"x = 1\\\").map(x).compile().eval()(\\\"console.log(\\'hacked\\')\\\")\")\n    }, /TypeError: Callback function must return a Node/);\n\n    assert.throws(function () {\n      math.eval(\"badValue = {\\\"isNode\\\": true, \\\"type\\\": \\\"ConstantNode\\\", \\\"valueType\\\": \\\"string\\\", \\\"_compile\\\": eval(\\\"f(a, b) = \\\\\\\"eval\\\\\\\"\\\")}; x = eval(\\\"f(child, path, parent) = path ==\\\\\\\"value\\\\\\\" ? newChild : child\\\", {\\\"newChild\\\": badValue}); parse(\\\"x = 1\\\").map(x).compile().eval()(\\\"console.log(\\'hacked...\\')\\\")\")\n    }); // The error message is vague but well...",
  "line": 214,
  "start": 209,
  "end": 220
 },
 {
  "id": 57,
  "file": "/src/test/expression/security.test.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    assert.throws(function () {\n      math.eval(\"badValue = {\\\"isNode\\\": true, \\\"_compile\\\": eval(\\\"f(a, b) = \\\\\\\"eval\\\\\\\"\\\")}; x = eval(\\\"f(child, path, parent) = path ==\\\\\\\"value\\\\\\\" ? newChild : child\\\", {\\\"newChild\\\": badValue}); parse(\\\"x = 1\\\").map(x).compile().eval()(\\\"console.log(\\'hacked\\')\\\")\")\n    }, /TypeError: Callback function must return a Node/);\n\n    assert.throws(function () {\n      math.eval(\"badValue = {\\\"isNode\\\": true, \\\"type\\\": \\\"ConstantNode\\\", \\\"valueType\\\": \\\"string\\\", \\\"_compile\\\": eval(\\\"f(a, b) = \\\\\\\"eval\\\\\\\"\\\")}; x = eval(\\\"f(child, path, parent) = path ==\\\\\\\"value\\\\\\\" ? newChild : child\\\", {\\\"newChild\\\": badValue}); parse(\\\"x = 1\\\").map(x).compile().eval()(\\\"console.log(\\'hacked...\\')\\\")\")\n    }); // The error message is vague but well...\n  })\n\n  it ('should not allow replacing validateSafeMethod with a local variant', function () {\n    assert.throws(function () {",
  "line": 218,
  "start": 213,
  "end": 224
 },
 {
  "id": 58,
  "file": "/src/test/expression/security.test.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    }, /Error: No access to method \"constructor\"/);\n  })\n\n  it ('should not allow abusing toString', function () {\n    assert.throws(function () {\n      math.eval(\"badToString = eval(\\\"f() = 1\\\"); badReplace = eval(\\\"f(a, b) = \\\\\\\"eval\\\\\\\"\\\"); badNumber = {toString:badToString, replace:badReplace}; badNode = {\\\"isNode\\\": true, \\\"type\\\": \\\"ConstantNode\\\", \\\"valueType\\\": \\\"number\\\", \\\"value\\\": badNumber}; x = eval(\\\"f(child, path, parent) = badNode\\\", {badNode:badNode}); parse(\\\"(1)\\\").map(x).compile().eval()(\\\"console.log('hacked...')\\\")\")\n    }, /Error: No access to property \"toString\"/);\n  })\n\n  it ('should not allow creating a bad FunctionAssignmentNode', function () {\n    assert.throws(function () {",
  "line": 230,
  "start": 225,
  "end": 236
 },
 {
  "id": 59,
  "file": "/src/test/pi_bailey-borwein-plouffe.html",
  "filetype": "html",
  "search": "<script",
  "match": "<html>\n<head>\n  <title>Pi Bailey-Borwein-Plouffe</title>\n  <script src=\"../node_modules/decimal.js/decimal.js\"></script>\n</head>\n<body>\n<script>\n  Decimal.config({precision: 100});\n",
  "line": 4,
  "start": 1,
  "end": 10
 },
 {
  "id": 60,
  "file": "/src/test/pi_bailey-borwein-plouffe.html",
  "filetype": "html",
  "search": "<script",
  "match": "<head>\n  <title>Pi Bailey-Borwein-Plouffe</title>\n  <script src=\"../node_modules/decimal.js/decimal.js\"></script>\n</head>\n<body>\n<script>\n  Decimal.config({precision: 100});\n\n  function pi() {\n    // the Bailey-Borwein-Plouffe formula\n    // http://stackoverflow.com/questions/4484489/using-basic-arithmetics-for-calculating-pi-with-arbitary-precision",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 61,
  "file": "/src/test/pi_machin.html",
  "filetype": "html",
  "search": "<script",
  "match": "<html>\n<head>\n  <title>Pi Machin</title>\n  <script src=\"../node_modules/decimal.js/decimal.js\"></script>\n</head>\n<body>\n<script language=\"javascript\">\n  Decimal.config({precision: 100});\n",
  "line": 4,
  "start": 1,
  "end": 10
 },
 {
  "id": 62,
  "file": "/src/test/pi_machin.html",
  "filetype": "html",
  "search": "<script",
  "match": "<head>\n  <title>Pi Machin</title>\n  <script src=\"../node_modules/decimal.js/decimal.js\"></script>\n</head>\n<body>\n<script language=\"javascript\">\n  Decimal.config({precision: 100});\n\n  // arctan(x) = x - x^3/3 + x^5/5 - x^7/7 + x^9/9 - ...\n  //           = x - x^2*x^1/3 + x^2*x^3/5 - x^2*x^5/7 + x^2*x^7/9 - ...\n  function arctan(x) {",
  "line": 7,
  "start": 2,
  "end": 13
 },
 {
  "id": 63,
  "file": "/src/test/test_bignumber.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>mathjs test</title>\n\n  <script src=\"../dist/math.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<p>\n  Use the mathjs library from the console...\n</p>",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 64,
  "file": "/src/test/test_bignumber.html",
  "filetype": "html",
  "search": "<script",
  "match": "</head>\n<body>\n<p>\n  Use the mathjs library from the console...\n</p>\n<script>\n  // create an instance of math.js\n  math.config({\n    number: 'BigNumber'\n  });\n",
  "line": 12,
  "start": 7,
  "end": 18
 },
 {
  "id": 65,
  "file": "/src/test/test.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>mathjs test</title>\n\n  <script>\n    console.time('load')\n  </script>\n  <script src=\"../dist/math.js\" type=\"text/javascript\"></script>\n  <script>\n    console.timeEnd('load')",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 66,
  "file": "/src/test/test.html",
  "filetype": "html",
  "search": "<script",
  "match": "  <title>mathjs test</title>\n\n  <script>\n    console.time('load')\n  </script>\n  <script src=\"../dist/math.js\" type=\"text/javascript\"></script>\n  <script>\n    console.timeEnd('load')\n  </script>\n</head>\n<body>",
  "line": 9,
  "start": 4,
  "end": 15
 },
 {
  "id": 67,
  "file": "/src/test/test.html",
  "filetype": "html",
  "search": "<script",
  "match": "\n  <script>\n    console.time('load')\n  </script>\n  <script src=\"../dist/math.js\" type=\"text/javascript\"></script>\n  <script>\n    console.timeEnd('load')\n  </script>\n</head>\n<body>\n<p>",
  "line": 10,
  "start": 5,
  "end": 16
 },
 {
  "id": 68,
  "file": "/src/test/test.html",
  "filetype": "html",
  "search": "<script",
  "match": "</head>\n<body>\n<p>\n  Use the mathjs library from the console...\n</p>\n<script>\n  function print (args) {\n    for (var i = 0; i < arguments.length; i++) {\n      document.write(arguments[i] + '');\n    }\n    document.write('<br>');",
  "line": 18,
  "start": 13,
  "end": 24
 },
 {
  "id": 69,
  "file": "/src/test/test.min.html",
  "filetype": "html",
  "search": "<script",
  "match": "<!DOCTYPE html>\n<html>\n<head>\n  <title>mathjs test</title>\n\n  <script src=\"../dist/math.min.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<p>\n  Use the mathjs library from the console...\n</p>",
  "line": 6,
  "start": 1,
  "end": 12
 },
 {
  "id": 70,
  "file": "/src/test/test.min.html",
  "filetype": "html",
  "search": "<script",
  "match": "</head>\n<body>\n<p>\n  Use the mathjs library from the console...\n</p>\n<script>\n  function print (args) {\n    for (var i = 0; i < arguments.length; i++) {\n      document.write(arguments[i] + '');\n    }\n    document.write('<br>');",
  "line": 12,
  "start": 7,
  "end": 18
 }
]
