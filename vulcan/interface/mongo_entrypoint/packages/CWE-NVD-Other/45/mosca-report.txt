<report_mosca>
 <Path>/src/lib/schema.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 169 -          query: Joi.alternatives(Joi.object(), Joi.func()).allow(null, false, true),

 Line: 186 -      query: Joi.object({

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 357 -          this.raw.req.socket.setTimeout(this.route.settings.timeout.socket || 0);     // Value can be false or positive

 Line: 373 -          this._serverTimeoutId = setTimeout(timeoutReply, serverTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 210 -      this.path = this.url.pathname || '';                                                            // pathname excludes query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/route.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 232 -                      security._xframe = 'ALLOW-FROM ' + security.xframe.source;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/defaults.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 96 -          'DELETE',

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/auth.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 288 -                  var context = { params: request.params, query: request.query };

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 114 -              query: request.query,

 Line: 200 -              query: request.query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/connection.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 199 -      var timeoutId = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/payload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 135 -              setTimeout(function () {

 Line: 624 -              setTimeout(function () {

 Line: 663 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/reply.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 495 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 267 -                          setTimeout(check, 10);

 Line: 304 -                  setTimeout(function () {

 Line: 307 -                      setTimeout(function () {

 Line: 344 -                  setTimeout(function () {

 Line: 347 -                      setTimeout(function () {

 Line: 376 -                  setTimeout(function () {

 Line: 512 -                  setTimeout(function () {

 Line: 548 -                  setTimeout(function () {

 Line: 698 -                  setTimeout(t2, 10);

 Line: 1373 -                  setTimeout(function () {

 Line: 1402 -                  setTimeout(function () {

 Line: 1419 -                  setTimeout(reply, 20);

 Line: 1441 -                  setTimeout(function () {

 Line: 1470 -                  setTimeout(function () {

 Line: 1515 -                      setTimeout(function () {

 Line: 1520 -                      setTimeout(function () {

 Line: 1602 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 803 -          it('parses nested query string', function (done) {

 Line: 821 -          it('sets url, path, and query', function (done) {

 Line: 916 -          it('strips trailing slash with query', function (done) {

 Line: 933 -          it('accepts querystring parser options', function (done) {

 Line: 962 -                  query: {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/methods.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 827 -              setTimeout(function () {

 Line: 844 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/response.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 70 -              expect(res.headers['access-control-allow-methods']).to.equal('GET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/plugin.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2259 -                              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 39 -                      query: {

 Line: 53 -      it('validates both params and query', function (done) {

 Line: 66 -                      query: {

 Line: 97 -                      query: {

 Line: 152 -                      query: {

 Line: 199 -                      query: {

 Line: 226 -                      query: {

 Line: 253 -                      query: null

 Line: 278 -                      query: function (value, options, next) {

 Line: 280 -                          return next(value.a === '123' ? null : new Error('Bad query'));

 Line: 293 -                  expect(res2.result.message).to.equal('Bad query');

 Line: 312 -                      query: function (value, options, next) {

 Line: 314 -                          throw new Error('Bad query');

 Line: 396 -                      query: false

 Line: 421 -                      query: false

 Line: 452 -                      query: Joi.object({

 Line: 479 -                      query: {

 Line: 511 -                      query: {

 Line: 542 -                      query: {

 Line: 571 -                      query: {

 Line: 585 -              expect(res.result).to.equal('Got error in query where a is bad');

 Line: 603 -                      query: {

 Line: 634 -                      query: {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/transmit.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1532 -                          setTimeout(function () {

 Line: 1650 -                      setTimeout(function () {

 Line: 1707 -                          setTimeout(function () {

 Line: 1720 -                  setTimeout(function () {

 Line: 3295 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/transmit.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 2228 -                  expect(res.headers['access-control-allow-methods']).to.equal('GET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS');

 Line: 2308 -                  expect(res.headers['access-control-allow-methods']).to.equal('something,GET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS,xyz');

 Line: 3107 -                  expect(res.headers['x-frame-options']).to.equal('ALLOW-FROM http://example.com');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/connection.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 285 -                      setTimeout(function () {

 Line: 321 -              var orig = Net.Socket.prototype.setTimeout;

 Line: 322 -              Net.Socket.prototype.setTimeout = function () {

 Line: 325 -                  Net.Socket.prototype.setTimeout = orig;

 Line: 559 -                              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/connection.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1654 -              var config = { method: ['GET', 'PUT', 'POST', 'DELETE'], path: '/', handler: handler };

 Line: 1675 -                              server.inject({ method: 'DELETE', url: '/' }, function (res5) {

 Line: 1679 -                                  expect(config.method).to.deep.equal(['GET', 'PUT', 'POST', 'DELETE']);

 Line: 1719 -                      method: 'DELETE',

 Line: 1755 -                      method: ['GET', 'PUT', 'POST', 'DELETE'],

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/security.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 177 -      it('prevents xss in query validation response message', function (done) {

 Line: 187 -                  validate: { query: { name: Joi.string() } }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/protect.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 163 -              setTimeout(function () {

</Result>
</report_mosca>

