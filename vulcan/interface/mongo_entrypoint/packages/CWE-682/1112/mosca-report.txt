<report_mosca>
 <Path>/src/msrcrypto.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 8950 -              var id = setTimeout(func, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/msrcrypto.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 56 -  {t.terminate();n.splice(i,1);return}}function u(t){for(var i=0;i<n.length;i++)if(n[i].operation===t)return n[i];return null}function f(n,i){t.push({operation:n,data:i,id:y++})}function e(n){if(n.busy=!1,n.operation=null,it)if(t.length>0){var i=t.shift();l(i.operation,i.data)}else b()>v&&r(n)}function d(n){var r;if(it)try{r=new Worker(yt);r.postMessage({prngSeed:s.getBytes(48)});r.isWebWorker=!0}catch(u){it=!1;o.forceSync=!0;r=c();r.isWebWorker=!1}else r=c(),r.isWebWorker=!1;return r.operation=n,r.busy=!1,r.onmessage=function(n){for(var o,f=r.operation,u=0;u<t.length;u++)if(t[u].operation===r.operation){o=t[u];t.splice(u,1);i(r,o.data);return}f&&n.data.type!=="process"&&(e(r),f.dispatchEvent(n))},r.onerror=function(n){var t=r.operation;e(r);t.dispatchEvent(n)},k(r),r}function g(n){var t=u(n);t&&r(t)}function h(t,r){var u=null;if(it=bt&&!o.forceSync,u=p(),it&&u===null&&n.length>=a){f(t,r);return}if(u===null&&(u=d(t)),u===null){f(t,r);throw new Error("could not create new worker");}u.operation=t;u.busy=!0;i(u,r)}function l(n,t){var r=u(n);if(r){i(r,t);return}h(n,t)}function i(n,t){if(it)n.data=t,n.postMessage(t);else var i=function(t){return function(){return n.postMessage(t)}}(t),r=setTimeout(i,0);return}var a=12,v=2,n=[],t=[],y=0;return{runJob:h,continueJob:l,abortJob:g}}(),u=i,l=[{name:"algorithm",type:"Object",required:!0},{name:"keyHandle",type:"Object",required:!0},{name:"buffer",type:"Array",required:!1},{name:"signature",type:"Array",required:!0},{name:"format",type:"String",required:!0},{name:"keyData",type:"Object",required:!0},{name:"extractable",type:"Boolean",required:!1},{name:"keyUsage",type:"Array",required:!1},{name:"derivedKeyType",type:"Object",required:!0},{name:"length",type:"Number",required:!1},{name:"extractable",type:"Boolean",required:!0},{name:"keyUsage",type:"Array",required:!0}],a={encrypt:[0,1,2],decrypt:[0,1,2],sign:[0,1,2],verify:[0,1,3,2],digest:[0,2],generateKey:[0,6,7],importKey:[4,5,0,10,11],exportKey:[0,4,1,6,7],deriveKey:[0,1,8,6,7],deriveBits:[0,1,9],wrapKey:[1,1,0],unwrapKey:[2,0,1,6,7]},o={encrypt:function(){return r("encrypt",arguments,0)</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/msrcrypto.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 8955 -              var id = setTimeout(func, 0);

</Result>
</report_mosca>

