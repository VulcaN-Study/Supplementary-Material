/src/node_modules/node-gyp/gyp/pylib/gyp/generator/gypd.py-25-general-purpose gyp pretty-printer; for that, you probably just want to
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/gypd.py:26:run "pprint.pprint(eval(open('source.gyp').read()))", which will still strip
/src/node_modules/node-gyp/gyp/pylib/gyp/generator/gypd.py-27-comments but won't do all of the other things done to this module's output.
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-181-
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:182:  Note that this is slower than eval() is.
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-183-  """
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-241-    else:
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:242:      build_file_data = eval(build_file_contents, {'__builtins__': None},
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-243-                             None)
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-852-      if match['is_array']:
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:853:        contents = eval(contents)
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-854-        use_shell = False
##############################################
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-1088-      cached_conditions_asts[cond_expr_expanded] = ast_code
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py:1089:    if eval(ast_code, {'__builtins__': None}, variables):
/src/node_modules/node-gyp/gyp/pylib/gyp/input.py-1090-      return true_dict
##############################################
/src/node_modules/hosted-git-info/test/https-with-inline-auth.js-21-
/src/node_modules/hosted-git-info/test/https-with-inline-auth.js:22:  // insecure protocols
/src/node_modules/hosted-git-info/test/https-with-inline-auth.js-23-  verify('git://user:pass@github.com/111/222', 'git')
##############################################
/src/node_modules/hosted-git-info/test/github.js-25-
/src/node_modules/hosted-git-info/test/github.js:26:  // insecure protocols
/src/node_modules/hosted-git-info/test/github.js-27-  verify('git://github.com/111/222', 'git')
##############################################
/src/node_modules/hosted-git-info/git-host-info.js-4-  github: {
/src/node_modules/hosted-git-info/git-host-info.js:5:    // First two are insecure and generally shouldn't be used any more, but
/src/node_modules/hosted-git-info/git-host-info.js-6-    // they are still supported.
##############################################
/src/node_modules/request/request.js-267-
/src/node_modules/request/request.js:268:  if (self.strictSSL === false) {
/src/node_modules/request/request.js:269:    self.rejectUnauthorized = false
/src/node_modules/request/request.js-270-  }
##############################################
/src/node_modules/request/request.js-617-  }
/src/node_modules/request/request.js:618:  if (typeof self.rejectUnauthorized !== 'undefined') {
/src/node_modules/request/request.js:619:    options.rejectUnauthorized = self.rejectUnauthorized
/src/node_modules/request/request.js-620-  }
##############################################
/src/node_modules/request/request.js-656-
/src/node_modules/request/request.js:657:    if (typeof options.rejectUnauthorized !== 'undefined') {
/src/node_modules/request/request.js-658-      if (poolKey) {
##############################################
/src/node_modules/request/request.js-660-      }
/src/node_modules/request/request.js:661:      poolKey += options.rejectUnauthorized
/src/node_modules/request/request.js-662-    }
##############################################
/src/node_modules/request/request.js-852-  if (self.httpModule === https &&
/src/node_modules/request/request.js:853:      self.strictSSL && (!response.hasOwnProperty('socket') ||
/src/node_modules/request/request.js-854-      !response.socket.authorized)) {
##############################################
/src/node_modules/request/node_modules/node-uuid/uuid.js-47-      if ('undefined' !== typeof console && console.warn) {
/src/node_modules/request/node_modules/node-uuid/uuid.js:48:        console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()");
/src/node_modules/request/node_modules/node-uuid/uuid.js-49-      }
##############################################
/src/node_modules/request/README.md-797-- `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)
/src/node_modules/request/README.md:798:- `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.
/src/node_modules/request/README.md-799-- `tunnel` - controls the behavior of
##############################################
/src/node_modules/request/lib/tunnel.js-83-    ciphers            : request.ciphers,
/src/node_modules/request/lib/tunnel.js:84:    rejectUnauthorized : request.rejectUnauthorized,
/src/node_modules/request/lib/tunnel.js-85-    secureOptions      : request.secureOptions,
##############################################
/src/node_modules/request/CHANGELOG.md-150-- [#1468](https://github.com/request/request/pull/1468) Re-enable io.js/node 0.12 build (@simov, @mikeal, @BBB)
/src/node_modules/request/CHANGELOG.md:151:- [#1442](https://github.com/request/request/pull/1442) Fixed the issue with strictSSL tests on  0.12 & io.js by explicitly setting a cipher that matches the cert. (@BBB, @nicolasmccurdy, @demohi, @simov, @0x4139)
/src/node_modules/request/CHANGELOG.md-152-- [#1460](https://github.com/request/request/pull/1460) localAddress or proxy config is lost when redirecting (@simov, @0x4139)
##############################################
/src/node_modules/request/CHANGELOG.md-478-- [#502](https://github.com/request/request/pull/502) Fix POST (and probably other) requests that are retried after 401 Unauthorized (@nylen)
/src/node_modules/request/CHANGELOG.md:479:- [#508](https://github.com/request/request/pull/508) Honor the .strictSSL option when using proxies (tunnel-agent) (@jhs)
/src/node_modules/request/CHANGELOG.md-480-- [#512](https://github.com/request/request/pull/512) Make password optional to support the format: http://username@hostname/ (@pajato1)
##############################################
/src/node_modules/request/CHANGELOG.md-582-- [#81](https://github.com/request/request/pull/81) Enhance redirect handling (@danmactough)
/src/node_modules/request/CHANGELOG.md:583:- [#78](https://github.com/request/request/pull/78) Don't try to do strictSSL for non-ssl connections (@isaacs)
/src/node_modules/request/CHANGELOG.md-584-- [#76](https://github.com/request/request/pull/76) Bug when a request fails and a timeout is set (@Marsup)
/src/node_modules/request/CHANGELOG.md-585-- [#70](https://github.com/request/request/pull/70) add test script to package.json (@isaacs, @aheckmann)
/src/node_modules/request/CHANGELOG.md:586:- [#73](https://github.com/request/request/pull/73) Fix #71 Respect the strictSSL flag (@isaacs)
/src/node_modules/request/CHANGELOG.md-587-- [#69](https://github.com/request/request/pull/69) Flatten chunked requests properly (@isaacs)
##############################################
/src/node_modules/npm-registry-client/lib/initialize.js-19-    localAddress: this.config.proxy.localAddress,
/src/node_modules/npm-registry-client/lib/initialize.js:20:    strictSSL: this.config.ssl.strict,
/src/node_modules/npm-registry-client/lib/initialize.js-21-    cert: this.config.ssl.certificate,
##############################################
/src/node_modules/npm-registry-client/lib/initialize.js-61-        localAddress: this.config.proxy.localAddress,
/src/node_modules/npm-registry-client/lib/initialize.js:62:        rejectUnauthorized: this.config.ssl.strict,
/src/node_modules/npm-registry-client/lib/initialize.js-63-        ca: this.config.ssl.ca,
##############################################
/src/node_modules/npm-registry-client/test/initialize.js-19-  t.equal(options.localAddress, undefined, 'localAddress has no default value')
/src/node_modules/npm-registry-client/test/initialize.js:20:  t.equal(options.strictSSL, true, 'SSL is strict by default')
/src/node_modules/npm-registry-client/test/initialize.js-21-
##############################################
/src/node_modules/columnify/node_modules/wcwidth/node_modules/defaults/node_modules/clone/test-apart-ctx.html-10-        ctx = parent[data[0]];
/src/node_modules/columnify/node_modules/wcwidth/node_modules/defaults/node_modules/clone/test-apart-ctx.html:11:        eval(decodeURIComponent(data[1]));
/src/node_modules/columnify/node_modules/wcwidth/node_modules/defaults/node_modules/clone/test-apart-ctx.html-12-        window.results = results;
