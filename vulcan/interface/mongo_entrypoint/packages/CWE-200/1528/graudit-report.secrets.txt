/src/src/ApolloServer.ts-79-} from 'apollo-cache-control';
/src/src/ApolloServer.ts:80:import { getEngineApiKey, getEngineGraphVariant } from "apollo-engine-reporting/dist/agent";
/src/src/ApolloServer.ts-81-import { cloneObject } from "./runHttpQuery";
##############################################
/src/src/ApolloServer.ts-96-function getEngineServiceId(engine: Config['engine'], logger: Logger): string | undefined {
/src/src/ApolloServer.ts:97:  const engineApiKey = getEngineApiKey({engine, skipWarn: true, logger} );
/src/src/ApolloServer.ts:98:  if (engineApiKey) {
/src/src/ApolloServer.ts:99:    return engineApiKey.split(':', 2)[1];
/src/src/ApolloServer.ts-100-  }
##############################################
/src/src/ApolloServer.ts-130-  private engineServiceId?: string;
/src/src/ApolloServer.ts:131:  private engineApiKeyHash?: string;
/src/src/ApolloServer.ts-132-  protected plugins: ApolloServerPlugin[] = [];
##############################################
/src/src/ApolloServer.ts-299-    this.engineServiceId = getEngineServiceId(engine, this.logger);
/src/src/ApolloServer.ts:300:    const apiKey = getEngineApiKey({engine, skipWarn: true, logger: this.logger});
/src/src/ApolloServer.ts:301:    if (apiKey) {
/src/src/ApolloServer.ts:302:      this.engineApiKeyHash = createSHA('sha512')
/src/src/ApolloServer.ts:303:        .update(apiKey)
/src/src/ApolloServer.ts-304-        .digest('hex');
##############################################
/src/src/ApolloServer.ts-406-      const engineConfig =
/src/src/ApolloServer.ts:407:        this.engineApiKeyHash && this.engineServiceId
/src/src/ApolloServer.ts-408-          ? {
/src/src/ApolloServer.ts:409:              apiKeyHash: this.engineApiKeyHash,
/src/src/ApolloServer.ts-410-              graphId: this.engineServiceId,
##############################################
/src/src/ApolloServer.ts-558-        serviceID: this.engineServiceId,
/src/src/ApolloServer.ts:559:        apiKeyHash: this.engineApiKeyHash,
/src/src/ApolloServer.ts-560-      },
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-41-            graphVariant: 'foo',
/src/src/__tests__/ApolloServerBase.test.ts:42:            apiKey: 'not:real:key',
/src/src/__tests__/ApolloServerBase.test.ts-43-          },
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-56-            schemaTag: 'foo',
/src/src/__tests__/ApolloServerBase.test.ts:57:            apiKey: 'not:real:key',
/src/src/__tests__/ApolloServerBase.test.ts-58-          },
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-72-            graphVariant: 'heck',
/src/src/__tests__/ApolloServerBase.test.ts:73:            apiKey: 'not:real:key',
/src/src/__tests__/ApolloServerBase.test.ts-74-          },
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-103-    process.env = { ...OLD_ENV };
/src/src/__tests__/ApolloServerBase.test.ts:104:    delete process.env.ENGINE_API_KEY;
/src/src/__tests__/ApolloServerBase.test.ts-105-    delete process.env.APOLLO_KEY;
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-111-
/src/src/__tests__/ApolloServerBase.test.ts:112:  it('constructs a reporting agent with the ENGINE_API_KEY (deprecated) environment variable and warns', async () => {
/src/src/__tests__/ApolloServerBase.test.ts-113-    // set the variables
/src/src/__tests__/ApolloServerBase.test.ts:114:    process.env.ENGINE_API_KEY = 'just:fake:stuff';
/src/src/__tests__/ApolloServerBase.test.ts-115-    const spyConsoleWarn = jest.spyOn(console, 'warn').mockImplementation();
##############################################
/src/src/__tests__/ApolloServerBase.test.ts-128-    // set the variables
/src/src/__tests__/ApolloServerBase.test.ts:129:    process.env.ENGINE_API_KEY = 'just:fake:stuff';
/src/src/__tests__/ApolloServerBase.test.ts-130-    process.env.APOLLO_KEY = 'also:fake:stuff';
##############################################
/src/src/types.ts-85-export type GraphQLServiceEngineConfig = {
/src/src/types.ts:86:  apiKeyHash: string;
/src/src/types.ts-87-  graphId: string;
##############################################
/src/dist/ApolloServer.d.ts-17-    private engineServiceId?;
/src/dist/ApolloServer.d.ts:18:    private engineApiKeyHash?;
/src/dist/ApolloServer.d.ts-19-    protected plugins: ApolloServerPlugin[];
##############################################
/src/dist/ApolloServer.js-53-function getEngineServiceId(engine, logger) {
/src/dist/ApolloServer.js:54:    const engineApiKey = agent_1.getEngineApiKey({ engine, skipWarn: true, logger });
/src/dist/ApolloServer.js:55:    if (engineApiKey) {
/src/dist/ApolloServer.js:56:        return engineApiKey.split(':', 2)[1];
/src/dist/ApolloServer.js-57-    }
##############################################
/src/dist/ApolloServer.js-145-        this.engineServiceId = getEngineServiceId(engine, this.logger);
/src/dist/ApolloServer.js:146:        const apiKey = agent_1.getEngineApiKey({ engine, skipWarn: true, logger: this.logger });
/src/dist/ApolloServer.js:147:        if (apiKey) {
/src/dist/ApolloServer.js:148:            this.engineApiKeyHash = createSHA_1.default('sha512')
/src/dist/ApolloServer.js:149:                .update(apiKey)
/src/dist/ApolloServer.js-150-                .digest('hex');
##############################################
/src/dist/ApolloServer.js-207-            const graphVariant = agent_1.getEngineGraphVariant(engine, this.logger);
/src/dist/ApolloServer.js:208:            const engineConfig = this.engineApiKeyHash && this.engineServiceId
/src/dist/ApolloServer.js:209:                ? Object.assign({ apiKeyHash: this.engineApiKeyHash, graphId: this.engineServiceId }, (graphVariant && { graphVariant })) : undefined;
/src/dist/ApolloServer.js-210-            this.requestOptions.executor = gateway.executor;
##############################################
/src/dist/ApolloServer.js-309-                    serviceID: this.engineServiceId,
/src/dist/ApolloServer.js:310:                    apiKeyHash: this.engineApiKeyHash,
/src/dist/ApolloServer.js-311-                },
##############################################
/src/dist/types.d.ts-33-export declare type GraphQLServiceEngineConfig = {
/src/dist/types.d.ts:34:    apiKeyHash: string;
/src/dist/types.d.ts-35-    graphId: string;
