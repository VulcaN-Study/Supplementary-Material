{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 3,
          "line": 6
        },
        "extra": {
          "line": "\t@./node_modules/.bin/expresso \\",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/Makefile",
        "start": {
          "col": 2,
          "line": 6
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 38,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) 2010, Peter Griess <pg@std.in>",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/support/node-websocket-client/LICENSE",
        "start": {
          "col": 37,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This makefile exists to help run tests.",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/support/node-websocket-client/Makefile",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            698,
            698
          ],
          "match_position": [
            19,
            30
          ],
          "match_string": "  return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()"
        },
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            698,
            698
          ],
          "match_position": [
            35,
            46
          ],
          "match_string": "  return Math.abs(Math.random() * Math.random() * Date.now() | 0).toString()"
        },
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            699,
            699
          ],
          "match_position": [
            16,
            27
          ],
          "match_string": "    + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();"
        },
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            699,
            699
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "    + Math.abs(Math.random() * Math.random() * Date.now() | 0).toString();"
        },
        {
          "file_path": "/src/lib/stores/redis.js",
          "match_lines": [
            43,
            43
          ],
          "match_position": [
            21,
            32
          ],
          "match_string": "    return Math.abs(Math.random() * Math.random() * Date.now() | 0);"
        },
        {
          "file_path": "/src/lib/stores/redis.js",
          "match_lines": [
            43,
            43
          ],
          "match_position": [
            37,
            48
          ],
          "match_string": "    return Math.abs(Math.random() * Math.random() * Date.now() | 0);"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            28,
            28
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "    var numSpaces = 1 + Math.floor(Math.random() * 12);"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            33,
            33
          ],
          "match_position": [
            9,
            20
          ],
          "match_string": "        Math.random() * (4294967295 / numSpaces)"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            41,
            41
          ],
          "match_position": [
            35,
            46
          ],
          "match_string": "    var numChars = 1 + Math.floor(Math.random() * 12);"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            45,
            45
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "        var pos = Math.floor(Math.random() * s.length + 1);"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            47,
            47
          ],
          "match_position": [
            28,
            39
          ],
          "match_string": "        var c = Math.floor(Math.random() * (14 + 68));"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            60,
            60
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "        var pos = Math.floor(Math.random() * (s.length - 1)) + 1;"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            74,
            74
          ],
          "match_position": [
            45,
            56
          ],
          "match_string": "        c += String.fromCharCode(Math.floor(Math.random() * 255));"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-basic.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "var PORT = 1024 + Math.floor(Math.random() * 4096);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-basic.js",
          "match_lines": [
            9,
            9
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var C_MSG = 'Client test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-basic.js",
          "match_lines": [
            10,
            10
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var S_MSG = 'Server test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-client-close.js",
          "match_lines": [
            7,
            7
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "var PORT = 1024 + Math.floor(Math.random() * 4096);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-client-close.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var C_MSG = 'Client test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-readonly-attrs.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "var PORT = 1024 + Math.floor(Math.random() * 4096);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-ready-state.js",
          "match_lines": [
            7,
            7
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "var PORT = 1024 + Math.floor(Math.random() * 4096);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-server-close.js",
          "match_lines": [
            7,
            7
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "var PORT = 1024 + Math.floor(Math.random() * 4096);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-server-close.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var S_MSG = 'Server test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-unix-send-fd.js",
          "match_lines": [
            12,
            12
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var C_MSG = 'Client test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-unix-send-fd.js",
          "match_lines": [
            13,
            13
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var S_MSG = 'Server test: ' + (Math.random() * 100);"
        },
        {
          "file_path": "/src/support/node-websocket-client/test/test-unix-sockets.js",
          "match_lines": [
            11,
            11
          ],
          "match_position": [
            32,
            43
          ],
          "match_string": "var S_MSG = 'Server test: ' + (Math.random() * 100);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_md5": {
      "files": [
        {
          "file_path": "/src/lib/transports/websocket/default.js",
          "match_lines": [
            231,
            231
          ],
          "match_position": [
            15,
            38
          ],
          "match_string": "    var md5 = crypto.createHash('md5');"
        },
        {
          "file_path": "/src/support/node-websocket-client/lib/websocket.js",
          "match_lines": [
            122,
            122
          ],
          "match_position": [
            16,
            39
          ],
          "match_string": "    var hash = crypto.createHash('md5');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_sha1": {
      "files": [
        {
          "file_path": "/src/lib/transports/websocket/hybi-07-12.js",
          "match_lines": [
            121,
            121
          ],
          "match_position": [
            16,
            40
          ],
          "match_string": "  var shasum = crypto.createHash('sha1');"
        },
        {
          "file_path": "/src/lib/transports/websocket/hybi-16.js",
          "match_lines": [
            120,
            120
          ],
          "match_position": [
            16,
            40
          ],
          "match_string": "  var shasum = crypto.createHash('sha1');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "SHA1 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            716,
            716
          ],
          "match_position": [
            29,
            65
          ],
          "match_string": "    if (data.query.jsonp && jsonpolling_re.test(data.query.jsonp)) {"
        },
        {
          "file_path": "/src/lib/manager.js",
          "match_lines": [
            755,
            755
          ],
          "match_position": [
            31,
            67
          ],
          "match_string": "      if (data.query.jsonp && jsonpolling_re.test(data.query.jsonp)) {"
        },
        {
          "file_path": "/src/lib/static.js",
          "match_lines": [
            365,
            365
          ],
          "match_position": [
            24,
            44
          ],
          "match_string": "          , versioned: versioning.test(path)"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
