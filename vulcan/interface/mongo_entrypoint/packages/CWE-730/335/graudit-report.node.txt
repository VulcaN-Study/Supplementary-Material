/src/lib/request.js-197-
/src/lib/request.js:198:    this.url = (typeof url === 'string' ? Url.parse(url, true) : url);
/src/lib/request.js-199-    this.query = this.url.query;
##############################################
/src/lib/response.js-251-    try {
/src/lib/response.js:252:        return Date.parse(string);
/src/lib/response.js-253-    }
##############################################
/src/lib/route.js-364-
/src/lib/route.js:365:    request.connection.states.parse(cookies, (err, state, failed) => {
/src/lib/route.js-366-
##############################################
/src/lib/route.js-421-
/src/lib/route.js:422:    Subtext.parse(request.raw.req, request._tap(), request.route.settings.payload, (err, parsed) => {
/src/lib/route.js-423-
##############################################
/src/lib/connection.js-88-
/src/lib/connection.js:89:    this.listener = this.settings.listener || (this.settings.tls ? Https.createServer(this.settings.tls) : Http.createServer());
/src/lib/connection.js-90-    this.listener.on('request', this._dispatch());
