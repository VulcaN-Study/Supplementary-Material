<report_mosca>
 <Path>/src/examples/cache.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 35 -          setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/helpers.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 14 -      setTimeout(function () {

 Line: 32 -              setTimeout(function () {

 Line: 38 -                      setTimeout(function () {

 Line: 44 -                              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/prerequisites.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 24 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/tails.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 13 -      setTimeout(function () {

 Line: 20 -      setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          { method: 'GET', path: '/', config: { handler: internals.get, validate: { query: { username: S() } } } },

 Line: 35 -          { method: 'GET', path: '/admin', config: { handler: internals.get, validate: { query: { username: S().required().with('password'), password: S() } } } },

 Line: 36 -          { method: 'GET', path: '/users', config: { handler: internals.get, validate: { query: { email: S().email().required().min(18) } } } },

 Line: 37 -          { method: 'GET', path: '/config', config: { handler: internals.get, validate: { query: { choices: A().required() } } } },

 Line: 38 -          { method: 'GET', path: '/test', config: { handler: internals.get, validate: { query: { num: N().min(0) } } } },

 Line: 39 -          { method: 'GET', path: '/test2', config: { handler: internals.get, validate: { query: { p1: S().required().rename('itemId') } } } },

 Line: 40 -          { method: 'GET', path: '/simple', config: { handler: internals.get, validate: { query: { input: S().min(3) } } } }

 Line: 49 -      server.route({ method: 'POST', path: '/users/{id}', config: { handler: internals.payload, validate: { query: {}, payload: schema } } });

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/examples/server.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -      { method: 'GET', path: '/products', config: { handler: getProducts, validate: { query: { name: Hapi.types.String() } } } },

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/schema.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 237 -          query: Joi.object().allow(null, false, true),

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 115 -          req.socket.setTimeout(server.settings.timeout.socket || 0);

 Line: 295 -              self._serverTimeoutId = setTimeout(timeoutReply, serverTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 161 -      this.path = this.url.pathname;                      // pathname excludes query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/defaults.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 126 -          'DELETE',

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/views.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 346 -              query: request.query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 12 -  // Validate query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/server.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 290 -              self._eventLoopTimer = setTimeout(measure, self.settings.load.sampleInterval);

 Line: 367 -      var timeoutId = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/unit/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 71 -          it('sets url, path, and query', function (done) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/unit/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 44 -                  query: query,

 Line: 49 -              query: query,

 Line: 85 -              var query = { username: 'steve' };

 Line: 99 -              var query = { username: 'steve' };

 Line: 113 -              var query = { username: 'steve' };

 Line: 126 -              var query = { username: 'steve' };

 Line: 140 -              var query = { username: 'steve' };

 Line: 182 -              var query = { username: 'steve' };

 Line: 201 -              var query = { username: 'steve' };

 Line: 242 -          it('should not raise an error when responding with valid param in the querystring', function (done) {

 Line: 244 -              var route = { method: 'GET', path: '/', config: { handler: testHandler, validate: { query: { username: S().min(7) } } } };

 Line: 245 -              var query = { username: 'username' };

 Line: 255 -          it('should raise an error when responding with an invalid querystring param', function (done) {

 Line: 257 -              var route = { method: 'GET', path: '/', config: { handler: testHandler, validate: { query: { username: S().min(7) } } } };

 Line: 258 -              var query = { username: '1' };

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/payload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 130 -              var iv = setInterval(function () {

 Line: 147 -              setTimeout(function () {

 Line: 189 -              setTimeout(function () {

 Line: 322 -              var iv = setInterval(function () {

 Line: 339 -              setTimeout(function () {

 Line: 894 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 52 -              setTimeout(t2, 10);

 Line: 255 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/request.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 458 -      it('parses nested query string', function (done) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/pack.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 612 -                          setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/response.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1332 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/proxy.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 134 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/serverTimeout.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 31 -          setTimeout(function () {

 Line: 39 -          setTimeout(function () {

 Line: 54 -          setTimeout(function () {

 Line: 83 -              setTimeout(function () {

 Line: 88 -              setTimeout(function () {

 Line: 142 -              setTimeout(next, 10);

 Line: 236 -          setTimeout(function () {

 Line: 275 -          setTimeout(function () {

 Line: 314 -          setTimeout(function () {

 Line: 328 -                  setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/validation.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -                      query: {

 Line: 54 -                      query: false

 Line: 75 -                      query: Hapi.types.Object({

 Line: 98 -                      query: {

 Line: 126 -                      query: {

 Line: 156 -                      query: {

 Line: 181 -                      query: {

 Line: 195 -              expect(res.result).to.equal('Got error in query where a is bad');

 Line: 209 -                      query: {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/server.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 148 -                          setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/clientTimeout.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 47 -              setTimeout(function () {

 Line: 52 -              setTimeout(function () {

 Line: 95 -              setTimeout(function () {

 Line: 176 -              setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/integration/security.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 228 -          it('does not exist in query validation response message', function (done) {

 Line: 236 -                      validate: { query: { name: Hapi.types.String().alphanum().required() } }

</Result>
</report_mosca>

