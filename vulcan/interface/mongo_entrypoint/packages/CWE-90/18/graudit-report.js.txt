/src/tools/cutarelease.py-151-        log.info("prepare `%s' for release", changes_path)
/src/tools/cutarelease.py:152:        f = codecs.open(changes_path, 'w', 'utf-8')
/src/tools/cutarelease.py-153-        f.write(changes_txt)
##############################################
/src/tools/cutarelease.py-198-    if not dry_run:
/src/tools/cutarelease.py:199:        f = codecs.open(changes_path, 'w', 'utf-8')
/src/tools/cutarelease.py-200-        f.write(changes_txt)
##############################################
/src/tools/cutarelease.py-205-    for i, ver_file in enumerate(version_files):
/src/tools/cutarelease.py:206:        ver_content = codecs.open(ver_file, 'r', 'utf-8').read()
/src/tools/cutarelease.py-207-        ver_file_type, ver_info = parsed_version_files[i]
##############################################
/src/tools/cutarelease.py-234-            log.info("update version to '%s' in '%s'", next_version, ver_file)
/src/tools/cutarelease.py:235:            f = codecs.open(ver_file, 'w', 'utf-8')
/src/tools/cutarelease.py-236-            f.write(ver_content)
##############################################
/src/tools/cutarelease.py-321-
/src/tools/cutarelease.py:322:    f = codecs.open(version_file, 'r', 'utf-8')
/src/tools/cutarelease.py-323-    content = f.read()
##############################################
/src/tools/cutarelease.py-353-        m = re.search(r'^__version_info__ = (.*?)$', content, re.M)
/src/tools/cutarelease.py:354:        version_info = eval(m.group(1))
/src/tools/cutarelease.py-355-    elif version_file_type == "javascript":
##############################################
/src/tools/cutarelease.py-412-        raise Error("changelog file '%s' not found" % changes_path)
/src/tools/cutarelease.py:413:    content = codecs.open(changes_path, 'r', 'utf-8').read()
/src/tools/cutarelease.py-414-
