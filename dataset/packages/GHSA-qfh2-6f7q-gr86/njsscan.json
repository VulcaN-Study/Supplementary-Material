{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 3,
          "line": 2
        },
        "extra": {
          "line": "*.seed\r",
          "message": "Syntax error"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 2,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 11,
          "line": 1
        },
        "extra": {
          "line": "/not-there",
          "message": "Lexical error: WIERD end of file in regexp"
        },
        "path": "/src/test/public/containsSymlink/problematic",
        "start": {
          "col": 11,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/test/304.js",
          "match_lines": [
            13,
            13
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4),"
        },
        {
          "file_path": "/src/test/core-error.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        },
        {
          "file_path": "/src/test/core.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        },
        {
          "file_path": "/src/test/express-error.js",
          "match_lines": [
            19,
            19
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        },
        {
          "file_path": "/src/test/express.js",
          "match_lines": [
            19,
            19
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        },
        {
          "file_path": "/src/test/union-error.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        },
        {
          "file_path": "/src/test/union.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "  var port = Math.floor(Math.random() * ((1<<16) - 1e4) + 1e4);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
