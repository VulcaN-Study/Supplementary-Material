/src/Readme.md-95-```js
/src/Readme.md:96:const server = require('http').createServer();
/src/Readme.md-97-const io = require('socket.io')(server);
##############################################
/src/Readme.md-121-const app = require('express')();
/src/Readme.md:122:const server = require('http').createServer(app);
/src/Readme.md-123-const io = require('socket.io')(server);
##############################################
/src/Readme.md-134-const app = require('koa')();
/src/Readme.md:135:const server = require('http').createServer(app.callback());
/src/Readme.md-136-const io = require('socket.io')(server);
##############################################
/src/lib/client.js-208-  if (parser.CONNECT == packet.type) {
/src/lib/client.js:209:    this.connect(url.parse(packet.nsp).pathname, url.parse(packet.nsp, true).query);
/src/lib/client.js-210-  } else {
##############################################
/src/lib/index.js-78-    try {
/src/lib/index.js:79:      var parts = url.parse(origin);
/src/lib/index.js-80-      var defaultPort = 'https:' == parts.protocol ? 443 : 80;
##############################################
/src/lib/index.js-434-  var client = new Client(this, conn);
/src/lib/index.js:435:  client.connect('/');
/src/lib/index.js-436-  return this;
##############################################
/src/lib/socket.js-116-  function buildQuery(){
/src/lib/socket.js:117:    var requestQuery = url.parse(self.request.url, true).query;
/src/lib/socket.js-118-    //if socket-specific query exist, replace query strings in requestQuery
