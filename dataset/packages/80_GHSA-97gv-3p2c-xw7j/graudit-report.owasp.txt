/src/README.md-116-1. Communicate the locale, which was detected by i18n-node on the backend, to the frontend through the DOM.
/src/README.md:117:2. Establishing express routes that allow for retrieval of translations.
/src/README.md-118-3. Accessing those routes from Angular.
##############################################
/src/README.md-120-### Make the users locale known in the DOM
/src/README.md:121:First of all, we want to place the locale that was determined by i18n-node into our DOM for easy retrieval later on. Of course, you could detect the locale on the client side, but this approach makes sure that the same locale is used on both the backend *and* the frontend. To do that, we first create a function that we can call when compiling our template.
/src/README.md-122-
##############################################
/src/i18n-node-routes.js-55-/**
/src/i18n-node-routes.js:56: * Middleware to allow retrieval of users locale in the template engine.
/src/i18n-node-routes.js-57- * @param {Object} request
##############################################
/src/i18n-node-angular.js-42-		/**
/src/i18n-node-angular.js:43:		 * The main i18n service which handles retrieval of the translation map sends single translation terms to the backend.
/src/i18n-node-angular.js-44-		 */
