{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 4,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "523848dd40e2bd005c46d80ea3c4c2477dbd8b93239814bb204b9de9693c8155",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 4,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "523848dd40e2bd005c46d80ea3c4c2477dbd8b93239814bb204b9de9693c8155",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "express_open_redirect": {
      "files": [
        {
          "file_path": "/src/dist/server/index.js",
          "match_lines": [
            174,
            180
          ],
          "match_position": [
            17,
            48
          ],
          "match_string": "                var signinUrl = \"\".concat(pages.signIn).concat(pages.signIn.includes('?') ? '&' : '?', \"callbackUrl=\").concat(req.options.callbackUrl);\n\n                if (error) {\n                  signinUrl = \"\".concat(signinUrl, \"&error=\").concat(error);\n                }\n\n                return res.redirect(signinUrl);"
        },
        {
          "file_path": "/src/dist/server/lib/callback-url-handler.js",
          "match_lines": [
            38,
            44
          ],
          "match_position": [
            5,
            6
          ],
          "match_string": "    var callbackUrlCookieValue = req.cookies[cookies.callbackUrl.name] || null;\n\n    if (callbackUrlParamValue) {\n      callbackUrl = yield callbacks.redirect(callbackUrlParamValue, baseUrl);\n    } else if (callbackUrlCookieValue) {\n      callbackUrl = yield callbacks.redirect(callbackUrlCookieValue, baseUrl);\n    }"
        }
      ],
      "metadata": {
        "cwe": "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
        "description": "Untrusted user input in redirect() can result in Open Redirect vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "express_xss": {
      "files": [
        {
          "file_path": "/src/dist/server/pages/index.js",
          "match_lines": [
            27,
            39
          ],
          "match_position": [
            3,
            4
          ],
          "match_string": "  var {\n    baseUrl,\n    basePath,\n    callbackUrl,\n    csrfToken,\n    providers,\n    theme\n  } = req.options;\n  res.setHeader('Content-Type', 'text/html');\n\n  function send(html) {\n    res.send(\"<!DOCTYPE html><head><style type=\\\"text/css\\\">\".concat((0, _css.default)(), \"</style><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\"></head><body class=\\\"__next-auth-theme-\").concat(theme, \"\\\"><div class=\\\"page\\\">\").concat(html, \"</div></body></html>\"));\n  }"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "Untrusted User Input in Response will result in Reflected Cross Site Scripting Vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/dist/client/index.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            14,
            27
          ],
          "match_string": "  _clientId: Math.random().toString(36).substring(2) + Date.now().toString(36),"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_username": {
      "files": [
        {
          "file_path": "/src/dist/adapters/typeorm/lib/transform.js",
          "match_lines": [
            50,
            50
          ],
          "match_position": [
            3,
            57
          ],
          "match_string": "  models.Account.schema.columns.userId.type = 'objectId';"
        },
        {
          "file_path": "/src/dist/adapters/typeorm/lib/transform.js",
          "match_lines": [
            51,
            51
          ],
          "match_position": [
            3,
            57
          ],
          "match_string": "  models.Session.schema.columns.userId.type = 'objectId';"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded username in plain text is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/dist/server/lib/cookie.js",
          "match_lines": [
            37,
            37
          ],
          "match_position": [
            8,
            37
          ],
          "match_string": "  if (!fieldContentRegExp.test(name)) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}