/src/dist/server/lib/oauth/client.js-183-        try {
/src/dist/server/lib/oauth/client.js:184:          raw = JSON.parse(data);
/src/dist/server/lib/oauth/client.js-185-        } catch (_unused) {
/src/dist/server/lib/oauth/client.js:186:          raw = _querystring.default.parse(data);
/src/dist/server/lib/oauth/client.js-187-        }
##############################################
/src/dist/server/lib/oauth/callback.js-49-        try {
/src/dist/server/lib/oauth/callback.js:50:          var body = JSON.parse(JSON.stringify(req.body));
/src/dist/server/lib/oauth/callback.js-51-
##############################################
/src/dist/server/lib/oauth/callback.js-56-          code = body.code;
/src/dist/server/lib/oauth/callback.js:57:          user = body.user != null ? JSON.parse(body.user) : null;
/src/dist/server/lib/oauth/callback.js-58-        } catch (error) {
##############################################
/src/dist/server/lib/oauth/callback.js-140-      if (typeof profileData === 'string' || profileData instanceof String) {
/src/dist/server/lib/oauth/callback.js:141:        profileData = JSON.parse(profileData);
/src/dist/server/lib/oauth/callback.js-142-      }
##############################################
/src/dist/client/index.js-44-        if (event.key === 'nextauth.message') {
/src/dist/client/index.js:45:          var message = JSON.parse(event.newValue);
/src/dist/client/index.js-46-
##############################################
/src/dist/providers/email.js-54-
/src/dist/providers/email.js:55:    _nodemailer.default.createTransport(server).sendMail({
/src/dist/providers/email.js-56-      to: email,
##############################################
/src/dist/lib/jwt.js-53-
/src/dist/lib/jwt.js:54:    var _signingKey = signingKey ? _jose.default.JWK.asKey(JSON.parse(signingKey)) : getDerivedSigningKey(secret);
/src/dist/lib/jwt.js-55-
##############################################
/src/dist/lib/jwt.js-58-    if (encryption) {
/src/dist/lib/jwt.js:59:      var _encryptionKey = encryptionKey ? _jose.default.JWK.asKey(JSON.parse(encryptionKey)) : getDerivedEncryptionKey(secret);
/src/dist/lib/jwt.js-60-
##############################################
/src/dist/lib/jwt.js-95-    if (encryption) {
/src/dist/lib/jwt.js:96:      var _encryptionKey = decryptionKey ? _jose.default.JWK.asKey(JSON.parse(decryptionKey)) : getDerivedEncryptionKey(secret);
/src/dist/lib/jwt.js-97-
##############################################
/src/dist/lib/jwt.js-102-
/src/dist/lib/jwt.js:103:    var _signingKey = verificationKey ? _jose.default.JWK.asKey(JSON.parse(verificationKey)) : getDerivedSigningKey(secret);
/src/dist/lib/jwt.js-104-
