{
  "errors": [
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/util.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 3,
            "line": 1
          },
          "file": "/src/projectFilesBackup/.idea/.npmignore",
          "source_hash": "cde695f4f800aafe031398d1d2e7e153e6506974fdda064afdef639869a49426",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/bundle.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/util.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/bundle.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_default",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 3,
            "line": 1
          },
          "file": "/src/projectFilesBackup/.idea/.npmignore",
          "source_hash": "cde695f4f800aafe031398d1d2e7e153e6506974fdda064afdef639869a49426",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/util.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/build/bundle.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.generic_header_injection",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 2
          },
          "file": "/src/.npmignore",
          "source_hash": "23127f4161740a3254939e3c219a37d5eefde13ab00d2ad6e4bcaf2d970eba66",
          "start": {
            "col": 1,
            "line": 2
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 2
          },
          "file": "/src/.npmignore",
          "source_hash": "23127f4161740a3254939e3c219a37d5eefde13ab00d2ad6e4bcaf2d970eba66",
          "start": {
            "col": 1,
            "line": 2
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "eval_nodejs": {
      "files": [
        {
          "file_path": "/src/public/javascripts/directive/json2html.js",
          "match_lines": [
            119,
            119
          ],
          "match_position": [
            40,
            52
          ],
          "match_string": "                            _o[v.id] = eval(v.rule);"
        }
      ],
      "metadata": {
        "cwe": "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "description": "User controlled data in eval() or similar functions may result in Server Side Injection or Remote Code Injection",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "express_lfr_warning": {
      "files": [
        {
          "file_path": "/src/app.js",
          "match_lines": [
            53,
            56
          ],
          "match_position": [
            7,
            9
          ],
          "match_string": "      res.render('error', {\n        message: err.message,\n        error: err\n      });"
        },
        {
          "file_path": "/src/app.js",
          "match_lines": [
            62,
            65
          ],
          "match_position": [
            5,
            7
          ],
          "match_string": "    res.render('error', {\n      message: err.message,\n      error: {}\n    });"
        },
        {
          "file_path": "/src/routes/index.js",
          "match_lines": [
            11,
            15
          ],
          "match_position": [
            5,
            7
          ],
          "match_string": "    res.render('index', {\n      interfaceSuffix: global.options.interfaceSuffix,\n      interfaceRule: global.options.interfaceRule,\n      language: JSON.stringify(global.language)\n    });"
        }
      ],
      "metadata": {
        "cwe": "CWE-23: Relative Path Traversal",
        "description": "Untrusted user input in express render() function can result in arbitrary file read if hbs templating is used.",
        "owasp": "A5: Broken Access Control",
        "severity": "WARNING"
      }
    },
    "express_xss": {
      "files": [
        {
          "file_path": "/src/routes/getJson.js",
          "match_lines": [
            11,
            60
          ],
          "match_position": [
            5,
            8
          ],
          "match_string": "    var url = req.originalUrl.split('?')[0];\n    var method = req.method;\n    mock2easy.log();\n    mock2easy.log(('+---------------------' + global.language[\"DETAIL-TITLE\"]+'--------------------------').yellow);\n    mock2easy.log('| '.yellow + 'URL => '.bold + url.green);\n    mock2easy.log('| '.yellow + 'Method => '.bold + method.green);\n    if (typeof params == 'object') {\n      mock2easy.log('| '.yellow + 'Params => '.bold);\n      for (var i in params) {\n        mock2easy.log('| '.yellow + '   ' + i + ':' + decodeURI(params[i]).green);\n      }\n    } else {\n      mock2easy.log('| '.yellow + 'Params =>'.bold + params.green);\n    }\n    mock2easy.log('+-------------------------------------------------------'.yellow);\n\n    fs.readFile(path.resolve(global.options.database) + url.replace(global.options.interfaceSuffix,'.json'), 'utf-8', function (err, data) {\n      if (err) {\n        mock2easy.log(_.template(global.language['SERVER-ERROR-LOG'])({url:url.replace(global.options.interfaceSuffix,'.json')}).red);\n        res.send({\"code\": \"404\", \"message\": _.template(global.language['SERVER-ERROR-LOG'])({url:url.replace(global.options.interfaceSuffix,'.json')}), \"success\": \"false\"});\n      } else {\n        if (data) {\n          var _data = JSON.parse(data);\n          var responseParameters = _data.responseParameters;\n          var hashObj = {};\n          for (var i in responseParameters) {\n            var o = responseParameters[i];\n            hashObj[o.id] = o;\n          }\n          //\u68c0\u9a8c\u8bf7\u6c42\u65b9\u5f0f \u548c \u8bf7\u6c42\u53c2\u6570\n          try {\n            require('../server/verifyReqParameter')(mock2easy)(url, method, params, _data, ignoreField);\n            setTimeout(function () {\n              var _reData;\n              if (_data.responseParametersType) {\n                _reData = _data.responseJson;\n              }else{\n                _reData = JSON.stringify(Mock.mock(require('../util/response2json')(hashObj, mock2easy, true)));\n              }\n              if (_data.isJsonp) {\n                _reData = _data.jsonpCallback + '(' + _reData + ')';\n              }\n              res.send(_reData);\n            }, _data.lazyLoad == \"yes\" ? global.options.lazyLoadTime : 0);\n          } catch (err) {\n            res.send(500, err);\n          }\n        }\n      }\n    });"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "Untrusted User Input in Response will result in Reflected Cross Site Scripting Vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            26,
            26
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            27,
            27
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            36,
            36
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            37,
            37
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            49,
            49
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            50,
            50
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            60,
            60
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            61,
            61
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            90,
            90
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            91,
            91
          ],
          "match_position": [
            69,
            82
          ],
          "match_string": "          ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            101,
            101
          ],
          "match_position": [
            67,
            80
          ],
          "match_string": "        nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            102,
            102
          ],
          "match_position": [
            67,
            80
          ],
          "match_string": "        ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            113,
            113
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      nameVerify: 'name_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1),"
        },
        {
          "file_path": "/src/public/javascripts/service/json2Data.js",
          "match_lines": [
            114,
            114
          ],
          "match_position": [
            65,
            78
          ],
          "match_string": "      ruleVerify: 'rule_' + Date.parse(new Date()) + Math.floor(Math.random()*1000+1)"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {
    "pug_jade_template": {
      "files": [
        {
          "file_path": "/src/views/index.jade",
          "match_lines": [
            9,
            9
          ],
          "match_position": [
            411,
            467
          ],
          "match_string": "!{language};window.interfaceRule=#{interfaceRule||false}"
        }
      ],
      "metadata": {
        "cwe": "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The Pug.js/Jade.js template has an unescaped variable. Untrusted user input passed to this variable results in Cross Site Scripting (XSS).",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  }
}