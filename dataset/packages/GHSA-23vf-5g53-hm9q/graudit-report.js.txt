/src/server.js-15-  .option('-p, --port [port]', 'Run on a custom port')
/src/server.js:16:  .parse(process.argv);
/src/server.js-17-
##############################################
/src/server.js-30-
/src/server.js:31:        var currentPath = urlHelpers.parse(request.url).pathname;
/src/server.js-32-
##############################################
/src/server.js-51-
/src/server.js:52:    if('view' in querystring.parse(urlBits[1])){
/src/server.js-53-        response.writeHead(200, {"Content-Type": "text/html"});
##############################################
/src/server.js-75-
/src/server.js:76:        var file = fs.createReadStream(path, {start: start, end: end});
/src/server.js-77-        response.writeHead(206, { 'Content-Range': 'bytes ' + start + '-' + end + '/' + total, 'Accept-Ranges': 'bytes', 'Content-Length': chunksize, 'Content-Type': contentType });
##############################################
/src/server.js-80-        response.writeHead(200, { 'Content-Length': total, 'Content-Type': contentType });
/src/server.js:81:        fs.createReadStream(path).pipe(response);
/src/server.js-82-    }
##############################################
/src/server.js-102-
/src/server.js:103:var server = http.createServer(router);
/src/server.js-104-
