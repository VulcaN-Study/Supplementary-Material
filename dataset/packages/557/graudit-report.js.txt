/src/res/reload.js-201-                this.autoConnect = opts.autoConnect !== false;
/src/res/reload.js:202:                if (this.autoConnect) this.open();
/src/res/reload.js-203-            }
##############################################
/src/res/reload.js-608-
/src/res/reload.js:609:                        self.open(function (err) {
/src/res/reload.js-610-                            if (err) {
##############################################
/src/res/reload.js-741-                this.acks = {};
/src/res/reload.js:742:                if (this.io.autoConnect) this.open();
/src/res/reload.js-743-                this.receiveBuffer = [];
##############################################
/src/res/reload.js-782-                    this.subEvents();
/src/res/reload.js:783:                    this.io.open(); // ensure open
/src/res/reload.js-784-                    if ('open' == this.io.readyState) this.onopen();
##############################################
/src/res/reload.js-1703-                    this.ciphers = opts.ciphers || null;
/src/res/reload.js:1704:                    this.rejectUnauthorized = opts.rejectUnauthorized || null;
/src/res/reload.js-1705-
/src/res/reload.js:1706:                    this.open();
/src/res/reload.js-1707-                }
##############################################
/src/res/reload.js-1776-                        ciphers: this.ciphers,
/src/res/reload.js:1777:                        rejectUnauthorized: this.rejectUnauthorized
/src/res/reload.js-1778-                    });
##############################################
/src/res/reload.js-1816-                    try {
/src/res/reload.js:1817:                        transport = this.createTransport(transport);
/src/res/reload.js-1818-                    } catch (e) {
/src/res/reload.js-1819-                        this.transports.shift();
/src/res/reload.js:1820:                        this.open();
/src/res/reload.js-1821-                        return;
##############################################
/src/res/reload.js-1823-
/src/res/reload.js:1824:                    transport.open();
/src/res/reload.js-1825-                    this.setTransport(transport);
##############################################
/src/res/reload.js-1870-                    debug('probing transport "%s"', name);
/src/res/reload.js:1871:                    var transport = this.createTransport(name, {probe: 1})
/src/res/reload.js-1872-                        , failed = false
##############################################
/src/res/reload.js-1975-
/src/res/reload.js:1976:                    transport.open();
/src/res/reload.js-1977-
##############################################
/src/res/reload.js-2362-                this.ciphers = opts.ciphers;
/src/res/reload.js:2363:                this.rejectUnauthorized = opts.rejectUnauthorized;
/src/res/reload.js-2364-            }
##############################################
/src/res/reload.js-2867-                    opts.ciphers = this.ciphers;
/src/res/reload.js:2868:                    opts.rejectUnauthorized = this.rejectUnauthorized;
/src/res/reload.js-2869-
##############################################
/src/res/reload.js-2936-                    this.ciphers = opts.ciphers;
/src/res/reload.js:2937:                    this.rejectUnauthorized = opts.rejectUnauthorized;
/src/res/reload.js-2938-
##############################################
/src/res/reload.js-2963-                    opts.ciphers = this.ciphers;
/src/res/reload.js:2964:                    opts.rejectUnauthorized = this.rejectUnauthorized;
/src/res/reload.js-2965-
##############################################
/src/res/reload.js-2970-                        debug('xhr open %s: %s', this.method, this.uri);
/src/res/reload.js:2971:                        xhr.open(this.method, this.uri, this.async);
/src/res/reload.js-2972-                        if (this.supportsBinary) {
##############################################
/src/res/reload.js-3513-                opts.ciphers = this.ciphers;
/src/res/reload.js:3514:                opts.rejectUnauthorized = this.rejectUnauthorized;
/src/res/reload.js-3515-
##############################################
/src/res/reload.js-5339-                    if (global.JSON && JSON.parse) {
/src/res/reload.js:5340:                        return JSON.parse(data);
/src/res/reload.js-5341-                    }
##############################################
/src/res/reload.js-6188-                    try {
/src/res/reload.js:6189:                        p.data = json.parse(str.substr(i));
/src/res/reload.js-6190-                    } catch (e) {
##############################################
/src/lib/application.js-85-        )
/src/lib/application.js:86:        .parse(process.argv);
/src/lib/application.js-87-
##############################################
/src/lib/read-file.js-10-    return (done) => {
/src/lib/read-file.js:11:        return fs.readFile(file, done);
/src/lib/read-file.js-12-    };
##############################################
/src/lib/server.js-66-                }
/src/lib/server.js:67:                nativeServer = https.createServer({key: keys.serviceKey, cert: keys.certificate}, server.callback())
/src/lib/server.js-68-                    .on('error', serverErrorCallback)
##############################################
/src/test/test/commander.js-46-    .option('-v, --verbose', 'A value that can be increased', increaseVerbosity, 0)
/src/test/test/commander.js:47:    .parse(process.argv);
/src/test/test/commander.js-48-
##############################################
/src/test/file/js/index.js-11-    var req = new XMLHttpRequest();
/src/test/file/js/index.js:12:    req.open('GET', './mock-server/ajax', true);
/src/test/file/js/index.js-13-    req.addEventListener('readystatechange', function () {
/src/test/file/js/index.js-14-        if (req.readyState === 4 && req.status === 200) {
/src/test/file/js/index.js:15:            var response = JSON.parse(req.responseText);
/src/test/file/js/index.js-16-            console.log(response);
