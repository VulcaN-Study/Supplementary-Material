/src/README.md-12-var Cookie = tough.Cookie;
/src/README.md:13:var cookie = Cookie.parse(header);
/src/README.md-14-cookie.value = 'somethingdifferent';
##############################################
/src/README.md-42-
/src/README.md:43:Parse a cookie date string into a `Date`.  Parses according to RFC6265 Section 5.1.1, not `Date.parse()`.
/src/README.md-44-
##############################################
/src/README.md-62-
/src/README.md:63:The `path` parameter MUST be _only_ the pathname part of a URI (i.e. excludes the hostname, query, fragment, etc.).  This is the `.pathname` property of node's `uri.parse()` output.
/src/README.md-64-
##############################################
/src/README.md-72-
/src/README.md:73:alias for `Cookie.parse(cookieString[, options])`
/src/README.md-74-
##############################################
/src/README.md-114-
/src/README.md:115:### `Cookie.parse(cookieString[, options])`
/src/README.md-116-
##############################################
/src/README.md-130-else
/src/README.md:131:  cookies = [Cookie.parse(res.headers['set-cookie'])];
/src/README.md-132-```
##############################################
/src/README.md-210-
/src/README.md:211:Does the reverse of `cookie.toJSON()`. If passed a string, will `JSON.parse()` that first.
/src/README.md-212-
/src/README.md:213:Any `Date` properties (i.e., `.expires`, `.creation`, and `.lastAccessed`) are parsed via `Date.parse()`, not the tough-cookie `parseDate`, since it's JavaScript/JSON-y timestamps being handled at this layer.
/src/README.md-214-
##############################################
/src/lib/cookie.js-483-  try {
/src/lib/cookie.js:484:    obj = JSON.parse(str);
/src/lib/cookie.js-485-  } catch (e) {
##############################################
/src/lib/cookie.js-920-  if (!(cookie instanceof Cookie)) {
/src/lib/cookie.js:921:    cookie = Cookie.parse(cookie, { loose: loose });
/src/lib/cookie.js-922-  }
##############################################
/src/lib/cookie.js-1269-  var serialized = typeof strOrObj === 'string' ?
/src/lib/cookie.js:1270:    JSON.parse(strOrObj) : strOrObj;
/src/lib/cookie.js-1271-  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);
