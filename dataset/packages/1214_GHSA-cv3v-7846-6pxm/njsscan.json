{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 13,
          "line": 2
        },
        "extra": {
          "line": "  \"extends\": \"eslint:recommended\",",
          "message": "Syntax error"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 12,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 1
        },
        "extra": {
          "line": "MIT License",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            18,
            18
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            19,
            19
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            29,
            29
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            122,
            122
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            123,
            123
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            124,
            124
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            131,
            131
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            204,
            204
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            205,
            205
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            206,
            206
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            207,
            207
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            208,
            208
          ],
          "match_position": [
            42,
            53
          ],
          "match_string": "    const targetDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            300,
            300
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            301,
            301
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            302,
            302
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            312,
            312
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            496,
            496
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            497,
            497
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            498,
            498
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            507,
            507
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            597,
            597
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            598,
            598
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            599,
            599
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            606,
            606
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            627,
            627
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            632,
            632
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            641,
            641
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            642,
            642
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            643,
            643
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            666,
            666
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            706,
            706
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            707,
            707
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            708,
            708
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            736,
            736
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            774,
            774
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            775,
            775
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            776,
            776
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            800,
            800
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            837,
            837
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            838,
            838
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            839,
            839
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            848,
            848
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            925,
            925
          ],
          "match_position": [
            40,
            51
          ],
          "match_string": "    const repoDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            926,
            926
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const srcDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            927,
            927
          ],
          "match_position": [
            39,
            50
          ],
          "match_string": "    const dstDir = `/tmp/${Math.floor(Math.random() * (1 << 30)).toString(16)}`;"
        },
        {
          "file_path": "/src/test/git.js",
          "match_lines": [
            936,
            936
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    const port = Math.floor(Math.random() * ((1 << 16) - 1e4)) + 1e4;"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/git.js",
          "match_lines": [
            209,
            209
          ],
          "match_position": [
            12,
            30
          ],
          "match_string": "      if (!/\\.git$/.test(repo)) repo += '.git';"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
