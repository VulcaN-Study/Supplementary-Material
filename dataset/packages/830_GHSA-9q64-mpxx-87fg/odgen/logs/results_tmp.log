|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 310	        const stream = fs
          .createReadStream(file, { start, end })
          .on('error', (err) => {
            status['500'](res, next, { error: err });
          })
          .pipe(res);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 201	      pathname = decodePathname(parsed.pathname);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 20	function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 21	  const pieces = pathname.replace(/\\/g, '/').split('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 23	  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 94	    dir = options.root;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 97	  const root = path.join(path.resolve(dir), '/');
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 215	    brotliFile = `${file}.br`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic/opts.js
Line 192	  return {
    cache,
    autoIndex,
    showDir,
    showDotfiles,
    humanReadable,
    hidePermissions,
    si,
    defaultExt,
    baseDir: (opts && opts.baseDir) || '/',
    gzip,
    brotli,
    handleError,
    headers,
    serverHeader,
    contentType,
    mimeTypes,
    weakEtags,
    weakCompare,
    handleOptionsMethod,
  };
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 207	    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 214	    gzippedFile = `${file}.gz`;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 57	  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 2	  var ret = sink_hqbpillvul_fs_read(a,b,c,d,e);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-601/830/package/lib/ecstatic.js
Line 346	      const stream = fs
        .createReadStream(file)
        .on('error', (err) => {
          status['500'](res, next, { error: err });
        })
        .pipe(res);

