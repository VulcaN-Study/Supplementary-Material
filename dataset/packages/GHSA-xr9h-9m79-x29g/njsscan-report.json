{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 11157,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "b40930bbcf80744c86c46a12bc9da056641d722716c378f5659b9e555ef833e1",
          "start": {
            "col": 34,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 82,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "b40930bbcf80744c86c46a12bc9da056641d722716c378f5659b9e555ef833e1",
          "start": {
            "col": 34,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "generic_error_disclosure": {
      "files": [
        {
          "file_path": "/src/build/renderer.js",
          "match_lines": [
            64,
            70
          ],
          "match_position": [
            9,
            10
          ],
          "match_string": "        try {\n            // Navigate to page. Wait until there are no oustanding network requests.\n            response = await page.goto(requestUrl, { timeout: 10000, waitUntil: 'networkidle0' });\n        }\n        catch (e) {\n            console.error(e);\n        }"
        },
        {
          "file_path": "/src/build/renderer.js",
          "match_lines": [
            116,
            123
          ],
          "match_position": [
            9,
            10
          ],
          "match_string": "        try {\n            // Navigate to page. Wait until there are no oustanding network requests.\n            response =\n                await page.goto(url, { timeout: 10000, waitUntil: 'networkidle0' });\n        }\n        catch (e) {\n            console.error(e);\n        }"
        }
      ],
      "metadata": {
        "cwe": "CWE-209: Generation of Error Message Containing Sensitive Information",
        "description": "Error messages with stack traces may expose sensitive information about the application.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "WARNING"
      }
    },
    "node_username": {
      "files": [
        {
          "file_path": "/src/build/renderer.js",
          "match_lines": [
            4,
            4
          ],
          "match_position": [
            7,
            176
          ],
          "match_string": "const MOBILE_USERAGENT = 'Mozilla/5.0 (Linux; Android 8.0.0; Pixel 2 XL Build/OPD1.170816.004) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75 Mobile Safari/537.36';"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded username in plain text is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    }
  },
  "templates": {}
}