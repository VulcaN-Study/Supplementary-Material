{
  "errors": [],
  "nodejs": {
    "generic_path_traversal": {
      "files": [
        {
          "file_path": "/src/static.js",
          "match_lines": [
            6,
            34
          ],
          "match_position": [
            3,
            17
          ],
          "match_string": "  var urlObj = url.parse(req.url, true, false);\n\n  if(urlObj.pathname.indexOf(\"getcity\") != -1) {\n\n    console.log(\"In Getcity\");\n\n    fs.readFile(\"cities.dat.txt\", function (err,data) {\n\n      if (err) throw err;\n\n      var cities = data.toString().split(\"\\n\");\n\n      var myRe = new RegExp(\"^\"+urlObj.query[\"q\"]);\n\n      console.log(myRe);\n\n      var jsonresult = [];\n\n      for (var i = 0; i < cities.length; i++) {\n\n        var result = cities[i].search(myRe);\n\n        if (result != -1) {\n\n          console.log(cities[i]);\n\n          jsonresult.push({city:cities[i]});\n\n        }\n\n       }\n\n      console.log(jsonresult);\n\n      res.writeHead(200);\n\n      res.end(JSON.stringify(jsonresult));\n\n    });\n\n  } else {\n\n  fs.readFile(ROOT_DIR + urlObj.pathname, function (err,data) {\n\n    if (err) {\n\n      res.writeHead(404);\n\n      res.end(JSON.stringify(err));\n\n      return;\n\n    }\n\n    res.writeHead(200);\n\n    res.end(data);"
        }
      ],
      "metadata": {
        "cwe": "CWE-23: Relative Path Traversal",
        "description": "Untrusted user input in readFile()/readFileSync() can endup in Directory Traversal Attacks.",
        "owasp": "A5: Broken Access Control",
        "severity": "ERROR"
      }
    },
    "regex_injection_dos": {
      "files": [
        {
          "file_path": "/src/static.js",
          "match_lines": [
            6,
            34
          ],
          "match_position": [
            3,
            17
          ],
          "match_string": "  var urlObj = url.parse(req.url, true, false);\n\n  if(urlObj.pathname.indexOf(\"getcity\") != -1) {\n\n    console.log(\"In Getcity\");\n\n    fs.readFile(\"cities.dat.txt\", function (err,data) {\n\n      if (err) throw err;\n\n      var cities = data.toString().split(\"\\n\");\n\n      var myRe = new RegExp(\"^\"+urlObj.query[\"q\"]);\n\n      console.log(myRe);\n\n      var jsonresult = [];\n\n      for (var i = 0; i < cities.length; i++) {\n\n        var result = cities[i].search(myRe);\n\n        if (result != -1) {\n\n          console.log(cities[i]);\n\n          jsonresult.push({city:cities[i]});\n\n        }\n\n       }\n\n      console.log(jsonresult);\n\n      res.writeHead(200);\n\n      res.end(JSON.stringify(jsonresult));\n\n    });\n\n  } else {\n\n  fs.readFile(ROOT_DIR + urlObj.pathname, function (err,data) {\n\n    if (err) {\n\n      res.writeHead(404);\n\n      res.end(JSON.stringify(err));\n\n      return;\n\n    }\n\n    res.writeHead(200);\n\n    res.end(data);"
        }
      ],
      "metadata": {
        "cwe": "CWE-400: Uncontrolled Resource Consumption",
        "description": "User controlled data in RegExp() can make the application vulnerable to layer 7 DoS.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  },
  "templates": {}
}
