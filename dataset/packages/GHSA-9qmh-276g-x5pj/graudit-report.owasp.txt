/src/src/utils/env.ts-2-
/src/src/utils/env.ts:3:// Some things that should be evaluated before all else...
/src/src/utils/env.ts-4-
##############################################
/src/dist/immer.umd.production.min.js.map:1:{"version":3,"file":"immer.umd.production.min.js","sources":["../src/utils/errors.ts","../src/utils/common.ts","../src/types/types-internal.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/utils/env.ts","../src/immer.ts","../src/plugins/all.ts"],"sourcesContent":["const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n"],"names":["die","error","args","Error","length","map","s","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","proxyProperty","this","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","defineProperty","markChangesRecursively","object","min","Math","enablePatches","deepClonePatchValue","entries","cloned","clonePatchValueIfNeeded","ADD","applyPatches_","patches","patch","op","type","splice","basePath","inversePatches","assignedValue","origValue","unshift","rootState","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","assertUnrevoked","JSON","stringify","setPrototypeOf","__proto__","p","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","hasSymbol","Symbol","hasProxies","Reflect","for","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","currentState","deleteProperty","owner","fn","arguments","apply","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","hasError","Promise","then","arg1","arg2","ip","createDraft","finishDraft","applyPatches","applyPatchesImpl"],"mappings":"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"}
##############################################
/src/dist/immer.cjs.production.min.js.map:1:{"version":3,"file":"immer.cjs.production.min.js","sources":["../src/utils/errors.ts","../src/utils/common.ts","../src/types/types-internal.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/utils/env.ts","../src/immer.ts","../src/plugins/all.ts"],"sourcesContent":["const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n"],"names":["die","error","args","Error","length","map","s","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","Array","isArray","DRAFTABLE","constructor","isMap","isSet","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","base_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","proxyProperty","this","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","defineProperty","markChangesRecursively","object","min","Math","enablePatches","deepClonePatchValue","entries","cloned","clonePatchValueIfNeeded","ADD","applyPatches_","patches","patch","op","type","splice","basePath","inversePatches","assignedValue","origValue","unshift","rootState","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","assertUnrevoked","JSON","stringify","setPrototypeOf","__proto__","p","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","hasSymbol","Symbol","hasProxies","Reflect","for","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","currentState","deleteProperty","owner","fn","arguments","apply","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","hasError","Promise","then","arg1","arg2","ip","createDraft","finishDraft","applyPatches","applyPatchesImpl"],"mappings":"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"}
##############################################
/src/dist/immer.umd.development.js.map:1:{"version":3,"file":"immer.umd.development.js","sources":["../src/utils/env.ts","../src/utils/errors.ts","../src/types/types-internal.ts","../src/utils/common.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/immer.ts"],"sourcesContent":["// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n"],"names":["hasSymbol","Symbol","hasMap","Map","hasSet","Set","hasProxies","Proxy","revocable","Reflect","NOTHING","for","DRAFTABLE","DRAFT_STATE","iteratorSymbol","iterator","errors","data","path","op","plugin","thing","die","error","args","e","msg","apply","Error","ArchtypeObject","ArchtypeArray","ArchtypeMap","ArchtypeSet","ProxyTypeProxyObject","ProxyTypeProxyArray","ProxyTypeES5Object","ProxyTypeES5Array","ProxyTypeMap","ProxyTypeSet","isDraft","value","isDraftable","isPlainObject","Array","isArray","constructor","isMap","isSet","proto","Object","getPrototypeOf","prototype","original","base_","ownKeys","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","getOwnPropertyDescriptors","target","res","forEach","key","getOwnPropertyDescriptor","each","iter","enumerableOnly","getArchtype","keys","entry","index","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","latest","copy_","shallowCopy","base","slice","descriptors","i","length","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","plugins","getPlugin","pluginKey","loadPlugin","implementation","currentScope","getCurrentScope","createScope","parent_","immer_","drafts_","canAutoFreeze_","unfinalizedDrafts_","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","revokeDraft","enterScope","immer","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","assigned_","autoFreeze_","createProxyProxy","parent","isManual_","traps","objectTraps","arrayTraps","revoke","proxy","source","readPropFromProto","peek","prepareCopy","createProxy","getDescriptorFromProto","current","currentState","markChanged","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","curriedProduce","hasError","Promise","then","arg1","arg2","arg3","patches","inversePatches","nextState","p","ip","createDraft","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","proxyMap_","proxySet_","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","markChangesRecursively","markChangesSweep","createES5Draft","proxyProperty","assertUnrevoked","drafts","hasArrayChanges","hasObjectChanges","object","min","Math","baseValue","baseIsDraft","descriptor","JSON","stringify","enablePatches","REPLACE","ADD","REMOVE","basePath","generatePatchesFromAssigned","generateArrayPatches","generateSetPatches","clonePatchValueIfNeeded","assignedValue","origValue","unshift","rootState","replacement","join","type","deepClonePatchValue","splice","map","entries","k","v","cloned","enableMapSet","extendStatics","d","b","__proto__","__extends","__","DraftMap","_super","size","prepareMapCopy","cb","thisArg","_value","_map","values","next","r","done","DraftSet","prepareSetCopy","enableAllPlugins","castDraft","castImmutable"],"mappings":"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"}
##############################################
/src/dist/immer.umd.development.js-9-	// Should be no imports here!
/src/dist/immer.umd.development.js:10:	// Some things that should be evaluated before all else...
/src/dist/immer.umd.development.js-11-	// We only want to know if non-polyfilled symbols are available
##############################################
/src/dist/immer.cjs.development.js.map:1:{"version":3,"file":"immer.cjs.development.js","sources":["../src/utils/env.ts","../src/utils/errors.ts","../src/types/types-internal.ts","../src/utils/common.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/immer.ts"],"sourcesContent":["// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n"],"names":["hasSymbol","Symbol","hasMap","Map","hasSet","Set","hasProxies","Proxy","revocable","Reflect","NOTHING","for","DRAFTABLE","DRAFT_STATE","iteratorSymbol","iterator","errors","data","path","op","plugin","thing","die","error","args","e","msg","apply","Error","ArchtypeObject","ArchtypeArray","ArchtypeMap","ArchtypeSet","ProxyTypeProxyObject","ProxyTypeProxyArray","ProxyTypeES5Object","ProxyTypeES5Array","ProxyTypeMap","ProxyTypeSet","isDraft","value","isDraftable","isPlainObject","Array","isArray","constructor","isMap","isSet","proto","Object","getPrototypeOf","prototype","original","base_","ownKeys","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","getOwnPropertyDescriptors","target","res","forEach","key","getOwnPropertyDescriptor","each","iter","enumerableOnly","getArchtype","keys","entry","index","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","latest","copy_","shallowCopy","base","slice","descriptors","i","length","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","plugins","getPlugin","pluginKey","loadPlugin","implementation","currentScope","getCurrentScope","createScope","parent_","immer_","drafts_","canAutoFreeze_","unfinalizedDrafts_","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","revokeDraft","enterScope","immer","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","assigned_","autoFreeze_","createProxyProxy","parent","isManual_","traps","objectTraps","arrayTraps","revoke","proxy","source","readPropFromProto","peek","prepareCopy","createProxy","getDescriptorFromProto","current","currentState","markChanged","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","curriedProduce","hasError","Promise","then","arg1","arg2","arg3","patches","inversePatches","nextState","p","ip","createDraft","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","proxyMap_","proxySet_","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","markChangesRecursively","markChangesSweep","createES5Draft","proxyProperty","assertUnrevoked","drafts","hasArrayChanges","hasObjectChanges","object","min","Math","baseValue","baseIsDraft","descriptor","JSON","stringify","enablePatches","REPLACE","ADD","REMOVE","basePath","generatePatchesFromAssigned","generateArrayPatches","generateSetPatches","clonePatchValueIfNeeded","assignedValue","origValue","unshift","rootState","replacement","join","type","deepClonePatchValue","splice","map","entries","k","v","cloned","enableMapSet","extendStatics","d","b","__proto__","__extends","__","DraftMap","_super","size","prepareMapCopy","cb","thisArg","_value","_map","values","next","r","done","DraftSet","prepareSetCopy","enableAllPlugins","castDraft","castImmutable"],"mappings":"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"}
##############################################
/src/dist/immer.esm.js.map:1:{"version":3,"file":"immer.esm.js","sources":["../src/utils/errors.ts","../src/utils/common.ts","../src/types/types-internal.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/immer.ts","../src/utils/env.ts"],"sourcesContent":["const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n"],"names":["die","error","args","e","errors","msg","apply","Error","length","map","s","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","prototype","isPlainObject","Array","isArray","DRAFTABLE","constructor","isMap","isSet","original","base_","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","process","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createProxyProxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","proxyProperty","this","assertUnrevoked","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","JSON","stringify","defineProperty","createES5Draft","markChangesRecursively","object","min","Math","enablePatches","deepClonePatchValue","entries","cloned","clonePatchValueIfNeeded","ADD","applyPatches_","patches","patch","op","type","splice","basePath","inversePatches","assignedValue","origValue","generatePatchesFromAssigned","generateArrayPatches","unshift","generateSetPatches","rootState","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","setPrototypeOf","__proto__","p","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","enableAllPlugins","castDraft","castImmutable","hasSymbol","Symbol","hasProxies","Reflect","for","data","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","readPropFromProto","currentState","deleteProperty","owner","fn","arguments","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","hasError","Promise","then","arg1","arg2","ip","createDraft","finishDraft","applyPatches","applyPatchesImpl"],"mappings":"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"}
##############################################
/src/dist/immer.cjs.development.js-7-// Should be no imports here!
/src/dist/immer.cjs.development.js:8:// Some things that should be evaluated before all else...
/src/dist/immer.cjs.development.js-9-// We only want to know if non-polyfilled symbols are available
