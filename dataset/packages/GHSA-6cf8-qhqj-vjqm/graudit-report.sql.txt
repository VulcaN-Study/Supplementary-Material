/src/mail.js-371-	var opt = framework_utils.copy(options.tls, { socket: obj.socket, host: obj.socket.$host, ciphers: 'SSLv3' });
/src/mail.js:372:	obj.socket2 = Tls.connect(opt, () => self.$send(obj, options, true));
/src/mail.js-373-
##############################################
/src/mail.js-592-		internal.host = smtp;
/src/mail.js:593:		obj.socket = Tls.connect(internal, () => mailer.$send(obj, options));
/src/mail.js-594-	} else
/src/mail.js:595:		obj.socket = Net.createConnection(options.port, smtp);
/src/mail.js-596-
##############################################
/src/flow.js-307-	curr.install && !prev && curr.install();
/src/flow.js:308:	curr.connect && curr.connect();
/src/flow.js-309-	curr.destroy = function() {
##############################################
/src/utils.js-835-PAP.addRequest = function(req, options) {
/src/utils.js:836:	this.createConnection({ host: options.host, port: options.port, request: req });
/src/utils.js-837-};
##############################################
/src/utils.js-844-		PROXYTLS.socket = socket;
/src/utils.js:845:		var tls = Tls.connect(0, PROXYTLS);
/src/utils.js-846-		callback(tls);
##############################################
/src/index.js-501-	if (o)
/src/index.js:502:		o.query(options, callback, controller);
/src/index.js-503-	else
##############################################
/src/index.js-11952-
/src/index.js:11953:	this.getSchema().query(helper, callback, this);
/src/index.js-11954-	return this;
##############################################
/src/builders.js-3915-	} else
/src/builders.js:3916:		this.$$schema.query(this, helper, callback, this.$$controller);
/src/builders.js-3917-
##############################################
/src/changes.txt-514-- added: `DatabaseBuilder.insert(fn(doc))` can modify a document after `update` or `modify` has `insert` mode
/src/changes.txt:515:- added: `DatabaseBuilder.query(code)` can contain a raw JS condition in the form e.g. `doc.age > 18 && doc.age < 33`
/src/changes.txt-516-- added: `DatabaseBuilder.regexp(name, regexp)` RegExp search in strings
##############################################
/src/websocketclient.js-105-		if (self.options.reconnectserver)
/src/websocketclient.js:106:			self.connect(url, protocol, origin);
/src/websocketclient.js-107-		else
##############################################
/src/websocketclient.js-170-		ws.reconnect++;
/src/websocketclient.js:171:		ws.connect(ws.url, ws.protocol, ws.origin);
/src/websocketclient.js-172-	}, ws.options.reconnect, ws);
