/src/lib/storage/localfilesystem/projects/Project.js-69-    this.missingFiles = [];
/src/lib/storage/localfilesystem/projects/Project.js:70:    this.credentialSecret = null;
/src/lib/storage/localfilesystem/projects/Project.js-71-}
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-82-    this.paths.root = projectSettings.rootPath || "";
/src/lib/storage/localfilesystem/projects/Project.js:83:    this.credentialSecret = projectSettings.credentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-84-    this.git = projectSettings.git || { user:{} };
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-154-        projects.projects[project.name] = projects.projects[project.name] || {};
/src/lib/storage/localfilesystem/projects/Project.js:155:        projects.projects[project.name].credentialSecret = data.credentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-156-        promises.push(settings.set('projects',projects));
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-265-    if (data.credentialSecret && data.credentialSecret !== this.credentialSecret) {
/src/lib/storage/localfilesystem/projects/Project.js:266:        var existingSecret = data.currentCredentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-267-        var isReset = data.resetCredentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js:268:        var secret = data.credentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-269-
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-283-        }
/src/lib/storage/localfilesystem/projects/Project.js:284:        this.credentialSecret = secret;
/src/lib/storage/localfilesystem/projects/Project.js-285-
/src/lib/storage/localfilesystem/projects/Project.js:286:        globalProjectSettings.projects[this.name].credentialSecret = project.credentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-287-        delete this.credentialSecretInvalid;
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-840-        settings: {
/src/lib/storage/localfilesystem/projects/Project.js:841:            credentialsEncrypted: (typeof this.credentialSecret === "string") && this.credentialSecret.length > 0,
/src/lib/storage/localfilesystem/projects/Project.js-842-            credentialSecretInvalid: this.credentialSecretInvalid
##############################################
/src/lib/storage/localfilesystem/projects/Project.js-1005-                if (metadata.hasOwnProperty('credentialSecret')) {
/src/lib/storage/localfilesystem/projects/Project.js:1006:                    if (metadata.credentialSecret === "") {
/src/lib/storage/localfilesystem/projects/Project.js:1007:                        metadata.credentialSecret = false;
/src/lib/storage/localfilesystem/projects/Project.js-1008-                    }
/src/lib/storage/localfilesystem/projects/Project.js:1009:                    projects.projects[project].credentialSecret = metadata.credentialSecret;
/src/lib/storage/localfilesystem/projects/Project.js-1010-                }
##############################################
/src/lib/storage/localfilesystem/projects/index.js-380-        if (!metadata.hasOwnProperty('credentialSecret')) {
/src/lib/storage/localfilesystem/projects/index.js:381:            metadata.credentialSecret = currentEncryptionKey;
/src/lib/storage/localfilesystem/projects/index.js-382-        }
##############################################
/src/lib/storage/localfilesystem/projects/index.js-391-        metadata.files.oldCredentials = credentialsFile;
/src/lib/storage/localfilesystem/projects/index.js:392:        metadata.files.credentialSecret = currentEncryptionKey;
/src/lib/storage/localfilesystem/projects/index.js-393-    }
