<report_mosca>
 <Path>/src/huemagic/hue-rules.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 24 -  		// UPDATE STATE

 Line: 31 -  		// ON UPDATE

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-magic.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 42 -  					setTimeout(function(){ callback(); }, ms);

 Line: 109 -  						setTimeout(function(){ callback(); }, parseFloat(step.transitionTime)*1000);

 Line: 113 -  						setTimeout(function(){ callback(); }, 200);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-brightness.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 33 -  		// UPDATE STATE

 Line: 40 -  		// ON UPDATE

 Line: 45 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-button.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -  		// UPDATE STATE

 Line: 44 -  		// ON UPDATE

 Line: 49 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-bridge.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 15 -  		setTimeout(function(){ scope.deviceUpdates = true; }, 5000);

 Line: 54 -  					setTimeout(function(){ scope.getBridgeInformation(); }, 3000);

 Line: 80 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 60000 * 5);

 Line: 87 -  						setTimeout(function(){ scope.autoUpdateHueBridge(); }, 60000 * 180);

 Line: 195 -  					setTimeout(function(){ scope.getBridgeInformation(); }, 30000);

 Line: 200 -  					setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 215 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 227 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 235 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 247 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 255 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 267 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 275 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 287 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 295 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 307 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 315 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 327 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 335 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 347 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 355 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 367 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 375 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 387 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 395 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 407 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 415 -  						setTimeout(function(){ scope.status({fill: "grey", shape: "dot", text: "hue-bridge.node.connected" }); }, 2000);

 Line: 427 -  						setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 481 -  					setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

 Line: 486 -  					setTimeout(function(){ scope.getBridgeInformation(); }, 2000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-bridge.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -  		// UPDATE STATE

 Line: 64 -  		// AUTO UPDATES?

 Line: 84 -  					// NO UPDATES AVAILABLE // TRY AGAIN IN 3H

 Line: 96 -  		// DEVICE UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-motion.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 32 -  		// UPDATE STATE

 Line: 39 -  		// ON UPDATE

 Line: 44 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-switch.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -  		// UPDATE STATE

 Line: 44 -  		// ON UPDATE

 Line: 49 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-bridge-config.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 32 -  			return new Promise(resolve => setTimeout(resolve, ms));

 Line: 67 -  				if(scope.nodeActive == true && proceed == true) { setTimeout(function(){ scope.recheckAll(); }, config.interval); }

 Line: 75 -  					setTimeout(function(){ scope.recheckAll(); }, 5000);

 Line: 91 -  				if(scope.nodeActive == true && proceed == true) { setTimeout(function(){ scope.recheckSensors(); }, config.interval); }

 Line: 99 -  					setTimeout(function(){ scope.recheckSensors(); }, 5000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-bridge-config.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 114 -  		// DETERMINE UPDATES

 Line: 196 -  				// IS UPDATED?

 Line: 203 -  			// RETURN UPDATES

 Line: 207 -  		// EMIT UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-light.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 218 -  						setTimeout(function() {

 Line: 483 -  							setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-light.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 43 -  		// UPDATE STATE

 Line: 50 -  		// ON UPDATE

 Line: 55 -  		// RECEIVED UPDATES

 Line: 490 -  					// SET DOMINANT COLORS FROM IMAGE

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-temperature.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 38 -  		// UPDATE STATE

 Line: 45 -  		// ON UPDATE

 Line: 50 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-scene.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 104 -  					setTimeout(function() {

 Line: 130 -  					setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-group.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 191 -  					setTimeout(function() {

 Line: 455 -  							setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-group.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 43 -  		// UPDATE STATE

 Line: 50 -  		// ON UPDATE

 Line: 55 -  		// RECEIVED UPDATES

 Line: 462 -  					// SET DOMINANT COLORS FROM IMAGE

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/huemagic/hue-tap.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -  		// UPDATE STATE

 Line: 44 -  		// ON UPDATE

 Line: 49 -  		// RECEIVED UPDATES

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/utils/merge.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 7 -      // CLEANUP FROM HTTP NODE

</Result>
</report_mosca>

