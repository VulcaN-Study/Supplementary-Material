/src/config-defs.js-7-  , semver = require("semver")
/src/config-defs.js:8:  , stableFamily = semver.parse(process.version)
/src/config-defs.js-9-  , nopt = require("nopt")
##############################################
/src/lib/nerf-dart.js-14-function toNerfDart(uri) {
/src/lib/nerf-dart.js:15:  var parsed = url.parse(uri)
/src/lib/nerf-dart.js-16-  parsed.pathname = "/"
##############################################
/src/lib/load-cafile.js-8-
/src/lib/load-cafile.js:9:  fs.readFile(cafilePath, 'utf8', afterCARead.bind(this))
/src/lib/load-cafile.js-10-
##############################################
/src/test/save.js-62-    var foundConf = ini.stringify(conf.sources.user.data)
/src/test/save.js:63:    t.same(ini.parse(foundConf), ini.parse(expectConf))
/src/test/save.js-64-    fs.unlinkSync(common.userconfig)
##############################################
/src/test/save.js-68-      var uc = fs.readFileSync(conf.get('userconfig'), 'utf8')
/src/test/save.js:69:      t.same(ini.parse(uc), ini.parse(expectFile))
/src/test/save.js-70-      t.end()
##############################################
/src/npmconf.js-264-  if (!data.trim()) {
/src/npmconf.js:265:    fs.unlink(target.path, function (er) {
/src/npmconf.js-266-      // ignore the possible error (e.g. the file doesn't exist)
##############################################
/src/npmconf.js-272-        return then(er)
/src/npmconf.js:273:      fs.writeFile(target.path, data, 'utf8', function (er) {
/src/npmconf.js-274-        if (er)
##############################################
/src/npmconf.js-310-  this._await()
/src/npmconf.js:311:  fs.readFile(file, 'utf8', function (er, data) {
/src/npmconf.js-312-    if (er) // just ignore missing files.
##############################################
/src/npmconf.js-364-  if (f.match(/^".*"$/))
/src/npmconf.js:365:    f = JSON.parse(f)
/src/npmconf.js-366-
