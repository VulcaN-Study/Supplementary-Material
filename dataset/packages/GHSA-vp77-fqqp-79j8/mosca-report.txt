<report_mosca>
 <Path>/src/src/data/Store.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  Adapters to update or query your persistence layer as needed.

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/decal/mocks/MockAdapter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 15 -      return new Promise((resolve, reject) => setTimeout(() => resolve(record)), 500)

 Line: 19 -      return new Promise((resolve, reject) => setTimeout(() => resolve(record)), 500)

 Line: 23 -      return new Promise((resolve, reject) => setTimeout(() => resolve(record)), 500)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/run-tests.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 49 -  timeout = setTimeout(function () {

</Result>
</report_mosca>

