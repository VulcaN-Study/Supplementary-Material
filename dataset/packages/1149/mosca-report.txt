<report_mosca>
 <Path>/src/build/node/CyberChef.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1054 -  i=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Sleep",e.module="Default",e.description="Sleep causes the recipe to wait for a specified number of milliseconds before continuing execution.",e.inputType="ArrayBuffer",e.outputType="ArrayBuffer",e.args=[{name:"Time (ms)",type:"number",value:1e3}],e}return d()(t,e),o()(t,[{key:"run",value:function(){var e=ut()(st.a.mark(function e(t,a){var r;return st.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r=a[0],e.next=3,new Promise(function(e){return setTimeout(e,r)});case 3:return e.abrupt("return",t);case 4:case"end":return e.stop()}},e)}));return function(t,a){return e.apply(this,arguments)}}()}]),t}(h.a),di=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Sort",e.module="Default",e.description="Alphabetically sorts strings separated by the specified delimiter.<br><br>The IP address option supports IPv4 only.",e.inputType="string",e.outputType="string",e.args=[{name:"Delimiter",type:"option",value:b},{name:"Reverse",type:"boolean",value:!1},{name:"Order",type:"option",value:["Alphabetical (case sensitive)","Alphabetical (case insensitive)","IP address","Numeric","Numeric (hexadecimal)"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,a){var r=f.a.charRep(a[0]),n=a[1],i=a[2],o=e.split(r);return"Alphabetical (case sensitive)"===i?o=o.sort():"Alphabetical (case insensitive)"===i?o=o.sort(t._caseInsensitiveSort):"IP address"===i?o=o.sort(t._ipSort):"Numeric"===i?o=o.sort(t._numericSort):"Numeric (hexadecimal)"===i&&(o=o.sort(t._hexadecimalSort)),n&&o.reverse(),o.join(r)}}],[{key:"_caseInsensitiveSort",value:function(e,t){return e.toLowerCase().localeCompare(t.toLowerCase())}},{key:"_ipSort",value:function(e,t){var a=e.split("."),r=t.split(".");return a=16777216*a[0]+65536*a[1]+256*a[2]+1*a[3],r=16777216*r[0]+65536*r[1]+256*r[2]+1*r[3],isNaN(a)&&!isNaN(r)?1:!isNaN(a)&&isNaN(r)?-1:isNaN(a)&&isNaN(r)?e.localeCompare(t):a-r}},{key:"_numericSort",value:function(e,t){for(var a=e.split(/([^\d]+)/),r=t.split(/([^\d]+)/),n=0;n<a.length&&n<t.len</Result>
</report_mosca>

<report_mosca>
 <Path>/src/build/node/CyberChef.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 534 -  "MD2","MD4","MD5","SHA0","SHA1","SHA224","SHA256","SHA384","SHA512","SHA512/224","SHA512/256","RIPEMD128","RIPEMD160","RIPEMD256","RIPEMD320","HAS160","Whirlpool","Whirlpool-0","Whirlpool-T","Snefru"]}]},"HTML To Text":{module:"Default",description:"Converts an HTML output from an operation to a readable string instead of being rendered in the DOM.",infoURL:"",inputType:"html",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"HTTP request":{module:"Default",description:"Makes an HTTP request and returns the response.\n<br><br>\nThis operation supports different HTTP verbs like GET, POST, PUT, etc.\n<br><br>\nYou can add headers line by line in the format <code>Key: Value</code>\n<br><br>\nThe status code of the response, along with a limited selection of exposed headers, can be viewed by checking the 'Show response metadata' option. Only a limited set of response headers are exposed by the browser for security reasons.",infoURL:"https://wikipedia.org/wiki/List_of_HTTP_header_fields#Request_fields",inputType:"string",outputType:"string",flowControl:!1,manualBake:!0,args:[{name:"Method",type:"option",value:["GET","POST","HEAD","PUT","PATCH","DELETE","CONNECT","TRACE","OPTIONS"]},{name:"URL",type:"string",value:""},{name:"Headers",type:"text",value:""},{name:"Mode",type:"option",value:["Cross-Origin Resource Sharing","No CORS (limited to HEAD, GET or POST)"]},{name:"Show response metadata",type:"boolean",value:!1}]},"Hamming Distance":{module:"Default",description:"In information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. In other words, it measures the minimum number of substitutions required to change one string into the other, or the minimum number of errors that could have transformed one string into the other. In a more general context, the Hamming distance is one of several string metrics for measuring the edit distance between two sequences.",infoURL:"https://wikipedia.org/wiki/Hamming_distance",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,arg Line: 537 -  min:-360,max:360},{name:"Saturation",type:"number",value:0,min:-100,max:100},{name:"Lightness",type:"number",value:0,min:-100,max:100}]},"Image Opacity":{module:"Image",description:"Adjust the opacity of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Opacity (%)",type:"number",value:100,min:0,max:100}]},"Invert Image":{module:"Image",description:"Invert the colours of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},"JPath expression":{module:"Code",description:"Extract information from a JSON object with a JPath query.",infoURL:"http://goessner.net/articles/JsonPath/",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Query",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}]},"JSON Beautify":{module:"Code",description:"Indents and prettifies JavaScript Object Notation (JSON) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"    "},{name:"Sort Object Keys",type:"boolean",value:!1}]},"JSON Minify":{module:"Code",description:"Compresses JavaScript Object Notation (JSON) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"JSON to CSV":{module:"Default",description:"Converts JSON data to a CSV based on the definition in RFC 4180.",infoURL:"https://wikipedia.org/wiki/Comma-separated_values",inputType:"JSON",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Cell delimiter",type:"binaryShortString",value:","},{name:"Row delimiter",type:"binaryShortString",value:"\\r\\n"}]},"JWT Decode":{module:"Crypto",description:"Decodes a JSON Web Token <b>without</b> checking whether the provided secret / private key is valid. Use 'JWT Verify' to check if the signature is valid as well.",infoURL:"https://wikipedia.org/wiki/JSON_Web_Token",inputType:"string",outputType:"JSON",flowControl:!1,manualBake:!1,args:[]},"JWT Sign":{module:"Crypto",description:"Signs a JSON objec Line: 597 -  xpression":{module:"Code",description:"Extract information from an XML document with an XPath query",infoURL:"https://wikipedia.org/wiki/XPath",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"XPath",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}]},"YARA Rules":{module:"Yara",description:"YARA is a tool developed at VirusTotal, primarily aimed at helping malware researchers to identify and classify malware samples. It matches based on rules specified by the user containing textual or binary patterns and a boolean expression. For help on writing rules, see the <a href='https://yara.readthedocs.io/en/latest/writingrules.html'>YARA documentation.</a>",infoURL:"https://wikipedia.org/wiki/YARA",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Rules",type:"text",value:"",rows:5},{name:"Show strings",type:"boolean",value:!1},{name:"Show string lengths",type:"boolean",value:!1},{name:"Show metadata",type:"boolean",value:!1},{name:"Show counts",type:"boolean",value:!0}]},Zip:{module:"Compression",description:"Compresses data using the PKZIP algorithm with the given filename.<br><br>No support for multiple files at this time.",infoURL:"https://wikipedia.org/wiki/Zip_(file_format)",inputType:"ArrayBuffer",outputType:"File",flowControl:!1,manualBake:!1,args:[{name:"Filename",type:"string",value:"file.txt"},{name:"Comment",type:"string",value:""},{name:"Password",type:"binaryString",value:""},{name:"Compression method",type:"option",value:["Deflate","None (Store)"]},{name:"Operating system",type:"option",value:["MSDOS","Unix","Macintosh"]},{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding","None (Store)"]}]},"Zlib Deflate":{module:"Compression",description:"Compresses data using the deflate algorithm adding zlib headers.",infoURL:"https://wikipedia.org/wiki/Zlib",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding"," Line: 792 -  turn a[n]-r[n];return 0}var Kr='The specified range contains more than 65,536 addresses. Running this query could crash your browser. If you want to run it, select the "Allow large queries" option. You are advised to turn off "Auto Bake" whilst editing large ranges.',Wr=/^\s*((?:\d{1,3}\.){3}\d{1,3})\s*$/,Xr=/^\s*(((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\4)::|:\b|(?![\dA-F])))|(?!\3\4)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4}))\s*$/i,Qr={0:{keyword:"HOPOPT",protocol:"IPv6 Hop-by-Hop Option"},1:{keyword:"ICMP",protocol:"Internet Control Message"},2:{keyword:"IGMP",protocol:"Internet Group Management"},3:{keyword:"GGP",protocol:"Gateway-to-Gateway"},4:{keyword:"IPv4",protocol:"IPv4 encapsulation"},5:{keyword:"ST",protocol:"Stream"},6:{keyword:"TCP",protocol:"Transmission Control"},7:{keyword:"CBT",protocol:"CBT"},8:{keyword:"EGP",protocol:"Exterior Gateway Protocol"},9:{keyword:"IGP",protocol:"any private interior gateway (used by Cisco for their IGRP)"},10:{keyword:"BBN-RCC-MON",protocol:"BBN RCC Monitoring"},11:{keyword:"NVP-II",protocol:"Network Voice Protocol"},12:{keyword:"PUP",protocol:"PUP"},13:{keyword:"ARGUS (deprecated)",protocol:"ARGUS"},14:{keyword:"EMCON",protocol:"EMCON"},15:{keyword:"XNET",protocol:"Cross Net Debugger"},16:{keyword:"CHAOS",protocol:"Chaos"},17:{keyword:"UDP",protocol:"User Datagram"},18:{keyword:"MUX",protocol:"Multiplexing"},19:{keyword:"DCN-MEAS",protocol:"DCN Measurement Subsystems"},20:{keyword:"HMP",protocol:"Host Monitoring"},21:{keyword:"PRM",protocol:"Packet Radio Measurement"},22:{keyword:"XNS-IDP",protocol:"XEROX NS IDP"},23:{keyword:"TRUNK-1",protocol:"Trunk-1"},24:{keyword:"TRUNK-2",protocol:"Trunk-2"},25:{keyword:"LEAF-1",protocol:"Leaf-1"},26:{keyword:"LEAF-2",protocol:"Leaf-2"},27:{keyword:"RDP",protocol:"Reliable Data Protocol"},28:{keyword:"IRTP",protocol:"Internet Reliable Transaction"},29:{keyword:"ISO-TP4",protocol:"ISO Transport Protocol Class 4"},30:{keyword:"NETBLT",protocol:"Bulk Data Transfer Protocol"},31:{keyword:"MFE-NSP",protocol:"MFE Network Services Protocol"},3 Line: 797 -  ing",e.outputType="string",e.manualBake=!0,e.args=[{name:"Method",type:"option",value:["GET","POST","HEAD","PUT","PATCH","DELETE","CONNECT","TRACE","OPTIONS"]},{name:"URL",type:"string",value:""},{name:"Headers",type:"text",value:""},{name:"Mode",type:"option",value:["Cross-Origin Resource Sharing","No CORS (limited to HEAD, GET or POST)"]},{name:"Show response metadata",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,5),r=a[0],n=a[1],i=a[2],o=a[3],s=a[4];if(0===n.length)return"";var l=new Headers;i.split(/\r?\n/).forEach(function(e){if(0!==(e=e.trim()).length){var t=e.split(":");if(2!==t.length)throw"Could not parse header in line: ".concat(e);l.set(t[0].trim(),t[1].trim())}});var u={method:r,headers:l,mode:Yr[o],cache:"no-cache"};return"GET"!==r&&"HEAD"!==r&&(u.body=e),fetch(n,u).then(function(e){if(0===e.status&&"opaque"===e.type)throw new B.a("Error: Null response. Try setting the connection mode to CORS.");if(s){var t="",a=!0,r=!1,n=void 0;try{for(var i,o=e.headers.entries()[Symbol.iterator]();!(a=(i=o.next()).done);a=!0){var l=i.value;t+="    "+l[0]+": "+l[1]+"\n"}}catch(e){r=!0,n=e}finally{try{a||null==o.return||o.return()}finally{if(r)throw n}}return e.text().then(function(a){return"####\n  Status: "+e.status+" "+e.statusText+"\n  Exposed headers:\n"+t+"####\n\n"+a})}return e.text()}).catch(function(e){throw new B.a(e.toString()+"\n\nThis error could be caused by one of the following:\n - An invalid URL\n - Making a request to an insecure resource (HTTP) from a secure source (HTTPS)\n - Making a cross-origin request to a server which does not support CORS\n")})}}]),t}(h.a),Yr={"Cross-Origin Resource Sharing":"cors","No CORS (limited to HEAD, GET or POST)":"no-cors"},jr=Jr,qr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Hamming Distance",e.module="Default",e.description="In information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. In other words, it measures the minimum number of substit Line: 1085 -        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

 Line: 1198 -    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH

 Line: 1202 -  place(/([^*])\*([^*=])/g,"$1 * $2").replace(/([^\/])\/([^\/=])/g,"$1 / $2").replace(/\s*,\s*/g,", ").replace(/\s*{/g," {").replace(/}\n/g,"}\n\n").replace(/(if|for|while|with|elif|elseif)\s*\(([^\n]*)\)\s*\n([^{])/gim,"$1 ($2)\n    $3").replace(/(if|for|while|with|elif|elseif)\s*\(([^\n]*)\)([^{])/gim,"$1 ($2) $3").replace(/else\s*\n([^{])/gim,"else\n    $1").replace(/else\s+([^{])/gim,"else $1").replace(/\s+;/g,";").replace(/\{\s+\}/g,"{}").replace(/\[\s+\]/g,"[]").replace(/}\s*(else|catch|except|finally|elif|elseif|else if)/gi,"} $1");for(var m=/###preservedToken(\d+)###/g;a=m.exec(n);){var g=parseInt(a[1],10);n=n.substring(0,a.index)+r[g]+n.substring(a.index+a[0].length),m.lastIndex=a.index}return n;function y(e,t,a){return r[a]=t[0],e.substring(0,t.index)+"###preservedToken"+a+"###"+e.substring(t.index+t[0].length)}}}]),t}(h.a),xu=a(76),Lu=a.n(xu),Uu=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JPath expression",e.module="Code",e.description="Extract information from a JSON object with a JPath query.",e.infoURL="http://goessner.net/articles/JsonPath/",e.inputType="string",e.outputType="string",e.args=[{name:"Query",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a,r,n=I()(t,2),i=n[0],o=n[1];try{r=JSON.parse(e)}catch(e){throw new B.a("Invalid input JSON: ".concat(e.message))}try{a=Lu.a.query(r,i)}catch(e){throw new B.a("Invalid JPath expression: ".concat(e.message))}return a.map(function(e){return JSON.stringify(e)}).join(o)}}]),t}(h.a),Ou=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JSON Beautify",e.module="Code",e.description="Indents and prettifies JavaScript Object Notation (JSON) code.",e.inputType="string",e.outputType="string",e.args=[{name:"Indent string",type:"binaryShortString",value:"    "},{name:"Sort Object Keys",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,a){var r=I()(a,2),n=r[0],i=r[1];return e?(i&&(e=JSON.stringify(t._sort(JSON.parse(e)))) Line: 1219 -  {function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="To Snake case",e.module="Code",e.description="Converts the input string to snake case.\n<br><br>\nSnake case is all lower case with underscores as word boundaries.\n<br><br>\ne.g. this_is_snake_case\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names.",e.infoURL="https://wikipedia.org/wiki/Snake_case",e.inputType="string",e.outputType="string",e.args=[{name:"Attempt to be context aware",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return t[0]?ec(e,sc.a):sc()(e)}}]),t}(h.a),uc=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="XML Beautify",e.module="Code",e.description="Indents and prettifies eXtensible Markup Language (XML) code.",e.inputType="string",e.outputType="string",e.args=[{name:"Indent string",type:"binaryShortString",value:"\\t"}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=t[0];return Su.a.xml(e,a)}}]),t}(h.a),cc=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="XML Minify",e.module="Code",e.description="Compresses eXtensible Markup Language (XML) code.",e.inputType="string",e.outputType="string",e.args=[{name:"Preserve comments",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=t[0];return Su.a.xmlmin(e,a)}}]),t}(h.a),pc=a(77),dc=a.n(pc),hc=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="XPath expression",e.module="Code",e.description="Extract information from an XML document with an XPath query",e.infoURL="https://wikipedia.org/wiki/XPath",e.inputType="string",e.outputType="string",e.args=[{name:"XPath",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a,r,n=I()(t,2),i=n[0],o=n[1];try{a=(new ku.a.DOMParser).parseFromString(e,"application/xml")}catch(e){throw new B.a("Invalid input XML.")}try{r=dc.a.parse(i).select({no Line: 1229 -  LD","","???"],["PSLLD","","???"]],"",""],"???"],["???",["???","???",[["PSRLQ","PSRLQ","",""],"PSRLQ","",""],["???","PSRLDQ","???","???"],"???","???",[["PSLLQ","PSLLQ","",""],"PSLLQ","",""],["???","PSLLDQ","???","???"]]],[["PCMPEQB","","",""],["PCMPEQB","PCMPEQB","PCMPEQB",""],"",""],[["PCMPEQW","","",""],["PCMPEQW","PCMPEQW","PCMPEQW",""],"",""],[["PCMPEQD","","",""],["PCMPEQD","PCMPEQD",["PCMPEQD","","???"],["PCMPEQD","","???"]],"",""],[["EMMS",["ZEROUPPER","ZEROALL",""],"",""],"???","???","???"],[["VMREAD","",["CVTTPS2UDQ","","CVTTPD2UDQ"],""],["EXTRQ","",["CVTTPS2UQQ","","CVTTPD2UQQ"],""],["???","","CVTTSS2USI",""],["INSERTQ","","CVTTSD2USI",""]],[["VMWRITE","",["CVTPS2UDQ","","CVTPD2UDQ"],""],["EXTRQ","",["CVTPS2UQQ","","CVTPD2UQQ"],""],["???","","CVTSS2USI",""],["INSERTQ","","CVTSD2USI",""]],["???",["","",["CVTTPS2QQ","","CVTTPD2QQ"],""],["","",["CVTUDQ2PD","","CVTUQQ2PD"],"CVTUDQ2PD"],["","",["CVTUDQ2PS","","CVTUQQ2PS"],""]],["???",["","",["CVTPS2QQ","","CVTPD2QQ"],""],["","","CVTUSI2SS",""],["","","CVTUSI2SD",""]],["???",["HADDPD","HADDPD","",""],"???",["HADDPS","HADDPS","",""]],["???",["HSUBPD","HSUBPD","",""],"???",["HSUBPS","HSUBPS","",""]],[["MOVD","","",""],["MOVD","","MOVQ"],["MOVQ","MOVQ",["???","","MOVQ"],""],"???"],[["MOVQ","","",""],["MOVDQA","MOVDQA",["MOVDQA32","","MOVDQA64"],["MOVDQA32","","MOVDQA64"]],["MOVDQU","MOVDQU",["MOVDQU32","","MOVDQU64"],""],["???","",["MOVDQU8","","MOVDQU16"],""]],"JO","JNO","JB","JAE",[["JE","JKZD","",""],"","",""],[["JNE","JKNZD","",""],"","",""],"JBE","JA","JS","JNS","JP","JNP","JL","JGE","JLE","JG",[["SETO",["KMOVW","","KMOVQ"],"",""],["SETO",["KMOVB","","KMOVD"],"",""],"",""],[["SETNO",["KMOVW","","KMOVQ"],"",""],["SETNO",["KMOVB","","KMOVD"],"",""],"",""],[["SETB",["KMOVW","","???"],"",""],["SETB",["KMOVB","","???"],"",""],"",["SETB",["KMOVD","","KMOVQ"],"",""]],[["SETAE",["KMOVW","","???"],"",""],["SETAE",["KMOVB","","???"],"",""],"",["SETAE",["KMOVD","","KMOVQ"],"",""]],"SETE",[["SETNE","KCONCATH","",""],"","",""],"SETBE",[["SETA","KCONCATL","",""],"","",""],[["SETS",["KORTESTW","","KORTESTQ"],"",""],["SETS",["KORTESTB" Line: 1239 -  ","???"]],"???","???"],["???",["ROUNDPS","ROUNDPS",["RNDSCALEPS","","???"],""],"???","???"],["???",["ROUNDPD","ROUNDPD","RNDSCALEPD",""],"???","???"],["???",["ROUNDSS","ROUNDSS",["RNDSCALESS","","???"],""],"???","???"],["???",["ROUNDSD","ROUNDSD","RNDSCALESD",""],"???","???"],["???",["BLENDPS","BLENDPS","",""],"???","???"],["???",["BLENDPD","BLENDPD","",""],"???","???"],["???",["PBLENDW","PBLENDW","",""],"???","???"],[["PALIGNR","","",""],"PALIGNR","???","???"],"???","???","???","???",[["???","PEXTRB","???","???"],["???","PEXTRB","???","???"]],[["???","PEXTRW","???","???"],["???","PEXTRW","???","???"]],["???",["PEXTRD","","PEXTRQ"],"???","???"],["???","EXTRACTPS","???","???"],["???",["","INSERTF128",["INSERTF32X4","","INSERTF64X2"],""],"???","???"],["???",["","EXTRACTF128",["EXTRACTF32X4","","EXTRACTF64X2"],""],"???","???"],["???",["","",["INSERTF32X8","","INSERTF64X4"],""],"???","???"],["???",["","",["EXTRACTF32X8","","EXTRACTF64X4"],""],"???","???"],"???",["???",["","CVTPS2PH",["CVTPS2PH","","???"],""],"???","???"],["???",["","",["PCMP,UD,","","PCMP,UQ,"],["PCMP,UD,","","???"]],"???","???"],["???",["","",["PCM,PD,","","PCM,PQ,"],["PCM,PD,","","???"]],"???","???"],["???","PINSRB","???","???"],["???",["INSERTPS","","???"],"???","???"],["???",["",["PINSRD","","PINSRQ"],["PINSRD","","PINSRQ"],""],"???","???"],["???",["","",["SHUFF32X4","","SHUFF64X2"],""],"???","???"],"???",["???",["","",["PTERNLOGD","","PTERNLOGQ"],""],"???","???"],["???",["","",["GETMANTPS","","GETMANTPD"],["GETMANTPS","","GETMANTPD"]],"???","???"],["???",["","",["GETMANTSS","","GETMANTSD"],""],"???","???"],"???","???","???","???","???","???","???","???",["???",["",["KSHIFTRB","","KSHIFTRW"],"",""],"???","???"],["???",["",["KSHIFTRD","","KSHIFTRQ"],"",""],"???","???"],["???",["",["KSHIFTLB","","KSHIFTLW"],"",""],"???","???"],["???",["",["KSHIFTLD","","KSHIFTLQ"],"",""],"???","???"],"???","???","???","???",["???",["","INSERTI128",["INSERTI32X4","","INSERTI64X2"],""],"???","???"],["???",["","EXTRACTI128",["EXTRACTI32X4","","EXTRACTI64X2"],""],"???","???"],["???",["","",["INSERTI32X8","","INSERTI64X4"],""],"??? Line: 1245 -  32PD","",""],"???","???","???",["VMSUBR231PS","VMSUBR231PD","",""],"???",["VMSUBR213PS","VMSUBR213PD","",""],"???",["VMSUBR132PS","VMSUBR132PD","",""],"???",["VMSUBR23C1PS","VMSUBR23C1PD","",""],"???",["VMULPS","VMULPD","",""],"VMULHPI","VMULHPU","VMULLPI","???","???","VCLAMPZPS","VCLAMPZPI",["VMAXPS","VMAXPD","",""],"VMAXPI","VMAXPU","???",["VMINPS","VMINPD","",""],"VMINPI","VMINPU","???",["???","VCVT,PD2PS,","",""],["VCVTPS2PI","VCVT,PD2PI,","",""],["VCVTPS2PU","VCVT,PD2PU,","",""],"???",["???","VCVT,PS2PD,","",""],["VCVTPI2PS","VCVT,PI2PD,","",""],["VCVTPU2PS","VCVT,PU2PD,","",""],"???","VROUNDPS","???","VCVTINSPS2U10","VCVTINSPS2F11","???","VCVTPS2SRGB8","VMAXABSPS","???","VSLLPI","VSRAPI","VSRLPI","???",["VANDNPI","VANDNPQ","",""],["VANDPI","VANDPQ","",""],["VORPI","VORPQ","",""],["VXORPI","VXORPQ","",""],"VBINTINTERLEAVE11PI","VBINTINTERLEAVE21PI","???","???","???","???","???","???","VEXP2LUTPS","VLOG2LUTPS","VRSQRTLUTPS","???","VGETEXPPS","???","???","???","VSCALEPS","???","???","???","???","???","???","???","VRCPRESPS","???","VRCPREFINEPS","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","???","VFIXUPPS","VSHUF128X32","VINSERTFIELDPI","VROTATEFIELDPI","???","???","???","???","???","???","???","???","???","???","???","???",["???","BSFI"],["???","BSFI"],["???","BSFI"],["???","BSFI"],["???","BSRI"],["???","BSRI"],["???","BSRI"],["???","BSRI"],["???","BSFF"],["???","BSFF"],["???","BSFF"],["???","BSFF"],["???","BSRF"],["???","BSRF"],["???","BSRF"],["???","BSRF"],["???","BITINTERLEAVE11"],["???","BITINTERLEAVE11"],["???","BITINTERLEAVE11"],["???","BITINTERLEAVE11"],["???","BITINTERLEAVE21"],["???","BITINTERLEAVE21"],["???","BITINTERLEAVE21"],["???","BITINTERLEAVE21"],["???","INSERTFIELD"],["???","INSERTFIELD"],["???","INSERTFIELD"],["???","INSERTFIELD"],["???","ROTATEFIELD"],["???","ROTATEFIELD"],["???","ROTATEFIELD"],["???","ROTATEFIELD"],["???","COUNTBITS"],[" Line: 1272 -  ""],["CMOVNO",["KANDB","","KANDD"],"",""],"",""],Qc[322]=[["CMOVB",["KANDNW","","KANDNQ"],"",""],["CMOVB",["KANDNB","","KANDND"],"",""],"",""],Qc[324]=[["CMOVE",["KNOTW","","KNOTQ"],"",""],["CMOVE",["KNOTB","","KNOTD"],"",""],"",""],Qc[325]=[["CMOVNE",["KORW","","KORQ"],"",""],["CMOVNE",["KORB","","KORD"],"",""],"",""],Qc[326]=[["CMOVBE",["KXNORW","","KXNORQ"],"",""],["CMOVBE",["KXNORB","","KXNORD"],"",""],"",""],Qc[327]=[["CMOVA",["KXORW","","KXORQ"],"",""],["CMOVA",["KXORB","","KXORD"],"",""],"",""],Qc[336]=["???",[["MOVMSKPS","MOVMSKPS","",""],["MOVMSKPD","MOVMSKPD","",""],"???","???"]],Qc[337]=["SQRTPS","SQRTPD","SQRTSS","SQRTSD"],Qc[338]=[["RSQRTPS","RSQRTPS","",""],"???",["RSQRTSS","RSQRTSS","",""],"???"],Qc[340]=["ANDPS","ANDPD","???","???"],Qc[341]=["ANDNPS","ANDNPD","???","???"],Qc[344]=[["ADDPS","ADDPS","ADDPS","ADDPS"],["ADDPD","ADDPD","ADDPD","ADDPD"],"ADDSS","ADDSD"],Qc[345]=[["MULPS","MULPS","MULPS","MULPS"],["MULPD","MULPD","MULPD","MULPD"],"MULSS","MULSD"],Qc[346]=[["CVTPS2PD","CVTPS2PD","CVTPS2PD","CVTPS2PD"],["CVTPD2PS","CVTPD2PS","CVTPD2PS","CVTPD2PS"],"CVTSS2SD","CVTSD2SS"],Qc[347]=[[["CVTDQ2PS","","CVTQQ2PS"],"CVTPS2DQ",""],"???","CVTTPS2DQ","???"],Qc[348]=[["SUBPS","SUBPS","SUBPS","SUBPS"],["SUBPD","SUBPD","SUBPD","SUBPD"],"SUBSS","SUBSD"],Qc[349]=["MINPS","MINPD","MINSS","MINSD"],Qc[350]=["DIVPS","DIVPD","DIVSS","DIVSD"],Qc[376]=[["VMREAD","",["CVTTPS2UDQ","","CVTTPD2UDQ"],""],["EXTRQ","",["CVTTPS2UQQ","","CVTTPD2UQQ"],""],["???","","CVTTSS2USI",""],["INSERTQ","","CVTTSD2USI",""]],Qc[377]=[["VMWRITE","",["CVTPS2UDQ","","CVTPD2UDQ"],""],["EXTRQ","",["CVTPS2UQQ","","CVTPD2UQQ"],""],["???","","CVTSS2USI",""],["INSERTQ","","CVTSD2USI",""]],Qc[378]=["???",["","",["CVTTPS2QQ","","CVTTPD2QQ"],""],["","",["CVTUDQ2PD","","CVTUQQ2PD"],"CVTUDQ2PD"],["","",["CVTUDQ2PS","","CVTUQQ2PS"],""]],Qc[379]=["???",["","",["CVTPS2QQ","","CVTPD2QQ"],""],["","","CVTUSI2SS",""],["","","CVTUSI2SD",""]],Qc[380]=["???",["HADDPD","HADDPD","",""],"???",["HADDPS","HADDPS","",""]],Qc[381]=["???",["HSUBPD","HSUBPD","",""],"???",["HSUBPS","HSUBPS","",""]],Qc[382]=[["MOVD","","",""],["MO</Result>
</report_mosca>

