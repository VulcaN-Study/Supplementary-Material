/src/src/web/OutputWaiter.mjs-78-                    try {
/src/src/web/OutputWaiter.mjs:79:                        eval(scriptElements[i].innerHTML); // eslint-disable-line no-eval
/src/src/web/OutputWaiter.mjs-80-                    } catch (err) {
##############################################
/src/src/core/operations/HTTPRequest.mjs-127-                    " - An invalid URL\n" +
/src/src/core/operations/HTTPRequest.mjs:128:                    " - Making a request to an insecure resource (HTTP) from a secure source (HTTPS)\n" +
/src/src/core/operations/HTTPRequest.mjs-129-                    " - Making a cross-origin request to a server which does not support CORS\n");
##############################################
/src/src/core/operations/DESEncrypt.mjs-24-        this.module = "Ciphers";
/src/src/core/operations/DESEncrypt.mjs:25:        this.description = "DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.";
/src/src/core/operations/DESEncrypt.mjs-26-        this.infoURL = "https://wikipedia.org/wiki/Data_Encryption_Standard";
##############################################
/src/src/core/operations/DESDecrypt.mjs-24-        this.module = "Ciphers";
/src/src/core/operations/DESDecrypt.mjs:25:        this.description = "DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.";
/src/src/core/operations/DESDecrypt.mjs-26-        this.infoURL = "https://wikipedia.org/wiki/Data_Encryption_Standard";
##############################################
/src/src/core/operations/Snefru.mjs-22-        this.module = "Crypto";
/src/src/core/operations/Snefru.mjs:23:        this.description = "Snefru is a cryptographic hash function invented by Ralph Merkle in 1990 while working at Xerox PARC. The function supports 128-bit and 256-bit output. It was named after the Egyptian Pharaoh Sneferu, continuing the tradition of the Khufu and Khafre block ciphers.<br><br>The original design of Snefru was shown to be insecure by Eli Biham and Adi Shamir who were able to use differential cryptanalysis to find hash collisions. The design was then modified by increasing the number of iterations of the main pass of the algorithm from two to eight.";
/src/src/core/operations/Snefru.mjs-24-        this.infoURL = "https://wikipedia.org/wiki/Snefru";
##############################################
/src/src/core/config/OperationConfig.json-2035-        "module": "Ciphers",
/src/src/core/config/OperationConfig.json:2036:        "description": "DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",
/src/src/core/config/OperationConfig.json-2037-        "infoURL": "https://wikipedia.org/wiki/Data_Encryption_Standard",
##############################################
/src/src/core/config/OperationConfig.json-2095-        "module": "Ciphers",
/src/src/core/config/OperationConfig.json:2096:        "description": "DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",
/src/src/core/config/OperationConfig.json-2097-        "infoURL": "https://wikipedia.org/wiki/Data_Encryption_Standard",
##############################################
/src/src/core/config/OperationConfig.json-8227-        "module": "Crypto",
/src/src/core/config/OperationConfig.json:8228:        "description": "Snefru is a cryptographic hash function invented by Ralph Merkle in 1990 while working at Xerox PARC. The function supports 128-bit and 256-bit output. It was named after the Egyptian Pharaoh Sneferu, continuing the tradition of the Khufu and Khafre block ciphers.<br><br>The original design of Snefru was shown to be insecure by Eli Biham and Adi Shamir who were able to use differential cryptanalysis to find hash collisions. The design was then modified by increasing the number of iterations of the main pass of the algorithm from two to eight.",
/src/src/core/config/OperationConfig.json-8229-        "infoURL": "https://wikipedia.org/wiki/Snefru",
##############################################
/src/build/node/CyberChef.js-59- * @license Apache-2.0
/src/build/node/CyberChef.js:60: */function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Space",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8;if(!e)return"";t=r.a.charRep(t);for(var n="",i=0;i<e.length;i++)n+=e[i].toString(2).padStart(a,"0")+t;return t.length?n.slice(0,-t.length):n}function i(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Space",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,n=r.a.regexRep(t);e=e.replace(n,"");for(var i=[],o=0;o<e.length;o+=a)i.push(parseInt(e.substr(o,a),2));return i}},function(e){e.exports={"A1Z26 Cipher Decode":{module:"Ciphers",description:"Converts alphabet order numbers into their corresponding  alphabet character.<br><br>e.g. <code>1</code> becomes <code>a</code> and <code>2</code> becomes <code>b</code>.",infoURL:"",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]}]},"A1Z26 Cipher Encode":{module:"Ciphers",description:"Converts alphabet characters into their corresponding alphabet order number.<br><br>e.g. <code>a</code> becomes <code>1</code> and <code>b</code> becomes <code>2</code>.<br><br>Non-alphabet characters are dropped.",infoURL:"",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]}]},ADD:{module:"Default",description:"ADD the input with the given key (e.g. <code>fe023da5</code>), MOD 255",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bitwise_operators",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Binary","Base64","UTF8","Latin1"]}]},"AES Decrypt":{module:"Ciphers",description:"Advanced Encryption Standard (AES) is a U.S. Federal Information Processing Standard (FIPS). It was selected after a 5-year process where 15 competing designs were evaluated.<br><br><b>Key:</b> The following algorithms will be used based on the size of the key:<ul><li>16 bytes = AES-128</li><li>24 bytes = AES-192</li><li>32 bytes = AES-256</li></ul><br><br><b>IV:</b> The Initialization Vector should be 16 bytes long. If not entered, it will default to 16 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.<br><br><b>GCM Tag:</b> This field is ignored unless 'GCM' mode is used.",infoURL:"https://wikipedia.org/wiki/Advanced_Encryption_Standard",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","GCM","ECB"]},{name:"Input",type:"option",value:["Hex","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]},{name:"GCM Tag",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]}]},"AES Encrypt":{module:"Ciphers",description:"Advanced Encryption Standard (AES) is a U.S. Federal Information Processing Standard (FIPS). It was selected after a 5-year process where 15 competing designs were evaluated.<br><br><b>Key:</b> The following algorithms will be used based on the size of the key:<ul><li>16 bytes = AES-128</li><li>24 bytes = AES-192</li><li>32 bytes = AES-256</li></ul>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 16 bytes long. If not entered, it will default to 16 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/Advanced_Encryption_Standard",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","GCM","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Raw"]}]},AND:{module:"Default",description:"AND the input with the given key.<br>e.g. <code>fe023da5</code>",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#AND",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Binary","Base64","UTF8","Latin1"]}]},"Add line numbers":{module:"Default",description:"Adds line numbers to the output.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Adler-32 Checksum":{module:"Crypto",description:"Adler-32 is a checksum algorithm which was invented by Mark Adler in 1995, and is a modification of the Fletcher checksum. Compared to a cyclic redundancy check of the same length, it trades reliability for speed (preferring the latter).<br><br>Adler-32 is more reliable than Fletcher-16, and slightly less reliable than Fletcher-32.",infoURL:"https://wikipedia.org/wiki/Adler-32",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Affine Cipher Decode":{module:"Ciphers",description:"The Affine cipher is a type of monoalphabetic substitution cipher. To decrypt, each letter in an alphabet is mapped to its numeric equivalent, decrypted by a mathematical function, and converted back to a letter.",infoURL:"https://wikipedia.org/wiki/Affine_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"a",type:"number",value:1},{name:"b",type:"number",value:0}]},"Affine Cipher Encode":{module:"Ciphers",description:"The Affine cipher is a type of monoalphabetic substitution cipher, wherein each letter in an alphabet is mapped to its numeric equivalent, encrypted using simple mathematical function, <code>(ax + b) % 26</code>, and converted back to a letter.",infoURL:"https://wikipedia.org/wiki/Affine_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"a",type:"number",value:1},{name:"b",type:"number",value:0}]},"Analyse hash":{module:"Crypto",description:"Tries to determine information about a given hash and suggests which algorithm may have been used to generate it based on its length.",infoURL:"https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Atbash Cipher":{module:"Ciphers",description:"Atbash is a mono-alphabetic substitution cipher originally used to encode the Hebrew alphabet. It has been modified here for use with the Latin alphabet.",infoURL:"https://wikipedia.org/wiki/Atbash",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},BLAKE2b:{module:"Hashing",description:"Performs BLAKE2b hashing on the input.  \n        <br><br> BLAKE2b is a flavour of the BLAKE cryptographic hash function that is optimized for 64-bit platforms and produces digests of any size between 1 and 64 bytes.\n        <br><br> Supports the use of an optional key.",infoURL:"https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2b_algorithm",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["512","384","256","160","128"]},{name:"Output Encoding",type:"option",value:["Hex","Base64","Raw"]},{name:"Key",type:"toggleString",value:"",toggleValues:["UTF8","Decimal","Base64","Hex","Latin1"]}]},BLAKE2s:{module:"Hashing",description:"Performs BLAKE2s hashing on the input.  \n        <br><br>BLAKE2s is a flavour of the BLAKE cryptographic hash function that is optimized for 8- to 32-bit platforms and produces digests of any size between 1 and 32 bytes.\n        <br><br>Supports the use of an optional key.",infoURL:"https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["256","160","128"]},{name:"Output Encoding",type:"option",value:["Hex","Base64","Raw"]},{name:"Key",type:"toggleString",value:"",toggleValues:["UTF8","Decimal","Base64","Hex","Latin1"]}]},"BSON deserialise":{module:"BSON",description:"BSON is a computer data interchange format used mainly as a data storage and network transfer format in the MongoDB database. It is a binary form for representing simple data structures, associative arrays (called objects or documents in MongoDB), and various data types of specific interest to MongoDB. The name 'BSON' is based on the term JSON and stands for 'Binary JSON'.<br><br>Input data should be in a raw bytes format.",infoURL:"https://wikipedia.org/wiki/BSON",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"BSON serialise":{module:"BSON",description:"BSON is a computer data interchange format used mainly as a data storage and network transfer format in the MongoDB database. It is a binary form for representing simple data structures, associative arrays (called objects or documents in MongoDB), and various data types of specific interest to MongoDB. The name 'BSON' is based on the term JSON and stands for 'Binary JSON'.<br><br>Input data should be valid JSON.",infoURL:"https://wikipedia.org/wiki/BSON",inputType:"string",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[]},Bcrypt:{module:"Crypto",description:"bcrypt is a password hashing function designed by Niels Provos and David Mazières, based on the Blowfish cipher, and presented at USENIX in 1999. Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count (rounds) can be increased to make it slower, so it remains resistant to brute-force search attacks even with increasing computation power.<br><br>Enter the password in the input to generate its hash.",infoURL:"https://wikipedia.org/wiki/Bcrypt",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Rounds",type:"number",value:10}]},"Bcrypt compare":{module:"Crypto",description:"Tests whether the input matches the given bcrypt hash. To test multiple possible passwords, use the 'Fork' operation.",infoURL:"https://wikipedia.org/wiki/Bcrypt",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Hash",type:"string",value:""}]},"Bcrypt parse":{module:"Crypto",description:"Parses a bcrypt hash to determine the number of rounds used, the salt, and the password hash.",infoURL:"https://wikipedia.org/wiki/Bcrypt",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Bifid Cipher Decode":{module:"Ciphers",description:"The Bifid cipher is a cipher which uses a Polybius square in conjunction with transposition, which can be fairly difficult to decipher without knowing the alphabet keyword.",infoURL:"https://wikipedia.org/wiki/Bifid_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Keyword",type:"string",value:""}]},"Bifid Cipher Encode":{module:"Ciphers",description:"The Bifid cipher is a cipher which uses a Polybius square in conjunction with transposition, which can be fairly difficult to decipher without knowing the alphabet keyword.",infoURL:"https://wikipedia.org/wiki/Bifid_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Keyword",type:"string",value:""}]},"Bit shift left":{module:"Default",description:"Shifts the bits in each byte towards the left by the specified amount.",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:1}]},"Bit shift right":{module:"Default",description:"Shifts the bits in each byte towards the right by the specified amount.<br><br><i>Logical shifts</i> replace the leftmost bits with zeros.<br><i>Arithmetic shifts</i> preserve the most significant bit (MSB) of the original byte keeping the sign the same (positive or negative).",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:1},{name:"Type",type:"option",value:["Logical shift","Arithmetic shift"]}]},"Blowfish Decrypt":{module:"Ciphers",description:"Blowfish is a symmetric-key block cipher designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products. AES now receives more attention.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.",infoURL:"https://wikipedia.org/wiki/Blowfish_(cipher)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","PCBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Hex","Base64","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}]},"Blowfish Encrypt":{module:"Ciphers",description:"Blowfish is a symmetric-key block cipher designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products. AES now receives more attention.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.",infoURL:"https://wikipedia.org/wiki/Blowfish_(cipher)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","PCBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Base64","Raw"]}]},"Blur Image":{module:"Image",description:"Applies a blur effect to the image.<br><br>Gaussian blur is much slower than fast blur, but produces better results.",infoURL:"https://wikipedia.org/wiki/Gaussian_blur",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:5,min:1},{name:"Type",type:"option",value:["Fast","Gaussian"]}]},Bombe:{module:"Default",description:"Emulation of the Bombe machine used at Bletchley Park to attack Enigma, based on work by Polish and British cryptanalysts.<br><br>To run this you need to have a 'crib', which is some known plaintext for a chunk of the target ciphertext, and know the rotors used. (See the 'Bombe (multiple runs)' operation if you don't know the rotors.) The machine will suggest possible configurations of the Enigma. Each suggestion has the rotor start positions (left to right) and known plugboard pairs.<br><br>Choosing a crib: First, note that Enigma cannot encrypt a letter to itself, which allows you to rule out some positions for possible cribs. Secondly, the Bombe does not simulate the Enigma's middle rotor stepping. The longer your crib, the more likely a step happened within it, which will prevent the attack working. However, other than that, longer cribs are generally better. The attack produces a 'menu' which maps ciphertext letters to plaintext, and the goal is to produce 'loops': for example, with ciphertext ABC and crib CAB, we have the mappings A&lt;-&gt;C, B&lt;-&gt;A, and C&lt;-&gt;B, which produces a loop A-B-C-A. The more loops, the better the crib. The operation will output this: if your menu has too few loops or is too short, a large number of incorrect outputs will usually be produced. Try a different crib. If the menu seems good but the right answer isn't produced, your crib may be wrong, or you may have overlapped the middle rotor stepping - try a different crib.<br><br>Output is not sufficient to fully decrypt the data. You will have to recover the rest of the plugboard settings by inspection. And the ring position is not taken into account: this affects when the middle rotor steps. If your output is correct for a bit, and then goes wrong, adjust the ring and start position on the right-hand rotor together until the output improves. If necessary, repeat for the middle rotor.<br><br>By default this operation runs the checking machine, a manual process to verify the quality of Bombe stops, on each stop, discarding stops which fail. If you want to see how many times the hardware actually stops for a given input, disable the checking machine.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.",infoURL:"https://wikipedia.org/wiki/Bombe",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Model",type:"argSelector",value:[{name:"3-rotor",off:[1]},{name:"4-rotor",on:[1]}]},{name:"Left-most (4th) rotor",type:"editableOption",value:[{name:"Beta",value:"LEYJVCNIXWPBQMDRTAKZGFUHOS"},{name:"Gamma",value:"FSOKANUERHMBTIYCWLQPZXVGJD"}]},{name:"Left-hand rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}]},{name:"Middle rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}],defaultIndex:1},{name:"Right-hand rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}],defaultIndex:2},{name:"Reflector",type:"editableOption",value:[{name:"B",value:"AY BR CU DH EQ FS GL IP JX KN MO TZ VW"},{name:"C",value:"AF BV CP DJ EI GO HY KR LZ MX NW TQ SU"},{name:"B Thin",value:"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV"},{name:"C Thin",value:"AR BD CO EJ FN GT HK IV LM PW QZ SX UY"}]},{name:"Crib",type:"string",value:""},{name:"Crib offset",type:"number",value:0},{name:"Use checking machine",type:"boolean",value:!0}]},"Bzip2 Decompress":{module:"Compression",description:"Decompresses data using the Bzip2 algorithm.",infoURL:"https://wikipedia.org/wiki/Bzip2",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"^\\x42\\x5a\\x68",flags:"",args:[]}]},"CRC-16 Checksum":{module:"Crypto",description:"A cyclic redundancy check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental changes to raw data.<br><br>The CRC was invented by W. Wesley Peterson in 1961.",infoURL:"https://wikipedia.org/wiki/Cyclic_redundancy_check",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"CRC-32 Checksum":{module:"Crypto",description:"A cyclic redundancy check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental changes to raw data.<br><br>The CRC was invented by W. Wesley Peterson in 1961; the 32-bit CRC function of Ethernet and many other standards is the work of several researchers and was published in 1975.",infoURL:"https://wikipedia.org/wiki/Cyclic_redundancy_check",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"CSS Beautify":{module:"Code",description:"Indents and prettifies Cascading Style Sheets (CSS) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"\\t"}]},"CSS Minify":{module:"Code",description:"Compresses Cascading Style Sheets (CSS) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Preserve comments",type:"boolean",value:!1}]},"CSS selector":{module:"Code",description:"Extract information from an HTML document with a CSS selector",infoURL:"https://wikipedia.org/wiki/Cascading_Style_Sheets#Selector",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"CSS selector",type:"string",value:""},{name:"Delimiter",type:"binaryShortString",value:"\\n"}]},"CSV to JSON":{module:"Default",description:"Converts a CSV file to JSON format.",infoURL:"https://wikipedia.org/wiki/Comma-separated_values",inputType:"string",outputType:"JSON",flowControl:!1,manualBake:!1,args:[{name:"Cell delimiters",type:"binaryShortString",value:","},{name:"Row delimiters",type:"binaryShortString",value:"\\r\\n"},{name:"Format",type:"option",value:["Array of dictionaries","Array of arrays"]}]},CTPH:{module:"Crypto",description:"Context Triggered Piecewise Hashing, also called Fuzzy Hashing, can match inputs that have homologies. Such inputs have sequences of identical bytes in the same order, although bytes in between these sequences may be different in both content and length.<br><br>CTPH was originally based on the work of Dr. Andrew Tridgell and a spam email detector called SpamSum. This method was adapted by Jesse Kornblum and published at the DFRWS conference in 2006 in a paper 'Identifying Almost Identical Files Using Context Triggered Piecewise Hashing'.",infoURL:"https://forensicswiki.org/wiki/Context_Triggered_Piecewise_Hashing",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Cartesian Product":{module:"Default",description:"Calculates the cartesian product of multiple sets of data, returning all possible combinations.",infoURL:"https://wikipedia.org/wiki/Cartesian_product",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Item delimiter",type:"binaryString",value:","}]},"Change IP format":{module:"Default",description:"Convert an IP address from one format to another, e.g. <code>172.20.23.54</code> to <code>ac141736</code>",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Input format",type:"option",value:["Dotted Decimal","Decimal","Hex"]},{name:"Output format",type:"option",value:["Dotted Decimal","Decimal","Hex"]}]},"Chi Square":{module:"Default",description:"Calculates the Chi Square distribution of values.",infoURL:"https://wikipedia.org/wiki/Chi-squared_distribution",inputType:"ArrayBuffer",outputType:"number",flowControl:!1,manualBake:!1,args:[]},"Citrix CTX1 Decode":{module:"Encodings",description:"Decodes strings in a Citrix CTX1 password format to plaintext.",infoURL:"https://www.reddit.com/r/AskNetsec/comments/1s3r6y/citrix_ctx1_hash_decoding/",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Citrix CTX1 Encode":{module:"Encodings",description:"Encodes strings to Citrix CTX1 password format.",infoURL:"https://www.reddit.com/r/AskNetsec/comments/1s3r6y/citrix_ctx1_hash_decoding/",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},Comment:{module:"Default",description:"Provides a place to write comments within the flow of the recipe. This operation has no computational effect.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"",type:"text",value:""}]},"Compare CTPH hashes":{module:"Crypto",description:"Compares two Context Triggered Piecewise Hashing (CTPH) fuzzy hashes to determine the similarity between them on a scale of 0 to 100.",infoURL:"https://forensicswiki.org/wiki/Context_Triggered_Piecewise_Hashing",inputType:"string",outputType:"number",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma"]}]},"Compare SSDEEP hashes":{module:"Crypto",description:"Compares two SSDEEP fuzzy hashes to determine the similarity between them on a scale of 0 to 100.",infoURL:"https://forensicswiki.org/wiki/Ssdeep",inputType:"string",outputType:"number",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma"]}]},"Conditional Jump":{module:"Default",description:"Conditionally jump forwards or backwards to the specified Label  based on whether the data matches the specified regular expression.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Match (regex)",type:"string",value:""},{name:"Invert match",type:"boolean",value:!1},{name:"Label name",type:"shortString",value:""},{name:"Maximum jumps (if jumping backwards)",type:"number",value:10}]},"Contain Image":{module:"Image",description:"Scales an image to the specified width and height, maintaining the aspect ratio. The image may be letterboxed.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Width",type:"number",value:100,min:1},{name:"Height",type:"number",value:100,min:1},{name:"Horizontal align",type:"option",value:["Left","Center","Right"],defaultIndex:1},{name:"Vertical align",type:"option",value:["Top","Middle","Bottom"],defaultIndex:1},{name:"Resizing algorithm",type:"option",value:["Nearest Neighbour","Bilinear","Bicubic","Hermite","Bezier"],defaultIndex:1}]},"Convert area":{module:"Default",description:"Converts a unit of area to another format.",infoURL:"https://wikipedia.org/wiki/Orders_of_magnitude_(area)",inputType:"BigNumber",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["[Metric]","Square metre (sq m)","Square kilometre (sq km)","Centiare (ca)","Deciare (da)","Are (a)","Decare (daa)","Hectare (ha)","[/Metric]","[Imperial]","Square inch (sq in)","Square foot (sq ft)","Square yard (sq yd)","Square mile (sq mi)","Perch (sq per)","Rood (ro)","International acre (ac)","[/Imperial]","[US customary units]","US survey acre (ac)","US survey square mile (sq mi)","US survey township","[/US customary units]","[Nuclear physics]","Yoctobarn (yb)","Zeptobarn (zb)","Attobarn (ab)","Femtobarn (fb)","Picobarn (pb)","Nanobarn (nb)","Microbarn (μb)","Millibarn (mb)","Barn (b)","Kilobarn (kb)","Megabarn (Mb)","Outhouse","Shed","Planck area","[/Nuclear physics]","[Comparisons]","Washington D.C.","Isle of Wight","Wales","Texas","[/Comparisons]"]},{name:"Output units",type:"option",value:["[Metric]","Square metre (sq m)","Square kilometre (sq km)","Centiare (ca)","Deciare (da)","Are (a)","Decare (daa)","Hectare (ha)","[/Metric]","[Imperial]","Square inch (sq in)","Square foot (sq ft)","Square yard (sq yd)","Square mile (sq mi)","Perch (sq per)","Rood (ro)","International acre (ac)","[/Imperial]","[US customary units]","US survey acre (ac)","US survey square mile (sq mi)","US survey township","[/US customary units]","[Nuclear physics]","Yoctobarn (yb)","Zeptobarn (zb)","Attobarn (ab)","Femtobarn (fb)","Picobarn (pb)","Nanobarn (nb)","Microbarn (μb)","Millibarn (mb)","Barn (b)","Kilobarn (kb)","Megabarn (Mb)","Outhouse","Shed","Planck area","[/Nuclear physics]","[Comparisons]","Washington D.C.","Isle of Wight","Wales","Texas","[/Comparisons]"]}]},"Convert co-ordinate format":{module:"Hashing",description:"Converts geographical coordinates between different formats.<br><br>Supported formats:<ul><li>Degrees Minutes Seconds (DMS)</li><li>Degrees Decimal Minutes (DDM)</li><li>Decimal Degrees (DD)</li><li>Geohash</li><li>Military Grid Reference System (MGRS)</li><li>Ordnance Survey National Grid (OSNG)</li><li>Universal Transverse Mercator (UTM)</li></ul><br>The operation can try to detect the input co-ordinate format and delimiter automatically, but this may not always work correctly.",infoURL:"https://wikipedia.org/wiki/Geographic_coordinate_conversion",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Input Format",type:"option",value:["Auto","Degrees Minutes Seconds","Degrees Decimal Minutes","Decimal Degrees","Geohash","Military Grid Reference System","Ordnance Survey National Grid","Universal Transverse Mercator"]},{name:"Input Delimiter",type:"option",value:["Auto","Direction Preceding","Direction Following","\\n","Comma","Semi-colon","Colon"]},{name:"Output Format",type:"option",value:["Degrees Minutes Seconds","Degrees Decimal Minutes","Decimal Degrees","Geohash","Military Grid Reference System","Ordnance Survey National Grid","Universal Transverse Mercator"]},{name:"Output Delimiter",type:"option",value:["Space","\\n","Comma","Semi-colon","Colon"]},{name:"Include Compass Directions",type:"option",value:["None","Before","After"]},{name:"Precision",type:"number",value:3}]},"Convert data units":{module:"Default",description:"Converts a unit of data to another format.",infoURL:"https://wikipedia.org/wiki/Orders_of_magnitude_(data)",inputType:"BigNumber",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["Bits (b)","Nibbles","Octets","Bytes (B)","[Binary bits (2^n)]","Kibibits (Kib)","Mebibits (Mib)","Gibibits (Gib)","Tebibits (Tib)","Pebibits (Pib)","Exbibits (Eib)","Zebibits (Zib)","Yobibits (Yib)","[/Binary bits (2^n)]","[Decimal bits (10^n)]","Decabits","Hectobits","Kilobits (kb)","Megabits (Mb)","Gigabits (Gb)","Terabits (Tb)","Petabits (Pb)","Exabits (Eb)","Zettabits (Zb)","Yottabits (Yb)","[/Decimal bits (10^n)]","[Binary bytes (8 x 2^n)]","Kibibytes (KiB)","Mebibytes (MiB)","Gibibytes (GiB)","Tebibytes (TiB)","Pebibytes (PiB)","Exbibytes (EiB)","Zebibytes (ZiB)","Yobibytes (YiB)","[/Binary bytes (8 x 2^n)]","[Decimal bytes (8 x 10^n)]","Kilobytes (KB)","Megabytes (MB)","Gigabytes (GB)","Terabytes (TB)","Petabytes (PB)","Exabytes (EB)","Zettabytes (ZB)","Yottabytes (YB)","[/Decimal bytes (8 x 10^n)]"]},{name:"Output units",type:"option",value:["Bits (b)","Nibbles","Octets","Bytes (B)","[Binary bits (2^n)]","Kibibits (Kib)","Mebibits (Mib)","Gibibits (Gib)","Tebibits (Tib)","Pebibits (Pib)","Exbibits (Eib)","Zebibits (Zib)","Yobibits (Yib)","[/Binary bits (2^n)]","[Decimal bits (10^n)]","Decabits","Hectobits","Kilobits (kb)","Megabits (Mb)","Gigabits (Gb)","Terabits (Tb)","Petabits (Pb)","Exabits (Eb)","Zettabits (Zb)","Yottabits (Yb)","[/Decimal bits (10^n)]","[Binary bytes (8 x 2^n)]","Kibibytes (KiB)","Mebibytes (MiB)","Gibibytes (GiB)","Tebibytes (TiB)","Pebibytes (PiB)","Exbibytes (EiB)","Zebibytes (ZiB)","Yobibytes (YiB)","[/Binary bytes (8 x 2^n)]","[Decimal bytes (8 x 10^n)]","Kilobytes (KB)","Megabytes (MB)","Gigabytes (GB)","Terabytes (TB)","Petabytes (PB)","Exabytes (EB)","Zettabytes (ZB)","Yottabytes (YB)","[/Decimal bytes (8 x 10^n)]"]}]},"Convert distance":{module:"Default",description:"Converts a unit of distance to another format.",infoURL:"https://wikipedia.org/wiki/Orders_of_magnitude_(length)",inputType:"BigNumber",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["[Metric]","Nanometres (nm)","Micrometres (µm)","Millimetres (mm)","Centimetres (cm)","Metres (m)","Kilometers (km)","[/Metric]","[Imperial]","Thou (th)","Inches (in)","Feet (ft)","Yards (yd)","Chains (ch)","Furlongs (fur)","Miles (mi)","Leagues (lea)","[/Imperial]","[Maritime]","Fathoms (ftm)","Cables","Nautical miles","[/Maritime]","[Comparisons]","Cars (4m)","Buses (8.4m)","American football fields (91m)","Football pitches (105m)","[/Comparisons]","[Astronomical]","Earth-to-Moons","Earth's equators","Astronomical units (au)","Light-years (ly)","Parsecs (pc)","[/Astronomical]"]},{name:"Output units",type:"option",value:["[Metric]","Nanometres (nm)","Micrometres (µm)","Millimetres (mm)","Centimetres (cm)","Metres (m)","Kilometers (km)","[/Metric]","[Imperial]","Thou (th)","Inches (in)","Feet (ft)","Yards (yd)","Chains (ch)","Furlongs (fur)","Miles (mi)","Leagues (lea)","[/Imperial]","[Maritime]","Fathoms (ftm)","Cables","Nautical miles","[/Maritime]","[Comparisons]","Cars (4m)","Buses (8.4m)","American football fields (91m)","Football pitches (105m)","[/Comparisons]","[Astronomical]","Earth-to-Moons","Earth's equators","Astronomical units (au)","Light-years (ly)","Parsecs (pc)","[/Astronomical]"]}]},"Convert mass":{module:"Default",description:"Converts a unit of mass to another format.",infoURL:"https://wikipedia.org/wiki/Orders_of_magnitude_(mass)",inputType:"BigNumber",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["[Metric]","Yoctogram (yg)","Zeptogram (zg)","Attogram (ag)","Femtogram (fg)","Picogram (pg)","Nanogram (ng)","Microgram (μg)","Milligram (mg)","Centigram (cg)","Decigram (dg)","Gram (g)","Decagram (dag)","Hectogram (hg)","Kilogram (kg)","Megagram (Mg)","Tonne (t)","Gigagram (Gg)","Teragram (Tg)","Petagram (Pg)","Exagram (Eg)","Zettagram (Zg)","Yottagram (Yg)","[/Metric]","[Imperial Avoirdupois]","Grain (gr)","Dram (dr)","Ounce (oz)","Pound (lb)","Nail","Stone (st)","Quarter (gr)","Tod","US hundredweight (cwt)","Imperial hundredweight (cwt)","US ton (t)","Imperial ton (t)","[/Imperial Avoirdupois]","[Imperial Troy]","Grain (gr)","Pennyweight (dwt)","Troy dram (dr t)","Troy ounce (oz t)","Troy pound (lb t)","Mark","[/Imperial Troy]","[Archaic]","Wey","Wool wey","Suffolk wey","Wool sack","Coal sack","Load","Last","Flax or feather last","Gunpowder last","Picul","Rice last","[/Archaic]","[Comparisons]","Big Ben (14 tonnes)","Blue whale (180 tonnes)","International Space Station (417 tonnes)","Space Shuttle (2,041 tonnes)","RMS Titanic (52,000 tonnes)","Great Pyramid of Giza (6,000,000 tonnes)","Earth's oceans (1.4 yottagrams)","[/Comparisons]","[Astronomical]","A teaspoon of neutron star (5,500 million tonnes)","Lunar mass (ML)","Earth mass (M⊕)","Jupiter mass (MJ)","Solar mass (M☉)","Sagittarius A* (7.5 x 10^36 kgs-ish)","Milky Way galaxy (1.2 x 10^42 kgs)","The observable universe (1.45 x 10^53 kgs)","[/Astronomical]"]},{name:"Output units",type:"option",value:["[Metric]","Yoctogram (yg)","Zeptogram (zg)","Attogram (ag)","Femtogram (fg)","Picogram (pg)","Nanogram (ng)","Microgram (μg)","Milligram (mg)","Centigram (cg)","Decigram (dg)","Gram (g)","Decagram (dag)","Hectogram (hg)","Kilogram (kg)","Megagram (Mg)","Tonne (t)","Gigagram (Gg)","Teragram (Tg)","Petagram (Pg)","Exagram (Eg)","Zettagram (Zg)","Yottagram (Yg)","[/Metric]","[Imperial Avoirdupois]","Grain (gr)","Dram (dr)","Ounce (oz)","Pound (lb)","Nail","Stone (st)","Quarter (gr)","Tod","US hundredweight (cwt)","Imperial hundredweight (cwt)","US ton (t)","Imperial ton (t)","[/Imperial Avoirdupois]","[Imperial Troy]","Grain (gr)","Pennyweight (dwt)","Troy dram (dr t)","Troy ounce (oz t)","Troy pound (lb t)","Mark","[/Imperial Troy]","[Archaic]","Wey","Wool wey","Suffolk wey","Wool sack","Coal sack","Load","Last","Flax or feather last","Gunpowder last","Picul","Rice last","[/Archaic]","[Comparisons]","Big Ben (14 tonnes)","Blue whale (180 tonnes)","International Space Station (417 tonnes)","Space Shuttle (2,041 tonnes)","RMS Titanic (52,000 tonnes)","Great Pyramid of Giza (6,000,000 tonnes)","Earth's oceans (1.4 yottagrams)","[/Comparisons]","[Astronomical]","A teaspoon of neutron star (5,500 million tonnes)","Lunar mass (ML)","Earth mass (M⊕)","Jupiter mass (MJ)","Solar mass (M☉)","Sagittarius A* (7.5 x 10^36 kgs-ish)","Milky Way galaxy (1.2 x 10^42 kgs)","The observable universe (1.45 x 10^53 kgs)","[/Astronomical]"]}]},"Convert speed":{module:"Default",description:"Converts a unit of speed to another format.",infoURL:"https://wikipedia.org/wiki/Orders_of_magnitude_(speed)",inputType:"BigNumber",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["[Metric]","Metres per second (m/s)","Kilometres per hour (km/h)","[/Metric]","[Imperial]","Miles per hour (mph)","Knots (kn)","[/Imperial]","[Comparisons]","Human hair growth rate","Bamboo growth rate","World's fastest snail","Usain Bolt's top speed","Jet airliner cruising speed","Concorde","SR-71 Blackbird","Space Shuttle","International Space Station","[/Comparisons]","[Scientific]","Sound in standard atmosphere","Sound in water","Lunar escape velocity","Earth escape velocity","Earth's solar orbit","Solar system's Milky Way orbit","Milky Way relative to the cosmic microwave background","Solar escape velocity","Neutron star escape velocity (0.3c)","Light in a diamond (0.4136c)","Signal in an optical fibre (0.667c)","Light (c)","[/Scientific]"]},{name:"Output units",type:"option",value:["[Metric]","Metres per second (m/s)","Kilometres per hour (km/h)","[/Metric]","[Imperial]","Miles per hour (mph)","Knots (kn)","[/Imperial]","[Comparisons]","Human hair growth rate","Bamboo growth rate","World's fastest snail","Usain Bolt's top speed","Jet airliner cruising speed","Concorde","SR-71 Blackbird","Space Shuttle","International Space Station","[/Comparisons]","[Scientific]","Sound in standard atmosphere","Sound in water","Lunar escape velocity","Earth escape velocity","Earth's solar orbit","Solar system's Milky Way orbit","Milky Way relative to the cosmic microwave background","Solar escape velocity","Neutron star escape velocity (0.3c)","Light in a diamond (0.4136c)","Signal in an optical fibre (0.667c)","Light (c)","[/Scientific]"]}]},"Count occurrences":{module:"Default",description:"Counts the number of times the provided string occurs in the input.",infoURL:null,inputType:"string",outputType:"number",flowControl:!1,manualBake:!1,args:[{name:"Search string",type:"toggleString",value:"",toggleValues:["Regex","Extended (\\n, \\t, \\x...)","Simple string"]}]},"Cover Image":{module:"Image",description:"Scales the image to the given width and height, keeping the aspect ratio. The image may be clipped.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Width",type:"number",value:100,min:1},{name:"Height",type:"number",value:100,min:1},{name:"Horizontal align",type:"option",value:["Left","Center","Right"],defaultIndex:1},{name:"Vertical align",type:"option",value:["Top","Middle","Bottom"],defaultIndex:1},{name:"Resizing algorithm",type:"option",value:["Nearest Neighbour","Bilinear","Bicubic","Hermite","Bezier"],defaultIndex:1}]},"Crop Image":{module:"Image",description:"Crops an image to the specified region, or automatically crops edges.<br><br><b><u>Autocrop</u></b><br>Automatically crops same-colour borders from the image.<br><br><u>Autocrop tolerance</u><br>A percentage value for the tolerance of colour difference between pixels.<br><br><u>Only autocrop frames</u><br>Only crop real frames (all sides must have the same border)<br><br><u>Symmetric autocrop</u><br>Force autocrop to be symmetric (top/bottom and left/right are cropped by the same amount)<br><br><u>Autocrop keep border</u><br>The number of pixels of border to leave around the image.",infoURL:"https://wikipedia.org/wiki/Cropping_(image)",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"X Position",type:"number",value:0,min:0},{name:"Y Position",type:"number",value:0,min:0},{name:"Width",type:"number",value:10,min:1},{name:"Height",type:"number",value:10,min:1},{name:"Autocrop",type:"boolean",value:!1},{name:"Autocrop tolerance (%)",type:"number",value:.02,min:0,max:100,step:.01},{name:"Only autocrop frames",type:"boolean",value:!0},{name:"Symmetric autocrop",type:"boolean",value:!1},{name:"Autocrop keep border (px)",type:"number",value:0,min:0}]},"DES Decrypt":{module:"Ciphers",description:"DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/Data_Encryption_Standard",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Hex","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}]},"DES Encrypt":{module:"Ciphers",description:"DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/Data_Encryption_Standard",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Raw"]}]},"DNS over HTTPS":{module:"Default",description:"Takes a single domain name and performs a DNS lookup using DNS over HTTPS.\n<br><br>\nBy default, <a href='https://developers.cloudflare.com/1.1.1.1/dns-over-https/'>Cloudflare</a> and <a href='https://developers.google.com/speed/public-dns/docs/dns-over-https'>Google</a> DNS over HTTPS services are supported.\n<br><br>\nCan be used with any service that supports the GET parameters <code>name</code> and <code>type</code>.",infoURL:"https://wikipedia.org/wiki/DNS_over_HTTPS",inputType:"string",outputType:"JSON",flowControl:!1,manualBake:!0,args:[{name:"Resolver",type:"editableOption",value:[{name:"Google",value:"https://dns.google.com/resolve"},{name:"Cloudflare",value:"https://cloudflare-dns.com/dns-query"}]},{name:"Request Type",type:"option",value:["A","AAAA","TXT","MX","DNSKEY","NS"]},{name:"Answer Data Only",type:"boolean",value:!1},{name:"Validate DNSSEC",type:"boolean",value:!0}]},"Dechunk HTTP response":{module:"Default",description:"Parses an HTTP response transferred using Transfer-Encoding: Chunked",infoURL:"https://wikipedia.org/wiki/Chunked_transfer_encoding",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Decode NetBIOS Name":{module:"Default",description:"NetBIOS names as seen across the client interface to NetBIOS are exactly 16 bytes long. Within the NetBIOS-over-TCP protocols, a longer representation is used.<br><br>There are two levels of encoding. The first level maps a NetBIOS name into a domain system name.  The second level maps the domain system name into the 'compressed' representation required for interaction with the domain name system.<br><br>This operation decodes the first level of encoding. See RFC 1001 for full details.",infoURL:"https://wikipedia.org/wiki/NetBIOS",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Offset",type:"number",value:65}]},"Decode text":{module:"Encodings",description:"Decodes text from the chosen character encoding.\n<br><br>\nSupported charsets are:\n<ul>\n<li>UTF-8 (65001)</li>\n<li>UTF-7 (65000)</li>\n<li>UTF16LE (1200)</li>\n<li>UTF16BE (1201)</li>\n<li>UTF16 (1201)</li>\n<li>IBM EBCDIC International (500)</li>\n<li>IBM EBCDIC US-Canada (37)</li>\n<li>Windows-874 Thai (874)</li>\n<li>Japanese Shift-JIS (932)</li>\n<li>Simplified Chinese GBK (936)</li>\n<li>Korean (949)</li>\n<li>Traditional Chinese Big5 (950)</li>\n<li>Windows-1250 Central European (1250)</li>\n<li>Windows-1251 Cyrillic (1251)</li>\n<li>Windows-1252 Latin (1252)</li>\n<li>Windows-1253 Greek (1253)</li>\n<li>Windows-1254 Turkish (1254)</li>\n<li>Windows-1255 Hebrew (1255)</li>\n<li>Windows-1256 Arabic (1256)</li>\n<li>Windows-1257 Baltic (1257)</li>\n<li>Windows-1258 Vietnam (1258)</li>\n<li>US-ASCII (20127)</li>\n<li>Simplified Chinese GB2312 (20936)</li>\n<li>KOI8-R Russian Cyrillic (20866)</li>\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\n<li>ISO-8859-7 Latin/Greek (28597)</li>\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\n<li>ISO-8859-11 Latin/Thai (28601)</li>\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\n<li>ISO-8859-15 Latin 9 (28605)</li>\n<li>ISO-8859-16 Latin 10 (28606)</li>\n<li>ISO-2022 JIS Japanese (50222)</li>\n<li>EUC Japanese (51932)</li>\n<li>EUC Korean (51949)</li>\n<li>Simplified Chinese GB18030 (54936)</li>\n</ul>",infoURL:"https://wikipedia.org/wiki/Character_encoding",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Encoding",type:"option",value:["UTF-8 (65001)","UTF-7 (65000)","UTF16LE (1200)","UTF16BE (1201)","UTF16 (1201)","IBM EBCDIC International (500)","IBM EBCDIC US-Canada (37)","Windows-874 Thai (874)","Japanese Shift-JIS (932)","Simplified Chinese GBK (936)","Korean (949)","Traditional Chinese Big5 (950)","Windows-1250 Central European (1250)","Windows-1251 Cyrillic (1251)","Windows-1252 Latin (1252)","Windows-1253 Greek (1253)","Windows-1254 Turkish (1254)","Windows-1255 Hebrew (1255)","Windows-1256 Arabic (1256)","Windows-1257 Baltic (1257)","Windows-1258 Vietnam (1258)","US-ASCII (20127)","Simplified Chinese GB2312 (20936)","KOI8-R Russian Cyrillic (20866)","KOI8-U Ukrainian Cyrillic (21866)","ISO-8859-1 Latin 1 Western European (28591)","ISO-8859-2 Latin 2 Central European (28592)","ISO-8859-3 Latin 3 South European (28593)","ISO-8859-4 Latin 4 North European (28594)","ISO-8859-5 Latin/Cyrillic (28595)","ISO-8859-6 Latin/Arabic (28596)","ISO-8859-7 Latin/Greek (28597)","ISO-8859-8 Latin/Hebrew (28598)","ISO-8859-9 Latin 5 Turkish (28599)","ISO-8859-10 Latin 6 Nordic (28600)","ISO-8859-11 Latin/Thai (28601)","ISO-8859-13 Latin 7 Baltic Rim (28603)","ISO-8859-14 Latin 8 Celtic (28604)","ISO-8859-15 Latin 9 (28605)","ISO-8859-16 Latin 10 (28606)","ISO-2022 JIS Japanese (50222)","EUC Japanese (51932)","EUC Korean (51949)","Simplified Chinese GB18030 (54936)"]}]},"Defang URL":{module:"Default",description:"Takes a Universal Resource Locator (URL) and 'Defangs' it; meaning the URL becomes invalid, neutralising the risk of accidentally clicking on a malicious link.<br><br>This is often used when dealing with malicious links or IOCs.<br><br>Works well when combined with the 'Extract URLs' operation.",infoURL:"https://isc.sans.edu/forums/diary/Defang+all+the+things/22744/",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Escape dots",type:"boolean",value:!0},{name:"Escape http",type:"boolean",value:!0},{name:"Escape ://",type:"boolean",value:!0},{name:"Process",type:"option",value:["Valid domains and full URLs","Only full URLs","Everything"]}]},"Derive EVP key":{module:"Ciphers",description:"This operation performs a password-based key derivation function (PBKDF) used extensively in OpenSSL. In many applications of cryptography, user security is ultimately dependent on a password, and because a password usually can't be used directly as a cryptographic key, some processing is required.<br><br>A salt provides a large set of keys for any given password, and an iteration count increases the cost of producing keys from a password, thereby also increasing the difficulty of attack.<br><br>If you leave the salt argument empty, a random salt will be generated.",infoURL:"https://wikipedia.org/wiki/Key_derivation_function",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Passphrase",type:"toggleString",value:"",toggleValues:["UTF8","Latin1","Hex","Base64"]},{name:"Key size",type:"number",value:128},{name:"Iterations",type:"number",value:1},{name:"Hashing function",type:"option",value:["SHA1","SHA256","SHA384","SHA512","MD5"]},{name:"Salt",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]}]},"Derive PBKDF2 key":{module:"Ciphers",description:"PBKDF2 is a password-based key derivation function. It is part of RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, specifically PKCS #5 v2.0, also published as Internet Engineering Task Force's RFC 2898.<br><br>In many applications of cryptography, user security is ultimately dependent on a password, and because a password usually can't be used directly as a cryptographic key, some processing is required.<br><br>A salt provides a large set of keys for any given password, and an iteration count increases the cost of producing keys from a password, thereby also increasing the difficulty of attack.<br><br>If you leave the salt argument empty, a random salt will be generated.",infoURL:"https://wikipedia.org/wiki/PBKDF2",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Passphrase",type:"toggleString",value:"",toggleValues:["UTF8","Latin1","Hex","Base64"]},{name:"Key size",type:"number",value:128},{name:"Iterations",type:"number",value:1},{name:"Hashing function",type:"option",value:["SHA1","SHA256","SHA384","SHA512","MD5"]},{name:"Salt",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]}]},"Detect File Type":{module:"Default",description:"Attempts to guess the MIME (Multipurpose Internet Mail Extensions) type of the data based on 'magic bytes'.<br><br>Currently supports the following file types: 7z, amr, avi, bmp, bz2, class, cr2, crx, dex, dmg, doc, elf, eot, epub, exe, flac, flv, gif, gz, ico, iso, jpg, jxr, m4a, m4v, mid, mkv, mov, mp3, mp4, mpg, ogg, otf, pdf, png, ppt, ps, psd, rar, rtf, sqlite, swf, tar, tar.z, tif, ttf, utf8, vmdk, wav, webm, webp, wmv, woff, woff2, xls, xz, zip.",infoURL:"https://wikipedia.org/wiki/List_of_file_signatures",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Images",type:"boolean",value:!0},{name:"Video",type:"boolean",value:!0},{name:"Audio",type:"boolean",value:!0},{name:"Documents",type:"boolean",value:!0},{name:"Applications",type:"boolean",value:!0},{name:"Archives",type:"boolean",value:!0},{name:"Miscellaneous",type:"boolean",value:!0}]},Diff:{module:"Diff",description:"Compares two inputs (separated by the specified delimiter) and highlights the differences between them.",infoURL:"https://wikipedia.org/wiki/File_comparison",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Diff by",type:"option",value:["Character","Word","Line","Sentence","CSS","JSON"]},{name:"Show added",type:"boolean",value:!0},{name:"Show removed",type:"boolean",value:!0},{name:"Ignore whitespace",type:"boolean",value:!1,hint:"Relevant for word and line"}]},"Disassemble x86":{module:"Shellcode",description:"Disassembly is the process of translating machine language into assembly language.<br><br>This operation supports 64-bit, 32-bit and 16-bit code written for Intel or AMD x86 processors. It is particularly useful for reverse engineering shellcode.<br><br>Input should be in hexadecimal.",infoURL:"https://wikipedia.org/wiki/X86",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Bit mode",type:"option",value:["64","32","16"]},{name:"Compatibility",type:"option",value:["Full x86 architecture","Knights Corner","Larrabee","Cyrix","Geode","Centaur","X86/486"]},{name:"Code Segment (CS)",type:"number",value:16},{name:"Offset (IP)",type:"number",value:0},{name:"Show instruction hex",type:"boolean",value:!0},{name:"Show instruction position",type:"boolean",value:!0}]},"Dither Image":{module:"Image",description:"Apply a dither effect to an image.",infoURL:"https://wikipedia.org/wiki/Dither",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},Divide:{module:"Default",description:"Divides a list of numbers. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5</code> becomes <code>2.5</code>",infoURL:null,inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},"Drop bytes":{module:"Default",description:"Cuts a slice of the specified number of bytes out of the data. Negative values are allowed.",infoURL:null,inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Start",type:"number",value:0},{name:"Length",type:"number",value:5},{name:"Apply to each line",type:"boolean",value:!1}]},"Encode NetBIOS Name":{module:"Default",description:"NetBIOS names as seen across the client interface to NetBIOS are exactly 16 bytes long. Within the NetBIOS-over-TCP protocols, a longer representation is used.<br><br>There are two levels of encoding. The first level maps a NetBIOS name into a domain system name.  The second level maps the domain system name into the 'compressed' representation required for interaction with the domain name system.<br><br>This operation carries out the first level of encoding. See RFC 1001 for full details.",infoURL:"https://wikipedia.org/wiki/NetBIOS",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Offset",type:"number",value:65}]},"Encode text":{module:"Encodings",description:"Encodes text into the chosen character encoding.\n<br><br>\nSupported charsets are:\n<ul>\n<li>UTF-8 (65001)</li>\n<li>UTF-7 (65000)</li>\n<li>UTF16LE (1200)</li>\n<li>UTF16BE (1201)</li>\n<li>UTF16 (1201)</li>\n<li>IBM EBCDIC International (500)</li>\n<li>IBM EBCDIC US-Canada (37)</li>\n<li>Windows-874 Thai (874)</li>\n<li>Japanese Shift-JIS (932)</li>\n<li>Simplified Chinese GBK (936)</li>\n<li>Korean (949)</li>\n<li>Traditional Chinese Big5 (950)</li>\n<li>Windows-1250 Central European (1250)</li>\n<li>Windows-1251 Cyrillic (1251)</li>\n<li>Windows-1252 Latin (1252)</li>\n<li>Windows-1253 Greek (1253)</li>\n<li>Windows-1254 Turkish (1254)</li>\n<li>Windows-1255 Hebrew (1255)</li>\n<li>Windows-1256 Arabic (1256)</li>\n<li>Windows-1257 Baltic (1257)</li>\n<li>Windows-1258 Vietnam (1258)</li>\n<li>US-ASCII (20127)</li>\n<li>Simplified Chinese GB2312 (20936)</li>\n<li>KOI8-R Russian Cyrillic (20866)</li>\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\n<li>ISO-8859-7 Latin/Greek (28597)</li>\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\n<li>ISO-8859-11 Latin/Thai (28601)</li>\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\n<li>ISO-8859-15 Latin 9 (28605)</li>\n<li>ISO-8859-16 Latin 10 (28606)</li>\n<li>ISO-2022 JIS Japanese (50222)</li>\n<li>EUC Japanese (51932)</li>\n<li>EUC Korean (51949)</li>\n<li>Simplified Chinese GB18030 (54936)</li>\n</ul>",infoURL:"https://wikipedia.org/wiki/Character_encoding",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Encoding",type:"option",value:["UTF-8 (65001)","UTF-7 (65000)","UTF16LE (1200)","UTF16BE (1201)","UTF16 (1201)","IBM EBCDIC International (500)","IBM EBCDIC US-Canada (37)","Windows-874 Thai (874)","Japanese Shift-JIS (932)","Simplified Chinese GBK (936)","Korean (949)","Traditional Chinese Big5 (950)","Windows-1250 Central European (1250)","Windows-1251 Cyrillic (1251)","Windows-1252 Latin (1252)","Windows-1253 Greek (1253)","Windows-1254 Turkish (1254)","Windows-1255 Hebrew (1255)","Windows-1256 Arabic (1256)","Windows-1257 Baltic (1257)","Windows-1258 Vietnam (1258)","US-ASCII (20127)","Simplified Chinese GB2312 (20936)","KOI8-R Russian Cyrillic (20866)","KOI8-U Ukrainian Cyrillic (21866)","ISO-8859-1 Latin 1 Western European (28591)","ISO-8859-2 Latin 2 Central European (28592)","ISO-8859-3 Latin 3 South European (28593)","ISO-8859-4 Latin 4 North European (28594)","ISO-8859-5 Latin/Cyrillic (28595)","ISO-8859-6 Latin/Arabic (28596)","ISO-8859-7 Latin/Greek (28597)","ISO-8859-8 Latin/Hebrew (28598)","ISO-8859-9 Latin 5 Turkish (28599)","ISO-8859-10 Latin 6 Nordic (28600)","ISO-8859-11 Latin/Thai (28601)","ISO-8859-13 Latin 7 Baltic Rim (28603)","ISO-8859-14 Latin 8 Celtic (28604)","ISO-8859-15 Latin 9 (28605)","ISO-8859-16 Latin 10 (28606)","ISO-2022 JIS Japanese (50222)","EUC Japanese (51932)","EUC Korean (51949)","Simplified Chinese GB18030 (54936)"]}]},Enigma:{module:"Default",description:"Encipher/decipher with the WW2 Enigma machine.<br><br>Enigma was used by the German military, among others, around the WW2 era as a portable cipher machine to protect sensitive military, diplomatic and commercial communications.<br><br>The standard set of German military rotors and reflectors are provided. To configure the plugboard, enter a string of connected pairs of letters, e.g. <code>AB CD EF</code> connects A to B, C to D, and E to F. This is also used to create your own reflectors. To create your own rotor, enter the letters that the rotor maps A to Z to, in order, optionally followed by <code>&lt;</code> then a list of stepping points.<br>This is deliberately fairly permissive with rotor placements etc compared to a real Enigma (on which, for example, a four-rotor Enigma uses only the thin reflectors and the beta or gamma rotor in the 4th slot).<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.",infoURL:"https://wikipedia.org/wiki/Enigma_machine",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Model",type:"argSelector",value:[{name:"3-rotor",off:[1,2,3]},{name:"4-rotor",on:[1,2,3]}]},{name:"Left-most (4th) rotor",type:"editableOption",value:[{name:"Beta",value:"LEYJVCNIXWPBQMDRTAKZGFUHOS"},{name:"Gamma",value:"FSOKANUERHMBTIYCWLQPZXVGJD"}]},{name:"Left-most rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Left-most rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Left-hand rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}]},{name:"Left-hand rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Left-hand rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Middle rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}],defaultIndex:1},{name:"Middle rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Middle rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Right-hand rotor",type:"editableOption",value:[{name:"I",value:"EKMFLGDQVZNTOWYHXUSPAIBRCJ<R"},{name:"II",value:"AJDKSIRUXBLHWTMCQGZNPYFVOE<F"},{name:"III",value:"BDFHJLCPRTXVZNYEIWGAKMUSQO<W"},{name:"IV",value:"ESOVPZJAYQUIRHXLNFTGKDCMWB<K"},{name:"V",value:"VZBRGITYUPSDNHLXAWMJQOFECK<A"},{name:"VI",value:"JPGVOUMFYQBENHZRDKASXLICTW<AN"},{name:"VII",value:"NZJHGRCXMYSWBOUFAIVLPEKQDT<AN"},{name:"VIII",value:"FKQHTLXOCBJSPDZRAMEWNIUYGV<AN"}],defaultIndex:2},{name:"Right-hand rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Right-hand rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Reflector",type:"editableOption",value:[{name:"B",value:"AY BR CU DH EQ FS GL IP JX KN MO TZ VW"},{name:"C",value:"AF BV CP DJ EI GO HY KR LZ MX NW TQ SU"},{name:"B Thin",value:"AE BN CK DQ FU GY HW IJ LO MP RX SZ TV"},{name:"C Thin",value:"AR BD CO EJ FN GT HK IV LM PW QZ SX UY"}]},{name:"Plugboard",type:"string",value:""},{name:"Strict output",type:"boolean",value:!0,hint:"Remove non-alphabet letters and group output"}]},Entropy:{module:"Default",description:"Shannon Entropy, in the context of information theory, is a measure of the rate at which information is produced by a source of data. It can be used, in a broad sense, to detect whether data is likely to be structured or unstructured. 8 is the maximum, representing highly unstructured, 'random' data. English language text usually falls somewhere between 3.5 and 5. Properly encrypted or compressed data should have an entropy of over 7.5.",infoURL:"https://wikipedia.org/wiki/Entropy_(information_theory)",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},"Escape string":{module:"Default",description:"Escapes special characters in a string so that they do not cause conflicts. For example, <code>Don't stop me now</code> becomes <code>Don\\'t stop me now</code>.<br><br>Supports the following escape sequences:<ul><li><code>\\n</code> (Line feed/newline)</li><li><code>\\r</code> (Carriage return)</li><li><code>\\t</code> (Horizontal tab)</li><li><code>\\b</code> (Backspace)</li><li><code>\\f</code> (Form feed)</li><li><code>\\xnn</code> (Hex, where n is 0-f)</li><li><code>\\\\</code> (Backslash)</li><li><code>\\'</code> (Single quote)</li><li><code>\\&quot;</code> (Double quote)</li><li><code>\\unnnn</code> (Unicode character)</li><li><code>\\u{nnnnnn}</code> (Unicode code point)</li></ul>",infoURL:"https://wikipedia.org/wiki/Escape_sequence",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Escape level",type:"option",value:["Special chars","Everything","Minimal"]},{name:"Escape quote",type:"option",value:["Single","Double","Backtick"]},{name:"JSON compatible",type:"boolean",value:!1},{name:"ES6 compatible",type:"boolean",value:!0},{name:"Uppercase hex",type:"boolean",value:!1}]},"Escape Unicode Characters":{module:"Default",description:"Converts characters to their unicode-escaped notations.<br><br>Supports the prefixes:<ul><li><code>\\u</code></li><li><code>%u</code></li><li><code>U+</code></li></ul>e.g. <code>σου</code> becomes <code>\\u03C3\\u03BF\\u03C5</code>",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Prefix",type:"option",value:["\\u","%u","U+"]},{name:"Encode all chars",type:"boolean",value:!1},{name:"Padding",type:"number",value:4},{name:"Uppercase hex",type:"boolean",value:!0}],patterns:[{match:"\\\\u(?:[\\da-f]{4,6})",flags:"i",args:["\\u"]},{match:"%u(?:[\\da-f]{4,6})",flags:"i",args:["%u"]},{match:"U\\+(?:[\\da-f]{4,6})",flags:"i",args:["U+"]}]},"Expand alphabet range":{module:"Default",description:"Expand an alphabet range string into a list of the characters in that range.<br><br>e.g. <code>a-z</code> becomes <code>abcdefghijklmnopqrstuvwxyz</code>.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"binaryString",value:""}]},"Extract dates":{module:"Regex",description:"Extracts dates in the following formats<ul><li><code>yyyy-mm-dd</code></li><li><code>dd/mm/yyyy</code></li><li><code>mm/dd/yyyy</code></li></ul>Dividers can be any of /, -, . or space",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Display total",type:"boolean",value:!1}]},"Extract domains":{module:"Regex",description:"Extracts domain names.<br>Note that this will not include paths. Use <strong>Extract URLs</strong> to find entire URLs.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Display total",type:"boolean",value:"Extract.DISPLAY_TOTAL"}]},"Extract EXIF":{module:"Image",description:"Extracts EXIF data from an image.\n<br><br>\nEXIF data is metadata embedded in images (JPEG, JPG, TIFF) and audio files.\n<br><br>\nEXIF data from photos usually contains information about the image file itself as well as the device used to create it.",infoURL:"https://wikipedia.org/wiki/Exif",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Extract email addresses":{module:"Regex",description:"Extracts all email addresses from the input.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Display total",type:"boolean",value:!1}]},"Extract file paths":{module:"Regex",description:"Extracts anything that looks like a Windows or UNIX file path.<br><br>Note that if UNIX is selected, there will likely be a lot of false positives.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Windows",type:"boolean",value:!0},{name:"UNIX",type:"boolean",value:!0},{name:"Display total",type:"boolean",value:!1}]},"Extract Files":{module:"Default",description:"Performs file carving to attempt to extract files from the input.<br><br>This operation is currently capable of carving out the following formats:<ul><li>JPG</li><li>EXE</li><li>ZIP</li><li>PDF</li><li>PNG</li><li>BMP</li><li>FLV</li><li>RTF</li><li>DOCX, PPTX, XLSX</li><li>EPUB</li><li>GZIP</li><li>ZLIB</li><li>ELF, BIN, AXF, O, PRX, SO</li></ul>",infoURL:"https://forensicswiki.org/wiki/File_Carving",inputType:"ArrayBuffer",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Images",type:"boolean",value:!0},{name:"Video",type:"boolean",value:!0},{name:"Audio",type:"boolean",value:!0},{name:"Documents",type:"boolean",value:!0},{name:"Applications",type:"boolean",value:!0},{name:"Archives",type:"boolean",value:!0},{name:"Miscellaneous",type:"boolean",value:!1},{name:"Ignore failed extractions",type:"boolean",value:"true"}]},"Extract IP addresses":{module:"Regex",description:"Extracts all IPv4 and IPv6 addresses.<br><br>Warning: Given a string <code>710.65.0.456</code>, this will match <code>10.65.0.45</code> so always check the original input!",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"IPv4",type:"boolean",value:!0},{name:"IPv6",type:"boolean",value:!1},{name:"Remove local IPv4 addresses",type:"boolean",value:!1},{name:"Display total",type:"boolean",value:!1}]},"Extract MAC addresses":{module:"Regex",description:"Extracts all Media Access Control (MAC) addresses from the input.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Display total",type:"boolean",value:!1}]},"Extract URLs":{module:"Regex",description:"Extracts Uniform Resource Locators (URLs) from the input. The protocol (http, ftp etc.) is required otherwise there will be far too many false positives.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Display total",type:"boolean",value:!1}]},Filter:{module:"Regex",description:"Splits up the input using the specified delimiter and then filters each branch based on a regular expression.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon","Colon","Nothing (separate chars)"]},{name:"Regex",type:"string",value:""},{name:"Invert condition",type:"boolean",value:!1}]},"Find / Replace":{module:"Regex",description:"Replaces all occurrences of the first string with the second.<br><br>Includes support for regular expressions (regex), simple strings and extended strings (which support \\n, \\r, \\t, \\b, \\f and escaped hex bytes using \\x notation, e.g. \\x00 for a null byte).",infoURL:"https://wikipedia.org/wiki/Regular_expression",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Find",type:"toggleString",value:"",toggleValues:["Regex","Extended (\\n, \\t, \\x...)","Simple string"]},{name:"Replace",type:"binaryString",value:""},{name:"Global match",type:"boolean",value:!0},{name:"Case insensitive",type:"boolean",value:!1},{name:"Multiline matching",type:"boolean",value:!0},{name:"Dot matches all",type:"boolean",value:!1}]},"Fletcher-16 Checksum":{module:"Crypto",description:"The Fletcher checksum is an algorithm for computing a position-dependent checksum devised by John Gould Fletcher at Lawrence Livermore Labs in the late 1970s.<br><br>The objective of the Fletcher checksum was to provide error-detection properties approaching those of a cyclic redundancy check but with the lower computational effort associated with summation techniques.",infoURL:"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-16",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Fletcher-32 Checksum":{module:"Crypto",description:"The Fletcher checksum is an algorithm for computing a position-dependent checksum devised by John Gould Fletcher at Lawrence Livermore Labs in the late 1970s.<br><br>The objective of the Fletcher checksum was to provide error-detection properties approaching those of a cyclic redundancy check but with the lower computational effort associated with summation techniques.",infoURL:"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-32",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Fletcher-64 Checksum":{module:"Crypto",description:"The Fletcher checksum is an algorithm for computing a position-dependent checksum devised by John Gould Fletcher at Lawrence Livermore Labs in the late 1970s.<br><br>The objective of the Fletcher checksum was to provide error-detection properties approaching those of a cyclic redundancy check but with the lower computational effort associated with summation techniques.",infoURL:"https://wikipedia.org/wiki/Fletcher%27s_checksum#Fletcher-64",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Fletcher-8 Checksum":{module:"Crypto",description:"The Fletcher checksum is an algorithm for computing a position-dependent checksum devised by John Gould Fletcher at Lawrence Livermore Labs in the late 1970s.<br><br>The objective of the Fletcher checksum was to provide error-detection properties approaching those of a cyclic redundancy check but with the lower computational effort associated with summation techniques.",infoURL:"https://wikipedia.org/wiki/Fletcher%27s_checksum",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Flip Image":{module:"Image",description:"Flips an image along its X or Y axis.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Axis",type:"option",value:["Horizontal","Vertical"]}]},Fork:{module:"Default",description:"Split the input data up based on the specified delimiter and run all subsequent operations on each branch separately.<br><br>For example, to decode multiple Base64 strings, enter them all on separate lines then add the 'Fork' and 'From Base64' operations to the recipe. Each string will be decoded separately.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Split delimiter",type:"binaryShortString",value:"\\n"},{name:"Merge delimiter",type:"binaryShortString",value:"\\n"},{name:"Ignore errors",type:"boolean",value:!1}]},"Format MAC addresses":{module:"Default",description:"Displays given MAC addresses in multiple different formats.<br><br>Expects addresses in a list separated by newlines, spaces or commas.<br><br>WARNING: There are no validity checks.",infoURL:"https://wikipedia.org/wiki/MAC_address#Notational_conventions",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Output case",type:"option",value:["Both","Upper only","Lower only"]},{name:"No delimiter",type:"boolean",value:!0},{name:"Dash delimiter",type:"boolean",value:!0},{name:"Colon delimiter",type:"boolean",value:!0},{name:"Cisco style",type:"boolean",value:!1},{name:"IPv6 interface ID",type:"boolean",value:!1}]},"Frequency distribution":{module:"Default",description:"Displays the distribution of bytes in the data as a graph.",infoURL:"https://wikipedia.org/wiki/Frequency_distribution",inputType:"ArrayBuffer",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Show 0%s",type:"boolean",value:"Entropy.FREQ_ZEROS"}]},"From BCD":{module:"Default",description:"Binary-Coded Decimal (BCD) is a class of binary encodings of decimal numbers where each decimal digit is represented by a fixed number of bits, usually four or eight. Special bit patterns are sometimes used for a sign.",infoURL:"https://wikipedia.org/wiki/Binary-coded_decimal",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Scheme",type:"option",value:["8 4 2 1","7 4 2 1","4 2 2 1","2 4 2 1","8 4 -2 -1","Excess-3","IBM 8 4 2 1"]},{name:"Packed",type:"boolean",value:!0},{name:"Signed",type:"boolean",value:!1},{name:"Input format",type:"option",value:["Nibbles","Bytes","Raw"]}],patterns:[{match:"^(?:\\d{4} ){3,}\\d{4}$",flags:"",args:["8 4 2 1",!0,!1,"Nibbles"]}]},"From Base":{module:"Default",description:"Converts a number to decimal from a given numerical base.",infoURL:"https://wikipedia.org/wiki/Radix",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Radix",type:"number",value:36}]},"From Base32":{module:"Default",description:"Base32 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers. It uses a smaller set of characters than Base64, usually the uppercase alphabet and the numbers 2 to 7.",infoURL:"https://wikipedia.org/wiki/Base32",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"binaryString",value:"A-Z2-7="},{name:"Remove non-alphabet chars",type:"boolean",value:!0}],patterns:[{match:"^(?:[A-Z2-7]{8})+(?:[A-Z2-7]{2}={6}|[A-Z2-7]{4}={4}|[A-Z2-7]{5}={3}|[A-Z2-7]{7}={1})?$",flags:"",args:["A-Z2-7=",!1]}]},"From Base58":{module:"Default",description:"Base58 (similar to Base64) is a notation for encoding arbitrary byte data. It differs from Base64 by removing easily misread characters (i.e. l, I, 0 and O) to improve human readability.<br><br>This operation decodes data from an ASCII string (with an alphabet of your choosing, presets included) back into its raw form.<br><br>e.g. <code>StV1DL6CwTryKyV</code> becomes <code>hello world</code><br><br>Base58 is commonly used in cryptocurrencies (Bitcoin, Ripple, etc).",infoURL:"https://wikipedia.org/wiki/Base58",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Bitcoin",value:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"},{name:"Ripple",value:"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}]},{name:"Remove non-alphabet chars",type:"boolean",value:!0}],patterns:[{match:"^[1-9A-HJ-NP-Za-km-z]{20,}$",flags:"",args:["123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",!1]},{match:"^[1-9A-HJ-NP-Za-km-z]{20,}$",flags:"",args:["rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz",!1]}]},"From Base62":{module:"Default",description:"Base62 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers. The high number base results in shorter strings than with the decimal or hexadecimal system.",infoURL:"https://wikipedia.org/wiki/List_of_numeral_systems",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"string",value:"0-9A-Za-z"}]},"From Base64":{module:"Default",description:"Base64 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers.<br><br>This operation decodes data from an ASCII Base64 string back into its raw format.<br><br>e.g. <code>aGVsbG8=</code> becomes <code>hello</code>",infoURL:"https://wikipedia.org/wiki/Base64",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Standard (RFC 4648): A-Za-z0-9+/=",value:"A-Za-z0-9+/="},{name:"URL safe (RFC 4648 §5): A-Za-z0-9-_",value:"A-Za-z0-9-_"},{name:"Filename safe: A-Za-z0-9+-=",value:"A-Za-z0-9+\\-="},{name:"itoa64: ./0-9A-Za-z=",value:"./0-9A-Za-z="},{name:"XML: A-Za-z0-9_.",value:"A-Za-z0-9_."},{name:"y64: A-Za-z0-9._-",value:"A-Za-z0-9._-"},{name:"z64: 0-9a-zA-Z+/=",value:"0-9a-zA-Z+/="},{name:"Radix-64 (RFC 4880): 0-9A-Za-z+/=",value:"0-9A-Za-z+/="},{name:"Uuencoding: [space]-_",value:" -_"},{name:"Xxencoding: +-0-9A-Za-z",value:"+\\-0-9A-Za-z"},{name:"BinHex: !-,-0-689@A-NP-VX-Z[`a-fh-mp-r",value:"!-,-0-689@A-NP-VX-Z[`a-fh-mp-r"},{name:"ROT13: N-ZA-Mn-za-m0-9+/=",value:"N-ZA-Mn-za-m0-9+/="},{name:"UNIX crypt: ./0-9A-Za-z",value:"./0-9A-Za-z"}]},{name:"Remove non-alphabet chars",type:"boolean",value:!0}],patterns:[{match:"^\\s*(?:[A-Z\\d+/]{4})+(?:[A-Z\\d+/]{2}==|[A-Z\\d+/]{3}=)?\\s*$",flags:"i",args:["A-Za-z0-9+/=",!0]},{match:"^\\s*[A-Z\\d\\-_]{20,}\\s*$",flags:"i",args:["A-Za-z0-9-_",!0]},{match:"^\\s*(?:[A-Z\\d+\\-]{4}){5,}(?:[A-Z\\d+\\-]{2}==|[A-Z\\d+\\-]{3}=)?\\s*$",flags:"i",args:["A-Za-z0-9+\\-=",!0]},{match:"^\\s*(?:[A-Z\\d./]{4}){5,}(?:[A-Z\\d./]{2}==|[A-Z\\d./]{3}=)?\\s*$",flags:"i",args:["./0-9A-Za-z=",!0]},{match:"^\\s*[A-Z\\d_.]{20,}\\s*$",flags:"i",args:["A-Za-z0-9_.",!0]},{match:"^\\s*(?:[A-Z\\d._]{4}){5,}(?:[A-Z\\d._]{2}--|[A-Z\\d._]{3}-)?\\s*$",flags:"i",args:["A-Za-z0-9._-",!0]},{match:"^\\s*(?:[A-Z\\d+/]{4}){5,}(?:[A-Z\\d+/]{2}==|[A-Z\\d+/]{3}=)?\\s*$",flags:"i",args:["0-9a-zA-Z+/=",!0]},{match:"^\\s*(?:[A-Z\\d+/]{4}){5,}(?:[A-Z\\d+/]{2}==|[A-Z\\d+/]{3}=)?\\s*$",flags:"i",args:["0-9A-Za-z+/=",!0]},{match:"^[ !\"#$%&'()*+,\\-./\\d:;<=>?@A-Z[\\\\\\]^_]{20,}$",flags:"",args:[" -_",!1]},{match:"^\\s*[A-Z\\d+\\-]{20,}\\s*$",flags:"i",args:["+\\-0-9A-Za-z",!0]},{match:"^\\s*[!\"#$%&'()*+,\\-0-689@A-NP-VX-Z[`a-fh-mp-r]{20,}\\s*$",flags:"",args:["!-,-0-689@A-NP-VX-Z[`a-fh-mp-r",!0]},{match:"^\\s*(?:[N-ZA-M\\d+/]{4}){5,}(?:[N-ZA-M\\d+/]{2}==|[N-ZA-M\\d+/]{3}=)?\\s*$",flags:"i",args:["N-ZA-Mn-za-m0-9+/=",!0]},{match:"^\\s*[A-Z\\d./]{20,}\\s*$",flags:"i",args:["./0-9A-Za-z",!0]}]},"From Base85":{module:"Default",description:"Base85 (also called Ascii85) is a notation for encoding arbitrary byte data. It is usually more efficient that Base64.<br><br>This operation decodes data from an ASCII string (with an alphabet of your choosing, presets included).<br><br>e.g. <code>BOu!rD]j7BEbo7</code> becomes <code>hello world</code><br><br>Base85 is commonly used in Adobe's PostScript and PDF file formats.",infoURL:"https://wikipedia.org/wiki/Ascii85",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Standard",value:"!-u"},{name:"Z85 (ZeroMQ)",value:"0-9a-zA-Z.\\-:+=^!/*?&<>()[]{}@%$#"},{name:"IPv6",value:"0-9A-Za-z!#$%&()*+\\-;<=>?@^_`{|~}"}]}]},"From Binary":{module:"Default",description:"Converts a binary string back into its raw form.<br><br>e.g. <code>01001000 01101001</code> becomes <code>Hi</code>",infoURL:"https://wikipedia.org/wiki/Binary_code",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF","None"]}],patterns:[{match:"^(?:[01]{8})+$",flags:"",args:["None"]},{match:"^(?:[01]{8})(?: [01]{8})*$",flags:"",args:["Space"]},{match:"^(?:[01]{8})(?:,[01]{8})*$",flags:"",args:["Comma"]},{match:"^(?:[01]{8})(?:;[01]{8})*$",flags:"",args:["Semi-colon"]},{match:"^(?:[01]{8})(?::[01]{8})*$",flags:"",args:["Colon"]},{match:"^(?:[01]{8})(?:\\n[01]{8})*$",flags:"",args:["Line feed"]},{match:"^(?:[01]{8})(?:\\r\\n[01]{8})*$",flags:"",args:["CRLF"]}]},"From Braille":{module:"Default",description:"Converts six-dot braille symbols to text.",infoURL:"https://wikipedia.org/wiki/Braille",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"From Case Insensitive Regex":{module:"Default",description:"Converts a case-insensitive regex string to a case sensitive regex string (no guarantee on it being the proper original casing) in case the i flag wasn't available at the time but now is, or you need it to be case-sensitive again.<br><br>e.g. <code>[mM][oO][zZ][iI][lL][lL][aA]/[0-9].[0-9] .*</code> becomes <code>Mozilla/[0-9].[0-9] .*</code>",infoURL:"https://wikipedia.org/wiki/Regular_expression",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"From Charcode":{module:"Default",description:"Converts unicode character codes back into text.<br><br>e.g. <code>0393 03b5 03b9 03ac 20 03c3 03bf 03c5</code> becomes <code>Γειά σου</code>",infoURL:"https://wikipedia.org/wiki/Plane_(Unicode)",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]},{name:"Base",type:"number",value:16}]},"From Decimal":{module:"Default",description:"Converts the data from an ordinal integer array back into its raw form.<br><br>e.g. <code>72 101 108 108 111</code> becomes <code>Hello</code>",infoURL:null,inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]},{name:"Support signed values",type:"boolean",value:!1}],patterns:[{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?: (?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["Space",!1]},{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?:,(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["Comma",!1]},{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?:;(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["Semi-colon",!1]},{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?::(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["Colon",!1]},{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?:\\n(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["Line feed",!1]},{match:"^(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5])(?:\\r\\n(?:\\d{1,2}|1\\d{2}|2[0-4]\\d|25[0-5]))*$",flags:"",args:["CRLF",!1]}]},"From HTML Entity":{module:"Default",description:"Converts HTML entities back to characters<br><br>e.g. <code>&amp;<span>amp;</span></code> becomes <code>&amp;</code>",infoURL:"https://wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"&(?:#\\d{2,3}|#x[\\da-f]{2}|[a-z]{2,6});",flags:"i",args:[]}]},"From Hex":{module:"Default",description:"Converts a hexadecimal byte string back into its raw value.<br><br>e.g. <code>ce 93 ce b5 ce b9 ce ac 20 cf 83 ce bf cf 85 0a</code> becomes the UTF-8 encoded string <code>Γειά σου</code>",infoURL:"https://wikipedia.org/wiki/Hexadecimal",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Auto","Space","Percent","Comma","Semi-colon","Colon","Line feed","CRLF","0x","\\x","None"]}],patterns:[{match:"^(?:[\\dA-F]{2})+$",flags:"i",args:["None"]},{match:"^[\\dA-F]{2}(?: [\\dA-F]{2})*$",flags:"i",args:["Space"]},{match:"^[\\dA-F]{2}(?:,[\\dA-F]{2})*$",flags:"i",args:["Comma"]},{match:"^[\\dA-F]{2}(?:;[\\dA-F]{2})*$",flags:"i",args:["Semi-colon"]},{match:"^[\\dA-F]{2}(?::[\\dA-F]{2})*$",flags:"i",args:["Colon"]},{match:"^[\\dA-F]{2}(?:\\n[\\dA-F]{2})*$",flags:"i",args:["Line feed"]},{match:"^[\\dA-F]{2}(?:\\r\\n[\\dA-F]{2})*$",flags:"i",args:["CRLF"]},{match:"^[\\dA-F]{2}(?:0x[\\dA-F]{2})*$",flags:"i",args:["0x"]},{match:"^[\\dA-F]{2}(?:\\\\x[\\dA-F]{2})*$",flags:"i",args:["\\x"]}]},"From Hex Content":{module:"Default",description:"Translates hexadecimal bytes in text back to raw bytes. This format is used by SNORT for representing hex within ASCII text.<br><br>e.g. <code>foo|3d|bar</code> becomes <code>foo=bar</code>.",infoURL:"http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node32.html#SECTION00451000000000000000",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},"From Hexdump":{module:"Default",description:"Attempts to convert a hexdump back into raw data. This operation supports many different hexdump variations, but probably not all. Make sure you verify that the data it gives you is correct before continuing analysis.",infoURL:"https://wikipedia.org/wiki/Hex_dump",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"^(?:(?:[\\dA-F]{4,16}h?:?)?[ \\t]*((?:[\\dA-F]{2} ){1,8}(?:[ \\t]|[\\dA-F]{2}-)(?:[\\dA-F]{2} ){1,8}|(?:[\\dA-F]{4} )*[\\dA-F]{4}|(?:[\\dA-F]{2} )*[\\dA-F]{2})[^\\n]*\\n?){2,}$",flags:"i",args:[]}]},"From MessagePack":{module:"Code",description:"Converts MessagePack encoded data to JSON. MessagePack is a computer data interchange format. It is a binary form for representing simple data structures like arrays and associative arrays.",infoURL:"https://wikipedia.org/wiki/MessagePack",inputType:"ArrayBuffer",outputType:"JSON",flowControl:!1,manualBake:!1,args:[]},"From Morse Code":{module:"Default",description:"Translates Morse Code into (upper case) alphanumeric characters.",infoURL:"https://wikipedia.org/wiki/Morse_code",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Letter delimiter",type:"option",value:["Space","Line feed","CRLF","Forward slash","Backslash","Comma","Semi-colon","Colon"]},{name:"Word delimiter",type:"option",value:["Line feed","CRLF","Forward slash","Backslash","Comma","Semi-colon","Colon"]}],patterns:[{match:"(?:^[-. \\n]{5,}$|^[_. \\n]{5,}$|^(?:dash|dot| |\\n){5,}$)",flags:"i",args:["Space","Line feed"]}]},"From Octal":{module:"Default",description:"Converts an octal byte string back into its raw value.<br><br>e.g. <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code> becomes the UTF-8 encoded string <code>Γειά σου</code>",infoURL:"https://wikipedia.org/wiki/Octal",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]}],patterns:[{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?: (?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["Space"]},{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?:,(?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["Comma"]},{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?:;(?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["Semi-colon"]},{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?::(?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["Colon"]},{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?:\\n(?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["Line feed"]},{match:"^(?:[0-7]{1,2}|[123][0-7]{2})(?:\\r\\n(?:[0-7]{1,2}|[123][0-7]{2}))*$",flags:"",args:["CRLF"]}]},"From Punycode":{module:"Encodings",description:"Punycode is a way to represent Unicode with the limited character subset of ASCII supported by the Domain Name System.<br><br>e.g. <code>mnchen-3ya</code> decodes to <code>münchen</code>",infoURL:"https://wikipedia.org/wiki/Punycode",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Internationalised domain name",type:"boolean",value:!1}]},"From Quoted Printable":{module:"Default",description:"Converts QP-encoded text back to standard text.",infoURL:"https://wikipedia.org/wiki/Quoted-printable",inputType:"string",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"^[\\x21-\\x3d\\x3f-\\x7e \\t]{0,76}(?:=[\\da-f]{2}|=\\r?\\n)(?:[\\x21-\\x3d\\x3f-\\x7e \\t]|=[\\da-f]{2}|=\\r?\\n)*$",flags:"i",args:[]}]},"From UNIX Timestamp":{module:"Default",description:"Converts a UNIX timestamp to a datetime string.<br><br>e.g. <code>978346800</code> becomes <code>Mon 1 January 2001 11:00:00 UTC</code><br><br>A UNIX timestamp is a 32-bit value representing the number of seconds since January 1, 1970 UTC (the UNIX epoch).",infoURL:"https://wikipedia.org/wiki/Unix_time",inputType:"number",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Units",type:"option",value:["Seconds (s)","Milliseconds (ms)","Microseconds (μs)","Nanoseconds (ns)"]}],patterns:[{match:"^1?\\d{9}$",flags:"",args:["Seconds (s)"]},{match:"^1?\\d{12}$",flags:"",args:["Milliseconds (ms)"]},{match:"^1?\\d{15}$",flags:"",args:["Microseconds (μs)"]},{match:"^1?\\d{18}$",flags:"",args:["Nanoseconds (ns)"]}]},"Generate all hashes":{module:"Crypto",description:"Generates all available hashes and checksums for the input.",infoURL:"https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Generate HOTP":{module:"Default",description:"The HMAC-based One-Time Password algorithm (HOTP) is an algorithm that computes a one-time password from a shared secret key and an incrementing counter. It has been adopted as Internet Engineering Task Force standard RFC 4226, is the cornerstone of Initiative For Open Authentication (OATH), and is used in a number of two-factor authentication systems.<br><br>Enter the secret as the input or leave it blank for a random secret to be generated.",infoURL:"https://wikipedia.org/wiki/HMAC-based_One-time_Password_algorithm",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Name",type:"string",value:""},{name:"Key size",type:"number",value:32},{name:"Code length",type:"number",value:6},{name:"Counter",type:"number",value:0}]},"Generate Lorem Ipsum":{module:"Default",description:"Generate varying length lorem ipsum placeholder text.",infoURL:"https://wikipedia.org/wiki/Lorem_ipsum",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Length",type:"number",value:"3"},{name:"Length in",type:"option",value:["Paragraphs","Sentences","Words","Bytes"]}]},"Generate PGP Key Pair":{module:"PGP",description:"Generates a new public/private PGP key pair. Supports RSA and Eliptic Curve (EC) keys.",infoURL:"https://wikipedia.org/wiki/Pretty_Good_Privacy",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key type",type:"option",value:["RSA-1024","RSA-2048","RSA-4096","ECC-256","ECC-384"]},{name:"Password (optional)",type:"string",value:""},{name:"Name (optional)",type:"string",value:""},{name:"Email (optional)",type:"string",value:""}]},"Generate QR Code":{module:"Image",description:"Generates a Quick Response (QR) code from the input text.<br><br>A QR code is a type of matrix barcode (or two-dimensional barcode) first designed in 1994 for the automotive industry in Japan. A barcode is a machine-readable optical label that contains information about the item to which it is attached.",infoURL:"https://wikipedia.org/wiki/QR_code",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Image Format",type:"option",value:["PNG","SVG","EPS","PDF"]},{name:"Module size (px)",type:"number",value:5},{name:"Margin (num modules)",type:"number",value:2},{name:"Error correction",type:"option",value:["Low","Medium","Quartile","High"],defaultIndex:1}]},"Generate TOTP":{module:"Default",description:"The Time-based One-Time Password algorithm (TOTP) is an algorithm that computes a one-time password from a shared secret key and the current time. It has been adopted as Internet Engineering Task Force standard RFC 6238, is the cornerstone of Initiative For Open Authentication (OATH), and is used in a number of two-factor authentication systems. A TOTP is an HOTP where the counter is the current time.<br><br>Enter the secret as the input or leave it blank for a random secret to be generated. T0 and T1 are in seconds.",infoURL:"https://wikipedia.org/wiki/Time-based_One-time_Password_algorithm",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Name",type:"string",value:""},{name:"Key size",type:"number",value:32},{name:"Code length",type:"number",value:6},{name:"Epoch offset (T0)",type:"number",value:0},{name:"Interval (T1)",type:"number",value:30}]},"Generate UUID":{module:"Crypto",description:"Generates an RFC 4122 version 4 compliant Universally Unique Identifier (UUID), also known as a Globally Unique Identifier (GUID).<br><br>A version 4 UUID relies on random numbers, in this case generated using <code>window.crypto</code> if available and falling back to <code>Math.random</code> if not.",infoURL:"https://wikipedia.org/wiki/Universally_unique_identifier",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Generic Code Beautify":{module:"Code",description:"Attempts to pretty print C-style languages such as C, C++, C#, Java, PHP, JavaScript etc.<br><br>This will not do a perfect job, and the resulting code may not work any more. This operation is designed purely to make obfuscated or minified code more easy to read and understand.<br><br>Things which will not work properly:<ul><li>For loop formatting</li><li>Do-While loop formatting</li><li>Switch/Case indentation</li><li>Certain bit shift operators</li></ul>",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Group IP addresses":{module:"Default",description:"Groups a list of IP addresses into subnets. Supports both IPv4 and IPv6 addresses.",infoURL:"https://wikipedia.org/wiki/Subnetwork",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon"]},{name:"Subnet (CIDR)",type:"number",value:24},{name:"Only show the subnets",type:"boolean",value:!1}]},Gunzip:{module:"Compression",description:"Decompresses data which has been compressed using the deflate algorithm with gzip headers.",infoURL:"https://wikipedia.org/wiki/Gzip",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"^\\x1f\\x8b\\x08",flags:"",args:[]}]},Gzip:{module:"Compression",description:"Compresses data using the deflate algorithm with gzip headers.",infoURL:"https://wikipedia.org/wiki/Gzip",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding","None (Store)"]},{name:"Filename (optional)",type:"string",value:""},{name:"Comment (optional)",type:"string",value:""},{name:"Include file checksum",type:"boolean",value:!1}]},"HAS-160":{module:"Crypto",description:"HAS-160 is a cryptographic hash function designed for use with the Korean KCDSA digital signature algorithm. It is derived from SHA-1, with assorted changes intended to increase its security. It produces a 160-bit output.<br><br>HAS-160 is used in the same way as SHA-1. First it divides input in blocks of 512 bits each and pads the final block. A digest function updates the intermediate hash value by processing the input blocks in turn.<br><br>The message digest algorithm consists of 80 rounds.",infoURL:"https://wikipedia.org/wiki/HAS-160",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},HMAC:{module:"Crypto",description:"Keyed-Hash Message Authentication Codes (HMAC) are a mechanism for message authentication using cryptographic hash functions.",infoURL:"https://wikipedia.org/wiki/HMAC",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Base64","UTF8","Latin1"]},{name:"Hashing function",type:"option",value:["MD2","MD4","MD5","SHA0","SHA1","SHA224","SHA256","SHA384","SHA512","SHA512/224","SHA512/256","RIPEMD128","RIPEMD160","RIPEMD256","RIPEMD320","HAS160","Whirlpool","Whirlpool-0","Whirlpool-T","Snefru"]}]},"HTML To Text":{module:"Default",description:"Converts an HTML output from an operation to a readable string instead of being rendered in the DOM.",infoURL:"",inputType:"html",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"HTTP request":{module:"Default",description:"Makes an HTTP request and returns the response.\n<br><br>\nThis operation supports different HTTP verbs like GET, POST, PUT, etc.\n<br><br>\nYou can add headers line by line in the format <code>Key: Value</code>\n<br><br>\nThe status code of the response, along with a limited selection of exposed headers, can be viewed by checking the 'Show response metadata' option. Only a limited set of response headers are exposed by the browser for security reasons.",infoURL:"https://wikipedia.org/wiki/List_of_HTTP_header_fields#Request_fields",inputType:"string",outputType:"string",flowControl:!1,manualBake:!0,args:[{name:"Method",type:"option",value:["GET","POST","HEAD","PUT","PATCH","DELETE","CONNECT","TRACE","OPTIONS"]},{name:"URL",type:"string",value:""},{name:"Headers",type:"text",value:""},{name:"Mode",type:"option",value:["Cross-Origin Resource Sharing","No CORS (limited to HEAD, GET or POST)"]},{name:"Show response metadata",type:"boolean",value:!1}]},"Hamming Distance":{module:"Default",description:"In information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. In other words, it measures the minimum number of substitutions required to change one string into the other, or the minimum number of errors that could have transformed one string into the other. In a more general context, the Hamming distance is one of several string metrics for measuring the edit distance between two sequences.",infoURL:"https://wikipedia.org/wiki/Hamming_distance",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"binaryShortString",value:"\\n\\n"},{name:"Unit",type:"option",value:["Byte","Bit"]},{name:"Input type",type:"option",value:["Raw string","Hex"]}]},"Haversine distance":{module:"Default",description:"Returns the distance between two pairs of GPS latitude and longitude co-ordinates in metres.<br><br>e.g. <code>51.487263,-0.124323, 38.9517,-77.1467</code>",infoURL:"https://wikipedia.org/wiki/Haversine_formula",inputType:"string",outputType:"number",flowControl:!1,manualBake:!1,args:[]},Head:{module:"Default",description:"Like the UNIX head utility.<br>Gets the first n lines.<br>You can select all but the last n lines by entering a negative value for n.<br>The delimiter can be changed so that instead of lines, fields (i.e. commas) are selected instead.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon","Colon","Nothing (separate chars)"]},{name:"Number",type:"number",value:10}]},"Heatmap chart":{module:"Charts",description:"A heatmap is a graphical representation of data where the individual values contained in a matrix are represented as colors.",infoURL:"https://wikipedia.org/wiki/Heat_map",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Record delimiter",type:"option",value:["Line feed","CRLF"]},{name:"Field delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Tab"]},{name:"Number of vertical bins",type:"number",value:25},{name:"Number of horizontal bins",type:"number",value:25},{name:"Use column headers as labels",type:"boolean",value:!0},{name:"X label",type:"string",value:""},{name:"Y label",type:"string",value:""},{name:"Draw bin edges",type:"boolean",value:!1},{name:"Min colour value",type:"string",value:"white"},{name:"Max colour value",type:"string",value:"black"}]},"Hex Density chart":{module:"Charts",description:"Hex density charts are used in a similar way to scatter charts, however rather than rendering tens of thousands of points, it groups the points into a few hundred hexagons to show the distribution.",infoURL:null,inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Record delimiter",type:"option",value:["Line feed","CRLF"]},{name:"Field delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Tab"]},{name:"Pack radius",type:"number",value:25},{name:"Draw radius",type:"number",value:15},{name:"Use column headers as labels",type:"boolean",value:!0},{name:"X label",type:"string",value:""},{name:"Y label",type:"string",value:""},{name:"Draw hexagon edges",type:"boolean",value:!1},{name:"Min colour value",type:"string",value:"white"},{name:"Max colour value",type:"string",value:"black"},{name:"Draw empty hexagons within data boundaries",type:"boolean",value:!1}]},"Hex to Object Identifier":{module:"PublicKey",description:"Converts a hexadecimal string into an object identifier (OID).",infoURL:"https://wikipedia.org/wiki/Object_identifier",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Hex to PEM":{module:"PublicKey",description:"Converts a hexadecimal DER (Distinguished Encoding Rules) string into PEM (Privacy Enhanced Mail) format.",infoURL:"https://wikipedia.org/wiki/Privacy-Enhanced_Mail",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Header string",type:"string",value:"CERTIFICATE"}]},"Image Brightness / Contrast":{module:"Image",description:"Adjust the brightness or contrast of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Brightness",type:"number",value:0,min:-100,max:100},{name:"Contrast",type:"number",value:0,min:-100,max:100}]},"Image Filter":{module:"Image",description:"Applies a greyscale or sepia filter to an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Filter type",type:"option",value:["Greyscale","Sepia"]}]},"Image Hue/Saturation/Lightness":{module:"Image",description:"Adjusts the hue / saturation / lightness (HSL) values of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Hue",type:"number",value:0,min:-360,max:360},{name:"Saturation",type:"number",value:0,min:-100,max:100},{name:"Lightness",type:"number",value:0,min:-100,max:100}]},"Image Opacity":{module:"Image",description:"Adjust the opacity of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Opacity (%)",type:"number",value:100,min:0,max:100}]},"Invert Image":{module:"Image",description:"Invert the colours of an image.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},"JPath expression":{module:"Code",description:"Extract information from a JSON object with a JPath query.",infoURL:"http://goessner.net/articles/JsonPath/",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Query",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}]},"JSON Beautify":{module:"Code",description:"Indents and prettifies JavaScript Object Notation (JSON) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"    "},{name:"Sort Object Keys",type:"boolean",value:!1}]},"JSON Minify":{module:"Code",description:"Compresses JavaScript Object Notation (JSON) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"JSON to CSV":{module:"Default",description:"Converts JSON data to a CSV based on the definition in RFC 4180.",infoURL:"https://wikipedia.org/wiki/Comma-separated_values",inputType:"JSON",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Cell delimiter",type:"binaryShortString",value:","},{name:"Row delimiter",type:"binaryShortString",value:"\\r\\n"}]},"JWT Decode":{module:"Crypto",description:"Decodes a JSON Web Token <b>without</b> checking whether the provided secret / private key is valid. Use 'JWT Verify' to check if the signature is valid as well.",infoURL:"https://wikipedia.org/wiki/JSON_Web_Token",inputType:"string",outputType:"JSON",flowControl:!1,manualBake:!1,args:[]},"JWT Sign":{module:"Crypto",description:"Signs a JSON object as a JSON Web Token using a provided secret / private key.<br><br>The key should be either the secret for HMAC algorithms or the PEM-encoded private key for RSA and ECDSA.",infoURL:"https://wikipedia.org/wiki/JSON_Web_Token",inputType:"JSON",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Private/Secret Key",type:"text",value:"secret"},{name:"Signing algorithm",type:"option",value:["HS256","HS384","HS512","RS256","RS384","RS512","ES256","ES384","ES512","None"]}]},"JWT Verify":{module:"Crypto",description:"Verifies that a JSON Web Token is valid and has been signed with the provided secret / private key.<br><br>The key should be either the secret for HMAC algorithms or the PEM-encoded private key for RSA and ECDSA.",infoURL:"https://wikipedia.org/wiki/JSON_Web_Token",inputType:"string",outputType:"JSON",flowControl:!1,manualBake:!1,args:[{name:"Private/Secret Key",type:"text",value:"secret"}]},"JavaScript Beautify":{module:"Code",description:"Parses and pretty prints valid JavaScript code. Also works with JavaScript Object Notation (JSON).",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"\\t"},{name:"Quotes",type:"option",value:["Auto","Single","Double"]},{name:"Semicolons before closing braces",type:"boolean",value:!0},{name:"Include comments",type:"boolean",value:!0}]},"JavaScript Minify":{module:"Code",description:"Compresses JavaScript code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"JavaScript Parser":{module:"Code",description:"Returns an Abstract Syntax Tree for valid JavaScript code.",infoURL:"https://wikipedia.org/wiki/Abstract_syntax_tree",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Location info",type:"boolean",value:!1},{name:"Range info",type:"boolean",value:!1},{name:"Include tokens array",type:"boolean",value:!1},{name:"Include comments array",type:"boolean",value:!1},{name:"Report errors and try to continue",type:"boolean",value:!1}]},Jump:{module:"Default",description:"Jump forwards or backwards to the specified Label",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Label name",type:"string",value:""},{name:"Maximum jumps (if jumping backwards)",type:"number",value:10}]},Keccak:{module:"Crypto",description:"The Keccak hash algorithm was designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún. It was selected as the winner of the SHA-3 design competition.<br><br>This version of the algorithm is Keccak[c=2d] and differs from the SHA-3 specification.",infoURL:"https://wikipedia.org/wiki/SHA-3",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["512","384","256","224"]}]},Label:{module:"Default",description:"Provides a location for conditional and fixed jumps to redirect execution to.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Name",type:"shortString",value:""}]},MD2:{module:"Crypto",description:"The MD2 (Message-Digest 2) algorithm is a cryptographic hash function developed by Ronald Rivest in 1989. The algorithm is optimized for 8-bit computers.<br><br>Although MD2 is no longer considered secure, even as of 2014, it remains in use in public key infrastructures as part of certificates generated with MD2 and RSA.",infoURL:"https://wikipedia.org/wiki/MD2_(cryptography)",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},MD4:{module:"Crypto",description:"The MD4 (Message-Digest 4) algorithm is a cryptographic hash function developed by Ronald Rivest in 1990. The digest length is 128 bits. The algorithm has influenced later designs, such as the MD5, SHA-1 and RIPEMD algorithms.<br><br>The security of MD4 has been severely compromised.",infoURL:"https://wikipedia.org/wiki/MD4",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},MD5:{module:"Crypto",description:"MD5 (Message-Digest 5) is a widely used hash function. It has been used in a variety of security applications and is also commonly used to check the integrity of files.<br><br>However, MD5 is not collision resistant and it isn't suitable for applications like SSL/TLS certificates or digital signatures that rely on this property.",infoURL:"https://wikipedia.org/wiki/MD5",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},MD6:{module:"Crypto",description:"The MD6 (Message-Digest 6) algorithm is a cryptographic hash function. It uses a Merkle tree-like structure to allow for immense parallel computation of hashes for very long inputs.",infoURL:"https://wikipedia.org/wiki/MD6",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"number",value:256},{name:"Levels",type:"number",value:64},{name:"Key",type:"string",value:""}]},Magic:{module:"Default",description:"The Magic operation attempts to detect various properties of the input data and suggests which operations could help to make more sense of it.<br><br><b>Options</b><br><u>Depth:</u> If an operation appears to match the data, it will be run and the result will be analysed further. This argument controls the maximum number of levels of recursion.<br><br><u>Intensive mode:</u> When this is turned on, various operations like XOR, bit rotates, and character encodings are brute-forced to attempt to detect valid data underneath. To improve performance, only the first 100 bytes of the data is brute-forced.<br><br><u>Extensive language support:</u> At each stage, the relative byte frequencies of the data will be compared to average frequencies for a number of languages. The default set consists of ~40 of the most commonly used languages on the Internet. The extensive list consists of 284 languages and can result in many languages matching the data if their byte frequencies are similar.<br><br>Optionally enter a regular expression to match a string you expect to find to filter results (crib).",infoURL:"https://github.com/gchq/CyberChef/wiki/Automatic-detection-of-encoded-data-using-CyberChef-Magic",inputType:"ArrayBuffer",outputType:"html",flowControl:!0,manualBake:!1,args:[{name:"Depth",type:"number",value:3},{name:"Intensive mode",type:"boolean",value:!1},{name:"Extensive language support",type:"boolean",value:!1},{name:"Crib (known plaintext string or regex)",type:"string",value:""}]},Mean:{module:"Default",description:"Computes the mean (average) of a number list. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5 .5</code> becomes <code>4.75</code>",infoURL:"https://wikipedia.org/wiki/Arithmetic_mean",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},Median:{module:"Default",description:"Computes the median of a number list. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 1 .5</code> becomes <code>4.5</code>",infoURL:"https://wikipedia.org/wiki/Median",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},Merge:{module:"Default",description:"Consolidate all branches back into a single trunk. The opposite of Fork.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[]},"Microsoft Script Decoder":{module:"Default",description:"Decodes Microsoft Encoded Script files that have been encoded with Microsoft's custom encoding. These are often VBS (Visual Basic Script) files that are encoded and renamed with a '.vbe' extention or JS (JScript) files renamed with a '.jse' extention.<br><br><b>Sample</b><br><br>Encoded:<br><code>#@~^RQAAAA==-mD~sX|:/TP{~J:+dYbxL~@!F@*@!+@*@!&amp;@*eEI@#@&amp;@#@&amp;.jm.raY 214Wv:zms/obI0xEAAA==^#~@</code><br><br>Decoded:<br><code>var my_msg = &#34;Testing <1><2><3>!&#34;;\n\nVScript.Echo(my_msg);</code>",infoURL:"https://wikipedia.org/wiki/JScript.Encode",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Multiple Bombe":{module:"Default",description:"Emulation of the Bombe machine used to attack Enigma. This version carries out multiple Bombe runs to handle unknown rotor configurations.<br><br>You should test your menu on the single Bombe operation before running it here. See the description of the Bombe operation for instructions on choosing a crib.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.",infoURL:"https://wikipedia.org/wiki/Bombe",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Standard Enigmas",type:"populateMultiOption",value:[{name:"German Service Enigma (First - 3 rotor)",value:["EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\nVZBRGITYUPSDNHLXAWMJQOFECK<A","","AY BR CU DH EQ FS GL IP JX KN MO TZ VW"]},{name:"German Service Enigma (Second - 3 rotor)",value:["EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\nVZBRGITYUPSDNHLXAWMJQOFECK<A\nJPGVOUMFYQBENHZRDKASXLICTW<AN\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN","","AY BR CU DH EQ FS GL IP JX KN MO TZ VW\nAF BV CP DJ EI GO HY KR LZ MX NW TQ SU"]},{name:"German Service Enigma (Third - 4 rotor)",value:["EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\nVZBRGITYUPSDNHLXAWMJQOFECK<A\nJPGVOUMFYQBENHZRDKASXLICTW<AN\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN","FSOKANUERHMBTIYCWLQPZXVGJD","AE BN CK DQ FU GY HW IJ LO MP RX SZ TV"]},{name:"German Service Enigma (Fourth - 4 rotor)",value:["EKMFLGDQVZNTOWYHXUSPAIBRCJ<R\nAJDKSIRUXBLHWTMCQGZNPYFVOE<F\nBDFHJLCPRTXVZNYEIWGAKMUSQO<W\nESOVPZJAYQUIRHXLNFTGKDCMWB<K\nVZBRGITYUPSDNHLXAWMJQOFECK<A\nJPGVOUMFYQBENHZRDKASXLICTW<AN\nNZJHGRCXMYSWBOUFAIVLPEKQDT<AN\nFKQHTLXOCBJSPDZRAMEWNIUYGV<AN","FSOKANUERHMBTIYCWLQPZXVGJD","AE BN CK DQ FU GY HW IJ LO MP RX SZ TV\nAR BD CO EJ FN GT HK IV LM PW QZ SX UY"]},{name:"User defined",value:["","",""]}],target:[1,2,3]},{name:"Main rotors",type:"text",value:""},{name:"4th rotor",type:"text",value:""},{name:"Reflectors",type:"text",value:""},{name:"Crib",type:"string",value:""},{name:"Crib offset",type:"number",value:0},{name:"Use checking machine",type:"boolean",value:!0}]},Multiply:{module:"Default",description:"Multiplies a list of numbers. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5</code> becomes <code>40</code>",infoURL:"https://wikipedia.org/wiki/Multiplication",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},NOT:{module:"Default",description:"Returns the inverse of each byte.",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#NOT",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},"Normalise Image":{module:"Image",description:"Normalise the image colours.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},Numberwang:{module:"Default",description:"Based on the popular gameshow by Mitchell and Webb.",infoURL:"https://wikipedia.org/wiki/That_Mitchell_and_Webb_Look#Recurring_sketches",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},OR:{module:"Default",description:"OR the input with the given key.<br>e.g. <code>fe023da5</code>",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#OR",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Binary","Base64","UTF8","Latin1"]}]},"Object Identifier to Hex":{module:"PublicKey",description:"Converts an object identifier (OID) into a hexadecimal string.",infoURL:"https://wikipedia.org/wiki/Object_identifier",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Offset checker":{module:"Default",description:"Compares multiple inputs (separated by the specified delimiter) and highlights matching characters which appear at the same position in all samples.",infoURL:null,inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"}]},"PEM to Hex":{module:"PublicKey",description:"Converts PEM (Privacy Enhanced Mail) format to a hexadecimal DER (Distinguished Encoding Rules) string.",infoURL:"https://wikipedia.org/wiki/X.690#DER_encoding",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"PGP Decrypt":{module:"PGP",description:"Input: the ASCII-armoured PGP message you want to decrypt.\n<br><br>\nArguments: the ASCII-armoured PGP private key of the recipient, \n(and the private key password if necessary).\n<br><br>\nPretty Good Privacy is an encryption standard (OpenPGP) used for encrypting, decrypting, and signing messages.\n<br><br>\nThis function uses the Keybase implementation of PGP.",infoURL:"https://wikipedia.org/wiki/Pretty_Good_Privacy",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Private key of recipient",type:"text",value:""},{name:"Private key passphrase",type:"string",value:""}]},"PGP Decrypt and Verify":{module:"PGP",description:"Input: the ASCII-armoured encrypted PGP message you want to verify.\n<br><br>\nArguments: the ASCII-armoured PGP public key of the signer, \nthe ASCII-armoured private key of the recipient (and the private key password if necessary).\n<br><br>\nThis operation uses PGP to decrypt and verify an encrypted digital signature.\n<br><br>\nPretty Good Privacy is an encryption standard (OpenPGP) used for encrypting, decrypting, and signing messages.\n<br><br>\nThis function uses the Keybase implementation of PGP.",infoURL:"https://wikipedia.org/wiki/Pretty_Good_Privacy",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Public key of signer",type:"text",value:""},{name:"Private key of recipient",type:"text",value:""},{name:"Private key password",type:"string",value:""}]},"PGP Encrypt":{module:"PGP",description:"Input: the message you want to encrypt.\n<br><br>\nArguments: the ASCII-armoured PGP public key of the recipient.\n<br><br>\nPretty Good Privacy is an encryption standard (OpenPGP) used for encrypting, decrypting, and signing messages.\n<br><br>\nThis function uses the Keybase implementation of PGP.",infoURL:"https://wikipedia.org/wiki/Pretty_Good_Privacy",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Public key of recipient",type:"text",value:""}]},"PGP Encrypt and Sign":{module:"PGP",description:"Input: the cleartext you want to sign.\n<br><br>\nArguments: the ASCII-armoured private key of the signer (plus the private key password if necessary)\nand the ASCII-armoured PGP public key of the recipient.\n<br><br>\nThis operation uses PGP to produce an encrypted digital signature.\n<br><br>\nPretty Good Privacy is an encryption standard (OpenPGP) used for encrypting, decrypting, and signing messages.\n<br><br>\nThis function uses the Keybase implementation of PGP.",infoURL:"https://wikipedia.org/wiki/Pretty_Good_Privacy",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Private key of signer",type:"text",value:""},{name:"Private key passphrase",type:"string",value:""},{name:"Public key of recipient",type:"text",value:""}]},"PHP Deserialize":{module:"Default",description:"Deserializes PHP serialized data, outputting keyed arrays as JSON.<br><br>This function does not support <code>object</code> tags.<br><br>Example:<br><code>a:2:{s:1:&quot;a&quot;;i:10;i:0;a:1:{s:2:&quot;ab&quot;;b:1;}}</code><br>becomes<br><code>{&quot;a&quot;: 10,0: {&quot;ab&quot;: true}}</code><br><br><u>Output valid JSON:</u> JSON doesn't support integers as keys, whereas PHP serialization does. Enabling this will cast these integers to strings. This will also escape backslashes.",infoURL:"http://www.phpinternalsbook.com/classes_objects/serialization.html",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Output valid JSON",type:"boolean",value:!0}]},"Pad lines":{module:"Default",description:"Add the specified number of the specified character to the beginning or end of each line",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Position",type:"option",value:["Start","End"]},{name:"Length",type:"number",value:5},{name:"Character",type:"binaryShortString",value:" "}]},"Parse ASN.1 hex string":{module:"PublicKey",description:"Abstract Syntax Notation One (ASN.1) is a standard and notation that describes rules and structures for representing, encoding, transmitting, and decoding data in telecommunications and computer networking.<br><br>This operation parses arbitrary ASN.1 data and presents the resulting tree.",infoURL:"https://wikipedia.org/wiki/Abstract_Syntax_Notation_One",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Starting index",type:"number",value:0},{name:"Truncate octet strings longer than",type:"number",value:32}]},"Parse colour code":{module:"Default",description:"Converts a colour code in a standard format to other standard formats and displays the colour itself.<br><br><strong>Example inputs</strong><ul><li><code>#d9edf7</code></li><li><code>rgba(217,237,247,1)</code></li><li><code>hsla(200,65%,91%,1)</code></li><li><code>cmyk(0.12, 0.04, 0.00, 0.03)</code></li></ul>",infoURL:"https://wikipedia.org/wiki/Web_colors",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[]},"Parse DateTime":{module:"Default",description:"Parses a DateTime string in your specified format and displays it in whichever timezone you choose with the following information:<ul><li>Date</li><li>Time</li><li>Period (AM/PM)</li><li>Timezone</li><li>UTC offset</li><li>Daylight Saving Time</li><li>Leap year</li><li>Days in this month</li><li>Day of year</li><li>Week number</li><li>Quarter</li></ul>Run with no input to see format string examples if required.",infoURL:"https://momentjs.com/docs/#/parsing/string-format/",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Built in formats",type:"populateOption",value:[{name:"Standard date and time",value:"DD/MM/YYYY HH:mm:ss"},{name:"American-style date and time",value:"MM/DD/YYYY HH:mm:ss"},{name:"International date and time",value:"YYYY-MM-DD HH:mm:ss"},{name:"Verbose date and time",value:"dddd Do MMMM YYYY HH:mm:ss Z z"},{name:"UNIX timestamp (seconds)",value:"X"},{name:"UNIX timestamp offset (milliseconds)",value:"x"},{name:"Automatic",value:""}],target:1},{name:"Input format string",type:"binaryString",value:"DD/MM/YYYY HH:mm:ss"},{name:"Input timezone",type:"option",value:["UTC","Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","CET","CST6CDT","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Cuba","EET","EST","EST5EDT","Egypt","Eire","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT-0","GMT0","Greenwich","HST","Hongkong","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","NZ","NZ-CHAT","Navajo","PRC","PST8PDT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","Universal","W-SU","WET","Zulu"]}]},"Parse IP range":{module:"Default",description:"Given a CIDR range (e.g. <code>10.0.0.0/24</code>), hyphenated range (e.g. <code>10.0.0.0 - 10.0.1.0</code>), or a list of IPs and/or CIDR ranges (separated by a new line), this operation provides network information and enumerates all IP addresses in the range.<br><br>IPv6 is supported but will not be enumerated.",infoURL:"https://wikipedia.org/wiki/Subnetwork",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Include network info",type:"boolean",value:!0},{name:"Enumerate IP addresses",type:"boolean",value:!0},{name:"Allow large queries",type:"boolean",value:!1}]},"Parse IPv4 header":{module:"Default",description:"Given an IPv4 header, this operations parses and displays each field in an easily readable format.",infoURL:"https://wikipedia.org/wiki/IPv4#Header",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Input format",type:"option",value:["Hex","Raw"]}]},"Parse IPv6 address":{module:"Default",description:"Displays the longhand and shorthand versions of a valid IPv6 address.<br><br>Recognises all reserved ranges and parses encapsulated or tunnelled addresses including Teredo and 6to4.",infoURL:"https://wikipedia.org/wiki/IPv6_address",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Parse QR Code":{module:"Image",description:"Reads an image file and attempts to detect and read a Quick Response (QR) code from the image.<br><br><u>Normalise Image</u><br>Attempts to normalise the image before parsing it to improve detection of a QR code.",infoURL:"https://wikipedia.org/wiki/QR_code",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Normalise image",type:"boolean",value:!1}]},"Parse TLV":{module:"Default",description:"Converts a Type-Length-Value (TLV) encoded string into a JSON object.  Can optionally include a <code>Key</code> / <code>Type</code> entry. <br><br>Tags: Key-Length-Value, KLV, Length-Value, LV",infoURL:"https://wikipedia.org/wiki/Type-length-value",inputType:"byteArray",outputType:"JSON",flowControl:!1,manualBake:!1,args:[{name:"Type/Key size",type:"number",value:1},{name:"Length size",type:"number",value:1},{name:"Use BER",type:"boolean",value:!1}]},"Parse UNIX file permissions":{module:"Default",description:"Given a UNIX/Linux file permission string in octal or textual format, this operation explains which permissions are granted to which user groups.<br><br>Input should be in either octal (e.g. <code>755</code>) or textual (e.g. <code>drwxr-xr-x</code>) format.",infoURL:"https://wikipedia.org/wiki/File_system_permissions#Traditional_Unix_permissions",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Parse URI":{module:"URL",description:"Pretty prints complicated Uniform Resource Identifier (URI) strings for ease of reading. Particularly useful for Uniform Resource Locators (URLs) with a lot of arguments.",infoURL:"https://wikipedia.org/wiki/Uniform_Resource_Identifier",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Parse User Agent":{module:"UserAgent",description:"Attempts to identify and categorise information contained in a user-agent string.",infoURL:"https://wikipedia.org/wiki/User_agent",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Parse X.509 certificate":{module:"PublicKey",description:"X.509 is an ITU-T standard for a public key infrastructure (PKI) and Privilege Management Infrastructure (PMI). It is commonly involved with SSL/TLS security.<br><br>This operation displays the contents of a certificate in a human readable format, similar to the openssl command line tool.<br><br>Tags: X509, server hello, handshake",infoURL:"https://wikipedia.org/wiki/X.509",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Input format",type:"option",value:["PEM","DER Hex","Base64","Raw"]}],patterns:[{match:"^-+BEGIN CERTIFICATE-+\\r?\\n[\\da-z+/\\n\\r]+-+END CERTIFICATE-+\\r?\\n?$",flags:"i",args:["PEM"]}]},"Play Media":{module:"Default",description:"Plays the input as audio or video depending on the type.<br><br>Tags: sound, movie, mp3, mp4, mov, webm, wav, ogg",infoURL:"",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Input format",type:"option",value:["Raw","Base64","Hex"]}]},"Power Set":{module:"Default",description:"Calculates all the subsets of a set.",infoURL:"https://wikipedia.org/wiki/Power_set",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Item delimiter",type:"binaryString",value:","}]},"Protobuf Decode":{module:"Default",description:"Decodes any Protobuf encoded data to a JSON representation of the data using the field number as the field key.",infoURL:"https://wikipedia.org/wiki/Protocol_Buffers",inputType:"byteArray",outputType:"JSON",flowControl:!1,manualBake:!1,args:[]},"Pseudo-Random Number Generator":{module:"Ciphers",description:"A cryptographically-secure pseudo-random number generator (PRNG).<br><br>This operation uses the browser's built-in <code>crypto.getRandomValues()</code> method if available. If this cannot be found, it falls back to a Fortuna-based PRNG algorithm.",infoURL:"https://wikipedia.org/wiki/Pseudorandom_number_generator",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Number of bytes",type:"number",value:32},{name:"Output as",type:"option",value:["Hex","Integer","Byte array","Raw"]}]},"RC2 Decrypt":{module:"Ciphers",description:"RC2 (also known as ARC2) is a symmetric-key block cipher designed by Ron Rivest in 1987. 'RC' stands for 'Rivest Cipher'.<br><br><b>Key:</b> RC2 uses a variable size key.<br><br><b>IV:</b> To run the cipher in CBC mode, the Initialization Vector should be 8 bytes long. If the IV is left blank, the cipher will run in ECB mode.<br><br><b>Padding:</b> In both CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/RC2",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Input",type:"option",value:["Hex","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}]},"RC2 Encrypt":{module:"Ciphers",description:"RC2 (also known as ARC2) is a symmetric-key block cipher designed by Ron Rivest in 1987. 'RC' stands for 'Rivest Cipher'.<br><br><b>Key:</b> RC2 uses a variable size key.<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> To run the cipher in CBC mode, the Initialization Vector should be 8 bytes long. If the IV is left blank, the cipher will run in ECB mode.<br><br><b>Padding:</b> In both CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/RC2",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Raw"]}]},RC4:{module:"Ciphers",description:"RC4 (also known as ARC4) is a widely-used stream cipher designed by Ron Rivest. It is used in popular protocols such as SSL and WEP. Although remarkable for its simplicity and speed, the algorithm's history doesn't inspire confidence in its security.",infoURL:"https://wikipedia.org/wiki/RC4",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Passphrase",type:"toggleString",value:"",toggleValues:["UTF8","UTF16","UTF16LE","UTF16BE","Latin1","Hex","Base64"]},{name:"Input format",type:"option",value:["Latin1","UTF8","UTF16","UTF16LE","UTF16BE","Hex","Base64"]},{name:"Output format",type:"option",value:["Latin1","UTF8","UTF16","UTF16LE","UTF16BE","Hex","Base64"]}]},"RC4 Drop":{module:"Ciphers",description:"It was discovered that the first few bytes of the RC4 keystream are strongly non-random and leak information about the key. We can defend against this attack by discarding the initial portion of the keystream. This modified algorithm is traditionally called RC4-drop.",infoURL:"https://wikipedia.org/wiki/RC4#Fluhrer,_Mantin_and_Shamir_attack",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Passphrase",type:"toggleString",value:"",toggleValues:["UTF8","UTF16","UTF16LE","UTF16BE","Latin1","Hex","Base64"]},{name:"Input format",type:"option",value:["Latin1","UTF8","UTF16","UTF16LE","UTF16BE","Hex","Base64"]},{name:"Output format",type:"option",value:["Latin1","UTF8","UTF16","UTF16LE","UTF16BE","Hex","Base64"]},{name:"Number of bytes to drop",type:"number",value:768}]},RIPEMD:{module:"Crypto",description:"RIPEMD (RACE Integrity Primitives Evaluation Message Digest) is a family of cryptographic hash functions developed in Leuven, Belgium, by Hans Dobbertin, Antoon Bosselaers and Bart Preneel at the COSIC research group at the Katholieke Universiteit Leuven, and first published in 1996.<br><br>RIPEMD was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.<br><br>",infoURL:"https://wikipedia.org/wiki/RIPEMD",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["320","256","160","128"]}]},ROT13:{module:"Default",description:"A simple caesar substitution cipher which rotates alphabet characters by the specified amount (default 13).",infoURL:"https://wikipedia.org/wiki/ROT13",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Rotate lower case chars",type:"boolean",value:!0},{name:"Rotate upper case chars",type:"boolean",value:!0},{name:"Amount",type:"number",value:13}]},ROT47:{module:"Default",description:"A slightly more complex variation of a caesar cipher, which includes ASCII characters from 33 '!' to 126 '~'. Default rotation: 47.",infoURL:"https://wikipedia.org/wiki/ROT13#Variants",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:47}]},"Raw Deflate":{module:"Compression",description:"Compresses data using the deflate algorithm with no headers.",infoURL:"https://wikipedia.org/wiki/DEFLATE",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding","None (Store)"]}]},"Raw Inflate":{module:"Compression",description:"Decompresses data which has been compressed using the deflate algorithm with no headers.",infoURL:"https://wikipedia.org/wiki/DEFLATE",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Start index",type:"number",value:0},{name:"Initial output buffer size",type:"number",value:0},{name:"Buffer expansion type",type:"option",value:["Adaptive","Block"]},{name:"Resize buffer after decompression",type:"boolean",value:!1},{name:"Verify result",type:"boolean",value:!1}]},Register:{module:"Regex",description:"Extract data from the input and store it in registers which can then be passed into subsequent operations as arguments. Regular expression capture groups are used to select the data to extract.<br><br>To use registers in arguments, refer to them using the notation <code>$Rn</code> where n is the register number, starting at 0.<br><br>For example:<br>Input: <code>Test</code><br>Extractor: <code>(.*)</code><br>Argument: <code>$R0</code> becomes <code>Test</code><br><br>Registers can be escaped in arguments using a backslash. e.g. <code>\\$R0</code> would become <code>$R0</code> rather than <code>Test</code>.",infoURL:"https://wikipedia.org/wiki/Regular_expression#Syntax",inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Extractor",type:"binaryString",value:"([\\s\\S]*)"},{name:"Case insensitive",type:"boolean",value:!0},{name:"Multiline matching",type:"boolean",value:!1},{name:"Dot matches all",type:"boolean",value:!1}]},"Regular expression":{module:"Regex",description:"Define your own regular expression (regex) to search the input data with, optionally choosing from a list of pre-defined patterns.<br><br>Supports extended regex syntax including the 'dot matches all' flag, named capture groups, full unicode coverage (including <code>\\p{}</code> categories and scripts as well as astral codes) and recursive matching.",infoURL:"https://wikipedia.org/wiki/Regular_expression",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Built in regexes",type:"populateOption",value:[{name:"User defined",value:""},{name:"IPv4 address",value:"(?:(?:\\d|[01]?\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d|\\d)(?:\\/\\d{1,2})?"},{name:"IPv6 address",value:"((?=.*::)(?!.*::.+::)(::)?([\\dA-Fa-f]{1,4}:(:|\\b)|){5}|([\\dA-Fa-f]{1,4}:){6})((([\\dA-Fa-f]{1,4}((?!\\3)::|:\\b|(?![\\dA-Fa-f])))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})"},{name:"Email address",value:"\\b(\\w[-.\\w]*)@([-\\w]+(?:\\.[-\\w]+)*)\\.([A-Za-z]{2,4})\\b"},{name:"URL",value:'([A-Za-z]+://)([-\\w]+(?:\\.\\w[-\\w]*)+)(:\\d+)?(/[^.!,?"<>\\[\\]{}\\s\\x7F-\\xFF]*(?:[.!,?]+[^.!,?"<>\\[\\]{}\\s\\x7F-\\xFF]+)*)?'},{name:"Domain",value:"\\b((?=[a-z0-9-]{1,63}\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,63}\\b"},{name:"Windows file path",value:"([A-Za-z]):\\\\((?:[A-Za-z\\d][A-Za-z\\d\\- \\x27_\\(\\)~]{0,61}\\\\?)*[A-Za-z\\d][A-Za-z\\d\\- \\x27_\\(\\)]{0,61})(\\.[A-Za-z\\d]{1,6})?"},{name:"UNIX file path",value:"(?:/[A-Za-z\\d.][A-Za-z\\d\\-.]{0,61})+"},{name:"MAC address",value:"[A-Fa-f\\d]{2}(?:[:-][A-Fa-f\\d]{2}){5}"},{name:"Date (yyyy-mm-dd)",value:"((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])"},{name:"Date (dd/mm/yyyy)",value:"(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.]((?:19|20)\\d\\d)"},{name:"Date (mm/dd/yyyy)",value:"(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.]((?:19|20)\\d\\d)"},{name:"Strings",value:'[A-Za-z\\d/\\-:.,_$%\\x27"()<>= !\\[\\]{}@]{4,}'}],target:1},{name:"Regex",type:"text",value:""},{name:"Case insensitive",type:"boolean",value:!0},{name:"^ and $ match at newlines",type:"boolean",value:!0},{name:"Dot matches all",type:"boolean",value:!1},{name:"Unicode support",type:"boolean",value:!1},{name:"Astral support",type:"boolean",value:!1},{name:"Display total",type:"boolean",value:!1},{name:"Output format",type:"option",value:["Highlight matches","List matches","List capture groups","List matches with capture groups"]}]},"Remove Diacritics":{module:"Default",description:"Replaces accented characters with their latin character equivalent.",infoURL:"https://wikipedia.org/wiki/Diacritic",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Remove EXIF":{module:"Image",description:"Removes EXIF data from a JPEG image.\n<br><br>\nEXIF data embedded in photos usually contains information about the image file itself as well as the device used to create it.",infoURL:"https://wikipedia.org/wiki/Exif",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},"Remove line numbers":{module:"Default",description:"Removes line numbers from the output if they can be trivially detected.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Remove null bytes":{module:"Default",description:"Removes all null bytes (<code>0x00</code>) from the input.",infoURL:null,inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},"Remove whitespace":{module:"Default",description:"Optionally removes all spaces, carriage returns, line feeds, tabs and form feeds from the input data.<br><br>This operation also supports the removal of full stops which are sometimes used to represent non-printable bytes in ASCII output.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Spaces",type:"boolean",value:!0},{name:"Carriage returns (\\r)",type:"boolean",value:!0},{name:"Line feeds (\\n)",type:"boolean",value:!0},{name:"Tabs",type:"boolean",value:!0},{name:"Form feeds (\\f)",type:"boolean",value:!0},{name:"Full stops",type:"boolean",value:!1}]},"Render Image":{module:"Image",description:"Displays the input as an image. Supports the following formats:<br><br><ul><li>jpg/jpeg</li><li>png</li><li>gif</li><li>webp</li><li>bmp</li><li>ico</li></ul>",infoURL:null,inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Input format",type:"option",value:["Raw","Base64","Hex"]}],patterns:[{match:"^(?:\\xff\\xd8\\xff|\\x89\\x50\\x4e\\x47|\\x47\\x49\\x46|.{8}\\x57\\x45\\x42\\x50|\\x42\\x4d)",flags:"",args:["Raw"],useful:!0}]},"Resize Image":{module:"Image",description:"Resizes an image to the specified width and height values.",infoURL:"https://wikipedia.org/wiki/Image_scaling",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Width",type:"number",value:100,min:1},{name:"Height",type:"number",value:100,min:1},{name:"Unit type",type:"option",value:["Pixels","Percent"]},{name:"Maintain aspect ratio",type:"boolean",value:!1},{name:"Resizing algorithm",type:"option",value:["Nearest Neighbour","Bilinear","Bicubic","Hermite","Bezier"],defaultIndex:1}]},Return:{module:"Default",description:"End execution of operations at this point in the recipe.",infoURL:null,inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[]},Reverse:{module:"Default",description:"Reverses the input string.",infoURL:null,inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"By",type:"option",value:["Character","Line"]}]},"Rotate Image":{module:"Image",description:"Rotates an image by the specified number of degrees.",infoURL:"",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Rotation amount (degrees)",type:"number",value:90}]},"Rotate left":{module:"Default",description:"Rotates each byte to the left by the number of bits specified, optionally carrying the excess bits over to the next byte. Currently only supports 8-bit values.",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:1},{name:"Carry through",type:"boolean",value:!1}]},"Rotate right":{module:"Default",description:"Rotates each byte to the right by the number of bits specified, optionally carrying the excess bits over to the next byte. Currently only supports 8-bit values.",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bit_shifts",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Amount",type:"number",value:1},{name:"Carry through",type:"boolean",value:!1}]},SHA0:{module:"Crypto",description:"SHA-0 is a retronym applied to the original version of the 160-bit hash function published in 1993 under the name 'SHA'. It was withdrawn shortly after publication due to an undisclosed 'significant flaw' and replaced by the slightly revised version SHA-1.",infoURL:"https://wikipedia.org/wiki/SHA-1#SHA-0",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},SHA1:{module:"Crypto",description:"The SHA (Secure Hash Algorithm) hash functions were designed by the NSA. SHA-1 is the most established of the existing SHA hash functions and it is used in a variety of security applications and protocols.<br><br>However, SHA-1's collision resistance has been weakening as new attacks are discovered or improved.",infoURL:"https://wikipedia.org/wiki/SHA-1",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[]},SHA2:{module:"Crypto",description:"The SHA-2 (Secure Hash Algorithm 2) hash functions were designed by the NSA. SHA-2 includes significant changes from its predecessor, SHA-1. The SHA-2 family consists of hash functions with digests (hash values) that are 224, 256, 384 or 512 bits: SHA224, SHA256, SHA384, SHA512.<br><br><ul><li>SHA-512 operates on 64-bit words.</li><li>SHA-256 operates on 32-bit words.</li><li>SHA-384 is largely identical to SHA-512 but is truncated to 384 bytes.</li><li>SHA-224 is largely identical to SHA-256 but is truncated to 224 bytes.</li><li>SHA-512/224 and SHA-512/256 are truncated versions of SHA-512, but the initial values are generated using the method described in Federal Information Processing Standards (FIPS) PUB 180-4.</li></ul>",infoURL:"https://wikipedia.org/wiki/SHA-2",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["512","256","384","224","512/256","512/224"]}]},SHA3:{module:"Crypto",description:"The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún.",infoURL:"https://wikipedia.org/wiki/SHA-3",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Size",type:"option",value:["512","384","256","224"]}]},"SQL Beautify":{module:"Code",description:"Indents and prettifies Structured Query Language (SQL) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"\\t"}]},"SQL Minify":{module:"Code",description:"Compresses Structured Query Language (SQL) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},SSDEEP:{module:"Crypto",description:"SSDEEP is a program for computing context triggered piecewise hashes (CTPH). Also called fuzzy hashes, CTPH can match inputs that have homologies. Such inputs have sequences of identical bytes in the same order, although bytes in between these sequences may be different in both content and length.<br><br>SSDEEP hashes are now widely used for simple identification purposes (e.g. the 'Basic Properties' section in VirusTotal). Although 'better' fuzzy hashes are available, SSDEEP is still one of the primary choices because of its speed and being a de facto standard.<br><br>This operation is fundamentally the same as the CTPH operation, however their outputs differ in format.",infoURL:"https://forensicswiki.org/wiki/Ssdeep",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},SUB:{module:"Default",description:"SUB the input with the given key (e.g. <code>fe023da5</code>), MOD 255",infoURL:"https://wikipedia.org/wiki/Bitwise_operation#Bitwise_operators",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Binary","Base64","UTF8","Latin1"]}]},"Scan for Embedded Files":{module:"Default",description:"Scans the data for potential embedded files by looking for magic bytes at all offsets. This operation is prone to false positives.<br><br>WARNING: Files over about 100KB in size will take a VERY long time to process.",infoURL:"https://wikipedia.org/wiki/List_of_file_signatures",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Images",type:"boolean",value:!0},{name:"Video",type:"boolean",value:!0},{name:"Audio",type:"boolean",value:!0},{name:"Documents",type:"boolean",value:!0},{name:"Applications",type:"boolean",value:!0},{name:"Archives",type:"boolean",value:!0},{name:"Miscellaneous",type:"boolean",value:!1}]},"Scatter chart":{module:"Charts",description:"Plots two-variable data as single points on a graph.",infoURL:"https://wikipedia.org/wiki/Scatter_plot",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Record delimiter",type:"option",value:["Line feed","CRLF"]},{name:"Field delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Tab"]},{name:"Use column headers as labels",type:"boolean",value:!0},{name:"X label",type:"string",value:""},{name:"Y label",type:"string",value:""},{name:"Colour",type:"string",value:"black"},{name:"Point radius",type:"number",value:10},{name:"Use colour from third column",type:"boolean",value:!1}]},Scrypt:{module:"Crypto",description:"scrypt is a password-based key derivation function (PBKDF) created by Colin Percival. The algorithm was specifically designed to make it costly to perform large-scale custom hardware attacks by requiring large amounts of memory. In 2016, the scrypt algorithm was published by IETF as RFC 7914.<br><br>Enter the password in the input to generate its hash.",infoURL:"https://wikipedia.org/wiki/Scrypt",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Salt",type:"toggleString",value:"",toggleValues:["Hex","Base64","UTF8","Latin1"]},{name:"Iterations (N)",type:"number",value:16384},{name:"Memory factor (r)",type:"number",value:8},{name:"Parallelization factor (p)",type:"number",value:1},{name:"Key length",type:"number",value:64}]},"Series chart":{module:"Charts",description:"A time series graph is a line graph of repeated measurements taken over regular time intervals.",infoURL:null,inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Record delimiter",type:"option",value:["Line feed","CRLF"]},{name:"Field delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Tab"]},{name:"X label",type:"string",value:""},{name:"Point radius",type:"number",value:1},{name:"Series colours",type:"string",value:"mediumseagreen, dodgerblue, tomato"}]},"Set Difference":{module:"Default",description:"Calculates the difference, or relative complement, of two sets.",infoURL:"https://wikipedia.org/wiki/Complement_(set_theory)#Relative_complement",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Item delimiter",type:"binaryString",value:","}]},"Set Intersection":{module:"Default",description:"Calculates the intersection of two sets.",infoURL:"https://wikipedia.org/wiki/Intersection_(set_theory)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Item delimiter",type:"binaryString",value:","}]},"Set Union":{module:"Default",description:"Calculates the union of two sets.",infoURL:"https://wikipedia.org/wiki/Union_(set_theory)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Item delimiter",type:"binaryString",value:","}]},Shake:{module:"Crypto",description:"Shake is an Extendable Output Function (XOF) of the SHA-3 hash algorithm, part of the Keccak family, allowing for variable output length/size.",infoURL:"https://wikipedia.org/wiki/SHA-3#Instances",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Capacity",type:"option",value:["256","128"]},{name:"Size",type:"number",value:512}]},"Show Base64 offsets":{module:"Default",description:"When a string is within a block of data and the whole block is Base64'd, the string itself could be represented in Base64 in three distinct ways depending on its offset within the block.<br><br>This operation shows all possible offsets for a given string so that each possible encoding can be considered.",infoURL:"https://wikipedia.org/wiki/Base64#Output_padding",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"binaryString",value:"A-Za-z0-9+/="},{name:"Show variable chars and padding",type:"boolean",value:!0},{name:"Input format",type:"option",value:["Raw","Base64"]}]},Sleep:{module:"Default",description:"Sleep causes the recipe to wait for a specified number of milliseconds before continuing execution.",infoURL:null,inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Time (ms)",type:"number",value:1e3}]},Snefru:{module:"Crypto",description:"Snefru is a cryptographic hash function invented by Ralph Merkle in 1990 while working at Xerox PARC. The function supports 128-bit and 256-bit output. It was named after the Egyptian Pharaoh Sneferu, continuing the tradition of the Khufu and Khafre block ciphers.<br><br>The original design of Snefru was shown to be insecure by Eli Biham and Adi Shamir who were able to use differential cryptanalysis to find hash collisions. The design was then modified by increasing the number of iterations of the main pass of the algorithm from two to eight.",infoURL:"https://wikipedia.org/wiki/Snefru",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Rounds",type:"option",value:["8","4","2"]},{name:"Size",type:"option",value:["256","128"]}]},Sort:{module:"Default",description:"Alphabetically sorts strings separated by the specified delimiter.<br><br>The IP address option supports IPv4 only.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon","Colon","Nothing (separate chars)"]},{name:"Reverse",type:"boolean",value:!1},{name:"Order",type:"option",value:["Alphabetical (case sensitive)","Alphabetical (case insensitive)","IP address","Numeric","Numeric (hexadecimal)"]}]},Split:{module:"Default",description:"Splits a string into sections around a given delimiter.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Split delimiter",type:"editableOptionShort",value:[{name:"Comma",value:","},{name:"Space",value:" "},{name:"Line feed",value:"\\n"},{name:"CRLF",value:"\\r\\n"},{name:"Semi-colon",value:";"},{name:"Colon",value:":"},{name:"Nothing (separate chars)",value:""}]},{name:"Join delimiter",type:"editableOptionShort",value:[{name:"Line feed",value:"\\n"},{name:"CRLF",value:"\\r\\n"},{name:"Space",value:" "},{name:"Comma",value:","},{name:"Semi-colon",value:";"},{name:"Colon",value:":"},{name:"Nothing (join chars)",value:""}]}]},"Split Colour Channels":{module:"Image",description:"Splits the given image into its red, green and blue colour channels.",infoURL:"https://wikipedia.org/wiki/Channel_(digital_image)",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[]},"Standard Deviation":{module:"Default",description:"Computes the standard deviation of a number list. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5</code> becomes <code>4.089281382128433</code>",infoURL:"https://wikipedia.org/wiki/Standard_deviation",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},Strings:{module:"Regex",description:"Extracts all strings from the input.",infoURL:"https://wikipedia.org/wiki/Strings_(Unix)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Encoding",type:"option",value:["Single byte","16-bit littleendian","16-bit bigendian","All"]},{name:"Minimum length",type:"number",value:4},{name:"Match",type:"option",value:["[ASCII]","Alphanumeric + punctuation (A)","All printable chars (A)","Null-terminated strings (A)","[Unicode]","Alphanumeric + punctuation (U)","All printable chars (U)","Null-terminated strings (U)"]},{name:"Display total",type:"boolean",value:!1}]},"Strip HTML tags":{module:"Default",description:"Removes all HTML tags from the input.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Remove indentation",type:"boolean",value:!0},{name:"Remove excess line breaks",type:"boolean",value:!0}]},"Strip HTTP headers":{module:"Default",description:"Removes HTTP headers from a request or response by looking for the first instance of a double newline.",infoURL:"https://wikipedia.org/wiki/Hypertext_Transfer_Protocol#Message_format",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},Subsection:{module:"Regex",description:"Select a part of the input data using a regular expression (regex), and run all subsequent operations on each match separately.<br><br>You can use up to one capture group, where the recipe will only be run on the data in the capture group. If there's more than one capture group, only the first one will be operated on.",infoURL:"",inputType:"string",outputType:"string",flowControl:!0,manualBake:!1,args:[{name:"Section (regex)",type:"string",value:""},{name:"Case sensitive matching",type:"boolean",value:!0},{name:"Global matching",type:"boolean",value:!0},{name:"Ignore errors",type:"boolean",value:!1}]},Substitute:{module:"Default",description:"A substitution cipher allowing you to specify bytes to replace with other byte values. This can be used to create Caesar ciphers but is more powerful as any byte value can be substituted, not just letters, and the substitution values need not be in order.<br><br>Enter the bytes you want to replace in the Plaintext field and the bytes to replace them with in the Ciphertext field.<br><br>Non-printable bytes can be specified using string escape notation. For example, a line feed character can be written as either <code>\\n</code> or <code>\\x0a</code>.<br><br>Byte ranges can be specified using a hyphen. For example, the sequence <code>0123456789</code> can be written as <code>0-9</code>.<br><br>Note that blackslash characters are used to escape special characters, so will need to be escaped themselves if you want to use them on their own (e.g.<code>\\\\</code>).",infoURL:"https://wikipedia.org/wiki/Substitution_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Plaintext",type:"binaryString",value:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"},{name:"Ciphertext",type:"binaryString",value:"XYZABCDEFGHIJKLMNOPQRSTUVW"}]},Subtract:{module:"Default",description:"Subtracts a list of numbers. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5</code> becomes <code>1.5</code>",infoURL:"https://wikipedia.org/wiki/Subtraction",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},Sum:{module:"Default",description:"Adds together a list of numbers. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5</code> becomes <code>18.5</code>",infoURL:"https://wikipedia.org/wiki/Summation",inputType:"string",outputType:"BigNumber",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","Space","Comma","Semi-colon","Colon","CRLF"]}]},"Swap endianness":{module:"Default",description:"Switches the data from big-endian to little-endian or vice-versa. Data can be read in as hexadecimal or raw bytes. It will be returned in the same format as it is entered.",infoURL:"https://wikipedia.org/wiki/Endianness",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Data format",type:"option",value:["Hex","Raw"]},{name:"Word length (bytes)",type:"number",value:4},{name:"Pad incomplete words",type:"boolean",value:!0}]},"Symmetric Difference":{module:"Default",description:"Calculates the symmetric difference of two sets.",infoURL:"https://wikipedia.org/wiki/Symmetric_difference",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Sample delimiter",type:"binaryString",value:"\\n\\n"},{name:"Item delimiter",type:"binaryString",value:","}]},"Syntax highlighter":{module:"Code",description:"Adds syntax highlighting to a range of source code languages. Note that this will not indent the code. Use one of the 'Beautify' operations for that.",infoURL:"https://wikipedia.org/wiki/Syntax_highlighting",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Language",type:"option",value:["auto detect","1c","abnf","accesslog","actionscript","ada","angelscript","apache","applescript","arcade","cpp","arduino","armasm","xml","asciidoc","aspectj","autohotkey","autoit","avrasm","awk","axapta","bash","basic","bnf","brainfuck","cal","capnproto","ceylon","clean","clojure","clojure-repl","cmake","coffeescript","coq","cos","crmsh","crystal","cs","csp","css","d","markdown","dart","delphi","diff","django","dns","dockerfile","dos","dsconfig","dts","dust","ebnf","elixir","elm","ruby","erb","erlang-repl","erlang","excel","fix","flix","fortran","fsharp","gams","gauss","gcode","gherkin","glsl","gml","go","golo","gradle","groovy","haml","handlebars","haskell","haxe","hsp","htmlbars","http","hy","inform7","ini","irpf90","isbl","java","javascript","jboss-cli","json","julia","julia-repl","kotlin","lasso","ldif","leaf","less","lisp","livecodeserver","livescript","llvm","lsl","lua","makefile","mathematica","matlab","maxima","mel","mercury","mipsasm","mizar","perl","mojolicious","monkey","moonscript","n1ql","nginx","nimrod","nix","nsis","objectivec","ocaml","openscad","oxygene","parser3","pf","pgsql","php","plaintext","pony","powershell","processing","profile","prolog","properties","protobuf","puppet","purebasic","python","q","qml","r","reasonml","rib","roboconf","routeros","rsl","ruleslanguage","rust","sas","scala","scheme","scilab","scss","shell","smali","smalltalk","sml","sqf","sql","stan","stata","step21","stylus","subunit","swift","taggerscript","yaml","tap","tcl","tex","thrift","tp","twig","typescript","vala","vbnet","vbscript","vbscript-html","verilog","vhdl","vim","x86asm","xl","xquery","zephir"]}]},"TCP/IP Checksum":{module:"Crypto",description:"Calculates the checksum for a TCP (Transport Control Protocol) or IP (Internet Protocol) header from an input of raw bytes.",infoURL:"https://wikipedia.org/wiki/IPv4_header_checksum",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},Tail:{module:"Default",description:"Like the UNIX tail utility.<br>Gets the last n lines.<br>Optionally you can select all lines after line n by entering a negative value for n.<br>The delimiter can be changed so that instead of lines, fields (i.e. commas) are selected instead.",infoURL:"https://wikipedia.org/wiki/Tail_(Unix)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon","Colon","Nothing (separate chars)"]},{name:"Number",type:"number",value:10}]},"Take bytes":{module:"Default",description:"Takes a slice of the specified number of bytes from the data. Negative values are allowed.",infoURL:null,inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Start",type:"number",value:0},{name:"Length",type:"number",value:5},{name:"Apply to each line",type:"boolean",value:!1}]},Tar:{module:"Compression",description:"Packs the input into a tarball.<br><br>No support for multiple files at this time.",infoURL:"https://wikipedia.org/wiki/Tar_(computing)",inputType:"byteArray",outputType:"File",flowControl:!1,manualBake:!1,args:[{name:"Filename",type:"string",value:"file.txt"}]},"Text Encoding Brute Force":{module:"Encodings",description:"Enumerates all supported text encodings for the input, allowing you to quickly spot the correct one.\n<br><br>\nSupported charsets are:\n<ul>\n<li>UTF-8 (65001)</li>\n<li>UTF-7 (65000)</li>\n<li>UTF16LE (1200)</li>\n<li>UTF16BE (1201)</li>\n<li>UTF16 (1201)</li>\n<li>IBM EBCDIC International (500)</li>\n<li>IBM EBCDIC US-Canada (37)</li>\n<li>Windows-874 Thai (874)</li>\n<li>Japanese Shift-JIS (932)</li>\n<li>Simplified Chinese GBK (936)</li>\n<li>Korean (949)</li>\n<li>Traditional Chinese Big5 (950)</li>\n<li>Windows-1250 Central European (1250)</li>\n<li>Windows-1251 Cyrillic (1251)</li>\n<li>Windows-1252 Latin (1252)</li>\n<li>Windows-1253 Greek (1253)</li>\n<li>Windows-1254 Turkish (1254)</li>\n<li>Windows-1255 Hebrew (1255)</li>\n<li>Windows-1256 Arabic (1256)</li>\n<li>Windows-1257 Baltic (1257)</li>\n<li>Windows-1258 Vietnam (1258)</li>\n<li>US-ASCII (20127)</li>\n<li>Simplified Chinese GB2312 (20936)</li>\n<li>KOI8-R Russian Cyrillic (20866)</li>\n<li>KOI8-U Ukrainian Cyrillic (21866)</li>\n<li>ISO-8859-1 Latin 1 Western European (28591)</li>\n<li>ISO-8859-2 Latin 2 Central European (28592)</li>\n<li>ISO-8859-3 Latin 3 South European (28593)</li>\n<li>ISO-8859-4 Latin 4 North European (28594)</li>\n<li>ISO-8859-5 Latin/Cyrillic (28595)</li>\n<li>ISO-8859-6 Latin/Arabic (28596)</li>\n<li>ISO-8859-7 Latin/Greek (28597)</li>\n<li>ISO-8859-8 Latin/Hebrew (28598)</li>\n<li>ISO-8859-9 Latin 5 Turkish (28599)</li>\n<li>ISO-8859-10 Latin 6 Nordic (28600)</li>\n<li>ISO-8859-11 Latin/Thai (28601)</li>\n<li>ISO-8859-13 Latin 7 Baltic Rim (28603)</li>\n<li>ISO-8859-14 Latin 8 Celtic (28604)</li>\n<li>ISO-8859-15 Latin 9 (28605)</li>\n<li>ISO-8859-16 Latin 10 (28606)</li>\n<li>ISO-2022 JIS Japanese (50222)</li>\n<li>EUC Japanese (51932)</li>\n<li>EUC Korean (51949)</li>\n<li>Simplified Chinese GB18030 (54936)</li>\n</ul>",infoURL:"https://wikipedia.org/wiki/Character_encoding",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Mode",type:"option",value:["Encode","Decode"]}]},"To BCD":{module:"Default",description:"Binary-Coded Decimal (BCD) is a class of binary encodings of decimal numbers where each decimal digit is represented by a fixed number of bits, usually four or eight. Special bit patterns are sometimes used for a sign",infoURL:"https://wikipedia.org/wiki/Binary-coded_decimal",inputType:"BigNumber",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Scheme",type:"option",value:["8 4 2 1","7 4 2 1","4 2 2 1","2 4 2 1","8 4 -2 -1","Excess-3","IBM 8 4 2 1"]},{name:"Packed",type:"boolean",value:!0},{name:"Signed",type:"boolean",value:!1},{name:"Output format",type:"option",value:["Nibbles","Bytes","Raw"]}]},"To Base":{module:"Default",description:"Converts a decimal number to a given numerical base.",infoURL:"https://wikipedia.org/wiki/Radix",inputType:"BigNumber",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Radix",type:"number",value:36}]},"To Base32":{module:"Default",description:"Base32 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers. It uses a smaller set of characters than Base64, usually the uppercase alphabet and the numbers 2 to 7.",infoURL:"https://wikipedia.org/wiki/Base32",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"binaryString",value:"A-Z2-7="}]},"To Base58":{module:"Default",description:"Base58 (similar to Base64) is a notation for encoding arbitrary byte data. It differs from Base64 by removing easily misread characters (i.e. l, I, 0 and O) to improve human readability.<br><br>This operation encodes data in an ASCII string (with an alphabet of your choosing, presets included).<br><br>e.g. <code>hello world</code> becomes <code>StV1DL6CwTryKyV</code><br><br>Base58 is commonly used in cryptocurrencies (Bitcoin, Ripple, etc).",infoURL:"https://wikipedia.org/wiki/Base58",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Bitcoin",value:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"},{name:"Ripple",value:"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"}]}]},"To Base62":{module:"Default",description:"Base62 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers. The high number base results in shorter strings than with the decimal or hexadecimal system.",infoURL:"https://wikipedia.org/wiki/List_of_numeral_systems",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"string",value:"0-9A-Za-z"}]},"To Base64":{module:"Default",description:"Base64 is a notation for encoding arbitrary byte data using a restricted set of symbols that can be conveniently used by humans and processed by computers.<br><br>This operation encodes raw data into an ASCII Base64 string.<br><br>e.g. <code>hello</code> becomes <code>aGVsbG8=</code>",infoURL:"https://wikipedia.org/wiki/Base64",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Standard (RFC 4648): A-Za-z0-9+/=",value:"A-Za-z0-9+/="},{name:"URL safe (RFC 4648 §5): A-Za-z0-9-_",value:"A-Za-z0-9-_"},{name:"Filename safe: A-Za-z0-9+-=",value:"A-Za-z0-9+\\-="},{name:"itoa64: ./0-9A-Za-z=",value:"./0-9A-Za-z="},{name:"XML: A-Za-z0-9_.",value:"A-Za-z0-9_."},{name:"y64: A-Za-z0-9._-",value:"A-Za-z0-9._-"},{name:"z64: 0-9a-zA-Z+/=",value:"0-9a-zA-Z+/="},{name:"Radix-64 (RFC 4880): 0-9A-Za-z+/=",value:"0-9A-Za-z+/="},{name:"Uuencoding: [space]-_",value:" -_"},{name:"Xxencoding: +-0-9A-Za-z",value:"+\\-0-9A-Za-z"},{name:"BinHex: !-,-0-689@A-NP-VX-Z[`a-fh-mp-r",value:"!-,-0-689@A-NP-VX-Z[`a-fh-mp-r"},{name:"ROT13: N-ZA-Mn-za-m0-9+/=",value:"N-ZA-Mn-za-m0-9+/="},{name:"UNIX crypt: ./0-9A-Za-z",value:"./0-9A-Za-z"}]}]},"To Base85":{module:"Default",description:"Base85 (also called Ascii85) is a notation for encoding arbitrary byte data. It is usually more efficient that Base64.<br><br>This operation encodes data in an ASCII string (with an alphabet of your choosing, presets included).<br><br>e.g. <code>hello world</code> becomes <code>BOu!rD]j7BEbo7</code><br><br>Base85 is commonly used in Adobe's PostScript and PDF file formats.<br><br><strong>Options</strong><br><u>Alphabet</u><ul><li>Standard - The standard alphabet, referred to as Ascii85</li><li>Z85 (ZeroMQ) - A string-safe variant of Base85, which avoids quote marks and backslash characters</li><li>IPv6 - A variant of Base85 suitable for encoding IPv6 addresses (RFC 1924)</li></ul><u>Include delimiter</u><br>Adds a '<~' and '~>' delimiter to the start and end of the data. This is standard for Adobe's implementation of Base85.",infoURL:"https://wikipedia.org/wiki/Ascii85",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Alphabet",type:"editableOption",value:[{name:"Standard",value:"!-u"},{name:"Z85 (ZeroMQ)",value:"0-9a-zA-Z.\\-:+=^!/*?&<>()[]{}@%$#"},{name:"IPv6",value:"0-9A-Za-z!#$%&()*+\\-;<=>?@^_`{|~}"}]},{name:"Include delimeter",type:"boolean",value:!1}]},"To Binary":{module:"Default",description:"Displays the input data as a binary string.<br><br>e.g. <code>Hi</code> becomes <code>01001000 01101001</code>",infoURL:"https://wikipedia.org/wiki/Binary_code",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF","None"]}]},"To Braille":{module:"Default",description:"Converts text to six-dot braille symbols.",infoURL:"https://wikipedia.org/wiki/Braille",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"To Camel case":{module:"Code",description:"Converts the input string to camel case.\n<br><br>\nCamel case is all lower case except letters after word boundaries which are uppercase.\n<br><br>\ne.g. thisIsCamelCase\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names.",infoURL:"https://wikipedia.org/wiki/Camel_case",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Attempt to be context aware",type:"boolean",value:!1}]},"To Case Insensitive Regex":{module:"Default",description:"Converts a case-sensitive regex string into a case-insensitive regex string in case the i flag is unavailable to you.<br><br>e.g. <code>Mozilla/[0-9].[0-9] .*</code> becomes <code>[mM][oO][zZ][iI][lL][lL][aA]/[0-9].[0-9] .*</code>",infoURL:"https://wikipedia.org/wiki/Regular_expression",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"To Charcode":{module:"Default",description:"Converts text to its unicode character code equivalent.<br><br>e.g. <code>Γειά σου</code> becomes <code>0393 03b5 03b9 03ac 20 03c3 03bf 03c5</code>",infoURL:"https://wikipedia.org/wiki/Plane_(Unicode)",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]},{name:"Base",type:"number",value:16}]},"To Decimal":{module:"Default",description:"Converts the input data to an ordinal integer array.<br><br>e.g. <code>Hello</code> becomes <code>72 101 108 108 111</code>",infoURL:null,inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]},{name:"Support signed values",type:"boolean",value:!1}]},"To HTML Entity":{module:"Default",description:"Converts characters to HTML entities<br><br>e.g. <code>&amp;</code> becomes <code>&amp;<span>amp;</span></code>",infoURL:"https://wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Convert all characters",type:"boolean",value:!1},{name:"Convert to",type:"option",value:["Named entities where possible","Numeric entities","Hex entities"]}]},"To Hex":{module:"Default",description:"Converts the input string to hexadecimal bytes separated by the specified delimiter.<br><br>e.g. The UTF-8 encoded string <code>Γειά σου</code> becomes <code>ce 93 ce b5 ce b9 ce ac 20 cf 83 ce bf cf 85 0a</code>",infoURL:"https://wikipedia.org/wiki/Hexadecimal",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Percent","Comma","Semi-colon","Colon","Line feed","CRLF","0x","\\x","None"]}]},"To Hex Content":{module:"Default",description:"Converts special characters in a string to hexadecimal. This format is used by SNORT for representing hex within ASCII text.<br><br>e.g. <code>foo=bar</code> becomes <code>foo|3d|bar</code>.",infoURL:"http://manual-snort-org.s3-website-us-east-1.amazonaws.com/node32.html#SECTION00451000000000000000",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Convert",type:"option",value:["Only special chars","Only special chars including spaces","All chars"]},{name:"Print spaces between bytes",type:"boolean",value:!1}]},"To Hexdump":{module:"Default",description:"Creates a hexdump of the input data, displaying both the hexadecimal values of each byte and an ASCII representation alongside.",infoURL:"https://wikipedia.org/wiki/Hex_dump",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Width",type:"number",value:16},{name:"Upper case hex",type:"boolean",value:!1},{name:"Include final length",type:"boolean",value:!1}]},"To Kebab case":{module:"Code",description:"Converts the input string to kebab case.\n<br><br>\nKebab case is all lower case with dashes as word boundaries.\n<br><br>\ne.g. this-is-kebab-case\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names.",infoURL:"https://wikipedia.org/wiki/Kebab_case",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Attempt to be context aware",type:"boolean",value:!1}]},"To Lower case":{module:"Default",description:"Converts every character in the input to lower case.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"To MessagePack":{module:"Code",description:"Converts JSON to MessagePack encoded byte buffer. MessagePack is a computer data interchange format. It is a binary form for representing simple data structures like arrays and associative arrays.",infoURL:"https://wikipedia.org/wiki/MessagePack",inputType:"JSON",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[]},"To Morse Code":{module:"Default",description:"Translates alphanumeric characters into International Morse Code.<br><br>Ignores non-Morse characters.<br><br>e.g. <code>SOS</code> becomes <code>... --- ...</code>",infoURL:"https://wikipedia.org/wiki/Morse_code",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Format options",type:"option",value:["-/.","_/.","Dash/Dot","DASH/DOT","dash/dot"]},{name:"Letter delimiter",type:"option",value:["Space","Line feed","CRLF","Forward slash","Backslash","Comma","Semi-colon","Colon"]},{name:"Word delimiter",type:"option",value:["Line feed","CRLF","Forward slash","Backslash","Comma","Semi-colon","Colon"]}]},"To Octal":{module:"Default",description:"Converts the input string to octal bytes separated by the specified delimiter.<br><br>e.g. The UTF-8 encoded string <code>Γειά σου</code> becomes <code>316 223 316 265 316 271 316 254 40 317 203 316 277 317 205</code>",infoURL:"https://wikipedia.org/wiki/Octal",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Space","Comma","Semi-colon","Colon","Line feed","CRLF"]}]},"To Punycode":{module:"Encodings",description:"Punycode is a way to represent Unicode with the limited character subset of ASCII supported by the Domain Name System.<br><br>e.g. <code>münchen</code> encodes to <code>mnchen-3ya</code>",infoURL:"https://wikipedia.org/wiki/Punycode",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Internationalised domain name",type:"boolean",value:!1}]},"To Quoted Printable":{module:"Default",description:"Quoted-Printable, or QP encoding, is an encoding using printable ASCII characters (alphanumeric and the equals sign '=') to transmit 8-bit data over a 7-bit data path or, generally, over a medium which is not 8-bit clean. It is defined as a MIME content transfer encoding for use in e-mail.<br><br>QP works by using the equals sign '=' as an escape character. It also limits line length to 76, as some software has limits on line length.",infoURL:"https://wikipedia.org/wiki/Quoted-printable",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"To Snake case":{module:"Code",description:"Converts the input string to snake case.\n<br><br>\nSnake case is all lower case with underscores as word boundaries.\n<br><br>\ne.g. this_is_snake_case\n<br><br>\n'Attempt to be context aware' will make the operation attempt to nicely transform variable and function names.",infoURL:"https://wikipedia.org/wiki/Snake_case",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Attempt to be context aware",type:"boolean",value:!1}]},"To Table":{module:"Default",description:"Data can be split on different characters and rendered as an HTML or ASCII table with an optional header row.<br><br>Supports the CSV (Comma Separated Values) file format by default. Change the cell delimiter argument to <code>\\t</code> to support TSV (Tab Separated Values) or <code>|</code> for PSV (Pipe Separated Values).<br><br>You can enter as many delimiters as you like. Each character will be treat as a separate possible delimiter.",infoURL:"https://wikipedia.org/wiki/Comma-separated_values",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Cell delimiters",type:"binaryShortString",value:","},{name:"Row delimiters",type:"binaryShortString",value:"\\r\\n"},{name:"Make first row header",type:"boolean",value:!1},{name:"Format",type:"option",value:["ASCII","HTML"]}]},"To UNIX Timestamp":{module:"Default",description:"Parses a datetime string in UTC and returns the corresponding UNIX timestamp.<br><br>e.g. <code>Mon 1 January 2001 11:00:00</code> becomes <code>978346800</code><br><br>A UNIX timestamp is a 32-bit value representing the number of seconds since January 1, 1970 UTC (the UNIX epoch).",infoURL:"https://wikipedia.org/wiki/Unix_time",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Units",type:"option",value:["Seconds (s)","Milliseconds (ms)","Microseconds (μs)","Nanoseconds (ns)"]},{name:"Treat as UTC",type:"boolean",value:!0},{name:"Show parsed datetime",type:"boolean",value:!0}]},"To Upper case":{module:"Default",description:"Converts the input string to upper case, optionally limiting scope to only the first character in each word, sentence or paragraph.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Scope",type:"option",value:["All","Word","Sentence","Paragraph"]}]},"Translate DateTime Format":{module:"Default",description:"Parses a datetime string in one format and re-writes it in another.<br><br>Run with no input to see the relevant format string examples.",infoURL:"https://momentjs.com/docs/#/parsing/string-format/",inputType:"string",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Built in formats",type:"populateOption",value:[{name:"Standard date and time",value:"DD/MM/YYYY HH:mm:ss"},{name:"American-style date and time",value:"MM/DD/YYYY HH:mm:ss"},{name:"International date and time",value:"YYYY-MM-DD HH:mm:ss"},{name:"Verbose date and time",value:"dddd Do MMMM YYYY HH:mm:ss Z z"},{name:"UNIX timestamp (seconds)",value:"X"},{name:"UNIX timestamp offset (milliseconds)",value:"x"},{name:"Automatic",value:""}],target:1},{name:"Input format string",type:"binaryString",value:"DD/MM/YYYY HH:mm:ss"},{name:"Input timezone",type:"option",value:["UTC","Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","CET","CST6CDT","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Cuba","EET","EST","EST5EDT","Egypt","Eire","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT-0","GMT0","Greenwich","HST","Hongkong","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","NZ","NZ-CHAT","Navajo","PRC","PST8PDT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","Universal","W-SU","WET","Zulu"]},{name:"Output format string",type:"binaryString",value:"dddd Do MMMM YYYY HH:mm:ss Z z"},{name:"Output timezone",type:"option",value:["UTC","Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","CET","CST6CDT","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Cuba","EET","EST","EST5EDT","Egypt","Eire","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/GMT0","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","GB","GB-Eire","GMT","GMT+0","GMT-0","GMT0","Greenwich","HST","Hongkong","Iceland","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","NZ","NZ-CHAT","Navajo","PRC","PST8PDT","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","US/Alaska","US/Aleutian","US/Arizona","US/Central","US/East-Indiana","US/Eastern","US/Hawaii","US/Indiana-Starke","US/Michigan","US/Mountain","US/Pacific","US/Pacific-New","US/Samoa","UTC","Universal","W-SU","WET","Zulu"]}]},"Triple DES Decrypt":{module:"Ciphers",description:"Triple DES applies DES three times to each block to increase key size.<br><br><b>Key:</b> Triple DES uses a key length of 24 bytes (192 bits).<br>DES uses a key length of 8 bytes (64 bits).<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/Triple_DES",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Hex","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}]},"Triple DES Encrypt":{module:"Ciphers",description:"Triple DES applies DES three times to each block to increase key size.<br><br><b>Key:</b> Triple DES uses a key length of 24 bytes (192 bits).<br>DES uses a key length of 8 bytes (64 bits).<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",infoURL:"https://wikipedia.org/wiki/Triple_DES",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Raw"]}]},Typex:{module:"Default",description:"Encipher/decipher with the WW2 Typex machine.<br><br>Typex was originally built by the British Royal Air Force prior to WW2, and is based on the Enigma machine with some improvements made, including using five rotors with more stepping points and interchangeable wiring cores. It was used across the British and Commonewealth militaries. A number of later variants were produced; here we simulate a WW2 era Mark 22 Typex with plugboards for the reflector and input. Typex rotors were changed regularly and none are public: a random example set are provided.<br><br>To configure the reflector plugboard, enter a string of connected pairs of letters in the reflector box, e.g. <code>AB CD EF</code> connects A to B, C to D, and E to F (you'll need to connect every letter). There is also an input plugboard: unlike Enigma's plugboard, it's not restricted to pairs, so it's entered like a rotor (without stepping). To create your own rotor, enter the letters that the rotor maps A to Z to, in order, optionally followed by <code>&lt;</code> then a list of stepping points.<br><br>More detailed descriptions of the Enigma, Typex and Bombe operations <a href='https://github.com/gchq/CyberChef/wiki/Enigma,-the-Bombe,-and-Typex'>can be found here</a>.",infoURL:"https://wikipedia.org/wiki/Typex",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"1st (left-hand) rotor",type:"editableOption",value:[{name:"Example 1",value:"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW"},{name:"Example 2",value:"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW"},{name:"Example 3",value:"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW"},{name:"Example 4",value:"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW"},{name:"Example 5",value:"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW"},{name:"Example 6",value:"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW"},{name:"Example 7",value:"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW"},{name:"Example 8",value:"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW"}]},{name:"1st rotor reversed",type:"boolean",value:!1},{name:"1st rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"1st rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"2nd rotor",type:"editableOption",value:[{name:"Example 1",value:"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW"},{name:"Example 2",value:"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW"},{name:"Example 3",value:"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW"},{name:"Example 4",value:"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW"},{name:"Example 5",value:"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW"},{name:"Example 6",value:"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW"},{name:"Example 7",value:"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW"},{name:"Example 8",value:"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW"}],defaultIndex:1},{name:"2nd rotor reversed",type:"boolean",value:!1},{name:"2nd rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"2nd rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"3rd (middle) rotor",type:"editableOption",value:[{name:"Example 1",value:"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW"},{name:"Example 2",value:"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW"},{name:"Example 3",value:"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW"},{name:"Example 4",value:"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW"},{name:"Example 5",value:"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW"},{name:"Example 6",value:"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW"},{name:"Example 7",value:"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW"},{name:"Example 8",value:"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW"}],defaultIndex:2},{name:"3rd rotor reversed",type:"boolean",value:!1},{name:"3rd rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"3rd rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"4th (static) rotor",type:"editableOption",value:[{name:"Example 1",value:"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW"},{name:"Example 2",value:"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW"},{name:"Example 3",value:"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW"},{name:"Example 4",value:"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW"},{name:"Example 5",value:"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW"},{name:"Example 6",value:"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW"},{name:"Example 7",value:"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW"},{name:"Example 8",value:"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW"}],defaultIndex:3},{name:"4th rotor reversed",type:"boolean",value:!1},{name:"4th rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"4th rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"5th (right-hand, static) rotor",type:"editableOption",value:[{name:"Example 1",value:"MCYLPQUVRXGSAOWNBJEZDTFKHI<BFHNQUW"},{name:"Example 2",value:"KHWENRCBISXJQGOFMAPVYZDLTU<BFHNQUW"},{name:"Example 3",value:"BYPDZMGIKQCUSATREHOJNLFWXV<BFHNQUW"},{name:"Example 4",value:"ZANJCGDLVHIXOBRPMSWQUKFYET<BFHNQUW"},{name:"Example 5",value:"QXBGUTOVFCZPJIHSWERYNDAMLK<BFHNQUW"},{name:"Example 6",value:"BDCNWUEIQVFTSXALOGZJYMHKPR<BFHNQUW"},{name:"Example 7",value:"WJUKEIABMSGFTQZVCNPHORDXYL<BFHNQUW"},{name:"Example 8",value:"TNVCZXDIPFWQKHSJMAOYLEURGB<BFHNQUW"}],defaultIndex:4},{name:"5th rotor reversed",type:"boolean",value:!1},{name:"5th rotor ring setting",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"5th rotor initial value",type:"option",value:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]},{name:"Reflector",type:"editableOption",value:[{name:"Example",value:"AN BC FG IE KD LU MH OR TS VZ WQ XJ YP"}]},{name:"Plugboard",type:"string",value:""},{name:"Typex keyboard emulation",type:"option",value:["None","Encrypt","Decrypt"]},{name:"Strict output",type:"boolean",value:!0,hint:"Remove non-alphabet letters and group output"}]},"UNIX Timestamp to Windows Filetime":{module:"Default",description:"Converts a UNIX timestamp to a Windows Filetime value.<br><br>A Windows Filetime is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 UTC.<br><br>A UNIX timestamp is a 32-bit value representing the number of seconds since January 1, 1970 UTC (the UNIX epoch).<br><br>This operation also supports UNIX timestamps in milliseconds, microseconds and nanoseconds.",infoURL:"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Input units",type:"option",value:["Seconds (s)","Milliseconds (ms)","Microseconds (μs)","Nanoseconds (ns)"]},{name:"Output format",type:"option",value:["Decimal","Hex"]}]},"URL Decode":{module:"URL",description:"Converts URI/URL percent-encoded characters back to their raw values.<br><br>e.g. <code>%3d</code> becomes <code>=</code>",infoURL:"https://wikipedia.org/wiki/Percent-encoding",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[],patterns:[{match:".*(?:%[\\da-f]{2}.*){4}",flags:"i",args:[]}]},"URL Encode":{module:"URL",description:"Encodes problematic characters into percent-encoding, a format supported by URIs/URLs.<br><br>e.g. <code>=</code> becomes <code>%3d</code>",infoURL:"https://wikipedia.org/wiki/Percent-encoding",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Encode all special chars",type:"boolean",value:!1}]},"Unescape string":{module:"Default",description:"Unescapes characters in a string that have been escaped. For example, <code>Don\\'t stop me now</code> becomes <code>Don't stop me now</code>.<br><br>Supports the following escape sequences:<ul><li><code>\\n</code> (Line feed/newline)</li><li><code>\\r</code> (Carriage return)</li><li><code>\\t</code> (Horizontal tab)</li><li><code>\\b</code> (Backspace)</li><li><code>\\f</code> (Form feed)</li><li><code>\\xnn</code> (Hex, where n is 0-f)</li><li><code>\\\\</code> (Backslash)</li><li><code>\\'</code> (Single quote)</li><li><code>\\&quot;</code> (Double quote)</li><li><code>\\unnnn</code> (Unicode character)</li><li><code>\\u{nnnnnn}</code> (Unicode code point)</li></ul>",infoURL:"https://wikipedia.org/wiki/Escape_sequence",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[]},"Unescape Unicode Characters":{module:"Default",description:"Converts unicode-escaped character notation back into raw characters.<br><br>Supports the prefixes:<ul><li><code>\\u</code></li><li><code>%u</code></li><li><code>U+</code></li></ul>e.g. <code>\\u03c3\\u03bf\\u03c5</code> becomes <code>σου</code>",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Prefix",type:"option",value:["\\u","%u","U+"]}]},Unique:{module:"Default",description:"Removes duplicate strings from the input.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Delimiter",type:"option",value:["Line feed","CRLF","Space","Comma","Semi-colon","Colon","Nothing (separate chars)"]}]},Untar:{module:"Compression",description:"Unpacks a tarball and displays it per file.",infoURL:"https://wikipedia.org/wiki/Tar_(computing)",inputType:"byteArray",outputType:"html",flowControl:!1,manualBake:!1,args:[],patterns:[{match:"^.{257}\\x75\\x73\\x74\\x61\\x72",flags:"",args:[]}]},Unzip:{module:"Compression",description:"Decompresses data using the PKZIP algorithm and displays it per file, with support for passwords.",infoURL:"https://wikipedia.org/wiki/Zip_(file_format)",inputType:"ArrayBuffer",outputType:"html",flowControl:!1,manualBake:!1,args:[{name:"Password",type:"binaryString",value:""},{name:"Verify result",type:"boolean",value:!1}],patterns:[{match:"^\\x50\\x4b(?:\\x03|\\x05|\\x07)(?:\\x04|\\x06|\\x08)",flags:"",args:["",!1]}]},"VarInt Decode":{module:"Default",description:"Decodes a VarInt encoded integer. VarInt is an efficient way of encoding variable length integers and is commonly used with Protobuf.",infoURL:"https://developers.google.com/protocol-buffers/docs/encoding#varints",inputType:"byteArray",outputType:"number",flowControl:!1,manualBake:!1,args:[]},"VarInt Encode":{module:"Default",description:"Encodes a Vn integer as a VarInt. VarInt is an efficient way of encoding variable length integers and is commonly used with Protobuf.",infoURL:"https://developers.google.com/protocol-buffers/docs/encoding#varints",inputType:"number",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[]},"Vigenère Decode":{module:"Ciphers",description:"The Vigenere cipher is a method of encrypting alphabetic text by using a series of different Caesar ciphers based on the letters of a keyword. It is a simple form of polyalphabetic substitution.",infoURL:"https://wikipedia.org/wiki/Vigenère_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"string",value:""}]},"Vigenère Encode":{module:"Ciphers",description:"The Vigenere cipher is a method of encrypting alphabetic text by using a series of different Caesar ciphers based on the letters of a keyword. It is a simple form of polyalphabetic substitution.",infoURL:"https://wikipedia.org/wiki/Vigenère_cipher",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"string",value:""}]},Whirlpool:{module:"Crypto",description:"Whirlpool is a cryptographic hash function designed by Vincent Rijmen (co-creator of AES) and Paulo S. L. M. Barreto, who first described it in 2000.<br><br>Several variants exist:<ul><li>Whirlpool-0 is the original version released in 2000.</li><li>Whirlpool-T is the first revision, released in 2001, improving the generation of the s-box.</li><li>Whirlpool is the latest revision, released in 2003, fixing a flaw in the difusion matrix.</li></ul>",infoURL:"https://wikipedia.org/wiki/Whirlpool_(cryptography)",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Variant",type:"option",value:["Whirlpool","Whirlpool-T","Whirlpool-0"]}]},"Windows Filetime to UNIX Timestamp":{module:"Default",description:"Converts a Windows Filetime value to a UNIX timestamp.<br><br>A Windows Filetime is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 UTC.<br><br>A UNIX timestamp is a 32-bit value representing the number of seconds since January 1, 1970 UTC (the UNIX epoch).<br><br>This operation also supports UNIX timestamps in milliseconds, microseconds and nanoseconds.",infoURL:"https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Output units",type:"option",value:["Seconds (s)","Milliseconds (ms)","Microseconds (μs)","Nanoseconds (ns)"]},{name:"Input format",type:"option",value:["Decimal","Hex"]}]},"XKCD Random Number":{module:"Default",description:"RFC 1149.5 specifies 4 as the standard IEEE-vetted random number.",infoURL:"https://xkcd.com/221/",inputType:"string",outputType:"number",flowControl:!1,manualBake:!1,args:[]},"XML Beautify":{module:"Code",description:"Indents and prettifies eXtensible Markup Language (XML) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Indent string",type:"binaryShortString",value:"\\t"}]},"XML Minify":{module:"Code",description:"Compresses eXtensible Markup Language (XML) code.",infoURL:null,inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Preserve comments",type:"boolean",value:!1}]},XOR:{module:"Default",description:"XOR the input with the given key.<br>e.g. <code>fe023da5</code><br><br><strong>Options</strong><br><u>Null preserving:</u> If the current byte is 0x00 or the same as the key, skip it.<br><br><u>Scheme:</u><ul><li>Standard - key is unchanged after each round</li><li>Input differential - key is set to the value of the previous unprocessed byte</li><li>Output differential - key is set to the value of the previous processed byte</li><li>Cascade - key is set to the input byte shifted by one</li></ul>",infoURL:"https://wikipedia.org/wiki/XOR",inputType:"byteArray",outputType:"byteArray",flowControl:!1,manualBake:!1,args:[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Binary","Base64","UTF8","Latin1"]},{name:"Scheme",type:"option",value:["Standard","Input differential","Output differential","Cascade"]},{name:"Null preserving",type:"boolean",value:!1}]},"XOR Brute Force":{module:"Default",description:"Enumerate all possible XOR solutions. Current maximum key length is 2 due to browser performance.<br><br>Optionally enter a string that you expect to find in the plaintext to filter results (crib).",infoURL:"https://wikipedia.org/wiki/Exclusive_or",inputType:"byteArray",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Key length",type:"number",value:1},{name:"Sample length",type:"number",value:100},{name:"Sample offset",type:"number",value:0},{name:"Scheme",type:"option",value:["Standard","Input differential","Output differential"]},{name:"Null preserving",type:"boolean",value:!1},{name:"Print key",type:"boolean",value:!0},{name:"Output as hex",type:"boolean",value:!1},{name:"Crib (known plaintext string)",type:"binaryString",value:""}]},"XPath expression":{module:"Code",description:"Extract information from an XML document with an XPath query",infoURL:"https://wikipedia.org/wiki/XPath",inputType:"string",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"XPath",type:"string",value:""},{name:"Result delimiter",type:"binaryShortString",value:"\\n"}]},"YARA Rules":{module:"Yara",description:"YARA is a tool developed at VirusTotal, primarily aimed at helping malware researchers to identify and classify malware samples. It matches based on rules specified by the user containing textual or binary patterns and a boolean expression. For help on writing rules, see the <a href='https://yara.readthedocs.io/en/latest/writingrules.html'>YARA documentation.</a>",infoURL:"https://wikipedia.org/wiki/YARA",inputType:"ArrayBuffer",outputType:"string",flowControl:!1,manualBake:!1,args:[{name:"Rules",type:"text",value:"",rows:5},{name:"Show strings",type:"boolean",value:!1},{name:"Show string lengths",type:"boolean",value:!1},{name:"Show metadata",type:"boolean",value:!1},{name:"Show counts",type:"boolean",value:!0}]},Zip:{module:"Compression",description:"Compresses data using the PKZIP algorithm with the given filename.<br><br>No support for multiple files at this time.",infoURL:"https://wikipedia.org/wiki/Zip_(file_format)",inputType:"ArrayBuffer",outputType:"File",flowControl:!1,manualBake:!1,args:[{name:"Filename",type:"string",value:"file.txt"},{name:"Comment",type:"string",value:""},{name:"Password",type:"binaryString",value:""},{name:"Compression method",type:"option",value:["Deflate","None (Store)"]},{name:"Operating system",type:"option",value:["MSDOS","Unix","Macintosh"]},{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding","None (Store)"]}]},"Zlib Deflate":{module:"Compression",description:"Compresses data using the deflate algorithm adding zlib headers.",infoURL:"https://wikipedia.org/wiki/Zlib",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Compression type",type:"option",value:["Dynamic Huffman Coding","Fixed Huffman Coding","None (Store)"]}]},"Zlib Inflate":{module:"Compression",description:"Decompresses data which has been compressed using the deflate algorithm with zlib headers.",infoURL:"https://wikipedia.org/wiki/Zlib",inputType:"ArrayBuffer",outputType:"ArrayBuffer",flowControl:!1,manualBake:!1,args:[{name:"Start index",type:"number",value:0},{name:"Initial output buffer size",type:"number",value:0},{name:"Buffer expansion type",type:"option",value:["Adaptive","Block"]},{name:"Resize buffer after decompression",type:"boolean",value:!1},{name:"Verify result",type:"boolean",value:!1}],patterns:[{match:"^\\x78(\\x01|\\x9c|\\xda|\\x5e)",flags:"",args:[0,0,"Adaptive",!1,!1]}]}}},function(e,t){e.exports=require("crypto-api/src/crypto-api")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("esprima")},function(e,t){e.exports=require("punycode")},function(e,t,a){"use strict";a.d(t,"a",function(){return n});var r=a(6);
/src/build/node/CyberChef.js-61-/**
##############################################
/src/build/node/CyberChef.js-82- * @license Apache-2.0
/src/build/node/CyberChef.js:83: */X.encode=function(e){for(var t=[],a=e.length,r=a%3,n=a-r,i=0;i<n;){var o=e[i++]<<16|e[i++]<<8|e[i++];t.push(Q.charAt(o>>>18&63)),t.push(Q.charAt(o>>>12&63)),t.push(Q.charAt(o>>>6&63)),t.push(Q.charAt(63&o))}switch(r){case 2:o=e[i++]<<16|e[i++]<<8;t.push(Q.charAt(o>>>18&63)),t.push(Q.charAt(o>>>12&63)),t.push(Q.charAt(o>>>6&63)),t.push("=");break;case 1:o=e[i++]<<16;t.push(Q.charAt(o>>>18&63)),t.push(Q.charAt(o>>>12&63)),t.push("="),t.push("=")}return t.join("")},X.decode=function(e){for(var t=e.split(""),a=[],r=t.length;"="==t[--r];);for(var n=0;n<r;){var i=Q.indexOf(t[n++])<<18;n<=r&&(i|=Q.indexOf(t[n++])<<12),n<=r&&(i|=Q.indexOf(t[n++])<<6),n<=r&&(i|=Q.indexOf(t[n++])),a.push(i>>>16&255),a.push(i>>>8&255),a.push(255&i)}for(;0==a[a.length-1];)a.pop();return a};var z={isString:function(e){return"string"==typeof e||e instanceof String}},Z={map:function(e,t,a,r){var n=0,i=e&&e.length||0,o=new(r||Array)(i);if(i&&"string"==typeof e&&(e=e.split("")),"string"==typeof t&&(t=cache[t]||buildFn(t)),a)for(;n<i;++n)o[n]=t.call(a,e[n],n,e);else for(;n<i;++n)o[n]=t(e[n],n,e);return o}};W.Blowfish=new function(){Math.pow(2,2),Math.pow(2,3),Math.pow(2,4);var e=Math.pow(2,8),t=Math.pow(2,16),a=Math.pow(2,24),r=null,n={p:[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],s0:[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],s1:[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],s2:[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],s3:[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]};function i(e,t){return(e>>16^t>>16)<<16|65535&(65535&e^65535&t)}function o(e,t){var a=t.s3[255&e];e>>=8;var r=t.s2[255&e];e>>=8;var n=t.s1[255&e];e>>=8;var i=t.s0[255&e],o=(i>>16)+(n>>16)+((65535&i)+(65535&n)>>16)<<16|(65535&i)+(65535&n)&65535;return((o=(o>>16^r>>16)<<16|65535&(65535&o^65535&r))>>16)+(a>>16)+((65535&o)+(65535&a)>>16)<<16|(65535&o)+(65535&a)&65535}function s(e,t){var a=e.left,r=e.right;a=i(a,t.p[0]),r=i(r,i(o(a,t),t.p[1])),a=i(a,i(o(r,t),t.p[2])),r=i(r,i(o(a,t),t.p[3])),a=i(a,i(o(r,t),t.p[4])),r=i(r,i(o(a,t),t.p[5])),a=i(a,i(o(r,t),t.p[6])),r=i(r,i(o(a,t),t.p[7])),a=i(a,i(o(r,t),t.p[8])),r=i(r,i(o(a,t),t.p[9])),a=i(a,i(o(r,t),t.p[10])),r=i(r,i(o(a,t),t.p[11])),a=i(a,i(o(r,t),t.p[12])),r=i(r,i(o(a,t),t.p[13])),a=i(a,i(o(r,t),t.p[14])),r=i(r,i(o(a,t),t.p[15])),a=i(a,i(o(r,t),t.p[16])),e.right=a,e.left=i(r,t.p[17])}function l(e,t){var a=e.left,r=e.right;a=i(a,t.p[17]),r=i(r,i(o(a,t),t.p[16])),a=i(a,i(o(r,t),t.p[15])),r=i(r,i(o(a,t),t.p[14])),a=i(a,i(o(r,t),t.p[13])),r=i(r,i(o(a,t),t.p[12])),a=i(a,i(o(r,t),t.p[11])),r=i(r,i(o(a,t),t.p[10])),a=i(a,i(o(r,t),t.p[9])),r=i(r,i(o(a,t),t.p[8])),a=i(a,i(o(r,t),t.p[7])),r=i(r,i(o(a,t),t.p[6])),a=i(a,i(o(r,t),t.p[5])),r=i(r,i(o(a,t),t.p[4])),a=i(a,i(o(r,t),t.p[3])),r=i(r,i(o(a,t),t.p[2])),a=i(a,i(o(r,t),t.p[1])),e.right=a,e.left=i(r,t.p[0])}function u(t){var a=t;z.isString(a)&&(a=Z.map(a.split(""),function(e){return 255&e.charCodeAt(0)}));var r,i,o,l=0,u=0,c={left:0,right:0},p={p:Z.map(n.p.slice(0),function(t){var r,n=a.length;for(r=0;r<4;r++)u=u*e|a[l++%n];return(t>>16^u>>16)<<16|65535&(65535&t^65535&u)}),s0:n.s0.slice(0),s1:n.s1.slice(0),s2:n.s2.slice(0),s3:n.s3.slice(0)};for(r=0,o=p.p.length;r<o;)s(c,p),p.p[r++]=c.left,p.p[r++]=c.right;for(r=0;r<4;r++)for(i=0,o=p["s"+r].length;i<o;)s(c,p),p["s"+r][i++]=c.left,p["s"+r][i++]=c.right;return p}this.getIV=function(e){switch(e||W.outputTypes.Base64){case W.outputTypes.Hex:return Z.map(r,function(e){return(e<=15?"0":"")+e.toString(16)}).join("");case W.outputTypes.String:return r.join("");case W.outputTypes.Raw:return r;default:return X.encode(r)}},this.setIV=function(n,i){var o=null;switch(i||W.outputTypes.Base64){case W.outputTypes.String:o=Z.map(n.split(""),function(e){return e.charCodeAt(0)});break;case W.outputTypes.Hex:o=[];for(var s=0,l=n.length-1;s<l;s+=2)o.push(parseInt(n.substr(s,2),16));break;case W.outputTypes.Raw:o=n;break;default:o=X.decode(n)}(r={}).left=o[0]*a|o[1]*t|o[2]*e|o[3],r.right=o[4]*a|o[5]*t|o[6]*e|o[7]},this.encrypt=function(n,i,o){var l=W.outputTypes.Base64,c=W.cipherModes.ECB;o&&(o.outputType&&(l=o.outputType),o.cipherMode&&(c=o.cipherMode));for(var p=u(i),d=8-(7&n.length),h=0;h<d;h++)n+=String.fromCharCode(d);var f=[],m=n.length>>3,g=0,y={},A=c==W.cipherModes.CBC,b={left:r.left||null,right:r.right||null};for(h=0;h<m;h++)y.left=n.charCodeAt(g)*a|n.charCodeAt(g+1)*t|n.charCodeAt(g+2)*e|n.charCodeAt(g+3),y.right=n.charCodeAt(g+4)*a|n.charCodeAt(g+5)*t|n.charCodeAt(g+6)*e|n.charCodeAt(g+7),A&&(y.left=(y.left>>16^b.left>>16)<<16|65535&(65535&y.left^65535&b.left),y.right=(y.right>>16^b.right>>16)<<16|65535&(65535&y.right^65535&b.right)),s(y,p),A&&(b.left=y.left,b.right=y.right),f.push(y.left>>24&255),f.push(y.left>>16&255),f.push(y.left>>8&255),f.push(255&y.left),f.push(y.right>>24&255),f.push(y.right>>16&255),f.push(y.right>>8&255),f.push(255&y.right),g+=8;switch(l){case W.outputTypes.Hex:return Z.map(f,function(e){return(e<=15?"0":"")+e.toString(16)}).join("");case W.outputTypes.String:return f.join("");case W.outputTypes.Raw:return f;default:return X.encode(f)}},this.decrypt=function(n,i,o){var s=W.outputTypes.Base64,c=W.cipherModes.ECB;o&&(o.outputType&&(s=o.outputType),o.cipherMode&&(c=o.cipherMode));var p=u(i),d=[],h=null;switch(s){case W.outputTypes.Hex:h=[];for(var f=0,m=n.length-1;f<m;f+=2)h.push(parseInt(n.substr(f,2),16));break;case W.outputTypes.String:h=Z.map(n.split(""),function(e){return e.charCodeAt(0)});break;case W.outputTypes.Raw:h=n;break;default:h=X.decode(n)}var g=h.length>>3,y=0,A={},b=c==W.cipherModes.CBC,v={left:r.left||null,right:r.right||null};for(f=0;f<g;f++){if(A.left=h[y]*a|h[y+1]*t|h[y+2]*e|h[y+3],A.right=h[y+4]*a|h[y+5]*t|h[y+6]*e|h[y+7],b)var C=A.left,S=A.right;l(A,p),b&&(A.left=(A.left>>16^v.left>>16)<<16|65535&(65535&A.left^65535&v.left),A.right=(A.right>>16^v.right>>16)<<16|65535&(65535&A.right^65535&v.right),v.left=C,v.right=S),d.push(A.left>>24&255),d.push(A.left>>16&255),d.push(A.left>>8&255),d.push(255&A.left),d.push(A.right>>24&255),d.push(A.right>>16&255),d.push(A.right>>8&255),d.push(255&A.right),y+=8}if(d[d.length-1]==d[d.length-2]||1==d[d.length-1]){var w=d[d.length-1];d.splice(d.length-w,w)}return Z.map(d,function(e){return String.fromCharCode(e)}).join("")},this.setIV("0000000000000000",W.outputTypes.Hex)};var J=W.Blowfish,Y=a(12),j=a(15),q={Base64:0,Hex:1,String:2,Raw:3},$={ECB:0,CBC:1,PCBC:2,CFB:3,OFB:4,CTR:5},ee=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Blowfish Decrypt",e.module="Ciphers",e.description="Blowfish is a symmetric-key block cipher designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products. AES now receives more attention.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.",e.infoURL="https://wikipedia.org/wiki/Blowfish_(cipher)",e.inputType="string",e.outputType="string",e.args=[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","PCBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Hex","Base64","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string,t[0].option),r=f.a.convertToByteArray(t[1].string,t[1].option),n=I()(t,5),i=n[2],o=n[3],s=n[4];if(0===a.length)throw new B.a("Enter a key");e="Raw"===o?f.a.strToByteArray(e):e,J.setIV(Object(Y.c)(r),0);var l=J.decrypt(e,a,{outputType:q[o],cipherMode:$[i]});return"Hex"===s?Object(j.e)(f.a.strToByteArray(l)):l}}]),t}(h.a),te={Base64:0,Hex:1,String:2,Raw:3},ae={ECB:0,CBC:1,PCBC:2,CFB:3,OFB:4,CTR:5},re=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Blowfish Encrypt",e.module="Ciphers",e.description="Blowfish is a symmetric-key block cipher designed in 1993 by Bruce Schneier and included in a large number of cipher suites and encryption products. AES now receives more attention.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.",e.infoURL="https://wikipedia.org/wiki/Blowfish_(cipher)",e.inputType="string",e.outputType="string",e.args=[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","PCBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Base64","Raw"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string,t[0].option),r=f.a.convertToByteArray(t[1].string,t[1].option),n=I()(t,5),i=n[2],o=n[3],s=n[4];if(0===a.length)throw new B.a("Enter a key");e=f.a.convertToByteString(e,o),J.setIV(Object(Y.c)(r),0);var l=J.encrypt(e,a,{outputType:te[s],cipherMode:ae[i]});return"Raw"===s?f.a.byteArrayToChars(l):l}}]),t}(h.a),ne=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="DES Decrypt",e.module="Ciphers",e.description="DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",e.infoURL="https://wikipedia.org/wiki/Data_Encryption_Standard",e.inputType="string",e.outputType="string",e.args=[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Hex","Raw"]},{name:"Output",type:"option",value:["Raw","Hex"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string,t[0].option),r=f.a.convertToByteArray(t[1].string,t[1].option),n=I()(t,5),i=n[2],o=n[3],s=n[4];if(8!==a.length)throw new B.a("Invalid key length: ".concat(a.length," bytes\n\nDES uses a key length of 8 bytes (64 bits).\nTriple DES uses a key length of 24 bytes (192 bits)."));e=f.a.convertToByteString(e,o);var l=E.a.cipher.createDecipher("DES-"+i,a);if(l.start({iv:r}),l.update(E.a.util.createBuffer(e)),l.finish())return"Hex"===s?l.output.toHex():l.output.getBytes();throw new B.a("Unable to decrypt input with these parameters.")}}]),t}(h.a),ie=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="DES Encrypt",e.module="Ciphers",e.description="DES is a previously dominant algorithm for encryption, and was published as an official U.S. Federal Information Processing Standard (FIPS). It is now considered to be insecure due to its small key size.<br><br><b>Key:</b> DES uses a key length of 8 bytes (64 bits).<br>Triple DES uses a key length of 24 bytes (192 bits).<br><br>You can generate a password-based key using one of the KDF operations.<br><br><b>IV:</b> The Initialization Vector should be 8 bytes long. If not entered, it will default to 8 null bytes.<br><br><b>Padding:</b> In CBC and ECB mode, PKCS#7 padding will be used.",e.infoURL="https://wikipedia.org/wiki/Data_Encryption_Standard",e.inputType="string",e.outputType="string",e.args=[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"IV",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]},{name:"Mode",type:"option",value:["CBC","CFB","OFB","CTR","ECB"]},{name:"Input",type:"option",value:["Raw","Hex"]},{name:"Output",type:"option",value:["Hex","Raw"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string,t[0].option),r=f.a.convertToByteArray(t[1].string,t[1].option),n=I()(t,5),i=n[2],o=n[3],s=n[4];if(8!==a.length)throw new B.a("Invalid key length: ".concat(a.length," bytes\n\nDES uses a key length of 8 bytes (64 bits).\nTriple DES uses a key length of 24 bytes (192 bits)."));e=f.a.convertToByteString(e,o);var l=E.a.cipher.createCipher("DES-"+i,a);return l.start({iv:r}),l.update(E.a.util.createBuffer(e)),l.finish(),"Hex"===s?l.output.toHex():l.output.getBytes()}}]),t}(h.a),oe=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Derive EVP key",e.module="Ciphers",e.description="This operation performs a password-based key derivation function (PBKDF) used extensively in OpenSSL. In many applications of cryptography, user security is ultimately dependent on a password, and because a password usually can't be used directly as a cryptographic key, some processing is required.<br><br>A salt provides a large set of keys for any given password, and an iteration count increases the cost of producing keys from a password, thereby also increasing the difficulty of attack.<br><br>If you leave the salt argument empty, a random salt will be generated.",e.infoURL="https://wikipedia.org/wiki/Key_derivation_function",e.inputType="string",e.outputType="string",e.args=[{name:"Passphrase",type:"toggleString",value:"",toggleValues:["UTF8","Latin1","Hex","Base64"]},{name:"Key size",type:"number",value:128},{name:"Iterations",type:"number",value:1},{name:"Hashing function",type:"option",value:["SHA1","SHA256","SHA384","SHA512","MD5"]},{name:"Salt",type:"toggleString",value:"",toggleValues:["Hex","UTF8","Latin1","Base64"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string,t[0].option),r=t[1]/32,n=t[2],i=t[3],o=f.a.convertToByteString(t[4].string,t[4].option);return U.a.EvpKDF(a,o,{keySize:r,hasher:U.a.algo[i],iterations:n}).toString(U.a.enc.Hex)}}]),t}(h.a);U.a.kdf.OpenSSL.execute=function(e,t,a,r){null==r&&(r=U.a.lib.WordArray.random(8));var n=U.a.algo.EvpKDF.create({keySize:t+a}).compute(e,r),i=U.a.lib.WordArray.create(n.words.slice(t),4*a);return n.sigBytes=4*t,U.a.lib.CipherParams.create({key:n,iv:i,salt:r})},U.a.enc.Hex.parse=function(e){for(var t=(e=e.replace(/\s/g,"")).length,a=[],r=0;r<t;r+=2)a[r>>>3]|=parseInt(e.substr(r,2),16)<<24-r%8*4;return new U.a.lib.WordArray.init(a,t/2)};
/src/build/node/CyberChef.js-84-/**
##############################################
/src/build/node/CyberChef.js-168- */
/src/build/node/CyberChef.js:169:return function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,t=[];t.length<e;){for(var a=wr(Pr,Dr),r=[];r.length<a;){var n=br(wr(Br,kr));r.push(Cr(n))}t.push(Sr(r))}return t[t.length-1]=t[t.length-1].slice(0,-2),t[0]=Tr(t[0]),t.join("")}(r);case"Sentences":return function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3,t=[];t.length<e;){var a=br(wr(Br,kr));t.push(Cr(a))}return vr(t).join("")}(r);case"Words":return Ar(r);case"Bytes":return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:3;return Ar(e/3).slice(0,e)}(r);default:throw new B.a("Invalid length type")}}}]),t}(h.a),Fr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Generate TOTP",e.module="Default",e.description="The Time-based One-Time Password algorithm (TOTP) is an algorithm that computes a one-time password from a shared secret key and the current time. It has been adopted as Internet Engineering Task Force standard RFC 6238, is the cornerstone of Initiative For Open Authentication (OATH), and is used in a number of two-factor authentication systems. A TOTP is an HOTP where the counter is the current time.<br><br>Enter the secret as the input or leave it blank for a random secret to be generated. T0 and T1 are in seconds.",e.infoURL="https://wikipedia.org/wiki/Time-based_One-time_Password_algorithm",e.inputType="byteArray",e.outputType="string",e.args=[{name:"Name",type:"string",value:""},{name:"Key size",type:"number",value:32},{name:"Code length",type:"number",value:6},{name:"Epoch offset (T0)",type:"number",value:0},{name:"Interval (T1)",type:"number",value:30}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=mr()({name:t[0],keySize:t[1],codeLength:t[2],secret:(new gr).run(e,[]),epoch:t[3],timeSlice:t[4]});return"URI: ".concat(a.totpURL,"\n\nPassword: ").concat(a.totp())}}]),t}(h.a);function Ir(e,t,a,r){for(var n=Lr(e[0].split("-")[0].trim()),i=Lr(e[0].split("-")[1].trim()),o="",s=n^i,l=32,u=0;0!==s;)s>>=1,l--,u=u<<1|1;var c=n&(u=~u>>>0),p=c&u,d=p|~u;return t&&(o+="Minimum subnet required to hold this range:\n\tNetwork: ".concat(Ur(c),"\n\tCIDR: ").concat(l,"\n\tMask: ").concat(Ur(u),"\n\tSubnet range: ").concat(Ur(p)," - ").concat(Ur(d),"\n\tTotal addresses in subnet: ").concat(1+(d-p>>>0),"\n\nRange: ").concat(Ur(n)," - ").concat(Ur(i),"\nTotal addresses in range: ").concat(1+(i-n>>>0),"\n\n")),a&&(o+=i-n>>>0<=65536||r?Vr(n,i).join("\n"):Kr),o}function xr(e,t){var a,r=Or(e[0].split("-")[0].trim()),n=Or(e[0].split("-")[1].trim()),i=new Array(128).fill(),o="",s="";for(a=0;a<8;a++)if("0"!==(s=(n[a]-r[a]).toString(2)))for(var l=0;l<s.length;l++)i[16*a+16-(s.length-l)]=s[l];return t&&(o+="Range: "+Nr(r)+" - "+Nr(n)+"\n",o+="Shorthand range: "+Nr(r,!0)+" - "+Nr(n,!0)+"\n",o+="Total addresses in range: "+(parseInt(i.join(""),2)+1)+"\n\n"),o}function Lr(e){var t=function(e){if(4!==e.length)throw new B.a("More than 4 blocks.");for(var t=[],a=0;a<4;a++)if(t[a]=parseInt(e[a],10),t[a]<0||t[a]>255)throw new B.a("Block out of range.");return t}(e.split(".")),a=0;return a+=t[0]<<24,a+=t[1]<<16,a+=t[2]<<8,a+=t[3]}function Ur(e){return(e>>24&255)+"."+(e>>16&255)+"."+(e>>8&255)+"."+(255&e)}function Or(e){for(var t=0,a=function(e){if(e.length<3||e.length>8)throw new B.a("Badly formatted IPv6 address.");for(var t=[],a=0;a<e.length;a++)if(t[a]=parseInt(e[a],16),t[a]<0||t[a]>65535)throw new B.a("Block out of range.");return t}(e.split(":")),r=new Array(8),n=0;n<8;n++)isNaN(a[t])?(r[n]=0,n===8-a.slice(t).length&&t++):(r[n]=a[t],t++);return r}function Nr(e,t){var a="",r=0;if(t){var n=-1,i=-1,o=0,s=-1;for(r=0;r<8;r++)0===e[r]&&s===r-1?s=r:0===e[r]&&(o=r,s=r),s>=0&&s-o>i-n&&(n=o,i=s);for(r=0;r<8;r++)r!==n?a+=f.a.hex(e[r],1)+":":(a+=":",r=i,7===i&&(a+=":"));":"===a[0]&&(a=":"+a)}else for(r=0;r<8;r++)a+=f.a.hex(e[r],4)+":";return a.slice(0,a.length-1)}function Vr(e,t){var a=[];if(t>=e)for(;e<=t;e++)a.push(Ur(e));else a[0]="Second IP address smaller than first.";return a}function Hr(e){for(var t,a=new Array(8),r=0;r<8;r++)e>16*(r+1)?a[r]=65535:((t=e-16*r)<0&&(t=0),a[r]=~(65535>>>t|4294901760));return a}function _r(e,t){return Lr(e)-Lr(t)}function Gr(e,t){for(var a=Or(e),r=Or(t),n=0;n<a.length;n++)if(a[n]!==r[n])return a[n]-r[n];return 0}var Kr='The specified range contains more than 65,536 addresses. Running this query could crash your browser. If you want to run it, select the "Allow large queries" option. You are advised to turn off "Auto Bake" whilst editing large ranges.',Wr=/^\s*((?:\d{1,3}\.){3}\d{1,3})\s*$/,Xr=/^\s*(((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\4)::|:\b|(?![\dA-F])))|(?!\3\4)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4}))\s*$/i,Qr={0:{keyword:"HOPOPT",protocol:"IPv6 Hop-by-Hop Option"},1:{keyword:"ICMP",protocol:"Internet Control Message"},2:{keyword:"IGMP",protocol:"Internet Group Management"},3:{keyword:"GGP",protocol:"Gateway-to-Gateway"},4:{keyword:"IPv4",protocol:"IPv4 encapsulation"},5:{keyword:"ST",protocol:"Stream"},6:{keyword:"TCP",protocol:"Transmission Control"},7:{keyword:"CBT",protocol:"CBT"},8:{keyword:"EGP",protocol:"Exterior Gateway Protocol"},9:{keyword:"IGP",protocol:"any private interior gateway (used by Cisco for their IGRP)"},10:{keyword:"BBN-RCC-MON",protocol:"BBN RCC Monitoring"},11:{keyword:"NVP-II",protocol:"Network Voice Protocol"},12:{keyword:"PUP",protocol:"PUP"},13:{keyword:"ARGUS (deprecated)",protocol:"ARGUS"},14:{keyword:"EMCON",protocol:"EMCON"},15:{keyword:"XNET",protocol:"Cross Net Debugger"},16:{keyword:"CHAOS",protocol:"Chaos"},17:{keyword:"UDP",protocol:"User Datagram"},18:{keyword:"MUX",protocol:"Multiplexing"},19:{keyword:"DCN-MEAS",protocol:"DCN Measurement Subsystems"},20:{keyword:"HMP",protocol:"Host Monitoring"},21:{keyword:"PRM",protocol:"Packet Radio Measurement"},22:{keyword:"XNS-IDP",protocol:"XEROX NS IDP"},23:{keyword:"TRUNK-1",protocol:"Trunk-1"},24:{keyword:"TRUNK-2",protocol:"Trunk-2"},25:{keyword:"LEAF-1",protocol:"Leaf-1"},26:{keyword:"LEAF-2",protocol:"Leaf-2"},27:{keyword:"RDP",protocol:"Reliable Data Protocol"},28:{keyword:"IRTP",protocol:"Internet Reliable Transaction"},29:{keyword:"ISO-TP4",protocol:"ISO Transport Protocol Class 4"},30:{keyword:"NETBLT",protocol:"Bulk Data Transfer Protocol"},31:{keyword:"MFE-NSP",protocol:"MFE Network Services Protocol"},32:{keyword:"MERIT-INP",protocol:"MERIT Internodal Protocol"},33:{keyword:"DCCP",protocol:"Datagram Congestion Control Protocol"},34:{keyword:"3PC",protocol:"Third Party Connect Protocol"},35:{keyword:"IDPR",protocol:"Inter-Domain Policy Routing Protocol"},36:{keyword:"XTP",protocol:"XTP"},37:{keyword:"DDP",protocol:"Datagram Delivery Protocol"},38:{keyword:"IDPR-CMTP",protocol:"IDPR Control Message Transport Proto"},39:{keyword:"TP++",protocol:"TP++ Transport Protocol"},40:{keyword:"IL",protocol:"IL Transport Protocol"},41:{keyword:"IPv6",protocol:"IPv6 encapsulation"},42:{keyword:"SDRP",protocol:"Source Demand Routing Protocol"},43:{keyword:"IPv6-Route",protocol:"Routing Header for IPv6"},44:{keyword:"IPv6-Frag",protocol:"Fragment Header for IPv6"},45:{keyword:"IDRP",protocol:"Inter-Domain Routing Protocol"},46:{keyword:"RSVP",protocol:"Reservation Protocol"},47:{keyword:"GRE",protocol:"Generic Routing Encapsulation"},48:{keyword:"DSR",protocol:"Dynamic Source Routing Protocol"},49:{keyword:"BNA",protocol:"BNA"},50:{keyword:"ESP",protocol:"Encap Security Payload"},51:{keyword:"AH",protocol:"Authentication Header"},52:{keyword:"I-NLSP",protocol:"Integrated Net Layer Security  TUBA"},53:{keyword:"SWIPE (deprecated)",protocol:"IP with Encryption"},54:{keyword:"NARP",protocol:"NBMA Address Resolution Protocol"},55:{keyword:"MOBILE",protocol:"IP Mobility"},56:{keyword:"TLSP",protocol:"Transport Layer Security Protocol using Kryptonet key management"},57:{keyword:"SKIP",protocol:"SKIP"},58:{keyword:"IPv6-ICMP",protocol:"ICMP for IPv6"},59:{keyword:"IPv6-NoNxt",protocol:"No Next Header for IPv6"},60:{keyword:"IPv6-Opts",protocol:"Destination Options for IPv6"},61:{keyword:"",protocol:"any host internal protocol"},62:{keyword:"CFTP",protocol:"CFTP"},63:{keyword:"",protocol:"any local network"},64:{keyword:"SAT-EXPAK",protocol:"SATNET and Backroom EXPAK"},65:{keyword:"KRYPTOLAN",protocol:"Kryptolan"},66:{keyword:"RVD",protocol:"MIT Remote Virtual Disk Protocol"},67:{keyword:"IPPC",protocol:"Internet Pluribus Packet Core"},68:{keyword:"",protocol:"any distributed file system"},69:{keyword:"SAT-MON",protocol:"SATNET Monitoring"},70:{keyword:"VISA",protocol:"VISA Protocol"},71:{keyword:"IPCV",protocol:"Internet Packet Core Utility"},72:{keyword:"CPNX",protocol:"Computer Protocol Network Executive"},73:{keyword:"CPHB",protocol:"Computer Protocol Heart Beat"},74:{keyword:"WSN",protocol:"Wang Span Network"},75:{keyword:"PVP",protocol:"Packet Video Protocol"},76:{keyword:"BR-SAT-MON",protocol:"Backroom SATNET Monitoring"},77:{keyword:"SUN-ND",protocol:"SUN ND PROTOCOL-Temporary"},78:{keyword:"WB-MON",protocol:"WIDEBAND Monitoring"},79:{keyword:"WB-EXPAK",protocol:"WIDEBAND EXPAK"},80:{keyword:"ISO-IP",protocol:"ISO Internet Protocol"},81:{keyword:"VMTP",protocol:"VMTP"},82:{keyword:"SECURE-VMTP",protocol:"SECURE-VMTP"},83:{keyword:"VINES",protocol:"VINES"},84:{keyword:"TTP",protocol:"Transaction Transport Protocol"},85:{keyword:"NSFNET-IGP",protocol:"NSFNET-IGP"},86:{keyword:"DGP",protocol:"Dissimilar Gateway Protocol"},87:{keyword:"TCF",protocol:"TCF"},88:{keyword:"EIGRP",protocol:"EIGRP"},89:{keyword:"OSPFIGP",protocol:"OSPFIGP"},90:{keyword:"Sprite-RPC",protocol:"Sprite RPC Protocol"},91:{keyword:"LARP",protocol:"Locus Address Resolution Protocol"},92:{keyword:"MTP",protocol:"Multicast Transport Protocol"},93:{keyword:"AX.25",protocol:"AX.25 Frames"},94:{keyword:"IPIP",protocol:"IP-within-IP Encapsulation Protocol"},95:{keyword:"MICP (deprecated)",protocol:"Mobile Internetworking Control Pro."},96:{keyword:"SCC-SP",protocol:"Semaphore Communications Sec. Pro."},97:{keyword:"ETHERIP",protocol:"Ethernet-within-IP Encapsulation"},98:{keyword:"ENCAP",protocol:"Encapsulation Header"},99:{keyword:"",protocol:"any private encryption scheme"},100:{keyword:"GMTP",protocol:"GMTP"},101:{keyword:"IFMP",protocol:"Ipsilon Flow Management Protocol"},102:{keyword:"PNNI",protocol:"PNNI over IP"},103:{keyword:"PIM",protocol:"Protocol Independent Multicast"},104:{keyword:"ARIS",protocol:"ARIS"},105:{keyword:"SCPS",protocol:"SCPS"},106:{keyword:"QNX",protocol:"QNX"},107:{keyword:"A/N",protocol:"Active Networks"},108:{keyword:"IPComp",protocol:"IP Payload Compression Protocol"},109:{keyword:"SNP",protocol:"Sitara Networks Protocol"},110:{keyword:"Compaq-Peer",protocol:"Compaq Peer Protocol"},111:{keyword:"IPX-in-IP",protocol:"IPX in IP"},112:{keyword:"VRRP",protocol:"Virtual Router Redundancy Protocol"},113:{keyword:"PGM",protocol:"PGM Reliable Transport Protocol"},114:{keyword:"",protocol:"any 0-hop protocol"},115:{keyword:"L2TP",protocol:"Layer Two Tunneling Protocol"},116:{keyword:"DDX",protocol:"D-II Data Exchange (DDX)"},117:{keyword:"IATP",protocol:"Interactive Agent Transfer Protocol"},118:{keyword:"STP",protocol:"Schedule Transfer Protocol"},119:{keyword:"SRP",protocol:"SpectraLink Radio Protocol"},120:{keyword:"UTI",protocol:"UTI"},121:{keyword:"SMP",protocol:"Simple Message Protocol"},122:{keyword:"SM (deprecated)",protocol:"Simple Multicast Protocol"},123:{keyword:"PTP",protocol:"Performance Transparency Protocol"},124:{keyword:"ISIS over IPv4",protocol:""},125:{keyword:"FIRE",protocol:""},126:{keyword:"CRTP",protocol:"Combat Radio Transport Protocol"},127:{keyword:"CRUDP",protocol:"Combat Radio User Datagram"},128:{keyword:"SSCOPMCE",protocol:""},129:{keyword:"IPLT",protocol:""},130:{keyword:"SPS",protocol:"Secure Packet Shield"},131:{keyword:"PIPE",protocol:"Private IP Encapsulation within IP"},132:{keyword:"SCTP",protocol:"Stream Control Transmission Protocol"},133:{keyword:"FC",protocol:"Fibre Channel"},134:{keyword:"RSVP-E2E-IGNORE",protocol:""},135:{keyword:"Mobility Header",protocol:""},136:{keyword:"UDPLite",protocol:""},137:{keyword:"MPLS-in-IP",protocol:""},138:{keyword:"manet",protocol:"MANET Protocols"},139:{keyword:"HIP",protocol:"Host Identity Protocol"},140:{keyword:"Shim6",protocol:"Shim6 Protocol"},141:{keyword:"WESP",protocol:"Wrapped Encapsulating Security Payload"},142:{keyword:"ROHC",protocol:"Robust Header Compression"},253:{keyword:"",protocol:"Use for experimentation and testing"},254:{keyword:"",protocol:"Use for experimentation and testing"},255:{keyword:"Reserved",protocol:""}},zr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Group IP addresses",e.module="Default",e.description="Groups a list of IP addresses into subnets. Supports both IPv4 and IPv6 addresses.",e.infoURL="https://wikipedia.org/wiki/Subnetwork",e.inputType="string",e.outputType="string",e.args=[{name:"Delimiter",type:"option",value:S},{name:"Subnet (CIDR)",type:"number",value:24},{name:"Only show the subnets",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a,r=f.a.charRep(t[0]),n=t[1],i=t[2],o=n<32?~(4294967295>>>n):4294967295,s=Hr(n),l=e.split(r),u={},c={},p=null,d="",h=null,m=null,g="";if(n<0||n>127)throw new B.a("CIDR must be less than 32 for IPv4 or 128 for IPv6");for(a=0;a<l.length;a++)if(p=Wr.exec(l[a]))m=(h=Lr(p[1])>>>0)&o,u.hasOwnProperty(m)?u[m].push(h):u[m]=[h];else if(p=Xr.exec(l[a])){h=Or(p[1]),m=[],g="";for(var y=0;y<8;y++)m.push(h[y]&s[y]);g=Nr(m,!0),c.hasOwnProperty(g)?c[g].push(h):c[g]=[h]}for(m in u)if(u[m]=u[m].sort(),d+=Ur(m)+"/"+n+"\n",!i){for(a=0;a<u[m].length;a++)d+="  "+Ur(u[m][a])+"\n";d+="\n"}for(g in c)if(d+=g+"/"+n+"\n",!i){for(a=0;a<c[g].length;a++)d+="  "+Nr(c[g][a],!0)+"\n";d+="\n"}return d}}]),t}(h.a),Zr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="HTML To Text",e.module="Default",e.description="Converts an HTML output from an operation to a readable string instead of being rendered in the DOM.",e.infoURL="",e.inputType="html",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return e}}]),t}(h.a),Jr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="HTTP request",e.module="Default",e.description=["Makes an HTTP request and returns the response.","<br><br>","This operation supports different HTTP verbs like GET, POST, PUT, etc.","<br><br>","You can add headers line by line in the format <code>Key: Value</code>","<br><br>","The status code of the response, along with a limited selection of exposed headers, can be viewed by checking the 'Show response metadata' option. Only a limited set of response headers are exposed by the browser for security reasons."].join("\n"),e.infoURL="https://wikipedia.org/wiki/List_of_HTTP_header_fields#Request_fields",e.inputType="string",e.outputType="string",e.manualBake=!0,e.args=[{name:"Method",type:"option",value:["GET","POST","HEAD","PUT","PATCH","DELETE","CONNECT","TRACE","OPTIONS"]},{name:"URL",type:"string",value:""},{name:"Headers",type:"text",value:""},{name:"Mode",type:"option",value:["Cross-Origin Resource Sharing","No CORS (limited to HEAD, GET or POST)"]},{name:"Show response metadata",type:"boolean",value:!1}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,5),r=a[0],n=a[1],i=a[2],o=a[3],s=a[4];if(0===n.length)return"";var l=new Headers;i.split(/\r?\n/).forEach(function(e){if(0!==(e=e.trim()).length){var t=e.split(":");if(2!==t.length)throw"Could not parse header in line: ".concat(e);l.set(t[0].trim(),t[1].trim())}});var u={method:r,headers:l,mode:Yr[o],cache:"no-cache"};return"GET"!==r&&"HEAD"!==r&&(u.body=e),fetch(n,u).then(function(e){if(0===e.status&&"opaque"===e.type)throw new B.a("Error: Null response. Try setting the connection mode to CORS.");if(s){var t="",a=!0,r=!1,n=void 0;try{for(var i,o=e.headers.entries()[Symbol.iterator]();!(a=(i=o.next()).done);a=!0){var l=i.value;t+="    "+l[0]+": "+l[1]+"\n"}}catch(e){r=!0,n=e}finally{try{a||null==o.return||o.return()}finally{if(r)throw n}}return e.text().then(function(a){return"####\n  Status: "+e.status+" "+e.statusText+"\n  Exposed headers:\n"+t+"####\n\n"+a})}return e.text()}).catch(function(e){throw new B.a(e.toString()+"\n\nThis error could be caused by one of the following:\n - An invalid URL\n - Making a request to an insecure resource (HTTP) from a secure source (HTTPS)\n - Making a cross-origin request to a server which does not support CORS\n")})}}]),t}(h.a),Yr={"Cross-Origin Resource Sharing":"cors","No CORS (limited to HEAD, GET or POST)":"no-cors"},jr=Jr,qr=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Hamming Distance",e.module="Default",e.description="In information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. In other words, it measures the minimum number of substitutions required to change one string into the other, or the minimum number of errors that could have transformed one string into the other. In a more general context, the Hamming distance is one of several string metrics for measuring the edit distance between two sequences.",e.infoURL="https://wikipedia.org/wiki/Hamming_distance",e.inputType="string",e.outputType="string",e.args=[{name:"Delimiter",type:"binaryShortString",value:"\\n\\n"},{name:"Unit",type:"option",value:["Byte","Bit"]},{name:"Input type",type:"option",value:["Raw string","Hex"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=t[0],r="Byte"===t[1],n=t[2],i=e.split(a);if(2!==i.length)throw new B.a("Error: You can only calculae the edit distance between 2 strings. Please ensure exactly two inputs are provided, separated by the specified delimiter.");if(i[0].length!==i[1].length)throw new B.a("Error: Both inputs must be of the same length.");"Hex"===n?(i[0]=Object(j.c)(i[0]),i[1]=Object(j.c)(i[1])):(i[0]=f.a.strToByteArray(i[0]),i[1]=f.a.strToByteArray(i[1]));for(var o=0,s=0;s<i[0].length;s++){var l=i[0][s],u=i[1][s];if(r&&l!==u)o++;else if(!r)for(var c=l^u;c;)o++,c&=c-1}return o.toString()}}]),t}(h.a),$r=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Haversine distance",e.module="Default",e.description="Returns the distance between two pairs of GPS latitude and longitude co-ordinates in metres.<br><br>e.g. <code>51.487263,-0.124323, 38.9517,-77.1467</code>",e.infoURL="https://wikipedia.org/wiki/Haversine_formula",e.inputType="string",e.outputType="number",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=e.match(/^(-?\d+(\.\d+)?), ?(-?\d+(\.\d+)?), ?(-?\d+(\.\d+)?), ?(-?\d+(\.\d+)?)$/);if(!a)throw new B.a("Input must in the format lat1, lng1, lat2, lng2");var r=parseFloat(a[1]),n=parseFloat(a[3]),i=parseFloat(a[6]),o=parseFloat(a[8]),s=Math.PI/180,l=(i-r)*s,u=(o-n)*s,c=Math.sin(l/2)*Math.sin(l/2)+Math.cos(r*s)*Math.cos(i*s)*Math.sin(u/2)*Math.sin(u/2);return 12742e3*Math.atan2(Math.sqrt(c),Math.sqrt(1-c))}}]),t}(h.a),en=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Head",e.module="Default",e.description="Like the UNIX head utility.<br>Gets the first n lines.<br>You can select all but the last n lines by entering a negative value for n.<br>The delimiter can be changed so that instead of lines, fields (i.e. commas) are selected instead.",e.inputType="string",e.outputType="string",e.args=[{name:"Delimiter",type:"option",value:b},{name:"Number",type:"number",value:10}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=t[0],r=t[1];a=f.a.charRep(a);var n=e.split(a);return n.filter(function(e,t){return t+=1,r<0?t<=n.length+r:t<=r}).join(a)}}]),t}(h.a),tn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JSON to CSV",e.module="Default",e.description="Converts JSON data to a CSV based on the definition in RFC 4180.",e.infoURL="https://wikipedia.org/wiki/Comma-separated_values",e.inputType="JSON",e.outputType="string",e.args=[{name:"Cell delimiter",type:"binaryShortString",value:","},{name:"Row delimiter",type:"binaryShortString",value:"\\r\\n"}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,2),r=a[0],n=a[1];this.cellDelim=r,this.rowDelim=n;var i=this;try{if(e[0]instanceof Array)return e.map(function(e){return e.map(i.escapeCellContents.bind(i)).join(r)}).join(n)+n;var o=Object.keys(e[0]);return o.map(i.escapeCellContents.bind(i)).join(r)+n+e.map(function(e){return o.map(function(t){return e[t]}).map(i.escapeCellContents.bind(i)).join(r)}).join(n)+n}catch(e){throw new B.a("Unable to parse JSON to CSV: "+e.toString())}}},{key:"escapeCellContents",value:function(e){return((e=e.replace(/"/g,'""')).indexOf(this.cellDelim)>=0||e.indexOf(this.rowDelim)>=0||e.indexOf("\n")>=0||e.indexOf("\r")>=0||e.indexOf('"')>=0)&&(e='"'.concat(e,'"')),e}}]),t}(h.a),an=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Jump",e.flowControl=!0,e.module="Default",e.description="Jump forwards or backwards to the specified Label",e.inputType="string",e.outputType="string",e.args=[{name:"Label name",type:"string",value:""},{name:"Maximum jumps (if jumping backwards)",type:"number",value:10}],e}return d()(t,e),o()(t,[{key:"run",value:function(e){var t=e.opList[e.progress].ingValues,a=I()(t,2),r=a[0],n=a[1],i=pt(r,e);return e.numJumps>=n||-1===i?e:(e.progress=i,e.numJumps++,e)}}]),t}(h.a),rn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Label",e.flowControl=!0,e.module="Default",e.description="Provides a location for conditional and fixed jumps to redirect execution to.",e.inputType="string",e.outputType="string",e.args=[{name:"Name",type:"shortString",value:""}],e}return d()(t,e),o()(t,[{key:"run",value:function(e){return e}}]),t}(h.a),nn=a(38),on=a(63),sn=a.n(on),ln=function(){function e(t,a){n()(this,e),this.inputBuffer=new Uint8Array(t),this.inputStr=f.a.arrayBufferToStr(t),this.opPatterns=a||e._generateOpPatterns()}return o()(e,[{key:"findMatchingOps",value:function(){for(var e=[],t=0;t<this.opPatterns.length;t++){var a=this.opPatterns[t];new RegExp(a.match,a.flags).test(this.inputStr)&&e.push(a)}return e}},{key:"detectLanguage",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.inputBuffer.length)return[{lang:"Unknown",score:Math.MAX_VALUE,probability:Math.MIN_VALUE}];var a=this._freqDist(),r=t?cn:un,n=[];for(var i in r){var o=e._chiSqr(a,r[i]),s=I()(o,2),l=s[0],u=s[1];n.push({lang:i,score:l,probability:u})}return n.sort(function(e,t){return e.score-t.score}),n}},{key:"detectFileType",value:function(){var e=oa(this.inputBuffer);return e.length?{ext:e[0].extension,mime:e[0].mime,desc:e[0].description}:null}},{key:"isUTF8",value:function(){for(var e=new Uint8Array(this.inputBuffer),t=0;t<e.length;)if(9===e[t]||10===e[t]||13===e[t]||32<=e[t]&&e[t]<=126)t+=1;else if(194<=e[t]&&e[t]<=223&&128<=e[t+1]&&e[t+1]<=191)t+=2;else if(224===e[t]&&160<=e[t+1]&&e[t+1]<=191&&128<=e[t+2]&&e[t+2]<=191||(225<=e[t]&&e[t]<=236||238===e[t]||239===e[t])&&128<=e[t+1]&&e[t+1]<=191&&128<=e[t+2]&&e[t+2]<=191||237===e[t]&&128<=e[t+1]&&e[t+1]<=159&&128<=e[t+2]&&e[t+2]<=191)t+=3;else{if(!(240===e[t]&&144<=e[t+1]&&e[t+1]<=191&&128<=e[t+2]&&e[t+2]<=191&&128<=e[t+3]&&e[t+3]<=191||241<=e[t]&&e[t]<=243&&128<=e[t+1]&&e[t+1]<=191&&128<=e[t+2]&&e[t+2]<=191&&128<=e[t+3]&&e[t+3]<=191||244===e[t]&&128<=e[t+1]&&e[t+1]<=143&&128<=e[t+2]&&e[t+2]<=191&&128<=e[t+3]&&e[t+3]<=191))return!1;t+=4}return!0}},{key:"calcEntropy",value:function(){for(var e,t=this._freqDist(),a=0,r=0;r<t.length;r++)0!==(e=t[r]/100)&&(a+=e*Math.log(e)/Math.log(2));return-a}},{key:"bruteForce",value:function(){var e=ut()(st.a.mark(function e(){var t,a,r,n,i,o,s,l=this;return st.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:for(t=new Uint8Array(this.inputBuffer).slice(0,100),a=[],r=function(e){a.push({data:t.map(function(t){return t^e}).buffer,conf:{op:"XOR",args:[{option:"Hex",string:e.toString(16)},"Standard",!1]}})},n=1;n<256;n++)r(n);for(i=function(e){a.push({data:t.map(function(t){return t>>e|(t&Math.pow(2,e)-1)<<8-e}).buffer,conf:{op:"Rotate right",args:[e,!1]}})},n=1;n<8;n++)i(n);return o=nn["Encode text"].args[0].value,s=function(){var e=ut()(st.a.mark(function e(r){var n,i,s;return st.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=0;case 1:if(!(n<o.length)){e.next=16;break}return i={op:r,args:[o[n]]},e.prev=3,e.next=6,l._runRecipe([i],t.buffer);case 6:pn(s=e.sent,t.buffer)||a.push({data:s,conf:i}),e.next=13;break;case 10:return e.prev=10,e.t0=e.catch(3),e.abrupt("continue",13);case 13:n++,e.next=1;break;case 16:case"end":return e.stop()}},e,null,[[3,10]])}));return function(t){return e.apply(this,arguments)}}(),e.next=10,s("Encode text");case 10:return e.next=12,s("Decode text");case 12:return e.abrupt("return",a);case 13:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:"speculativeExecution",value:function(){var t=ut()(st.a.mark(function t(){var a,r,n,i,o,s,l,u,c,p,d=this,h=arguments;return st.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(a=h.length>0&&void 0!==h[0]?h[0]:0,r=h.length>1&&void 0!==h[1]&&h[1],n=h.length>2&&void 0!==h[2]&&h[2],i=h.length>3&&void 0!==h[3]?h[3]:[],o=h.length>4&&void 0!==h[4]&&h[4],s=h.length>5&&void 0!==h[5]?h[5]:null,!(a<0)){t.next=8;break}return t.abrupt("return",[]);case 8:return l=this.findMatchingOps(),(u=[]).push({recipe:i,data:this.inputStr.slice(0,100),languageScores:this.detectLanguage(r),fileType:this.detectFileType(),isUTF8:this.isUTF8(),entropy:this.calcEntropy(),matchingOps:l,useful:o,matchesCrib:s&&s.test(this.inputStr)}),c=i[i.length-1],t.next=14,Promise.all(l.map(function(){var t=ut()(st.a.mark(function t(o){var l,p,h,f;return st.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return l={op:o.op,args:o.args},t.next=3,d._runRecipe([l]);case 3:if(p=t.sent,!c||o.op!==c.op||!pn(p,d.inputBuffer)){t.next=6;break}return t.abrupt("return");case 6:return h=new e(p,d.opPatterns),t.next=9,h.speculativeExecution(a-1,r,n,[].concat(Le()(i),[l]),o.useful,s);case 9:f=t.sent,u=u.concat(f);case 11:case"end":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}()));case 14:if(!n){t.next=20;break}return t.next=17,this.bruteForce();case 17:return p=t.sent,t.next=20,Promise.all(p.map(function(){var t=ut()(st.a.mark(function t(n){var o,l;return st.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return o=new e(n.data,d.opPatterns),t.next=3,o.speculativeExecution(a-1,r,!1,[].concat(Le()(i),[n.conf]),!1,s);case 3:l=t.sent,u=u.concat(l);case 5:case"end":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}()));case 20:return u=u.filter(function(e){return(e.useful||e.data.length>0)&&(e.languageScores[0].probability>0||e.fileType||e.isUTF8||e.matchingOps.length)}),t.abrupt("return",u.sort(function(e,t){var a=e.languageScores[0].score,r=t.languageScores[0].score;return e.fileType&&(a=500),t.fileType&&(r=500),e.isUTF8&&(a-=100),t.isUTF8&&(r-=100),e.useful&&(a=100),t.useful&&(r=100),a+=e.recipe.length,r+=t.recipe.length,a+=e.entropy,r+=t.entropy,!e.recipe.length&&e.matchingOps.length&&t.recipe.length?1:a-r}));case 22:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"_runRecipe",value:function(){var e=ut()(st.a.mark(function e(t){var a,r,n,i=arguments;return st.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return a=(a=i.length>1&&void 0!==i[1]?i[1]:this.inputBuffer)instanceof ArrayBuffer?a:a.buffer,(r=new ct.a).set(a,ct.a.ARRAY_BUFFER),"function"==typeof importScripts&&self.loadRequiredModules(t),n=new ka.a(t),e.prev=6,e.next=9,n.execute(r);case 9:return e.abrupt("return",r.get(ct.a.ARRAY_BUFFER));case 12:return e.prev=12,e.t0=e.catch(6),e.abrupt("return",new ArrayBuffer);case 15:case"end":return e.stop()}},e,this,[[6,12]])}));return function(t){return e.apply(this,arguments)}}()},{key:"_freqDist",value:function(){if(this.freqDist)return this.freqDist;var e=this.inputBuffer.length,t=e,a=new Array(256).fill(0);if(!e)return this.freqDist=a,this.freqDist;for(;t--;)a[this.inputBuffer[t]]++;return this.freqDist=a.map(function(t){return t/e*100}),this.freqDist}}],[{key:"_generateOpPatterns",value:function(){var e=[],t=function(t){if(!nn[t].hasOwnProperty("patterns"))return"continue";nn[t].patterns.forEach(function(a){e.push({op:t,match:a.match,flags:a.flags,args:a.args,useful:a.useful||!1})})};for(var a in nn)t(a);return e}},{key:"_chiSqr",value:function(e,t){for(var a,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=0,i=0;i<e.length;i++)n+=(a=e[i]-t[i])*a/t[i];return[n,1-sn.a.cdf(n,e.length-1-r)]}},{key:"codeToLanguage",value:function(e){return{aa:"Afar",ab:"Abkhazian",ace:"Acehnese",ady:"Adyghe",af:"Afrikaans",ak:"Akan",als:"Alemannic",am:"Amharic",an:"Aragonese",ang:"Anglo-Saxon",ar:"Arabic",arc:"Aramaic",arz:"Egyptian Arabic",as:"Assamese",ast:"Asturian",atj:"Atikamekw",av:"Avar",ay:"Aymara",az:"Azerbaijani",azb:"South Azerbaijani",ba:"Bashkir",bar:"Bavarian","bat-smg":"Samogitian",bcl:"Central_Bicolano",be:"Belarusian","be-tarask":"Belarusian (Taraškievica)",bg:"Bulgarian",bh:"Bihari",bi:"Bislama",bjn:"Banjar",bm:"Bambara",bn:"Bengali",bo:"Tibetan",bpy:"Bishnupriya Manipuri",br:"Breton",bs:"Bosnian",bug:"Buginese",bxr:"Buryat (Russia)",ca:"Catalan","cbk-zam":"Zamboanga Chavacano",cdo:"Min Dong",ce:"Chechen",ceb:"Cebuano",ch:"Chamorro",cho:"Choctaw",chr:"Cherokee",chy:"Cheyenne",ckb:"Sorani",co:"Corsican",cr:"Cree",crh:"Crimean Tatar",cs:"Czech",csb:"Kashubian",cu:"Old Church Slavonic",cv:"Chuvash",cy:"Welsh",da:"Danish",de:"German",din:"Dinka",diq:"Zazaki",dsb:"Lower Sorbian",dty:"Doteli",dv:"Divehi",dz:"Dzongkha",ee:"Ewe",el:"Greek",eml:"Emilian-Romagnol",en:"English",eo:"Esperanto",es:"Spanish",et:"Estonian",eu:"Basque",ext:"Extremaduran",fa:"Persian",ff:"Fula",fi:"Finnish","fiu-vro":"Võro",fj:"Fijian",fo:"Faroese",fr:"French",frp:"Franco-Provençal/Arpitan",frr:"North Frisian",fur:"Friulian",fy:"West Frisian",ga:"Irish",gag:"Gagauz",gan:"Gan",gd:"Scottish Gaelic",gl:"Galician",glk:"Gilaki",gn:"Guarani",gom:"Goan Konkani",got:"Gothic",gu:"Gujarati",gv:"Manx",ha:"Hausa",hak:"Hakka",haw:"Hawaiian",he:"Hebrew",hi:"Hindi",hif:"Fiji Hindi",ho:"Hiri Motu",hr:"Croatian",hsb:"Upper Sorbian",ht:"Haitian",hu:"Hungarian",hy:"Armenian",hz:"Herero",ia:"Interlingua",id:"Indonesian",ie:"Interlingue",ig:"Igbo",ii:"Sichuan Yi",ik:"Inupiak",ilo:"Ilokano",io:"Ido",is:"Icelandic",it:"Italian",iu:"Inuktitut",ja:"Japanese",jam:"Jamaican",jbo:"Lojban",jv:"Javanese",ka:"Georgian",kaa:"Karakalpak",kab:"Kabyle",kbd:"Kabardian Circassian",kbp:"Kabiye",kg:"Kongo",ki:"Kikuyu",kj:"Kuanyama",kk:"Kazakh",kl:"Greenlandic",km:"Khmer",kn:"Kannada",ko:"Korean",koi:"Komi-Permyak",kr:"Kanuri",krc:"Karachay-Balkar",ks:"Kashmiri",ksh:"Ripuarian",ku:"Kurdish",kv:"Komi",kw:"Cornish",ky:"Kirghiz",la:"Latin",lad:"Ladino",lb:"Luxembourgish",lbe:"Lak",lez:"Lezgian",lg:"Luganda",li:"Limburgish",lij:"Ligurian",lmo:"Lombard",ln:"Lingala",lo:"Lao",lrc:"Northern Luri",lt:"Lithuanian",ltg:"Latgalian",lv:"Latvian",mai:"Maithili","map-bms":"Banyumasan",mdf:"Moksha",mg:"Malagasy",mh:"Marshallese",mhr:"Meadow Mari",mi:"Maori",min:"Minangkabau",mk:"Macedonian",ml:"Malayalam",mn:"Mongolian",mo:"Moldovan",mr:"Marathi",mrj:"Hill Mari",ms:"Malay",mt:"Maltese",mus:"Muscogee",mwl:"Mirandese",my:"Burmese",myv:"Erzya",mzn:"Mazandarani",na:"Nauruan",nah:"Nahuatl",nap:"Neapolitan",nds:"Low Saxon","nds-nl":"Dutch Low Saxon",ne:"Nepali",new:"Newar / Nepal Bhasa",ng:"Ndonga",nl:"Dutch",nn:"Norwegian (Nynorsk)",no:"Norwegian (Bokmål)",nov:"Novial",nrm:"Norman",nso:"Northern Sotho",nv:"Navajo",ny:"Chichewa",oc:"Occitan",olo:"Livvi-Karelian",om:"Oromo",or:"Oriya",os:"Ossetian",pa:"Punjabi",pag:"Pangasinan",pam:"Kapampangan",pap:"Papiamentu",pcd:"Picard",pdc:"Pennsylvania German",pfl:"Palatinate German",pi:"Pali",pih:"Norfolk",pl:"Polish",pms:"Piedmontese",pnb:"Western Panjabi",pnt:"Pontic",ps:"Pashto",pt:"Portuguese",qu:"Quechua",rm:"Romansh",rmy:"Romani",rn:"Kirundi",ro:"Romanian","roa-rup":"Aromanian","roa-tara":"Tarantino",ru:"Russian",rue:"Rusyn",rw:"Kinyarwanda",sa:"Sanskrit",sah:"Sakha",sc:"Sardinian",scn:"Sicilian",sco:"Scots",sd:"Sindhi",se:"Northern Sami",sg:"Sango",sh:"Serbo-Croatian",si:"Sinhalese",simple:"Simple English",sk:"Slovak",sl:"Slovenian",sm:"Samoan",sn:"Shona",so:"Somali",sq:"Albanian",sr:"Serbian",srn:"Sranan",ss:"Swati",st:"Sesotho",stq:"Saterland Frisian",su:"Sundanese",sv:"Swedish",sw:"Swahili",szl:"Silesian",ta:"Tamil",tcy:"Tulu",te:"Telugu",tet:"Tetum",tg:"Tajik",th:"Thai",ti:"Tigrinya",tk:"Turkmen",tl:"Tagalog",tn:"Tswana",to:"Tongan",tpi:"Tok Pisin",tr:"Turkish",ts:"Tsonga",tt:"Tatar",tum:"Tumbuka",tw:"Twi",ty:"Tahitian",tyv:"Tuvan",udm:"Udmurt",ug:"Uyghur",uk:"Ukrainian",ur:"Urdu",uz:"Uzbek",ve:"Venda",vec:"Venetian",vep:"Vepsian",vi:"Vietnamese",vls:"West Flemish",vo:"Volapük",wa:"Walloon",war:"Waray-Waray",wo:"Wolof",wuu:"Wu",xal:"Kalmyk",xh:"Xhosa",xmf:"Mingrelian",yi:"Yiddish",yo:"Yoruba",za:"Zhuang",zea:"Zeelandic",zh:"Chinese","zh-classical":"Classical Chinese","zh-min-nan":"Min Nan","zh-yue":"Cantonese",zu:"Zulu"}[e]}}]),e}(),un={en:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.755,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.843,.004,.375,.002,.008,.019,.008,.134,.137,.137,.001,.001,.972,.19,.857,.017,.334,.421,.246,.108,.104,.112,.103,.1,.127,.237,.04,.027,.004,.003,.004,.002,1e-4,.338,.218,.326,.163,.121,.149,.133,.192,.232,.107,.082,.148,.248,.134,.103,.195,.012,.162,.368,.366,.077,.061,.127,.009,.03,.015,.004,1e-4,.004,1e-4,.003,1e-4,6.614,1.039,2.327,2.934,9.162,1.606,1.415,3.503,5.718,.081,.461,3.153,1.793,5.723,5.565,1.415,.066,5.036,4.79,6.284,1.992,.759,1.176,.139,1.162,.102,1e-4,.002,1e-4,1e-4,1e-4,.06,.004,.003,.002,.001,.001,.001,.002,.001,.001,1e-4,.001,.001,.003,1e-4,1e-4,.001,.001,.001,.031,.006,.001,.001,.001,.002,.014,.001,.001,.005,.005,.001,.002,.017,.007,.002,.003,.004,.002,.001,.002,.002,.012,.001,.002,.001,.004,.001,.001,.003,.003,.002,.005,.001,.001,.003,.001,.003,.001,.002,.001,.004,.001,.002,.001,1e-4,1e-4,.02,.047,.009,.009,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.061,.001,1e-4,.002,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ru:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.512,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.274,.002,.063,1e-4,.001,.009,.001,.001,.118,.118,1e-4,.001,.595,.135,.534,.009,.18,.281,.15,.078,.076,.077,.068,.066,.083,.16,.036,.016,.002,.001,.002,.001,1e-4,.013,.009,.014,.009,.007,.006,.007,.006,.031,.002,.003,.007,.012,.007,.005,.01,.001,.008,.017,.011,.003,.009,.005,.012,.001,.001,.001,1e-4,.001,1e-4,.003,1e-4,.065,.009,.022,.021,.074,.01,.013,.019,.054,.001,.008,.036,.02,.047,.055,.013,.001,.052,.037,.041,.026,.007,.006,.003,.011,.003,1e-4,1e-4,1e-4,1e-4,1e-4,2.469,2.363,2.342,.986,.156,.422,.252,.495,.217,.136,.014,.778,.56,.097,.251,.811,.09,.184,.165,.06,.179,.021,.013,.029,.05,.005,.116,.045,.087,.073,.067,.124,.211,.16,.055,.033,.036,.024,.013,.02,.022,.002,1e-4,.1,1e-4,.025,.009,.011,3.536,.619,1.963,.833,1.275,3.452,.323,.635,3.408,.642,1.486,1.967,1.26,2.857,4.587,1.082,1e-4,1e-4,.339,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.013,1e-4,.002,.001,31.356,12.318,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.131,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],de:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.726,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.303,.002,.278,1e-4,1e-4,.007,.003,.005,.149,.149,.015,.001,.636,.237,.922,.023,.305,.472,.225,.115,.11,.121,.108,.11,.145,.271,.049,.022,.002,.002,.002,.001,1e-4,.413,.383,.144,.412,.275,.258,.273,.218,.18,.167,.277,.201,.328,.179,.111,.254,.012,.219,.602,.209,.1,.185,.206,.005,.01,.112,.002,1e-4,.002,1e-4,.006,1e-4,4.417,1.306,1.99,3.615,12.382,1.106,2,2.958,6.179,.082,.866,2.842,1.869,7.338,2.27,.606,.016,6.056,4.424,4.731,3.002,.609,.918,.053,.169,.824,1e-4,1e-4,1e-4,1e-4,1e-4,.147,.002,.003,.001,.006,.001,.001,.002,.001,.001,1e-4,1e-4,.001,.004,1e-4,1e-4,1e-4,1e-4,.001,.03,1e-4,1e-4,.009,.001,.002,.009,.002,.001,.061,1e-4,.048,.122,.057,.009,.001,.001,.4,.001,.002,.003,.003,.017,.001,.003,.001,.005,1e-4,.001,.003,.002,.003,.005,.001,.001,.203,1e-4,.002,.001,.002,.002,.438,.002,.002,.001,1e-4,1e-4,.056,1.237,.01,.013,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.003,.001,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.148,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ja:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.834,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.258,.007,.036,.001,1e-4,.005,.002,.003,.033,.033,1e-4,.002,.019,.052,.026,.009,.281,.407,.259,.126,.108,.109,.095,.092,.104,.184,.008,.001,.002,.002,.002,.001,1e-4,.048,.026,.039,.027,.028,.022,.018,.016,.03,.012,.014,.02,.03,.025,.025,.026,.002,.026,.045,.031,.013,.014,.014,.006,.006,.003,.001,1e-4,.001,1e-4,.002,1e-4,.077,.012,.03,.026,.088,.012,.017,.025,.067,.002,.016,.041,.039,.059,.066,.016,.001,.06,.043,.051,.028,.009,.007,.004,.015,.004,1e-4,.011,1e-4,1e-4,1e-4,2.555,10.322,5.875,4.462,.784,.468,.442,.409,1.173,.96,.657,1.448,1.442,.636,.341,.685,.495,.342,.651,.536,.435,.657,.51,.978,.31,.563,.439,.514,.668,.438,.29,1.039,.423,.532,.407,.691,.677,.555,.911,.887,1.086,.531,.836,1.345,.438,.666,1.528,.959,.535,.379,.302,.822,.614,.308,.253,.467,.807,.807,.777,.809,1.292,.546,.524,.425,1e-4,1e-4,.002,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.015,19.387,1.167,4.022,2.518,1.734,1.339,1.229,1e-4,1e-4,1e-4,1e-4,1e-4,.409,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],es:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.757,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.771,.003,.315,.001,.004,.019,.003,.014,.132,.133,.001,.001,.976,.078,.703,.014,.268,.331,.197,.095,.086,.095,.085,.084,.105,.183,.053,.027,.001,.002,.002,.002,1e-4,.242,.129,.28,.129,.322,.105,.099,.077,.116,.074,.034,.209,.196,.086,.059,.187,.009,.118,.247,.128,.061,.072,.033,.023,.018,.013,.005,1e-4,.005,1e-4,.003,1e-4,8.9,.939,3.234,4.015,9.642,.603,.891,.531,5.007,.262,.107,4.355,1.915,5.487,6.224,1.805,.423,4.992,5.086,3.402,2.878,.667,.044,.125,.673,.299,1e-4,.001,1e-4,1e-4,1e-4,.033,.009,.002,.002,.001,.001,.001,.001,.001,.003,1e-4,.001,.001,.003,1e-4,1e-4,.001,.001,.001,.006,.006,.001,1e-4,.001,.001,.003,.001,.001,.008,.008,.001,.001,.025,.274,.002,.002,.002,.001,.001,.002,.002,.221,.003,.019,.001,.373,.001,.001,.005,.144,.01,.631,.002,.001,.002,.001,.002,.001,.102,.018,.006,.002,.002,.002,1e-4,1e-4,.079,1.766,.003,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.008,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.032,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.894,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.162,.003,.276,1e-4,1e-4,.012,.002,.638,.153,.153,.001,.002,.96,.247,.715,.011,.225,.339,.18,.084,.081,.086,.081,.084,.106,.194,.063,.018,.003,.002,.003,.002,1e-4,.208,.141,.255,.128,.144,.1,.095,.071,.154,.072,.042,.331,.173,.077,.056,.167,.013,.108,.214,.102,.049,.062,.035,.009,.014,.011,.003,1e-4,.003,1e-4,.004,1e-4,5.761,.627,2.287,3.136,10.738,.723,.838,.669,5.295,.172,.12,4.204,1.941,5.522,4.015,2.005,.584,5.043,5.545,5.13,4.06,.906,.051,.295,.278,.085,1e-4,.001,1e-4,1e-4,1e-4,.136,.003,.004,.002,.001,.001,.001,.002,.001,.034,1e-4,1e-4,.001,.004,.001,1e-4,.001,.001,.001,.019,.003,1e-4,1e-4,.001,.001,.112,.001,.002,.001,.001,1e-4,.001,.367,.007,.034,.001,.003,.001,.003,.046,.303,1.817,.082,.045,.001,.004,.029,.017,.004,.002,.002,.005,.038,.001,.003,1e-4,.002,.02,.002,.054,.004,.001,.001,.001,1e-4,1e-4,.113,2.813,.007,.026,1e-4,1e-4,.001,.001,1e-4,.001,1e-4,1e-4,.003,.001,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.122,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pt:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.934,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.319,.004,.372,.001,.002,.012,.004,.016,.15,.15,.001,.002,1.16,.21,.746,.022,.296,.361,.226,.106,.098,.105,.096,.094,.114,.207,.054,.022,.006,.004,.006,.002,1e-4,.345,.166,.295,.143,.233,.136,.112,.077,.129,.093,.039,.119,.217,.135,.164,.222,.016,.14,.259,.142,.064,.078,.041,.021,.013,.012,.007,1e-4,.007,1e-4,.007,1e-4,9.026,.717,2.572,4.173,8.551,.751,.906,.629,5.107,.172,.12,2.357,3.189,4.024,7.683,1.87,.445,5.017,5.188,3.559,2.852,.875,.055,.186,.122,.257,1e-4,.002,1e-4,1e-4,1e-4,.034,.01,.003,.003,.001,.001,.001,.001,.001,.014,.001,.001,.001,.005,.001,1e-4,.001,.001,.001,.009,.006,1e-4,1e-4,.001,.001,.003,.001,.001,.007,.007,1e-4,.001,.079,.267,.045,.508,.002,.001,.001,.424,.003,.417,.113,.003,.001,.255,.001,.001,.005,.003,.015,.161,.032,.087,.003,.001,.002,.001,.095,.002,.005,.001,.001,.001,1e-4,1e-4,.067,2.471,.004,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.007,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.033,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],it:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.828,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.918,.002,.385,1e-4,.001,.007,.003,.383,.13,.131,1e-4,.001,.948,.103,.657,.014,.252,.332,.195,.093,.089,.095,.088,.084,.098,.183,.061,.035,.006,.002,.006,.001,1e-4,.215,.131,.235,.125,.08,.104,.125,.057,.24,.04,.038,.208,.179,.133,.054,.164,.025,.114,.256,.12,.052,.079,.038,.021,.012,.012,.002,1e-4,.002,1e-4,.005,1e-4,8.583,.65,3.106,3.081,8.81,.801,1.321,.694,8.492,.02,.115,5.238,1.88,5.659,6.812,1.981,.236,4.962,3.674,5.112,2.35,1.107,.055,.027,.118,.709,1e-4,.001,1e-4,1e-4,1e-4,.022,.004,.002,.002,.001,.001,.001,.002,.013,.001,1e-4,1e-4,.001,.004,1e-4,1e-4,.001,.001,1e-4,.006,.001,1e-4,.001,.001,.001,.005,1e-4,.001,.005,.005,1e-4,.001,.153,.007,.001,.001,.003,.001,.001,.002,.174,.033,.004,.009,.036,.004,.001,.001,.006,.003,.097,.004,.001,.001,.003,.001,.002,.056,.009,.007,.004,.002,.002,.002,1e-4,1e-4,.043,.574,.01,.009,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.005,.002,.007,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.021,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],zh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.074,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.273,.003,.045,1e-4,.001,.012,.001,.004,.032,.032,.001,.003,.032,.068,.063,.017,.386,.478,.308,.149,.134,.146,.127,.121,.136,.231,.018,.009,.007,.006,.007,1e-4,1e-4,.045,.029,.041,.028,.022,.017,.02,.019,.025,.01,.013,.02,.033,.021,.018,.028,.002,.022,.045,.031,.01,.013,.012,.007,.005,.003,.004,1e-4,.004,1e-4,.009,1e-4,.159,.026,.051,.047,.17,.025,.032,.057,.124,.003,.021,.089,.049,.12,.129,.028,.002,.124,.083,.1,.058,.016,.016,.008,.03,.012,.006,.004,.006,.001,1e-4,2.707,1.09,1.398,.705,1.23,1.04,.715,.952,1.455,1.297,.845,1.19,2.403,1.193,.813,1.077,.889,.565,.387,.47,.931,.663,1.035,.837,.77,.772,1.434,1.023,1.668,.609,.437,.793,.535,.706,.48,.538,.785,.909,.7,.697,1.017,.519,.441,.567,.626,1.082,.814,1.054,1.074,.811,.556,.684,.903,.43,.642,.78,2.083,1.147,2.006,1.331,2.547,1.015,.911,.807,1e-4,1e-4,.069,.007,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.126,1.369,3.539,8.968,5.44,4.358,3.141,2.48,1e-4,.001,.001,1e-4,1e-4,1.821,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.841,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.03,.001,.048,1e-4,1e-4,.001,.001,.001,.117,.117,.001,.001,.009,.038,.486,.012,.007,.009,.007,.005,.003,.004,.003,.003,.003,.004,.048,.001,.001,.003,.001,.001,1e-4,.011,.006,.011,.006,.005,.005,.004,.005,.007,.002,.002,.005,.008,.005,.005,.008,.001,.005,.011,.008,.002,.003,.004,.001,.001,.001,.002,1e-4,.002,1e-4,.007,1e-4,.058,.008,.02,.02,.06,.011,.012,.017,.051,.001,.009,.031,.018,.042,.047,.015,.001,.043,.03,.037,.022,.005,.008,.003,.009,.003,1e-4,.001,1e-4,1e-4,1e-4,.678,.557,.438,.001,1.227,2.118,3.004,2.445,2.539,1e-4,.003,.021,5.067,.002,.007,.006,.015,.005,.002,.008,.07,1e-4,1e-4,1e-4,.053,.001,1e-4,.018,1e-4,.001,1e-4,.002,.002,.006,.337,.015,.006,.001,.059,6.029,1.704,1.216,2.096,.113,.433,.309,.439,3.398,.192,3.798,.977,1.716,1.137,.259,.129,.264,.12,.588,.085,.033,.001,1e-4,.327,1e-4,1e-4,1e-4,.068,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.002,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,23.012,12.666,1.946,5.01,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.676,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.97,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.695,.002,.242,1e-4,1e-4,.007,.002,.011,.194,.194,1e-4,.001,.805,.129,1.016,.02,.347,.542,.289,.14,.138,.144,.123,.13,.153,.343,.068,.014,.002,.001,.002,.001,1e-4,.17,.165,.143,.124,.066,.081,.113,.075,.141,.107,.18,.108,.192,.142,.119,.322,.004,.139,.268,.117,.058,.041,.322,.032,.008,.109,.001,1e-4,.001,1e-4,.006,1e-4,6.697,.859,2.856,2.291,5.604,.259,1.117,.918,6.017,1.562,2.537,1.759,1.903,4.231,5.86,1.841,.006,3.854,3.145,2.863,1.965,.061,3.408,.016,2.669,3.631,1e-4,.001,1e-4,1e-4,1e-4,.208,.018,1.343,.004,.168,.653,.002,.145,.003,.001,.001,.001,.002,.004,.001,.002,.002,.001,.003,.126,.002,.001,.002,.002,.001,.65,.023,.378,.002,.035,.035,.002,.018,.011,.001,.002,.005,.001,.001,.002,.003,.012,.001,.002,.001,.005,.001,.001,.01,.004,.011,.641,.003,.006,.005,.001,.008,.004,.056,.014,.433,.007,.008,.002,1e-4,1e-4,.025,.694,1.442,2.413,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.006,.003,.06,.02,1e-4,1e-4,1e-4,.001,1e-4,.003,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.205,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.91,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.447,.013,.297,1e-4,.001,.013,.003,.465,.123,.123,.001,.002,.653,.111,.957,.015,.312,.387,.238,.107,.101,.108,.097,.095,.109,.217,.04,.028,.007,.019,.007,.002,1e-4,.336,.309,.117,.167,.132,.105,.13,.135,.063,.042,.261,.085,.236,.083,.095,.131,.004,.092,.247,.219,.038,.052,.037,.008,.095,.019,.007,1e-4,.007,1e-4,.005,.001,8.533,1.3,.65,3.067,6.656,.419,.804,.718,6.178,.059,2.986,5.127,2.286,5.537,2.04,.623,.006,5.247,2.411,2.743,2.225,.903,.049,.018,2.076,.792,1e-4,.018,1e-4,1e-4,1e-4,.096,.004,.004,.004,.002,.002,.002,.041,.002,.001,.001,.001,.002,.003,.001,.001,.001,.001,.001,.007,.002,.001,.031,.001,.003,.065,.001,.001,.033,.009,.047,1.71,.04,.005,.027,.002,.003,.001,.001,.647,.002,.008,.002,.003,.001,.004,.019,.002,.132,3.435,.005,.004,.003,.003,.525,.001,.004,.002,.003,.007,1.206,.003,.003,.002,1e-4,1e-4,.046,2.539,4.197,1.125,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.007,.003,.023,.009,1e-4,1e-4,1e-4,.001,1e-4,.002,.01,.007,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,.003,.094,.001,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.158,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.747,.002,.267,1e-4,.001,.008,.01,.052,.196,.196,1e-4,.001,.504,.205,.944,.013,.311,.428,.229,.104,.101,.109,.102,.102,.137,.252,.048,.012,.002,.001,.002,.001,1e-4,.205,.192,.181,.371,.131,.088,.11,.236,.167,.069,.091,.119,.172,.137,.117,.141,.005,.112,.229,.137,.034,.123,.084,.006,.011,.064,.001,1e-4,.001,1e-4,.002,1e-4,6.042,1.063,1.294,4.124,13.689,.579,2.105,1.822,5.542,.948,1.42,3.124,1.72,7.129,4.759,1.349,.015,5.115,3.623,4.903,1.642,1.84,1.06,.063,.226,.656,1e-4,.001,1e-4,1e-4,1e-4,.023,.003,.004,.003,.002,.001,.001,.002,.001,.002,1e-4,.001,.001,.002,.001,.001,.001,.001,.001,.008,.001,1e-4,.001,.001,.002,.007,.001,.001,.003,.003,.001,.002,.008,.009,.003,.002,.005,.002,.001,.003,.009,.038,.001,.051,.001,.005,.001,.011,.004,.003,.013,.008,.002,.002,.008,.001,.004,.001,.003,.002,.01,.003,.003,.001,1e-4,1e-4,.02,.166,.007,.01,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.016,.005,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.022,.001,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ko:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.893,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.919,.003,.069,1e-4,1e-4,.007,.002,.048,.269,.269,1e-4,.002,.501,.04,.699,.01,.29,.417,.259,.125,.109,.112,.1,.094,.109,.192,.015,.002,.006,.002,.006,.003,1e-4,.038,.026,.038,.022,.02,.024,.015,.013,.023,.008,.015,.017,.027,.016,.016,.023,.002,.017,.041,.027,.011,.013,.01,.005,.004,.002,.006,1e-4,.006,1e-4,.012,1e-4,.108,.014,.037,.031,.116,.024,.022,.032,.084,.002,.021,.064,.06,.077,.092,.02,.001,.086,.056,.066,.046,.011,.008,.004,.019,.004,1e-4,.002,1e-4,.025,1e-4,2.21,.565,.766,.471,3.043,.671,.334,.049,1.404,.218,1.17,1.657,1.23,.278,.091,.557,1.645,.451,.058,.386,1.38,2.193,.506,1.29,2.708,.68,.385,.399,2.758,3.352,.954,.141,1.848,.829,.071,.249,1.741,.637,.43,.888,.537,.506,.243,.027,1.4,.355,.026,.179,2.38,.404,.739,1.021,2.205,.729,.454,.308,1.635,.561,.035,.084,1.612,.309,.024,.047,1e-4,1e-4,.034,.005,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.006,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.039,.089,.025,.107,.071,.044,.037,.043,3.199,8.716,12.558,3.298,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cs:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.804,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.066,.002,.232,1e-4,1e-4,.008,.002,.009,.188,.188,.007,.002,.814,.094,1.008,.025,.299,.437,.233,.115,.111,.119,.106,.102,.129,.233,.051,.011,.002,.002,.002,.002,1e-4,.143,.145,.103,.117,.06,.072,.055,.092,.08,.13,.142,.093,.169,.137,.088,.246,.003,.104,.236,.127,.039,.213,.033,.007,.007,.069,.002,1e-4,.002,1e-4,.005,1e-4,5.018,1.137,1.8,2.299,5.465,.243,.288,1.623,3.2,1.177,2.624,3.218,2.048,4.447,5.813,1.952,.006,3.062,3.218,3.502,2.227,3.008,.043,.058,1.313,1.405,1e-4,1e-4,1e-4,1e-4,1e-4,.104,.003,.004,.003,.001,.001,.001,.003,.041,.001,.001,.001,.049,.57,.001,.012,.001,.001,.002,.048,.002,.001,.001,.002,.011,.748,.01,.981,.025,.001,.025,.002,.191,1.9,.003,.001,.005,.024,.002,.002,.002,.87,.001,.001,.001,1.984,.001,.336,.006,.002,.004,.031,.002,.003,.006,.001,.003,.001,.094,.002,.007,.671,.58,.001,1e-4,1e-4,.173,5.104,1.615,2.233,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.021,.008,1e-4,1e-4,1e-4,1e-4,.001,.009,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.103,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ar:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.65,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.194,.002,.102,1e-4,1e-4,.007,.001,.002,.109,.108,.002,.001,.03,.046,.42,.018,.182,.202,.135,.063,.065,.061,.055,.053,.062,.113,.054,.001,.002,.003,.002,1e-4,1e-4,.01,.006,.009,.007,.005,.004,.004,.004,.005,.002,.002,.005,.007,.005,.004,.007,.001,.005,.009,.006,.002,.002,.002,.001,.001,.001,.007,.001,.007,1e-4,.004,1e-4,.052,.008,.019,.018,.055,.008,.011,.016,.045,.001,.006,.028,.016,.037,.04,.012,.001,.038,.03,.035,.02,.006,.006,.002,.009,.002,1e-4,.001,1e-4,1e-4,1e-4,.055,1.131,.874,.939,4.804,2.787,2.235,1.018,2.407,.349,3.542,.092,.4,.007,.051,.053,.022,.061,.01,.008,.001,.001,1e-4,.001,.001,.001,1e-4,.008,.001,.001,1e-4,.002,.013,.133,.049,.782,.037,.335,.157,6.208,1.599,1.486,1.889,.276,.607,.762,.341,1.38,.239,2.041,.293,1.149,.411,.383,.246,.406,.094,1.401,.223,.006,.001,.001,.001,.001,1e-4,1e-4,.027,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,23.298,20.414,.003,.004,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.019,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],vi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.205,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.546,.002,.241,1e-4,.001,.015,.013,.009,.13,.13,1e-4,.002,.714,.089,.813,.02,.259,.361,.203,.104,.097,.104,.089,.089,.116,.194,.047,.017,.002,.002,.002,.002,1e-4,.148,.175,.293,.111,.056,.04,.092,.206,.057,.03,.119,.232,.178,.247,.036,.156,.056,.062,.184,.397,.022,.114,.033,.033,.019,.009,.005,1e-4,.005,1e-4,.003,1e-4,2.683,.66,3.149,.627,1.148,.076,2.542,4.362,3.528,.019,.59,1.486,1.611,5.924,2.001,.761,.201,1.559,1.014,3.555,1.77,.861,.05,.173,.826,.047,1e-4,.002,1e-4,1e-4,1e-4,.021,.214,.011,.478,.002,.039,.001,.324,.002,.072,.001,.198,.002,.32,.002,.048,.141,1.485,.001,.116,.015,.106,.001,.025,.002,.579,.004,.289,.004,.257,.005,.174,1.516,1.221,.326,.818,.013,.337,.005,.51,.014,.324,.408,.115,.147,.492,.002,.218,.82,.26,.102,.383,.379,.016,.006,.094,.005,.132,2.233,4.628,.009,.062,.003,.385,1e-4,1e-4,.047,4.542,1.653,.065,.997,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.011,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,6.74,.019,.004,.002,.009,.006,.004,.003,.003,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],el:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.389,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.245,.003,.167,.001,1e-4,.005,.002,.015,.1,.101,1e-4,.001,.487,.058,.449,.01,.151,.215,.114,.058,.055,.058,.052,.051,.065,.119,.032,.001,.003,.003,.003,1e-4,1e-4,.021,.016,.024,.014,.012,.012,.011,.013,.012,.005,.006,.013,.018,.01,.009,.015,.001,.013,.025,.017,.005,.006,.008,.002,.002,.001,.005,1e-4,.005,1e-4,.002,1e-4,.125,.018,.039,.039,.142,.017,.026,.036,.105,.002,.017,.072,.036,.093,.102,.022,.002,.099,.07,.077,.046,.014,.01,.005,.02,.005,1e-4,.002,1e-4,1e-4,1e-4,1.502,1.948,1.522,1.805,3.613,1.458,.354,.481,.073,.584,.024,.002,.912,.435,.305,.001,.006,.156,.057,.068,.049,.097,.01,.064,.017,.048,.112,.037,.115,.048,.003,.099,.122,.029,.001,.129,.119,.011,.03,.034,.002,.008,1e-4,.022,.85,.749,.601,1.063,.004,3.95,.27,.716,.649,2.656,.14,1.63,.422,2.831,1.733,1.214,1.337,2.636,.149,3.615,1e-4,1e-4,.06,.007,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,28.675,14.922,.013,.004,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.013,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.282,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.667,.001,.345,1e-4,1e-4,.007,.002,.013,.083,.083,1e-4,1e-4,.902,.146,1.182,.007,.152,.25,.108,.06,.06,.065,.065,.066,.089,.153,.044,.004,.001,.001,.001,.001,1e-4,.178,.164,.421,.354,.095,.078,.149,.127,.181,.06,.161,.209,.174,.099,.072,.149,.019,.12,.249,.206,.034,.058,.04,.006,.012,.014,1e-4,1e-4,1e-4,1e-4,.001,1e-4,6.63,.945,.963,3.448,8.696,.922,2.03,1.373,4.448,.429,1.949,3.417,3.024,6.448,3.193,1.076,.019,6.923,3.891,5.562,1.877,1.653,.074,.114,.424,.075,1e-4,1e-4,1e-4,1e-4,1e-4,.022,.039,.002,.003,.007,.074,.004,.007,.005,.002,.002,1e-4,.003,.008,.002,.004,.001,.002,1e-4,.011,.001,.001,.012,.001,.005,.002,.001,.001,.001,.004,.001,.003,.21,.017,.005,.004,1.574,.853,.002,.007,.008,.038,.004,.047,.001,.014,.002,.009,.187,.01,.004,.012,.004,.002,.808,.001,.008,.002,.004,.002,.006,.002,.003,.001,1e-4,1e-4,.393,3.436,.069,.044,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,.001,.014,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.021,.021,.004,.002,1e-4,1e-4,1e-4,1e-4,.001,.006,.019,1e-4,.001,.002,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.827,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.714,.004,.265,1e-4,1e-4,.007,.001,.007,.159,.159,.001,.002,1.016,.461,.937,.013,.261,.429,.206,.109,.106,.113,.103,.105,.137,.238,.073,.019,.004,.004,.004,.002,1e-4,.469,.135,.097,.073,.142,.093,.075,.087,.095,.062,.133,.086,.175,.085,.042,.096,.003,.071,.186,.107,.027,.069,.028,.009,.008,.025,.002,1e-4,.002,1e-4,.004,1e-4,6.316,1.591,.619,1.364,7.125,.648,2.159,.946,3.15,.796,3.265,4.526,2.054,3.978,3.047,.846,.006,3.327,4.35,5.787,.902,1.395,.037,.035,1.463,2.94,1e-4,.001,1e-4,1e-4,1e-4,.129,.02,.003,.003,.001,.001,.001,.003,.002,.014,.001,.001,.001,.006,1e-4,.001,.004,.667,.001,.068,.001,1e-4,.005,.001,.001,.009,.007,.002,.003,.026,.026,.002,.024,2.603,.002,.001,.003,.001,.002,.002,.003,2.374,.001,.002,.001,.448,.001,.001,.005,.169,.003,.702,.002,.002,.76,.001,.004,.002,.223,.002,.382,.004,.004,.001,1e-4,1e-4,.028,7.544,.01,.845,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.021,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.128,.001,1e-4,.001,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ro:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.044,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.178,.003,.287,.001,.001,.038,.002,.011,.2,.201,.001,.002,1.114,.333,.783,.015,.314,.397,.224,.108,.105,.107,.098,.099,.123,.221,.062,.021,.007,.006,.007,.002,1e-4,.27,.164,.289,.16,.109,.099,.098,.077,.163,.044,.047,.132,.205,.095,.07,.207,.004,.158,.242,.12,.072,.085,.033,.021,.01,.019,.006,1e-4,.006,1e-4,.007,1e-4,7.568,.638,3.253,2.492,8.352,.862,.693,.377,7.77,.16,.142,3.906,1.919,5.009,3.799,1.948,.008,5.326,2.857,4.711,4.259,.743,.045,.139,.103,.506,1e-4,.007,1e-4,1e-4,1e-4,.128,.004,.004,1.675,.002,.001,.001,.002,.001,.002,.001,.001,.001,.003,.104,.001,.001,.002,.001,.018,.003,.001,.001,.001,.016,.733,.007,.695,.006,.05,.046,.002,.038,.012,.339,.002,.003,.001,.001,.002,.004,.016,.001,.003,.001,.004,.716,.001,.007,.003,.004,.005,.003,.002,.005,.001,.003,.001,.002,.003,.007,.003,.003,.001,1e-4,1e-4,.048,1.213,1.681,.01,1e-4,.003,1.446,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.003,.016,.006,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.127,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],id:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.029,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.265,.003,.293,.001,.002,.008,.004,.02,.156,.156,.001,.002,.897,.232,.837,.025,.281,.301,.205,.089,.081,.088,.077,.074,.084,.156,.047,.017,.004,.004,.004,.002,1e-4,.336,.259,.156,.221,.076,.084,.101,.111,.249,.128,.292,.143,.276,.131,.06,.365,.008,.137,.448,.233,.076,.043,.063,.011,.049,.014,.01,1e-4,.01,1e-4,.002,1e-4,14.771,1.913,.506,3.424,6.588,.273,2.854,1.797,6.389,.58,3.078,2.893,3.104,7.626,2.047,2.047,.011,4.279,3.371,3.841,3.795,.171,.34,.026,1.249,.063,1e-4,.002,1e-4,1e-4,1e-4,.031,.005,.004,.003,.003,.002,.001,.002,.002,.001,.001,.001,.001,.004,.002,.001,.001,.001,.001,.012,.003,.001,.001,.001,.002,.005,.001,.001,.006,.006,.001,.002,.051,.005,.002,.002,.003,.001,.002,.003,.002,.009,.001,.002,.001,.003,.001,.001,.004,.003,.004,.003,.002,.002,.002,.001,.003,.002,.002,.002,.004,.002,.002,.001,1e-4,1e-4,.055,.03,.005,.008,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.003,.006,.002,1e-4,1e-4,1e-4,1e-4,.001,.003,.006,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.03,.003,.001,.003,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.159,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.105,.002,.192,1e-4,1e-4,.007,.002,.005,.209,.21,.013,.002,.819,.162,1.046,.023,.302,.407,.233,.125,.121,.119,.111,.11,.127,.222,.055,.011,.002,.003,.002,.001,1e-4,.172,.157,.128,.107,.068,.073,.08,.101,.088,.103,.136,.098,.191,.186,.106,.263,.004,.11,.26,.138,.041,.2,.032,.006,.008,.071,.001,1e-4,.001,1e-4,.004,1e-4,6.363,1.243,1.749,2.177,5.774,.29,.367,1.611,4.04,1.457,2.743,2.816,2.062,4.279,6.818,1.868,.006,3.912,3.184,3.285,2.066,3.292,.044,.067,1.073,1.331,1e-4,1e-4,1e-4,1e-4,1e-4,.113,.006,.004,.002,.002,.001,.001,.002,.077,.003,1e-4,.001,.033,.618,.006,.066,.001,.001,.001,.046,.001,.006,.001,.001,.001,.013,.009,.007,.027,.001,.026,.001,.106,1.828,.001,.001,.067,.259,.001,.002,.006,.586,.001,.001,.001,.717,.001,.002,.005,.002,.004,.16,.12,.002,.005,.038,.002,.001,.54,.002,.006,.806,.828,.001,1e-4,1e-4,.114,4.297,1.036,1.463,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.003,.014,.005,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.112,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],da:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.925,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.716,.002,.323,.001,.001,.007,.004,.044,.149,.15,.001,.001,.888,.199,1.047,.017,.356,.494,.245,.119,.115,.124,.118,.127,.168,.257,.046,.018,.001,.002,.001,.002,1e-4,.185,.17,.132,.265,.124,.155,.096,.211,.151,.076,.153,.12,.178,.102,.069,.125,.005,.111,.307,.131,.057,.087,.054,.005,.012,.01,.002,1e-4,.002,1e-4,.002,1e-4,4.818,1.29,.375,4.241,11.595,1.856,2.915,1.153,4.647,.373,2.179,3.858,2.304,5.903,3.8,1.073,.008,6.456,4.455,5.128,1.418,1.705,.066,.033,.579,.056,1e-4,.001,1e-4,1e-4,1e-4,.052,.003,.002,.001,.001,.008,.003,.001,.001,.001,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,.033,.003,1e-4,.001,.001,.013,.005,1e-4,.001,.002,.008,.001,.002,.01,.006,.001,.001,.01,.595,.559,.002,.002,.02,.001,.004,.001,.004,.001,.001,.005,.002,.003,.005,.001,.001,.011,.001,.585,.001,.002,.003,.011,.002,.001,.001,1e-4,1e-4,.02,1.836,.004,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,.006,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.052,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.851,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.647,.002,.239,1e-4,1e-4,.006,.003,.009,.115,.115,1e-4,.004,.594,.296,1.014,.011,.404,.475,.268,.112,.107,.117,.106,.107,.133,.295,.069,.007,.003,.004,.003,.001,1e-4,.183,.111,.1,.068,.113,.064,.065,.195,.087,.098,.225,.146,.211,.097,.06,.172,.005,.116,.314,.181,.037,.143,.044,.006,.048,.009,.001,1e-4,.001,1e-4,.004,1e-4,9.681,.162,.176,.832,6.272,.12,.289,1.322,8.475,1.576,3.754,4.597,2.281,6.958,4.47,1.345,.007,2.326,6.029,6.589,4.108,1.653,.05,.021,1.301,.041,1e-4,1e-4,1e-4,1e-4,1e-4,.101,.002,.002,.001,.004,.002,.001,.002,.001,.001,1e-4,1e-4,.001,.004,1e-4,1e-4,1e-4,.001,.001,.061,.001,1e-4,.001,.001,1e-4,.008,1e-4,.001,.001,.032,1e-4,.001,.032,.02,.001,.001,2.624,.003,.001,.001,.002,.014,1e-4,.002,.001,.01,.001,.001,.003,.002,.002,.005,.001,.001,.349,.001,.002,.001,.002,.001,.005,.002,.004,.001,1e-4,1e-4,.039,3.028,.006,.023,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.007,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.101,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],th:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.353,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.736,.001,.084,1e-4,1e-4,.003,.001,.003,.081,.081,1e-4,.001,.043,.029,.16,.005,.088,.106,.121,.047,.051,.082,.032,.03,.033,.045,.008,.004,.002,.001,.002,1e-4,1e-4,.013,.009,.013,.008,.008,.006,.006,.006,.008,.003,.003,.006,.01,.006,.005,.009,.001,.007,.015,.012,.003,.003,.006,.001,.002,.001,.003,1e-4,.003,1e-4,.001,1e-4,.08,.011,.029,.025,.092,.012,.017,.027,.069,.001,.009,.042,.023,.063,.066,.017,.001,.062,.045,.056,.028,.008,.007,.003,.015,.003,1e-4,.001,1e-4,1e-4,1e-4,1.311,1.859,.629,.364,.845,.001,.034,1.547,1.721,.971,.381,.156,.367,.089,.014,.016,.045,.009,.014,.115,.776,.653,.138,.742,.12,1.918,.573,.602,.112,.028,.443,.069,.115,1.089,.883,1.745,.026,.859,.001,.829,.228,.108,.682,.53,.008,1.369,.031,.006,.627,1.083,2.149,.218,.714,.916,.178,.322,26.536,5.927,.003,.001,.001,.001,.001,1e-4,1e-4,1e-4,.007,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.884,.001,.018,.002,.001,.002,.001,.001,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.55,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.448,.001,.106,1e-4,1e-4,.005,.001,.003,.12,.12,.002,.001,.557,.131,.613,.011,.182,.272,.137,.074,.072,.075,.066,.065,.083,.144,.028,.009,.002,.001,.002,.001,1e-4,.013,.009,.015,.008,.007,.006,.006,.006,.041,.002,.003,.007,.011,.006,.005,.01,.001,.006,.015,.011,.003,.01,.005,.007,.001,.001,.003,1e-4,.003,1e-4,.002,1e-4,.088,.012,.031,.028,.092,.009,.016,.024,.077,.002,.014,.045,.037,.056,.066,.019,.001,.063,.052,.05,.037,.008,.006,.003,.013,.003,1e-4,.001,1e-4,1e-4,1e-4,2.651,2.091,3.127,.625,.166,.165,.297,.452,.133,.189,.677,.001,.018,.001,.079,.727,.091,.092,.108,.095,.081,.039,.009,.034,.052,.011,.114,.044,.167,.089,.136,.155,.116,.171,.083,.024,.037,.04,.014,.018,.016,.009,.001,1e-4,.001,.002,.012,.008,5.212,.516,1.875,.701,1.296,3.589,.274,.882,3.979,.288,1.391,1.465,.909,3.169,3.698,1.109,1e-4,1e-4,.048,.005,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,1e-4,.015,.006,31.942,11.185,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.201,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],he:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.485,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.289,.001,.262,1e-4,1e-4,.005,.001,.096,.104,.103,1e-4,.001,.64,.203,.573,.005,.181,.234,.129,.06,.061,.062,.055,.054,.065,.138,.049,.013,1e-4,.001,1e-4,.001,1e-4,.016,.011,.014,.009,.007,.007,.006,.007,.009,.003,.003,.008,.012,.007,.005,.01,.001,.008,.016,.012,.003,.004,.005,.002,.002,.001,.001,1e-4,.001,1e-4,.007,1e-4,.073,.008,.021,.022,.081,.015,.013,.021,.056,.001,.007,.043,.024,.051,.061,.011,.001,.058,.038,.043,.032,.007,.005,.003,.012,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.003,.002,.003,.002,.001,.001,.001,.001,1e-4,.001,.001,.001,1e-4,1e-4,.001,2.008,2.447,.696,1.135,3.773,4.868,.394,.995,.678,4.903,.173,.854,2.776,1.153,2.22,.562,1.585,.919,1.159,.101,.969,.062,.568,1.054,2.634,1.902,2.428,1e-4,.001,.001,1e-4,.001,.009,.002,.002,.002,.006,.004,.005,.005,.008,.005,.001,.002,.01,.002,.005,.001,1e-4,1e-4,.008,.005,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.015,.005,1e-4,1e-4,1e-4,1e-4,.044,42.985,.006,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.013,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],uk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.595,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.309,.001,.06,1e-4,.001,.01,.001,.059,.134,.135,.002,.002,.619,.137,.568,.01,.199,.281,.159,.081,.077,.082,.071,.067,.079,.158,.041,.017,.001,.002,.001,.001,1e-4,.014,.009,.015,.009,.007,.006,.007,.006,.029,.002,.003,.007,.011,.006,.005,.01,.001,.008,.016,.01,.003,.01,.004,.011,.001,.001,.003,1e-4,.003,1e-4,.004,1e-4,.067,.008,.022,.02,.069,.01,.012,.018,.056,.001,.008,.037,.02,.046,.054,.014,.001,.051,.037,.039,.027,.007,.006,.003,.012,.003,1e-4,.001,1e-4,1e-4,1e-4,2.481,1.842,2.043,1.429,.162,.46,.448,.496,.265,.125,.001,.003,.806,.001,.316,.84,.08,.077,.114,.065,.394,.018,2.734,.422,.001,.01,.11,.047,.088,.083,.052,.13,.228,.124,.058,.089,.032,.023,.02,.023,.023,.004,1e-4,.09,1e-4,.001,.008,.014,3.574,.601,2.221,.664,1.335,1.986,.299,.851,2.427,.557,1.658,1.688,1.249,3.061,4.029,1.082,1e-4,1e-4,.335,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.018,1e-4,.002,.001,28.71,14.784,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.144,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lt:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.086,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.626,.002,.167,.001,1e-4,.009,.001,.01,.234,.234,.001,.002,1.069,.088,1.436,.009,.347,.549,.256,.135,.132,.151,.128,.13,.15,.368,.06,.018,.001,.002,.002,.001,1e-4,.213,.143,.054,.128,.066,.049,.096,.041,.157,.121,.23,.188,.16,.109,.037,.238,.002,.129,.21,.163,.036,.209,.013,.047,.01,.016,.002,1e-4,.002,1e-4,.003,1e-4,8.107,.954,.391,1.797,4.13,.204,1.223,.172,9.411,1.587,2.883,2.415,2.501,3.736,4.946,1.811,.003,4.047,5.62,3.782,3.399,1.76,.016,.008,1.047,.248,1e-4,.015,1e-4,.002,1e-4,.475,.005,.003,.002,.002,.411,.001,.001,.006,.001,.001,.001,.019,.313,1e-4,.001,.001,.001,.006,.247,.001,1e-4,.001,1.225,.001,.136,.001,.001,.108,.003,.111,.001,.364,.781,.001,.001,.002,.001,.002,.001,.001,.003,.002,.299,.001,.004,.013,.355,.007,.002,.007,.931,.001,.004,.001,.001,.004,.002,.003,.003,.003,.037,.575,.001,1e-4,1e-4,.29,.016,2.467,2.697,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.033,.011,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.477,.001,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.115,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.127,.002,.244,1e-4,1e-4,.007,.004,.029,.125,.125,.001,.001,.736,.236,1.026,.016,.357,.45,.2,.113,.108,.13,.122,.121,.148,.271,.033,.009,.004,.002,.004,.001,1e-4,.218,.193,.121,.247,.133,.148,.105,.221,.171,.071,.137,.127,.194,.145,.08,.133,.007,.124,.352,.152,.062,.099,.053,.006,.016,.016,.005,1e-4,.005,1e-4,.002,.001,6.479,.879,.246,3.008,9.683,1.285,2.701,.948,5.112,.784,2.645,3.726,2.383,5.836,3.991,1.273,.009,6.373,4.403,5.512,1.465,1.904,.067,.025,.761,.055,1e-4,.001,1e-4,1e-4,1e-4,.031,.01,.005,.003,.003,.012,.002,.003,.002,.002,.001,.001,.002,.002,.001,.001,.002,.002,.001,.02,.003,.002,.002,.001,.013,.005,.002,.001,.002,.001,.001,.003,.042,.013,.002,.002,.016,.934,.093,.004,.01,.021,.004,.076,.002,.01,.001,.002,.012,.007,.039,.01,.004,.006,.015,.002,.552,.004,.006,.078,.011,.006,.007,.003,1e-4,1e-4,.197,1.726,.009,.008,1e-4,1e-4,1e-4,.001,.001,1e-4,.001,1e-4,.017,.007,.044,.016,1e-4,1e-4,1e-4,.001,.004,.01,.009,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,.002,.027,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.893,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.172,.002,.34,1e-4,.001,.011,.002,.016,.182,.182,.001,.002,.943,.135,1.23,.019,.3,.38,.204,.106,.1,.109,.096,.094,.112,.22,.065,.02,.009,.004,.009,.002,1e-4,.156,.17,.109,.14,.063,.069,.111,.12,.137,.079,.163,.086,.175,.178,.118,.22,.004,.116,.267,.137,.108,.095,.03,.008,.009,.078,.011,1e-4,.011,1e-4,.002,1e-4,8.648,1.028,.78,2.344,6.653,.218,1.346,.572,7.393,3.932,2.783,2.724,2.195,4.91,6.755,1.994,.007,4.039,3.61,3.329,3.254,2.478,.043,.016,.083,1.288,1e-4,.003,1e-4,1e-4,1e-4,.039,.005,.004,.003,.002,.001,.003,.353,.002,.001,.001,.001,.016,.678,.001,.001,.004,.158,.001,.011,.002,.001,.001,.001,.001,.003,.001,.001,.009,.005,.008,.001,.033,.524,.003,.002,.003,.001,.001,.002,.002,.01,.001,.005,.001,.004,.001,.001,.008,.004,.005,.005,.002,.004,.004,.001,.004,.002,.004,.006,.006,.016,.36,.002,1e-4,1e-4,.021,.044,1.208,.914,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.011,.005,.028,.01,1e-4,1e-4,1e-4,.001,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.038,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],no:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.028,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.853,.002,.247,1e-4,.001,.006,.004,.016,.159,.158,.001,.001,.698,.213,1.037,.017,.377,.496,.255,.116,.113,.123,.117,.116,.152,.295,.042,.013,.002,.002,.002,.001,1e-4,.196,.176,.125,.246,.126,.148,.099,.211,.167,.071,.132,.135,.185,.133,.091,.127,.006,.11,.321,.146,.058,.092,.051,.007,.014,.011,.002,1e-4,.002,1e-4,.001,1e-4,4.956,1.168,.243,2.996,11.38,1.384,2.632,1.02,4.719,.546,2.591,3.946,2.341,6.218,3.979,1.354,.009,6.417,4.712,5.821,1.424,1.732,.061,.029,.639,.049,1e-4,1e-4,1e-4,1e-4,1e-4,.041,.006,.003,.002,.002,.009,.002,.002,.001,.002,.001,.001,.002,.003,.001,.001,.001,.001,.001,.034,.002,.001,.002,.001,.014,.003,.001,.001,.001,.002,.001,.002,.028,.009,.001,.002,.012,.765,.126,.003,.003,.021,.001,.062,.001,.006,.001,.001,.007,.003,.006,.006,.002,.003,.012,.001,.598,.002,.004,.062,.009,.004,.004,.002,1e-4,1e-4,.152,1.588,.007,.007,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.004,.022,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.039,.001,.001,.004,.002,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.872,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.68,.001,.1,1e-4,1e-4,.009,1e-4,.005,.176,.176,1e-4,.003,.5,.178,.762,.011,.275,.318,.214,.099,.096,.093,.078,.075,.084,.129,.031,.008,.001,.002,.001,.001,1e-4,.017,.01,.025,.013,.007,.006,.019,.007,.026,.003,.008,.007,.014,.016,.013,.016,.001,.009,.02,.011,.006,.008,.003,.004,.001,.003,.002,1e-4,.002,1e-4,.018,1e-4,.453,.047,.05,.128,.37,.027,.066,.039,.393,.16,.152,.148,.154,.268,.352,.1,.001,.219,.193,.185,.165,.107,.003,.002,.007,.07,.053,.001,.053,1e-4,1e-4,2.152,2.07,1.61,1.756,.112,.204,.344,.339,.366,.003,.007,.001,.001,.031,1e-4,.007,.082,.095,.143,.054,.071,.047,.006,.035,1.459,.284,.347,.2,.143,.119,.086,.186,.072,.175,.071,.052,.034,.041,.014,.02,.016,.001,1e-4,.001,1e-4,.001,1e-4,1e-4,4.933,.477,1.401,.663,1.33,3.708,.225,.704,3.913,.001,1.472,1.2,1.198,2.623,3.682,1.022,1e-4,1e-4,.018,.003,.054,.041,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.001,30.181,10.982,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.062,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ca:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.816,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.948,.002,.294,.001,.011,.035,.001,.634,.154,.154,.001,.002,1.001,.144,.747,.01,.301,.411,.25,.137,.131,.135,.12,.123,.144,.212,.051,.029,.002,.003,.003,.001,1e-4,.252,.125,.23,.119,.296,.09,.091,.066,.12,.061,.034,.213,.174,.072,.049,.171,.012,.097,.192,.11,.053,.092,.024,.034,.01,.009,.002,1e-4,.002,1e-4,.004,1e-4,9.132,1.004,2.746,3.236,9.343,.681,.95,.465,5.412,.169,.095,4.932,2.114,4.848,3.551,1.884,.571,5.202,5.696,4.416,2.672,1.094,.036,.312,.252,.123,1e-4,.001,1e-4,1e-4,1e-4,.044,.004,.004,.002,.002,.001,.001,.001,.002,.015,.001,.001,.001,.005,.001,.001,.001,.001,.002,.006,.003,.001,.001,.001,.001,.021,.001,.001,.003,.003,.001,.001,.327,.012,.002,.002,.002,.001,.001,.088,.218,.355,.001,.01,.003,.236,.001,.038,.005,.007,.161,.374,.002,.003,.003,.047,.003,.002,.063,.01,.034,.003,.002,.002,1e-4,1e-4,.099,1.903,.005,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,.004,.012,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.005,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.039,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.06,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.437,.024,.237,.001,.001,.007,.002,.011,.174,.174,.021,.002,1.072,.17,1.037,.022,.277,.429,.215,.122,.124,.121,.109,.108,.134,.239,.061,.025,.005,.006,.005,.002,1e-4,.162,.141,.1,.122,.063,.075,.091,.086,.111,.082,.154,.138,.185,.145,.099,.224,.004,.106,.263,.133,.042,.163,.031,.007,.007,.087,.013,1e-4,.014,1e-4,.006,1e-4,7.7,1.204,.709,2.364,7.782,.229,1.139,.879,6.985,3.327,2.701,3.64,2.037,5.283,6.653,2.232,.006,4.152,3.513,3.409,1.654,3.049,.039,.016,.079,1.473,1e-4,.01,1e-4,1e-4,1e-4,.054,.004,.003,.002,.002,.001,.001,.011,.002,.002,1e-4,.001,.021,.847,.001,1e-4,.001,.002,.002,.027,.001,1e-4,.001,.001,.001,.002,.001,.001,.002,.001,.001,.001,.056,.644,.007,.001,.003,.001,.001,.002,.003,.013,.001,.027,.001,.005,.001,.001,.007,.003,.004,.005,.002,.003,.006,.001,.004,.002,.004,.028,.008,.018,.391,.002,1e-4,1e-4,.071,.059,.881,1.071,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.01,.005,.024,.008,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.054,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.879,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.099,.004,.432,1e-4,1e-4,.013,.002,.007,.207,.208,1e-4,.003,.965,.082,1.276,.01,.332,.476,.254,.122,.117,.123,.105,.106,.127,.271,.045,.023,.001,.002,.001,.001,1e-4,.208,.134,.062,.128,.074,.067,.074,.058,.112,.068,.189,.194,.144,.089,.055,.234,.002,.136,.249,.163,.042,.182,.012,.007,.003,.051,.001,1e-4,.001,1e-4,.003,1e-4,8.58,1.078,.806,2.221,4.451,.231,1.228,.175,6.667,1.704,2.603,2.424,2.389,3.209,2.883,1.908,.003,4.056,5.825,4.121,3.633,1.801,.012,.009,.029,1.289,1e-4,.005,1e-4,1e-4,1e-4,.124,2.988,.003,.002,.001,.006,.331,.001,.002,.001,1e-4,.001,.015,.083,1e-4,.001,.001,.001,.007,1.174,.07,1e-4,.001,.001,.002,.003,.001,.001,.005,.012,.009,.001,.06,.627,.004,.097,.002,.001,.001,.001,.001,.002,.006,1.565,1e-4,.002,1e-4,1e-4,.01,.002,.005,.002,.002,.005,.01,.106,.006,.002,.003,.01,.298,.012,.176,.002,1e-4,1e-4,.03,.013,6.068,1.452,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.051,.018,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.11,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],et:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.183,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.759,.003,.281,1e-4,1e-4,.013,.001,.037,.198,.199,.001,.003,.786,.203,1.175,.017,.35,.548,.272,.142,.137,.143,.127,.129,.154,.323,.059,.022,.017,.003,.017,.003,1e-4,.235,.096,.074,.061,.173,.056,.064,.105,.122,.088,.255,.166,.186,.114,.065,.208,.003,.138,.296,.251,.046,.167,.033,.011,.008,.01,.008,1e-4,.008,1e-4,.004,1e-4,9.665,.664,.152,2.822,7.678,.189,1.393,1.095,7.816,1.25,3.234,4.738,2.585,4.03,3.549,1.167,.005,3.003,6.68,5.333,4.153,1.613,.043,.017,.074,.045,1e-4,.002,1e-4,1e-4,1e-4,.13,.015,.01,.006,.004,.003,.003,.004,.002,.002,.001,.002,.003,.005,.001,.003,.002,.002,.003,.102,.002,.008,.003,.003,.002,.004,.002,.001,.044,.005,.006,.003,.016,.035,.003,.002,.833,.002,.001,.002,.002,.01,.001,.006,.001,.005,.001,.001,.017,.004,.012,.007,.005,.763,.179,.003,.015,.005,.008,.007,.518,.012,.028,.003,1e-4,1e-4,.02,2.358,.019,.061,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.009,.004,.104,.037,1e-4,1e-4,1e-4,.001,1e-4,.001,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.004,.123,.001,1e-4,.002,.001,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.374,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.123,.002,.071,1e-4,.001,.004,1e-4,.023,.08,.08,1e-4,.001,.255,.072,.052,.006,.068,.07,.044,.02,.019,.023,.019,.019,.021,.04,.021,.006,.001,.002,.001,.001,1e-4,.008,.004,.007,.004,.005,.003,.004,.003,.006,.001,.002,.003,.005,.004,.003,.005,1e-4,.003,.008,.005,.002,.002,.002,.001,.001,.001,.007,1e-4,.008,1e-4,.001,1e-4,.049,.007,.017,.016,.052,.008,.01,.017,.038,.001,.004,.024,.015,.034,.035,.012,.001,.033,.03,.034,.015,.005,.005,.002,.008,.001,1e-4,.005,1e-4,1e-4,1e-4,1.039,.443,1.278,.061,1e-4,.273,.146,1.879,.535,.214,.013,.729,.054,1.826,1e-4,.253,.014,.012,1e-4,.042,.14,2.07,.133,.43,.035,.004,.215,.046,.503,.014,.016,.269,.037,.213,.023,.155,24.777,7.162,.554,.224,1.23,.009,.8,.117,.393,.245,.995,.828,2.018,.001,.771,.001,.001,.707,.299,.18,1.226,.94,1e-4,1e-4,.133,.001,2.558,1.303,1e-4,1e-4,.008,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.261,1e-4,.024,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4]},cn=Object.assign({},un,{aa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.161,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.548,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.29,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.29,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.452,.645,.645,2.581,9.032,1e-4,5.161,3.871,5.806,1e-4,1.935,2.581,1.29,5.161,2.581,1.29,1e-4,4.516,.645,3.226,.645,1e-4,1.29,1e-4,.645,1.29,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1e-4,2.581,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.29,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1.29,1e-4,1e-4,1e-4,.645,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.871,.645,2.581,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ab:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.925,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.477,.003,.06,1e-4,1e-4,.005,1e-4,.013,.269,.273,.001,.001,.518,.306,.76,.006,.291,.709,.42,.294,.242,.237,.242,.222,.25,.32,.04,.028,.008,1e-4,.008,.002,1e-4,.004,.004,.004,.006,.001,.002,.001,.001,.033,.012,.001,.001,.002,.001,.011,.003,1e-4,.002,.009,.002,.002,.007,.006,.01,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.679,.013,.02,.028,.073,.002,.006,.01,.057,.001,.005,.035,.039,.025,.031,.027,.011,.045,.036,.027,.037,.009,.002,.01,.027,.004,1e-4,.006,1e-4,1e-4,1e-4,3.029,1.109,1.569,1.131,.085,.805,.262,.083,.992,.002,.003,2.495,.791,.003,.006,.03,.654,.059,.04,.137,.332,.075,.041,.012,.142,2.586,.087,1.002,.086,.047,.045,.323,.073,.328,.016,.067,.011,.052,.054,.455,.024,.199,1e-4,.026,.015,.539,.001,.001,7.771,.517,.209,1.034,.683,1.368,.238,.686,3.093,.042,.729,1.305,.754,1.868,1.136,.676,1e-4,1e-4,.065,.019,.003,.002,1e-4,1e-4,1e-4,.002,.004,.001,.155,1e-4,.005,.002,22.83,11.878,3.39,2.86,.019,.007,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.386,1e-4,.001,.001,.001,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ace:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.36,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.198,1e-4,.137,1e-4,.001,.007,1e-4,.256,.125,.125,1e-4,1e-4,1.042,.179,1.302,.01,.401,.568,.284,.118,.113,.112,.099,.093,.097,.13,.041,.007,.003,.001,.003,.001,1e-4,.777,.587,.153,.133,.028,.036,.256,.095,.205,.159,.483,.331,.444,.183,.028,.481,.019,.179,.473,.324,.101,.026,.042,.006,.021,.009,1e-4,1e-4,.001,1e-4,1e-4,1e-4,11.224,1.773,.851,1.583,5.304,.086,3.693,3.458,3.728,.528,2.425,2.037,2.4,8.165,2.618,1.607,.015,2.485,1.74,2.806,6.018,.112,.344,.01,1.486,.04,1e-4,1e-4,1e-4,1e-4,1e-4,.039,.008,.005,.009,.016,.007,.006,.006,.01,.004,.008,.003,.002,.004,.012,.004,.007,.003,.004,.014,.002,.001,.001,.002,.004,.016,.001,.001,.002,.002,.001,.007,.007,.006,.003,.008,.005,.002,.001,.019,1.193,.401,.007,.574,.003,.006,.002,.006,.025,.011,.006,.008,.873,.004,.151,.002,.005,.005,.008,.007,.004,.001,.002,.002,1e-4,1e-4,.025,3.205,.014,.012,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.004,.001,.012,.005,1e-4,1e-4,1e-4,1e-4,.001,.002,.061,.078,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,.011,.039,.001,.001,.005,.003,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ady:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.142,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.359,.001,.089,1e-4,1e-4,.003,1e-4,.006,.111,.11,.001,.001,.645,.309,.862,.007,.118,.279,.082,.059,.052,.055,.051,.045,.057,.071,.053,.011,.003,.003,.003,.001,1e-4,.008,.007,.003,.003,.002,.003,1e-4,.002,1.228,.004,.001,.003,.004,.002,.004,.005,1e-4,.001,.006,.003,.002,.004,.002,.008,1e-4,1e-4,.005,1e-4,.005,1e-4,.001,1e-4,.05,.009,.016,.02,.067,.009,.011,.022,.046,.001,.006,.031,.02,.036,.037,.013,1e-4,.038,.031,.043,.016,.004,.008,.003,.011,.003,1e-4,1e-4,1e-4,1e-4,1e-4,2.778,.778,1.192,2.098,.406,1.886,.203,.188,.585,.672,2.887,2.927,.717,6.004,.019,.21,.317,.122,.019,.226,.145,.045,.02,.041,.09,.005,.262,.059,.092,.079,.053,.07,.076,.092,.086,.055,.029,.124,.039,.031,.045,.011,1e-4,.031,1e-4,.018,.005,.018,2.762,.645,.171,1.681,.855,1.134,.39,.89,1.618,.147,1.755,1.169,1.845,1.192,.989,.792,1e-4,1e-4,.094,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,.006,1e-4,.003,.004,1e-4,1e-4,20.033,23.044,.001,.227,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.229,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],af:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.732,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.494,.002,.361,1e-4,.001,.008,.001,.297,.136,.136,.002,.001,.651,.269,.893,.01,.25,.371,.17,.095,.09,.104,.09,.086,.122,.213,.049,.019,.001,.002,.001,.001,1e-4,.241,.154,.103,.382,.093,.072,.119,.168,.14,.087,.137,.088,.157,.131,.103,.129,.004,.104,.29,.11,.03,.115,.083,.006,.008,.015,.002,1e-4,.002,1e-4,.002,1e-4,6.202,1.128,.17,4.12,13.284,.609,2.484,1.201,6.602,.17,2.299,2.976,1.671,6.221,4.571,1.147,.006,5.197,4.908,4.263,1.7,1.691,1.336,.018,.832,.043,1e-4,1e-4,1e-4,1e-4,1e-4,.182,.005,.004,.003,.002,.001,.001,.001,.003,.002,.001,.001,.002,.002,.001,.001,.002,.001,.001,.024,.002,.001,.001,.001,.003,.118,.001,.001,.017,.016,.001,.001,.076,.018,.001,.005,.004,.002,.002,.003,.003,.032,.053,.119,.001,.004,.001,.014,.007,.003,.004,.007,.002,.003,.005,.001,.005,.002,.003,.003,.007,.003,.003,.002,1e-4,1e-4,.084,.264,.004,.005,1e-4,1e-4,1e-4,.003,.002,.003,.001,1e-4,.009,.004,.022,.008,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.003,.181,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ak:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.856,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,17.14,.001,.181,1e-4,.002,.004,.001,.124,.134,.137,.001,1e-4,.719,.119,1.218,.014,.179,.257,.137,.052,.061,.075,.065,.054,.059,.197,.031,.029,.002,.015,.002,.018,1e-4,.566,.167,.173,.118,.172,.085,.258,.093,.098,.056,.193,.111,.204,.399,.102,.121,.012,.083,.271,.145,.084,.04,.206,.011,.078,.02,.025,1e-4,.025,1e-4,1e-4,1e-4,10.911,1.752,.404,1.704,5.791,1.18,.501,1.542,4.479,.04,1.975,.667,3.211,7.434,5.302,.888,.03,2.693,2.695,1.838,2.674,.126,2.695,.023,2.4,.077,1e-4,1e-4,1e-4,1e-4,1e-4,.046,.01,.002,.005,.002,.006,.095,.003,.01,.003,.006,.011,.002,.017,.002,.004,.052,.011,.001,.002,1.774,.002,.002,.001,1e-4,.02,1e-4,1.749,.01,.01,1e-4,1e-4,.151,.004,.001,.002,.006,.022,.001,.003,.005,.01,.002,.003,.002,.005,.001,.003,.01,.006,.005,.012,.015,.552,.007,.003,.008,.006,.006,.392,.013,.005,.007,.004,1e-4,1e-4,.146,.054,.004,.004,.139,1e-4,1e-4,3.532,.002,.008,.003,.34,.547,1e-4,.045,.018,1e-4,1e-4,.018,.055,.008,.002,.016,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.048,.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],als:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.981,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.805,.003,.368,1e-4,1e-4,.09,.001,.06,.177,.177,.009,.001,.909,.215,1.001,.022,.318,.46,.232,.128,.122,.132,.116,.119,.142,.206,.063,.024,.004,.003,.004,.001,1e-4,.315,.452,.163,.512,.205,.236,.319,.219,.188,.156,.222,.212,.32,.172,.112,.199,.01,.225,.653,.132,.131,.173,.23,.004,.019,.129,.009,1e-4,.009,1e-4,.003,.001,3.964,1.276,2.626,3.453,8.363,1.057,2.308,3.744,6.377,.069,.66,2.78,2.213,4.452,3.12,.516,.012,5.572,4.629,4.341,2.669,.935,.979,.046,.315,.925,1e-4,.002,1e-4,1e-4,1e-4,.124,.003,.002,.002,.034,.001,.001,.001,.005,.003,1e-4,1e-4,.004,.002,.001,1e-4,.001,.001,.001,.023,.002,.001,.01,.001,.003,.02,.003,.002,.048,.001,.034,.042,.156,.005,.005,.003,1.018,.003,.001,.003,.354,.039,.002,.022,.079,.004,.001,.002,.004,.003,.015,.003,.029,.017,.333,.001,.002,.045,.004,.015,.5,.004,.001,.002,1e-4,1e-4,.108,2.635,.006,.005,1e-4,.005,1e-4,.002,.001,.001,.001,1e-4,.011,.005,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.005,.12,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],am:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.067,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.441,.005,.08,.001,1e-4,.003,1e-4,.013,.12,.121,.002,.001,.021,.111,.25,.041,.102,.167,.089,.049,.044,.048,.044,.043,.057,.081,.018,.001,.048,.019,.048,.008,1e-4,.009,.005,.007,.005,.005,.004,.003,.003,.004,.004,.002,.003,.006,.003,.002,.004,.001,.003,.007,.005,.002,.002,.002,.001,.001,.001,.017,1e-4,.02,1e-4,.007,1e-4,.059,.06,.021,.018,.066,.009,.014,.02,.05,.001,.005,.029,.021,.042,.045,.014,.001,.09,.032,.04,.026,.005,.007,.003,.012,.002,1e-4,.003,1e-4,1e-4,1e-4,.402,.178,.052,.194,.053,.478,.259,.003,10.51,5.557,5.996,6.414,2.305,3.741,.258,.015,.706,.091,.071,.613,.064,1.598,.107,.008,.907,.126,.312,.688,.12,.989,.129,.009,2.006,.213,.679,.599,.206,1.204,.134,.012,1.72,.213,.231,1.059,.087,1.793,.284,.013,1.151,.255,.312,.726,.115,2.127,.177,.025,.19,.059,.032,.208,.015,.466,.016,.003,1e-4,1e-4,.096,.004,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.01,.005,.009,.003,1e-4,1e-4,1e-4,1e-4,.001,.004,.017,.046,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.002,29.467,.047,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,.002,.003,.001,1e-4,.017,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],an:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.253,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.49,.005,.725,1e-4,1e-4,.005,.001,.998,.246,.246,.002,.002,1.083,.164,.685,.057,.291,.382,.213,.125,.12,.124,.115,.119,.131,.221,.057,.029,.007,.01,.006,.001,1e-4,.411,.169,.298,.091,.216,.095,.1,.059,.154,.037,.024,.177,.199,.072,.146,.19,.011,.122,.227,.128,.065,.101,.021,.037,.032,.028,.004,1e-4,.004,1e-4,.001,1e-4,9.483,1.074,3.3,3.436,7.765,.618,.822,.72,5.365,.027,.17,3.124,1.916,5.869,6.23,1.654,.435,4.741,4.813,3.981,2.96,.573,.028,.256,1.248,.309,1e-4,.003,1e-4,1e-4,1e-4,.014,.007,.003,.003,.002,.001,.001,.002,.002,.002,.001,1e-4,.001,.003,.001,.001,.001,.001,.001,.007,.002,.001,.001,.001,.001,.003,.001,.001,.002,.001,1e-4,.002,.028,.174,.002,.002,.003,.001,.001,.008,.012,.227,.002,.014,.002,.209,.001,.002,.004,.013,.086,.54,.002,.002,.003,.002,.004,.002,.027,.014,.019,.002,.003,.002,1e-4,1e-4,.127,1.249,.007,.007,1e-4,1e-4,.001,.002,.001,.001,1e-4,1e-4,.009,.005,.014,.005,1e-4,1e-4,1e-4,.001,.001,.002,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.003,.013,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ang:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.542,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.629,.001,.406,.001,.001,.005,.001,.041,.166,.166,.001,.001,.772,.085,.973,.007,.229,.292,.152,.081,.082,.095,.083,.089,.101,.139,.058,.032,.011,.001,.011,.001,1e-4,.204,.193,.317,.089,.179,.148,.229,.279,.189,.034,.031,.128,.195,.168,.087,.103,.007,.125,.419,.122,.043,.034,.145,.006,.012,.007,.02,1e-4,.02,1e-4,1e-4,1e-4,5.666,.997,2.318,3.22,8.139,1.491,2.061,1.574,3.89,.022,.109,2.731,2.332,6.4,3.389,.62,.014,4.435,4.532,3.015,1.701,.127,1.341,.09,.658,.04,1e-4,.004,1e-4,.001,1e-4,.032,.62,.006,.006,.004,.003,.052,.002,.001,.001,.002,.033,.008,.478,.002,.002,.01,.003,.05,1.069,.004,.001,.004,.002,.003,.003,.011,.012,.009,.068,.141,.003,.009,.037,.013,.751,.006,.002,1.085,.003,.002,.01,.039,.996,.002,.008,.002,.002,.371,.007,.005,.069,.002,.003,.002,.008,.006,.003,.005,.004,.005,.004,2.003,.078,1e-4,1e-4,.009,3.7,2.566,.742,.075,.766,.127,.001,.001,1e-4,.001,1e-4,.012,.006,.017,.006,1e-4,1e-4,1e-4,1e-4,.001,.004,.006,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.024,.022,.003,.001,.003,.002,.001,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],arc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.038,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.39,.001,.055,1e-4,1e-4,.007,1e-4,.005,.294,.294,1e-4,1e-4,.039,.041,.295,.017,.207,.161,.078,.046,.044,.053,.042,.044,.043,.091,.189,.006,.003,.004,.003,1e-4,1e-4,.01,.01,.013,.007,.004,.004,.006,.005,.007,.003,.005,.008,.011,.008,.004,.008,.001,.007,.013,.004,.003,.005,.004,.001,.001,.002,.005,1e-4,.005,1e-4,1e-4,1e-4,.107,.013,.023,.039,.088,.011,.022,.025,.081,.003,.021,.05,.023,.07,.066,.018,.002,.062,.042,.051,.032,.013,.011,.006,.012,.006,1e-4,.001,1e-4,1e-4,1e-4,.359,.027,.139,.022,.095,.021,.095,.051,.776,.005,.029,.002,.032,.003,.011,.005,6.959,.008,1.918,.561,.013,2.47,.003,1.261,3.75,.282,.787,.504,.018,4.683,.009,.786,1.796,2.249,2.761,.874,.009,1.007,.747,.053,.199,.858,2.538,1.15,2.879,.016,.009,.021,.023,.056,.023,.019,.01,.046,.007,.011,.024,.035,.015,.012,.048,.023,.008,.047,1e-4,1e-4,.004,.019,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.832,.001,.126,.053,.042,.017,.001,1e-4,1e-4,.009,.024,.108,.212,.141,.001,.004,41.501,.031,1e-4,1e-4,.002,.019,.018,1e-4,.001,.004,.004,1e-4,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],arz:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.02,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.739,.003,.126,1e-4,1e-4,.004,.001,.003,.118,.124,.002,.001,.064,.045,.405,.01,.141,.269,.129,.067,.063,.072,.064,.065,.08,.165,.039,.002,.002,.003,.002,1e-4,1e-4,.012,.009,.011,.008,.005,.005,.005,.006,.006,.005,.004,.009,.011,.005,.003,.007,1e-4,.006,.013,.009,.001,.004,.004,.001,.001,.001,.006,.001,.006,1e-4,.002,1e-4,.091,.01,.025,.026,.093,.01,.015,.024,.072,.002,.01,.045,.023,.064,.06,.013,.001,.06,.046,.047,.027,.009,.007,.004,.017,.005,1e-4,.002,1e-4,1e-4,1e-4,.111,1.136,.763,1.043,4.458,2.752,2.413,1.721,2.708,1.077,3.156,.021,.238,.002,.017,.028,.008,.018,.006,.004,.001,.001,1e-4,1e-4,.001,.001,1e-4,.003,.003,.004,1e-4,.003,.019,.06,.018,.274,.041,.116,.08,6.51,1.771,.79,1.749,.151,.593,.743,.294,1.313,.079,2.202,.292,1.274,.493,.453,.187,.361,.078,1.267,.19,.005,.002,.002,.011,.002,1e-4,1e-4,.025,.005,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,.004,.01,.003,1e-4,1e-4,1e-4,.001,1e-4,.004,21.565,21.383,.022,.006,1e-4,1e-4,1e-4,1e-4,.002,.001,.029,.003,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],as:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.296,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.811,.001,.086,1e-4,1e-4,.005,1e-4,.083,.075,.077,1e-4,.001,.203,.086,.044,.006,.008,.009,.006,.004,.003,.003,.002,.002,.003,.004,.022,.007,.002,.003,.002,.001,1e-4,.015,.009,.013,.007,.006,.005,.005,.006,.011,.003,.003,.005,.01,.007,.004,.011,.001,.008,.013,.013,.003,.002,.004,1e-4,.001,.001,.01,1e-4,.01,1e-4,.001,1e-4,.213,.031,.074,.083,.255,.044,.045,.095,.18,.004,.017,.099,.058,.166,.164,.046,.002,.151,.14,.179,.063,.023,.027,.005,.036,.003,1e-4,.004,1e-4,1e-4,1e-4,.537,.769,.261,.102,.001,.242,.382,1.586,.215,.133,.002,.429,.033,1.928,.026,.213,.004,1e-4,1e-4,.14,.003,1.299,.21,.401,.056,.073,.394,.328,.382,.006,.051,.353,.081,.128,.02,.231,1.75,.525,21.552,9.182,1.32,.031,.846,.112,.982,.29,.858,1.027,2.855,.297,.931,1e-4,1e-4,1e-4,.293,.318,.674,.559,.001,1e-4,.584,1e-4,2.717,1.766,1e-4,1e-4,.009,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.161,1e-4,.072,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ast:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.724,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.007,.002,.424,.002,.001,.01,.003,.548,.156,.156,.002,.003,1.046,.096,.743,.015,.245,.288,.158,.086,.078,.093,.076,.077,.093,.166,.056,.032,.002,.005,.002,.002,1e-4,.218,.121,.236,.117,.257,.089,.088,.078,.115,.051,.038,.23,.167,.117,.051,.161,.007,.094,.198,.134,.043,.06,.041,.061,.037,.011,.014,1e-4,.014,1e-4,.001,1e-4,8.074,.835,3.151,3.345,9.578,.701,.803,.452,5.046,.025,.11,4.637,2.087,5.542,5.253,1.877,.488,4.828,5.384,3.477,3.909,.672,.055,.4,.967,.259,1e-4,.002,.001,1e-4,1e-4,.04,.01,.002,.002,.002,.001,.001,.001,.001,.003,.001,.001,.001,.003,1e-4,.001,.001,.001,.001,.01,.01,.001,1e-4,.001,.002,.009,.001,.001,.005,.006,1e-4,.001,.026,.531,.001,.001,.002,.001,.002,.002,.002,.291,.001,.019,.001,.46,.001,.001,.005,.157,.004,.608,.002,.002,.003,.002,.004,.002,.119,.021,.027,.002,.001,.003,1e-4,1e-4,.073,2.207,.003,.004,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.012,.005,.007,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.003,.039,.001,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],atj:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.34,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.835,1e-4,.034,1e-4,1e-4,.001,1e-4,.005,.045,.047,1e-4,1e-4,.548,.045,1.11,.006,.039,.075,.033,.013,.017,.015,.02,.018,.017,.061,.024,.003,.015,1e-4,.015,.002,1e-4,.175,.012,.062,.025,.193,.022,.01,.006,.035,.021,.212,.019,.332,.208,.141,.099,.007,.017,.034,.12,.001,.003,.089,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,11.805,.044,6.264,.083,5.028,.008,.026,.952,15.443,.004,9.886,.134,2.846,5.167,5.337,2.131,.022,2.079,2.27,7.277,.131,.025,4.581,.005,.015,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,1e-4,.002,1e-4,1e-4,1e-4,1e-4,.002,.009,.046,1e-4,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.015,.069,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],av:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.031,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.23,.001,.083,1e-4,1e-4,.007,.001,.001,.166,.166,.001,.001,.458,.25,.562,.01,.133,.234,.149,.084,.058,.065,.053,.053,.06,.094,.055,.017,.001,.003,.001,.003,1e-4,.011,.006,.01,.003,.003,.003,.003,.002,.777,.001,.002,.002,.006,.003,.003,.002,1e-4,.002,.007,.008,.003,.006,.001,.011,.001,1e-4,.007,1e-4,.007,1e-4,.009,1e-4,.075,.008,.02,.025,.067,.007,.015,.018,.067,.001,.008,.038,.014,.043,.038,.019,.001,.041,.043,.036,.031,.01,.006,.003,.01,.002,1e-4,.001,1e-4,1e-4,1e-4,2.671,1.227,.995,2.675,.059,.905,.851,.335,.128,.084,1.771,.03,.884,.039,.044,.818,.134,.075,.027,.273,.227,.015,.029,.016,.039,.006,.125,.043,.127,.032,.014,.032,.185,.089,.062,.016,.021,.082,.047,.033,.042,.006,.002,.039,.002,.019,.005,.013,7.089,1.927,.825,1.964,1.317,1.929,.263,.636,2.852,.187,1.471,3.734,.878,1.983,1.647,.208,1e-4,1e-4,.195,.006,.002,.001,1e-4,1e-4,1e-4,.001,.001,1e-4,.022,1e-4,.001,1e-4,30.778,12.343,1e-4,.534,1e-4,.002,1e-4,.001,.025,.022,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.177,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ay:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.588,.005,.247,1e-4,1e-4,1e-4,.027,1.72,.603,.602,.046,.001,1.21,.158,1.031,.021,.387,.817,.515,.316,.306,.36,.273,.279,.341,.428,.504,.129,.064,.005,.064,.147,1e-4,.442,.126,.339,.185,.072,.071,.077,.1,.109,.302,.254,.268,.282,.145,.064,.43,.127,.121,.288,.2,.25,.05,.191,.012,.11,.013,.007,1e-4,.008,1e-4,.002,.004,14.491,.243,1.49,.745,1.57,.085,.27,2.104,6.268,1.613,3.058,2.342,2.397,3.14,1.316,1.65,1.821,3.874,4.07,2.906,5.224,.153,1.248,.859,2.145,.119,1e-4,.001,1e-4,1e-4,1e-4,.211,.009,.003,.004,.002,.001,.002,.002,.003,.002,.001,.002,.002,.003,.002,.002,.004,.008,.001,.016,.006,.002,.001,.001,.005,.126,.002,.002,.008,.019,.001,.001,.061,.068,.001,.003,.22,.002,.002,.004,.004,.062,.002,.003,.001,.11,.003,.049,.044,.259,.029,.076,.026,.004,.004,.007,.009,.003,.038,.01,.012,.003,.005,.006,1e-4,1e-4,.133,.88,.003,.004,1e-4,.001,1e-4,.002,.001,.003,.002,1e-4,.006,.002,.031,.01,1e-4,1e-4,1e-4,.001,.002,.004,.004,.002,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.01,.003,.207,.001,.004,.008,.005,.002,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],az:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.803,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.785,.003,.222,1e-4,.001,.009,.001,.007,.139,.141,.001,.002,.64,.404,.91,.014,.244,.339,.188,.096,.09,.102,.087,.087,.102,.202,.038,.019,.004,.002,.004,.004,1e-4,.276,.242,.068,.094,.057,.061,.057,.095,.062,.008,.127,.055,.202,.081,.086,.077,.107,.098,.172,.115,.037,.055,.005,.062,.066,.023,.006,1e-4,.006,1e-4,.004,.001,7.007,1.378,.673,3.497,1.722,.535,.389,.748,6.853,.041,1.544,4.525,2.336,5.203,1.602,.396,1.07,4.974,2.444,2.338,1.812,1.06,.008,.478,1.947,.87,1e-4,1e-4,1e-4,1e-4,1e-4,.147,.01,.009,.005,.005,.009,.003,.033,.002,.001,.001,.003,.002,.001,.002,.082,.004,.001,.002,.028,.04,.001,.012,.001,.002,6.259,.001,.001,.046,.034,.075,1.454,.026,.003,.003,.001,.001,.001,.001,.485,.001,.001,.001,.011,.002,.016,.001,.001,.187,2.533,.009,.004,.005,.028,.457,.003,.014,.003,.01,.017,1.158,.011,.03,.004,1e-4,1e-4,.067,2.145,2.985,1.196,.079,1e-4,1e-4,6.24,1e-4,1e-4,1e-4,1e-4,.003,.001,.207,.052,1e-4,.018,1e-4,1e-4,1e-4,.001,.008,.009,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.14,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],azb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.225,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.112,.002,.032,1e-4,1e-4,.003,1e-4,.002,.275,.275,.002,.001,.028,.165,.744,.053,.037,.078,.041,.038,.027,.033,.024,.023,.03,.03,.059,.003,.004,.001,.003,1e-4,1e-4,.005,.004,.007,.004,.002,.002,.002,.003,.008,.002,.002,.004,.004,.003,.001,.007,.001,.004,.011,.002,.001,.002,.001,.001,1e-4,1e-4,.005,1e-4,.005,1e-4,.022,1e-4,.096,.009,.017,.038,.09,.012,.02,.043,.1,1e-4,.026,.053,.017,.052,.064,.04,.001,.055,.055,.106,.015,.003,.052,.004,.018,.009,1e-4,.001,1e-4,1e-4,1e-4,.77,.455,.528,.028,2.648,1.417,3.922,1.536,3.205,.004,.23,.004,7.975,.001,.011,.01,.002,.06,.27,.013,.004,.001,1e-4,1e-4,.033,.002,1e-4,.023,.001,.001,1e-4,.002,.02,.007,.378,.004,.281,.002,.413,5.027,1.244,.85,1.199,.132,.444,.158,.386,2.668,.253,3.47,.613,1.73,.767,.17,.092,.269,.09,.326,.153,.08,.001,.001,.271,.002,1e-4,1e-4,.181,.003,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.006,.002,1e-4,1e-4,1e-4,.002,.001,.001,18.661,14.13,1.511,8.604,1e-4,1e-4,1e-4,1e-4,.007,1e-4,.763,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ba:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.692,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.933,.002,.044,1e-4,1e-4,.005,1e-4,.001,.147,.147,1e-4,.004,.482,.143,.604,.015,.158,.244,.135,.077,.08,.076,.061,.06,.081,.125,.052,.011,.008,.003,.008,.001,1e-4,.003,.003,.006,.002,.002,.001,.002,.002,.025,.001,.002,.002,.003,.002,.001,.002,1e-4,.001,.004,.005,.004,.007,.001,.012,1e-4,.001,.006,1e-4,.006,1e-4,.002,1e-4,.021,.003,.012,.011,.026,.004,.004,.006,.021,.001,.003,.02,.007,.023,.02,.005,1e-4,.016,.01,.014,.014,.002,.003,.001,.009,.001,1e-4,.001,1e-4,1e-4,1e-4,2.739,1.424,2.096,1.348,.183,.244,.115,.088,.621,.006,.016,3.259,.202,.093,.068,.404,.112,.175,.076,1,.273,.018,.005,.012,.081,3.093,.13,.026,.084,.041,.082,.063,.299,.879,.098,.434,.038,.036,.005,.017,.043,.504,1e-4,.196,.001,.016,.036,.445,4.844,.952,.303,.533,.952,2.488,.102,.15,1.49,1.18,1.231,3.558,1.237,2.847,1.277,.365,1e-4,1e-4,.244,.002,.001,.001,1e-4,1e-4,1e-4,.002,1e-4,1e-4,.004,1e-4,.002,.001,24.156,12.667,4.154,3.011,1e-4,1e-4,1e-4,1e-4,.005,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.235,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bar:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.604,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.871,.004,.418,1e-4,1e-4,.008,.002,.216,.21,.21,.009,.001,.803,.202,1.146,.023,.266,.394,.199,.121,.109,.119,.109,.117,.138,.187,.117,.02,.004,.005,.004,.003,1e-4,.352,.447,.201,.532,.247,.245,.332,.228,.204,.156,.293,.235,.338,.204,.224,.214,.034,.205,.697,.181,.119,.18,.276,.005,.01,.114,.021,1e-4,.021,1e-4,.003,.003,8.177,1.169,1.993,4.065,6.625,1.095,2.102,3.003,6.12,.162,.941,2,2.327,6.606,4.578,.55,.014,3.249,4.677,4.042,3.018,.854,1.171,.071,.239,.864,1e-4,.004,1e-4,1e-4,1e-4,.102,.003,.003,.002,.004,.004,.001,.001,.001,.002,1e-4,1e-4,.001,.002,1e-4,1e-4,.001,.001,.001,.014,.001,.001,.016,.001,.002,.009,.001,.001,.039,.001,.036,.116,.061,.007,.003,.001,.274,.073,.002,.002,.004,.027,.002,.002,.002,.004,.001,.001,.004,.002,.01,.016,.006,.001,.154,.002,.005,.001,.002,.002,.176,.002,.002,.002,1e-4,1e-4,.07,.891,.007,.006,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.007,.004,.006,.002,1e-4,1e-4,1e-4,1e-4,.001,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.103,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bcl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.379,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.071,.002,.217,.001,.003,.005,.002,.116,.161,.16,1e-4,.001,.914,.25,.911,.022,.337,.439,.274,.132,.116,.128,.121,.133,.144,.229,.055,.02,.017,.001,.017,.022,1e-4,.585,.233,.246,.128,.11,.148,.111,.118,.238,.077,.175,.149,.27,.198,.07,.296,.013,.12,.508,.14,.057,.048,.04,.004,.02,.015,.025,1e-4,.025,1e-4,1e-4,1e-4,15.454,1.486,.494,1.897,2.968,.126,4.169,.861,6.432,.033,2.688,2.392,2.068,10.392,5.039,1.872,.022,3.21,4.66,2.796,1.875,.174,.643,.021,1.752,.121,1e-4,.007,1e-4,1e-4,1e-4,.039,.006,.003,.003,.005,.004,.002,.003,.009,.002,.004,.002,.003,.004,.003,.002,.007,.003,.002,.009,.004,.002,.001,.002,.002,.008,.004,.003,.013,.011,.003,.001,.027,.035,.013,.004,.005,.003,.003,.006,.004,.006,.004,.003,.007,.019,.005,.003,.005,.018,.01,.022,.014,.003,.004,.003,.01,.004,.006,.004,.005,.002,.003,.002,1e-4,1e-4,.019,.136,.005,.006,1e-4,1e-4,1e-4,.011,.004,.01,.002,1e-4,.006,.003,.016,.003,1e-4,1e-4,1e-4,1e-4,.002,.003,.017,.012,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.01,.007,.034,.001,.008,.01,.006,.004,.002,.003,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],be:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.607,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.35,.001,.055,1e-4,1e-4,.006,1e-4,.05,.155,.156,.001,.002,.628,.121,.612,.009,.188,.295,.148,.088,.085,.087,.076,.074,.089,.156,.032,.017,.001,.001,.001,.001,1e-4,.009,.006,.026,.004,.005,.003,.019,.003,.047,.001,.002,.004,.009,.01,.004,.01,1e-4,.005,.013,.005,.003,.013,.004,.018,.001,.002,.002,1e-4,.002,1e-4,.003,1e-4,.046,.006,.014,.013,.042,.007,.007,.01,.04,.001,.006,.023,.014,.029,.035,.009,.001,.032,.024,.024,.019,.004,.003,.002,.006,.003,1e-4,.001,1e-4,1e-4,1e-4,2.314,1.922,1.481,1.13,.14,.481,1.007,.569,.351,.001,.001,1.93,.479,.541,.221,1.357,.128,.261,.085,.08,.203,.012,2.438,.059,.001,.01,.103,.048,.097,.076,.995,.141,.181,.137,.046,.12,.029,.02,.016,.019,.023,.001,1e-4,.081,1e-4,.017,.007,.023,7.12,.583,1.325,.884,1.382,1.613,.241,1.022,.011,.528,1.726,1.757,1.251,2.924,1.397,1.062,1e-4,1e-4,.283,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.021,1e-4,.002,.001,26.294,17.28,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.156,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.941,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.272,1e-4,.067,1e-4,.001,.014,1e-4,.006,.074,.074,1e-4,.001,.205,.047,.036,.005,.139,.215,.134,.072,.07,.074,.065,.069,.075,.087,.017,.007,.001,.001,.001,.001,1e-4,.006,.004,.005,.002,.003,.002,.004,.002,.007,.001,.002,.003,.003,.003,.002,.004,1e-4,.002,.006,.006,.002,.001,.002,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.009,1e-4,.1,.014,.029,.038,.115,.019,.024,.049,.081,.001,.007,.043,.023,.079,.071,.019,.001,.072,.065,.081,.029,.011,.014,.002,.014,.001,1e-4,.002,1e-4,1e-4,1e-4,.902,.534,1.035,.031,1e-4,.22,.29,2.243,.258,.137,.021,.553,.066,1.318,1e-4,.336,.009,.009,1e-4,.03,.023,1.891,.248,.639,.037,.011,.202,.05,.683,.024,.014,.375,.074,.252,.031,.13,24.792,6.19,.487,.175,1.097,.001,.677,.098,.808,.311,.975,.521,2.028,1e-4,1.424,1e-4,1e-4,.605,.237,.107,1.177,.742,1e-4,1e-4,.117,.003,3.031,1.138,1e-4,1e-4,.016,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,29.692,1e-4,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.859,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.276,.003,.256,1e-4,1e-4,.003,.003,.016,.486,.484,.001,1e-4,.638,.156,1.372,.022,.455,.969,.456,.237,.231,.247,.248,.25,.297,.612,.044,.019,.005,1e-4,.004,.004,1e-4,.449,.264,.227,.165,.234,.192,.164,.234,.179,.456,.316,.231,.458,.197,.135,.315,.005,.168,.606,.235,.049,.123,.109,.008,.231,.017,.005,1e-4,.005,1e-4,1e-4,1e-4,8.019,2.445,.575,1.178,6.318,.449,2.782,1.275,5.992,.203,1.688,4.658,3.419,6.494,6.015,1.447,.023,2.565,2.973,3.583,1.992,.459,.92,.044,.557,.136,.001,.001,.001,1e-4,1e-4,.108,.019,.014,.005,.005,.004,.006,.01,.005,.008,.002,.002,.012,.031,.002,.001,.002,.004,.003,.089,.007,.003,.003,.004,.004,.002,.001,.001,.007,.004,.002,.004,.052,.019,.003,.005,.023,.009,.014,.014,.008,.023,.003,.01,.005,.015,.003,.004,.019,.013,.011,.022,.006,.01,.007,.004,.018,.01,.009,.009,.011,.009,.011,.009,1e-4,1e-4,.048,.113,.02,.046,1e-4,.002,1e-4,.005,.001,.002,1e-4,.001,.032,.011,.078,.027,.001,1e-4,.001,.018,.002,1e-4,.017,.009,1e-4,.002,1e-4,1e-4,1e-4,1e-4,.037,.005,.097,1e-4,1e-4,.007,.003,.001,.003,.001,.002,.001,.006,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bjn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.274,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.352,.002,.406,1e-4,.001,.013,.001,.109,.199,.198,.002,.001,.988,.406,.819,.036,.185,.196,.136,.076,.062,.071,.054,.058,.057,.091,.102,.025,.002,.003,.002,.005,1e-4,.244,.391,.098,.173,.034,.031,.106,.136,.207,.121,.411,.116,.312,.12,.035,.341,.003,.133,.409,.258,.061,.026,.09,.002,.038,.007,.012,1e-4,.012,1e-4,1e-4,1e-4,19.717,2.113,.418,2.814,2.089,.126,3.097,2.135,6.446,.654,2.733,2.879,2.871,8.542,1.048,1.844,.007,3.384,2.985,3.613,4.514,.083,.972,.009,1.107,.035,1e-4,.001,1e-4,1e-4,1e-4,.03,.008,.005,.007,.006,.006,.006,.004,.006,.004,.008,.003,.003,.007,.001,.001,.002,.002,.002,.008,.003,.002,.002,.004,.002,.014,.001,.002,.005,.005,.002,.002,.012,.002,.002,.004,.012,.005,.004,.011,.007,.182,.006,.005,.004,.004,.003,.005,.009,.008,.005,.005,.003,.002,.001,.003,.006,.004,.004,.003,.003,.003,.002,.002,1e-4,1e-4,.019,.193,.007,.009,1e-4,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,.005,.002,.005,.002,.001,1e-4,1e-4,1e-4,.001,.004,.035,.03,.004,1e-4,1e-4,1e-4,.002,1e-4,.019,.008,.026,.006,.003,.008,.005,.003,.002,.001,.001,.001,.002,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bm:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.129,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.167,.007,.144,1e-4,.001,.013,.002,.256,.237,.237,.007,.003,.973,.158,.97,.007,.243,.224,.128,.052,.064,.06,.072,.055,.07,.12,.287,.015,1e-4,.01,1e-4,.005,1e-4,.444,.348,.111,.212,.105,.277,.105,.044,.094,.171,.429,.132,.368,.21,.091,.065,.003,.072,.446,.184,.079,.027,.078,.004,.046,.018,.018,1e-4,.014,1e-4,.017,1e-4,12.037,2.27,.406,1.816,3.589,1.305,1.615,.299,5.301,.672,3.384,3.18,2.268,7.22,3.282,.194,.029,2.428,2.045,1.645,2.796,.059,.96,.016,1.69,.107,1e-4,.005,1e-4,1e-4,1e-4,.237,.003,.001,.017,.017,.007,.015,.003,.008,.011,.026,.017,.001,1e-4,.018,.005,.013,.002,.004,.018,1.999,1e-4,1e-4,1e-4,.002,.172,1e-4,1.879,.012,.017,.004,1e-4,.054,.002,.001,.001,.002,.003,.005,.027,.322,.21,.005,.017,.007,.002,.001,.011,.002,.012,.238,.014,.415,.435,.001,.007,.005,.009,.01,.017,.003,1e-4,.001,.001,1e-4,1e-4,.064,1.039,.002,.033,.027,1e-4,1e-4,4.089,.016,.002,.003,1e-4,.433,1e-4,.024,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.065,.05,1e-4,1e-4,1e-4,1e-4,1e-4,.015,1e-4,.003,.233,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.319,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.406,.001,.076,1e-4,1e-4,.012,1e-4,.015,.057,.058,1e-4,.001,.196,.086,.029,.005,.005,.006,.004,.002,.002,.002,.002,.001,.002,.002,.016,.009,.001,.002,.001,.001,1e-4,.005,.003,.004,.002,.002,.002,.002,.002,.003,.002,.001,.002,.003,.002,.002,.003,1e-4,.002,.004,.003,.001,.001,.001,1e-4,1e-4,1e-4,.004,1e-4,.004,.001,.001,1e-4,.043,.007,.016,.016,.05,.009,.009,.017,.038,.001,.004,.022,.013,.034,.034,.01,.001,.031,.027,.033,.016,.005,.005,.002,.008,.001,1e-4,.003,1e-4,1e-4,1e-4,.359,.551,.299,.082,.002,.229,.186,2.436,.034,.152,.002,.333,.036,2.245,.026,.384,.008,.001,.001,.181,.002,1.31,.16,.34,.043,.053,.26,.209,.4,.015,.042,.46,.067,.212,.008,.16,1.542,.621,24.834,6.808,1.602,.04,.792,.149,1.148,.261,.867,1.261,2.631,.001,.874,.001,.001,.001,.381,.232,.963,.451,.001,.001,.701,1e-4,2.837,1.811,1e-4,1e-4,.013,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.017,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.991,1e-4,.03,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.169,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.69,1e-4,.002,1e-4,1e-4,.001,1e-4,1e-4,.01,.01,1e-4,1e-4,.002,.003,.005,.001,.003,.004,.003,.002,.001,.002,.001,.001,.002,.002,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.001,.001,.001,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.002,1e-4,.012,.002,.004,.004,.015,.003,.003,.006,.011,1e-4,.001,.005,.003,.01,.01,.003,1e-4,.008,.008,.01,.004,.001,.002,1e-4,.002,1e-4,.001,1e-4,.001,1e-4,1e-4,.3,.21,1.61,.004,1.096,.171,.232,.056,.006,.125,.009,7.85,.044,.821,.01,.147,.305,1.571,.233,1.086,.826,.17,1.379,.052,.974,.101,.175,.065,.005,.008,.253,.318,.893,.39,1.207,.915,.217,.014,2.41,.028,.071,.06,.002,.023,.001,.018,.001,.001,.003,.913,2.028,.112,1.086,.005,.001,.055,.005,.003,.951,.005,10.217,21.49,2.602,.016,1e-4,1e-4,.014,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,32.905,1e-4,.024,.009,.002,.006,.004,.005,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.008,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bpy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.902,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.282,1e-4,.009,1e-4,1e-4,.224,1e-4,.002,.281,.281,1e-4,1e-4,.306,.253,.183,.08,.005,.009,.002,.004,.002,.003,.003,.003,.003,.003,.197,1e-4,.001,.001,.001,1e-4,1e-4,.016,.008,.017,.005,.005,.002,.004,.002,.003,.003,.005,.003,.007,.007,.001,.007,1e-4,.004,.019,.004,.016,.002,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.014,1e-4,.118,.01,.016,.026,.05,.006,.015,.031,.057,.004,.009,.031,.017,.064,.06,.015,.001,.059,.03,.047,.04,.005,.005,.001,.018,.002,1e-4,.016,1e-4,1e-4,1e-4,.094,.582,.295,.004,.001,.199,.278,1.651,.006,.325,.001,.49,.119,1.057,.003,.285,1e-4,1e-4,1e-4,.034,.032,.592,.143,.798,.084,.129,.075,.036,.484,.004,.03,.329,.051,.128,.007,.019,1.405,.659,24.309,6.387,2.166,.231,.814,.355,.961,.379,1.131,.99,2.941,.034,.919,.004,.001,.001,.243,.193,.791,1.05,1e-4,1e-4,.626,1e-4,4.392,1.335,1e-4,1e-4,.04,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.31,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],br:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.678,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.255,.004,.515,1e-4,1e-4,.007,.002,.663,.246,.246,.001,.002,.881,.746,.901,.014,.258,.444,.187,.109,.115,.122,.109,.12,.152,.228,.115,.024,.015,.004,.016,.003,1e-4,.347,.279,.201,.205,.261,.098,.212,.134,.164,.075,.201,.168,.253,.109,.059,.199,.006,.146,.289,.136,.097,.091,.051,.019,.032,.015,.024,1e-4,.024,1e-4,.001,1e-4,9.146,1.127,.833,2.777,10.42,.294,1.799,2.456,3.655,.167,1.352,2.97,1.505,5.492,4.696,.867,.019,5.665,2.33,3.448,2.744,1.784,.434,.03,.247,2.302,1e-4,.004,1e-4,.001,1e-4,.1,.012,.008,.007,.005,.004,.003,.003,.004,.005,.002,.002,.004,.005,.003,.002,.003,.002,.002,.011,.005,.002,.002,.002,.002,.074,.002,.003,.005,.005,.001,.004,.021,.015,.009,.005,.007,.003,.004,.009,.013,.045,.076,.018,.003,.013,.003,.005,.011,.591,.009,.012,.018,.007,.006,.004,.009,.467,.008,.021,.017,.008,.005,.006,1e-4,1e-4,.048,1.28,.01,.011,1e-4,.001,1e-4,.004,.002,.002,.002,1e-4,.032,.015,.039,.015,.001,.001,1e-4,.001,.001,.006,.009,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.009,.096,.003,.001,.003,.002,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bs:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.108,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.139,.002,.313,.001,.001,.017,.002,.011,.204,.204,.001,.006,.915,.157,1.176,.034,.332,.467,.264,.159,.151,.151,.132,.126,.142,.226,.068,.015,.006,.007,.006,.001,1e-4,.156,.174,.174,.143,.072,.074,.155,.136,.152,.073,.147,.082,.163,.218,.118,.225,.003,.11,.283,.122,.105,.088,.031,.007,.007,.073,.025,1e-4,.025,1e-4,.008,1e-4,8.723,.95,.762,2.331,6.777,.26,1.369,.582,7.412,3.867,2.673,2.682,2.205,4.994,6.632,1.941,.005,3.955,3.612,3.234,3.103,2.415,.036,.017,.061,1.207,1e-4,.006,1e-4,1e-4,1e-4,.038,.004,.003,.002,.002,.001,.003,.388,.002,.001,.001,.001,.016,.618,.001,1e-4,.003,.172,.002,.018,.001,1e-4,.001,.001,.002,.003,.001,.001,.006,.003,.004,.002,.035,.482,.001,.001,.003,.001,.001,.002,.001,.008,.001,.002,.001,.003,.001,.001,.007,.004,.003,.004,.002,.003,.004,.002,.004,.002,.002,.003,.006,.012,.366,.002,1e-4,1e-4,.02,.032,1.199,.874,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,.014,.006,.021,.008,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bug:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.068,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.164,1e-4,.016,1e-4,1e-4,.003,.001,.137,.016,.016,1e-4,.001,.196,1.935,1.044,.004,.035,.02,.023,.01,.009,.007,.007,.006,.007,.013,.007,.002,1e-4,.001,1e-4,1e-4,1e-4,.516,.311,.434,.185,.139,.134,.304,.324,.039,.055,.029,.369,.412,.063,.111,1.316,.017,.157,.558,.13,.016,.233,.012,.002,.073,.002,.007,1e-4,.007,1e-4,1e-4,1e-4,9.887,.241,1.633,1.832,7.179,.088,.757,.513,7.161,.111,1.126,1.683,2.724,6.291,2.861,1.308,.04,7.537,3.873,3.7,4.723,.375,1.036,.149,1.531,.172,1e-4,.002,1e-4,1e-4,1e-4,.047,.009,.005,.004,.009,.007,.006,.004,.009,.039,.01,.038,.003,.005,.002,.001,.004,.012,.007,.011,.011,.02,.001,.02,.012,.019,.011,.012,.002,.001,.006,.003,.004,.003,.047,.002,.016,.005,.004,.01,.405,2.36,.01,.013,.003,.001,.008,.004,.008,.004,.008,.005,.176,.005,.002,.003,.012,.005,.008,.007,.003,.003,.004,.003,1e-4,1e-4,.007,2.887,.002,.04,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.003,.023,.014,.001,1e-4,1e-4,1e-4,1e-4,.007,.008,.007,.001,.006,1e-4,1e-4,1e-4,1e-4,.048,.15,.04,1e-4,1e-4,.002,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],bxr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.49,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.129,.001,.08,1e-4,1e-4,.012,1e-4,.001,.147,.147,1e-4,.002,.553,.131,.523,.004,.151,.243,.109,.074,.068,.074,.065,.062,.079,.12,.022,.018,.003,.001,.002,.001,1e-4,.004,.002,.007,.001,.002,.002,.002,.004,.037,.001,.001,.002,.003,.003,.003,.003,1e-4,.002,.004,.003,.001,.011,.001,.019,.001,1e-4,.001,1e-4,.001,1e-4,.002,1e-4,.037,.005,.011,.009,.029,.005,.007,.031,.027,.001,.005,.019,.012,.022,.025,.008,.001,.023,.018,.017,.016,.003,.002,.001,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,2.392,.859,1.489,1.628,.046,1.574,.057,.037,.549,.002,.003,.546,.265,4.264,.148,.174,.118,.207,.029,.069,.123,.028,.013,.033,.034,.005,.055,.03,.09,.073,.049,.037,.094,.079,.088,.076,.026,.12,.011,.016,.032,.306,.001,.058,.001,.071,.033,1.461,5.842,1.346,.152,2.003,2.072,.704,.52,.475,1.576,1.562,.254,3.078,.893,3.534,3.045,.105,1e-4,1e-4,.188,.005,.003,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,.001,1e-4,.006,.002,27.741,14.028,2.178,.307,1e-4,1e-4,1e-4,.001,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.003,.075,.002,.001,.004,.002,.001,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cdo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.899,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.597,.001,.273,1e-4,1e-4,.004,1e-4,.004,.549,.551,1e-4,.001,.624,3.929,.732,.03,.251,.611,.29,.189,.163,.163,.16,.156,.166,.215,.133,.012,.001,1e-4,.001,.002,1e-4,.053,.117,.299,.251,.017,.027,.504,.23,.082,.03,.071,.135,.356,.159,.039,.068,.004,.027,.229,.101,.044,.025,.062,.001,.013,.003,.001,1e-4,.001,1e-4,.001,1e-4,.822,.392,1.504,1.05,.748,.033,6.691,1.959,3.832,.006,1.877,.724,.396,5.597,.623,.123,.005,.411,2.143,.557,2.118,.037,.065,.039,.184,.014,1e-4,1e-4,1e-4,.001,1e-4,.562,.653,.229,.604,.418,.298,.318,.129,.175,.171,.118,.212,.31,.409,.113,.98,.125,.066,.036,.255,.106,.397,.142,.124,.138,.172,.096,.139,.338,.116,.144,.186,.41,1.078,.77,.114,1.515,.081,.097,.077,.628,.714,1.044,.603,1.183,1.024,.119,.129,.135,.183,.537,1.615,1.19,.067,.211,.1,.216,1.217,.179,.199,.306,.119,.135,.091,1e-4,1e-4,.041,7.531,2.472,1.618,.001,.001,1e-4,.002,.002,.001,2.018,1e-4,.014,.006,.01,.004,1e-4,1e-4,1e-4,.001,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.757,.108,.212,.359,1.361,.793,.503,.549,.397,.002,.003,.004,.001,1e-4,.218,.03,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ce:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.477,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.593,1e-4,.003,1e-4,1e-4,.014,1e-4,1e-4,.462,.462,1e-4,.166,.461,.186,.813,.002,.175,.094,.109,.14,.045,.029,.022,.02,.031,.028,.033,.001,1e-4,1e-4,1e-4,.004,1e-4,1e-4,1e-4,.145,1e-4,1e-4,1e-4,1e-4,1e-4,.005,1e-4,.004,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.145,.144,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.001,.001,.002,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.704,1.438,1.762,1.875,.015,2.329,.449,.169,.835,.009,.342,.05,1.751,.164,.611,.21,.068,.113,.056,.04,.434,.02,.006,.019,.028,.002,.404,.034,.196,.056,.049,.075,.184,.229,.057,.026,.146,.02,.017,.02,.129,.002,1e-4,.004,1e-4,.008,.009,.018,7.603,.877,1.017,.93,.629,1.84,.05,.386,1.788,1.009,1.778,2.253,.873,3.199,2.291,.075,1e-4,1e-4,.018,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,1e-4,1e-4,1e-4,28.632,13.675,1e-4,.638,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.405,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ceb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.228,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.341,1e-4,.15,1e-4,1e-4,.002,1e-4,.016,.068,.068,1e-4,1e-4,1.15,.441,1.259,.001,.028,.059,.035,.022,.021,.022,.021,.021,.026,.036,.037,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1.098,.168,.578,.161,.203,.063,.093,.198,.052,.044,.126,.151,.236,.118,.082,.261,.02,.131,.295,.118,.081,.041,.087,.005,.015,.017,1e-4,1e-4,1e-4,1e-4,.001,1e-4,15.378,2.318,.367,1.953,2.974,.093,5.126,1.479,4.851,.069,2.449,3.4,2.839,8.407,4.701,1.442,.019,2.43,4.783,3.214,2.941,.169,.623,.03,1.539,.068,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.059,.004,.005,.004,.004,.003,.008,.005,.003,.002,.001,.004,.009,.002,.004,.002,.003,1e-4,.003,.001,.001,.001,.001,.01,.005,.001,.002,.001,.001,.002,.006,.184,.019,.007,.005,.008,.019,.003,.009,.007,.025,.004,.049,.001,.018,.002,.008,.279,.015,.004,.013,.004,.003,.007,.001,.046,.006,.007,.005,.006,.004,.006,.001,1e-4,1e-4,.452,.166,.097,.047,.001,1e-4,.003,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,.031,.01,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.019,.018,.003,.002,1e-4,1e-4,1e-4,1e-4,.017,.012,.008,.002,.001,.002,.001,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ch:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.587,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.467,.008,.286,1e-4,1e-4,.018,1e-4,1.077,.189,.189,1e-4,1e-4,1.14,.532,1.257,.007,.648,.639,.504,.182,.3,.173,.195,.169,.204,.218,.042,.013,1e-4,.001,1e-4,.005,1e-4,.26,.146,.257,.104,.401,.111,.564,.173,.223,.038,.106,.097,.317,.12,.025,.199,.01,.074,.256,.153,.279,.066,.06,.002,.047,.001,1e-4,1e-4,1e-4,1e-4,.002,1e-4,10.968,.472,.524,1.575,4.239,.44,3.776,1.808,6.943,.028,1.21,2.019,1.749,8.291,5.798,1.592,.018,1.795,5.81,3.872,3.565,.141,.106,.012,.845,.055,1e-4,1e-4,1e-4,1e-4,1e-4,.016,.008,.003,.001,.002,.01,.001,1e-4,.003,1e-4,1e-4,1e-4,.002,.004,1e-4,1e-4,.006,.001,1e-4,.005,.003,1e-4,1e-4,.001,1e-4,.011,1e-4,.003,.001,1e-4,.002,.001,1e-4,.02,.002,.003,.001,.974,1e-4,.004,.003,.012,1e-4,1e-4,.001,.009,1e-4,1e-4,.002,.432,1e-4,.044,1e-4,.001,.003,.001,.002,.002,.006,.007,.002,.002,.001,.003,1e-4,1e-4,.001,1.51,.004,.013,1e-4,1e-4,1e-4,.004,1e-4,.002,1e-4,1e-4,.005,.005,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.002,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.012,1e-4,1e-4,.003,.002,.001,1e-4,.001,.001,.002,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cho:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.477,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.446,.089,1.242,1e-4,1e-4,1e-4,1e-4,1e-4,.621,.621,1e-4,1e-4,.799,1e-4,.532,1e-4,1e-4,.177,.089,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.355,.266,1e-4,1e-4,1e-4,.089,1e-4,.444,1e-4,1.154,1e-4,1e-4,1e-4,.089,.799,.177,1e-4,.177,1e-4,.355,.177,.177,.444,1e-4,1e-4,.355,1e-4,1e-4,.089,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.955,1.154,.799,1e-4,2.839,.177,.621,7.365,8.252,1e-4,5.146,2.662,3.549,3.727,5.413,1.597,1e-4,.799,3.638,5.146,1.597,1.065,.089,1e-4,1.331,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.154,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.266,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.177,1e-4,1e-4,1e-4,1.154,1e-4,.089,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],chr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.394,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.115,.002,.174,1e-4,.001,.005,.001,.018,.095,.095,1e-4,.001,.499,.081,.439,.009,.086,.076,.045,.025,.02,.027,.02,.018,.025,.029,.03,.019,.002,.001,.003,.002,1e-4,.037,.02,.038,.014,.023,.017,.012,.014,.019,.011,.01,.013,.028,.014,.01,.02,.002,.016,.034,.027,.013,.008,.015,.002,.005,.003,.065,1e-4,.065,1e-4,.004,1e-4,.692,.092,.264,.31,.823,.092,.184,.209,.663,.01,.064,.374,.188,.502,.498,.163,.016,.479,.482,.523,.235,.107,.076,.023,.123,.021,1e-4,.028,1e-4,1e-4,1e-4,.027,.355,.722,.213,.313,.628,.115,.06,.021,.056,.084,.04,.154,1.876,13.554,13.952,.082,.032,.441,.837,.268,.161,.041,1.986,.138,.561,.191,.664,.014,.045,.005,.13,2.057,.126,1.445,.138,1.031,.39,.904,.381,.457,1.048,.569,.458,.748,.433,.062,1.427,.213,.207,.29,.574,.831,.687,.218,.077,.387,.051,.016,.01,.004,.004,1.405,.134,1e-4,1e-4,.009,.006,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.003,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,27.238,.017,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],chy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.992,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.662,.002,.655,1e-4,1e-4,1e-4,1e-4,4.281,.488,.49,.012,.039,1.209,.935,1.193,.009,.099,.186,.07,.039,.048,.046,.051,.032,.087,.113,.294,.06,.044,.012,.043,.009,1e-4,.28,.143,.271,.068,.058,.046,.056,.705,.041,.084,.094,.075,.71,.203,.133,.21,.01,.123,.333,.369,.109,.326,.043,.02,.015,.015,.017,1e-4,.017,1e-4,1e-4,.005,5.694,.454,.435,.594,8.431,.195,.654,4.544,1.753,.053,1.313,1.118,1.931,4.523,6.14,.553,.043,1.203,5.097,4.735,.637,1.842,.224,.461,.27,.08,.002,.003,.002,1e-4,1e-4,.024,.014,.009,1e-4,.002,1e-4,1e-4,1e-4,.002,.113,1e-4,.002,.007,.005,1e-4,1e-4,.005,.002,1e-4,.058,.012,1e-4,.003,.029,.003,1e-4,1e-4,1e-4,.002,1e-4,.002,.002,.044,1.384,.696,.009,.027,.002,.002,.039,.005,3.484,.98,.162,.003,.009,.002,.017,.009,.003,.005,1.282,.993,.003,.142,1e-4,.017,1e-4,.002,.009,.007,1e-4,.007,.005,1e-4,1e-4,.014,8.846,.043,.545,1e-4,.005,.046,1e-4,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.031,.009,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.019,.003,.017,1e-4,1e-4,.003,.002,1e-4,1e-4,1e-4,.002,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ckb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.676,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.035,.002,.062,1e-4,1e-4,.003,1e-4,.002,.131,.13,.001,.001,.011,.034,.374,.013,.01,.014,.008,.005,.004,.004,.004,.004,.005,.007,.05,1e-4,.002,.002,.002,1e-4,1e-4,.009,.006,.007,.006,.004,.004,.004,.004,.005,.002,.003,.004,.007,.005,.003,.007,.001,.005,.01,.007,.002,.002,.003,.001,.001,.001,.004,1e-4,.004,1e-4,.003,1e-4,.058,.008,.018,.017,.063,.009,.012,.017,.048,.001,.008,.031,.019,.043,.045,.012,.001,.045,.029,.036,.019,.006,.008,.003,.011,.002,1e-4,.001,1e-4,1e-4,1e-4,.386,.193,.124,.067,1.187,1.207,3.947,.41,3.556,.028,.015,.002,5.576,.003,1.191,.005,.006,.005,.002,.004,.001,6.665,.001,.002,.236,.001,.002,.008,.002,.002,.001,.006,.161,.192,.114,.062,.112,.064,.707,4.366,1.564,2.13,1.551,.015,.253,.092,.303,2.261,.008,2.411,.524,1.151,.651,.531,.001,.004,.003,.092,.048,.036,.003,.003,.823,.003,1e-4,1e-4,.028,.007,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,15.514,10.978,4.45,13.188,1e-4,1e-4,1e-4,1e-4,.002,.001,.375,.002,1e-4,.002,.001,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,.063,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],co:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.449,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.862,.008,.387,1e-4,1e-4,.006,.001,.763,.212,.212,.003,.001,.925,.075,.859,.019,.189,.28,.146,.097,.087,.101,.081,.085,.107,.132,.097,.026,.009,.003,.01,.004,1e-4,.325,.102,.335,.094,.091,.089,.126,.077,.208,.025,.02,.156,.189,.082,.052,.201,.016,.093,.268,.121,.17,.078,.019,.022,.005,.013,.032,1e-4,.032,1e-4,.016,1e-4,8.602,.557,3.322,3.101,4.329,.784,1.174,1.381,10.092,.419,.069,2.83,1.864,5.457,2.618,1.888,.179,4.342,3.458,4.676,6.626,.877,.033,.017,.063,.595,1e-4,.005,1e-4,1e-4,1e-4,.058,.006,.004,.002,.003,.001,.001,.001,.004,.001,.001,1e-4,.002,.002,.001,1e-4,.002,.001,.001,.003,.001,.001,1e-4,1e-4,.001,.039,1e-4,.001,.001,.001,1e-4,.001,.789,.005,.002,.002,.004,.001,.002,.004,.94,.016,.001,.007,.251,.004,.001,.002,.005,.006,.189,.011,.005,.003,.002,.024,.003,.252,.004,.007,.006,.005,.002,.004,1e-4,1e-4,.05,2.469,.006,.004,1e-4,1e-4,1e-4,.001,.001,.002,1e-4,1e-4,.032,.015,.008,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.005,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.004,.04,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.443,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.088,.004,.073,1e-4,1e-4,.02,1e-4,.023,.121,.12,1e-4,.002,.629,.081,.971,.012,.119,.193,.101,.064,.076,.066,.061,.066,.062,.105,.063,.027,1e-4,1e-4,1e-4,.015,1e-4,.161,.04,.143,.045,.195,.034,.029,.053,.081,.084,.151,.056,.235,.167,.103,.138,.009,.033,.115,.119,.03,.034,.067,.012,.01,.004,.05,1e-4,.047,1e-4,.014,1e-4,9.914,.233,4.69,1.145,5.906,.235,.326,1.052,10.924,.134,6.149,1.256,2.551,4.689,5.033,1.928,.073,2.706,3.099,5.744,.924,.192,2.967,.038,.312,.067,1e-4,1e-4,1e-4,.001,1e-4,.088,.031,.077,.099,.046,.115,.007,.048,.054,.011,.091,.103,.074,.037,.073,.005,.766,.405,.312,.295,.175,.052,.036,.009,.01,.038,.001,.005,.002,1e-4,.001,.021,.037,.111,.205,.026,.084,.087,.065,.093,.076,.063,.057,.032,.002,.144,.111,.096,.017,.078,.065,.232,.037,.005,1e-4,1e-4,.021,.005,.022,.02,.014,.002,.005,.005,1e-4,1e-4,.046,.821,.023,.077,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1.861,.08,.005,.002,.009,.005,1e-4,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],crh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.666,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.545,.003,.2,1e-4,.003,.006,1e-4,.011,.498,.498,.001,.003,.581,.375,1.265,.029,.54,.844,.447,.25,.254,.244,.225,.224,.237,.353,.036,.017,.017,.002,.017,.003,1e-4,.292,.227,.115,.122,.258,.045,.081,.079,.299,.014,.172,.079,.19,.068,.102,.074,.317,.092,.196,.162,.157,.161,.003,.13,.089,.035,.001,1e-4,.001,1e-4,1e-4,1e-4,7.42,1.383,.39,2.173,6.493,.253,.439,.324,6.527,.039,1.974,3.301,1.629,5.164,1.476,.486,.955,4.625,3.637,2.416,1.149,1.071,.013,.004,1.959,.598,1e-4,1e-4,1e-4,.001,1e-4,.415,.022,.015,.022,.008,.007,.005,.065,.008,.005,.004,.008,.007,.007,.003,.008,.005,.004,.004,.069,.234,.004,.026,.004,.006,.008,.008,.005,.067,.049,.094,1.497,.026,.01,.278,.006,.008,.006,.005,.416,.004,.006,.005,.014,.004,.007,.006,.006,.149,5.025,.014,.011,.012,.067,.295,.006,.022,.01,.019,.017,.605,.022,.039,.006,1e-4,1e-4,.035,2.796,4.495,1.1,1e-4,1e-4,1e-4,.001,.001,1e-4,.001,1e-4,.003,.002,.256,.079,.004,.002,1e-4,.004,.008,.013,.021,.017,1e-4,.001,1e-4,1e-4,.002,1e-4,.015,.009,.398,.007,.004,.019,.009,.005,.004,.004,.003,.002,.004,.001,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],csb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.825,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.296,.002,.584,1e-4,1e-4,.003,.001,.009,.331,.334,.002,1e-4,.877,.236,1.256,.065,.271,.637,.291,.193,.181,.174,.153,.187,.256,.339,.093,.04,.024,.004,.024,.003,1e-4,.093,.136,.203,.135,.053,.045,.141,.038,.163,.132,.28,.122,.184,.116,.024,.275,.002,.1,.23,.118,.014,.056,.218,.119,.003,.085,.006,1e-4,.007,1e-4,.002,1e-4,4.612,.986,3.096,2.007,3.546,.161,1.136,.946,4.255,1.343,2.142,1.634,1.571,3.378,2.668,1.384,.004,3.469,3.152,2.405,.834,.037,2.89,.011,.614,4.079,1e-4,.001,1e-4,1e-4,1e-4,.169,.025,.879,.003,.332,.515,.031,.005,.001,.002,.001,.001,.002,.002,.001,.005,.001,.013,.102,.134,.005,.002,.001,.001,.003,.049,.005,.012,.006,.026,.025,.003,.016,.006,.006,.677,.002,.001,.001,.001,.003,1.17,.001,2.19,.001,.003,1e-4,.002,.009,.003,2.322,.76,1.31,.003,.004,.001,.007,.615,.005,.077,.465,.007,.003,.002,1e-4,1e-4,.14,9.122,.543,1.724,1e-4,.001,.002,.003,.001,.001,1e-4,1e-4,.006,.002,.024,.023,1e-4,1e-4,1e-4,.001,.002,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.197,1e-4,.001,.002,.002,.001,.001,.001,.001,.001,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.095,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.137,1e-4,.05,1e-4,.001,.001,1e-4,.002,.026,.026,.001,1e-4,.049,.014,.024,.015,.131,.259,.12,.082,.083,.082,.076,.078,.096,.129,.009,1e-4,.001,1e-4,.001,1e-4,1e-4,.003,.001,.006,.001,.001,.001,1e-4,.006,.004,1e-4,.001,.001,.002,.002,.004,.001,1e-4,.002,.004,.002,.001,.001,1e-4,.001,1e-4,1e-4,.001,1e-4,.001,1e-4,.003,1e-4,.023,.002,.008,.007,.018,.001,.005,.004,.017,.005,.009,.01,.003,.016,.015,.003,.001,.01,.011,.009,.011,.004,1e-4,.002,.002,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1.938,4.019,2.29,.582,.265,.184,.28,.33,.175,.126,2.698,.002,1.962,.002,.135,1e-4,.124,.906,.12,.072,1.561,1e-4,.139,.857,.034,2.179,.103,.119,.097,.099,.095,.124,.126,.438,.049,1.297,.06,.96,.01,.295,.011,.359,.005,.236,.002,.101,.019,.025,3.114,.623,1.373,.62,1.221,.086,.518,.573,2.627,.002,1.325,1.567,.924,2.121,2.823,.585,1e-4,1e-4,.514,.003,.006,.003,1e-4,1e-4,1e-4,.002,1e-4,.001,.408,1e-4,.016,.012,21.25,18.718,.249,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.51,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1.747,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.247,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.093,.001,.059,1e-4,1e-4,.007,1e-4,.003,.152,.151,1e-4,.002,.478,.273,.79,.011,.204,.309,.183,.104,.101,.1,.081,.081,.096,.17,.076,.008,.002,.002,.002,.003,1e-4,.004,.003,.005,.002,.002,.002,.002,.002,.019,.001,.001,.002,.003,.002,.002,.003,1e-4,.003,.005,.003,.002,.006,.001,.01,.001,1e-4,.013,1e-4,.013,1e-4,.001,1e-4,.027,.004,.007,.008,.027,.004,.006,.007,.02,.001,.004,.016,.009,.019,.018,.006,1e-4,.019,.014,.015,.011,.003,.002,.002,.004,.001,1e-4,.005,1e-4,1e-4,1e-4,3.257,1.78,2.381,2.851,.156,1.36,.178,.773,1.001,.006,.006,.869,.319,.035,.373,.165,.161,.088,.098,.049,.312,2.25,.007,.017,.069,.007,.174,.039,.101,.06,.095,.155,.212,.157,.129,.054,.061,.066,.005,1.16,.101,.002,1e-4,.045,.001,.021,.156,.041,4.16,.372,1.295,.368,.304,3.139,.041,.13,2.185,.64,1.311,1.785,.994,3.619,1.18,1.135,1e-4,1e-4,.101,1.175,3.79,.002,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.01,1e-4,.002,.001,24.733,13.586,.004,.088,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.282,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],cy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.628,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.48,.003,.545,1e-4,.001,.007,.002,.872,.259,.258,.001,.001,.777,.194,.96,.016,.363,.487,.244,.138,.133,.135,.125,.126,.164,.239,.149,.081,.022,.001,.022,.003,1e-4,.36,.242,.56,.267,.155,.163,.331,.126,.112,.06,.033,.279,.433,.133,.073,.238,.004,.18,.303,.196,.061,.026,.092,.003,.167,.006,.004,1e-4,.004,1e-4,.001,1e-4,7.082,.905,1.506,6.475,6.263,2.165,2.494,2.4,4.773,.015,.114,3.901,1.419,6.217,4.277,.556,.008,5.57,2.092,2.13,1.941,.086,2.82,.025,5.712,.034,1e-4,.001,1e-4,1e-4,1e-4,.074,.005,.003,.002,.002,.001,.001,.001,.001,.001,.001,.001,.001,.002,.001,.001,.001,.001,.001,.021,.002,.001,1e-4,.001,.002,.033,.001,.001,.007,.009,.001,.001,.033,.007,.059,.003,.003,.001,.001,.003,.004,.015,.016,.004,.001,.004,.01,.012,.004,.003,.003,.004,.074,.043,.005,.016,.003,.006,.003,.002,.004,.002,.002,.001,1e-4,1e-4,.036,.221,.003,.06,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,.007,.004,.014,.005,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,.072,.001,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],din:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.698,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.927,1e-4,.06,1e-4,.003,.013,1e-4,.015,.171,.17,1e-4,1e-4,.878,.077,.901,.027,.297,.229,.151,.055,.064,.078,.053,.048,.049,.126,.018,.013,.002,1e-4,.002,.005,1e-4,.424,.153,.093,.101,.075,.019,.074,.021,.051,.069,.324,.085,.16,.163,.021,.306,.002,.087,.062,.288,.034,.007,.069,1e-4,.136,.003,.027,1e-4,.027,1e-4,1e-4,1e-4,5.438,.999,2.9,1.603,4.394,.024,.521,1.912,3.749,.362,4.818,2.02,1.512,4.26,1.668,1.035,.003,2.29,.155,3.595,3.428,.022,.527,.011,2.005,.013,1e-4,1e-4,1e-4,1e-4,1e-4,.036,.001,.001,1e-4,.027,1e-4,.026,1e-4,1.487,1e-4,.005,1.04,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,2.319,1e-4,1e-4,1e-4,.001,.002,1e-4,1.678,.006,.006,1e-4,1e-4,.01,1e-4,1e-4,.222,1.181,1e-4,1e-4,.001,.004,.001,1e-4,3.25,1e-4,.001,.006,1.508,.003,.002,.006,.002,1e-4,.011,1.021,.001,.004,.002,1e-4,.001,.002,.002,1e-4,.002,1e-4,1e-4,.016,6.971,1e-4,1.041,.02,1e-4,1e-4,4.193,1e-4,1e-4,1.487,1e-4,.027,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.062,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],diq:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.719,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.354,.008,.4,1e-4,1e-4,.009,1e-4,.031,.299,.3,.001,.003,.98,.165,1.27,.045,.227,.302,.162,.087,.08,.089,.076,.082,.096,.17,.156,.035,.026,.008,.027,.01,1e-4,.309,.187,.135,.206,.243,.108,.12,.188,.05,.033,.209,.106,.271,.167,.06,.167,.062,.13,.271,.259,.059,.085,.06,.052,.088,.128,.014,1e-4,.014,1e-4,.002,.001,7.586,1.293,.911,2.514,8.148,.439,.62,.759,4.61,.11,2.125,1.599,2.095,4.93,3.468,.588,.377,4.808,2.018,2.359,1.695,.626,1.106,.479,3.36,1.081,1e-4,.002,1e-4,1e-4,1e-4,.078,.018,.011,.012,.02,.015,.019,.078,.016,.004,.018,.002,.014,.004,.014,.003,.006,.005,.003,.011,.005,.006,.005,.002,.009,.023,.002,.004,.022,.016,.065,.865,.032,.01,.013,.005,.007,.004,.006,.242,.014,.032,2.716,.012,.007,.008,.29,.015,.191,2.379,.013,.015,.01,.006,.021,.004,.009,.01,.007,.128,.093,.009,.008,.006,1e-4,1e-4,.039,3.563,2.668,.816,1e-4,.001,1e-4,.005,.003,.002,.002,1e-4,.03,.013,.034,.014,.001,1e-4,.001,.012,.005,.037,.126,.091,.007,.013,.003,1e-4,1e-4,1e-4,.019,.012,.072,.001,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],dsb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.783,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.853,.003,.608,1e-4,1e-4,.007,.002,.016,.311,.311,.022,.002,.839,.138,1.194,.023,.287,.411,.214,.128,.124,.131,.109,.104,.125,.201,.084,.035,.006,.007,.007,.003,1e-4,.155,.168,.123,.122,.077,.058,.102,.068,.054,.115,.164,.108,.197,.144,.038,.256,.004,.113,.246,.119,.042,.025,.244,.005,.007,.075,.008,1e-4,.008,1e-4,.002,1e-4,6.833,1.047,1.719,1.818,5.619,.234,.977,.835,3.647,3.795,2.962,1.965,2.079,4.006,5.923,1.615,.008,3.224,3.399,2.803,2.458,.071,3.327,.021,1.623,1.195,1e-4,.003,1e-4,.001,1e-4,.148,.049,.931,.01,.22,.006,.005,.266,.005,.002,.002,.002,.017,.029,.002,.002,.007,.003,.004,.026,.004,.064,.004,.004,.009,.024,.008,1.886,.043,.009,.04,.009,.064,.625,.008,.004,.017,.003,.003,.004,.006,.017,.003,.004,.001,.008,.001,.002,.019,.008,.014,1.225,.005,.009,.011,.005,.012,.012,.395,.009,.027,.02,.616,.016,1e-4,1e-4,.039,1.311,1.431,3.692,1e-4,1e-4,.001,.004,.001,.001,.001,1e-4,.017,.009,.074,.029,.001,1e-4,1e-4,.002,.007,.043,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.012,.141,.001,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],dty:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.724,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.716,.001,.019,1e-4,1e-4,.003,1e-4,.008,.063,.066,.001,1e-4,.189,.033,.052,.008,.003,.002,.001,.001,.001,.001,.001,.001,.001,.001,.027,.004,.012,.001,.012,.001,1e-4,.002,.002,.002,.001,.001,.001,.001,.001,.001,.001,.001,.001,.002,1e-4,.001,.001,1e-4,.001,.001,.002,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.002,1e-4,.002,1e-4,1e-4,1e-4,.017,.012,.004,.005,.014,.002,.003,.006,.016,.001,.004,.007,.008,.013,.011,.003,1e-4,.019,.008,.009,.004,.001,.003,1e-4,.003,.001,1e-4,.015,1e-4,1e-4,1e-4,.87,.744,.354,.069,1e-4,.295,.114,1.106,.404,.216,.006,1.008,.08,2.434,1e-4,.171,.009,.001,.001,.025,.014,1.53,.174,.539,.045,.068,.25,.269,.443,.023,.04,.304,.083,.214,.028,.182,24.937,7.5,.641,.298,1.687,.033,.816,.129,.459,.371,1.179,1.062,2.109,.002,1.084,1e-4,1e-4,.578,.275,.191,1.004,.659,.001,1e-4,.01,.01,3.197,1.534,1e-4,1e-4,.004,.001,.001,1e-4,1e-4,1e-4,1e-4,.003,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.897,1e-4,.034,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],dv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.449,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.782,.003,.057,1e-4,1e-4,.005,1e-4,.005,.068,.068,1e-4,.001,.01,.02,.58,.003,.08,.111,.068,.041,.031,.037,.03,.031,.035,.052,.01,.001,.003,.002,.003,1e-4,1e-4,.003,.001,.005,.002,.002,.002,.001,.003,.003,.001,.001,.001,.002,.001,.001,.003,1e-4,.002,.003,.005,.001,.001,.003,1e-4,.001,1e-4,.002,1e-4,.002,1e-4,.004,1e-4,.069,.013,.026,.027,.096,.015,.017,.033,.065,.001,.006,.037,.021,.063,.061,.016,.001,.05,.05,.064,.025,.009,.011,.002,.014,.001,1e-4,.001,1e-4,1e-4,1e-4,.961,.592,2.65,1.657,.723,.269,1.597,3.461,1.72,1.651,.757,.977,1.223,.768,1.538,.011,.778,.359,.094,.266,.255,.126,.187,.051,.006,.076,.047,.004,.004,.086,.041,.008,.02,.003,.091,.008,.069,.003,5.331,1.558,2.986,.988,3.164,.17,3.662,.439,.51,.17,3.636,.006,.014,.003,.002,.002,.001,.014,.001,.004,.001,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.201,.101,1e-4,.002,1e-4,1e-4,45.417,1e-4,.002,1e-4,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.02,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],dz:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.39,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.815,1e-4,.004,1e-4,1e-4,.001,1e-4,.001,.023,.023,1e-4,.002,.003,.013,.008,.001,.017,.015,.012,.006,.005,.004,.005,.004,.004,.004,.001,1e-4,.007,1e-4,.007,.001,1e-4,.002,.004,.001,.001,1e-4,.001,.001,1e-4,.001,.001,1e-4,.001,.003,.001,1e-4,.004,1e-4,.002,.003,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.001,1e-4,.03,.011,.006,.008,.024,.002,.006,.009,.021,.002,.004,.014,.011,.019,.021,.004,1e-4,.02,.011,.013,.01,.002,.002,1e-4,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.269,.247,1.794,.002,1.18,.189,.19,.052,.002,.102,.016,7.859,.051,.549,.008,.12,.301,1.592,.28,1.053,.694,.157,1.278,.061,.824,.093,.2,.068,.006,.019,.267,.283,.898,.517,1.238,.954,.214,.015,2.251,.029,.117,.081,.001,.058,1e-4,.012,.002,1e-4,.002,.89,2.149,.094,1.08,.001,1e-4,.053,.001,1e-4,.926,.001,10.076,21.494,2.583,.002,1e-4,1e-4,.002,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,32.733,1e-4,.016,.005,.001,.002,.002,.001,.001,.003,1e-4,1e-4,.001,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ee:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.047,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.659,.001,.347,1e-4,.001,.004,.004,.044,.199,.199,.001,1e-4,.713,.054,1.348,.005,.312,.38,.219,.115,.09,.132,.118,.118,.109,.211,.064,.006,1e-4,.001,1e-4,.001,1e-4,.552,.172,.134,.182,.397,.085,.215,.112,.083,.04,.209,.217,.202,.168,.043,.117,.006,.112,.229,.176,.053,.059,.177,.021,.139,.02,.003,1e-4,.003,1e-4,1e-4,1e-4,7.214,1.62,.258,2.122,10.212,.557,1.427,.62,4.11,.028,2.137,3.419,2.267,3.348,4.663,.886,.007,1.264,2.303,2.327,2.541,.557,2.031,.389,1.697,.84,1e-4,1e-4,1e-4,1e-4,1e-4,.058,.011,.016,.109,.004,.002,.009,.001,.003,.01,.044,.61,.005,.002,1e-4,.003,.018,.018,1.229,.009,2.883,.003,1.23,.001,.002,.008,.003,.085,.02,.018,.001,.001,.052,.01,.004,.485,.002,1e-4,.002,.004,.005,.042,.003,.002,.003,.025,.002,.002,.007,.009,.047,.01,.005,.003,.005,.003,.006,.005,.14,.007,.005,.138,.008,.004,1e-4,1e-4,.039,.487,.018,.548,1.276,1e-4,.004,4.335,.128,.004,.106,.013,.028,.013,.041,.016,1e-4,1e-4,1e-4,1e-4,.003,.018,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.138,.051,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],eml:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.684,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.039,.004,.415,1e-4,1e-4,.004,.001,1.632,.216,.216,.001,.001,.746,.069,.997,.011,.415,.659,.408,.216,.231,.235,.226,.213,.215,.256,.061,.026,.05,.006,.05,.003,1e-4,.44,.139,.4,.112,.078,.095,.114,.018,.424,.019,.012,.251,.226,.059,.026,.233,.016,.153,.231,.099,.036,.164,.011,.127,.003,.015,.004,1e-4,.004,1e-4,.002,1e-4,7.63,.549,2.301,3.601,3.529,.617,1.263,.808,5.22,.113,.052,4.92,1.657,5.406,1.72,1.353,.118,3.957,2.689,3.146,2.026,.904,.024,.02,.047,.34,1e-4,.001,1e-4,1e-4,1e-4,.239,.003,.006,.003,.004,.052,.002,.003,.008,.003,.006,.001,.002,.193,.002,.001,.002,.002,.003,.098,.002,.001,.001,.001,.033,.188,.003,.047,.006,.006,.001,.078,.562,.025,.617,.129,.182,.072,.003,.005,1.444,.829,.895,.057,.235,.011,.346,.001,.004,.003,.664,.345,.314,.007,.019,.001,.003,.275,.004,.186,.062,.002,.002,.006,1e-4,1e-4,.011,6.936,.1,.325,1e-4,.004,1e-4,.001,.001,.001,1e-4,1e-4,.003,.002,.007,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.192,.237,.003,.002,.005,.003,.003,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],eo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.154,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.737,.006,.429,1e-4,1e-4,.01,.001,.015,.235,.235,.001,.003,.936,.306,.916,.015,.284,.481,.226,.14,.134,.143,.121,.123,.155,.273,.072,.027,.012,.007,.013,.002,1e-4,.209,.154,.114,.106,.232,.094,.127,.102,.106,.077,.183,.354,.184,.118,.083,.187,.004,.116,.241,.149,.061,.074,.035,.004,.009,.024,.021,1e-4,.021,1e-4,.004,1e-4,9.544,.784,.841,2.534,6.934,.706,.989,.423,6.212,2.407,2.868,4.302,1.963,5.456,7.143,1.699,.009,4.617,4.113,4.222,2.31,1.083,.045,.017,.108,.46,1e-4,.005,1e-4,1e-4,1e-4,.058,.01,.009,.008,.004,.004,.002,.003,.037,.239,.001,.001,.004,.007,.001,.002,.002,.007,.002,.018,.008,.001,.002,.002,.002,.012,.003,.005,.093,.609,.008,.005,.021,.066,.005,.003,.01,.029,.002,.005,.005,.035,.002,.007,.002,.34,.001,.002,.012,.007,.011,.025,.006,.093,.016,.003,.007,.003,.008,.009,.016,.009,.009,.003,1e-4,1e-4,.038,.2,.946,.502,1e-4,.001,.005,.001,.001,.001,.001,1e-4,.012,.006,.045,.015,1e-4,1e-4,1e-4,.002,.001,.003,.006,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.003,.056,.002,.001,.003,.002,.001,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],eu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.418,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.177,.001,.297,1e-4,1e-4,.006,.001,.01,.167,.167,1e-4,.001,1.097,.307,1.039,.006,.582,.665,.539,.263,.232,.207,.196,.233,.193,.297,.077,.037,.019,.004,.019,.001,1e-4,.228,.197,.105,.074,.177,.09,.111,.131,.123,.048,.077,.106,.134,.065,.059,.121,.005,.05,.134,.08,.034,.046,.019,.022,.008,.029,.005,1e-4,.005,1e-4,.002,1e-4,11.924,1.97,.229,2.409,9.817,.3,1.545,.915,6.874,.162,4.015,2.508,1.08,6.457,4.385,.883,.011,6.261,2.025,5.706,3.55,.077,.032,.337,.117,3.463,1e-4,.005,1e-4,1e-4,1e-4,.014,.003,.002,.002,.001,.001,.001,.001,.001,.003,.001,.001,.001,.002,.001,1e-4,.001,.001,1e-4,.003,.003,1e-4,1e-4,.001,.001,.001,1e-4,.001,.003,.003,1e-4,.001,.008,.009,.002,.002,.004,.001,.001,.003,.009,.023,.001,.012,.001,.01,.001,.001,.003,.012,.007,.008,.006,.001,.003,.001,.002,.001,.004,.012,.004,.002,.001,.001,1e-4,1e-4,.039,.094,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.003,.007,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.013,.001,1e-4,.002,.001,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ext:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.183,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.144,.002,.474,1e-4,1e-4,.008,.001,.271,.191,.19,.004,.002,1.06,.101,.854,.021,.249,.293,.188,.105,.088,.096,.085,.084,.099,.161,.072,.026,.008,.003,.006,.002,1e-4,.241,.103,.248,.095,.369,.065,.091,.071,.128,.047,.018,.238,.161,.09,.062,.171,.026,.094,.188,.116,.077,.083,.02,.035,.009,.011,.028,1e-4,.029,1e-4,.001,.002,8.822,.896,2.974,2.338,7.586,.409,.951,.639,6.63,.18,.079,4.794,1.966,5.508,3.713,1.742,.451,4.358,5.625,3.427,5.456,.664,.026,.047,.265,.205,1e-4,.012,1e-4,.001,1e-4,.09,.042,.016,.012,.021,.01,.009,.007,.019,.01,.009,.002,.007,.012,.003,.002,.01,.006,.003,.011,.012,.003,.002,.002,.004,.049,.003,.005,.01,.009,.003,.003,.02,.663,.003,.009,.008,.004,.004,.092,.006,.332,.01,.012,.009,.354,.005,.01,.016,.295,.019,.537,.024,.015,.008,.008,.011,.017,.174,.02,.041,.023,.01,.023,1e-4,1e-4,.078,2.453,.012,.009,1e-4,1e-4,1e-4,.019,.008,.025,.005,1e-4,.151,.073,.021,.007,1e-4,1e-4,1e-4,1e-4,.002,.005,.034,.026,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.013,.021,.082,.001,.001,.002,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ff:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.229,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.756,.003,.154,1e-4,1e-4,.002,1e-4,.07,.321,.324,.004,.001,1.19,.201,1.011,.039,.221,.281,.197,.076,.082,.099,.098,.084,.101,.154,.153,.028,.04,.008,.04,.01,1e-4,.371,.159,.12,.097,.095,.198,.111,.12,.065,.102,.267,.138,.299,.201,.095,.085,.014,.046,.262,.159,.061,.013,.059,.003,.066,.008,.007,1e-4,.007,1e-4,.006,1e-4,10.449,.928,.343,3.119,8.063,.727,1.432,1.127,6.432,.966,2.387,3.274,2.586,6.222,6.89,.484,.058,2.623,1.086,2.251,3.239,.048,1.581,.013,1.385,.042,1e-4,1e-4,.001,1e-4,1e-4,.25,.043,1e-4,.008,.007,.001,.007,.002,.023,.003,.031,.086,.001,1e-4,.009,.005,.007,.017,.003,1.378,.001,.001,1e-4,1.485,.01,.123,.001,.002,.036,.035,.003,1e-4,.06,.009,1e-4,.003,1e-4,.002,.02,.011,.007,.04,.001,.024,.001,.003,1e-4,1e-4,.006,.154,.006,.01,.135,.002,.002,.009,.004,.002,.004,.025,.02,.001,.001,.001,1e-4,1e-4,.111,.229,.005,.088,.202,1e-4,1e-4,2.86,.02,.001,.001,1e-4,.003,1e-4,.017,.011,1e-4,1e-4,.001,.002,.002,1e-4,.023,.044,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.01,.248,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fj:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.647,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.11,.005,.222,1e-4,1e-4,1e-4,.002,.182,.39,.39,.002,.003,.665,.202,1.418,.055,.382,.504,.342,.179,.168,.196,.159,.133,.129,.164,.07,.04,.02,.002,.02,.013,.002,.352,.212,.246,.146,.319,.066,.096,.061,.166,.217,.277,.179,.262,.29,.095,.254,.022,.118,.377,.355,.066,.534,.043,.003,.05,.01,1e-4,1e-4,.005,1e-4,.008,1e-4,13.891,.708,1.055,1.505,4.909,.352,.936,.685,8.96,.075,2.998,2.827,2.182,5.506,3.831,.546,.257,2.747,2.722,3.592,4.532,2.046,.526,.045,.71,.111,1e-4,1e-4,1e-4,1e-4,1e-4,.267,.01,.007,.005,.007,.002,1e-4,.002,.003,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,.008,1e-4,1e-4,.013,.192,1e-4,.003,.002,1e-4,.008,.002,1e-4,.023,.022,.002,1e-4,.007,.005,1e-4,.01,.003,1e-4,.002,.005,.002,.003,1e-4,1e-4,1e-4,.01,1e-4,1e-4,.008,1e-4,.003,.022,.003,.002,.005,1e-4,.008,1e-4,.01,1e-4,1e-4,1e-4,.002,.002,1e-4,1e-4,.013,.065,1e-4,.023,.002,1e-4,1e-4,.013,1e-4,.007,1e-4,1e-4,1e-4,.002,.01,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.26,1e-4,.003,.002,1e-4,.003,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.171,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.257,.003,.223,1e-4,1e-4,.01,.002,.015,.14,.141,.001,.001,.983,.292,1.473,.021,.562,.624,.361,.197,.187,.183,.177,.172,.176,.285,.092,.018,.015,.005,.015,.002,1e-4,.162,.14,.076,.088,.116,.204,.083,.244,.058,.087,.291,.108,.161,.114,.065,.092,.004,.082,.312,.204,.061,.078,.034,.003,.012,.006,.004,1e-4,.004,1e-4,.002,1e-4,6.488,.752,.145,1.557,3.939,1.383,2.415,1.123,6.407,.628,2.151,3.099,2.563,5.616,2.172,.663,.005,6.541,3.536,4.094,3.571,2.164,.044,.017,.862,.025,1e-4,.001,1e-4,1e-4,1e-4,.054,.049,.002,.002,.002,.004,.003,.001,.001,.001,.001,1e-4,.001,.091,.001,.001,.001,.001,.001,.033,.002,.001,.002,.001,.017,.004,.006,.001,.006,.009,.001,.001,.01,.939,.001,.001,.016,.008,.277,.003,.006,.007,.001,.002,.001,1.13,.001,.004,1.899,.003,.003,.718,.002,.002,.014,.001,.801,.002,.333,.003,.004,.203,.003,.002,1e-4,1e-4,.022,6.504,.004,.004,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.012,.005,.009,.003,1e-4,1e-4,1e-4,1e-4,.001,.002,.004,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,.053,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],frp:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.788,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.014,.012,.659,.001,1e-4,.001,.001,.361,.368,.368,.001,1e-4,.743,.467,.873,.02,.214,.426,.274,.128,.113,.117,.113,.107,.116,.228,.11,.019,.081,.005,.081,.002,1e-4,.35,.279,.333,.142,.141,.152,.135,.066,.159,.087,.033,.593,.22,.099,.082,.206,.019,.236,.314,.121,.062,.179,.013,.025,.027,.009,.022,1e-4,.022,1e-4,.006,1e-4,6.3,.639,2.237,2.924,6.953,.549,.996,.581,3.639,.252,.124,3.838,1.505,5.552,4.982,1.442,.366,4.363,4.487,4.4,2.763,.919,.029,.168,.501,.132,1e-4,.008,1e-4,.001,1e-4,.591,.012,.04,.026,.003,.003,.002,.002,.077,.083,.002,.003,.004,.003,.002,.005,.007,.003,.002,.023,.039,.002,.001,.002,.013,.56,.002,.002,.004,.004,.002,.004,.079,.014,.761,.004,.005,.003,.004,.044,1.724,.994,.451,.049,.014,.007,.008,.004,.024,.005,.02,.03,.411,.012,.002,.176,.006,.01,.014,.089,.007,.007,.007,.005,1e-4,1e-4,.277,4.789,.008,.018,.001,1e-4,1e-4,.008,.004,.004,.003,.001,.014,.004,.075,.032,1e-4,1e-4,.001,.005,.001,.004,.007,.005,1e-4,1e-4,.006,1e-4,1e-4,1e-4,.004,.024,.586,.003,1e-4,.001,.002,.001,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],frr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.212,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.548,.003,.682,1e-4,.001,.008,1e-4,.237,.407,.407,.015,.002,.738,.264,1.349,.032,.426,.487,.285,.155,.131,.142,.153,.132,.154,.213,.163,.033,.094,.019,.094,.014,1e-4,.424,.235,.114,.463,.142,.219,.132,.243,.123,.143,.217,.156,.239,.202,.1,.178,.008,.163,.493,.169,.107,.04,.158,.005,.006,.018,.02,1e-4,.02,1e-4,.015,1e-4,7.38,1.026,.694,2.643,7.751,1.48,1.329,1.414,5.143,.835,1.946,2.506,1.658,6.635,2.847,.757,.017,4.866,3.953,4.835,3.559,.125,1.078,.025,.13,.078,1e-4,1e-4,1e-4,.001,1e-4,.121,.04,.005,.007,.011,.01,.004,.003,.014,.003,.007,.003,.003,.004,.004,.002,.006,.041,.003,.029,.004,.002,.039,.002,.005,.057,.003,.003,.033,.001,.015,.005,.043,.01,.008,.004,.702,.24,.006,.008,.007,.041,.006,.01,.003,.013,.002,.004,.015,.008,.014,.009,.006,.008,.971,.003,.022,.007,.006,.005,.964,.005,.004,.003,1e-4,1e-4,.041,3.039,.101,.012,1e-4,.001,1e-4,.016,.008,.014,.003,1e-4,.014,.006,.019,.007,1e-4,1e-4,1e-4,.001,1e-4,.001,.018,.017,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.024,.122,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fur:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.465,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.803,.002,.385,1e-4,1e-4,.006,.001,.135,.204,.203,.001,.001,.945,.084,1.045,.015,.262,.474,.24,.16,.15,.158,.149,.15,.168,.219,.076,.046,.024,.003,.006,.002,1e-4,.268,.102,.337,.116,.078,.115,.121,.022,.278,.048,.02,.218,.154,.07,.05,.172,.005,.086,.217,.131,.073,.108,.016,.024,.002,.027,.004,.001,.004,1e-4,.016,1e-4,6.873,.54,3.119,3.521,7.672,.855,.912,.901,8.131,.838,.065,4.486,1.745,5.361,3.491,1.873,.016,4.269,4.833,4.488,2.566,1.056,.024,.012,.029,.497,1e-4,.001,1e-4,1e-4,1e-4,.039,.005,.002,.002,.002,.001,.001,.005,.001,.001,1e-4,1e-4,.001,.003,.001,.001,.001,.001,.001,.007,.001,1e-4,.001,1e-4,.002,.013,1e-4,.001,.008,.008,1e-4,.002,.187,.005,.973,.001,.004,.001,.001,.127,.268,.009,.161,.005,.069,.003,.185,.001,.033,.003,.05,.006,.254,.001,.005,.001,.001,.015,.003,.208,.005,.002,.001,.002,1e-4,1e-4,.042,2.523,.01,.009,1e-4,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,.01,.005,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.038,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],fy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.82,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.701,.001,.398,1e-4,.001,.014,.003,.455,.166,.166,.001,1e-4,.747,.192,.908,.008,.277,.415,.181,.098,.101,.113,.107,.108,.145,.219,.052,.025,.005,.001,.005,.002,1e-4,.213,.183,.091,.343,.093,.196,.109,.18,.193,.088,.132,.122,.161,.156,.11,.106,.003,.108,.302,.13,.038,.048,.113,.006,.12,.009,.007,1e-4,.007,1e-4,1e-4,1e-4,6.027,1.091,.691,3.439,11.73,1.889,1.306,1.373,5.412,1.009,2.464,2.808,1.837,7.368,3.471,1.074,.006,5.381,4.264,5.226,1.268,.226,1.241,.017,1.595,.254,1e-4,1e-4,1e-4,1e-4,1e-4,.043,.003,.002,.001,.001,.001,.001,.001,.001,.001,1e-4,.001,.001,.001,1e-4,.001,.001,.001,1e-4,.007,.001,1e-4,.001,.001,.004,.021,1e-4,.001,.004,.003,.001,.001,.013,.004,.263,.001,.008,.001,.001,.002,.002,.01,.258,.016,.001,.003,.001,.013,.005,.004,.006,.003,.084,.002,.006,.001,.003,.002,.21,.348,.006,.003,.002,.001,1e-4,1e-4,.02,1.229,.004,.003,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,.006,.003,.015,.005,1e-4,1e-4,1e-4,1e-4,.001,.002,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.042,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ga:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.234,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.249,.002,.288,1e-4,.001,.013,.002,.109,.15,.15,1e-4,.002,.872,.193,.872,.017,.241,.359,.187,.093,.09,.096,.095,.093,.117,.202,.044,.013,.002,.003,.002,.002,1e-4,.26,.338,.441,.188,.097,.15,.18,.066,.279,.041,.036,.154,.249,.121,.062,.138,.005,.145,.311,.272,.036,.033,.04,.007,.009,.007,.033,1e-4,.031,1e-4,.002,1e-4,11.315,1.29,2.859,2.236,4.184,.692,2.117,5.503,7.212,.011,.093,2.991,1.605,6.018,2.868,.471,.007,4.409,3.653,3.32,1.715,.088,.061,.021,.135,.028,1e-4,.006,1e-4,1e-4,1e-4,.063,.032,.004,.003,.002,.001,.001,.002,.002,.059,.001,.002,.002,.009,.001,.001,.001,.001,.001,.044,.003,.001,.001,.001,.005,.023,.008,.001,.006,.006,1e-4,.001,.02,1.278,.008,.002,.005,.001,.001,.002,.002,1.021,.001,.002,.002,1.343,.001,.001,.006,.004,.004,.674,.002,.003,.005,.001,.004,.002,.624,.002,.005,.004,.003,.002,1e-4,1e-4,.022,5.087,.004,.005,1e-4,1e-4,1e-4,.002,.001,.001,.001,1e-4,.011,.005,.021,.008,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.003,.061,1e-4,1e-4,.002,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gag:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.391,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.28,.016,.1,1e-4,.001,.011,1e-4,.023,.153,.154,1e-4,1e-4,.918,.454,1.065,.029,.183,.22,.131,.062,.067,.072,.06,.06,.062,.143,.13,.023,.015,.004,.015,.028,1e-4,.378,.403,.048,.156,.135,.049,.237,.117,.049,.029,.415,.105,.242,.108,.187,.134,.003,.159,.189,.383,.092,.136,.005,.011,.079,.04,.002,1e-4,.002,1e-4,.001,1e-4,9.932,1.463,.503,2.949,4.34,.314,1.11,.547,5.816,.052,2.859,4.285,1.983,5.174,2.034,.659,.007,5.297,2.304,2.138,2.154,.741,.006,.007,1.825,1.011,1e-4,1e-4,1e-4,1e-4,1e-4,.33,.02,.014,.017,.012,.006,.003,.09,.004,.002,.005,.006,.005,.012,.002,.007,.002,.004,.002,.034,.066,.003,.036,.002,.004,.038,.004,.03,.138,.106,.046,1.073,.005,.011,.07,.054,1.028,.001,.006,.629,.003,.006,.12,.006,.002,.001,.004,.003,.193,2.957,.016,.012,.008,.03,.347,.009,.023,.005,.018,.016,1.278,.014,.03,.005,1e-4,1e-4,.012,3.601,3.155,1.149,.001,1e-4,.029,.03,.001,1e-4,.001,1e-4,.001,1e-4,.224,.106,.002,.001,1e-4,1e-4,.001,.003,.019,.015,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.013,.005,.317,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gan:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.76,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.481,.002,.018,1e-4,1e-4,.024,.003,.008,.023,.024,.002,.006,.023,.038,.047,.01,.315,.585,.297,.204,.191,.202,.185,.171,.182,.259,.005,.001,.007,.003,.007,.002,1e-4,.033,.019,.032,.016,.012,.012,.016,.021,.015,.011,.012,.015,.023,.016,.01,.022,.002,.018,.031,.022,.006,.009,.014,.002,.005,.001,.008,.001,.008,1e-4,.002,1e-4,.219,.03,.061,.069,.246,.023,.046,.084,.187,.005,.034,.116,.064,.184,.17,.035,.003,.158,.115,.138,.085,.023,.019,.007,.04,.007,.001,.001,.001,1e-4,1e-4,3.244,1.279,2.127,.643,.387,.883,.435,.848,1.431,1.201,.629,1.296,2.258,1.163,.623,.808,.937,.395,.26,.593,.667,.608,1.031,1.999,.578,.845,.936,.665,1.536,.644,.439,.928,.498,.603,.631,.704,.585,.768,.515,.538,.76,.649,.365,.712,.597,1.095,.882,.565,2.328,1.119,.438,.543,1.012,.372,.441,.708,1.829,1.205,1.47,1.203,2.219,1.044,.843,1.251,1e-4,1e-4,.055,.02,.005,.006,.001,1e-4,1e-4,.001,.001,1e-4,.002,1e-4,.018,.009,.031,.009,1e-4,1e-4,1e-4,1e-4,.002,.007,.036,.032,1e-4,.002,1e-4,1e-4,1e-4,1e-4,.029,.011,.055,2.062,3.549,9.312,4.838,3.056,2.889,2.67,.003,.005,.013,.003,.002,1.772,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gd:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.483,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.829,.001,.374,1e-4,1e-4,.027,.001,.653,.225,.224,.001,.001,.74,.732,.959,.016,.275,.512,.251,.163,.143,.16,.146,.151,.187,.234,.126,.023,.004,.003,.004,.002,1e-4,.399,.354,.494,.195,.121,.114,.226,.061,.158,.033,.034,.204,.239,.107,.062,.151,.004,.164,.477,.402,.038,.033,.037,.023,.009,.008,.004,1e-4,.004,1e-4,.001,.001,13.191,1.481,2.674,2.933,4.722,.55,2.044,6.832,6.396,.019,.13,2.757,1.684,7.147,2.433,.32,.014,3.962,3.004,2.554,2.054,.073,.068,.016,.125,.044,1e-4,1e-4,1e-4,1e-4,1e-4,.262,.013,.005,.005,.004,.003,.002,.002,.031,.005,.004,.001,.011,.003,.002,.001,.006,.003,.012,.014,.004,.002,.002,.002,.027,.178,.003,.005,.012,.011,.001,.003,.677,.029,.002,.003,.009,.003,.004,.005,.218,.029,.004,.003,.303,.022,.002,.003,.018,.008,.323,.026,.004,.004,.01,.002,.006,.223,.01,.003,.014,.004,.005,.002,1e-4,1e-4,.041,1.912,.009,.011,1e-4,1e-4,1e-4,.018,.01,.015,.003,1e-4,.015,.007,.02,.006,1e-4,1e-4,1e-4,.001,.001,.008,.009,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.004,.244,.002,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.812,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.39,.002,.342,1e-4,1e-4,.01,.001,.013,.144,.144,.001,.002,1.02,.075,.726,.01,.251,.326,.181,.093,.083,.092,.082,.082,.102,.185,.047,.021,.003,.002,.002,.001,1e-4,.331,.122,.257,.114,.192,.107,.104,.065,.139,.039,.03,.104,.167,.127,.177,.186,.007,.111,.187,.12,.054,.074,.026,.055,.009,.01,.005,1e-4,.005,1e-4,.003,1e-4,9.121,.85,3.271,4.11,8.668,.721,.784,.524,5.185,.017,.092,2.548,2.069,5.528,7.673,1.889,.464,5.046,5.357,3.627,2.8,.704,.036,.564,.085,.291,1e-4,.001,1e-4,1e-4,1e-4,.015,.013,.003,.002,.002,.001,.002,.002,.001,.012,.001,.001,.001,.003,.001,.001,.001,.001,.001,.006,.003,.001,.001,.001,.001,.002,.001,.001,.003,.003,1e-4,.001,.028,.396,.001,.002,.002,.001,.001,.003,.003,.383,.003,.007,.001,.442,.001,.001,.005,.193,.006,.599,.002,.002,.003,.001,.003,.002,.219,.007,.008,.002,.002,.002,1e-4,1e-4,.05,2.267,.004,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.011,.005,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.014,.003,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],glk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.405,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.911,.005,.048,1e-4,1e-4,.001,1e-4,.017,.104,.105,1e-4,.001,.019,.086,.553,.019,.043,.074,.037,.051,.028,.037,.027,.021,.025,.021,.078,1e-4,.005,.006,.007,.001,1e-4,.004,.003,.008,.003,.003,.002,.002,.002,.003,.001,.001,.002,.004,.002,.001,.003,1e-4,.003,.005,.008,.006,.001,.002,1e-4,.001,.001,.003,1e-4,.002,.001,.001,1e-4,.177,.041,.015,.061,.102,.013,.028,.036,.115,.015,.035,.047,.057,.128,.083,.024,.008,.098,.063,.07,.058,.027,.009,.013,.021,.022,1e-4,.004,1e-4,.001,1e-4,.159,.386,.313,.148,1.28,2.09,3.65,3.311,2.644,.084,1.185,.003,3.768,.001,.042,.015,.057,.007,.001,.006,.005,1e-4,1e-4,1e-4,.027,.07,.004,.009,.002,.001,1e-4,.024,.001,.005,.174,.185,.526,1e-4,.349,5.779,1.561,.992,2.058,.045,.725,.235,.5,2.399,.083,3.048,.622,2.068,1.214,.15,.072,.14,.046,.343,.079,.014,.001,1e-4,.271,1e-4,1e-4,1e-4,.044,.065,.002,.021,1e-4,.003,1e-4,.068,1e-4,.285,.001,1e-4,.001,1e-4,.005,.002,1e-4,.002,1e-4,1e-4,1e-4,1e-4,21.901,14.77,1.833,3.683,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.141,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.37,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.685,.002,.175,1e-4,1e-4,.007,1e-4,.625,.171,.173,.001,.002,1.108,.288,.925,.011,.221,.306,.165,.094,.084,.088,.078,.08,.105,.172,.107,.053,.096,.001,.096,.001,1e-4,.314,.094,.194,.053,.124,.074,.125,.128,.14,.097,.171,.086,.202,.077,.188,.312,.005,.119,.136,.188,.098,.072,.01,.015,.073,.005,.013,1e-4,.013,1e-4,1e-4,.003,10.368,1.134,1.037,1.076,7.653,.097,1.575,2.931,4.208,1.013,1.951,.867,2.302,2.015,5.216,3.17,.036,4.342,1.438,2.887,4.01,2.242,.013,.023,2.052,.103,.002,.004,1e-4,1e-4,1e-4,1.036,.019,.002,.069,.003,.001,.001,.001,.002,.002,.001,.003,.001,.004,1e-4,.001,.002,.06,.001,.011,.003,.002,.001,.001,.002,.862,.001,.001,.08,.08,1e-4,.001,.04,.787,.003,.72,.019,.002,.003,.003,.016,1.383,.003,.016,.003,.256,.002,.013,.007,.786,.011,.399,.027,.172,.004,.001,.003,.065,.529,.066,.013,.527,.003,.003,1e-4,1e-4,.078,4.545,.392,.1,1e-4,1e-4,1e-4,.003,.001,.002,.065,1e-4,.004,.002,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.015,.405,1.034,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gom:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.459,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.409,.004,.032,1e-4,1e-4,.004,.001,.065,.082,.086,1e-4,.001,.31,.092,.614,.025,.037,.076,.035,.025,.021,.026,.02,.018,.022,.033,.044,.02,1e-4,.003,1e-4,.007,1e-4,.043,.023,.024,.027,.017,.011,.022,.028,.023,.016,.018,.014,.036,.017,.018,.033,.001,.019,.035,.046,.011,.011,.005,.004,.003,.004,.001,1e-4,.001,1e-4,.007,.001,1.398,.134,.264,.41,.83,.062,.182,.613,.742,.041,.372,.505,.457,.862,.987,.203,.002,.568,.367,.732,.344,.233,.034,.102,.093,.096,1e-4,.001,1e-4,1e-4,1e-4,1.014,.337,1.717,.03,1e-4,.2,.49,1.091,.031,.184,.021,.587,.017,1.766,.002,.057,.002,.019,.005,.016,.001,1.048,.146,.534,.083,.03,.659,.006,.381,.026,.006,.26,.031,.261,.004,.294,21.971,5.237,.529,.24,.912,.021,.699,.107,.285,.131,.613,1.017,1.508,.008,1.629,.499,.008,.864,.313,.067,.93,.419,1e-4,.006,.002,1e-4,3.471,.661,1e-4,1e-4,.008,.024,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,26.65,1e-4,.078,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],got:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.339,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.094,.003,1.291,1e-4,1e-4,1e-4,1e-4,.038,.115,.115,.004,.002,1.558,.264,1.449,.007,.147,.29,.265,.261,.158,.118,.082,.102,.128,.101,.042,.039,.006,.003,.008,.017,1e-4,.013,.006,.028,.006,.126,.004,.142,.123,.192,.004,.003,.01,.007,.004,.248,.007,1e-4,.011,.012,.024,.014,.037,.008,1e-4,.001,.001,.004,1e-4,.004,1e-4,1e-4,.001,1.416,.252,.277,.447,1.622,.345,.341,.482,1.005,.151,.167,.523,.441,1.296,.895,.224,.019,.998,.984,.975,.495,.221,.388,.018,.135,.029,1e-4,.004,1e-4,1e-4,1e-4,.227,.027,.943,1.525,.623,.417,.281,.024,.043,.442,.017,.001,12.517,4.391,1e-4,.004,16.904,.001,.002,.005,.001,.003,.004,.004,1e-4,.003,.047,.043,.003,.003,.004,.002,1.424,.066,.105,.001,.004,.001,.009,.002,.017,.005,.002,.005,.002,.035,.001,.003,3.235,.309,.439,.698,.617,.042,.143,.379,.509,2.203,.495,.498,.573,1.215,.432,.907,1e-4,1e-4,1.432,.164,.007,.004,.001,.002,1e-4,.004,.018,.002,.024,1e-4,.034,.019,.033,.012,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.003,.002,1e-4,1e-4,.003,1e-4,1e-4,1e-4,.003,.09,.108,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.902,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],gv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.271,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.449,.001,.421,.002,.001,.012,.004,.833,.218,.217,.001,.004,1.036,.572,.962,.016,.26,.327,.165,.089,.084,.093,.087,.088,.107,.189,.087,.045,.002,.002,.002,1e-4,1e-4,.277,.194,.324,.123,.14,.124,.191,.146,.079,.067,.068,.129,.207,.152,.084,.138,.02,.179,.402,.526,.063,.198,.043,.005,.079,.006,.009,1e-4,.009,1e-4,.001,1e-4,8.563,.792,1.691,1.903,8.594,.377,2.885,5.368,3.902,.512,.598,3.599,1.506,6.663,4.174,.394,.032,4.839,4.581,2.625,1.233,.647,.279,.018,6.112,.053,1e-4,.002,1e-4,1e-4,1e-4,.052,.016,.011,.007,.006,.002,.002,.033,.003,.008,.001,.001,.002,.004,.001,.003,.004,.002,.001,.008,.005,.001,.002,.002,.007,.032,.003,.002,.002,.002,.001,.001,.013,.034,.001,.003,.006,.002,.002,.259,.003,.024,.003,.005,.003,.021,.001,.003,.016,.006,.011,.021,.003,.006,.005,.006,.011,.008,.015,.005,.007,.005,.006,.004,1e-4,1e-4,.024,.446,.012,.021,1e-4,.001,1e-4,.006,.003,.004,.002,1e-4,.012,.007,.044,.019,1e-4,1e-4,1e-4,.002,1e-4,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.006,.05,.002,1e-4,.002,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ha:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.755,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.253,.006,.093,.001,1e-4,.003,.001,.233,.264,.267,1e-4,.001,.745,.202,.904,.054,.25,.351,.185,.101,.092,.11,.102,.101,.107,.226,.077,.015,.009,.002,.009,.006,.001,.703,.295,.111,.155,.055,.098,.113,.13,.318,.133,.225,.088,.271,.163,.048,.074,.005,.115,.268,.173,.05,.018,.079,.003,.091,.042,.023,1e-4,.025,1e-4,.021,.001,18.747,1.651,.919,2.906,2.679,.906,1.302,1.831,6.455,.467,3.514,2.109,2.474,6.749,1.839,.213,.023,4.031,3.401,2.21,3.388,.067,1.617,.015,2.266,.447,.001,.001,.003,.002,1e-4,.116,.007,.003,.001,.009,.005,.003,.003,.007,.002,.01,.001,.001,1e-4,.003,.001,.002,.002,.001,.029,.002,.001,1e-4,.094,.018,.242,1e-4,.001,.01,.009,.001,.004,.02,.005,.002,.006,1e-4,.001,.003,.015,.004,.013,.004,.002,.002,.004,.002,.003,.004,.011,.001,.005,.011,.003,.002,.003,.002,.004,.002,.001,.003,.003,1e-4,.002,1e-4,1e-4,.03,.04,.008,.004,.18,1e-4,1e-4,.118,.001,.004,1e-4,1e-4,.001,.001,.011,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.044,.043,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.115,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hak:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.757,.001,.06,1e-4,1e-4,.014,1e-4,.007,.281,.281,1e-4,.001,.836,6.558,.681,.018,.337,.407,.278,.148,.134,.137,.13,.123,.136,.173,.065,.014,.002,.002,.002,.001,1e-4,.079,.057,.378,.035,.025,.133,.042,.182,.024,.017,.335,.169,.185,.174,.026,.169,.016,.027,.334,.366,.012,.069,.025,.002,.166,.009,.007,1e-4,.007,1e-4,.003,1e-4,1.796,.086,1.609,.16,2.657,.577,2.978,5.312,4.077,.022,2.986,.978,.836,6.046,1.214,.924,.006,.355,1.925,2.85,1.719,.417,.063,.011,1.033,.05,.001,.001,.001,.001,1e-4,.624,.347,.489,.127,.115,.217,.079,.128,.198,.185,.153,.188,.325,.981,.111,.161,.125,.071,.062,.072,.143,.099,.164,.124,.154,.164,.132,.118,.284,.116,.086,.138,.587,.284,.798,.114,.117,.11,.089,.096,.66,.449,.294,.11,.804,.308,1.169,.118,.192,.187,.596,1.486,.608,.076,.115,.115,.317,1.436,.679,1.022,.36,.128,.129,.134,1e-4,1e-4,.018,7.409,.013,.036,.003,.005,1e-4,.003,.001,.002,1.194,1e-4,.01,.005,.045,.02,.001,.001,1e-4,1e-4,.003,.013,.006,.004,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.013,1.011,.064,.254,.448,1.333,.785,.602,.451,.439,.002,.004,.008,.003,1e-4,.269,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],haw:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.221,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.294,.012,.203,1e-4,1e-4,1e-4,.001,.132,.34,.352,1e-4,.001,1.505,.111,.979,.007,.17,.218,.129,.06,.059,.065,.059,.085,.093,.096,.074,.017,.01,1e-4,.01,.007,1e-4,.393,.447,.582,.062,.097,.065,.079,.798,.153,.05,.341,.594,.369,.112,.254,.296,.019,.112,.703,.122,.065,.176,.058,.005,.01,.09,.005,1e-4,.006,1e-4,.003,.006,12.798,.268,.355,.813,5.652,.089,.569,1.324,6.125,.081,4.131,4.145,2.483,4.121,5.223,1.895,.028,1.627,1.407,.928,3.376,.134,.71,.014,.137,.178,1e-4,.002,1e-4,1e-4,1e-4,1.411,1.393,.012,.01,.008,.004,.003,.003,.01,.001,.006,.004,.027,.239,.001,.004,.011,.006,.002,.111,.01,.006,.002,.004,1.323,.019,.006,.004,.007,.006,.005,.004,.006,.059,.005,.006,.006,.004,.001,.013,.01,.035,.014,.268,.004,.047,.003,.004,.012,.061,.008,.113,.006,.007,.004,.005,.011,.005,.014,1.288,.011,.01,.006,.004,1e-4,1e-4,.011,.331,1.585,.461,1e-4,.008,1e-4,.011,1.285,.01,.001,1e-4,.031,.013,.031,.011,.001,1e-4,1e-4,1e-4,.004,.043,.02,.017,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.01,.013,1.362,1e-4,.001,.006,.003,.002,.001,.001,.002,.007,.008,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hif:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.441,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.1,.004,.114,1e-4,.001,.009,.004,.035,.174,.173,.001,.001,.931,.131,1.205,.021,.405,.564,.33,.156,.134,.134,.137,.132,.161,.312,.075,.009,.003,.005,.003,.001,1e-4,.456,.322,.355,.197,.18,.293,.19,.17,.372,.16,.181,.207,.307,.247,.078,.33,.012,.201,.529,.239,.168,.085,.095,.004,.174,.017,.016,1e-4,.016,1e-4,.019,1e-4,12.241,1.338,1.486,1.704,7.791,.593,1.202,3.829,6.515,.754,3.146,2.684,2.468,4.596,2.829,.958,.04,4.362,3.289,3.315,2.328,.443,.421,.04,.804,.089,1e-4,.003,.001,1e-4,1e-4,.026,.089,.009,.002,.003,.005,.002,.014,.008,.001,.001,.004,.002,.02,.003,.003,.003,.002,.001,.042,.003,.007,.001,.003,.002,.005,.002,.011,.004,.001,.001,.013,.018,.009,.001,.005,.072,.024,.007,.009,.007,.012,.004,.029,.003,.013,.009,.007,.017,.022,.012,.006,.004,.005,.014,.002,.01,.032,.005,.004,.012,.003,.011,.006,1e-4,1e-4,.028,.074,.148,.035,1e-4,1e-4,1e-4,.005,.002,.005,.003,1e-4,.004,.001,.016,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.009,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.105,.033,.022,.002,.001,.002,.002,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ho:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.445,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.244,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.681,.84,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.042,1e-4,1e-4,1e-4,.84,1.681,1e-4,.84,1e-4,1e-4,1.681,1.681,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.966,.84,1e-4,1e-4,7.563,1e-4,.84,1e-4,5.042,1e-4,1e-4,2.521,1.681,5.882,12.605,1.681,1e-4,3.361,1.681,1.681,1e-4,1.681,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hsb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.885,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.708,.001,.633,1e-4,1e-4,.02,.001,.006,.349,.351,.019,.001,.617,.09,1.156,.027,.335,.549,.233,.161,.153,.173,.141,.134,.184,.278,.061,.039,.002,.004,.002,.001,1e-4,.124,.184,.091,.139,.058,.04,.059,.112,.043,.103,.189,.142,.204,.143,.038,.227,.002,.151,.281,.088,.037,.024,.263,.004,.003,.079,.006,1e-4,.006,1e-4,.001,1e-4,6.697,1.107,1.636,2.081,6.467,.188,.301,1.756,3.527,3.654,2.787,1.99,1.872,3.895,5.864,1.456,.004,3.313,3.645,2.804,2.176,.063,3.44,.018,1.507,1.152,1e-4,1e-4,1e-4,1e-4,1e-4,.124,.059,.706,.009,.065,.003,.009,.741,.003,.001,.002,.003,.046,.476,.001,.004,.004,.003,.003,.038,.003,.003,.002,.005,.005,.336,.005,1.33,.03,.004,.03,.009,.055,.752,.003,.003,.008,.003,.002,.003,.003,.008,.001,.003,.001,.011,.001,.003,.025,.008,.015,.5,.006,.013,.014,.003,.014,.005,.495,.011,.018,.033,.697,.004,1e-4,1e-4,.023,.573,2.597,3.085,1e-4,1e-4,1e-4,.003,.001,1e-4,.001,1e-4,.01,.005,.144,.055,.001,.001,.001,.011,.004,.015,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.004,.112,.002,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ht:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.728,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.82,.005,.108,1e-4,1e-4,.002,.001,.044,.203,.204,.004,1e-4,1.177,.16,1.277,.006,1.128,.316,.385,.25,.229,.141,.146,.14,.135,.218,.285,.009,.002,.002,.002,.073,1e-4,.308,.114,.31,.14,.272,.082,.233,.111,.459,.083,.546,.457,.33,.177,.124,.284,.004,.107,.215,.201,.017,.07,.083,.002,.054,.009,.003,1e-4,.009,.003,.007,1e-4,8.338,.713,.405,1.058,6.922,.493,1.121,.484,5.37,.359,1.684,3.389,1.726,9.14,4.981,1.524,.032,2.005,4.201,3.104,1.485,1.12,1.14,.06,3.565,.552,1e-4,.001,1e-4,.001,1e-4,.036,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,.007,.001,1e-4,1e-4,1e-4,1e-4,.023,1e-4,1e-4,.002,.002,1e-4,1e-4,.04,.015,.008,1e-4,1e-4,1e-4,.003,.003,.815,.088,.005,.004,1e-4,.019,.002,.004,1e-4,.005,.398,.011,.003,1e-4,.001,1e-4,.001,.002,.004,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.04,1.397,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.002,.001,1e-4,1e-4,1e-4,.001,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.036,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.597,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.8,1e-4,.032,1e-4,1e-4,.007,1e-4,.004,.144,.144,1e-4,.001,.586,.166,.08,.013,.201,.284,.165,.087,.08,.086,.077,.075,.09,.155,.113,.001,.001,.001,.001,1e-4,1e-4,.01,.007,.01,.005,.005,.004,.004,.004,.018,.002,.002,.005,.008,.005,.004,.006,.001,.005,.011,.008,.002,.006,.004,.006,.001,.001,.002,1e-4,.002,1e-4,.003,.016,.046,.006,.015,.015,.053,.008,.009,.013,.038,.001,.005,.027,.014,.034,.04,.008,.001,.036,.026,.029,.018,.005,.004,.002,.008,.002,1e-4,1e-4,1e-4,1e-4,1e-4,3.414,.639,1.93,.109,.557,.081,.132,.316,.027,.402,.05,.015,.042,.09,.048,.034,.002,.004,.002,.02,.024,.021,.028,.001,1e-4,.001,.001,.003,.001,.123,.001,1e-4,.042,6.697,.434,.595,.616,2.608,.304,.502,.621,.7,.114,2.81,.856,.261,.333,1.634,.66,.29,.576,.139,1.799,1.257,4.145,.346,3.356,.233,.437,.354,.321,1.025,1.123,1.395,1e-4,1e-4,.223,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.029,.01,1e-4,1e-4,.652,36.534,7.186,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.026,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],hz:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,25,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.667,1e-4,1e-4,1e-4,8.333,1e-4,8.333,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ia:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.646,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.141,.002,.329,1e-4,1e-4,.008,.001,.021,.18,.18,.001,.003,1.016,.166,.808,.013,.184,.275,.136,.08,.078,.085,.074,.075,.088,.135,.073,.032,.002,.003,.002,.002,1e-4,.226,.141,.296,.096,.165,.073,.096,.067,.304,.056,.03,.329,.174,.087,.056,.186,.016,.106,.253,.115,.079,.078,.031,.017,.009,.016,.018,1e-4,.018,1e-4,.006,1e-4,7.783,.726,2.95,2.701,11.264,.558,.916,.687,6.773,.133,.102,4.659,2.226,5.924,5.837,2.221,.5,4.607,4.777,5.188,3.143,1.186,.054,.19,.205,.091,1e-4,.002,1e-4,1e-4,1e-4,.033,.014,.005,.003,.003,.002,.001,.002,.002,.002,.001,.001,.002,.002,.001,.001,.002,.002,.001,.01,.005,.001,.001,.002,.003,.007,.001,.002,.005,.005,.001,.001,.01,.02,.003,.006,.005,.003,.002,.005,.004,.021,.003,.011,.003,.018,.002,.002,.005,.011,.005,.019,.002,.002,.005,.002,.004,.005,.009,.012,.006,.004,.003,.005,1e-4,1e-4,.026,.115,.014,.006,.001,1e-4,1e-4,.001,.001,.001,.001,1e-4,.019,.01,.009,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.005,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.009,.031,.001,.001,.004,.003,.001,.001,.001,1e-4,.001,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ie:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.521,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.809,.001,.247,1e-4,1e-4,.004,.006,.019,.181,.18,.001,1e-4,.349,1.199,1.232,.019,.563,.838,.612,.225,.226,.24,.207,.206,.219,.382,.048,.005,.006,.001,.006,1e-4,1e-4,.309,.238,.27,.166,.167,.136,.184,.184,.432,.068,.108,.44,.245,.141,.106,.224,.013,.149,.37,.155,.122,.083,.052,.007,.021,.046,.016,1e-4,.017,1e-4,1e-4,1e-4,6.871,.75,2.348,2.768,8.937,.584,.855,.832,7.829,.174,.338,4.504,1.934,5.948,3.473,1.445,.281,4.186,4.435,5.077,2.881,.926,.103,.2,.235,.149,1e-4,.001,1e-4,1e-4,1e-4,.011,.008,.006,.012,.004,.002,.001,.038,.001,.002,1e-4,.001,.004,.016,.001,.001,.004,.003,.001,.004,.002,.001,.002,.003,.002,.005,.002,.003,.002,.002,.002,.01,.018,.107,.002,.003,.013,.003,.002,.004,.007,.34,.002,.007,.001,.079,.001,.001,.011,.009,.004,.067,.003,.005,.02,.001,.012,.001,.025,.006,.034,.009,.011,.002,1e-4,1e-4,.012,.714,.064,.047,1e-4,1e-4,.002,.001,.001,1e-4,.001,1e-4,.007,.004,.047,.017,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.01,.006,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ig:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.656,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.908,1e-4,.773,1e-4,.001,.002,.004,.323,.322,.321,.001,1e-4,.801,.348,.989,.009,.349,.514,.434,.211,.141,.149,.14,.138,.136,.236,.05,.04,.002,.002,.002,.002,.001,.437,.139,.167,.124,.161,.093,.162,.08,.189,.162,.069,.102,.246,.453,.257,.111,.006,.081,.231,.102,.09,.023,.104,.006,.033,.007,.018,1e-4,.018,1e-4,.003,.003,8.644,2.249,1.219,1.734,6.313,.761,1.664,1.979,4.558,.257,2.436,1.453,1.97,6.1,4.008,.966,.02,3.332,1.739,2.408,2.889,.225,1.517,.034,1.16,.258,1e-4,.007,.001,1e-4,1e-4,.13,.024,.004,.004,.007,.006,.001,.002,.001,.004,.004,.623,.118,.962,.001,1e-4,.002,.001,.004,.022,.005,.001,.031,.002,.001,.082,.001,.002,.004,.003,1e-4,1e-4,.34,.233,.001,.001,.012,1.142,.001,.003,.105,.2,.002,.014,.036,.183,.028,.019,.004,.004,.029,.095,.002,.001,.009,.001,.003,.143,.201,2.836,.03,.001,.002,.002,1e-4,1e-4,.146,1.356,.009,.021,1e-4,.014,.039,.003,1e-4,.001,.029,1e-4,.005,.001,.008,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,2.927,.109,.003,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ii:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.208,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.146,1e-4,1.029,1e-4,1e-4,1e-4,1e-4,1e-4,.343,.343,1e-4,1e-4,1e-4,1e-4,.686,1e-4,4.803,.172,2.401,1e-4,1e-4,.172,.343,.686,.686,.343,1e-4,1e-4,1e-4,1e-4,.515,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.172,1e-4,.172,1e-4,1e-4,1e-4,.172,.858,1e-4,.343,.343,1e-4,1e-4,1e-4,.172,1e-4,1e-4,1e-4,.343,.343,.343,.172,1e-4,.172,.343,1e-4,.515,1e-4,1e-4,1e-4,1e-4,1e-4,.172,1e-4,.172,1e-4,1e-4,2.573,1.887,1.544,.858,2.058,.343,1.715,.343,.343,1e-4,.172,1.201,1.887,1.029,1.372,.172,.343,1.029,.686,.172,.172,.172,.686,.858,.686,.172,.343,1e-4,.515,.172,.343,.686,.343,.172,1e-4,1e-4,.343,1e-4,.172,1.544,.172,.343,.686,.858,.686,.858,.343,.686,.172,.343,.343,.515,2.744,.172,1e-4,.343,.858,2.916,.343,.686,.343,1e-4,.343,.172,1e-4,1e-4,1.372,1e-4,.172,.172,1e-4,1e-4,1e-4,.172,.172,1e-4,.515,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.515,1.029,4.631,1.029,.686,1e-4,.858,10.635,1e-4,1e-4,1e-4,1e-4,.343,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ik:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.089,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.203,1e-4,1.053,1e-4,1e-4,.002,.004,.019,1.043,1.038,1e-4,.004,.489,.212,1.246,.04,.17,.264,.162,.084,.065,.055,.132,.065,.076,.124,.136,.025,.013,.002,.002,1e-4,1e-4,.824,.109,.155,.065,.052,.025,.048,.076,.634,.073,.409,.111,.352,.545,.069,.285,.321,.155,.436,.755,.409,.076,.046,.008,.044,.002,.01,1e-4,.015,1e-4,.008,1e-4,9.867,.308,1.051,.799,2.404,.327,1.605,1.011,7.743,.063,2.113,2.725,1.552,3.495,1.668,1.101,3.682,2.526,3.015,4.496,6.747,.801,.229,.065,.707,.103,1e-4,1e-4,1e-4,1e-4,1e-4,.097,.073,.183,.023,.006,.031,.013,.103,.05,.008,.004,.952,.019,.055,.002,.023,.013,.008,1e-4,.002,.008,.067,.013,.015,.004,.002,.04,.01,.017,.01,.002,.019,.013,.843,.013,.029,1.206,.281,.025,.006,.067,.006,.055,.004,.038,.017,.078,.034,.172,.862,.059,.01,.01,.067,.008,.187,.269,.134,.055,.021,.038,.019,.189,.046,1e-4,1e-4,.008,.944,.835,1.051,1e-4,1e-4,1e-4,1e-4,.006,.006,.008,1e-4,.025,.023,.42,.185,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.408,.191,.013,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ilo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.301,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.793,.111,.271,1e-4,.001,.008,.001,.018,.172,.172,.003,.003,.83,.304,.649,.008,.21,.325,.155,.097,.09,.094,.083,.085,.1,.166,.048,.03,.005,.001,.005,.001,1e-4,.349,.225,.111,.217,.099,.09,.118,.1,.241,.035,.175,.118,.232,.163,.054,.279,.009,.088,.233,.461,.072,.035,.029,.006,.014,.012,.036,1e-4,.036,1e-4,.001,1e-4,16.461,1.586,.189,2.856,3.734,.046,3.664,.306,10.008,.024,3.303,2.245,1.909,7.066,3.393,2.095,.012,2.409,3.066,6.078,2.307,.067,.549,.014,1.361,.048,1e-4,.007,1e-4,1e-4,1e-4,.043,.006,.003,.001,.002,.001,.001,.001,.002,.001,.001,.001,.001,.004,1e-4,1e-4,.001,.001,.001,.033,.004,.001,.001,.001,.001,.004,1e-4,.001,.002,.002,.001,.001,.015,.007,.001,.001,.003,.002,.001,.003,.002,.009,.002,.004,.001,.006,.002,.001,.013,.007,.003,.007,.004,.001,.003,.001,.004,.002,.004,.002,.003,.002,.001,.002,1e-4,1e-4,.027,.049,.008,.009,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.007,.004,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.004,.043,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],io:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.24,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.878,.001,.226,1e-4,.145,.683,.001,.155,.19,.19,.002,.001,1.502,.399,2.049,.127,1.123,1.116,.845,.565,.593,.586,.516,.395,.578,.496,.056,.039,.008,.001,.008,.001,1e-4,.262,.119,.082,.063,.203,.065,.07,.089,.077,.042,.131,.387,.144,.086,.052,.185,.006,.067,.238,.064,.127,.06,.027,.002,.018,.007,.008,1e-4,.008,1e-4,.001,1e-4,8.848,.82,.665,2.487,7.044,.592,.8,.82,7.741,.211,1.575,3.65,2.435,4.587,5.58,1.431,.273,4.484,4.553,2.971,2.4,1.482,.052,.098,.514,.499,1e-4,.004,1e-4,1e-4,1e-4,.011,.008,.004,.002,.001,.001,.001,.002,.001,.002,.001,.001,.001,.001,1e-4,.001,.001,.001,1e-4,.003,.002,.001,1e-4,.002,.001,.004,1e-4,.001,.002,.002,.001,.001,.096,.01,.001,.003,.003,.001,.001,.003,.002,.015,.001,.004,.001,.008,.001,.001,.005,.003,.253,.006,.002,.002,.003,.001,.003,.002,.004,.005,.003,.002,.002,.001,1e-4,1e-4,.356,.056,.003,.003,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.005,.003,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.01,.006,1e-4,.002,.001,.001,1e-4,1e-4,.001,.001,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],is:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.97,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.586,.001,.206,1e-4,1e-4,.008,.002,.007,.124,.124,1e-4,.001,.499,.123,1.026,.011,.247,.371,.182,.092,.087,.097,.09,.091,.11,.206,.046,.01,.008,.003,.008,.001,1e-4,.15,.156,.07,.071,.123,.128,.099,.219,.049,.069,.114,.102,.145,.086,.033,.076,.003,.091,.275,.089,.03,.081,.029,.009,.012,.006,.003,1e-4,.003,1e-4,.004,1e-4,6.834,.671,.132,1.35,4.383,2.01,2.575,1.208,5.351,.788,2.14,3.293,2.549,5.87,1.807,.609,.005,6.508,4.164,3.597,3.384,1.444,.036,.05,.678,.023,1e-4,.001,1e-4,1e-4,1e-4,.079,.071,.003,.002,.002,.001,.004,.001,.001,.002,.001,.001,.001,.093,.001,1e-4,.001,.001,.001,.031,.002,.001,.01,.001,.001,.001,.008,.001,.029,.003,.162,.001,.007,1.147,.001,.001,.003,.001,.559,.002,.002,.221,.001,.001,.001,1.194,.001,.001,2.653,.002,.003,.801,.002,.002,.588,.001,.004,.002,.419,.002,.005,.183,.658,.001,1e-4,1e-4,.014,8.751,.003,.003,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.007,.004,.011,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.079,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],iu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.678,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.59,.002,.2,.001,.003,.002,.003,.015,.174,.173,1e-4,.002,.361,.227,.729,.057,.148,.113,.088,.041,.055,.057,.038,.037,.041,.075,.086,.012,.034,.007,.037,.002,.001,.071,.015,.028,.016,.027,.021,.01,.09,.106,.011,.032,.025,.039,.045,.015,.038,.016,.009,.047,.052,.031,.008,.018,.002,.004,1e-4,.042,.001,.038,1e-4,.005,1e-4,3.23,.132,.269,.325,.963,.137,.72,.796,3.179,.121,.846,1.083,.73,1.94,.65,.417,.773,.909,.645,2.138,2.24,.378,.125,.018,.352,.009,.063,.016,.064,1e-4,1e-4,.195,.104,.722,2.277,.527,2.845,.283,.577,.292,.16,1.105,.322,.08,.107,.751,.183,5.797,4.461,2.284,5.133,1.078,2.99,2.939,.631,.063,.2,.245,.066,.007,.045,.004,.005,.011,.073,.039,.009,.018,.411,1.389,.092,.103,.04,1.113,.086,.008,.439,.043,.681,.098,.475,.284,.202,.231,.064,.012,.003,.129,.126,.009,.223,.007,.015,.041,.125,1e-4,1e-4,.1,.024,.004,.006,1e-4,1e-4,1e-4,.004,1e-4,.004,.002,1e-4,1e-4,.001,.131,.044,.006,.002,1e-4,1e-4,1e-4,.009,.014,.007,.001,.003,1e-4,1e-4,1e-4,1e-4,.013,21.14,.181,.003,.004,.004,.004,1e-4,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],jam:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.114,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.204,1e-4,.437,1e-4,.002,.015,.001,.02,.246,.245,1e-4,.001,1.286,.238,.848,.011,.225,.262,.144,.074,.072,.083,.075,.089,.083,.132,.047,.038,.014,.002,.014,.002,1e-4,.33,.18,.107,.273,.095,.097,.106,.027,.375,.206,.243,.122,.218,.135,.052,.177,.004,.132,.376,.091,.038,.042,.116,.003,.09,.009,.033,1e-4,.032,1e-4,1e-4,1e-4,11.751,1.124,.777,3.113,4.403,1.279,.882,3.07,11.71,.554,2.318,3.164,2.271,5.696,3.101,1.655,.006,3.113,3.636,3.486,2.985,.575,1.126,.207,.616,.737,1e-4,1e-4,1e-4,1e-4,1e-4,.054,.013,.006,.006,.011,.005,.006,.002,.011,.004,.003,.002,.005,.004,.004,.001,.005,.003,.003,.026,.009,.002,.001,.003,.001,.005,.001,.003,.008,.008,.001,1e-4,.066,.009,.001,.004,.01,.005,.003,.008,.009,.009,.007,.005,.005,.009,.003,.008,.005,.014,.004,.031,.002,.005,.002,.003,.006,.009,.008,.006,.007,.007,.004,.009,1e-4,1e-4,.069,.057,.012,.006,1e-4,.001,1e-4,.011,.004,.01,.001,1e-4,.049,.024,.009,.004,1e-4,1e-4,1e-4,.007,.002,.004,.025,.021,1e-4,.001,.001,1e-4,1e-4,1e-4,.017,.008,.051,1e-4,.002,.004,.003,.001,.002,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],jbo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,18.83,1e-4,.137,1e-4,1e-4,.001,1e-4,3.634,.016,.016,1e-4,1e-4,.047,.014,2.419,.008,.161,.318,.2,.098,.09,.087,.087,.089,.108,.172,.004,.001,1e-4,.002,1e-4,.001,1e-4,.035,.022,.028,.013,.017,.01,.012,.013,.015,.011,.012,.019,.022,.019,.015,.017,.001,.021,.029,.019,.006,.006,.008,.002,.002,.004,.002,1e-4,.003,1e-4,.003,1e-4,7.616,1.669,2.73,1.665,6.288,.906,1.481,.055,8.607,1.326,2.153,5.868,2.296,4.062,6.049,1.389,.004,2.945,3.13,2.492,4.934,.679,.018,.589,.829,.701,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.01,.006,.006,.011,.005,.003,.004,.008,.003,.008,.003,.003,.002,.002,.002,.003,.002,.001,.003,.004,.004,.001,.002,.001,.006,.001,.002,.002,.002,.001,.002,.003,.006,.002,.003,.005,.003,.006,.013,.006,.012,.005,.003,.005,.008,.003,.005,.01,.01,.007,.008,.003,.008,.002,.003,.01,.005,.017,.007,.005,.005,.004,.003,1e-4,1e-4,.004,.032,.005,.003,1e-4,1e-4,1e-4,.006,.004,.004,.002,1e-4,.016,.008,.046,.017,1e-4,1e-4,1e-4,1e-4,.001,.007,.035,.026,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.02,.006,.007,.005,.001,.004,.003,.001,.001,.001,.001,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],jv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.393,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.972,.002,.376,1e-4,.001,.006,.002,.021,.174,.174,1e-4,.002,1.038,.248,.884,.027,.242,.269,.17,.077,.072,.083,.071,.073,.084,.157,.063,.014,.005,.004,.005,.001,1e-4,.298,.282,.139,.175,.052,.071,.122,.1,.279,.193,.491,.137,.261,.155,.054,.404,.008,.134,.426,.252,.063,.039,.13,.007,.04,.014,.024,1e-4,.024,1e-4,.001,1e-4,13.56,1.271,.49,2.178,3.499,.191,4.675,1.646,6.887,.617,3.65,2.625,2.089,9.349,2.312,1.888,.011,3.362,3.296,3.086,3.992,.185,1.217,.022,.792,.054,1e-4,.002,1e-4,1e-4,1e-4,.032,.007,.005,.003,.005,.004,.003,.003,.005,.012,.002,.001,.001,.004,.005,.002,.003,.002,.003,.01,.003,.002,.001,.001,.003,.007,.001,.003,.006,.006,.001,.001,.039,.004,.002,.003,.006,.005,.004,.006,.531,1.186,.005,.003,.002,.005,.002,.002,.007,.006,.005,.006,.002,.002,.002,.001,.008,.005,.003,.002,.004,.002,.002,.002,1e-4,1e-4,.048,1.757,.01,.01,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.007,.003,.009,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.015,.024,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.01,.005,.031,.001,.001,.003,.002,.001,.001,.001,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ka:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.399,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.467,.006,.05,.004,1e-4,.005,1e-4,.002,.08,.08,1e-4,.001,.389,.146,.411,.004,.126,.165,.095,.049,.046,.05,.043,.044,.053,.091,.022,.014,.001,.004,.001,.001,1e-4,.009,.008,.011,.006,.004,.005,.005,.004,.036,.001,.002,.005,.008,.005,.004,.007,.001,.005,.01,.01,.002,.01,.003,.012,.001,.001,.002,1e-4,.002,1e-4,.001,1e-4,.058,.009,.021,.031,.066,.012,.013,.018,.047,.001,.009,.032,.017,.042,.05,.013,.001,.044,.039,.037,.025,.006,.004,.003,.014,.002,1e-4,.004,1e-4,1e-4,1e-4,.133,.001,.001,30.616,.001,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.203,1.072,.617,1.27,2.811,.901,.251,.727,3.846,.492,1.468,1.522,1.35,1.641,.3,.022,1.853,2.198,.578,.828,.251,.28,.142,.172,.523,.1,.36,.118,.305,.039,.412,.073,.048,.001,.009,.001,.001,.001,1e-4,1e-4,.002,.001,.001,.002,.001,.001,.002,.001,1e-4,1e-4,.023,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.013,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,30.616,.133,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kaa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.138,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.976,.002,.25,1e-4,1e-4,.021,.001,3.483,.188,.189,1e-4,.005,.857,.333,1.07,.015,.261,.313,.191,.105,.096,.102,.088,.083,.102,.171,.072,.024,.027,.002,.027,.004,1e-4,.278,.237,.043,.064,.083,.059,.068,.047,.074,.082,.125,.051,.155,.064,.155,.081,.145,.091,.217,.129,.07,.048,.02,.093,.029,.015,.006,1e-4,.006,1e-4,.001,.174,10.672,1.536,.082,2.608,4.846,.175,1.712,1.492,6.03,.848,1.882,4.983,2.176,5.612,2.458,1.187,1.824,4.354,3.602,3.336,1.517,.264,.926,.28,1.912,.845,1e-4,.004,1e-4,1e-4,1e-4,.223,.008,.008,.008,.005,.003,.002,.003,.003,.001,.002,.004,.002,.002,.002,.003,.008,.001,.002,.024,.089,.003,.024,.001,.007,.086,.002,.002,.011,.008,.005,.018,.016,.006,.003,.007,.007,.002,.001,.006,.003,.004,.002,.012,.002,.006,.001,.009,.142,4.113,.008,.007,.005,.049,.005,.002,.01,.003,.009,.024,.009,.012,.029,.003,1e-4,1e-4,.053,.053,4.15,.014,1e-4,.002,1e-4,.001,.004,1e-4,1e-4,1e-4,.009,.003,.235,.052,.004,.001,.001,.003,1e-4,.002,.013,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.006,.216,1e-4,.001,.003,.002,.001,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kab:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.63,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.911,.026,.321,1e-4,1e-4,.004,.001,.063,.372,.372,.003,.002,1.155,1.35,.936,.038,.266,.305,.202,.119,.101,.107,.102,.091,.121,.181,.18,.035,.01,.019,.017,.012,1e-4,.467,.145,.091,.191,.038,.078,.046,.038,.257,.025,.056,.211,.226,.079,.026,.046,.014,.063,.175,.468,.109,.016,.087,.018,.161,.062,.014,1e-4,.014,1e-4,.076,1e-4,9.2,.865,.672,3.845,7.769,.911,1.711,.292,5.622,.162,1.372,2.877,2.842,6.403,.445,.148,.603,3.37,3.532,4.882,2.937,.09,1.486,.181,2.148,.956,1e-4,.011,1e-4,1e-4,1e-4,.079,.004,.004,.003,.012,.007,.008,.003,.006,.01,.01,1e-4,.003,.341,.007,.006,.04,.002,.003,.156,.017,.001,.002,.001,.004,.031,.007,.42,.023,.016,.002,.009,.025,.004,.015,1.13,.027,.269,.019,.099,.024,.093,.007,.018,.013,.276,.002,.011,.014,.01,.006,.129,.025,.113,.001,.005,.586,.529,.15,.021,.004,.002,.001,1e-4,1e-4,1e-4,.056,.149,.056,.01,.05,.088,1e-4,1.3,.001,.001,.003,1e-4,.203,.001,.007,.002,1e-4,1e-4,1e-4,1e-4,.001,.008,.063,.048,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1.257,.143,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kbd:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.877,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.792,1e-4,.075,1e-4,.001,.011,1e-4,.003,.141,.14,1e-4,.003,.771,.205,.683,.004,.136,.165,.088,.057,.049,.062,.042,.043,.05,.078,.043,.017,.001,1e-4,.001,.001,1e-4,.002,.001,.003,.001,.001,.001,.001,.001,.304,1e-4,.002,.001,.002,.001,.001,.003,1e-4,.001,.002,.001,.001,.008,.001,.014,1e-4,1e-4,.008,1e-4,.008,1e-4,1e-4,1e-4,.03,.003,.008,.007,.025,.002,.005,.007,.023,.001,.003,.195,.01,.018,.016,.007,.001,.016,.015,.015,.012,.002,.002,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,3.555,.735,.993,2.937,.251,2.403,.222,.078,.401,1.056,2.895,2.991,.659,6.305,.005,.318,.209,.078,.019,.048,.196,.035,.012,.035,.104,.003,.214,.042,.072,.044,.009,.068,.044,.057,.06,.06,.029,.076,.012,.013,.04,.033,.001,.031,.001,.015,.002,.026,2.293,.626,.124,1.164,.956,.819,.63,.861,1.412,.263,1.894,1.024,2.202,1.111,.541,.996,1e-4,1e-4,.089,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.007,.001,.005,.002,18.347,24.31,.001,1.322,1e-4,1e-4,1e-4,1e-4,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.003,.144,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kbp:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.616,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.57,.002,.071,1e-4,1e-4,.002,1e-4,.006,.116,.115,1e-4,.002,.667,.749,.841,.003,.17,.215,.112,.059,.061,.065,.059,.058,.083,.103,.043,.02,1e-4,.014,1e-4,.002,1e-4,.165,.045,.077,.029,.079,.067,.032,.069,.044,.029,.18,.072,.11,.068,.032,.297,.002,.044,.127,.122,.017,.016,.035,.003,.036,.006,.025,1e-4,.025,1e-4,1e-4,1e-4,8.914,.693,.409,.775,2.26,.236,.534,.509,1.986,.346,2.598,2.297,1.559,3.608,1.061,1.995,.02,.616,1.735,2.888,.861,.082,.914,.015,2.587,.783,1e-4,.002,1e-4,1e-4,1e-4,.019,.022,.002,.003,.114,.001,.002,.001,.002,.067,2.039,2.33,.002,.002,.001,1e-4,.179,.013,.001,.001,2.735,.001,1.381,1e-4,.001,.007,1e-4,5.08,.004,.003,1e-4,1e-4,.004,.008,.005,1.151,.003,.001,.001,.004,.013,4.529,.002,.019,.001,.004,.003,.007,.003,.207,.003,.002,.003,.002,.003,.001,.006,.003,.002,.02,.003,.002,.002,.006,1e-4,1e-4,.035,.33,.004,1.069,.247,.001,1e-4,14.815,3.312,.001,.128,1e-4,.011,.006,.009,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.003,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.005,.007,.013,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.239,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.886,.007,.336,1e-4,1e-4,.012,.002,.078,.324,.324,.001,.002,.656,.558,1.416,.029,.129,.236,.138,.114,.084,.072,.081,.089,.086,.136,.151,.002,.018,.006,.018,.004,1e-4,.545,.514,.255,.205,.262,.18,.131,.1,.152,.059,.708,.293,.752,.533,.094,.176,.01,.241,.354,.199,.108,.106,.05,.006,.156,.054,.004,1e-4,.004,1e-4,.001,.001,12.562,2.277,.331,1.547,5.722,.691,1.741,.399,6.386,.118,3.863,3.599,2.582,6.478,2.883,.88,.049,1.355,2.305,2.139,4.827,.445,.58,.051,3.145,1.337,1e-4,1e-4,1e-4,1e-4,1e-4,.071,.012,.003,.002,.01,.004,.003,.001,.004,.005,.003,.002,.002,.003,.001,.001,.006,.001,.001,.062,.006,.002,1e-4,.001,.001,.009,.002,.004,.002,.001,.001,.001,.037,.129,.127,.006,.006,.002,.017,.018,.037,.077,.018,.027,.002,.034,.066,.007,.011,.023,.005,.025,.156,.002,.001,.003,.003,.002,.014,.066,.013,.002,.003,.002,1e-4,1e-4,.038,.798,.007,.01,1e-4,1e-4,1e-4,.013,.006,.004,1e-4,.001,.012,.004,.009,.006,.001,1e-4,1e-4,1e-4,1e-4,.006,.021,.018,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.016,.007,.069,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,.002,.002,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ki:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.157,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.033,.001,.1,.001,1e-4,.002,.005,.051,.116,.115,1e-4,1e-4,.384,.122,1.505,.04,.182,.215,.151,.09,.071,.091,.067,.064,.059,.089,.065,.003,.006,.002,.008,.01,1e-4,.273,.233,.763,.125,.089,.072,.168,.139,.145,.105,.364,.123,.376,.291,.066,.138,.046,.111,.252,.278,.132,.045,.093,.048,.079,.058,.02,1e-4,.02,1e-4,.015,1e-4,10.33,.786,1.541,.901,3.961,.163,2.604,2.426,8.641,.326,1.916,.633,2.867,6.576,3.627,.309,.068,4.492,.79,3.938,2.525,.104,1.397,.085,2.472,.26,.003,1e-4,.003,1e-4,1e-4,.05,.003,.002,.001,.003,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,.037,.01,1e-4,.001,.003,1e-4,.001,.001,.013,.005,1e-4,.002,1e-4,1e-4,1e-4,.001,.06,4.809,1e-4,.069,.002,.006,.001,.004,.016,.25,1e-4,.009,.003,.002,1e-4,.009,.003,.001,.003,.026,.003,.002,.001,1e-4,1e-4,1e-4,.021,.032,2.884,2.321,1e-4,.002,1e-4,.002,.021,.001,1e-4,1e-4,.002,.001,.009,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.048,1e-4,1e-4,.003,.001,1e-4,1e-4,1e-4,.001,.001,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kj:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.677,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.71,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.323,.323,1e-4,1e-4,.645,1e-4,.323,1e-4,1.613,1e-4,.323,.323,1e-4,1e-4,.645,.323,1e-4,1e-4,.968,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,1e-4,1e-4,.645,1e-4,1e-4,.323,1e-4,2.903,.323,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.097,3.226,1e-4,6.774,6.774,1.935,1.29,2.903,10.645,1e-4,3.226,3.226,6.129,2.581,8.065,.323,1e-4,1e-4,.968,.323,1.935,.645,2.581,1e-4,.323,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.706,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.721,.001,.107,.001,1e-4,.006,1e-4,.002,.151,.153,.001,.003,.51,.246,.686,.019,.221,.251,.17,.104,.092,.099,.09,.082,.09,.149,.04,.015,.002,.003,.002,.002,1e-4,.007,.006,.025,.003,.016,.005,.021,.002,.024,.001,.002,.003,.008,.018,.004,.01,1e-4,.004,.021,.003,.003,.004,.004,.005,.001,.003,.003,1e-4,.003,1e-4,.002,1e-4,.029,.005,.01,.008,.028,.004,.005,.007,.042,1e-4,.004,.014,.009,.02,.023,.007,1e-4,.021,.015,.017,.01,.003,.003,.001,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,2.667,1.698,2.42,.825,.088,.097,.101,.026,.573,.004,.008,3.51,.092,.043,.029,.226,.151,.105,.034,.789,.175,.042,2.128,.009,.046,.288,.211,1.223,.099,.041,.082,.052,.093,.104,.084,.646,.032,.032,.003,.007,.066,.363,1e-4,.047,.001,.014,.013,.268,5.447,1.26,.188,.541,1.919,3.092,.668,.583,.903,.603,1.169,2.242,1.309,3.102,1.26,.548,1e-4,1e-4,.145,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,.001,1e-4,25.612,14.266,3.356,.697,1e-4,1e-4,1e-4,1e-4,.002,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.197,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.635,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.811,.001,.341,1e-4,1e-4,.006,.002,.029,.34,.34,.002,.001,.7,.575,1.063,.02,.29,.457,.333,.207,.125,.141,.14,.129,.134,.187,.161,.026,.008,.005,.008,1e-4,1e-4,.28,.09,.107,.095,.075,.086,.052,.078,.183,.108,.243,.074,.184,.254,.06,.118,.079,.062,.257,.166,.177,.059,.032,.002,.012,.015,.004,1e-4,.004,1e-4,.001,1e-4,12.711,.276,.184,.432,3.419,.731,1.669,.268,10.409,.217,2.335,4.586,2.81,6.778,2.817,1.735,2.883,5.126,5.68,6.217,6.675,.652,.054,.023,.144,.055,1e-4,1e-4,1e-4,.001,1e-4,.031,.035,.014,.011,.03,.017,.013,.007,.019,.003,.015,.002,.011,.008,.02,.004,.014,.011,.007,.013,.007,.01,.01,.01,.008,.016,.005,.005,.009,.004,.004,.006,.015,.021,.01,.011,.03,.03,.045,.038,.021,.031,.02,.014,.007,.018,.005,.016,.035,.027,.022,.024,.011,.015,.016,.009,.078,.018,.016,.011,.01,.011,.018,.012,1e-4,1e-4,.012,.201,.031,.017,.001,.001,1e-4,.004,.004,.004,.004,1e-4,.016,.008,.085,.031,1e-4,.001,1e-4,1e-4,.024,.053,.13,.094,.007,.006,1e-4,1e-4,1e-4,1e-4,.065,.039,.022,1e-4,.001,.011,.007,.001,.001,.003,.001,.002,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],km:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.234,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.565,.004,.038,1e-4,1e-4,.004,1e-4,.009,.049,.049,1e-4,.001,.07,.028,.072,.003,.02,.022,.013,.008,.007,.007,.006,.006,.007,.012,.008,.003,.007,.012,.008,.004,1e-4,.018,.012,.02,.008,.012,.009,.007,.009,.013,.004,.006,.012,.012,.009,.006,.011,.001,.009,.018,.02,.004,.004,.006,.002,.002,.001,.022,1e-4,.022,1e-4,.004,1e-4,.403,.068,.154,.173,.554,.096,.093,.2,.358,.005,.025,.201,.122,.348,.339,.093,.005,.306,.292,.378,.132,.051,.059,.012,.073,.006,1e-4,.001,1e-4,1e-4,1e-4,2.652,.801,.696,.139,1.351,.735,.591,.836,.083,.299,.563,1.859,.05,.041,.223,1.134,.273,.671,2.897,1.707,1.359,.097,.57,.24,1.039,.72,1.493,.708,.482,.006,22.614,7.802,.292,.16,.416,.027,.02,.041,.016,.053,.015,.021,.003,.006,.019,.002,.004,.041,.002,.021,.047,.001,.001,.001,2.388,.829,.388,.131,.053,.602,.318,.199,.385,.021,1e-4,1e-4,.017,.006,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,29.306,1.288,.001,1e-4,.001,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.22,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.193,.001,.077,1e-4,.001,.006,.001,.024,.05,.05,.001,.001,.263,.039,.387,.008,.055,.048,.031,.015,.013,.017,.014,.014,.016,.027,.012,.01,.001,.002,.001,.001,1e-4,.007,.004,.007,.004,.004,.003,.002,.002,.007,.001,.001,.002,.005,.003,.003,.004,1e-4,.003,.008,.004,.004,.002,.002,.001,1e-4,1e-4,.005,1e-4,.005,1e-4,.001,.001,.019,.003,.007,.007,.022,.004,.004,.008,.016,.001,.002,.009,.007,.014,.015,.005,1e-4,.014,.012,.015,.006,.002,.003,.001,.003,.001,1e-4,.003,1e-4,1e-4,1e-4,.377,1.744,1.056,.052,1e-4,.294,1.302,.476,.14,.07,.25,.184,.18,3.237,.115,.016,.01,1e-4,.076,.009,.004,1.075,.058,1.134,.019,.006,.205,.005,.214,.004,.012,.397,.02,.439,.004,.214,1.341,.105,1.57,.184,1.477,.01,.553,.067,.408,.14,.772,.936,1.909,1e-4,24.738,8.223,1e-4,1.147,.212,.182,.975,.409,1e-4,1e-4,.001,1e-4,1.605,2.364,1e-4,1e-4,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.178,1e-4,.177,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],koi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.5,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.538,.003,.105,1e-4,1e-4,.012,1e-4,.066,.298,.299,.001,.003,.665,.135,.828,.022,.193,.238,.151,.096,.069,.095,.069,.062,.067,.14,.09,.011,.011,.003,.011,.012,1e-4,.012,.004,.007,.003,.004,.002,.002,.009,.016,.003,.015,.007,.012,.004,.018,.015,1e-4,.004,.016,.008,.003,.011,.001,.01,.001,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.204,.031,.062,.036,.122,.007,.019,.037,.201,.009,.035,.077,.03,.109,.075,.025,.001,.099,.08,.059,.07,.013,.004,.003,.013,.003,1e-4,1e-4,1e-4,1e-4,1e-4,2.529,2.707,1.977,1.216,.076,.086,.043,.37,.314,.008,.015,2.496,1.151,.356,.143,.67,.146,.176,.113,.201,.173,.031,.44,.017,.071,.03,.345,.07,.14,.058,.096,.178,.09,.17,.07,.048,.048,.034,.04,1.604,.03,.001,.001,.041,1e-4,.038,.042,.02,3.314,.375,1.556,.398,1.638,1.43,1.24,.859,1.906,.527,1.802,1.787,1.504,2.903,2.273,.718,1e-4,1e-4,.079,.905,.001,.001,1e-4,1e-4,1e-4,.001,.001,.001,.021,1e-4,.001,.001,25.357,14.367,.001,1.602,1e-4,1e-4,.001,.002,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,1e-4,.293,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,25,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.667,1e-4,1e-4,1e-4,8.333,1e-4,8.333,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,8.333,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],krc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.633,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.611,.001,.078,1e-4,.002,.011,1e-4,.002,.139,.14,1e-4,.001,.591,.21,.542,.004,.138,.24,.114,.076,.067,.073,.058,.056,.073,.12,.04,.013,.002,.001,.002,.001,1e-4,.004,.004,.006,.003,.003,.002,.003,.002,.03,.001,.002,.003,.004,.002,.002,.002,.001,.002,.005,.004,.001,.01,.002,.017,1e-4,.001,.014,1e-4,.014,1e-4,.001,1e-4,.038,.009,.012,.014,.044,.006,.01,.013,.029,.002,.006,.019,.015,.026,.027,.008,.001,.031,.024,.024,.014,.007,.003,.002,.005,.003,1e-4,.001,1e-4,1e-4,1e-4,2.564,1.141,1.579,1.633,.148,.303,.164,.503,.456,.003,1.306,2.454,.134,.294,.686,.418,.168,.334,.032,.057,.2,.019,.006,.011,.056,.006,.17,.03,.076,.03,.044,.051,.143,.104,.049,.03,.04,.03,.005,.024,.052,.001,.001,.061,.001,.035,.01,.009,6.121,1.252,.294,1.328,2.359,2.412,.507,.442,2.779,.471,1.691,3.418,1.039,3.402,1.301,.302,1e-4,1e-4,.209,.005,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,1e-4,.006,.002,30.423,13.816,.001,1e-4,1e-4,.001,1e-4,.002,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.004,.14,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ks:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.09,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.116,1e-4,.395,.007,1e-4,1e-4,.004,.023,.126,.124,1e-4,.001,.08,.153,.257,.005,.042,.08,.041,.04,.021,.031,.018,.019,.02,.048,.059,.003,.053,.167,.053,1e-4,1e-4,.005,.003,.008,.007,.01,.007,.001,.002,.016,.003,.003,.003,.004,.019,.008,.002,1e-4,.005,.01,.013,.001,1e-4,.002,1e-4,1e-4,1e-4,.003,1e-4,.001,1e-4,1e-4,1e-4,.198,.016,.127,.13,.17,.01,.074,.033,.171,.002,.016,.235,.092,.256,.101,.014,1e-4,.218,.145,.254,.031,.065,.054,1e-4,.012,1e-4,1e-4,.009,1e-4,1e-4,1e-4,.451,1.562,.534,.248,1.154,1.571,2.211,.263,1.281,.132,.341,.16,1.683,.702,.993,.637,.623,.052,.37,.043,.331,.813,.313,.319,.042,.007,.092,.282,.326,.013,.006,.065,.245,.114,.179,.083,8.684,2.577,.461,2.698,1.217,.995,1.306,.114,.545,.242,.666,1.253,.811,1.543,.848,.915,.434,.417,.188,.11,.481,.73,.156,.08,.312,.004,2.104,.512,1e-4,1e-4,.188,1e-4,.017,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.031,1e-4,.008,.002,.028,.008,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.045,10.482,2.72,3.264,1e-4,1e-4,1e-4,1e-4,10.717,.001,.078,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.129,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ksh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.3,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.544,.007,.195,.001,1e-4,.006,.002,.064,.077,.076,.018,1e-4,.951,.126,1.237,.01,.258,.351,.176,.091,.09,.099,.083,.083,.116,.206,.046,.013,.003,.002,.003,.004,1e-4,.29,.361,.086,.549,.218,.205,.059,.258,.102,.404,.343,.228,.359,.191,.138,.226,.009,.194,.601,.11,.081,.179,.232,.004,.009,.121,.015,1e-4,.017,1e-4,.132,1e-4,4.203,.771,2.07,4.046,9.612,.707,.863,3.367,3.374,1.363,1.028,2.762,2.009,5.309,3.906,.798,.006,4.302,3.629,3.86,2.108,1.453,1.005,.049,.079,.749,1e-4,.004,1e-4,1e-4,1e-4,.123,.002,.002,.001,.082,.001,.001,.001,.001,.001,1e-4,.005,1e-4,.002,.001,1e-4,.001,.001,.001,.005,.011,1e-4,.082,.036,.001,.009,1e-4,.001,.047,.002,.044,.413,.03,.004,.001,.001,1.721,.001,.004,.002,.003,.013,.001,.084,.001,.002,1e-4,.008,.003,.001,.005,.025,.002,.001,1.538,.002,.001,.001,.002,.003,.531,.002,.001,1e-4,1e-4,1e-4,.029,4.494,.051,.013,1e-4,1e-4,1e-4,.005,1e-4,.001,1e-4,1e-4,.002,.001,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.124,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ku:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.393,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.949,.005,.256,1e-4,1e-4,.006,.001,.113,.21,.21,.006,.003,.803,.095,1.083,.023,.197,.26,.139,.073,.067,.078,.071,.068,.08,.162,.084,.022,.008,.003,.008,.006,1e-4,.192,.235,.084,.253,.208,.064,.107,.175,.032,.081,.247,.144,.22,.115,.035,.144,.05,.104,.203,.123,.017,.026,.063,.071,.053,.061,.009,1e-4,.009,1e-4,.003,.002,7.122,1.894,.369,2.998,7.334,.296,.895,1.263,5.92,.932,2.612,1.973,1.601,5.257,1.434,.604,.177,4.384,1.643,2.193,1.071,1.195,1.296,.608,2.23,.722,1e-4,.001,1e-4,1e-4,1e-4,.075,.006,.004,.007,.009,.007,.012,.062,.012,.002,.018,.001,.015,.003,.068,.002,.001,.001,.002,.006,.001,.004,.003,.001,.007,.019,.001,.009,.013,.012,.074,.658,.013,.005,.004,.002,.003,.002,.004,.335,.008,.015,3.587,.004,.003,.008,2.776,.007,.009,.038,.007,.007,.016,.003,.007,.002,.005,.004,.005,1.203,.019,.003,.004,.002,1e-4,1e-4,.03,8.061,.042,.73,1e-4,1e-4,.001,.001,.001,.001,.001,1e-4,.01,.005,.017,.006,1e-4,1e-4,1e-4,.001,.001,.003,.063,.061,.005,.012,.001,1e-4,1e-4,1e-4,.002,.006,.073,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.403,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.572,.002,.112,1e-4,1e-4,.004,1e-4,.006,.253,.254,.001,.001,.652,.237,.796,.019,.199,.362,.176,.114,.094,.095,.085,.09,.105,.228,.059,.022,.003,.001,.004,.001,1e-4,.008,.005,.011,.005,.005,.004,.005,.005,.02,.004,.011,.006,.006,.007,.004,.005,.002,.005,.011,.006,.004,.008,.003,.013,.003,.002,.039,1e-4,.039,1e-4,1e-4,1e-4,.115,.019,.016,.027,.069,.009,.022,.03,.155,.012,.027,.043,.035,.068,.048,.017,.005,.048,.041,.048,.044,.012,.013,.005,.014,.009,1e-4,1e-4,1e-4,1e-4,1e-4,2.292,3.131,1.711,1.163,.094,.093,.068,.394,.316,.013,.283,2.417,.996,.157,.138,.933,.185,.144,.161,.163,.266,.043,.288,.024,.072,.036,.257,.079,.116,.07,.051,.125,.115,.273,.082,.056,.037,.021,.028,2.085,.052,.007,.009,.112,.005,.032,.025,.019,3.353,.487,1.618,.507,1.803,1.293,.994,.555,1.916,.692,1.739,1.936,1.41,2.819,2.119,.641,1e-4,1e-4,.211,.665,.015,.015,.006,.004,.002,.021,.019,.013,.017,.003,.013,.006,25.09,14.142,.006,2.075,.003,.001,.001,.003,.01,.008,.001,.001,.002,1e-4,1e-4,1e-4,.016,.023,.303,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.012,1e-4,1e-4,1e-4,1e-4,1e-4,.018,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],kw:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.271,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.698,.003,.428,1e-4,1e-4,.066,.001,.379,.501,.501,.001,.001,1.043,.466,1.444,.019,.602,.995,.55,.31,.288,.284,.283,.29,.333,.472,.076,.113,.013,.003,.013,.002,1e-4,.413,.261,.217,.211,.211,.117,.24,.182,.089,.078,.627,.279,.264,.166,.089,.271,.018,.16,.497,.182,.13,.12,.167,.003,.325,.009,.005,1e-4,.005,1e-4,1e-4,1e-4,7.247,1.102,.333,2.599,6.963,.397,1.527,3.863,2.585,.151,1.745,2.596,1.638,6.936,4.292,.693,.011,4.812,4.449,2.907,1.185,1.044,2.706,.022,4.495,.043,1e-4,.004,1e-4,1e-4,1e-4,.063,.013,.005,.007,.005,.004,.003,.003,.006,.002,.002,.001,.003,.005,.002,.002,.003,.003,.001,.033,.004,.002,.002,.004,.004,.02,.001,.001,.003,.002,.001,.002,.025,.014,.004,.005,.015,.004,.003,.007,.004,.018,.007,.005,.002,.009,.005,.004,.012,.007,.012,.009,.008,.009,.007,.003,.012,.008,.009,.008,.006,.007,.012,.004,1e-4,1e-4,.028,.1,.011,.012,1e-4,.001,1e-4,.007,.003,.004,.004,1e-4,.012,.004,.062,.02,1e-4,1e-4,1e-4,.001,1e-4,.004,.013,.011,.001,.001,1e-4,1e-4,.002,1e-4,.013,.007,.058,1e-4,.001,.002,.002,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ky:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.608,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.786,.001,.076,1e-4,1e-4,.007,.001,.001,.181,.185,1e-4,.003,.592,.375,.793,.011,.212,.26,.154,.095,.087,.095,.083,.081,.088,.165,.05,.023,.024,.003,.024,.002,1e-4,.006,.009,.006,.003,.002,.01,.002,.004,.023,.001,.001,.003,.004,.009,.004,.011,1e-4,.003,.019,.005,.001,.003,.002,.004,.001,1e-4,.007,1e-4,.008,1e-4,.002,1e-4,.034,.028,.011,.01,.036,.004,.007,.01,.029,.001,.005,.017,.009,.023,.028,.008,.001,.047,.02,.022,.013,.003,.003,.002,.006,.001,1e-4,.002,1e-4,1e-4,1e-4,2.775,1.184,2.443,1.907,.113,.08,.128,.561,.622,.004,.005,2.414,.086,.264,.107,.368,.184,.149,.029,.1,.146,.009,.06,.008,.039,.003,.233,.023,.133,.051,.082,.045,.072,.109,.101,.162,.039,.017,.003,.031,.045,.843,1e-4,.06,.001,.049,.011,1.059,5.238,.934,.249,1.237,1.665,2.222,.662,.522,2.314,.665,2.431,2.219,1.157,3.498,1.756,.567,1e-4,1e-4,.135,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,28.842,12.881,1.192,.856,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.186,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],la:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.703,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.582,.002,.557,1e-4,1e-4,.004,.001,.038,.296,.296,.016,.002,1.029,.127,.917,.01,.288,.518,.368,.158,.135,.172,.155,.139,.169,.292,.103,.058,.002,.004,.002,.002,1e-4,.441,.179,.385,.16,.131,.176,.158,.144,.363,.023,.04,.184,.266,.121,.103,.293,.049,.202,.319,.152,.063,.122,.033,.022,.01,.013,.004,1e-4,.004,1e-4,.004,1e-4,7.718,1.137,2.983,1.877,7.832,.566,.934,.721,8.862,.018,.079,2.703,3.638,5.533,4.661,1.753,.47,5.095,5.379,5.968,5.347,.814,.036,.291,.205,.069,1e-4,.007,1e-4,1e-4,1e-4,.045,.018,.011,.014,.009,.005,.004,.005,.004,.018,.002,.002,.005,.007,.002,.002,.004,.003,.002,.014,.007,.002,.002,.002,.003,.004,.003,.002,.004,.003,.003,.004,.013,.011,.004,.003,.009,.004,.004,.006,.01,.02,.004,.013,.003,.007,.003,.005,.044,.013,.009,.008,.006,.012,.008,.005,.014,.01,.011,.011,.013,.014,.01,.01,1e-4,1e-4,.047,.083,.019,.012,1e-4,.001,.002,.001,.002,.001,1e-4,1e-4,.062,.03,.07,.024,1e-4,1e-4,1e-4,.002,.001,.005,.012,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,.015,.037,.003,.001,.003,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lad:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.233,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.114,.001,.334,1e-4,1e-4,.009,.001,.032,.169,.169,1e-4,1e-4,1.028,.087,.763,.008,.237,.25,.147,.074,.074,.086,.072,.065,.078,.138,.053,.043,.005,.001,.005,.001,1e-4,.303,.15,.122,.124,.422,.07,.094,.073,.145,.052,.173,.269,.273,.076,.097,.169,.01,.114,.279,.178,.068,.08,.015,.026,.054,.024,.01,1e-4,.01,1e-4,1e-4,1e-4,10.092,.654,.428,4.329,9.389,.52,.701,.524,5.468,.466,2.315,4.475,1.912,5.533,6.266,1.56,.038,4.367,5.784,3.223,2.47,1.069,.027,.043,1.039,.561,1e-4,.001,1e-4,1e-4,1e-4,.02,.012,.005,.005,.009,.006,.004,.004,.005,.003,.006,.002,.002,.003,.003,.001,.015,.012,.004,.011,.018,.019,.004,.004,.007,.031,.002,.006,.016,.006,.01,.011,.017,.14,.008,.005,.006,.003,.003,.02,.02,.11,.013,.01,.003,.09,.002,.005,.012,.024,.019,.137,.008,.006,.005,.006,.008,.006,.03,.011,.011,.004,.004,.004,1e-4,1e-4,.044,.511,.018,.013,1e-4,.001,1e-4,.001,.001,.001,.001,1e-4,.017,.007,.023,.009,1e-4,1e-4,1e-4,.005,.02,.199,.037,.028,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.002,.006,.018,1e-4,.001,.003,.002,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.412,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.95,.002,.355,1e-4,1e-4,.008,.002,.417,.145,.146,.001,.003,.802,.307,1.03,.016,.348,.52,.266,.139,.134,.143,.128,.134,.162,.294,.059,.012,.015,.003,.015,.001,1e-4,.428,.324,.254,.594,.233,.259,.289,.233,.12,.196,.27,.284,.379,.192,.132,.314,.012,.243,.585,.165,.101,.142,.167,.006,.01,.098,.005,1e-4,.005,1e-4,.003,1e-4,4.931,.886,1.95,2.841,11.151,.974,2.202,2.438,4.449,.072,.85,2.736,2.142,6.511,2.976,.873,.044,5.369,4.192,4.448,3.418,.952,.815,.087,.179,.783,1e-4,.001,1e-4,1e-4,1e-4,.039,.004,.003,.002,.022,.001,.001,.002,.001,.016,.001,.02,.001,.001,.003,.001,.001,.001,.001,.012,.001,1e-4,.001,.002,.001,.002,.001,.001,.01,.002,.008,.002,.053,.005,.005,.001,.485,.001,.003,.007,.029,.959,.004,.541,.001,.003,.002,.002,.009,.004,.006,.005,.01,.003,.01,.001,.004,.002,.003,.005,.046,.003,.003,.002,1e-4,1e-4,.061,2.169,.003,.004,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.01,.004,.024,.008,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.037,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lbe:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.255,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.9,.001,.252,1e-4,1e-4,.001,1e-4,.011,.416,.416,1e-4,.003,.481,.136,.815,.07,.265,.236,.199,.107,.105,.116,.098,.098,.121,.12,.136,.067,.071,.002,.067,.006,1e-4,.016,.004,.021,.002,.004,.005,.004,.003,.485,1e-4,.002,.006,.012,.003,.003,.014,.001,.005,.011,.004,.002,.006,.002,.003,.002,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.216,.084,.071,.045,.128,.01,.022,.031,.155,.002,.014,.09,.049,.088,.086,.051,.003,.174,.114,.069,.102,.012,.003,.009,.024,.006,.001,.001,.001,.001,1e-4,3.391,1.985,1.311,3.41,.076,1.237,.309,.579,.377,.095,.645,.087,1.158,.044,.125,.671,.313,.089,.058,.221,.212,.014,.015,.044,.077,.005,.185,.069,.144,.054,.029,.04,.037,.075,.123,.038,.018,.116,.052,.091,.05,.027,.003,.033,.004,.04,.009,.029,7.018,.742,1.169,.714,1.012,.485,.137,.404,2.976,.818,1.445,2.805,1.012,2.921,.476,.297,1e-4,1e-4,.062,.008,.006,.002,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,26.245,14.532,1e-4,.534,1e-4,.001,1e-4,.009,.088,.067,1e-4,.002,1e-4,1e-4,1e-4,1e-4,.003,.019,.318,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lez:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.788,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.917,.001,.11,1e-4,1e-4,.014,1e-4,1e-4,.118,.119,1e-4,.001,.531,.18,.599,.004,.16,.227,.133,.076,.063,.071,.067,.062,.08,.115,.048,.01,.001,1e-4,.001,.001,1e-4,.003,.002,.005,.001,.002,.001,.001,.001,.351,1e-4,.001,.001,.002,.001,.001,.002,1e-4,.001,.002,.002,.001,.01,.001,.037,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.023,.003,.006,.005,.017,.002,.004,.004,.014,.001,.003,.017,.004,.011,.011,.005,1e-4,.013,.01,.009,.009,.002,.001,.001,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,3.387,1.088,1.449,2.206,.197,.805,.228,.469,.264,.003,.696,.03,1.797,.123,.075,.643,.214,.062,.057,.099,.243,.013,.01,.016,.072,.013,.197,.034,.095,.027,.015,.041,.182,.109,.046,.053,.025,.087,.024,.038,.035,.001,.001,.075,.001,.022,.007,.017,6.908,.463,1.591,1.254,1.853,1.815,.195,.884,4.344,1.376,1.744,1.947,.879,2.868,.597,.413,1e-4,1e-4,.264,.003,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,.007,1e-4,.004,.002,30.62,13.045,1e-4,.248,1e-4,.001,1e-4,.001,.004,.007,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.003,.002,.149,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.42,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.857,.039,.098,1e-4,1e-4,.008,1e-4,.193,.619,.652,.006,.013,.576,.063,.759,.031,.142,.149,.106,.065,.048,.064,.043,.046,.035,.039,.112,.029,.002,.038,.003,.025,1e-4,.202,.147,.077,.032,.406,.021,.082,.019,.071,.01,.184,.083,.172,.138,.35,.039,.002,.027,.089,.063,.041,.016,.06,.001,.036,.019,.012,1e-4,.012,1e-4,.01,.001,11.513,4.158,.451,1.382,6.569,.546,2.789,.349,6.274,.363,4.548,2.809,3.269,5.614,5.854,.404,.013,2.198,2.205,2.706,6.16,.367,2.254,.045,2.427,1.395,.001,1e-4,.001,1e-4,1e-4,1.181,.001,.015,.002,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.004,1e-4,1e-4,.011,1e-4,1e-4,1e-4,1e-4,.012,1e-4,1e-4,1e-4,.006,.008,.842,.001,1e-4,.092,.085,1e-4,1e-4,.001,.001,.113,1e-4,1e-4,1e-4,.017,.01,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.001,1e-4,.002,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.004,.006,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.181,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.019,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],li:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.944,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.135,.002,.418,1e-4,1e-4,.017,.001,1.033,.22,.22,.002,.001,.717,.245,.974,.02,.269,.322,.176,.093,.094,.096,.096,.091,.103,.161,.092,.054,.018,.002,.018,.001,1e-4,.18,.177,.097,.347,.099,.066,.119,.148,.188,.05,.105,.134,.157,.158,.108,.098,.003,.104,.185,.093,.028,.141,.105,.003,.004,.083,.008,.001,.008,1e-4,1e-4,.001,5.507,1.139,.937,3.64,13.741,.575,2.233,1.264,5.103,1.163,1.751,2.989,1.798,6.008,4.376,1.144,.011,4.793,3.527,4.666,1.997,1.767,1.153,.045,.112,.704,1e-4,.001,1e-4,.001,1e-4,.031,.005,.002,.002,.002,.002,.001,.001,.004,.001,.001,.001,.001,.001,.001,1e-4,.001,.001,.001,.01,.001,1e-4,.002,1e-4,.007,.018,1e-4,.001,.002,.002,.001,.002,.004,.007,.003,.002,.113,.003,.001,.003,.424,.024,.004,.246,.001,.004,.001,.014,.003,.003,.027,.238,.005,.002,.354,.001,.005,.003,.003,.002,.014,.002,.003,.002,1e-4,1e-4,.028,1.471,.005,.005,1e-4,1e-4,1e-4,.004,.002,.001,.001,1e-4,.01,.004,.009,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.006,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.031,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lij:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.115,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.653,.006,.425,1e-4,1e-4,.003,.001,1.006,.211,.212,1e-4,1e-4,1.079,.522,.689,.013,.183,.34,.145,.099,.1,.107,.089,.101,.099,.127,.107,.071,.08,.003,.08,.006,1e-4,.288,.108,.216,.12,.091,.089,.116,.025,.235,.016,.018,.145,.148,.083,.128,.166,.021,.11,.224,.097,.053,.082,.012,.025,.004,.066,.003,1e-4,.003,1e-4,1e-4,.001,7.807,.66,2.955,3.041,7.727,.79,1.509,.643,7.15,.033,.062,2.465,2.057,5.516,6.662,1.83,.232,3.742,3.269,4.498,2.078,1.097,.032,.327,.052,.447,1e-4,.015,1e-4,1e-4,1e-4,.126,.011,.006,.006,.007,.003,.005,.015,.003,.004,.003,.001,.004,.006,.001,.002,.001,.002,.007,.108,.002,.001,.003,.001,.007,.097,.001,.002,.005,.004,.001,.001,.105,.013,.443,.002,.076,.002,.52,.668,.246,.118,.122,.032,.129,.012,.108,.033,.028,.081,.222,.058,.152,.005,.088,.002,.006,.059,.022,.1,.117,.007,.005,.013,1e-4,1e-4,.059,3.444,.014,.118,1e-4,.001,1e-4,.001,.001,.001,.003,1e-4,.026,.013,.031,.013,1e-4,1e-4,1e-4,.002,.001,.001,.016,.012,1e-4,.001,1e-4,1e-4,.001,1e-4,.009,.005,.121,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lmo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.694,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.003,.007,.496,1e-4,.002,.011,.001,1.536,.286,.286,1e-4,.001,1.048,.242,.905,.061,.214,.291,.19,.13,.124,.121,.109,.107,.118,.137,.12,.041,.23,.036,.23,.004,1e-4,.256,.222,.29,.092,.333,.125,.138,.035,.151,.022,.022,.325,.213,.07,.062,.237,.013,.158,.284,.115,.042,.131,.03,.012,.005,.017,.008,1e-4,.008,1e-4,.008,1e-4,8.462,.843,2.691,3.762,7.44,.686,1.303,1.109,4.912,.086,.225,4.93,2.005,5.17,2.753,1.529,.12,4.31,3.255,3.626,1.912,.803,.038,.028,.061,.501,1e-4,.001,1e-4,1e-4,1e-4,.065,.004,.005,.004,.003,.002,.001,.001,.002,.003,.001,.002,.002,.003,.001,.001,.001,.001,.002,.011,.002,1e-4,.002,.001,.012,.042,.001,.001,.018,.002,.001,.003,.883,.012,.006,.001,.021,.001,.002,.005,.978,.311,.003,.015,.376,.025,.002,.002,.004,.005,.393,.184,.028,.003,.199,.002,.003,.227,.023,.007,.722,.004,.002,.004,1e-4,1e-4,.146,4.287,.005,.015,1e-4,1e-4,1e-4,.003,.001,.001,1e-4,1e-4,.019,.008,.013,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.061,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ln:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.397,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.893,.03,.25,.011,.001,.018,.001,.058,.196,.195,.019,1e-4,.627,.278,.997,.017,.237,.316,.167,.077,.074,.095,.09,.07,.092,.208,.084,.022,.031,.028,.031,.008,1e-4,.272,.381,.139,.08,.273,.07,.073,.036,.085,.047,.397,.244,.485,.279,.076,.136,.004,.069,.216,.116,.035,.048,.05,.005,.052,.034,.014,.018,.014,1e-4,.004,1e-4,10.636,2.915,.49,.988,4.562,.3,1.532,.289,5.022,.059,3.253,3.932,3.872,5.27,5.607,1.218,.071,1.319,2.651,2.571,1.582,.27,.506,.061,2.255,1.262,1e-4,.013,1e-4,1e-4,1e-4,.045,.425,.034,.001,.004,.002,.016,1e-4,.002,.009,.003,1e-4,.047,.002,.03,1e-4,.012,1e-4,.122,.011,.585,1e-4,1e-4,1e-4,.001,.025,.001,.584,.003,.002,.001,1e-4,.21,1.199,.019,.009,.001,.001,.002,.013,.036,1.009,.021,.019,.002,.983,.006,.015,.003,.003,.005,.692,.016,.003,.001,.001,.001,.002,.332,.02,.002,.001,1e-4,.002,1e-4,1e-4,.228,4.372,.034,.004,.008,.141,1e-4,1.137,.001,.001,.5,1e-4,.009,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.005,.014,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.057,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.442,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.079,.001,.049,1e-4,1e-4,.006,1e-4,.004,.071,.071,.001,.001,.152,.034,.234,.012,.09,.111,.08,.044,.039,.045,.029,.03,.029,.051,.034,.006,.003,.002,.003,.001,1e-4,.013,.008,.01,.008,.006,.005,.004,.005,.01,.003,.004,.008,.008,.007,.003,.012,1e-4,.005,.013,.013,.003,.004,.004,.001,.001,1e-4,.002,1e-4,.002,1e-4,.002,1e-4,.157,.027,.063,.059,.202,.033,.037,.067,.14,.003,.015,.078,.05,.13,.139,.039,.002,.117,.112,.142,.055,.018,.023,.006,.028,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1.694,1.8,.562,.336,.72,1e-4,.034,1.352,1.675,1.044,.455,.525,.031,.727,.002,.001,.005,.004,.004,.01,1.254,.484,.162,.734,.009,2.294,.653,.586,.209,.092,.491,.038,.022,1.013,.148,.224,.003,.796,.001,.85,.016,.008,.816,.509,.001,1.145,.216,.004,1.227,1.202,2.293,.24,.573,.78,.113,.39,1.673,.52,24.114,5.723,.116,.133,.001,1e-4,1e-4,1e-4,.085,.006,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.829,.002,.538,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,.002,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],lrc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.503,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.494,.003,.04,1e-4,1e-4,.008,1e-4,.002,.084,.084,.002,.001,.009,.028,.484,.015,.026,.035,.019,.017,.01,.011,.009,.009,.015,.017,.04,.001,.009,.002,.009,1e-4,1e-4,.006,.003,.003,.006,.003,.002,.001,.002,.005,.001,.002,.002,.003,.002,.001,.003,1e-4,.002,.003,.003,.001,.001,.002,1e-4,1e-4,.001,.003,1e-4,.002,1e-4,.002,1e-4,.043,.006,.016,.023,.041,.004,.008,.011,.044,.001,.008,.022,.01,.037,.028,.011,.001,.026,.016,.024,.015,.007,.006,.002,.007,.003,1e-4,.002,1e-4,1e-4,1e-4,.141,.397,.205,.02,1.605,1.614,3.115,2.266,3.47,.018,.099,.005,5.078,.005,.021,.008,.02,.003,.001,.004,.007,.374,1e-4,.001,.02,.38,.001,.042,.001,.001,.001,.003,.001,.003,.35,.86,.5,.014,1.898,5.042,.917,1.365,1.804,.048,.445,.131,.29,3.021,.146,3.091,.704,1.565,1.062,.145,.062,.1,.06,.212,.059,.025,.002,.001,.485,.001,1e-4,1e-4,.044,.006,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.002,.001,.017,.007,1e-4,1e-4,1e-4,.001,.001,.007,20.669,13.379,3.076,5.814,1e-4,1e-4,1e-4,1e-4,.008,.002,.138,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ltg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.505,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.915,.002,.48,1e-4,1e-4,.03,.001,.011,.307,.306,.001,.001,1.036,.186,1.128,.03,.246,.429,.198,.13,.123,.148,.107,.108,.116,.317,.161,.072,.029,.005,.029,.004,1e-4,.199,.123,.06,.183,.07,.028,.064,.021,.12,.092,.204,.323,.133,.101,.065,.288,.001,.16,.239,.103,.036,.21,.007,.022,.001,.052,.002,1e-4,.002,1e-4,.002,1e-4,7.469,.962,.824,2.269,4.253,.17,1.648,.088,6.306,1.422,2.423,2.524,1.996,2.559,4.514,1.853,.001,3.554,6.061,4.103,4.999,1.941,.013,.006,1.629,1.118,1e-4,.001,1e-4,1e-4,1e-4,.287,1.24,.018,.009,.002,.008,.371,.004,.003,.001,.001,.004,.014,.08,.001,.011,.003,.002,.002,.271,.142,.001,.001,.003,.003,.007,.001,.001,.003,.032,.034,.002,.043,.709,.001,.005,.004,.002,1e-4,1e-4,.001,.001,.015,2.24,.001,.001,1e-4,.001,.04,.01,.024,.01,.013,.028,.003,.011,.033,.006,.014,.026,.687,.026,.226,.009,1e-4,1e-4,.023,.015,3.578,2.215,1e-4,1e-4,1e-4,.001,.001,1e-4,.002,1e-4,.003,.001,.252,.098,1e-4,1e-4,1e-4,.004,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.265,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mai:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.888,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.023,.001,.03,1e-4,1e-4,.003,.001,.013,.071,.074,1e-4,.001,.267,.061,.074,.006,.01,.016,.009,.005,.004,.005,.004,.004,.005,.012,.021,.006,.004,.001,.004,1e-4,1e-4,.001,.001,.001,.001,.001,.001,.001,.001,.002,1e-4,.001,.001,.001,.001,.001,.001,1e-4,.001,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.004,1e-4,.004,1e-4,1e-4,1e-4,.018,.005,.005,.005,.017,.003,.004,.008,.015,.001,.002,.009,.005,.013,.013,.004,.001,.014,.017,.012,.006,.002,.003,.001,.003,.001,1e-4,.004,1e-4,1e-4,1e-4,.792,.705,.351,.05,1e-4,.548,.202,1.331,.277,.165,.004,.356,.051,2.185,1e-4,.286,.005,.001,1e-4,.066,.006,1.874,.183,.514,.043,.102,.293,.463,.567,.024,.087,.255,.05,.178,.022,.166,25.43,6.866,.581,.373,1.476,.06,.857,.137,.417,.41,1.258,.71,1.883,.001,1.344,.001,.001,.686,.286,.227,1.223,.469,1e-4,1e-4,.026,.025,2.747,1.736,1e-4,1e-4,.009,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.668,1e-4,.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mdf:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.974,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.901,.002,.147,1e-4,1e-4,.003,1e-4,.003,.239,.241,1e-4,.001,.661,.233,.828,.004,.16,.227,.113,.065,.054,.071,.072,.058,.067,.13,.047,.019,.002,1e-4,.002,.001,1e-4,.006,.002,.008,.002,.002,.003,.002,.002,.025,.001,.002,.002,.005,.002,.002,.006,.001,.003,.005,.003,.001,.008,.001,.014,1e-4,1e-4,.004,1e-4,.005,1e-4,.002,1e-4,.07,.006,.018,.016,.05,.004,.011,.014,.042,.003,.009,.03,.013,.041,.036,.013,.001,.037,.035,.028,.024,.005,.003,.003,.006,.001,1e-4,.001,1e-4,1e-4,1e-4,2.013,2.98,2.587,.748,.583,.414,.428,.203,.631,.045,.095,.17,2.818,.257,.113,1.375,.157,.181,.113,.066,.125,.013,.006,.022,.063,.005,.16,.068,.186,.053,.097,.114,.073,.188,.099,.03,.023,.016,.014,.014,.049,.003,.001,.054,.002,.05,.007,.022,4.7,.292,1.108,.449,1.264,2.755,.106,.711,2.236,.41,2.142,1.743,1.474,3.418,3.1,.637,1e-4,1e-4,.118,.006,.005,.003,1e-4,1e-4,1e-4,.005,.002,.003,.002,1e-4,.004,.002,28.205,15.445,.001,1e-4,1e-4,1e-4,1e-4,.002,.006,.003,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.006,1e-4,.122,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.132,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.344,1e-4,.051,1e-4,1e-4,.003,1e-4,1.722,.134,.134,1e-4,.062,.6,1.054,1.426,.011,.88,.969,.776,.547,.574,.473,.464,.436,.531,.535,.029,.033,.002,1e-4,.001,1e-4,1e-4,.281,.132,.16,.072,.212,.148,.178,.056,.346,.102,.053,.101,.354,.788,.05,.139,.008,.098,.209,.172,.049,.057,.038,.005,.021,.009,.002,1e-4,.002,1e-4,1e-4,1e-4,15.071,.568,.216,2.816,2.902,.81,.249,1.395,7.562,.225,1.469,1.52,3.108,9.36,4.666,.931,.023,4.686,1.843,3.288,.414,.748,.044,.043,4.297,.559,1e-4,1e-4,1e-4,1e-4,1e-4,.076,.002,.002,.001,.001,.001,1e-4,.002,.001,.008,1e-4,1e-4,.001,.002,.002,1e-4,.001,1e-4,.001,.052,1e-4,1e-4,.001,1e-4,1e-4,.017,1e-4,.001,.001,.001,1e-4,.001,.15,.01,.007,.008,.001,1e-4,.001,.006,.026,.088,.003,.004,.001,.005,.002,.002,.137,.002,.001,.004,.086,.001,.002,.001,.003,.001,.002,.01,.003,.001,.001,.008,1e-4,1e-4,.143,.408,.006,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.069,.004,1e-4,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.376,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.504,1e-4,.156,1e-4,1e-4,1e-4,.039,.039,.039,.039,1e-4,1e-4,1.325,.078,1.247,.039,.156,.039,.078,1e-4,1e-4,.039,1e-4,1e-4,.039,1e-4,.039,.078,.078,.039,.078,1e-4,1e-4,.701,.273,.156,.078,.312,.039,.156,.078,.351,.779,.779,.234,.779,1e-4,.039,.156,1e-4,.312,.195,.156,.195,.039,.078,1e-4,.195,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.103,1.558,.312,.818,6.584,.078,.351,1.013,7.402,4.675,3.584,3.039,2.766,5.804,6.389,.779,.078,4.753,1.48,2.337,1.441,.117,1.597,1e-4,1.558,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.351,1e-4,1e-4,.156,1e-4,.039,1e-4,1e-4,1e-4,1e-4,1e-4,.039,.545,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.467,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.078,1e-4,.117,1e-4,1e-4,1e-4,1.013,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.078,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.208,.429,.584,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.662,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mhr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.247,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.433,.01,.105,1e-4,1e-4,.003,1e-4,.003,.242,.243,1e-4,.004,.563,.341,.763,.006,.23,.307,.193,.103,.088,.092,.076,.077,.081,.164,.099,.012,.003,.005,.003,.006,1e-4,.002,.002,.003,.001,.001,.002,.001,.001,.045,1e-4,.001,.002,.002,.001,.001,.002,1e-4,.001,.002,.002,.001,.016,.001,.019,1e-4,1e-4,.002,1e-4,.002,1e-4,.001,1e-4,.02,.004,.007,.008,.02,.002,.003,.004,.014,1e-4,.002,.01,.005,.01,.012,.004,1e-4,.013,.009,.01,.005,.002,.002,1e-4,.002,.001,1e-4,.001,1e-4,1e-4,1e-4,2.161,.998,2.463,1.262,.079,.06,.073,.732,2.145,.012,.024,3.429,.167,.157,.039,.3,.114,.051,.084,.076,.173,.021,.005,.012,.07,.035,.245,.039,.204,.055,.073,.108,.142,.124,.167,.046,.023,.257,.01,.146,.069,.001,.001,.099,.002,.093,.02,.031,3.766,.43,.916,.689,1.067,3.621,.573,.276,1.798,1.177,2.133,2.766,1.884,2.711,2.445,.765,1e-4,1e-4,.222,.109,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,1e-4,.008,.004,28.363,13.911,.249,.424,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.203,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.242,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,18.048,.002,.114,1e-4,1e-4,.007,1e-4,.316,.24,.24,1e-4,1e-4,.815,.729,1.027,.003,.15,.245,.11,.069,.067,.071,.069,.066,.083,.097,.029,.194,.002,1e-4,.002,.002,1e-4,.243,.042,.09,.013,.207,.019,.023,.227,.154,.011,.858,.022,.414,.264,.035,.344,.001,.143,.039,1.088,.016,.015,.518,.001,.002,.003,.001,1e-4,.001,1e-4,.001,1e-4,10.57,.047,.232,.102,7.727,.029,1.763,3.618,6.701,.008,3.514,.582,.854,4.652,6.133,.788,.003,3.052,.255,6.464,3.231,.037,1.326,.008,.217,.009,1e-4,.001,1e-4,1e-4,1e-4,.025,2.749,.001,.002,.002,.001,.001,.001,.003,.001,.001,.001,.072,.357,1e-4,.001,.001,.001,.001,.284,.001,.001,.001,.001,.001,.002,.001,.001,.002,.001,.001,.001,.004,.003,.001,.001,.004,.001,.003,.004,.003,.003,.013,.525,.001,.002,.001,.002,.003,.004,.018,.005,.001,.001,.002,.001,.002,.001,.002,.001,.001,.001,.002,.001,1e-4,1e-4,.019,.015,3.257,.759,1e-4,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,.001,1e-4,.006,.002,1e-4,1e-4,1e-4,.001,1e-4,.006,.008,.006,.001,.001,1e-4,1e-4,1e-4,1e-4,.008,.002,.004,.001,1e-4,.002,.002,1e-4,1e-4,.001,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],min:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.172,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.612,1e-4,.04,.005,1e-4,.002,.004,.018,.155,.155,1e-4,1e-4,1.063,.022,1.041,.001,.404,.298,.265,.112,.103,.128,.132,.113,.114,.233,.009,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.635,.069,.223,.216,.107,.023,.035,.059,.25,.026,.062,.356,.142,.089,.046,.143,.014,.06,.402,.123,.018,.017,.016,.015,.037,.009,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.754,1.953,.961,4.093,4.246,.532,1.865,1.575,6.705,.46,3.68,3.421,3.054,5.905,5.613,2.448,.009,4.152,3.536,3.358,3.758,.175,.156,.045,.909,.044,1e-4,1e-4,1e-4,1e-4,1e-4,.018,.016,.004,.004,.011,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.017,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.005,1e-4,1e-4,.014,.007,.002,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.008,.016,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.029,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.442,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.507,.001,.094,1e-4,1e-4,.006,.001,.012,.086,.086,.001,.004,.588,.074,.535,.01,.197,.23,.143,.089,.082,.088,.076,.074,.08,.116,.032,.012,.002,.002,.002,.001,1e-4,.015,.008,.047,.006,.006,.005,.034,.005,.026,.002,.003,.006,.012,.023,.006,.014,.001,.007,.019,.01,.006,.006,.004,.004,.001,.001,.008,1e-4,.008,1e-4,.002,1e-4,.08,.013,.03,.022,.08,.011,.022,.023,.061,.003,.011,.035,.039,.054,.06,.012,.001,.056,.049,.047,.027,.008,.006,.003,.012,.004,1e-4,.001,1e-4,1e-4,1e-4,2.279,1.922,3.072,.896,.157,.085,.296,.344,.32,.001,.003,1e-4,.001,1e-4,1e-4,.012,.067,.066,.1,.11,.062,.046,.008,.029,.825,.009,.229,.032,.208,.077,.103,.118,.054,.125,.063,.016,.028,.03,.013,.01,.018,.002,1e-4,1e-4,1e-4,.001,1e-4,1e-4,5.692,.585,1.752,.746,1.619,3.647,.195,.665,3.964,.001,1.64,1.494,.888,3.068,4.767,1.117,1e-4,1e-4,.015,.006,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.003,33.101,10.345,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.096,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ml:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.283,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.554,.001,.034,1e-4,1e-4,.002,1e-4,.013,.046,.046,1e-4,.001,.155,.051,.434,.004,.069,.096,.051,.026,.025,.029,.025,.024,.03,.054,.011,.004,.002,.001,.002,1e-4,1e-4,.005,.003,.005,.002,.002,.002,.002,.002,.004,.001,.001,.002,.003,.002,.002,.004,1e-4,.002,.005,.004,.001,.001,.001,1e-4,1e-4,1e-4,.003,1e-4,.003,1e-4,.001,1e-4,.044,.007,.016,.014,.045,.007,.009,.015,.036,.001,.004,.022,.013,.031,.031,.01,.001,.031,.025,.029,.015,.004,.005,.002,.008,.001,1e-4,.001,1e-4,1e-4,1e-4,.284,1.637,.889,.045,1e-4,.237,.843,.478,.108,.077,.086,.336,.062,4.599,.152,.029,.008,1e-4,.075,.022,.003,1.759,.042,.219,.023,.382,.512,.004,.161,.001,.086,.887,.025,.094,.002,.484,1.618,.083,.303,.146,1.873,1e-4,.931,.058,.143,.126,.78,1.209,1.122,.589,.667,.458,22.229,10.029,.199,.193,.652,.135,.025,.171,.328,.323,1.631,2.28,1e-4,1e-4,.014,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.391,.001,.071,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.502,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.684,.002,.094,.001,.001,.006,.001,.003,.078,.078,.001,.002,.423,.192,.522,.019,.207,.249,.16,.075,.065,.07,.06,.055,.066,.128,.025,.008,.003,.005,.004,.002,1e-4,.018,.012,.019,.013,.012,.008,.007,.009,.026,.003,.004,.011,.017,.01,.009,.02,.002,.012,.024,.016,.006,.007,.006,.007,.003,.001,.006,.001,.006,1e-4,.005,1e-4,.097,.016,.039,.037,.119,.017,.023,.03,.088,.002,.012,.052,.031,.08,.086,.026,.002,.079,.064,.078,.038,.025,.012,.008,.018,.003,1e-4,.004,1e-4,1e-4,1e-4,2.438,1.425,1.576,1.589,.047,1.639,.295,.416,.311,.001,.008,.672,.369,2.886,.106,.163,.114,.151,.023,.067,.081,.017,.027,.033,.044,.004,.046,.028,.128,.083,.044,.031,.048,.074,.102,.063,.021,.125,.02,.022,.053,1.026,.001,.019,.001,.067,.028,1.192,4.733,1.04,.537,2.615,2.04,.399,.621,.396,2.01,1.723,.207,2.589,.943,3.889,2.383,.107,1e-4,1e-4,.065,.012,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.002,.001,27.532,13.908,1.199,1.049,1e-4,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.072,.002,1e-4,.002,.001,.001,.001,.001,.001,.001,.002,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.77,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.47,.002,.214,1e-4,1e-4,.017,.001,.035,.128,.128,.002,.001,.656,.155,.49,.006,.172,.19,.096,.052,.062,.054,.034,.043,.06,.129,.06,.015,.017,.012,.017,1e-4,1e-4,.018,.009,.023,.009,.011,.002,.006,.004,.035,.002,.005,.007,.014,.008,.008,.009,.001,.009,.019,.008,.005,.004,.007,.007,.001,.002,.002,1e-4,.002,1e-4,1e-4,1e-4,.381,.035,.167,.122,.44,.045,.036,.034,.432,.005,.016,.206,.12,.248,.177,.096,.003,.253,.183,.236,.214,.038,.01,.011,.011,.03,1e-4,1e-4,1e-4,1e-4,1e-4,3.01,1.642,2.712,2.46,.4,.066,.487,.515,.507,.001,.001,.622,.372,.933,.029,.581,.134,.087,.042,.032,.081,.073,.022,.008,.061,.004,.139,.063,.145,.05,.043,.149,.144,.143,.069,.113,.038,.031,.007,.03,.013,.002,.001,.064,.002,.001,.029,.007,3.78,.37,.558,.274,1.316,4.346,.072,.319,3.558,.657,1.356,2.204,1.073,2.802,2.13,1.099,1e-4,1e-4,.025,.051,.091,.068,1e-4,1e-4,1e-4,1e-4,.001,.001,.005,1e-4,.008,.004,27.537,14.047,.001,.161,1e-4,1e-4,1e-4,.001,.005,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.005,.022,1e-4,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mr:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.525,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.348,.002,.043,1e-4,1e-4,.004,1e-4,.024,.061,.064,1e-4,.001,.221,.063,.539,.009,.009,.009,.006,.003,.003,.003,.003,.003,.003,.005,.03,.01,.003,.004,.003,.003,1e-4,.008,.004,.006,.004,.003,.003,.003,.003,.007,.002,.002,.003,.006,.003,.002,.005,1e-4,.004,.008,.009,.001,.002,.002,1e-4,.001,1e-4,.007,1e-4,.007,1e-4,.001,1e-4,.138,.021,.046,.053,.162,.029,.028,.063,.114,.003,.011,.062,.038,.106,.103,.03,.002,.096,.09,.116,.04,.015,.019,.003,.023,.002,1e-4,.005,1e-4,1e-4,1e-4,1.224,.397,1.061,.056,.001,.297,.351,1.664,.084,.127,.02,.461,.026,2.286,1e-4,.096,.005,.018,.001,.019,.005,1.098,.145,.403,.083,.015,.659,.012,.404,.067,.014,.287,.125,.236,.039,.415,24.995,7.065,.585,.404,1.081,.036,.727,.118,.317,.211,.844,1.342,1.809,.018,1.056,.198,.001,.975,.327,.194,1.035,.79,.001,.001,.003,.001,3.71,.926,1e-4,1e-4,.015,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.418,.001,.048,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mrj:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.556,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.792,.004,.111,1e-4,1e-4,.008,.001,.036,.371,.372,1e-4,.001,.508,.256,.9,.015,.334,.401,.27,.169,.152,.17,.137,.141,.168,.185,.1,.046,.009,.005,.008,.012,1e-4,.017,.012,.012,.011,.006,.006,.008,.006,.083,.004,.011,.006,.014,.007,.024,.016,.001,.008,.014,.009,.003,.03,.002,.042,.002,.001,.008,1e-4,.009,1e-4,.003,1e-4,.281,.025,.082,.065,.202,.013,.027,.052,.157,.003,.032,.08,.041,.09,.092,.03,.005,.117,.072,.076,.073,.015,.012,.004,.024,.01,1e-4,.001,1e-4,1e-4,1e-4,2.356,.846,2.179,.887,.116,.285,.312,.236,2.316,.007,.004,2.565,.266,.252,.05,.215,.187,.062,.078,1.679,.285,.024,.005,.016,.067,.046,.237,.053,.116,.054,.059,.117,.058,.115,.145,.033,.102,.049,.064,.062,.066,.006,.001,.056,.003,.041,.007,.023,2.651,.259,1.194,.797,1.113,1.956,.572,.253,2.277,2.969,1.78,2.755,1.532,2.591,1.704,.818,1e-4,1e-4,.138,.095,.012,.006,1e-4,1e-4,1e-4,.001,.001,.001,.011,1e-4,.008,.006,24.363,12.5,.002,4.142,1e-4,1e-4,1e-4,.001,.015,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.004,.341,.005,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ms:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.423,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.116,.004,.276,.001,.003,.028,.005,.04,.153,.154,.011,.002,.825,.313,.841,.02,.335,.324,.225,.11,.099,.112,.094,.087,.096,.171,.041,.019,.01,.005,.01,.002,.001,.327,.313,.169,.197,.08,.09,.097,.122,.22,.145,.326,.158,.369,.143,.065,.427,.013,.147,.487,.268,.071,.05,.063,.007,.038,.022,.015,1e-4,.015,1e-4,.002,1e-4,15.253,2.008,.502,3.234,6.807,.209,2.704,2.141,5.701,.605,3.195,3.049,3.025,7.562,1.688,2.054,.019,4.172,2.861,3.513,3.855,.159,.407,.024,1.19,.123,1e-4,.007,1e-4,1e-4,1e-4,.025,.005,.003,.004,.003,.002,.002,.004,.003,.002,.002,.001,.002,.007,.004,.002,.001,.002,.001,.009,.003,.001,.001,.001,.002,.01,.001,.003,.004,.004,.001,.007,.031,.013,.003,.003,.003,.002,.001,.006,.007,.017,.002,.003,.001,.007,.002,.002,.004,.011,.003,.006,.005,.001,.006,.001,.004,.002,.003,.002,.008,.003,.003,.001,1e-4,1e-4,.034,.074,.022,.02,1e-4,1e-4,.001,.003,1e-4,1e-4,1e-4,1e-4,.002,.001,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.012,.015,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.002,.024,.004,.001,.002,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mt:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.717,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.569,.003,.319,.001,.001,.009,.001,.699,.116,.117,.001,.002,.868,2.789,.736,.014,.299,.341,.218,.093,.081,.087,.085,.082,.1,.201,.053,.022,.013,.012,.013,.002,1e-4,.223,.171,.118,.162,.107,.236,.127,.076,.3,.048,.158,.199,.315,.08,.056,.187,.018,.103,.221,.127,.065,.054,.053,.02,.007,.009,.022,1e-4,.023,1e-4,.008,.002,9.087,1.533,.244,1.812,5.201,1.498,1.212,.809,8.439,2.13,1.92,5.784,2.557,4.221,2.69,1.16,.488,3.837,2.631,5.521,3.106,.451,1.062,.484,.085,.753,1e-4,.004,1e-4,1e-4,1e-4,.211,.004,.004,.002,.003,.001,.001,.004,.002,.001,.016,.407,.001,.002,.001,.001,.001,.002,.001,.042,.003,.001,.001,.001,.005,.141,.001,.001,.01,.01,.001,.002,.13,.527,.002,.004,.002,.001,.025,1.521,.007,.014,.001,.004,.005,.008,.001,.001,.004,.005,.009,.004,.002,.002,.003,.001,.003,.01,.003,.015,.566,.003,.002,.002,1e-4,1e-4,.015,.129,2.554,.578,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,.011,.005,.011,.004,1e-4,1e-4,1e-4,.003,.001,.004,.006,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.004,.212,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mus:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.612,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,19.388,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.02,1e-4,1.02,1e-4,1.02,1.02,1e-4,2.041,1.02,1e-4,1.02,1.02,4.082,1.02,1.02,2.041,1e-4,1.02,1.02,1.02,1.02,1.02,1.02,1e-4,1.02,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.061,1e-4,1e-4,1e-4,5.102,1e-4,1.02,1e-4,1.02,1e-4,5.102,1e-4,1.02,1.02,2.041,1e-4,1e-4,1e-4,2.041,1e-4,1e-4,2.041,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.02,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.02,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],my:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.476,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.676,1e-4,.018,1e-4,1e-4,.001,1e-4,.009,.072,.072,1e-4,.001,.013,.027,.014,.004,.007,.006,.005,.003,.002,.002,.002,.002,.002,.002,.002,.001,.002,.003,.002,1e-4,1e-4,.009,.007,.011,.006,.004,.004,.005,.004,.006,.002,.003,.004,.008,.005,.004,.007,1e-4,.005,.011,.008,.003,.002,.003,1e-4,.001,1e-4,.002,1e-4,.002,1e-4,1e-4,1e-4,.087,.015,.033,.032,.11,.015,.02,.035,.072,.001,.01,.046,.027,.071,.073,.021,.001,.069,.054,.072,.03,.01,.011,.003,.016,.002,1e-4,.001,1e-4,1e-4,1e-4,32.171,1.737,.141,.03,1.382,.783,.273,.069,.03,.083,.874,.307,.061,.061,.009,.119,1.037,.261,.115,.031,.966,.888,.304,.058,.131,1.12,.266,.843,.619,.172,1.057,.095,.006,.703,.001,.001,.009,.019,.041,.006,1e-4,.005,1e-4,.239,1.811,1.255,.357,1.497,.246,1.317,.249,1e-4,1e-4,1e-4,.294,.751,1.889,.152,3.975,.6,.881,.616,.651,.004,1e-4,1e-4,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.801,.03,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],myv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.363,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.917,.015,.248,1e-4,1e-4,.022,1e-4,.001,.283,.286,.002,.004,.691,.215,.812,.009,.174,.262,.16,.093,.073,.077,.073,.069,.078,.133,.142,.014,.011,.005,.01,.008,1e-4,.003,.002,.005,.001,.001,.002,.001,.001,.012,.001,.001,.002,.003,.001,.001,.004,1e-4,.002,.003,.002,.001,.004,.001,.007,1e-4,.001,.004,1e-4,.004,1e-4,1e-4,.003,.048,.012,.02,.007,.038,.002,.005,.006,.024,.002,.008,.023,.008,.017,.019,.008,1e-4,.032,.018,.013,.014,.004,.001,.001,.004,.002,1e-4,.001,1e-4,.001,1e-4,2.092,2.863,2.802,.895,.06,.084,.303,.361,.574,.012,.006,.456,2.653,.734,.106,1.014,.129,.284,.186,.058,.27,.019,.007,.024,.083,.006,.182,.079,.175,.059,.072,.148,.231,.176,.101,.047,.012,.013,.018,.046,.024,.001,1e-4,.091,.002,.065,.014,.024,3.393,.354,1.588,.391,1,3.63,.2,.667,2.033,.447,2.062,1.616,1.324,3.27,3.572,.635,1e-4,1e-4,.332,.006,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.017,1e-4,.001,.001,27.959,14.855,.001,.001,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.281,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.032,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],mzn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.201,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.629,.002,.049,1e-4,1e-4,.001,.004,.002,.134,.134,1e-4,1e-4,.026,.054,.593,.02,.019,.017,.017,.008,.004,.006,.012,.005,.01,.015,.042,1e-4,.001,.014,.001,.004,1e-4,.004,.003,.005,.003,.006,.016,.002,.002,.003,.001,.001,.009,.006,.002,.001,.004,1e-4,.003,.005,.007,.001,.001,.01,1e-4,.001,.001,.002,1e-4,.002,1e-4,.009,1e-4,.072,.016,.031,.045,.106,.011,.011,.023,.094,.004,.019,.044,.012,.044,.054,.042,.001,.056,.056,.055,.021,.007,.011,.005,.015,.003,1e-4,.001,1e-4,1e-4,1e-4,.44,.427,.449,.013,1.516,2.042,3.291,3.912,3.162,.001,.032,.014,4.412,.002,.195,.007,.446,.17,.001,.002,.012,.004,1e-4,.001,.045,.005,1e-4,.006,.001,1e-4,1e-4,.003,.003,.013,.18,.011,.008,.001,.211,5.124,1.425,1.013,2.263,.078,.559,.214,.344,2.205,.318,3.605,.725,1.866,1.033,.295,.164,.271,.156,.676,.058,.031,.001,.001,.258,1e-4,1e-4,1e-4,.056,.008,.001,.002,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,.001,.009,.003,1e-4,.003,1e-4,.001,.001,.002,19.953,15.923,1.548,5.327,1e-4,1e-4,1e-4,1e-4,.004,.001,.427,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],na:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.998,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.709,.015,.646,1e-4,.002,1e-4,.004,.021,.659,.659,.017,.002,.883,.333,1.719,.03,1.451,2.231,1.063,.565,.61,.611,.586,.586,.597,1.829,.199,.094,.009,.006,.009,.002,1e-4,.49,.423,.263,.348,.486,.143,.225,.131,.617,.095,.263,.178,.552,.272,.136,.483,.013,.313,.36,.336,.074,.114,.249,.018,.046,.052,.006,1e-4,.007,1e-4,.006,1e-4,7.914,1.267,.542,1.393,6.136,.161,1.565,.525,5.317,.298,1.632,1.173,1.479,6.133,5.204,.602,.04,3.812,1.491,2.75,1.848,.267,2.105,.037,.79,.308,1e-4,1e-4,1e-4,.013,1e-4,.299,.053,.064,.017,.038,.029,.014,.008,.026,.003,.007,.007,.016,.016,.006,.008,.013,.032,.004,.043,.108,.002,.004,.01,.017,.017,.017,.015,.011,.008,.009,.017,.085,.124,.117,.04,.025,.023,.025,.032,.017,.097,.007,.031,.013,.031,.009,.016,.079,.095,.056,.083,.021,.063,.052,.013,.046,.015,.047,.045,.034,.035,.045,.013,1e-4,1e-4,.04,.466,.079,.167,.001,.002,1e-4,.023,.01,.013,.002,.001,.027,.006,.292,.12,1e-4,1e-4,.009,.199,.04,.007,.055,.037,.002,.002,1e-4,1e-4,1e-4,1e-4,.021,.074,.244,1e-4,.005,.01,.006,.001,.002,.006,.003,.003,.009,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nah:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.08,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.795,.004,.316,1e-4,1e-4,.001,1e-4,.011,.502,.505,.006,.329,1.148,.317,.599,1.663,.178,.339,.18,.099,.094,.088,.135,.085,.092,.204,.686,.012,.001,.002,.002,.012,1e-4,.583,.136,.486,.282,.369,.108,.135,.149,.382,.043,.01,.153,.41,.267,.154,.356,.041,.209,.348,.531,.077,.099,.006,.046,.078,.021,.306,1e-4,.304,1e-4,.018,1e-4,8.12,.52,3.826,1.716,6.024,.239,.598,2.703,7.016,.169,.062,5.071,1.759,4.856,5.013,1.61,.66,3.183,2.38,4.798,3.279,.368,.013,.578,.571,.892,1e-4,.001,1e-4,1e-4,1e-4,.023,.52,.003,.003,.002,.001,.001,.002,.002,.007,.001,.001,.005,.446,.001,.001,.001,.002,.001,.26,.002,.003,.001,.001,.001,.002,.003,.001,.002,.001,.001,.001,.003,.117,.005,.001,.004,.001,.001,.002,.003,.168,.013,.475,.001,.136,.018,.008,.004,.071,.003,.269,.002,.003,.001,.001,.003,.002,.068,.005,.005,.002,.003,.016,1e-4,1e-4,.033,.838,1.259,.446,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.009,.004,.012,.003,1e-4,1e-4,1e-4,.001,.001,.003,.005,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.027,.002,.008,.004,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nap:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.664,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.609,.012,.443,1e-4,1e-4,.005,.002,3.603,.188,.187,.001,.001,.851,.111,.916,.025,.289,.464,.288,.212,.187,.195,.184,.177,.191,.229,.063,.027,.064,.004,.064,.004,1e-4,.359,.17,.431,.088,.101,.128,.139,.019,.153,.024,.014,.18,.269,.172,.129,.252,.015,.136,.331,.141,.042,.154,.012,.021,.004,.014,.007,1e-4,.007,1e-4,.001,1e-4,8.472,.677,3.575,1.818,8.836,.628,1.161,.605,5.326,.294,.072,2.854,1.959,5.855,5.118,1.978,.107,4.154,2.774,4.302,3.256,1.068,.047,.011,.049,.778,1e-4,.014,1e-4,1e-4,1e-4,.167,.005,.004,.005,.003,.002,.001,.001,.017,.002,.001,.001,.001,.003,.001,.001,.003,.001,.001,.008,.005,.001,.001,.001,.033,.118,.001,.001,.005,.005,.001,.002,.266,.085,.051,.002,.003,.001,.003,.003,.62,.161,.023,.139,.069,.03,.001,.002,.025,.004,.164,.026,.08,.002,.003,.002,.002,.107,.016,.007,.005,.003,.002,.002,1e-4,1e-4,.057,1.779,.007,.055,1e-4,.001,1e-4,.003,.002,.003,1e-4,1e-4,.013,.006,.01,.004,1e-4,1e-4,1e-4,.001,.001,.002,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.003,.165,.003,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nds:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.919,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.282,.001,.235,1e-4,1e-4,.09,.002,.046,.155,.155,.017,.001,.777,.214,1.137,.014,.414,.571,.279,.157,.152,.165,.151,.162,.212,.299,.042,.019,.001,.002,.001,.001,1e-4,.383,.397,.141,.527,.184,.228,.238,.278,.228,.153,.317,.238,.331,.224,.164,.212,.007,.201,.654,.206,.119,.194,.231,.003,.008,.039,.011,1e-4,.011,1e-4,.001,1e-4,4.393,1.051,1.267,3.394,10.917,.767,1.396,2.581,3.914,.085,1.325,2.618,1.593,8.321,3.314,.889,.009,5.125,3.768,5.421,2.363,1.177,.929,.056,.171,.239,1e-4,.002,1e-4,1e-4,1e-4,.454,.002,.002,.001,.006,.001,.001,.001,.001,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,.001,.023,.001,1e-4,.022,.001,.009,.334,.001,.001,.057,.001,.038,.018,.048,.004,.001,.001,.208,.002,.001,.001,.002,.009,.001,.001,1e-4,.002,1e-4,.001,.005,.002,.014,.003,.002,.002,.82,.001,.004,.001,.001,.001,.763,.002,.001,.001,1e-4,1e-4,.055,1.884,.003,.003,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,.007,.003,.008,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.454,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ne:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.49,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.629,.002,.033,1e-4,1e-4,.006,1e-4,.018,.053,.057,1e-4,.001,.2,.042,.073,.008,.003,.003,.002,.001,.001,.001,.001,.001,.001,.001,.015,.002,.005,.002,.006,.002,1e-4,.004,.003,.004,.002,.002,.002,.002,.002,.003,.001,.001,.002,.002,.002,.002,.003,1e-4,.002,.004,.003,.001,.001,.001,1e-4,1e-4,1e-4,.004,1e-4,.004,1e-4,.001,1e-4,.056,.012,.021,.02,.066,.011,.012,.023,.048,.001,.005,.027,.017,.042,.043,.015,.001,.044,.036,.045,.017,.005,.008,.001,.01,.001,1e-4,.009,1e-4,1e-4,1e-4,.608,.76,.405,.065,1e-4,.231,.124,1.05,.333,.225,.003,1.089,.054,2.553,1e-4,.268,.005,1e-4,1e-4,.016,.009,1.681,.188,.574,.05,.059,.235,.302,.411,.024,.038,.296,.063,.16,.029,.16,24.986,7.481,.637,.298,1.766,.034,.895,.142,.406,.37,1.169,.857,2.172,1e-4,1.023,1e-4,1e-4,.652,.263,.209,1.099,.646,1e-4,1e-4,.001,.001,3.096,1.51,1e-4,1e-4,.006,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.857,1e-4,.028,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],new:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.658,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.736,1e-4,.005,1e-4,1e-4,.016,1e-4,.016,.053,.053,1e-4,1e-4,.168,.064,.05,.001,.002,.002,.001,.001,.001,.001,.001,.001,.001,.001,.014,1e-4,.001,1e-4,.001,1e-4,1e-4,.003,.002,.002,.001,.001,.001,.001,.001,.001,.001,.001,.001,.002,.002,1e-4,.001,1e-4,.001,.001,.002,1e-4,1e-4,.001,1e-4,1e-4,.001,.001,1e-4,.001,1e-4,.001,1e-4,.045,.006,.015,.015,.048,.008,.009,.021,.034,.001,.003,.019,.011,.032,.03,.01,1e-4,.03,.026,.034,.014,.004,.005,.001,.007,.001,1e-4,.001,1e-4,1e-4,1e-4,.748,1.473,1.078,.313,1e-4,.165,.087,.934,.049,.145,.004,.213,.295,3.035,.001,.021,.01,1e-4,.001,.003,.002,.891,.378,1.026,.007,.007,.145,.227,.557,.002,.008,.138,.03,.275,.076,.203,24.519,8.651,.655,.317,1.238,.066,.765,.114,.288,.474,.695,2.038,1.25,.006,.967,.005,.016,1.209,.15,.223,.893,.295,1e-4,.001,.016,1e-4,3.268,1.125,1e-4,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.648,1e-4,.246,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ng:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.332,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.852,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.028,.028,1e-4,1e-4,.569,.014,.833,1e-4,1e-4,.028,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.042,1e-4,1e-4,1e-4,1e-4,1e-4,.291,.028,.014,.069,.125,1e-4,.194,.153,.5,.042,.069,1e-4,.056,.153,.402,.083,1e-4,1e-4,.014,.18,.222,1e-4,.222,1e-4,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.728,1.221,.236,1.443,7.106,.347,2.859,3.65,4.136,.125,4.316,3.539,3.983,7.412,7.883,1.596,1e-4,1.138,1.901,3.511,6.62,.402,2.776,1e-4,2.11,.194,1e-4,1e-4,1e-4,1e-4,1e-4,.028,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.056,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.056,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.028,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nov:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.223,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.739,.005,.371,1e-4,1e-4,.004,1e-4,.014,.258,.258,.003,.008,.827,.256,1.132,.016,.643,.521,.435,.122,.19,.117,.125,.112,.14,.247,.122,.023,.02,.012,.021,.004,1e-4,.495,.126,.101,.11,.205,.084,.113,.079,.113,.072,.274,.517,.205,.19,.072,.148,.01,.107,.475,.124,.103,.078,.049,.006,.028,.032,.002,1e-4,.003,1e-4,.002,1e-4,6.407,1.088,.275,3.233,10.596,.875,.958,.605,7.974,.212,2.738,4.237,2.737,5.182,4.585,1.557,.08,4.568,4.834,4.299,2.875,.823,.156,.296,.238,.085,.002,.001,.002,1e-4,1e-4,.026,.009,.01,.005,.006,.003,.001,.003,.003,.003,.001,.001,.003,.004,1e-4,1e-4,.003,.001,.003,.016,.003,.003,.001,.001,.001,.007,.002,.003,.003,.007,.001,1e-4,.012,.008,.002,.005,.005,.002,.003,.003,.008,.015,.002,.001,.004,.007,.004,.004,.003,.005,.01,.013,.003,.002,.006,.004,.012,.004,.008,.008,.012,.008,.004,.006,1e-4,1e-4,.013,.071,.012,.013,.001,1e-4,1e-4,.002,1e-4,.001,1e-4,1e-4,.04,.019,.02,.007,1e-4,.002,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.013,.008,.025,.004,1e-4,.002,.002,.001,.001,.001,.001,.001,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nrm:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.521,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.376,.004,.467,1e-4,1e-4,.003,1e-4,1.947,.163,.162,1e-4,1e-4,.761,.157,.914,.012,1.102,1.934,.564,.483,.476,.487,.557,.61,.644,.66,.069,.027,.003,.001,.003,.001,1e-4,.78,.094,.435,.253,.108,.06,.094,.042,.231,.101,.009,.332,.216,.104,.043,.114,.015,.096,.165,.06,.048,.107,.012,.147,.029,.002,1e-4,1e-4,.002,1e-4,1e-4,1e-4,4.848,.485,1.639,2.302,7.56,.544,.696,1.469,3.879,.15,.04,3.065,1.372,5.618,3.164,1.345,.499,2.846,4.958,4.48,3.809,.712,.015,.135,.467,.062,1e-4,1.427,1e-4,1e-4,1e-4,.085,.003,.016,.002,.004,.002,.001,1e-4,.002,.014,.026,1e-4,.001,.001,.016,1e-4,.001,.001,.001,.016,.002,.001,1e-4,1e-4,.002,.06,1e-4,.023,.002,.001,1e-4,.001,.219,.004,.233,.004,.005,.011,1e-4,.016,.454,2.065,.259,.013,.002,.004,.368,.008,.001,.008,.002,.004,.081,.004,.002,.012,.002,.151,.004,.112,.003,.005,.001,.003,1e-4,1e-4,.015,4.079,.017,.014,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.029,.013,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.077,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nso:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.78,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.755,.002,.038,.001,1e-4,.004,1e-4,.009,.457,.457,1e-4,1e-4,.676,.052,.694,.005,.466,.863,.377,.269,.237,.244,.243,.245,.241,.264,.019,.004,.001,1e-4,.001,1e-4,1e-4,.278,.349,.291,.135,.079,.05,.105,.055,.212,.029,.164,.314,.912,.402,.025,.107,.005,.046,.407,.145,.02,.095,.034,.21,.005,.034,.003,1e-4,.003,1e-4,.001,1e-4,11.556,1.304,.158,.76,9.745,.742,5.815,1.511,2.097,.062,3.221,3.795,3.273,4.341,8.239,1.391,.015,2.291,2.998,2.898,.946,.091,3.286,.014,.713,.058,1e-4,.001,1e-4,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,.019,.718,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.045,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.083,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.134,1e-4,.733,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],nv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.509,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.471,1e-4,.553,1e-4,1e-4,.002,1e-4,.001,.132,.131,1e-4,1e-4,.333,.05,.853,.008,.262,.198,.155,.093,.082,.107,.089,.066,.073,.069,.012,.267,1e-4,.001,1e-4,1e-4,1e-4,.105,.358,.12,.313,.022,.005,.023,.24,.014,.023,.045,.016,.036,.298,.014,.019,.001,.01,.1,.28,.004,.005,.04,.001,.048,.004,.001,1e-4,.001,1e-4,1e-4,1e-4,5.817,1.241,.605,3.905,1.9,.016,1.415,4.266,6.018,.364,1.038,1.394,.149,2.559,2.764,.063,.003,.149,2.248,2.042,.092,.019,.145,.037,1.033,1.245,1e-4,1e-4,1e-4,.001,1e-4,.08,1.403,1.567,.013,.082,1.105,1e-4,1e-4,1e-4,.004,1e-4,1e-4,.001,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.067,.008,1e-4,1e-4,1e-4,1e-4,.294,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,2.758,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,2.445,1e-4,.311,1e-4,4.591,1e-4,.504,.001,.001,.001,2.002,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,.013,4.172,.001,1e-4,.013,1e-4,1e-4,.002,11.893,1.899,1.744,1e-4,.311,1e-4,1e-4,4.171,1e-4,1.234,1e-4,.002,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.08,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.013,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ny:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.625,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.431,.001,.161,1e-4,.001,.013,.004,.199,.151,.149,.001,1e-4,.726,.052,1.005,.011,.425,.321,.242,.114,.121,.146,.109,.097,.1,.188,.119,.008,.003,.006,.003,.001,1e-4,.324,.194,.362,.113,.083,.06,.055,.057,.099,.059,.134,.101,.607,.172,.041,.204,.005,.064,.151,.1,.088,.025,.048,.003,.047,.083,.018,1e-4,.019,1e-4,1e-4,.003,13.746,1.132,1.623,2.856,4.347,.427,1.15,2.997,7.993,.223,3.837,3.15,3.985,6.204,4.4,1.606,.018,2.007,1.898,3.156,4.108,.173,2.53,.014,1.184,1.868,1e-4,1e-4,.001,.002,1e-4,.066,.003,.003,.001,.003,.001,1e-4,.001,.001,.001,.002,.001,1e-4,1e-4,.001,.001,.002,1e-4,1e-4,.004,.001,.001,1e-4,1e-4,.004,.05,1e-4,1e-4,.006,.005,.001,.001,.013,.003,1e-4,.004,1e-4,1e-4,1e-4,.001,.002,.013,.001,.001,.001,.002,.001,.001,.002,.004,.001,.006,.001,.06,1e-4,.011,.002,.003,.003,.003,.002,.001,.001,.001,1e-4,1e-4,.023,.029,.004,.064,1e-4,1e-4,1e-4,.004,.001,.001,1e-4,1e-4,.009,.002,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.066,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],oc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.196,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.065,.002,.316,.046,1e-4,.007,.001,.708,.193,.193,.002,.001,.913,.337,.785,.01,.177,.339,.143,.091,.092,.097,.087,.093,.11,.155,.065,.02,.037,.032,.038,.002,1e-4,.316,.163,.28,.118,.18,.101,.108,.046,.126,.059,.019,.366,.206,.087,.061,.2,.02,.116,.247,.092,.045,.108,.016,.03,.009,.007,.013,1e-4,.013,1e-4,.002,1e-4,9.22,.793,2.634,3.53,8.653,.714,1.084,.594,5.176,.154,.069,4.196,2.017,5.599,4.023,1.809,.517,4.973,5.482,4.438,3.287,.768,.022,.148,.146,.139,1e-4,.011,.002,.002,1e-4,.071,.004,.003,.002,.001,.001,.002,.002,.007,.009,.001,.001,.001,.004,.001,.001,.001,.001,.006,.007,.005,.001,1e-4,1e-4,.001,.051,1e-4,.001,.001,.001,1e-4,.001,.145,.074,.024,.002,.002,.001,.002,.134,.929,.452,.016,.026,.001,.096,.005,.03,.005,.004,.448,.027,.01,.002,.002,.002,.002,.004,.011,.027,.011,.002,.002,.002,1e-4,1e-4,.068,2.417,.003,.007,1e-4,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,.008,.004,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.002,.067,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],olo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.555,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.165,.001,.091,1e-4,1e-4,.009,.001,.061,.221,.221,1e-4,.001,.891,.306,1.442,.031,.305,.513,.256,.174,.154,.153,.124,.134,.157,.296,.102,.011,.01,.003,.01,.002,.001,.151,.077,.024,.041,.069,.036,.06,.101,.085,.112,.389,.128,.177,.115,.068,.258,.001,.092,.352,.141,.032,.27,.012,.021,.024,.01,.006,1e-4,.006,1e-4,.001,.005,7.441,.351,.076,1.841,5.414,.122,.914,2.187,8.145,1.143,3.3,4.3,1.89,6.075,4.589,1.29,.001,2.71,3.519,3.872,5.598,2.436,.016,.008,1.054,.985,1e-4,.001,1e-4,1e-4,1e-4,.389,.086,.073,.032,.01,.011,.006,.01,.008,.001,.002,.006,.036,.349,.005,.017,.009,.004,.01,.105,.013,.002,.002,.002,.005,.148,.017,.006,.011,.056,.001,.018,.051,.118,.003,.002,1.86,.003,.001,.007,.003,.003,.001,.01,.001,.003,.001,.002,.143,.012,.077,.019,.054,.096,.298,.031,.077,.038,.064,.07,.021,.096,.259,.018,1e-4,1e-4,.075,2.173,.359,.275,1e-4,1e-4,1e-4,.003,.001,.002,.001,1e-4,.01,.006,.977,.34,1e-4,.001,1e-4,1e-4,.001,.001,.008,.007,1e-4,.001,1e-4,1e-4,.002,1e-4,.004,.001,.32,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],om:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.856,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.47,.007,.135,.001,.001,.02,.001,.415,.149,.148,.003,.001,.598,.088,.774,.024,.177,.196,.107,.055,.058,.069,.055,.055,.062,.111,.03,.031,.014,.003,.015,.004,1e-4,.377,.227,.059,.14,.066,.078,.179,.124,.131,.063,.149,.064,.172,.076,.188,.061,.049,.057,.159,.099,.042,.016,.108,.015,.076,.01,.011,1e-4,.011,1e-4,.003,.13,18.959,2.318,.672,2.536,5.221,1.607,1.449,2.234,8.071,.935,2.586,2.201,2.811,5.266,4.391,.29,.68,3.658,3.072,4.065,4.017,.087,.574,.143,1.425,.099,.01,.001,.01,1e-4,1e-4,.186,.003,.002,.003,.006,.002,.002,.001,.004,.002,.003,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,.001,.006,.004,1e-4,1e-4,1e-4,.007,.12,1e-4,1e-4,.011,.011,.005,1e-4,.099,.002,.002,.001,1e-4,1e-4,.03,.008,.002,.002,.003,.001,.001,.002,.001,.002,.003,.004,.003,.002,.001,.001,.002,.001,.001,.003,.001,.001,.001,.001,1e-4,.001,1e-4,1e-4,.105,.005,.001,.001,1e-4,1e-4,1e-4,.004,.001,.002,1e-4,1e-4,.007,.004,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.024,.018,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.191,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],or:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.414,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.789,.001,.049,1e-4,1e-4,.027,1e-4,.016,.066,.066,.001,1e-4,.194,.029,.065,.008,.012,.014,.009,.005,.004,.005,.004,.004,.004,.006,.014,.004,.003,.001,.003,1e-4,1e-4,.006,.004,.006,.004,.003,.002,.002,.003,.007,.001,.002,.003,.005,.003,.003,.005,1e-4,.003,.007,.006,.001,.001,.001,1e-4,.001,1e-4,.002,1e-4,.002,1e-4,.001,1e-4,.081,.011,.027,.026,.08,.013,.015,.029,.067,.002,.006,.037,.021,.058,.062,.019,.001,.059,.056,.058,.033,.007,.008,.003,.014,.002,1e-4,.009,1e-4,1e-4,1e-4,.461,.87,.209,.086,1e-4,.314,.231,1.688,.023,.138,.001,.379,.073,2.56,1e-4,.427,.002,1e-4,1e-4,.16,.011,1.385,.13,.389,.041,.233,.239,.105,.371,.014,.058,.871,.144,.225,.017,.346,1.495,.883,.609,.353,1.21,.043,.827,.113,24.372,7.183,.945,.296,2.678,.059,.571,.283,1e-4,.05,.328,.264,.929,.701,1e-4,1e-4,.094,1e-4,2.794,2.229,1e-4,1e-4,.045,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.66,1e-4,.069,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],os:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.314,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.198,.001,.075,1e-4,1e-4,.009,1e-4,.003,.221,.221,1e-4,.001,.656,.268,.647,.003,.149,.239,.119,.07,.068,.074,.065,.065,.08,.138,.043,.023,.001,.001,.001,.001,1e-4,.003,.003,.004,.002,.002,.002,.002,.001,.024,.001,.001,.002,.003,.002,.002,.003,1e-4,.002,.005,.002,.001,.007,.001,.014,.001,1e-4,.004,1e-4,.004,1e-4,.001,1e-4,.032,.005,.009,.008,.024,.004,.005,.006,.02,.001,.005,.014,.008,.019,.019,.004,1e-4,.021,.013,.014,.012,.003,.002,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,2.723,1.959,2.433,1.742,.485,1.045,.733,.104,.039,.003,.515,3.703,.088,.047,.033,.054,.152,.11,.038,.09,.183,.021,.005,.03,.137,.06,.132,.043,.092,.063,.026,.055,.062,.15,.074,.109,.063,.115,4.882,.027,.022,.001,.001,.076,1e-4,.018,.005,.007,3.663,.542,.469,1.346,2.223,.835,.243,.949,1.778,1.262,.952,1.134,1.447,2.532,1.739,.347,1e-4,1e-4,.16,4.829,.002,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.01,1e-4,.002,.001,23.204,15.519,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.01,.127,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.424,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.354,.003,.052,1e-4,1e-4,.005,1e-4,.026,.07,.07,1e-4,.001,.252,.083,.057,.008,.09,.134,.073,.034,.034,.037,.032,.033,.039,.073,.023,.007,.005,.003,.005,.001,1e-4,.004,.002,.004,.002,.003,.002,.002,.002,.006,.001,.001,.002,.003,.002,.002,.003,1e-4,.002,.005,.003,.001,.001,.001,1e-4,1e-4,1e-4,.007,1e-4,.007,1e-4,.002,.003,.035,.006,.011,.011,.037,.006,.008,.011,.028,.001,.004,.018,.013,.026,.027,.009,.001,.025,.019,.024,.012,.004,.004,.001,.005,.001,1e-4,.008,1e-4,1e-4,1e-4,1.534,.423,1.17,.001,.001,.437,.548,1.695,.606,.237,.024,.573,.09,.23,.001,.065,.035,1e-4,.001,.028,.011,1.172,.229,.428,.077,.013,.442,.041,.755,.032,.001,.286,.066,.192,.017,.267,1.499,.487,1.308,.154,24.532,6.371,.647,.143,.447,.172,.696,.068,2.373,.727,.943,.005,.001,.891,.001,.001,1.461,1.12,.001,.001,.465,.001,2.611,1.487,1e-4,1e-4,.039,.002,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,.002,.001,.006,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.006,.001,.002,1e-4,1e-4,1e-4,1e-4,30.092,.001,.038,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pag:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.03,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.592,.019,.241,1e-4,1e-4,.002,1e-4,.022,.579,.579,.001,.002,1.012,.179,1.28,.004,.607,.517,.439,.246,.233,.22,.206,.189,.188,.203,.287,.029,.2,.003,.2,.007,1e-4,.514,.233,.299,.377,.293,.091,.061,.039,.141,.067,.298,.143,.228,.153,.107,.323,.017,.066,.835,.144,.158,.036,.141,.001,.016,.024,.044,1e-4,.045,1e-4,.001,1e-4,14.553,2.155,.612,2.213,4.092,.158,2.144,.652,5.448,.026,2.943,4.371,1.62,6.468,4.169,1.489,.134,1.92,4.171,4.111,1.822,.133,.774,.019,2.966,.181,1e-4,.001,1e-4,1e-4,1e-4,.082,.003,.002,.002,.002,.001,1e-4,1e-4,.001,1e-4,.001,.001,1e-4,.001,1e-4,.001,.001,.001,1e-4,.005,.002,1e-4,.001,.001,.001,.048,1e-4,.001,.01,.009,1e-4,1e-4,.004,.017,1e-4,.001,.002,.001,.004,.002,.001,.008,.001,.001,.001,.005,1e-4,.001,.003,.012,.002,.005,.002,.001,.001,.001,.004,.001,.005,.001,.001,.002,.002,.001,1e-4,1e-4,.004,.049,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.004,.001,.009,.003,1e-4,1e-4,1e-4,.002,1e-4,1e-4,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.003,.075,.004,1e-4,.002,.001,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pam:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.69,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.089,.008,.379,.001,.002,.006,.002,.032,.278,.278,.002,.002,1.032,.272,.824,.024,.328,.294,.247,.119,.115,.114,.097,.092,.106,.173,.084,.034,.037,.005,.037,.004,1e-4,.446,.258,.283,.225,.147,.167,.119,.095,.427,.078,.159,.17,.339,.137,.085,.26,.014,.119,.316,.173,.073,.129,.078,.01,.038,.027,.056,1e-4,.058,1e-4,.003,1e-4,11.717,1.42,1.079,1.934,5.65,.412,5.535,.984,6.498,.051,2.215,3.499,2.546,9.826,2.443,1.882,.041,3.326,2.846,3.809,3.421,.311,.524,.064,1.429,.196,1e-4,.012,.001,1e-4,1e-4,.064,.007,.004,.005,.004,.002,.003,.002,.002,.001,.001,.002,.002,.006,.001,.001,.002,.001,.002,.019,.004,.002,.002,.002,.003,.009,.002,.002,.017,.008,.009,.013,.012,.022,.007,.002,.067,.005,.005,.005,.009,.033,.004,.003,.003,.006,.006,.004,.01,.012,.01,.01,.006,.003,.032,.002,.004,.003,.008,.007,.067,.001,.005,.003,1e-4,1e-4,.014,.263,.005,.006,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.002,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.008,.006,.001,.001,.001,1e-4,1e-4,1e-4,.04,.011,.063,1e-4,.001,.004,.002,.001,.001,.002,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pap:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.577,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,17.041,.006,.256,.002,.001,.008,.005,.088,.145,.144,.001,.001,.829,.082,.948,.014,.296,.379,.247,.133,.132,.125,.108,.098,.111,.184,.198,.046,.009,.003,.009,.012,1e-4,.325,.157,.17,.173,.346,.09,.081,.124,.155,.09,.129,.105,.233,.162,.14,.176,.005,.132,.285,.134,.07,.056,.051,.003,.069,.012,.014,1e-4,.014,1e-4,.003,1e-4,10.584,1.755,.96,3.481,6.611,.57,.793,1.086,6.922,.094,2.168,2.197,2.209,6.462,5.124,1.889,.017,4.387,3.838,4.459,3.468,.348,.249,.043,.415,.112,1e-4,.002,1e-4,1e-4,1e-4,.051,.006,.003,.006,.004,.001,.001,.002,.002,.001,.001,.001,.001,.001,.001,.001,.002,.012,.002,.005,.003,.001,.001,.001,.006,.016,.001,.001,.01,.01,.001,.001,.023,.288,.003,.003,.003,.001,.002,.007,.143,.171,.002,.003,.001,.133,1e-4,.002,.003,.162,.171,.076,.001,.002,.002,.001,.004,.053,.027,.003,.086,.002,.003,.002,1e-4,1e-4,.023,1.326,.004,.005,1e-4,1e-4,1e-4,.001,.001,.001,.001,1e-4,.007,.004,.023,.007,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.007,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.007,.048,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pcd:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.27,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.657,.008,.673,1e-4,1e-4,.003,.004,1.579,.485,.482,.004,.002,.764,.743,.844,.029,.205,.439,.185,.104,.105,.099,.112,.109,.159,.228,.141,.017,.014,.103,.015,.005,1e-4,.322,.315,.578,.163,.158,.188,.128,.139,.259,.095,.035,.293,.23,.148,.082,.416,.024,.141,.362,.132,.056,.121,.049,.026,.011,.008,.008,1e-4,.009,1e-4,.004,.004,4.164,.548,3.109,2.876,7.669,.633,.742,2.062,6.133,.168,.261,3.265,1.584,5.6,3.825,1.718,.299,3.984,4.345,3.994,3.516,.729,.062,.099,.331,.121,1e-4,.008,.001,.001,1e-4,.34,.006,.009,.004,.003,.002,.003,.003,.01,.086,.002,.001,.004,.005,.003,.002,.003,.002,.002,.018,.009,.001,.001,.002,.003,.283,.001,.003,.003,.002,.001,.001,.283,.006,.038,.003,.005,.006,.003,.025,.548,2.644,.014,.04,.002,.005,.009,.049,.019,.006,.015,.007,.051,.004,.002,.022,.007,.018,.005,.043,.008,.005,.004,.007,1e-4,1e-4,.109,3.762,.007,.017,1e-4,1e-4,1e-4,.005,.002,.003,1e-4,1e-4,.018,.008,.022,.007,1e-4,1e-4,1e-4,.003,1e-4,1e-4,.009,.005,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.003,.006,.329,.001,.002,.009,.006,.002,.003,.002,1e-4,1e-4,.001,1e-4,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pdc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.347,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.345,.014,.296,1e-4,.002,.001,.004,.083,.252,.251,.004,1e-4,.899,.34,1.232,.016,.318,.569,.233,.139,.122,.133,.151,.187,.197,.319,.11,.028,.009,.001,.009,.014,.001,.435,.396,.269,.612,.446,.261,.34,.266,.158,.126,.345,.316,.408,.189,.112,.446,.018,.164,.922,.173,.1,.127,.257,.003,.091,.087,.001,1e-4,.002,1e-4,.002,.001,5.822,.784,2.856,3.127,10.434,.913,1.544,3.717,6.407,.033,.633,2.751,1.821,6.435,2.483,.545,.012,4.834,4.912,3.94,2.397,.665,1.309,.053,.442,.521,1e-4,.004,1e-4,1e-4,1e-4,.13,.003,.001,.002,.004,.002,.002,.001,.002,.001,.001,1e-4,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,.012,.001,1e-4,.001,1e-4,.012,.052,1e-4,1e-4,.021,.02,.013,.012,.005,.005,.001,.002,.087,.001,.002,.004,.002,.014,.002,.001,.002,.005,1e-4,.002,.002,.007,.005,.01,.013,.001,.014,1e-4,.001,.001,.001,.001,.03,1e-4,1e-4,.001,1e-4,1e-4,.019,.191,.004,.004,1e-4,1e-4,1e-4,.002,.001,.002,1e-4,1e-4,.003,.003,.003,.001,1e-4,1e-4,1e-4,1e-4,.001,.003,.011,.007,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.129,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pfl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.263,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.706,.009,.364,1e-4,1e-4,.013,.001,.091,.195,.195,.003,.001,.686,.342,1.046,.015,.201,.285,.126,.084,.075,.083,.073,.08,.09,.133,.057,.007,.004,.002,.005,.003,1e-4,.282,.468,.129,.696,.183,.211,.353,.23,.145,.127,.364,.254,.349,.172,.165,.214,.007,.306,.587,.085,.112,.133,.253,.004,.004,.083,.004,1e-4,.004,1e-4,.001,.001,5.458,1.123,3.147,5.166,9.364,1.012,2.021,4.491,5.715,.138,.564,2.856,2.578,5.721,2.982,.339,.016,4.316,5.155,2.124,2.997,.789,1.349,.04,.119,.948,1e-4,.001,1e-4,1e-4,1e-4,.073,.001,.001,.001,.025,.007,1e-4,1e-4,1e-4,.003,1e-4,1e-4,.001,.002,.001,1e-4,.001,.001,.001,.014,.001,.005,.002,1e-4,.001,.004,.001,.001,.027,.001,.026,.15,.041,.008,.01,.001,1.309,.09,1e-4,.002,.017,.105,.002,.002,.07,.023,1e-4,.002,.004,.001,.016,.015,.003,.033,.029,.001,1e-4,.001,.001,.001,.044,.001,.001,.001,1e-4,1e-4,.024,1.987,.001,.015,1e-4,1e-4,1e-4,.002,.003,.001,.001,1e-4,.002,.001,.006,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.07,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.055,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.983,.003,.019,1e-4,1e-4,.001,1e-4,.005,.015,.015,1e-4,1e-4,.196,.05,.162,.001,.012,.032,.016,.014,.013,.015,.012,.01,.008,.011,.012,.002,.001,.001,.001,.003,1e-4,.014,.008,.005,.012,.009,.003,.003,.008,.003,.003,.005,.005,.006,.016,.004,.013,1e-4,.005,.023,.015,.011,.002,.003,1e-4,.036,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.761,.196,.276,.305,.454,.017,.165,.648,.799,.068,.545,.11,.265,.512,.167,.383,1e-4,.263,.542,.555,.3,.254,.017,.002,.396,.01,1e-4,.002,1e-4,1e-4,1e-4,.585,1.349,.631,.309,.001,.704,.099,.738,.496,.135,.002,.598,.015,3.249,1e-4,.471,.004,.001,1e-4,.007,.008,1.087,.017,.945,.067,.032,.055,.004,.076,.002,.011,.133,.012,.507,.001,.315,18.309,9.394,.355,1.002,.59,.225,.335,.42,.344,.341,.537,1.408,2.487,.078,.724,.001,1e-4,.527,.043,.432,2.004,.558,1e-4,1e-4,.014,1e-4,1.176,.438,1e-4,1e-4,1e-4,.095,.876,.019,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,26.149,.497,.061,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pih:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.022,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.521,.009,.204,1e-4,1e-4,.004,.001,2.454,.291,.293,.002,.001,.888,.295,1.488,.018,.431,.479,.302,.13,.163,.176,.152,.154,.17,.228,.107,.024,.002,.004,.002,1e-4,1e-4,.58,.327,.222,.2,.438,.166,.153,.179,.225,.154,.281,.167,.407,.329,.234,.386,.004,.196,.528,.379,.134,.065,.116,1e-4,.083,.034,.002,1e-4,.004,1e-4,1e-4,1e-4,8.21,.769,1.021,1.638,6.843,.747,.93,1.82,7.969,.261,1.7,3.13,1.378,5.431,3.567,1.341,.022,3.668,4.749,4.715,2.394,.289,.906,.045,1.135,.094,1e-4,1e-4,1e-4,1e-4,1e-4,.092,.039,.046,.01,.019,.008,.006,.003,.009,.001,.001,.017,.011,.007,.006,.02,.015,.009,.001,.019,.012,1e-4,.001,.006,.003,.028,.004,.009,.002,.007,.002,.006,.077,.019,.006,.004,.002,.001,.001,.004,.006,.035,.017,.004,.004,.012,.004,1e-4,.082,.011,.044,.037,.018,.034,.007,.017,.057,.008,.047,.04,.021,.031,.077,.012,1e-4,1e-4,.098,.125,.02,.026,.002,1e-4,1e-4,.016,.007,.004,1e-4,.001,1e-4,1e-4,.45,.193,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.008,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.026,.048,1e-4,1e-4,.003,.002,.001,1e-4,.001,.001,.002,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pms:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.299,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.832,.001,.162,1e-4,1e-4,.004,.001,1.011,.156,.156,1e-4,1e-4,1.253,.787,.992,.342,.318,.594,.327,.281,.214,.205,.231,.17,.187,.641,.121,.014,.149,.035,.149,.034,1e-4,.513,.293,.3,.101,.054,.096,.128,.035,.079,.03,.029,.305,.216,.126,.053,.205,.008,.226,.291,.098,.028,.104,.023,.014,.012,.01,.002,1e-4,.002,1e-4,.011,1e-4,9.348,.753,2.346,3.335,4.488,.731,.919,.76,4.936,.31,.385,3.85,2.042,6.393,3.543,1.375,.084,3.728,4.566,4.041,1.559,.688,.145,.036,.118,.134,1e-4,.001,1e-4,1e-4,1e-4,.165,.002,.001,.001,.001,.001,.001,.001,.001,.007,.001,.059,.002,.001,.004,1e-4,1e-4,1e-4,.003,.003,1e-4,1e-4,1e-4,.001,.02,.115,1e-4,1e-4,.001,.001,1e-4,1e-4,.661,.007,.005,.001,.004,1e-4,.001,.004,.295,.64,.002,2.121,.312,.006,.001,.001,.002,.006,.658,.012,.019,.001,.003,1e-4,.001,.07,.002,.002,.005,.001,.001,.001,1e-4,1e-4,.286,4.639,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.002,.007,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.137,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pnb:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.056,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.3,.001,.061,1e-4,1e-4,.004,1e-4,.019,.084,.084,1e-4,.001,.02,.088,.041,.008,.132,.201,.102,.067,.062,.067,.058,.058,.067,.099,.044,.011,.014,.019,.014,1e-4,1e-4,.005,.015,.004,.007,.004,.002,.006,.002,.006,.004,.001,.002,.002,.003,.002,.003,1e-4,.004,.004,.005,.001,.001,.003,1e-4,1e-4,1e-4,.016,1e-4,.016,1e-4,.001,.001,.078,.007,.025,.032,.067,.025,.012,.031,.075,.001,.005,.047,.03,.057,.061,.011,.001,.056,.035,.078,.015,.016,.005,.001,.026,.001,1e-4,.004,1e-4,1e-4,1e-4,.037,1.78,.208,.002,1.668,1.155,3.673,.01,3.168,.001,.005,.003,4.417,.001,.019,.031,.026,.339,2.06,.022,.634,.001,1e-4,1e-4,.015,.009,1e-4,.004,.002,.002,1e-4,.002,.01,.033,.198,.001,.068,.002,.419,5.965,1.027,1.695,1.567,.022,.752,.178,.132,2.73,.025,2.399,.214,1.507,.366,.211,.103,.103,.037,.788,1.21,.001,.001,.002,1.61,.001,1e-4,1e-4,.01,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.007,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,17.991,10.598,5.545,8.408,1e-4,.004,1e-4,1e-4,.008,.001,.037,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],pnt:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.111,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,8.571,.001,.271,1e-4,1e-4,.001,.001,.535,.166,.167,.003,.001,.374,.066,.728,.006,.22,.256,.213,.123,.09,.093,.091,.105,.105,.136,.082,.003,.006,.005,.006,1e-4,1e-4,.027,.009,.018,.007,.008,.002,.007,.007,.011,.005,.01,.006,.014,.004,.003,.01,.001,.009,.009,.01,.001,.002,.009,.001,.001,.001,.002,1e-4,.002,1e-4,1e-4,1e-4,.102,.019,.03,.031,.116,.01,.025,.028,.096,.002,.026,.047,.026,.078,.081,.022,.002,.09,.05,.057,.045,.011,.005,.004,.012,.009,1e-4,.182,1e-4,1e-4,1e-4,1.086,2.28,1.131,1.649,3.333,.911,.24,.496,.069,.319,.04,.001,.823,.357,.222,.002,.015,.24,.073,.124,.043,.159,.008,.102,.032,.07,.198,.037,.134,.044,.005,.136,.134,.042,.001,.198,.245,.005,.018,.079,.003,.008,.001,.042,1.012,.786,.269,1.272,.017,4.369,.221,.746,.384,2.578,.144,1.385,.301,1.937,1.463,1.533,1.22,4.421,.103,3.268,1e-4,1e-4,.091,.022,.01,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,29.379,12.776,.049,.015,1e-4,1e-4,1e-4,.001,.001,.003,.011,.009,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.059,.041,1e-4,.001,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ps:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.579,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.932,.004,.044,1e-4,1e-4,.003,1e-4,.002,.118,.118,.001,.001,.026,.037,.443,.009,.022,.03,.021,.014,.011,.012,.01,.009,.01,.013,.062,.001,.002,.005,.002,1e-4,1e-4,.015,.007,.011,.007,.006,.005,.004,.007,.009,.002,.003,.005,.01,.006,.004,.009,.001,.006,.013,.009,.003,.002,.003,.001,.001,.001,.004,1e-4,.004,1e-4,.003,1e-4,.147,.023,.055,.054,.165,.027,.031,.061,.131,.002,.012,.073,.048,.109,.113,.034,.002,.103,.097,.116,.047,.015,.017,.005,.027,.004,1e-4,1e-4,1e-4,1e-4,1e-4,.103,.528,.202,.231,2.393,1.822,2.655,3.163,4.608,.307,2.451,.006,1.513,.136,.015,.009,1.675,.004,.009,.507,.005,1e-4,.154,.001,.093,.002,.229,.007,.005,.003,1e-4,.006,.024,.025,.048,.014,.025,.008,.038,4.145,.839,1.375,1.43,.077,.25,.229,.647,2.983,.085,2.528,.449,1.14,.525,.146,.073,.106,.064,.333,.407,.02,.265,.005,1.278,.002,1e-4,1e-4,.016,.003,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,.028,.011,1e-4,1e-4,1e-4,1e-4,1e-4,.001,16.081,19.012,3.763,3.368,1e-4,1e-4,1e-4,1e-4,.003,1e-4,.026,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.038,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],qu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.204,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.108,.002,.638,1e-4,1e-4,.004,.002,.39,.494,.494,.05,.002,1.04,.188,.977,.036,.261,.409,.214,.137,.12,.137,.117,.112,.136,.208,.401,.061,.041,.006,.041,.004,1e-4,.371,.173,.36,.119,.076,.064,.097,.189,.192,.096,.255,.187,.305,.078,.042,.428,.148,.146,.31,.198,.198,.061,.174,.014,.102,.014,.014,1e-4,.015,1e-4,.002,1e-4,14.813,.229,1.579,.795,1.296,.084,.286,2.331,7.773,.067,3.004,4.09,3.086,5.006,1.165,2.96,3.746,3.293,3.447,3.494,5.678,.135,1.682,.024,2.244,.111,1e-4,.003,.001,1e-4,1e-4,.055,.016,.009,.013,.008,.006,.004,.006,.004,.004,.003,.002,.006,.007,.003,.002,.012,.023,.002,.011,.004,.004,.003,.002,.004,.015,.003,.003,.005,.003,.002,.003,.038,.068,.004,.005,.014,.005,.006,.009,.007,.056,.005,.005,.005,.075,.004,.006,.014,.34,.013,.069,.007,.008,.006,.005,.016,.009,.022,.008,.011,.009,.01,.01,1e-4,1e-4,.026,.649,.01,.009,.001,.001,1e-4,.002,.001,.008,.002,1e-4,.042,.02,.051,.016,.001,1e-4,1e-4,.001,.001,.006,.016,.012,.001,.002,.001,1e-4,1e-4,1e-4,.031,.016,.047,.001,.001,.006,.005,.002,.002,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],rm:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.612,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.511,.003,.167,1e-4,1e-4,.015,1e-4,.104,.151,.151,.003,1e-4,.439,.065,.823,.012,.199,.275,.114,.07,.072,.078,.067,.073,.099,.138,.045,.054,.005,.002,.005,.002,1e-4,.139,.111,.151,.1,.17,.069,.113,.045,.217,.028,.029,.208,.121,.055,.036,.132,.042,.086,.226,.106,.051,.07,.023,.003,.003,.008,.002,1e-4,.002,1e-4,1e-4,.001,11.404,.601,3.031,3.677,6.353,.757,1.578,1.412,6.549,.076,.068,4.778,1.866,6.046,2.159,1.856,.265,4.97,5.963,4.375,3.712,1.407,.03,.131,.049,.802,1e-4,1e-4,1e-4,1e-4,1e-4,.828,.001,.001,.001,.001,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.043,1e-4,1e-4,.001,.001,1e-4,.675,1e-4,.001,.003,.001,.001,1e-4,.294,.003,.002,1e-4,.006,.001,.001,.002,.333,.017,.002,.02,.128,.003,1e-4,.001,.004,.002,.027,.004,.001,.001,.012,1e-4,.001,.054,.054,.02,.042,.001,.001,.001,1e-4,1e-4,.079,.841,.004,.004,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,.005,.002,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.828,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],rmy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.439,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.022,.009,.624,.001,1e-4,.014,.003,.015,.443,.441,.003,.003,1.038,.232,.983,.037,.243,.24,.172,.071,.075,.081,.064,.056,.058,.153,.179,.028,1e-4,.007,1e-4,.007,1e-4,.429,.231,.183,.167,.219,.086,.091,.078,.193,.094,.424,.255,.23,.124,.22,.316,.009,.404,.577,.193,.066,.142,.014,.008,.107,.022,.003,1e-4,.004,1e-4,.001,.001,10.986,1.012,.769,2.129,6.975,.334,.958,2.547,6.287,.364,2.952,3.16,1.944,5.241,5.031,1.512,.108,4.343,3.649,3.301,2.127,1.805,.051,.119,2.702,.234,1e-4,.003,.001,.001,1e-4,.065,.024,.024,.136,.011,.006,.01,.023,.009,.001,.005,.016,.01,.054,.02,.004,.003,.007,.001,.025,.008,.009,.004,.007,.004,.054,.005,.044,.006,.002,.003,.008,.038,.056,.061,.004,.069,.023,.011,.016,.012,.016,.02,.006,.003,.014,.084,.01,.051,.028,.039,.03,.013,.014,.009,.007,.027,.007,.021,.023,.024,.034,.062,.014,1e-4,1e-4,.036,.28,.165,.061,1e-4,.011,.089,.002,.001,.002,1e-4,1e-4,.007,.003,.242,.129,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.026,.02,1e-4,.004,1e-4,1e-4,1e-4,1e-4,.128,.005,.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.003,.004,.002,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],rn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.466,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.984,.029,.062,1e-4,1e-4,.003,1e-4,.574,.079,.089,.011,1e-4,1.075,.049,1.054,.052,.102,.296,.219,.136,.097,.085,.071,.069,.063,.086,.222,.076,.048,1e-4,.048,.055,1e-4,.35,.153,.043,.033,.087,.042,.05,.106,.336,.016,.136,.035,.208,.24,.02,.055,.001,.138,.132,.082,.29,.029,.019,1e-4,.195,.032,1e-4,1e-4,1e-4,1e-4,.001,1e-4,10.973,3.104,.817,1.265,5.117,.295,2.193,1.806,7.318,.542,2.677,.668,3.393,5.179,4.081,.677,.004,4.518,2.135,2.161,5.935,1.185,2.07,.007,2.3,1.432,1e-4,1e-4,1e-4,1e-4,1e-4,.174,.023,.002,.005,.007,.004,.003,.003,.006,1e-4,.004,1e-4,.015,.271,.012,.002,.008,.004,.004,.008,.004,1e-4,1e-4,1e-4,.001,.284,1e-4,.196,.005,.002,.004,.014,.082,.437,.009,1e-4,1e-4,.006,.001,.018,.002,.13,.002,.17,1e-4,.586,.007,.108,.004,.019,.001,.014,.007,.001,.01,.001,.001,.002,.049,.153,.015,.123,.121,1e-4,1e-4,1e-4,.386,1.335,.539,.45,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.015,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.02,.053,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.167,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],rue:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.059,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.931,.003,.134,.004,1e-4,.006,1e-4,.004,.175,.175,.004,.001,.601,.077,.708,.007,.16,.303,.147,.097,.093,.095,.084,.09,.099,.137,.031,.011,.003,.006,.002,.001,1e-4,.009,.006,.011,.005,.005,.004,.005,.007,.017,.002,.003,.006,.008,.01,.004,.008,1e-4,.006,.012,.008,.004,.005,.003,.005,.001,.001,.002,.011,.003,1e-4,.004,1e-4,.091,.013,.033,.032,.099,.015,.014,.02,.081,.006,.012,.045,.028,.055,.071,.018,.002,.069,.058,.052,.039,.016,.006,.004,.014,.011,.002,1e-4,.002,1e-4,1e-4,2.51,1.935,2.11,1.119,.168,.507,.468,.486,.356,.046,.009,1.422,.678,.003,.239,.784,.089,.301,.121,.074,.371,.035,1.647,.529,.012,.009,.09,.04,.101,.07,.061,.137,.108,.152,.055,.234,.024,.016,.017,.032,.025,.005,.001,.015,.002,.004,.009,.015,3.672,.621,2.19,.526,1.267,2.143,.348,.764,1.53,.62,1.849,1.595,1.255,2.617,4.166,1,1e-4,1e-4,.065,.026,.003,.004,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.006,1e-4,.02,.009,27.547,15.28,.159,1e-4,1e-4,.001,.001,.004,.006,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.004,.115,.004,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],rw:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.278,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.768,.007,.605,1e-4,1e-4,.01,.005,.156,.48,.479,1e-4,.001,.554,.104,.846,.03,.199,.216,.155,.113,.085,.082,.092,.069,.073,.138,.279,.158,.014,.006,.014,.022,1e-4,.463,.203,.115,.093,.067,.068,.134,.078,.521,.056,.247,.076,.283,.278,.063,.134,.006,.219,.18,.135,.469,.053,.038,.003,.047,.033,.002,.005,.003,1e-4,.005,.003,10.187,2.795,.85,1.072,4.678,.399,2.704,1.553,8.747,.332,2.605,.938,3.443,4.833,3.164,.42,.036,4.477,2.07,2.396,6.084,.329,1.941,.023,2.813,1.358,1e-4,1e-4,1e-4,1e-4,1e-4,.976,.03,.025,.03,.043,.049,.025,.021,.028,.009,.036,.011,.018,.014,.026,.013,.02,.015,.01,.15,.008,.015,.009,.008,.011,.787,.007,.008,.021,.011,.011,.034,.016,.016,.009,.011,.025,.012,.025,.083,.028,.057,.013,.014,.038,.019,.024,.039,.055,.067,.03,.036,.018,.034,.017,.013,.045,.024,.03,.026,.034,.02,.028,.012,1e-4,1e-4,.03,.13,.052,.028,.001,.001,.001,.009,.002,.001,.003,1e-4,.02,.007,.21,.107,.008,.005,.001,.006,.005,.025,.234,.162,.005,.009,1e-4,1e-4,.009,1e-4,.108,.055,.961,.001,.002,.013,.008,.004,.003,.002,.001,.001,.003,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.358,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.441,.003,.019,1e-4,1e-4,.003,1e-4,.034,.04,.042,1e-4,.001,.189,.124,.061,.009,.003,.004,.003,.002,.002,.001,.001,.001,.001,.002,.022,.001,.005,.003,.005,.005,1e-4,.002,.001,.007,.001,.001,.001,.001,.001,.002,.001,.001,.001,.002,.001,.001,.002,1e-4,.001,.003,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,.005,1e-4,.005,1e-4,1e-4,1e-4,.036,.006,.009,.018,.033,.003,.005,.01,.026,.001,.003,.015,.009,.022,.022,.013,1e-4,.02,.014,.02,.007,.002,.005,.001,.004,1e-4,1e-4,.003,1e-4,1e-4,1e-4,.485,.531,.737,.892,.001,.437,.14,1.014,.103,.083,.003,.31,.053,4.186,.001,.123,.004,.001,1e-4,.016,.005,.929,.077,.397,.036,.098,.308,.026,.311,.017,.076,.146,.037,.11,.008,.362,26.378,7.803,.723,.32,1.5,.025,.84,.05,.176,.36,1.148,1.481,1.847,1e-4,.431,.017,.001,1.168,.412,.409,1.347,.264,1e-4,1e-4,.002,.029,2.443,1.602,1e-4,1e-4,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.344,1e-4,.071,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sah:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.686,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.508,.002,.063,1e-4,1e-4,.006,1e-4,.001,.091,.092,1e-4,.001,.559,.22,.713,.008,.141,.211,.115,.061,.06,.065,.051,.05,.056,.124,.035,.013,.006,.002,.006,.002,1e-4,.005,.004,.005,.003,.002,.002,.002,.002,.017,.001,.002,.002,.004,.003,.002,.003,1e-4,.002,.006,.004,.001,.004,.001,.007,.002,1e-4,.003,1e-4,.003,1e-4,.004,1e-4,.029,.008,.012,.008,.028,.005,.006,.038,.023,.001,.004,.015,.01,.02,.025,.007,1e-4,.024,.015,.017,.012,.003,.003,.001,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,3.31,1.601,3.034,2.129,.054,.947,.056,.303,.028,.008,.002,2.384,.325,2.811,.018,.129,.129,.118,.035,.051,.111,.426,.011,.007,.063,.002,.123,.02,.075,.059,.083,.041,.09,.172,.066,.042,.018,.342,.005,.017,.028,.688,1e-4,.065,.003,.027,.027,.911,6.03,1.253,.256,.681,.862,.464,.024,.065,2.76,.764,1.431,3.082,.589,3.175,2.114,.327,1e-4,1e-4,.173,.003,.001,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,.002,1e-4,.002,.001,24.486,17.038,2.234,.706,1e-4,.001,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.102,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sc:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.057,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.585,.005,.337,1e-4,1e-4,.01,.001,.519,.179,.179,1e-4,.001,.997,.097,.746,.025,.237,.292,.15,.087,.082,.09,.079,.083,.093,.166,.067,.032,.007,.002,.008,.003,1e-4,.224,.132,.261,.092,.103,.086,.108,.028,.255,.028,.024,.103,.181,.091,.054,.171,.006,.093,.455,.116,.064,.058,.024,.025,.008,.012,.012,1e-4,.012,1e-4,1e-4,1e-4,9.363,.921,2.394,4.179,7.513,.745,1.075,.764,6.94,.075,.096,1.956,1.851,5.606,4.069,1.688,.018,4.534,7.393,5.178,5.316,.445,.037,.029,.067,.854,1e-4,.001,1e-4,1e-4,1e-4,.107,.01,.006,.008,.004,.002,.002,.003,.006,.002,.002,.002,.006,.004,.002,.001,.003,.002,.003,.008,.004,.001,.002,.001,.003,.058,.001,.002,.016,.017,.001,.001,.306,.009,.002,.003,.003,.002,.001,.004,.232,.016,.003,.007,.252,.007,.001,.002,.008,.007,.176,.008,.002,.004,.003,.006,.005,.096,.007,.007,.006,.004,.004,.004,1e-4,1e-4,.032,1.097,.007,.006,1e-4,1e-4,1e-4,.011,.003,.007,.001,1e-4,.018,.009,.023,.009,1e-4,1e-4,1e-4,.003,.001,.003,.006,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.006,.096,.007,.001,.002,.002,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],scn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.769,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.859,.005,.376,.001,1e-4,.006,.001,.62,.187,.189,.001,.001,.862,.093,.813,.026,.237,.31,.158,.093,.09,.099,.092,.087,.104,.161,.085,.032,.027,.008,.034,.003,1e-4,.211,.12,.299,.095,.077,.106,.122,.053,.143,.031,.023,.333,.207,.158,.044,.198,.02,.123,.32,.125,.061,.101,.022,.022,.008,.012,.019,1e-4,.019,1e-4,.007,.001,8.698,.715,3.649,2.751,2.764,.729,1.223,.71,11.435,.098,.087,3.105,2.009,5.881,1.955,1.977,.125,4.751,3.262,4.998,7.156,1.012,.04,.022,.077,.978,1e-4,.006,1e-4,1e-4,1e-4,.123,.005,.005,.005,.003,.001,.002,.001,.009,.002,.001,.001,.004,.003,.001,.001,.001,.002,.002,.01,.003,.001,.002,.001,.012,.059,.001,.002,.014,.013,.001,.001,.271,.006,.312,.002,.001,.001,.001,.004,.478,.013,.046,.017,.359,.007,.096,.002,.008,.004,.23,.006,.189,.003,.002,.003,.004,.145,.006,.184,.003,.004,.002,.003,1e-4,1e-4,.038,2.342,.007,.007,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.018,.008,.018,.009,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.006,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.006,.107,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sco:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.424,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.792,.003,.394,.001,.002,.018,.003,.122,.265,.265,.001,.001,1.079,.194,.878,.014,.365,.437,.262,.125,.119,.131,.116,.116,.135,.238,.065,.052,.004,.002,.004,.001,1e-4,.38,.213,.323,.162,.132,.149,.164,.147,.281,.103,.117,.162,.281,.134,.098,.228,.015,.18,.416,.389,.071,.084,.096,.009,.031,.022,.004,1e-4,.004,1e-4,1e-4,.001,7.525,.973,2.32,1.915,9.145,.867,.966,3.175,6.858,.086,.556,2.986,1.72,5.779,4.854,1.317,.066,4.925,4.607,6.432,2.109,.676,1.003,.125,1.018,.144,1e-4,.001,1e-4,1e-4,1e-4,.052,.009,.005,.004,.004,.003,.002,.004,.002,.003,.002,.001,.002,.005,.001,.002,.001,.002,.001,.033,.006,.001,.002,.002,.002,.009,.001,.002,.003,.003,.001,.005,.039,.026,.003,.006,.015,.004,.002,.007,.005,.025,.002,.006,.002,.019,.001,.002,.01,.012,.013,.016,.004,.005,.011,.002,.007,.003,.007,.003,.009,.004,.004,.002,1e-4,1e-4,.051,.152,.018,.014,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,.011,.005,.019,.007,1e-4,1e-4,1e-4,.001,1e-4,.002,.009,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.005,.05,.001,.001,.002,.001,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sd:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.527,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.452,.004,.026,.001,1e-4,.002,1e-4,.004,.108,.108,.004,.001,.009,.252,.565,.015,.09,.18,.083,.051,.047,.052,.047,.048,.055,.112,.038,.003,.004,.004,.004,1e-4,1e-4,.01,.007,.009,.005,.004,.003,.004,.004,.005,.002,.003,.004,.007,.004,.003,.007,.001,.004,.011,.007,.002,.002,.003,1e-4,.001,1e-4,.005,1e-4,.005,.001,.003,1e-4,.093,.018,.025,.03,.086,.014,.018,.031,.075,.002,.009,.041,.026,.061,.064,.018,.001,.061,.048,.062,.025,.01,.009,.005,.016,.003,.003,1e-4,1e-4,1e-4,1e-4,.358,.355,.367,.044,1.492,1.56,3.771,2.24,3.043,.003,5.411,.006,.747,.045,.229,.346,.139,.006,.013,.002,.041,.001,.001,.003,.036,.237,1e-4,.007,.063,.063,.001,.009,.066,.346,.511,.005,.013,.004,.6,4.552,.858,.458,2.417,.053,1.486,.357,.248,1.426,.07,2.412,.238,1.475,.403,.209,.078,.141,.068,.553,.222,.578,.001,.647,1.291,.291,1e-4,1e-4,.065,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,17.302,19.772,4.118,.84,1e-4,1e-4,1e-4,1e-4,.002,.001,.198,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.104,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],se:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.476,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.534,.002,.233,.001,.001,.008,.001,.011,.255,.258,1e-4,.001,1.05,.297,1.247,.015,.373,.513,.317,.174,.148,.157,.145,.145,.159,.258,.106,.008,.018,.002,.018,.002,1e-4,.188,.166,.071,.251,.09,.093,.235,.162,.082,.134,.245,.18,.186,.183,.112,.147,.004,.206,.487,.123,.053,.171,.019,.003,.015,.006,.005,1e-4,.005,1e-4,.001,1e-4,10.038,.915,.217,3.327,5.602,.262,2.678,1.589,6.671,1.512,2.136,5.043,2.364,3.492,4.102,.745,.01,2.956,3.613,3.601,3.337,2.349,.035,.018,.282,.057,1e-4,.001,1e-4,1e-4,1e-4,.058,.044,.003,.004,.008,.009,.002,.003,.002,.002,.001,.119,.035,.369,.001,.002,.002,.302,.004,.024,.002,.002,.006,.001,.007,.006,.003,.005,.009,.024,.001,.003,.073,3.336,.013,.002,.299,.044,.019,.052,.004,.017,.001,.011,.001,.006,.001,.004,.019,.004,.042,.006,.01,.008,.063,.001,.053,.001,.006,.009,.008,.006,.098,.001,1e-4,1e-4,.118,3.226,.711,1,1e-4,.004,.002,.001,.002,.001,.001,1e-4,.008,.003,.027,.008,1e-4,.001,1e-4,1e-4,1e-4,.003,.004,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.008,.055,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.098,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.879,.044,.115,1e-4,1e-4,1e-4,1e-4,.013,.198,.211,1e-4,1e-4,.85,.464,1.499,.007,.524,.5,.381,.203,.246,.244,.244,.191,.262,.229,.082,.038,1e-4,1e-4,1e-4,.029,1e-4,.282,.315,.126,.106,.101,.06,.092,.086,.092,.093,.251,.348,.227,.266,.057,.128,1e-4,.081,.346,.343,.013,.053,.416,.005,.029,.062,.002,1e-4,.002,1e-4,.015,1e-4,5.706,1.515,.218,1.433,4.537,.262,2.208,.762,2.069,.092,2.86,1.7,1.242,5.365,3.328,.599,.022,1.81,1.981,3.619,.984,.189,.434,.086,1.565,.929,1e-4,1e-4,1e-4,1e-4,1e-4,.013,.004,.029,1e-4,.015,1e-4,1e-4,.007,.004,.002,.007,.016,.004,.004,.022,.015,.018,1e-4,.004,.007,.022,1e-4,.009,.004,1e-4,.005,1e-4,.016,.002,1e-4,.002,.059,.007,.009,1.785,.013,1.12,.007,.002,.044,.027,.112,1.609,.647,.002,.026,3.804,.577,.007,.004,1e-4,.022,.564,1e-4,1.689,.002,.005,.046,.002,.403,.176,1e-4,.004,.002,1e-4,1e-4,1e-4,12.759,.005,.07,1e-4,.007,1e-4,.007,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.024,.011,.007,1e-4,1e-4,.015,.004,.002,1e-4,.002,.002,.004,.007,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.387,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.061,.002,.275,1e-4,.001,.015,.001,.014,.187,.187,1e-4,.002,.95,.147,1.223,.02,.376,.495,.321,.161,.177,.142,.127,.123,.133,.217,.047,.016,.003,.003,.003,.002,1e-4,.169,.152,.152,.124,.074,.068,.115,.09,.132,.082,.135,.104,.207,.208,.116,.297,.005,.117,.252,.137,.082,.102,.023,.008,.009,.058,.012,1e-4,.012,1e-4,.003,1e-4,8.404,.811,.782,2.282,6.596,.226,1.221,.511,7.186,3.593,2.512,2.698,2.143,5.119,6.434,1.798,.011,3.759,3.618,2.964,3.066,2.297,.032,.02,.068,1.245,.001,.003,.001,1e-4,1e-4,.106,.072,.05,.059,.003,.006,.013,.266,.014,.001,.001,.001,.012,.537,.001,.001,.005,.13,.005,.01,.006,.001,.001,.002,.039,.019,.011,.012,.016,.006,.015,.006,.037,.532,.005,.005,.003,.001,.001,.002,.003,.013,.001,.004,.001,.013,.001,.001,.155,.023,.063,.029,.039,.108,.009,.019,.119,.002,.045,.036,.04,.092,.525,.041,1e-4,1e-4,.038,.074,.943,.945,1e-4,1e-4,.009,.001,1e-4,.001,1e-4,1e-4,.013,.006,.916,.332,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.003,.045,1e-4,1e-4,.002,.001,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],si:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.314,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.928,.001,.061,.001,.001,.005,1e-4,.009,.059,.059,1e-4,.001,.185,.034,.404,.009,.086,.094,.056,.028,.026,.03,.026,.025,.029,.049,.012,.004,.002,.002,.002,.002,1e-4,.015,.008,.015,.008,.007,.006,.005,.007,.015,.002,.003,.006,.01,.006,.006,.01,.001,.006,.015,.013,.004,.004,.005,.001,.001,.001,.005,1e-4,.005,1e-4,.003,1e-4,.173,.028,.067,.071,.23,.039,.038,.081,.157,.003,.016,.086,.051,.142,.142,.042,.002,.132,.124,.159,.054,.019,.027,.007,.032,.003,1e-4,.001,1e-4,1e-4,1e-4,2.252,.201,.275,1.149,.707,.497,.106,.13,.003,.08,2.719,.062,.013,.472,1e-4,1.466,.446,.166,2.231,.489,1.129,.007,.144,1e-4,.039,.612,2.039,.034,.759,.19,.015,.026,.094,.008,.192,.001,.005,.01,.001,.537,.012,.162,.001,.275,.003,1.26,.067,.843,.165,1.921,.001,.089,.809,.008,15.577,14.437,1.305,.017,1.681,1.481,1e-4,.796,1e-4,.001,1e-4,1e-4,.014,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,29.588,1e-4,.504,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sm:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.213,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,19.463,.008,.168,1e-4,.003,.014,.002,.885,.148,.148,1e-4,.001,1,.173,.914,.009,.254,.312,.179,.14,.095,.115,.095,.086,.112,.168,.033,.027,.006,.002,.006,.005,1e-4,.462,.087,.119,.039,.23,.233,.074,.06,.345,.031,.147,.149,.348,.135,.431,.236,.003,.115,.459,.28,.072,.088,.128,.02,.007,.009,.001,1e-4,.001,1e-4,1e-4,.001,15.436,.147,.251,.268,7.552,1.798,1.939,.261,7.65,.014,.507,6.117,2.84,3.141,6.14,1.094,.011,1.189,2.656,4.384,4.707,.608,.084,.018,.145,.038,1e-4,1e-4,1e-4,1e-4,1e-4,.05,.151,1e-4,.004,.001,1e-4,1e-4,1e-4,.002,.001,.001,.003,.002,.017,.002,.001,.003,1e-4,1e-4,.02,.001,.001,1e-4,.001,.039,.002,.001,1e-4,.001,.001,1e-4,1e-4,.005,.004,1e-4,.011,.001,.001,.001,.001,.001,.006,.001,.028,.001,.004,.001,.001,.003,.003,.001,.003,.002,.002,1e-4,.001,.002,.001,.002,.086,.003,.001,.001,.001,1e-4,1e-4,.005,.033,.176,.042,1e-4,1e-4,1e-4,.001,.085,.001,1e-4,1e-4,.007,1e-4,.006,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.046,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.427,.001,.194,1e-4,.001,.007,.003,.024,.281,.281,1e-4,.005,.597,.124,.956,.038,.114,.113,.073,.04,.036,.036,.026,.025,.034,.053,.08,.124,.002,.009,.002,.006,1e-4,.169,.097,.234,.083,.107,.043,.1,.097,.095,.037,.196,.037,.454,.178,.024,.119,.003,.094,.231,.097,.036,.089,.031,.003,.009,.113,.039,1e-4,.038,1e-4,.002,1e-4,12.237,1.335,1.505,2.374,5.54,.412,1.524,3.199,8.126,.115,3.86,.667,3.205,6.578,4.667,1.202,.019,4.537,2.41,2.721,5.562,2.325,2.211,.043,1.41,2.325,1e-4,.005,1e-4,1e-4,1e-4,.012,.003,.001,.003,.001,.001,.001,1e-4,.017,.001,.004,.001,.004,1e-4,.001,.001,.01,.005,.003,.004,.003,1e-4,1e-4,1e-4,.001,.016,.001,.004,.001,.001,1e-4,1e-4,.009,.004,.001,.001,.001,.001,.003,.003,.003,.004,.008,.001,1e-4,.002,1e-4,.001,.004,.002,.002,.002,.001,.001,.002,.002,.002,.001,.001,.001,.002,.001,.002,.001,1e-4,1e-4,.011,.016,.003,.002,1e-4,1e-4,1e-4,.037,.008,.027,.001,.001,.002,.001,.006,.002,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.001,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],so:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.235,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.454,.003,.106,1e-4,.001,.01,.006,.044,.175,.179,.001,.006,.698,.181,.663,.023,.173,.237,.118,.074,.068,.076,.069,.062,.061,.116,.103,.039,.006,.095,.008,.006,.001,.277,.176,.197,.21,.058,.067,.135,.123,.156,.069,.122,.08,.279,.092,.046,.025,.078,.077,.341,.096,.053,.009,.145,.085,.037,.009,.058,.001,.058,1e-4,.009,.001,20.28,1.752,.781,4.408,3.807,.467,1.801,2.804,6.156,.344,2.692,2.981,1.937,3.517,5.007,.065,.666,2.59,2.645,1.488,3.47,.033,1.517,1.277,3.257,.024,.006,.007,.006,1e-4,1e-4,.044,.021,.016,.015,.092,.046,.041,.026,.037,.007,.048,.005,.002,.004,.027,.011,.01,.009,.012,.004,.002,.001,.001,.002,.003,.016,1e-4,1e-4,.009,.011,.002,.005,.026,.005,.004,.02,.008,.009,.004,.102,.029,.015,.023,.008,.009,.018,.009,.021,.011,.034,.006,.02,.009,.011,.006,.006,.005,.024,.019,.018,.004,.003,.001,.004,1e-4,1e-4,.03,.015,.007,.003,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.003,.001,.005,.002,1e-4,1e-4,1e-4,1e-4,.002,.003,.36,.404,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.003,.003,.045,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.034,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sq:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.871,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.83,.005,.212,1e-4,.001,.008,.002,.025,.142,.143,.001,.002,.876,.197,.817,.021,.247,.322,.187,.096,.094,.095,.084,.083,.096,.185,.067,.019,.003,.004,.003,.004,1e-4,.232,.164,.084,.121,.088,.104,.113,.084,.118,.051,.274,.113,.216,.178,.042,.229,.027,.103,.291,.126,.044,.092,.017,.024,.009,.037,.024,1e-4,.024,1e-4,.005,.001,5.42,.732,.432,2.174,7.144,.635,1.01,2.972,6.09,2.066,2.05,2.101,2.386,4.875,2.895,1.724,.557,5.177,3.826,5.956,2.462,1.012,.037,.057,.423,.487,1e-4,.007,1e-4,1e-4,1e-4,.107,.006,.004,.005,.003,.002,.002,.017,.002,.002,.001,.01,.001,.002,.002,.001,.001,.008,.001,.019,.002,.001,.001,.001,.003,.015,.001,.001,.032,.031,.002,.003,.048,.005,.005,.002,.005,.002,.002,.098,.005,.011,.001,5.762,.002,.004,.002,.002,.006,.006,.012,.004,.005,.003,.003,.002,.003,.003,.003,.004,.006,.003,.003,.003,1e-4,1e-4,.063,5.926,.008,.006,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.023,.009,.015,.012,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.007,.008,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.001,.106,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],srn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.777,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,18.537,.004,.236,1e-4,1e-4,.009,1e-4,.081,.222,.175,1e-4,1e-4,.673,.268,1.397,.005,.412,.368,.15,.085,.102,.103,.102,.071,.07,.14,.041,.016,.015,.002,.015,1e-4,1e-4,.384,.184,.068,.478,.061,.057,.098,.039,.172,.08,.05,.052,.288,.1,.075,.116,.004,.117,.271,.146,.008,.023,.047,.004,.014,.007,.005,1e-4,.005,1e-4,1e-4,1e-4,8.95,2.176,.221,2.431,7.818,1.651,1.874,.226,8.782,.064,2.479,1.698,2.095,8.318,4.117,1.376,.003,4.52,3.577,2.919,3.347,.156,1.329,.018,1.038,.054,1e-4,.001,1e-4,1e-4,1e-4,.042,.007,.007,.002,.003,.002,.003,.006,.003,.001,.002,.001,.006,.003,.002,.005,.004,.002,.001,.035,.002,.002,.002,.006,.002,.002,.002,.002,.002,.007,.002,.002,.024,.012,.002,.005,.004,.007,.002,.002,.012,.012,.006,.009,.002,.021,.005,.003,.003,.003,.034,.007,.002,.002,.002,1e-4,.005,.007,.019,.009,.005,.003,.004,.012,1e-4,1e-4,.029,.098,.021,.025,.002,.002,.002,.005,.001,.003,1e-4,1e-4,.01,.004,.009,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.053,1e-4,1e-4,.016,.016,1e-4,.01,1e-4,1e-4,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ss:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.873,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.454,.015,.301,.001,.003,.01,.003,.035,.203,.202,.001,1e-4,.685,.328,.962,.019,.22,.221,.137,.048,.066,.07,.054,.061,.082,.144,.105,.052,.007,.003,.008,.003,1e-4,.231,.18,.097,.094,.111,.055,.072,.058,.259,.082,.196,.342,.348,.356,.028,.088,.003,.097,.319,.164,.113,.024,.061,.025,.043,.044,1e-4,1e-4,1e-4,1e-4,.001,1e-4,10.793,2.656,.706,1.31,8.505,1.004,2.081,2.919,7.091,.258,4.271,5.701,2.568,6.606,3.595,.825,.028,.782,3.437,3.569,4.546,.696,2.323,.017,1.567,.734,1e-4,.001,1e-4,1e-4,1e-4,.037,.016,.007,.01,.014,.008,.007,.004,.009,.007,.013,.004,.003,.014,.015,.004,.003,.006,.003,.008,.006,.002,.007,.004,.002,.004,.007,.002,.01,.003,.007,.003,.09,.039,.013,.006,.01,.005,.005,.023,.007,.024,.007,.009,.005,.109,.006,.007,.018,.014,.009,.035,.024,.01,.007,.005,.015,.006,.031,.01,.005,.01,.008,.005,1e-4,1e-4,.085,.273,.013,.008,1e-4,1e-4,1e-4,.005,.001,.002,.002,1e-4,.003,.002,.061,.022,.001,1e-4,1e-4,.003,.002,.003,.059,.053,1e-4,1e-4,1e-4,1e-4,.005,1e-4,.042,.021,.034,1e-4,.001,.002,.002,1e-4,1e-4,1e-4,.001,.002,.003,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],st:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.411,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.42,.002,.079,1e-4,.001,.016,.003,.083,.165,.167,.001,.001,.789,.143,.973,.021,.355,.325,.221,.104,.116,.113,.108,.098,.108,.15,.061,.016,.007,.005,.006,.001,1e-4,.408,.587,.149,.148,.115,.088,.067,.172,.071,.055,.339,.212,.509,.175,.046,.141,.01,.115,.317,.165,.126,.071,.047,1e-4,.019,.026,.011,1e-4,.01,1e-4,.005,1e-4,12.26,2.144,.403,1.165,9.234,.827,1.837,3.801,3.704,.349,2.878,4.66,2.188,4.177,7.024,1.54,.085,2.344,4.067,4.22,1.114,.282,1.372,.049,.996,.173,1e-4,.001,1e-4,1e-4,1e-4,.013,.01,.009,1e-4,.005,.007,.001,.001,.001,.002,.001,.001,1e-4,.013,.003,.001,.009,.001,.001,.004,.005,1e-4,1e-4,.002,.001,.01,.006,.004,.004,.003,1e-4,1e-4,.049,.052,.003,.003,.006,.002,.001,.006,.002,.022,.037,.001,.003,.01,1e-4,.001,.004,.002,.001,.03,.056,.001,.001,.001,.004,.001,.002,.007,.001,1e-4,.002,.001,1e-4,1e-4,.046,.167,.019,.086,1e-4,.003,.001,.01,.001,.003,1e-4,.001,1e-4,1e-4,.01,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.007,.004,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.008,.013,1e-4,.001,.004,.002,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],stq:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.516,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.229,.003,.416,.007,.001,.015,.001,.047,.208,.207,.008,.003,.814,.425,1.065,.021,.376,.623,.234,.148,.183,.183,.241,.167,.231,.214,.089,.019,.072,.007,.069,.006,1e-4,.293,.408,.089,.454,.155,.334,.214,.273,.205,.248,.241,.264,.372,.199,.14,.214,.005,.245,.798,.226,.158,.049,.246,.003,.006,.016,.02,1e-4,.02,1e-4,.001,1e-4,3.929,.935,.799,3.858,10.176,1.298,1.131,1.308,4.615,.883,2.156,2.674,1.358,6.685,4.841,.816,.012,4.246,3.53,4.621,4.666,.159,1.055,.042,.141,.124,1e-4,.002,1e-4,1e-4,1e-4,.049,.004,.003,.001,.07,.001,.001,.001,.001,.002,.001,1e-4,.001,.002,.001,.001,.001,.001,.001,.004,.002,.001,.003,.001,.009,.014,.001,.002,.008,.004,.005,.004,.021,.009,.015,.001,2.394,.001,.001,.002,.004,.014,.003,.002,.001,.007,.002,.002,.004,.002,.026,.006,.003,.001,.134,.001,.003,.002,.004,.004,.245,.003,.002,.003,1e-4,1e-4,.038,2.918,.006,.011,1e-4,1e-4,1e-4,.004,.001,.002,.001,1e-4,.013,.006,.008,.004,1e-4,1e-4,1e-4,1e-4,.001,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.048,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],su:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.293,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.195,.001,.272,1e-4,.001,.006,.001,.02,.129,.129,1e-4,.002,1.05,.168,1.046,.037,.48,.412,.411,.202,.173,.175,.161,.145,.144,.197,.036,.015,.003,.003,.003,.001,1e-4,.394,.22,.151,.149,.042,.047,.094,.073,.227,.16,.402,.071,.278,.12,.097,.305,.014,.09,.368,.175,.05,.031,.057,.016,.027,.009,.008,1e-4,.008,1e-4,.005,1e-4,13.373,1.612,.819,2.725,4.093,.314,2.685,1.583,5.788,.997,2.729,2.341,2.09,7.706,2.801,1.889,.016,3.889,3.272,4.14,4.781,.134,.635,.029,.708,.032,1e-4,.001,1e-4,1e-4,1e-4,.025,.005,.003,.004,.006,.004,.004,.002,.004,.073,.003,.001,.001,.004,.007,.003,.003,.002,.003,.007,.008,.001,.001,.001,.001,.004,.001,.001,.004,.004,.001,.001,.047,.002,.001,.002,.004,.002,.002,.006,.003,2.276,.003,.002,.001,.002,.007,.002,.004,.005,.002,.002,.001,.001,.002,.001,.002,.003,.002,.001,.002,.033,.001,.033,1e-4,1e-4,.051,2.355,.003,.004,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.004,.002,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.02,.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.007,.025,.004,.001,.003,.002,.001,.001,.001,1e-4,1e-4,.001,1e-4,1e-4,.032,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],sw:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.454,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.93,.002,.217,.002,.001,.01,.003,.027,.171,.171,.001,.001,.703,.109,.942,.015,.41,.383,.266,.126,.108,.126,.108,.107,.119,.201,.062,.024,.003,.004,.003,.003,1e-4,.226,.167,.122,.086,.058,.057,.065,.116,.13,.09,.638,.08,.504,.137,.044,.113,.006,.074,.173,.147,.165,.059,.218,.013,.04,.023,.04,1e-4,.04,.001,.001,.001,16.478,1.326,.611,1.343,3.374,.678,1.131,2.383,9.629,.827,4.598,2.609,3.253,5.284,3.187,.805,.008,1.616,2.094,2.468,4.443,.427,3.161,.026,2.095,1.273,.001,.006,.001,1e-4,1e-4,.04,.005,.004,.002,.004,.002,.002,.002,.002,.002,.002,.001,.002,.001,.001,.001,.002,.001,.001,.013,.002,.001,.001,.001,.002,.006,.001,.001,.009,.008,.001,.004,.009,.003,.002,.002,.003,.001,.001,.005,.003,.009,.001,.002,.001,.002,.001,.002,.005,.009,.009,.004,.002,.003,.004,.001,.004,.003,.003,.003,.006,.003,.002,.003,1e-4,1e-4,.018,.029,.009,.005,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.014,.007,.011,.004,1e-4,1e-4,1e-4,.002,.002,.005,.012,.01,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.002,.004,.038,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],szl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.884,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.63,.002,.452,1e-4,1e-4,.012,.001,.026,.296,.296,.001,.001,1.094,.318,1.181,.015,.332,.469,.289,.138,.131,.151,.118,.131,.157,.273,.087,.014,.006,.003,.006,1e-4,1e-4,.207,.209,.155,.118,.048,.111,.139,.08,.122,.125,.213,.123,.287,.122,.062,.309,.005,.156,.329,.126,.154,.05,.233,.034,.017,.083,.004,1e-4,.004,1e-4,.006,.001,5.741,.894,2.016,2.128,5.35,.327,1.279,.968,3.438,2.841,2.633,2.099,2.293,3.364,5.857,1.423,.012,3.389,2.85,2.58,2.277,.102,3.144,.017,3.623,2.205,1e-4,1e-4,1e-4,1e-4,1e-4,.191,.035,.624,.044,.945,.014,.009,.333,.008,.003,.006,.005,.012,.221,.005,.196,.006,.005,.003,.168,.01,.003,.005,.005,.005,.109,.059,.562,.005,.005,.004,.006,.062,.111,.006,.016,.01,.004,.004,.012,.011,.03,.005,.012,.003,.012,.008,1.67,.032,.015,.058,.035,.048,.018,.012,.004,.02,.013,.335,.026,.282,.022,.098,.006,1e-4,1e-4,.109,.208,.455,5.073,1e-4,.001,1e-4,.008,.003,.003,.004,1e-4,.015,.008,.161,.06,.003,.002,1e-4,.003,.001,.009,.025,.019,1e-4,.001,1e-4,1e-4,.002,1e-4,.011,.01,.176,.006,.001,.005,.003,.002,.001,.001,1e-4,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ta:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.357,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.862,.001,.077,1e-4,.001,.006,.001,.007,.055,.056,1e-4,.001,.234,.03,.384,.005,.084,.106,.063,.029,.028,.034,.027,.032,.031,.052,.017,.006,.002,.002,.002,.001,1e-4,.008,.004,.008,.004,.004,.003,.005,.004,.006,.002,.003,.003,.005,.004,.003,.008,1e-4,.004,.008,.005,.002,.002,.002,.001,.001,1e-4,.006,1e-4,.006,1e-4,.002,1e-4,.062,.006,.017,.014,.042,.007,.009,.018,.038,.001,.006,.024,.018,.035,.032,.011,.001,.036,.022,.032,.017,.005,.004,.002,.01,.001,1e-4,.001,1e-4,1e-4,1e-4,.122,2.149,.144,.01,1e-4,.297,.436,.597,.764,.136,.24,.226,.005,5.298,.158,.027,.013,1e-4,.078,.014,1e-4,2.36,1e-4,1e-4,.001,.171,.627,1e-4,.037,.002,.021,1.319,.014,1e-4,.001,.32,2.012,.001,.001,1e-4,.539,.989,1.521,1e-4,1e-4,.001,23.215,10.185,1.322,.801,1.028,.757,.189,.942,1e-4,.015,.06,.015,1e-4,1e-4,1e-4,1e-4,1.18,2.177,1e-4,1e-4,.016,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,31.245,1e-4,.013,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tcy:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.391,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.751,.001,.026,1e-4,1e-4,.002,1e-4,.028,.048,.047,1e-4,.001,.244,.028,.533,.012,.014,.02,.01,.005,.005,.007,.006,.004,.008,.009,.009,.003,.002,.003,.002,.002,1e-4,.002,.001,.002,.001,.001,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,.002,.001,.001,.001,1e-4,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.003,1e-4,.001,.001,.02,.002,.008,.006,.018,.002,.005,.006,.017,1e-4,.003,.009,.008,.014,.015,.008,1e-4,.013,.012,.015,.006,.002,.005,1e-4,.003,1e-4,1e-4,.001,1e-4,.001,1e-4,.354,1.789,1.221,.031,1e-4,.268,1.686,.484,.152,.21,.745,.196,.087,4.125,.064,.014,.014,1e-4,.109,.011,.001,1.28,.033,.613,.012,.007,.23,.003,.404,.002,.011,.433,.058,1.007,.002,.198,1.312,.064,1.397,.124,1.439,.012,1.248,.035,.624,.105,.769,.62,1.755,1e-4,22.872,9.408,1e-4,.629,.164,.121,.665,.124,1e-4,1e-4,.003,1e-4,1.377,1.63,1e-4,1e-4,.05,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.955,1e-4,.194,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],te:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.34,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.746,.003,.051,1e-4,.001,.003,.002,.007,.042,.043,1e-4,.001,.336,.028,.611,.018,.129,.152,.069,.038,.034,.073,.03,.032,.034,.047,.02,.007,.002,.004,.002,.002,1e-4,.008,.004,.006,.005,.003,.003,.002,.002,.006,.001,.002,.003,.005,.003,.002,.005,1e-4,.003,.008,.005,.003,.002,.002,.001,1e-4,1e-4,.006,1e-4,.007,1e-4,.005,1e-4,.053,.008,.019,.022,.056,.009,.01,.021,.046,.001,.004,.022,.015,.038,.038,.014,1e-4,.036,.036,.045,.017,.006,.006,.002,.007,.001,1e-4,.002,1e-4,1e-4,1e-4,.485,1.801,1.898,.051,1e-4,.236,.427,.575,.238,.222,.152,.685,.105,2.799,.055,.027,.006,1e-4,.047,.007,.005,1.329,.049,.668,.014,.002,.428,.004,.25,.001,.004,.537,.039,.598,.002,.137,.864,.099,.843,.149,1.628,1e-4,.909,.085,.267,.128,.942,.804,25.531,7.165,1.487,.074,1e-4,.877,.211,.153,.855,.145,1e-4,.001,1e-4,1e-4,2.169,2.359,1e-4,1e-4,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,30.736,1e-4,.069,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tet:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.506,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.056,.014,.345,1e-4,.004,.018,.001,.455,.383,.382,.001,.004,1.067,.53,.968,.029,.443,.39,.316,.132,.112,.137,.105,.106,.119,.181,.186,.018,.015,.005,.015,.003,1e-4,.338,.226,.145,.169,.132,.156,.098,.111,.215,.061,.136,.43,.301,.181,.101,.266,.01,.137,.345,.37,.107,.065,.041,.021,.008,.014,.01,1e-4,.01,1e-4,1e-4,1e-4,11.569,1.502,.408,2.068,6.067,.587,.66,2.225,7.509,.16,2.246,2.814,2.311,6.307,4.401,1.282,.035,4.022,4.063,3.545,4.826,.518,.1,.064,.126,.341,1e-4,.009,1e-4,1e-4,1e-4,.318,.081,.003,.001,.002,.001,1e-4,1e-4,.001,.001,.001,1e-4,.001,.002,.001,1e-4,.001,1e-4,1e-4,.015,.001,1e-4,1e-4,.001,.004,.275,.001,1e-4,.014,.013,.001,.002,.021,.254,.002,.025,1e-4,1e-4,.003,.02,.002,.389,.006,.001,.001,.167,.001,.001,.002,.048,.071,.284,.01,.003,.001,1e-4,.001,.001,.076,.003,.014,.001,.001,.002,1e-4,1e-4,.1,1.362,.004,.006,1e-4,1e-4,1e-4,.009,.011,1e-4,1e-4,1e-4,.007,.003,.006,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.316,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tg:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.272,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.893,.001,.026,1e-4,1e-4,.002,.001,.001,.324,.326,1e-4,.001,.765,.105,.581,.006,.139,.257,.13,.073,.063,.072,.065,.068,.082,.185,.026,.048,.002,.001,.002,.001,1e-4,.026,.01,.018,.007,.005,.01,.006,.007,.018,.002,.005,.008,.009,.006,.004,.009,.001,.007,.015,.007,.003,.006,.004,.006,.002,.002,.004,1e-4,.004,1e-4,1e-4,1e-4,.081,.01,.03,.023,.086,.012,.015,.021,.065,.002,.009,.037,.017,.055,.061,.017,.001,.07,.039,.054,.023,.01,.007,.003,.013,.003,1e-4,1e-4,1e-4,1e-4,1e-4,2.968,1.483,1.764,1.455,.398,.384,.008,.116,.704,.002,.17,.01,.024,.035,.045,.663,.178,.263,.119,.126,.303,.007,.009,.022,.136,.003,.143,.343,.148,.063,.071,.071,.134,.159,.101,.347,.121,.05,.002,.026,.059,.003,.003,.057,.003,.035,.012,.164,5.899,1.075,1.071,1.816,2.336,1.339,.082,.882,4.885,.258,1.014,1.438,1.445,2.22,3.885,.208,1e-4,1e-4,.132,.006,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.002,.001,30.166,10.131,1.965,.481,1e-4,1e-4,1e-4,1e-4,.024,.016,.001,.006,1e-4,1e-4,1e-4,1e-4,.003,.001,.209,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ti:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.164,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.862,.026,.05,1e-4,1e-4,.012,1e-4,.044,.1,.1,1e-4,1e-4,.075,.114,.14,.02,.098,.121,.073,.033,.026,.04,.027,.03,.029,.042,.024,.004,.001,.013,.001,.007,1e-4,.018,.013,.015,.007,.006,.007,.011,.013,.022,.004,.004,.024,.018,.012,.005,.015,.004,.01,.013,.022,.007,.009,.006,.002,.004,.002,.002,1e-4,.002,1e-4,1e-4,1e-4,.329,.063,.099,.16,.451,.14,.111,.211,.297,.027,.053,.155,.097,.283,.275,.071,.007,.228,.261,.255,.122,.059,.08,.007,.069,.014,1e-4,.002,1e-4,1e-4,1e-4,.358,.069,.074,.236,.007,.331,.023,.001,9.303,5.576,6.47,5.805,1.549,3.066,.251,.003,.505,.172,.135,1.034,.015,2.293,.054,.001,.75,.233,.32,.51,.12,1.725,.08,.002,.83,.546,.753,1.425,.111,2.053,.138,.011,.764,.373,.244,.731,.034,1.854,.258,.004,1.053,.166,.551,.69,.031,2.007,.179,.005,.189,.048,.045,.156,.011,.447,.067,.002,1e-4,1e-4,.386,.04,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.027,.012,1e-4,1e-4,1e-4,1e-4,.006,.008,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,27.967,.209,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tk:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.842,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.847,.005,.052,1e-4,.001,.008,.001,.006,.121,.125,.004,.002,.691,.455,1.024,.011,.191,.306,.153,.096,.091,.095,.077,.079,.095,.155,.055,.012,.028,.003,.028,.005,1e-4,.227,.204,.012,.086,.083,.04,.177,.112,.174,.027,.109,.037,.173,.054,.141,.071,.001,.074,.173,.153,.029,.028,.04,.045,.029,.016,.01,1e-4,.01,.001,.003,1e-4,8.711,1.574,.069,3.499,5.666,.119,2.22,.895,5.266,.476,2.165,5.087,2.1,4.83,1.754,1.161,.002,5.326,1.953,2.216,1.612,.014,.863,.003,4.905,.889,1e-4,.001,1e-4,1e-4,1e-4,.208,.022,.019,.011,.017,.007,.003,.027,1.247,.001,1e-4,.008,.005,.003,.002,.006,.003,.005,.002,.04,.02,.001,.017,.002,.001,.002,.001,.001,.068,.139,.083,1.114,.015,.004,.009,.002,.694,.003,.003,.67,.001,.002,1e-4,.027,1e-4,.192,.001,.002,.056,.114,.02,.061,.013,.043,.813,.006,.038,.007,.016,.096,.984,2.385,.053,.019,1e-4,1e-4,.268,5.753,.012,2.464,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.001,.001,.324,.111,.002,.001,1e-4,1e-4,1e-4,1e-4,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.054,.182,1e-4,.005,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tl:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.527,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.015,.006,.416,.001,.001,.006,.002,.043,.2,.202,.001,.002,.702,.264,.789,.017,.219,.272,.17,.08,.075,.082,.072,.075,.087,.155,.061,.022,.066,.004,.066,.002,1e-4,.555,.199,.186,.134,.118,.059,.112,.181,.214,.066,.204,.127,.268,.176,.063,.292,.011,.11,.398,.188,.06,.045,.055,.008,.035,.014,.016,1e-4,.015,.001,.003,1e-4,16.44,1.457,.382,1.246,2.379,.123,6.741,1.192,6.121,.033,2.118,3.173,2.569,9.845,3.868,2.142,.019,2.313,4.125,3.402,2.226,.121,.559,.032,2.131,.078,1e-4,.002,1e-4,1e-4,1e-4,.038,.008,.005,.004,.004,.003,.002,.002,.004,.002,.002,.002,.003,.007,.003,.002,.004,.004,.002,.014,.006,.001,.002,.001,.002,.008,.001,.002,.013,.007,.002,.002,.028,.01,.003,.002,.004,.002,.002,.004,.003,.01,.002,.004,.002,.008,.002,.002,.005,.01,.003,.007,.003,.003,.002,.002,.006,.003,.004,.003,.005,.003,.003,.003,1e-4,1e-4,.029,.045,.007,.011,.001,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,.012,.006,.01,.004,1e-4,1e-4,1e-4,1e-4,.001,.005,.008,.007,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.007,.012,.037,.005,.001,.003,.002,.001,.001,.001,.004,.001,.001,1e-4,1e-4,1e-4,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tn:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.716,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,17.981,.003,.08,.013,.001,.009,.002,.01,.075,.075,1e-4,1e-4,.66,.106,.757,.034,.2,.226,.113,.036,.039,.039,.04,.035,.043,.09,.021,.015,.01,.005,.011,.004,1e-4,.148,.357,.071,.097,.07,.054,.125,.028,.051,.019,.166,.104,.374,.087,.085,.102,.001,.088,.173,.113,.019,.017,.023,.006,.007,.021,.023,1e-4,.022,1e-4,.004,1e-4,12.488,2.445,.191,1.643,9.389,.795,4.171,1.899,3.702,.312,2.67,5.097,2.631,4.499,8.158,1.075,.008,1.917,4.118,4.684,.837,.048,2.161,.014,.955,.029,.001,.002,.001,1e-4,1e-4,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,.001,1e-4,1e-4,1e-4,.002,.002,1e-4,1e-4,.003,.003,1e-4,1e-4,.034,.011,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,.001,.001,1e-4,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.036,.008,1e-4,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],to:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.293,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.821,.001,.44,1e-4,1e-4,.001,.005,.111,.238,.237,.002,1e-4,.847,.076,1.066,.045,.084,.141,.063,.039,.037,.032,.036,.05,.065,.067,.09,.023,.003,.011,.005,.027,1e-4,.126,.034,.039,.011,.049,.193,.01,.178,.123,.01,.599,.145,.204,.188,.245,.136,.001,.012,.185,.547,.059,.124,.026,.001,.005,.001,.004,1e-4,.005,1e-4,.002,.001,10.579,.223,.423,.627,6.707,1.724,1.525,3.199,6.545,.014,3.573,2.547,1.814,3.859,6.712,1.277,.01,.909,1.504,3.555,4.441,.529,.312,.02,.255,.009,1e-4,1e-4,1e-4,.004,1e-4,.028,.432,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.082,1e-4,1e-4,1e-4,1e-4,.002,.183,.003,1e-4,1e-4,.001,.011,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,.057,1e-4,1e-4,1e-4,1e-4,.003,1e-4,1e-4,.002,.001,.078,1e-4,.015,1e-4,1e-4,.013,1e-4,.001,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,4.517,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.022,.094,.659,.119,1e-4,1e-4,1e-4,1e-4,4.513,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.024,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tpi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.506,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.422,.004,.225,1e-4,1e-4,.006,1e-4,.033,.226,.227,.001,1e-4,.976,.07,1.357,.011,.339,.409,.202,.102,.113,.106,.09,.101,.134,.258,.112,.01,.016,.001,.016,.001,1e-4,.28,.281,.358,.108,.184,.096,.132,.102,.251,.103,.247,.515,.27,.273,.17,.405,.016,.129,.696,.311,.02,.133,.076,.006,.097,.011,.006,1e-4,.006,1e-4,.003,1e-4,9.267,1.534,.295,1.028,5.418,.186,3.091,.44,8.286,.1,1.968,5.697,3.075,7.815,5.428,2.623,.013,2.618,3.22,3.51,1.911,.537,.798,.013,.388,.104,1e-4,.001,1e-4,1e-4,1e-4,.026,.016,.007,.003,.007,.001,.002,.003,.001,.001,.001,.002,.006,.002,.001,.001,.004,.002,.001,.01,.002,.002,.002,.003,.001,.004,.001,.005,.009,.009,.003,.002,.021,.037,.001,.006,1e-4,.001,.001,.002,.002,.013,.005,.003,.004,.024,.002,.002,.006,.026,.007,.298,.002,.005,.003,.003,.01,.004,.011,.015,.005,.005,.003,.004,1e-4,1e-4,.019,.408,.007,.009,1e-4,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.02,.011,.021,.008,1e-4,1e-4,1e-4,.003,1e-4,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.008,.012,.021,.009,.003,.009,.003,.001,.001,.002,.004,.003,.005,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ts:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.117,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.445,.004,.183,1e-4,1e-4,.006,.001,.136,.107,.107,1e-4,1e-4,.868,.158,.838,.021,.152,.161,.081,.037,.038,.052,.045,.043,.056,.092,.041,.025,.03,.001,.03,.006,1e-4,.18,.088,.068,.084,.075,.029,.061,.137,.055,.032,.132,.116,.387,.232,.02,.062,.002,.075,.171,.121,.04,.219,.021,.119,.045,.021,.003,1e-4,.003,1e-4,.002,.005,13.463,1.384,.275,1.092,4.958,.572,1.347,3.614,7.958,.047,4.285,4.291,2.768,5.921,3.615,.489,.025,2.056,2.585,2.874,4.929,1.994,3.082,.68,2.172,.64,1e-4,1e-4,1e-4,.001,1e-4,.055,.002,.001,.001,.002,1e-4,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.001,1e-4,.005,.001,1e-4,1e-4,.001,1e-4,.031,1e-4,.001,.008,.008,1e-4,1e-4,.05,.004,.002,.001,1e-4,1e-4,1e-4,.002,1e-4,.002,1e-4,1e-4,.001,.003,1e-4,.002,.001,.005,.002,.011,.002,1e-4,1e-4,.001,.002,.002,.001,.002,.002,.002,1e-4,.002,1e-4,1e-4,.051,.023,.002,.002,1e-4,1e-4,1e-4,.002,1e-4,.001,1e-4,1e-4,.018,.006,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.054,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tt:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.086,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.219,.001,.085,1e-4,1e-4,.04,1e-4,.002,.22,.221,1e-4,.008,.529,.164,.713,.007,.223,.276,.185,.093,.09,.084,.067,.069,.089,.159,.097,.008,.002,.001,.002,.003,1e-4,.01,.009,.017,.009,.006,.003,.002,.003,.017,.001,.009,.003,.013,.003,.003,.004,.005,.005,.013,.017,.009,.006,.002,.01,.003,.001,.002,1e-4,.002,1e-4,.002,1e-4,.245,.051,.015,.059,.152,.017,.027,.019,.108,.002,.051,.14,.059,.158,.057,.025,.035,.149,.073,.108,.056,.01,.015,.014,.048,.025,1e-4,1e-4,1e-4,1e-4,1e-4,2.852,1.726,1.824,1.398,.151,.194,.076,.605,.638,.004,.1,2.623,.236,.061,.057,.479,.123,.129,.053,.062,.279,.075,.02,.174,.096,1.916,.222,.025,.1,.049,.069,.128,.159,.146,.119,.43,.164,.055,.003,.065,.036,.325,1e-4,.038,.001,.013,.042,.429,4.958,1.044,.394,1.429,.959,3.011,.048,.384,1.557,.433,1.901,3.01,1.056,3.108,1.043,.407,1e-4,1e-4,.106,.225,.139,.034,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.004,1e-4,.003,.001,26.093,12.748,1.127,2.265,1e-4,1e-4,1e-4,1e-4,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.275,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tum:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.34,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.852,.004,.573,.003,.004,.004,.017,.083,.308,.306,.001,1e-4,1.303,.412,1.2,.024,.557,.476,.366,.176,.172,.213,.206,.176,.165,.191,.118,.025,.012,.007,.012,1e-4,.001,.268,.377,.217,.158,.11,.095,.125,.123,.134,.277,.29,.111,.727,.21,.076,.143,.01,.116,.269,.294,.069,.067,.069,.003,.068,.042,.008,1e-4,.008,1e-4,1e-4,1e-4,10.116,1.728,1.817,1.937,5.125,1.225,1.488,3.251,6.548,.159,2.454,2.854,2.514,5.282,4.292,2.074,.028,2.715,2.7,3.62,4.127,.602,1.862,.051,1.299,.758,1e-4,1e-4,1e-4,1e-4,1e-4,.102,.017,.014,.014,.01,.006,.008,.005,.003,.001,.007,.006,.02,.058,.017,.003,.008,.005,.001,.016,.005,.005,.003,.004,.009,.043,.004,.001,.008,.005,.006,.002,.103,.006,.008,.007,.001,.005,.009,.025,.006,.01,.003,.011,.006,.004,1e-4,.003,.016,.015,.003,.014,.008,.112,.003,.014,.012,.008,.012,.012,.008,.009,.01,.003,1e-4,1e-4,.101,.045,.006,.195,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.005,.003,.063,.038,.001,.001,.001,.006,.003,.007,.053,.034,.001,.001,1e-4,1e-4,1e-4,1e-4,.016,.022,.093,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,.002,.012,.008,.001,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tw:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.984,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.303,.001,.389,1e-4,.001,1e-4,.004,.077,.488,.486,1e-4,1e-4,.756,.118,1.791,.025,.73,.614,.579,.248,.221,.18,.206,.176,.192,.286,.065,.035,.004,1e-4,.004,.01,1e-4,.602,.283,.296,.116,.311,.173,.2,.1,.303,.048,.367,.187,.399,.306,.149,.189,.019,.18,.508,.305,.203,.099,.096,.049,.077,.01,.003,1e-4,.019,1e-4,1e-4,1e-4,8.315,.995,.605,1.602,5.365,.628,.659,.955,4.58,.091,2.249,1.426,1.892,5.378,5.608,.884,.03,3.156,2.583,1.888,2.004,.328,1.708,.075,2.441,.168,1e-4,1e-4,1e-4,.01,1e-4,.083,.035,.035,.017,.032,.015,.093,.059,.023,.016,.025,.022,.019,.022,.029,.012,.046,.013,.009,.017,.855,.004,.017,.017,.006,.004,.012,1.236,.017,.012,.01,.004,.081,.046,.012,.012,.086,.028,.017,.054,.03,.075,.019,.012,.016,.036,.009,.019,.074,.048,.057,.049,.013,2.039,.016,.03,.109,.023,.064,.039,.051,.048,.068,.015,1e-4,1e-4,.075,.196,.058,.036,.106,1e-4,.001,1.812,.004,1e-4,.001,1e-4,2.053,.006,.306,.086,1e-4,1e-4,1e-4,.012,.003,.267,.158,.09,.007,.004,1e-4,1e-4,1e-4,1e-4,.209,.016,.044,1e-4,.016,.052,.016,.023,.012,.003,.001,1e-4,.003,1e-4,1e-4,.019,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ty:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,5.596,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.482,.002,.148,1e-4,1e-4,1e-4,.001,.103,.185,.187,1e-4,1e-4,.459,.229,1.457,.013,.217,.354,.181,.099,.109,.09,.093,.094,.097,.295,.032,.014,.002,.001,.023,1e-4,1e-4,.336,.259,.191,.056,.549,.206,.061,.142,.109,.062,.031,.131,.411,.099,.644,.477,.008,.194,.401,.951,.146,.18,.019,.004,.015,.007,.008,1e-4,.01,1e-4,.003,1e-4,9.536,.253,.42,.705,6.452,.803,.335,1.722,7.016,.092,.277,1.311,1.613,3.693,4.012,.994,.04,4.455,1.038,5.804,2.543,.371,.019,.027,.146,.201,1e-4,1e-4,1e-4,1e-4,1e-4,2.052,.908,.007,.002,.007,.001,1e-4,.003,.006,.001,.003,.002,.002,1.282,1e-4,.001,.007,1e-4,.043,.549,.01,1e-4,1e-4,.003,.114,1.916,1e-4,.006,1e-4,1e-4,1e-4,1e-4,.19,.144,.074,.002,.002,.003,.003,.022,.06,.039,.051,.598,.116,.035,.003,.018,.003,.029,.506,.059,.005,.003,1e-4,.001,.002,.008,.013,.037,.005,1e-4,1e-4,.001,1e-4,1e-4,.033,1.417,1.711,1.627,1e-4,1e-4,1e-4,.008,.01,.005,.002,.001,1e-4,1e-4,.009,.006,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.012,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.01,2.037,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],tyv:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.67,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.942,.005,.141,1e-4,1e-4,.004,.001,.003,.097,.1,1e-4,.001,.649,.583,.64,.009,.087,.151,.08,.042,.04,.04,.033,.032,.035,.099,.046,.011,.008,.002,.008,.008,1e-4,.007,.002,.003,.002,.002,.002,.001,.002,.022,1e-4,.001,.001,.002,.001,.002,.001,1e-4,.001,.003,.003,.001,.006,.002,.011,.001,1e-4,.005,1e-4,.005,1e-4,.005,1e-4,.081,.005,.006,.008,.025,.002,.005,.006,.02,.002,.007,.012,.016,.015,.021,.013,.003,.017,.01,.014,.01,.002,.004,.007,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,3.263,.883,1.755,1.893,.056,.377,.045,1.004,.604,.005,.051,2.643,.086,.75,.036,.173,.125,.135,.03,.065,.108,.011,.018,.005,.038,.005,.129,.036,.079,.041,.11,.022,.066,.107,.147,.782,.015,.082,.008,.088,.054,.476,.001,.089,.001,.039,.018,.892,5.51,.98,.415,1.888,1.904,2.436,.478,.679,2.249,.486,1.593,2.459,.684,3.034,1.582,.744,1e-4,1e-4,.143,.011,.004,.002,1e-4,1e-4,1e-4,.002,.004,.003,.01,.001,.011,.002,28.453,13.514,1.663,.515,1e-4,1e-4,1e-4,1e-4,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.001,.094,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],udm:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.306,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.09,.004,.114,1e-4,1e-4,.008,1e-4,.002,.237,.238,.002,.001,.557,.317,.775,.018,.183,.302,.16,.086,.075,.092,.071,.074,.085,.189,.048,.012,.017,.014,.016,.001,1e-4,.018,.008,.012,.004,.003,.003,.003,.003,.016,.004,.004,.006,.014,.003,.019,.021,1e-4,.006,.011,.006,.003,.006,.001,.009,.001,.001,.003,1e-4,.003,1e-4,1e-4,1e-4,.242,.027,.103,.053,.195,.007,.026,.039,.148,.005,.015,.074,.03,.111,.083,.028,.002,.108,.083,.059,.078,.015,.004,.004,.02,.008,1e-4,.002,1e-4,1e-4,1e-4,2.622,2.823,2.068,1.727,.105,.092,.121,.28,.404,.054,.451,2.424,1.272,.932,.131,.626,.166,.634,.123,.164,.252,.027,.006,.023,.083,.009,.22,.069,.124,.088,.082,.223,.15,.209,.107,.132,.033,.405,.01,.179,.05,.004,.001,.088,.001,.03,.018,.022,2.886,.44,.8,.564,1.075,2.236,.315,1.165,1.904,.34,1.795,2.214,1.337,2.854,2.759,.664,1e-4,1e-4,.24,.028,.005,.005,1e-4,1e-4,1e-4,.001,.001,1e-4,.023,1e-4,.001,1e-4,25.262,16.34,.005,.714,1e-4,.005,.001,.002,.005,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.006,.277,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ug:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,6.843,.005,.045,1e-4,1e-4,.006,1e-4,.05,.059,.061,.001,.001,.064,.182,.431,.006,.116,.137,.086,.058,.051,.055,.044,.042,.045,.072,.055,.007,.018,.009,.017,1e-4,1e-4,.014,.005,.004,.003,.002,.001,.002,.002,.011,.008,.009,.003,.013,.002,.002,.005,.001,.002,.015,.014,.019,.001,.002,.002,.003,1e-4,.003,.001,.003,1e-4,.008,1e-4,.198,.04,.041,.081,.144,.022,.07,.096,.317,.009,.06,.138,.069,.164,.09,.038,.044,.138,.091,.118,.088,.011,.018,.015,.072,.022,1e-4,1e-4,1e-4,.001,1e-4,.146,.075,1.421,1.142,2.553,1.322,3.07,1.622,1.224,6.252,1.181,.454,.501,.027,.124,.02,.545,.041,.008,.046,.025,2.705,.02,.099,.121,.09,.015,.082,.041,.012,.015,.06,.068,.006,.005,.06,.019,.028,1.456,3.601,1.011,.28,1.856,.056,.228,.623,.346,2.099,.163,2.119,.524,1.075,.873,.045,.014,.035,.226,.052,1.208,.825,.077,.089,1.1,.024,1e-4,1e-4,.118,.051,.009,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.001,1e-4,.765,.262,.112,.09,1e-4,1e-4,1e-4,.001,14.938,17.649,1.694,5.905,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.067,.002,.002,.006,.003,.003,.002,.002,1e-4,1e-4,1e-4,1e-4,.007,1.731,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ur:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.979,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.161,.002,.04,1e-4,1e-4,.001,1e-4,.006,.157,.157,1e-4,.001,.081,.085,.055,.007,.121,.179,.119,.082,.072,.073,.068,.065,.07,.096,.098,.002,.004,.003,.004,1e-4,1e-4,.02,.016,.035,.016,.006,.007,.013,.009,.011,.009,.012,.015,.025,.011,.007,.016,.003,.012,.029,.016,.005,.006,.007,.001,.005,.003,.004,1e-4,.004,1e-4,.004,1e-4,.265,.03,.059,.059,.181,.032,.039,.075,.194,.006,.027,.102,.048,.197,.175,.037,.004,.142,.109,.147,.083,.021,.026,.005,.049,.011,1e-4,.014,1e-4,1e-4,1e-4,.055,2.387,.534,.013,1.581,2.193,2.297,.009,2.712,.004,.024,.012,4.725,.004,.025,.025,.036,.091,1.735,.008,.507,.001,.001,.002,.02,.012,1e-4,.005,.005,.004,.001,.005,.009,.069,.224,.005,.08,.002,.401,5.353,1.186,2.395,1.412,.054,.699,.376,.232,1.576,.068,2.734,.325,1.531,.466,.218,.1,.222,.073,1.112,.88,.012,.002,.002,1.074,.003,1e-4,1e-4,.008,.011,.003,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.005,.002,1e-4,1e-4,1e-4,1e-4,.001,.002,18.028,10.547,4.494,8.618,1e-4,1e-4,1e-4,1e-4,.005,.001,.049,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.043,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],uz:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.321,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.468,.001,.189,1e-4,1e-4,.012,1e-4,.019,.383,.392,.002,.002,1.018,.346,1.56,.012,.451,.539,.363,.217,.199,.207,.182,.168,.187,.31,.029,.042,.003,.005,.003,.002,1e-4,.288,.177,.127,.096,.051,.092,.103,.072,.123,.042,.115,.075,.277,.092,.158,.088,.099,.095,.293,.135,.08,.063,.021,.043,.077,.019,.006,1e-4,.006,.001,.001,.005,11.395,1.621,.663,2.97,1.946,.469,2.488,2.791,9.732,.446,2.32,4.562,2.354,4.897,4.652,.487,1.34,4.598,3.575,3.341,2.208,1.083,.027,.322,2.128,.799,1e-4,.002,1e-4,.001,1e-4,.456,.006,.008,.004,.002,.001,.001,.001,.003,.002,1e-4,.001,.001,.001,.001,.002,.001,.001,.001,.165,.164,1e-4,.001,.001,.064,.017,.001,.002,.019,.002,.019,.002,.169,.003,.003,1e-4,.002,1e-4,1e-4,.002,.007,.014,1e-4,.005,.001,.001,1e-4,1e-4,.04,.006,.006,.01,.015,.009,.006,.002,.016,.002,.006,.916,.127,.009,.012,.002,1e-4,1e-4,.192,.06,.002,.001,1e-4,1e-4,1e-4,1e-4,1.018,1e-4,1e-4,1e-4,.001,1e-4,.124,.036,.003,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.449,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],ve:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.731,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.522,.012,.078,1e-4,1e-4,.001,1e-4,.009,.159,.16,1e-4,.001,.539,.225,1.016,.019,.145,.2,.126,.043,.046,.05,.05,.043,.035,.051,.043,.011,.01,.003,.01,.007,.001,.246,.066,.041,.13,.054,.04,.046,.163,.081,.023,.129,.141,.422,.243,.021,.074,.002,.073,.154,.414,.061,.436,.032,.007,.055,.059,.001,1e-4,.002,1e-4,1e-4,1e-4,13.088,1.237,.128,2.934,4.075,.966,1.256,7.989,6.478,.01,1.611,2.964,2.428,5.855,4.328,.793,.003,1.372,2.898,2.532,4.835,2.93,2.215,.021,.876,1.698,.001,1e-4,.001,1e-4,1e-4,.04,.003,.001,1e-4,.002,.021,1e-4,.001,1e-4,.001,1e-4,.004,1e-4,1e-4,1e-4,.001,.001,1e-4,.005,.137,1e-4,1e-4,1e-4,.001,.005,.006,.001,.001,.006,.005,1e-4,1e-4,.002,.001,.008,.001,1e-4,1e-4,.007,.001,1e-4,1e-4,1e-4,.004,.002,1e-4,1e-4,.001,.008,.049,.003,.004,1e-4,1e-4,.001,1e-4,.157,.074,.001,.002,1e-4,.026,.002,.001,1e-4,1e-4,1e-4,.017,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.014,.002,.006,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.006,.231,.039,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],vec:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.253,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.683,.003,.435,1e-4,1e-4,.011,.001,.612,.188,.187,1e-4,.002,.962,.099,.799,.015,.255,.324,.176,.103,.099,.11,.096,.095,.113,.179,.07,.031,.016,.004,.016,.001,1e-4,.22,.135,.257,.11,.212,.092,.123,.029,.211,.028,.03,.164,.197,.115,.055,.192,.012,.112,.28,.113,.043,.127,.024,.034,.008,.022,.006,1e-4,.006,1e-4,.006,1e-4,9.014,.584,2.527,3.084,9.08,.695,1.267,.67,6.478,.14,.121,3.361,1.486,5.29,5.96,1.776,.156,4.436,3.403,4.054,1.601,1.042,.044,.834,.071,.222,1e-4,.006,1e-4,1e-4,1e-4,.081,.084,1.282,.004,.002,.002,.001,.002,.002,.001,.001,.002,.003,.004,.001,.001,.002,.013,.001,.01,.002,.001,.001,.008,.004,.058,.055,.001,.003,.003,1e-4,.001,.74,.012,.002,.002,.005,.001,.002,.041,.204,.163,.002,.004,.188,.007,.001,.002,.019,.005,.113,.084,.004,.003,.003,.001,.003,.085,.013,.006,.006,.01,.027,.003,1e-4,1e-4,.074,1.6,.013,1.389,.061,1e-4,.005,.002,.001,.001,.001,1e-4,.014,.007,.012,.005,1e-4,1e-4,1e-4,.001,1e-4,.002,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.013,.075,.002,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],vep:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.78,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.379,.003,.471,1e-4,.001,.103,1e-4,.568,.495,.495,1e-4,.017,1.052,.379,1.489,.012,.568,.707,.478,.223,.214,.232,.198,.192,.203,.325,.211,.045,.002,.001,.002,.001,1e-4,.203,.112,.053,.077,.109,.05,.072,.067,.085,.066,.318,.157,.187,.127,.087,.197,.001,.106,.305,.17,.046,.359,.008,.005,.004,.023,.011,1e-4,.011,1e-4,1e-4,1e-4,7.907,.771,.299,4.189,5.699,.182,1.123,1.305,7.031,1.198,2.907,3.562,2.965,5.97,3.852,1.33,.003,2.724,3.29,3.069,2.779,1.746,.01,.004,.024,.95,1e-4,1e-4,1e-4,1e-4,1e-4,.243,.042,.031,.026,.016,.009,.007,.007,.018,.003,.008,.014,.04,.228,.004,.014,.011,.008,.007,.006,.198,.004,.004,.004,.004,.01,.011,.006,.059,.006,.007,.007,.049,.512,.005,.004,1.459,.005,.005,.012,.007,.009,.006,.076,.003,.005,.006,.008,.087,.02,.049,.021,.019,.048,.155,.011,.041,.019,.037,.102,.539,.049,.808,.016,1e-4,1e-4,.208,2.197,.255,1.283,1e-4,1e-4,1e-4,.018,.007,.013,.002,.001,.025,.012,.469,.173,.003,.003,.001,.006,.006,.011,.026,.019,.001,.001,.001,1e-4,.001,1e-4,.026,.012,.203,.002,.001,.003,.002,.001,.001,.001,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],vls:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.228,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.739,.003,.38,1e-4,1e-4,.005,.003,.744,.196,.195,.001,.001,.727,.325,.943,.009,.279,.491,.2,.128,.127,.144,.128,.137,.161,.217,.083,.01,.008,.003,.008,.002,1e-4,.184,.236,.118,.332,.112,.115,.126,.103,.261,.107,.122,.141,.163,.108,.113,.118,.004,.127,.191,.088,.03,.223,.122,.006,.022,.104,.001,1e-4,.002,1e-4,.001,1e-4,4.751,.962,1.1,3.988,12.635,.533,2.162,1.118,4.159,.386,1.909,2.864,1.62,7.645,4.865,1.022,.013,4.762,3.511,4.63,2.292,1.812,1.033,.041,.74,.83,1e-4,1e-4,1e-4,1e-4,1e-4,.13,.003,.003,.001,.002,.001,.002,.001,.001,.001,.008,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,.008,.015,1e-4,1e-4,1e-4,.025,.093,1e-4,1e-4,.002,.002,.001,.001,.016,.003,.001,.001,.002,.001,.001,.004,.09,.034,.493,.075,.001,.002,.001,.006,.006,.003,.004,.004,.299,.002,.003,.001,.002,.001,.002,.002,.005,.002,.001,.002,1e-4,1e-4,.02,1.045,.002,.004,1e-4,1e-4,1e-4,.001,1e-4,.001,.001,1e-4,.007,.004,.008,.003,1e-4,1e-4,1e-4,.001,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.002,.13,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],vo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.865,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,14.101,1e-4,.089,1e-4,.177,.768,1e-4,.013,.471,.471,1e-4,1e-4,1.958,.301,1.263,.002,1.009,1.484,1.145,.885,.977,.988,.827,.571,.867,.731,.368,.112,.003,1e-4,.003,1e-4,1e-4,.099,.202,.186,.179,.034,.122,.068,.069,.028,.029,.035,.486,.223,.193,.038,.198,.004,.074,.506,.089,.221,.126,.048,.001,.008,.039,.004,.001,.005,1e-4,1e-4,1e-4,5.558,2.077,.284,2.834,4.622,1.332,.379,.28,4.679,.128,1.147,4.377,2.51,5.854,4.077,1.175,.015,1.237,3.788,2.427,1.276,.657,.06,.029,.621,.304,1e-4,1e-4,1e-4,1e-4,1e-4,.73,.001,1e-4,.005,.073,1e-4,1e-4,1e-4,1e-4,.005,1e-4,1e-4,1e-4,1e-4,.002,1e-4,1e-4,.033,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.623,1e-4,1e-4,.045,1e-4,.038,.009,.001,.006,.006,.01,2.184,1e-4,1e-4,.003,.022,.052,.002,.001,1e-4,.004,1e-4,1e-4,.27,.001,.247,.003,.014,.006,1.503,1e-4,1e-4,1e-4,.001,.001,1.216,1e-4,1e-4,1e-4,1e-4,1e-4,.516,5.121,.006,.01,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.73,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],wa:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.065,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,16.234,.018,.387,1e-4,1e-4,.001,.005,1.403,.391,.397,1e-4,.006,1.323,.328,1.748,.02,.212,.344,.172,.086,.07,.086,.076,.078,.098,.148,.393,.059,.003,.003,.006,.012,1e-4,.126,.117,.176,.177,.152,.211,.071,.055,.154,.041,.016,.325,.219,.065,.097,.121,.003,.069,.125,.076,.016,.053,.079,.005,.007,.005,.103,1e-4,.103,1e-4,1e-4,1e-4,4.343,.71,2.121,3.465,9.326,.692,.491,.929,5.047,.968,.844,3.108,1.647,4.913,4.614,1.529,.028,3.303,5.504,4.286,1.947,1.135,.682,.179,1.059,.366,1e-4,.075,1e-4,1e-4,1e-4,.076,.002,.002,.001,.001,.022,.001,.008,.005,.003,.001,1e-4,1e-4,.001,.001,.001,.001,1e-4,1e-4,.002,.005,1e-4,1e-4,1e-4,1e-4,.065,1e-4,.001,.004,.003,1e-4,.001,.371,.002,.017,.001,.001,.706,.003,.089,.451,.662,.205,.03,.001,.001,.639,.002,.006,.002,.002,.001,.243,.004,.001,.001,.001,.001,.002,.257,.001,.001,.001,.001,1e-4,1e-4,.478,3.239,.002,.003,1e-4,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,.002,.001,.006,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.08,1e-4,1e-4,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],war:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.118,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,12.933,1e-4,1.377,1e-4,1e-4,1e-4,.003,.004,.008,.008,1e-4,1e-4,.432,.073,1.214,.001,.079,.266,.062,.046,.041,.046,.05,.055,.111,.217,.037,.004,.001,1e-4,.001,1e-4,1e-4,1.082,.154,.38,.175,.141,.098,.127,.173,.102,.057,.046,.208,.316,.091,.096,.293,.004,.105,.232,.146,.033,.038,.367,.012,.008,.019,.001,1e-4,1e-4,1e-4,1e-4,1e-4,13.129,.835,2.123,1.488,5.092,.584,3.71,3.47,8.491,.033,1.376,3.841,1.504,9.228,3.14,2.313,.025,2.807,5.239,2.428,2.957,.216,.413,.116,1.506,.106,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.001,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.006,.001,.001,.001,.001,1e-4,.002,.004,.019,1e-4,.001,1e-4,.003,1e-4,1e-4,1e-4,.001,1e-4,.004,.003,1e-4,.004,1e-4,.001,1e-4,.001,1e-4,.006,.002,1e-4,.001,1e-4,1e-4,1e-4,.06,.002,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],wo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.906,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,18.371,.007,.083,1e-4,1e-4,.002,1e-4,.048,.243,.244,1e-4,.001,1.526,.299,.6,.011,.077,.162,.075,.048,.048,.043,.038,.041,.05,.065,.149,.021,.001,.005,.001,.009,1e-4,.248,.196,.082,.079,.037,.083,.06,.026,.08,.079,.082,.102,.179,.109,.049,.052,.005,.054,.208,.113,.015,.012,.059,.037,.106,.002,.002,1e-4,.002,1e-4,.001,1e-4,10.502,2.142,1.408,2.296,5.004,.815,2.647,.171,6.017,1.265,2.73,3.516,3.296,5.064,5.377,.616,.08,2.151,1.518,2.39,4.356,.021,1.494,1.066,2.37,.019,.002,1e-4,.004,1e-4,1e-4,.102,.006,.003,.003,.01,.005,.004,.003,.005,.001,.005,.02,.001,.001,.008,.002,.005,.039,.003,.026,.001,.001,1e-4,.001,.001,.041,.001,1e-4,.016,.015,1e-4,1e-4,.641,.001,.002,.004,.002,.001,.001,.012,.011,.402,.004,.775,.001,.002,.001,.002,.004,.912,.013,.056,.002,.002,.001,.002,.003,.003,.002,.013,.001,.002,.002,.001,1e-4,1e-4,.028,2.826,.002,.019,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.002,1e-4,.004,.002,.016,.018,1e-4,1e-4,1e-4,1e-4,.003,.007,.033,.053,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,.096,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],wuu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.208,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.344,.001,.064,1e-4,1e-4,.012,.001,.005,.037,.032,.001,.002,.029,.05,.042,.019,.267,.364,.21,.108,.106,.12,.107,.1,.123,.181,.013,.001,.013,.002,.013,.001,1e-4,.027,.021,.029,.015,.013,.01,.014,.013,.018,.007,.011,.017,.022,.016,.01,.023,.002,.017,.03,.019,.009,.006,.008,.002,.003,.002,.03,1e-4,.03,1e-4,.003,1e-4,.184,.024,.041,.051,.161,.019,.037,.056,.143,.005,.024,.082,.047,.138,.118,.028,.006,.111,.081,.088,.07,.016,.015,.01,.024,.008,.001,.002,.001,.001,1e-4,2.843,1.238,1.324,.655,.418,1.022,.586,.937,1.267,1.305,.731,1.421,2.335,.988,.859,1.016,1.143,.568,.436,.439,.836,.673,.873,1.003,.932,.655,.691,1.033,1.591,.82,.469,.875,.536,.577,.431,.453,.911,.859,.578,.722,.777,.496,1.371,.496,.553,1.219,.891,1.125,1.185,.888,.563,.66,.876,.472,.61,.726,3.021,1.231,1.855,1.189,2.708,1.052,.869,1.001,1e-4,1e-4,.059,.019,.003,.003,.001,1e-4,1e-4,.005,.002,.002,.002,1e-4,.011,.004,.02,.007,1e-4,1e-4,1e-4,1e-4,.001,.003,.011,.009,1e-4,1e-4,.001,1e-4,.001,1e-4,.068,.005,.208,1.565,4.388,9.361,5.679,3.099,2.882,2.131,.002,.004,.008,.002,1e-4,1.953,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],xal:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,2.016,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,7.801,.002,.076,1e-4,1e-4,.005,1e-4,.002,.134,.134,.001,.003,.529,.574,.918,.006,.214,.423,.268,.17,.177,.128,.129,.128,.121,.185,.028,.007,.006,.001,.006,.006,1e-4,.005,.004,.004,.001,.002,.002,.002,.002,.006,.001,.002,.002,.003,.001,.001,.002,1e-4,.002,.005,.003,.001,.002,.003,.004,.001,.001,.005,1e-4,.006,1e-4,.005,1e-4,.064,.016,.035,.026,.079,.017,.024,.144,.059,.003,.012,.04,.028,.059,.05,.015,.002,.048,.045,.048,.035,.008,.009,.006,.012,.006,1e-4,.002,1e-4,1e-4,1e-4,2.512,1.678,1.585,1.178,.036,.859,.336,.487,.211,.008,.012,.272,.319,.492,.054,.135,.09,.152,.041,.073,.19,.017,.022,.69,.054,1.446,.115,.043,.168,.153,.159,.053,.055,.105,.151,.242,.028,.118,.031,.02,.093,.554,.004,.02,.002,.072,.031,.849,3.75,1.252,.825,1.816,2.139,1.256,.115,.387,2.666,.446,.987,3.364,1.079,4.101,2.147,.166,1e-4,1e-4,.041,.006,.002,1e-4,.001,1e-4,1e-4,.038,1e-4,1e-4,.004,1e-4,.007,.004,27.749,10.017,2.264,1.98,1e-4,.003,.001,.001,.002,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.024,.035,.127,1e-4,1e-4,.004,.002,.001,.001,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],xh:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.827,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,11.133,.013,.259,.004,.001,.009,.002,.046,.125,.123,.001,.005,.846,.831,.912,.026,.163,.218,.112,.059,.052,.058,.048,.051,.067,.118,.048,.023,.018,.006,.018,.006,1e-4,.218,.122,.114,.05,.111,.054,.063,.043,.32,.057,.15,.086,.186,.216,.074,.101,.011,.057,.136,.094,.198,.022,.071,.041,.042,.046,.076,.001,.076,1e-4,.013,1e-4,10.703,2.404,.805,1.231,8.068,.529,2.029,3.142,7.484,.244,4.325,4.529,2.518,6.863,5.226,.943,.434,1.064,2.867,2.574,4.687,.307,2.513,.353,2.341,2.213,.002,.028,.002,1e-4,1e-4,.043,.003,.001,.001,.002,1e-4,.004,.012,.003,.001,.001,1e-4,.001,.001,1e-4,1e-4,.002,.001,.004,.01,.003,1e-4,1e-4,.001,.003,.018,1e-4,1e-4,.005,.005,1e-4,.001,.1,.005,.001,.004,.001,1e-4,1e-4,.003,.001,.007,.001,1e-4,1e-4,.001,1e-4,1e-4,.001,.001,.001,.004,.001,.001,.001,.001,.001,.001,.002,.001,.002,.001,.001,.001,1e-4,1e-4,.101,.03,.014,.003,1e-4,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,.004,.003,.004,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.049,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],xmf:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.601,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,4.701,.001,.058,1e-4,1e-4,.01,1e-4,.002,.121,.121,1e-4,.001,.458,.166,.464,.005,.164,.192,.121,.06,.056,.064,.055,.055,.065,.102,.028,.018,.001,.001,.001,1e-4,1e-4,.008,.006,.008,.007,.003,.004,.003,.003,.027,.001,.002,.006,.007,.003,.003,.005,1e-4,.004,.007,.009,.002,.008,.003,.01,.001,1e-4,.006,1e-4,.006,1e-4,.001,1e-4,.041,.006,.016,.012,.042,.004,.007,.012,.032,.001,.006,.021,.011,.029,.03,.007,.001,.029,.023,.023,.015,.005,.003,.002,.006,.002,1e-4,.001,1e-4,1e-4,1e-4,.172,.003,.002,30.333,.002,.001,.001,.001,.001,1e-4,.001,.001,.001,.001,.001,.001,4.083,.506,.555,.957,2.283,.421,.156,.803,3.59,.653,1.19,1.236,1.788,2.02,.312,.098,2.097,1.217,.638,1.469,.698,.389,.172,.093,1.339,.152,.183,.083,.259,.102,.41,.184,.054,.009,.013,.002,.001,.003,.001,.323,.062,.002,.002,.002,.002,.003,.004,.002,1e-4,1e-4,.043,.004,.001,.001,.007,1e-4,1e-4,.001,1e-4,.001,.001,1e-4,.011,.002,.023,.008,1e-4,1e-4,1e-4,.001,1e-4,.001,.004,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.009,30.332,.17,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],yi:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.709,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.298,.002,.186,1e-4,.001,.004,.006,.121,.075,.076,1e-4,1e-4,.466,.059,.46,.006,.099,.114,.062,.037,.035,.037,.03,.03,.038,.064,.034,.015,.001,.001,.001,.002,1e-4,.003,.003,.004,.003,.002,.002,.002,.002,.002,.001,.001,.002,.003,.002,.002,.002,1e-4,.002,.004,.003,.001,.001,.002,1e-4,1e-4,1e-4,.003,1e-4,.003,1e-4,.001,1e-4,.02,.003,.006,.007,.022,.003,.004,.006,.017,1e-4,.003,.01,.006,.015,.021,.004,.006,.015,.011,.018,.013,.002,.003,.001,.003,.001,1e-4,1e-4,1e-4,1e-4,1e-4,.013,.004,.003,.001,.001,.001,.001,.001,.001,1e-4,1e-4,.001,.001,1e-4,1e-4,.001,5.002,1.068,1.228,1.611,.814,3.904,1.071,.178,2.364,5.673,.275,.347,1.459,.389,1.018,2.472,1.73,1.057,4.356,.098,1.356,.06,.547,.832,3.227,.975,.239,.001,.001,.001,1e-4,.001,.02,.006,.026,.005,.016,.005,.002,.163,.104,.003,.002,.002,.041,.002,.022,.034,1e-4,1e-4,.015,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.003,.001,.029,.011,1e-4,1e-4,1e-4,1e-4,.372,43.367,.002,.002,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,1e-4,.011,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],yo:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,3.162,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,13.013,.002,.102,1e-4,.001,.004,.001,.025,.251,.249,1e-4,.001,.499,.259,1.047,.013,.386,.744,.471,.336,.305,.301,.323,.299,.314,.417,.09,.08,.008,.009,.008,.006,1e-4,.462,.171,.128,.102,.134,.101,.156,.11,.251,.116,.194,.108,.188,.187,.263,.133,.007,.102,.27,.148,.037,.042,.07,.006,.044,.016,.007,1e-4,.008,1e-4,.001,.001,4.068,1.959,.507,1.515,3.958,.547,1.326,.747,4.508,1.331,1.562,2.445,1.011,4.469,3.265,1.008,.02,3.063,1.958,2.732,1.408,.219,.852,.039,.732,.092,1e-4,.013,1e-4,1e-4,1e-4,.678,1.441,.002,.002,.064,.002,.001,.002,.025,.003,.001,.001,.172,1.046,1e-4,1e-4,.001,.001,.032,.052,.002,1e-4,1e-4,1e-4,.018,.066,.002,.001,.007,.006,1e-4,.001,1.085,1.316,.01,.17,.004,.001,.001,.003,.307,.812,.001,.003,1.559,1.199,.001,.002,.003,.004,.287,.374,.003,.002,.006,.001,.038,1.787,1.887,1.09,.005,.003,.003,.001,1e-4,1e-4,.021,7.862,.009,.075,1e-4,.008,1e-4,.001,.001,.001,1.898,1e-4,.005,.002,.012,.004,1e-4,1e-4,1e-4,.001,1e-4,1e-4,.005,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.004,2.718,.12,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],za:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.779,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,9.452,.003,.07,1e-4,.001,.016,.002,.054,.186,.179,.001,1e-4,.82,.089,.74,.012,.236,.344,.171,.097,.104,.109,.078,.094,.113,.172,.091,.029,.001,.001,.002,.003,1e-4,.117,.253,.245,.236,.047,.096,.232,.128,.101,.031,.049,.109,.142,.114,.031,.114,.005,.051,.316,.07,.028,.136,.041,.012,.157,.02,.003,1e-4,.003,1e-4,1e-4,1e-4,4.452,1.127,1.557,2.16,5.66,.54,3.525,2.807,4.357,1.245,.519,1.215,1.057,5.149,2.46,.332,.75,1.554,1.842,1.639,2.859,.55,1.169,.375,1.034,2.115,.002,1e-4,.002,.001,1e-4,1.059,.53,.446,.215,.472,.297,.257,.268,.372,.375,.213,.338,.751,.361,.284,.332,.27,.144,.117,.272,.266,.278,.305,.293,.26,.335,.49,.247,.537,.19,.142,.27,.209,.19,.122,.13,.301,.259,.231,.235,.283,.134,.154,.156,.162,.375,.302,.377,.293,.227,.124,.201,.231,.092,.229,.184,.748,.296,.646,.455,.756,.262,.268,.277,1e-4,1e-4,.072,.167,.018,.011,1e-4,.002,1e-4,.002,.001,.001,.001,1e-4,.006,.002,.014,.004,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.012,.01,.002,.002,1e-4,1e-4,1e-4,1e-4,.022,.008,.114,.555,1.309,2.559,1.698,1.364,.916,.712,.001,.001,.001,1e-4,1e-4,.518,.001,1e-4,1e-4,.003,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],zea:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.532,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,15.056,.008,.162,1e-4,1e-4,.007,.001,1.415,.162,.162,1e-4,1e-4,1,.532,1.127,.004,.395,.563,.389,.394,.405,.319,.329,.24,.265,.382,.062,.076,.002,.003,.001,.008,1e-4,.28,.228,.122,.346,.208,.185,.11,.117,.317,.071,.084,.154,.152,.245,.188,.145,.004,.099,.307,.104,.026,.15,.089,.002,.005,.114,.003,1e-4,.003,1e-4,1e-4,.001,4.665,.916,.779,3.731,13.123,.39,1.695,1.202,4.867,.455,1.861,2.604,1.621,7.033,3.935,1.063,.011,4.601,3.105,3.908,1.82,1.832,.958,.04,.135,.573,1e-4,1e-4,1e-4,1e-4,1e-4,.482,.005,.003,.002,.003,.002,.001,.001,.002,.005,.002,.001,.001,.002,1e-4,.001,.001,.001,.001,.005,.003,.001,1e-4,.001,.021,.432,.001,.001,.01,.009,.003,.005,.009,.008,.021,.001,.002,.001,.003,.005,.09,.052,.453,.056,.009,.006,.003,.006,.115,.002,.14,.027,.252,.001,.064,1e-4,.002,.002,.002,.006,.004,.002,.002,.001,1e-4,1e-4,.239,1.084,.009,.01,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.005,.002,.008,.003,1e-4,1e-4,1e-4,.001,1e-4,.002,.007,.005,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,.002,.003,.481,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4],zu:[1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1.261,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,10.94,.004,.267,.001,.002,.016,.003,.041,.181,.181,.001,.001,.907,.49,.797,.099,.343,.379,.279,.134,.118,.116,.102,.097,.11,.223,.065,.035,.134,.003,.135,.005,1e-4,.296,.147,.142,.093,.11,.08,.077,.065,.3,.114,.141,.151,.361,.387,.067,.128,.012,.082,.239,.152,.188,.039,.182,.012,.045,.07,.138,1e-4,.139,1e-4,.001,1e-4,10.325,2.215,.829,1.627,7.521,.687,2.042,3.525,7.719,.199,3.874,4.421,2.406,6.494,4.881,.951,.342,1.361,3.011,2.552,4.691,.394,2.227,.134,1.688,1.779,1e-4,.002,1e-4,1e-4,1e-4,.08,.007,.001,.001,.002,1e-4,.014,.002,.002,.001,1e-4,.001,.003,.005,.001,.002,.002,.014,.001,.01,.003,1e-4,.001,.001,.002,.06,1e-4,.001,.003,.003,.001,1e-4,.084,.004,1e-4,.001,.001,1e-4,.002,.004,.002,.005,.003,.001,.001,.002,.001,1e-4,.004,.003,.003,.005,.002,.002,.001,.006,.005,.002,.003,.005,.002,.003,.003,1e-4,1e-4,1e-4,.089,.024,.004,.007,1e-4,1e-4,1e-4,.002,.001,.001,1e-4,1e-4,.002,.001,.029,.011,1e-4,1e-4,1e-4,1e-4,1e-4,.001,.005,.002,1e-4,.001,1e-4,1e-4,1e-4,1e-4,.002,.002,.091,.001,1e-4,.001,.002,1e-4,1e-4,1e-4,1e-4,1e-4,.001,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4,1e-4]});function pn(e,t){if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(var a=new Uint8Array(e),r=new Uint8Array(t),n=e.byteLength;n--;)if(a[n]!==r[n])return!1;return!0}var dn=ln,hn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Magic",e.flowControl=!0,e.module="Default",e.description="The Magic operation attempts to detect various properties of the input data and suggests which operations could help to make more sense of it.<br><br><b>Options</b><br><u>Depth:</u> If an operation appears to match the data, it will be run and the result will be analysed further. This argument controls the maximum number of levels of recursion.<br><br><u>Intensive mode:</u> When this is turned on, various operations like XOR, bit rotates, and character encodings are brute-forced to attempt to detect valid data underneath. To improve performance, only the first 100 bytes of the data is brute-forced.<br><br><u>Extensive language support:</u> At each stage, the relative byte frequencies of the data will be compared to average frequencies for a number of languages. The default set consists of ~40 of the most commonly used languages on the Internet. The extensive list consists of 284 languages and can result in many languages matching the data if their byte frequencies are similar.<br><br>Optionally enter a regular expression to match a string you expect to find to filter results (crib).",e.infoURL="https://github.com/gchq/CyberChef/wiki/Automatic-detection-of-encoded-data-using-CyberChef-Magic",e.inputType="ArrayBuffer",e.outputType="JSON",e.presentType="html",e.args=[{name:"Depth",type:"number",value:3},{name:"Intensive mode",type:"boolean",value:!1},{name:"Extensive language support",type:"boolean",value:!1},{name:"Crib (known plaintext string or regex)",type:"string",value:""}],e}return d()(t,e),o()(t,[{key:"run",value:function(){var e=ut()(st.a.mark(function e(t){var a,r,n,i,o,s,l,u,c,p;return st.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.opList[t.progress].ingValues,r=I()(a,4),n=r[0],i=r[1],o=r[2],s=r[3],l=t.dish,e.t0=dn,e.next=10,l.get(ct.a.ARRAY_BUFFER);case 10:return e.t1=e.sent,u=new e.t0(e.t1),c=s&&s.length?new RegExp(s,"i"):null,e.next=15,u.speculativeExecution(n,o,i,[],!1,c);case 15:return p=e.sent,c&&(p=p.filter(function(e){return e.matchesCrib})),this.state=t,l.set(p,ct.a.JSON),e.abrupt("return",t);case 20:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"present",value:function(e){var t=this,a=this.state.opList.map(function(e){return e.config}),r="<table\n                class='table table-hover table-sm table-bordered'\n                style='table-layout: fixed;'>\n            <tr>\n                <th>Recipe (click to load)</th>\n                <th>Result snippet</th>\n                <th>Properties</th>\n            </tr>";return e.forEach(function(e){var n,i=a.slice(0,t.state.progress).concat(e.recipe).concat(a.slice(t.state.progress+1)),o="recipe="+f.a.encodeURIFragment(f.a.generatePrettyRecipe(i)),s="",l="",u="",c="",p='<span data-toggle="tooltip" data-container="body" title="Shannon Entropy is measured from 0 to 8. High entropy suggests encrypted or compressed data. Normal text is usually around 3.5 to 5.">Entropy: <span style="color: '.concat((n=e.entropy,n<3?"green":n<5?"goldenrod":"red"),'">').concat(e.entropy.toFixed(2),"</span></span>"),d=e.isUTF8?"<span data-toggle='tooltip' data-container='body' title='The data could be a valid UTF8 string based on its encoding.'>Valid UTF8</span>\n":"";if(e.languageScores[0].probability>0){var h=e.languageScores.filter(function(e){return e.probability>0});h.length<1&&(h=[e.languageScores[0]]),s="<span data-toggle='tooltip' data-container='body' title='Based on a statistical comparison of the frequency of bytes in various languages. Ordered by likelihood.'>Possible languages:\n    "+h.map(function(e){return dn.codeToLanguage(e.lang)}).join("\n    ")+"</span>\n"}e.fileType&&(l='<span data-toggle="tooltip" data-container="body" title="Based on the presence of magic bytes.">File type: '.concat(e.fileType.mime," (").concat(e.fileType.ext,")</span>\n")),e.matchingOps.length&&(u="Matching ops: ".concat(Le()(new Set(e.matchingOps.map(function(e){return e.op}))).join(", "),"\n")),e.useful&&(c="<span data-toggle='tooltip' data-container='body' title='This could be an operation that displays data in a useful way, such as rendering an image.'>Useful op detected</span>\n"),r+='<tr>\n                <td><a href="#'.concat(o,'">').concat(f.a.generatePrettyRecipe(e.recipe,!0),"</a></td>\n                <td>").concat(f.a.escapeHtml(f.a.printable(f.a.truncate(e.data,99))),"</td>\n                <td>").concat(s).concat(l).concat(u).concat(c).concat(d).concat(p,"</td>\n            </tr>")}),r+="</table><script type='application/javascript'>$('[data-toggle=\"tooltip\"]').tooltip()<\/script>",e.length||(r="Nothing of interest could be detected about the input data.\nHave you tried modifying the operation arguments?"),r}}]),t}(h.a),fn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Mean",e.module="Default",e.description="Computes the mean (average) of a number list. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 .5 .5</code> becomes <code>4.75</code>",e.infoURL="https://wikipedia.org/wiki/Arithmetic_mean",e.inputType="string",e.outputType="BigNumber",e.args=[{name:"Delimiter",type:"option",value:v}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=fa(da(e,t[0]));return ue.a.isBigNumber(a)?a:new ue.a(NaN)}}]),t}(h.a),mn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Median",e.module="Default",e.description="Computes the median of a number list. If an item in the string is not a number it is excluded from the list.<br><br>e.g. <code>0x0a 8 1 .5</code> becomes <code>4.5</code>",e.infoURL="https://wikipedia.org/wiki/Median",e.inputType="string",e.outputType="BigNumber",e.args=[{name:"Delimiter",type:"option",value:v}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a,r=(a=da(e,t[0])).length%2==0&&a.length>0?(a.sort(function(e,t){return e.minus(t)}),fa([a[Math.floor(a.length/2)],a[Math.floor(a.length/2)-1]])):a[Math.floor(a.length/2)];return ue.a.isBigNumber(r)?r:new ue.a(NaN)}}]),t}(h.a),gn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Merge",e.flowControl=!0,e.module="Default",e.description="Consolidate all branches back into a single trunk. The opposite of Fork.",e.inputType="string",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e){return e}}]),t}(h.a),yn=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Microsoft Script Decoder",e.module="Default",e.description="Decodes Microsoft Encoded Script files that have been encoded with Microsoft's custom encoding. These are often VBS (Visual Basic Script) files that are encoded and renamed with a '.vbe' extention or JS (JScript) files renamed with a '.jse' extention.<br><br><b>Sample</b><br><br>Encoded:<br><code>#@~^RQAAAA==-mD~sX|:/TP{~J:+dYbxL~@!F@*@!+@*@!&amp;@*eEI@#@&amp;@#@&amp;.jm.raY 214Wv:zms/obI0xEAAA==^#~@</code><br><br>Decoded:<br><code>var my_msg = &#34;Testing <1><2><3>!&#34;;\n\nVScript.Echo(my_msg);</code>",e.infoURL="https://wikipedia.org/wiki/JScript.Encode",e.inputType="string",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,a){var r=/#@~\^.{6}==(.+).{6}==\^#~@/.exec(e);return r?t._decode(r[1]):""}}],[{key:"_decode",value:function(e){var t=[],a=-1;e=e.replace(/@&/g,String.fromCharCode(10)).replace(/@#/g,String.fromCharCode(13)).replace(/@\*/g,">").replace(/@!/g,"<").replace(/@\$/g,"@");for(var r=0;r<e.length;r++){var n=e.charCodeAt(r),i=e.charAt(r);n<128&&a++,(9===n||n>31&&n<128)&&60!==n&&62!==n&&64!==n&&(i=An[n].charAt(bn[a%64])),t.push(i)}return t.join("")}}]),t}(h.a),An=["","","","","","","","","","Wn{","JLA","\v\v\v","\f\f\f","JLA","","","","","","","","","","","","","","","","","","",".-2","Gu0","zR!","V`)","Bq[","j^8","/I3","&\\=","IbX","A}:","4)5","26e","[ 9","v|\\","rzV","Cs","8kf","9cN","p3E","E+k","hhb","qQY","Ofx","\tv^","b1}","DdJ","#Tm","uCq","JLA","~:`","JLA","^~S","@L@","wEB","J,'","a*H","]tr","\"'u","K71","oD7","NyM",";YR",'L/"',"PoT","g&j","*rG","}jd","t9-","T{ ","+?","-8.",",wL","0g]","nS~","kGl","f4o","5xy","%]t","!0C","d#&","MZv","R[%","cl$","?H+","{U(","xp#",")iA","(.4","sL\t","Y!*","3$D","N?","mPw","U\t;","SVU","|si",":5a","_ac","eKP","FXg","X;Q","1WI",'i"O',"lmF","ZMh","H%|","'(6","\\Fp","=Jn","$2z","yA/","7=_","`_K","QOZ"," B,","6eW"],bn=[0,1,2,0,1,2,1,2,2,1,2,1,0,2,1,2,0,2,1,2,0,0,1,2,2,1,0,2,1,2,2,1,0,0,2,1,2,1,2,0,2,0,0,1,2,0,2,1,0,2,1,2,0,0,1,2,2,0,0,1,2,0,2,1],vn=yn;
/src/build/node/CyberChef.js-170-/**
##############################################
/src/build/node/CyberChef.js-250- * @license Apache-2.0
/src/build/node/CyberChef.js:251: */var Yo=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="MD2",e.module="Crypto",e.description="The MD2 (Message-Digest 2) algorithm is a cryptographic hash function developed by Ronald Rivest in 1989. The algorithm is optimized for 8-bit computers.<br><br>Although MD2 is no longer considered secure, even as of 2014, it remains in use in public key infrastructures as part of certificates generated with MD2 and RSA.",e.infoURL="https://wikipedia.org/wiki/MD2_(cryptography)",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("md2",e)}}]),t}(h.a),jo=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="MD4",e.module="Crypto",e.description="The MD4 (Message-Digest 4) algorithm is a cryptographic hash function developed by Ronald Rivest in 1990. The digest length is 128 bits. The algorithm has influenced later designs, such as the MD5, SHA-1 and RIPEMD algorithms.<br><br>The security of MD4 has been severely compromised.",e.infoURL="https://wikipedia.org/wiki/MD4",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("md4",e)}}]),t}(h.a),qo=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="MD5",e.module="Crypto",e.description="MD5 (Message-Digest 5) is a widely used hash function. It has been used in a variety of security applications and is also commonly used to check the integrity of files.<br><br>However, MD5 is not collision resistant and it isn't suitable for applications like SSL/TLS certificates or digital signatures that rely on this property.",e.infoURL="https://wikipedia.org/wiki/MD5",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("md5",e)}}]),t}(h.a),$o=a(65),es=a.n($o),ts=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="MD6",e.module="Crypto",e.description="The MD6 (Message-Digest 6) algorithm is a cryptographic hash function. It uses a Merkle tree-like structure to allow for immense parallel computation of hashes for very long inputs.",e.infoURL="https://wikipedia.org/wiki/MD6",e.inputType="string",e.outputType="string",e.args=[{name:"Size",type:"number",value:256},{name:"Levels",type:"number",value:64},{name:"Key",type:"string",value:""}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,3),r=a[0],n=a[1],i=a[2];if(r<0||r>512)throw new B.a("Size must be between 0 and 512");if(n<0)throw new B.a("Levels must be greater than 0");return es.a.getHashOfText(e,r,i,n)}}]),t}(h.a),as=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="SHA0",e.module="Crypto",e.description="SHA-0 is a retronym applied to the original version of the 160-bit hash function published in 1993 under the name 'SHA'. It was withdrawn shortly after publication due to an undisclosed 'significant flaw' and replaced by the slightly revised version SHA-1.",e.infoURL="https://wikipedia.org/wiki/SHA-1#SHA-0",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("sha0",e)}}]),t}(h.a),rs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="SHA1",e.module="Crypto",e.description="The SHA (Secure Hash Algorithm) hash functions were designed by the NSA. SHA-1 is the most established of the existing SHA hash functions and it is used in a variety of security applications and protocols.<br><br>However, SHA-1's collision resistance has been weakening as new attacks are discovered or improved.",e.infoURL="https://wikipedia.org/wiki/SHA-1",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("sha1",e)}}]),t}(h.a),ns=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="SHA2",e.module="Crypto",e.description="The SHA-2 (Secure Hash Algorithm 2) hash functions were designed by the NSA. SHA-2 includes significant changes from its predecessor, SHA-1. The SHA-2 family consists of hash functions with digests (hash values) that are 224, 256, 384 or 512 bits: SHA224, SHA256, SHA384, SHA512.<br><br><ul><li>SHA-512 operates on 64-bit words.</li><li>SHA-256 operates on 32-bit words.</li><li>SHA-384 is largely identical to SHA-512 but is truncated to 384 bytes.</li><li>SHA-224 is largely identical to SHA-256 but is truncated to 224 bytes.</li><li>SHA-512/224 and SHA-512/256 are truncated versions of SHA-512, but the initial values are generated using the method described in Federal Information Processing Standards (FIPS) PUB 180-4.</li></ul>",e.infoURL="https://wikipedia.org/wiki/SHA-2",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["512","256","384","224","512/256","512/224"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("sha"+t[0],e)}}]),t}(h.a),is=a(28),os=a.n(is),ss=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="SHA3",e.module="Crypto",e.description="The SHA-3 (Secure Hash Algorithm 3) hash functions were released by NIST on August 5, 2015. Although part of the same series of standards, SHA-3 is internally quite different from the MD5-like structure of SHA-1 and SHA-2.<br><br>SHA-3 is a subset of the broader cryptographic primitive family Keccak designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún.",e.infoURL="https://wikipedia.org/wiki/SHA-3",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["512","384","256","224"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a;switch(parseInt(t[0],10)){case 224:a=os.a.sha3_224;break;case 384:a=os.a.sha3_384;break;case 256:a=os.a.sha3_256;break;case 512:a=os.a.sha3_512;break;default:throw new B.a("Invalid size")}return a(e)}}]),t}(h.a),ls=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Keccak",e.module="Crypto",e.description="The Keccak hash algorithm was designed by Guido Bertoni, Joan Daemen, Michaël Peeters, and Gilles Van Assche, building upon RadioGatún. It was selected as the winner of the SHA-3 design competition.<br><br>This version of the algorithm is Keccak[c=2d] and differs from the SHA-3 specification.",e.infoURL="https://wikipedia.org/wiki/SHA-3",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["512","384","256","224"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a;switch(parseInt(t[0],10)){case 224:a=os.a.keccak224;break;case 384:a=os.a.keccak384;break;case 256:a=os.a.keccak256;break;case 512:a=os.a.keccak512;break;default:throw new B.a("Invalid size")}return a(e)}}]),t}(h.a),us=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Shake",e.module="Crypto",e.description="Shake is an Extendable Output Function (XOF) of the SHA-3 hash algorithm, part of the Keccak family, allowing for variable output length/size.",e.infoURL="https://wikipedia.org/wiki/SHA-3#Instances",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Capacity",type:"option",value:["256","128"]},{name:"Size",type:"number",value:512}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a,r=parseInt(t[0],10),n=t[1];if(n<0)throw new B.a("Size must be greater than 0");switch(r){case 128:a=os.a.shake128;break;case 256:a=os.a.shake256;break;default:throw new B.a("Invalid size")}return a(e,n)}}]),t}(h.a),cs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="RIPEMD",e.module="Crypto",e.description="RIPEMD (RACE Integrity Primitives Evaluation Message Digest) is a family of cryptographic hash functions developed in Leuven, Belgium, by Hans Dobbertin, Antoon Bosselaers and Bart Preneel at the COSIC research group at the Katholieke Universiteit Leuven, and first published in 1996.<br><br>RIPEMD was based upon the design principles used in MD4, and is similar in performance to the more popular SHA-1.<br><br>",e.infoURL="https://wikipedia.org/wiki/RIPEMD",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["320","256","160","128"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("ripemd"+t[0],e)}}]),t}(h.a),ps=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="HAS-160",e.module="Crypto",e.description="HAS-160 is a cryptographic hash function designed for use with the Korean KCDSA digital signature algorithm. It is derived from SHA-1, with assorted changes intended to increase its security. It produces a 160-bit output.<br><br>HAS-160 is used in the same way as SHA-1. First it divides input in blocks of 512 bits each and pads the final block. A digest function updates the intermediate hash value by processing the input blocks in turn.<br><br>The message digest algorithm consists of 80 rounds.",e.infoURL="https://wikipedia.org/wiki/HAS-160",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("has160",e)}}]),t}(h.a),ds=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Whirlpool",e.module="Crypto",e.description="Whirlpool is a cryptographic hash function designed by Vincent Rijmen (co-creator of AES) and Paulo S. L. M. Barreto, who first described it in 2000.<br><br>Several variants exist:<ul><li>Whirlpool-0 is the original version released in 2000.</li><li>Whirlpool-T is the first revision, released in 2001, improving the generation of the s-box.</li><li>Whirlpool is the latest revision, released in 2003, fixing a flaw in the difusion matrix.</li></ul>",e.infoURL="https://wikipedia.org/wiki/Whirlpool_(cryptography)",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Variant",type:"option",value:["Whirlpool","Whirlpool-T","Whirlpool-0"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo(t[0].toLowerCase(),e)}}]),t}(h.a),hs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="SSDEEP",e.module="Crypto",e.description="SSDEEP is a program for computing context triggered piecewise hashes (CTPH). Also called fuzzy hashes, CTPH can match inputs that have homologies. Such inputs have sequences of identical bytes in the same order, although bytes in between these sequences may be different in both content and length.<br><br>SSDEEP hashes are now widely used for simple identification purposes (e.g. the 'Basic Properties' section in VirusTotal). Although 'better' fuzzy hashes are available, SSDEEP is still one of the primary choices because of its speed and being a de facto standard.<br><br>This operation is fundamentally the same as the CTPH operation, however their outputs differ in format.",e.infoURL="https://forensicswiki.org/wiki/Ssdeep",e.inputType="string",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return _o.a.digest(e)}}]),t}(h.a),fs=a(36),ms=a.n(fs),gs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="BLAKE2b",e.module="Hashing",e.description="Performs BLAKE2b hashing on the input.  \n        <br><br> BLAKE2b is a flavour of the BLAKE cryptographic hash function that is optimized for 64-bit platforms and produces digests of any size between 1 and 64 bytes.\n        <br><br> Supports the use of an optional key.",e.infoURL="https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2b_algorithm",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["512","384","256","160","128"]},{name:"Output Encoding",type:"option",value:["Hex","Base64","Raw"]},{name:"Key",type:"toggleString",value:"",toggleValues:["UTF8","Decimal","Base64","Hex","Latin1"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,2),r=a[0],n=a[1],i=f.a.convertToByteArray(t[2].string||"",t[2].option);if(0===i.length)i=null;else if(i.length>64)throw new B.a(["Key cannot be greater than 64 bytes","It is currently "+i.length+" bytes."].join("\n"));switch(e=new Uint8Array(e),n){case"Hex":return ms.a.blake2bHex(e,i,r/8);case"Base64":return Object(Y.c)(ms.a.blake2b(e,i,r/8));case"Raw":return f.a.arrayBufferToStr(ms.a.blake2b(e,i,r/8).buffer);default:return new B.a("Unsupported Output Type")}}}]),t}(h.a),ys=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="BLAKE2s",e.module="Hashing",e.description="Performs BLAKE2s hashing on the input.  \n        <br><br>BLAKE2s is a flavour of the BLAKE cryptographic hash function that is optimized for 8- to 32-bit platforms and produces digests of any size between 1 and 32 bytes.\n        <br><br>Supports the use of an optional key.",e.infoURL="https://wikipedia.org/wiki/BLAKE_(hash_function)#BLAKE2",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Size",type:"option",value:["256","160","128"]},{name:"Output Encoding",type:"option",value:["Hex","Base64","Raw"]},{name:"Key",type:"toggleString",value:"",toggleValues:["UTF8","Decimal","Base64","Hex","Latin1"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,2),r=a[0],n=a[1],i=f.a.convertToByteArray(t[2].string||"",t[2].option);if(0===i.length)i=null;else if(i.length>32)throw new B.a(["Key cannot be greater than 32 bytes","It is currently "+i.length+" bytes."].join("\n"));switch(e=new Uint8Array(e),n){case"Hex":return ms.a.blake2sHex(e,i,r/8);case"Base64":return Object(Y.c)(ms.a.blake2s(e,i,r/8));case"Raw":return f.a.arrayBufferToStr(ms.a.blake2s(e,i,r/8).buffer);default:return new B.a("Unsupported Output Type")}}}]),t}(h.a),As=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Generate all hashes",e.module="Crypto",e.description="Generates all available hashes and checksums for the input.",e.infoURL="https://wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions",e.inputType="ArrayBuffer",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=e,r=f.a.arrayBufferToStr(a,!1),n=new Uint8Array(a);return"MD2:         "+(new Yo).run(a,[])+"\nMD4:         "+(new jo).run(a,[])+"\nMD5:         "+(new qo).run(a,[])+"\nMD6:         "+(new ts).run(r,[])+"\nSHA0:        "+(new as).run(a,[])+"\nSHA1:        "+(new rs).run(a,[])+"\nSHA2 224:    "+(new ns).run(a,["224"])+"\nSHA2 256:    "+(new ns).run(a,["256"])+"\nSHA2 384:    "+(new ns).run(a,["384"])+"\nSHA2 512:    "+(new ns).run(a,["512"])+"\nSHA3 224:    "+(new ss).run(a,["224"])+"\nSHA3 256:    "+(new ss).run(a,["256"])+"\nSHA3 384:    "+(new ss).run(a,["384"])+"\nSHA3 512:    "+(new ss).run(a,["512"])+"\nKeccak 224:  "+(new ls).run(a,["224"])+"\nKeccak 256:  "+(new ls).run(a,["256"])+"\nKeccak 384:  "+(new ls).run(a,["384"])+"\nKeccak 512:  "+(new ls).run(a,["512"])+"\nShake 128:   "+(new us).run(a,["128",256])+"\nShake 256:   "+(new us).run(a,["256",512])+"\nRIPEMD-128:  "+(new cs).run(a,["128"])+"\nRIPEMD-160:  "+(new cs).run(a,["160"])+"\nRIPEMD-256:  "+(new cs).run(a,["256"])+"\nRIPEMD-320:  "+(new cs).run(a,["320"])+"\nHAS-160:     "+(new ps).run(a,[])+"\nWhirlpool-0: "+(new ds).run(a,["Whirlpool-0"])+"\nWhirlpool-T: "+(new ds).run(a,["Whirlpool-T"])+"\nWhirlpool:   "+(new ds).run(a,["Whirlpool"])+"\nBLAKE2b-128: "+(new gs).run(a,["128","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2b-160: "+(new gs).run(a,["160","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2b-256: "+(new gs).run(a,["256","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2b-384: "+(new gs).run(a,["384","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2b-512: "+(new gs).run(a,["512","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2s-128: "+(new ys).run(a,["128","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2s-160: "+(new ys).run(a,["160","Hex",{string:"",option:"UTF8"}])+"\nBLAKE2s-256: "+(new ys).run(a,["256","Hex",{string:"",option:"UTF8"}])+"\nSSDEEP:      "+(new hs).run(r)+"\nCTPH:        "+(new No).run(r)+"\n\nChecksums:\nFletcher-8:  "+(new Qo).run(n,[])+"\nFletcher-16: "+(new Ko).run(n,[])+"\nFletcher-32: "+(new Wo).run(n,[])+"\nFletcher-64: "+(new Xo).run(n,[])+"\nAdler-32:    "+(new Bo).run(n,[])+"\nCRC-16:      "+(new xo).run(r,[])+"\nCRC-32:      "+(new Lo).run(r,[])}}]),t}(h.a),bs=a(66),vs=a.n(bs),Cs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Generate UUID",e.module="Crypto",e.description="Generates an RFC 4122 version 4 compliant Universally Unique Identifier (UUID), also known as a Globally Unique Identifier (GUID).<br><br>A version 4 UUID relies on random numbers, in this case generated using <code>window.crypto</code> if available and falling back to <code>Math.random</code> if not.",e.infoURL="https://wikipedia.org/wiki/Universally_unique_identifier",e.inputType="string",e.outputType="string",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=new Uint32Array(4).map(function(){return vs.a.randomBytes(4).readUInt32BE(0,!0)}),r=0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=a[r>>3]>>r%8*4&15;return r++,("x"===e?t:3&t|8).toString(16)})}}]),t}(h.a),Ss=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="HMAC",e.module="Crypto",e.description="Keyed-Hash Message Authentication Codes (HMAC) are a mechanism for message authentication using cryptographic hash functions.",e.infoURL="https://wikipedia.org/wiki/HMAC",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Key",type:"toggleString",value:"",toggleValues:["Hex","Decimal","Base64","UTF8","Latin1"]},{name:"Hashing function",type:"option",value:["MD2","MD4","MD5","SHA0","SHA1","SHA224","SHA256","SHA384","SHA512","SHA512/224","SHA512/256","RIPEMD128","RIPEMD160","RIPEMD256","RIPEMD320","HAS160","Whirlpool","Whirlpool-0","Whirlpool-T","Snefru"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=f.a.convertToByteString(t[0].string||"",t[0].option),r=t[1].toLowerCase(),n=f.a.arrayBufferToStr(e,!1),i=Zo.a.getHasher(r),o=Zo.a.getHmac(a,i);return o.update(n),Zo.a.encoder.toHex(o.finalize())}}]),t}(h.a),ws=a(40),Ts=a.n(ws),Bs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JWT Decode",e.module="Crypto",e.description="Decodes a JSON Web Token <b>without</b> checking whether the provided secret / private key is valid. Use 'JWT Verify' to check if the signature is valid as well.",e.infoURL="https://wikipedia.org/wiki/JSON_Web_Token",e.inputType="string",e.outputType="JSON",e.args=[],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){try{return Ts.a.decode(e,{json:!0,complete:!0}).payload}catch(e){throw new B.a(e)}}}]),t}(h.a),ks=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JWT Sign",e.module="Crypto",e.description="Signs a JSON object as a JSON Web Token using a provided secret / private key.<br><br>The key should be either the secret for HMAC algorithms or the PEM-encoded private key for RSA and ECDSA.",e.infoURL="https://wikipedia.org/wiki/JSON_Web_Token",e.inputType="JSON",e.outputType="string",e.args=[{name:"Private/Secret Key",type:"text",value:"secret"},{name:"Signing algorithm",type:"option",value:["HS256","HS384","HS512","RS256","RS384","RS512","ES256","ES384","ES512","None"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,2),r=a[0],n=a[1];try{return Ts.a.sign(e,r,{algorithm:"None"===n?"none":n})}catch(e){throw new B.a("Error: Have you entered the key correctly? The key should be either the secret for HMAC algorithms or the PEM-encoded private key for RSA and ECDSA.\n\n".concat(e))}}}]),t}(h.a),Ps=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="JWT Verify",e.module="Crypto",e.description="Verifies that a JSON Web Token is valid and has been signed with the provided secret / private key.<br><br>The key should be either the secret for HMAC algorithms or the PEM-encoded private key for RSA and ECDSA.",e.infoURL="https://wikipedia.org/wiki/JSON_Web_Token",e.inputType="string",e.outputType="JSON",e.args=[{name:"Private/Secret Key",type:"text",value:"secret"}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=I()(t,1)[0];try{var r=Ts.a.verify(e,a,{algorithms:["HS256","HS384","HS512","none"]});if(r.hasOwnProperty("name")&&"JsonWebTokenError"===r.name)throw new B.a(r.message);return r}catch(e){throw new B.a(e)}}}]),t}(h.a),Ds=a(67),Es=a.n(Ds),Ms=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Scrypt",e.module="Crypto",e.description="scrypt is a password-based key derivation function (PBKDF) created by Colin Percival. The algorithm was specifically designed to make it costly to perform large-scale custom hardware attacks by requiring large amounts of memory. In 2016, the scrypt algorithm was published by IETF as RFC 7914.<br><br>Enter the password in the input to generate its hash.",e.infoURL="https://wikipedia.org/wiki/Scrypt",e.inputType="string",e.outputType="string",e.args=[{name:"Salt",type:"toggleString",value:"",toggleValues:["Hex","Base64","UTF8","Latin1"]},{name:"Iterations (N)",type:"number",value:16384},{name:"Memory factor (r)",type:"number",value:8},{name:"Parallelization factor (p)",type:"number",value:1},{name:"Key length",type:"number",value:64}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){var a=Buffer.from(f.a.convertToByteArray(t[0].string||"",t[0].option)),r=t[1],n=t[2],i=t[3],o=t[4];try{return Es()(e,a,r,n,i,o,function(e){"function"==typeof importScripts&&self.sendStatusMessage("Progress: ".concat(e.percent.toFixed(0),"%"))}).toString("hex")}catch(e){throw new B.a("Error: "+e.toString())}}}]),t}(h.a),Rs=function(e){function t(){var e;return n()(this,t),(e=l()(this,c()(t).call(this))).name="Snefru",e.module="Crypto",e.description="Snefru is a cryptographic hash function invented by Ralph Merkle in 1990 while working at Xerox PARC. The function supports 128-bit and 256-bit output. It was named after the Egyptian Pharaoh Sneferu, continuing the tradition of the Khufu and Khafre block ciphers.<br><br>The original design of Snefru was shown to be insecure by Eli Biham and Adi Shamir who were able to use differential cryptanalysis to find hash collisions. The design was then modified by increasing the number of iterations of the main pass of the algorithm from two to eight.",e.infoURL="https://wikipedia.org/wiki/Snefru",e.inputType="ArrayBuffer",e.outputType="string",e.args=[{name:"Rounds",type:"option",value:["8","4","2"]},{name:"Size",type:"option",value:["256","128"]}],e}return d()(t,e),o()(t,[{key:"run",value:function(e,t){return Jo("snefru",e,{rounds:t[0],length:t[1]})}}]),t}(h.a),Fs="undefined"==typeof self?{}:self.OpModules||{};Fs.Crypto={"Adler-32 Checksum":Bo,"Analyse hash":ko,Bcrypt:Eo,"Bcrypt compare":Mo,"Bcrypt parse":Ro,"CRC-16 Checksum":xo,"CRC-32 Checksum":Lo,CTPH:No,"Compare CTPH hashes":Vo,"Compare SSDEEP hashes":Go,"Fletcher-16 Checksum":Ko,"Fletcher-32 Checksum":Wo,"Fletcher-64 Checksum":Xo,"Fletcher-8 Checksum":Qo,"Generate all hashes":As,"Generate UUID":Cs,"HAS-160":ps,HMAC:Ss,"JWT Decode":Bs,"JWT Sign":ks,"JWT Verify":Ps,Keccak:ls,MD2:Yo,MD4:jo,MD5:qo,MD6:ts,RIPEMD:cs,SHA0:as,SHA1:rs,SHA2:ns,SHA3:ss,SSDEEP:hs,Scrypt:Ms,Shake:us,Snefru:Rs,"TCP/IP Checksum":Ln,Whirlpool:ds};var Is=Fs,xs=a(57),Ls=a.n(xs),Us=a(29),Os=a.n(Us),Ns=["Degrees Minutes Seconds","Degrees Decimal Minutes","Decimal Degrees","Geohash","Military Grid Reference System","Ordnance Survey National Grid","Universal Transverse Mercator"],Vs=["Geohash","Military Grid Reference System","Ordnance Survey National Grid","Universal Transverse Mercator"];function Hs(e,t,a,r,n,i,o){var s,l,u,c,p,d,h,f,m,g,y,A=!1;if(o<0&&(o=0),"Auto"===a){if(null===(a=function(e){e=e.trim();var t=[",",";",":"],a=e.match(/[NnEeSsWw]/g);if(null!==a&&a.length>0&&a.length<3){var r=e.split(/[NnEeSsWw]/);if(r.length<=3&&r.length>0){if(""===r[0])return"Direction Preceding";if(""===r[r.length-1])return"Direction Following"}}for(var n=0;n<t.length;n++){var i=t[n];if(e.includes(i)){var o=e.split(i);if(o.length<=3&&o.length>0)return i}}return null}(e)))throw new B.a("Unable to detect the input delimiter automatically.")}else a.includes("Direction")||(a=zs(a));if("Auto"===t&&null===(t=function(e,t){var a,r=new RegExp(/^[0-9]{2}\s?[C-HJ-NP-X]{1}\s?[A-HJ-NP-Z][A-HJ-NP-V]\s?[0-9\s]+/),n=new RegExp(/^[A-HJ-Z]{2}\s+[0-9\s]+$/),i=new RegExp(/^[0123456789BCDEFGHJKMNPQRSTUVWXYZ]+$/),o=new RegExp(/^[0-9]{2}\s?[C-HJ-NP-X]\s[0-9.]+\s?[0-9.]+$/),s=new RegExp(/[°'"]/g);if(e=e.trim(),null!==t&&t.includes("Direction")){var l=e.split(/[NnEeSsWw]/);l.length>1&&(a=""===l[0]?l[1]:l[0])}else if(null!==t&&""!==t)if(e.includes(t)){var u=e.split(t);u.length>1&&(a=""===u[0]?u[1]:u[0])}else a=e;if(!s.test(e)){var c=e.toUpperCase().replace(t,"");if(o.test(c))return"Universal Transverse Mercator";if(r.test(c))return"Military Grid Reference System";if(n.test(c))return"Ordnance Survey National Grid";if(i.test(c))return"Geohash"}if(void 0!==a){var p=_s(a);switch(p.length){case 3:return"Degrees Minutes Seconds";case 2:return"Degrees Decimal Minutes";case 1:return"Decimal Degrees"}}return null}(e,a)))throw new B.a("Unable to detect the input format automatically.");if(n=zs(n),Vs.includes(t))e=e.replace(a,""),A=!0;else{a.includes("Direction")?""===(s=e.split(/[NnEeSsWw]/g))[0]&&(s=s.slice(1)):s=e.split(a);for(var b=0;b<s.length;b++)s[b]=s[b].replace(/[°˝´'"]/g," ");s.length>1&&(A=!0)}switch(t){case"Geohash":d=Ls.a.decode(e.replace(/[^A-Za-z0-9]/g,"")),l=new Os.a.LatLonEllipsoidal(d.latitude,d.longitude);break;case"Military Grid Reference System":l=Os.a.Mgrs.parse(e.replace(/[^A-Za-z0-9]/g,"")).toUtm().toLatLonE();break;case"Ordnance Survey National Grid":h=Os.a.OsGridRef.parse(e.replace(/[^A-Za-z0-9]/g,"")),l=Os.a.OsGridRef.osGridToLatLon(h);break;case"Universal Transverse Mercator":/^[\d]{2}[A-Za-z]/.test(e)&&(e=e.slice(0,2)+" "+e.slice(2)),l=Os.a.Utm.parse(e).toLatLonE();break;case"Degrees Minutes Seconds":if(A){if(f=_s(s[0]),m=_s(s[1]),!(f.length>=3&&m.length>=3))throw new B.a("Invalid co-ordinate format for Degrees Minutes Seconds");g=Gs(f[0],f[1],f[2],10),y=Gs(m[0],m[1],m[2],10),l=new Os.a.LatLonEllipsoidal(g.degrees,y.degrees)}else{if(!((f=_s(s[0])).length>=3))throw new B.a("Invalid co-ordinate format for Degrees Minutes Seconds");g=Gs(f[0],f[1],f[2]),l=new Os.a.LatLonEllipsoidal(g.degrees,g.degrees)}break;case"Degrees Decimal Minutes":if(A){if(f=_s(s[0]),m=_s(s[1]),2!==f.length||2!==m.length)throw new B.a("Invalid co-ordinate format for Degrees Decimal Minutes.");g=Ks(f[0],f[1],10),y=Ks(m[0],m[1],10),l=new Os.a.LatLonEllipsoidal(g.degrees,y.degrees)}else{if(2!==(f=_s(e)).length)throw new B.a("Invalid co-ordinate format for Degrees Decimal Minutes.");g=Ks(f[0],f[1],10),l=new Os.a.LatLonEllipsoidal(g.degrees,g.degrees)}break;case"Decimal Degrees":if(A){if(f=_s(s[0]),m=_s(s[1]),1!==f.length||1!==m.length)throw new B.a("Invalid co-ordinate format for Decimal Degrees.");l=new Os.a.LatLonEllipsoidal(f[0],m[0])}else{if(1!==(f=_s(s[0])).length)throw new B.a("Invalid co-ordinate format for Decimal Degrees.");l=new Os.a.LatLonEllipsoidal(f[0],f[0])}break;default:throw new B.a("Unknown input format '".concat(t,"'"))}if(t.includes("Degrees")){var v=e.toUpperCase().match(/[NESW]/g);v&&v.length>=1&&(("S"===v[0]||"W"===v[0]&&l.lat>0)&&(l.lat=-l.lat),v.length>=2&&("S"===v[1]||"W"===v[1]&&l.lon>0)&&(l.lon=-l.lon))}var C=function(e,t){var a=e.toUpperCase(),r=new RegExp(/[NESW]/g),n=a.match(r);if(n&&n.length<=2&&n.length>=1)return 2===n.length?[n[0],n[1]]:[n[0],""];var i,o=a,s="",l="";if(t.includes("Direction")){var u=a.split(r);u.length>1&&(o=""===u[0]?u[1]:u[0],u.length>2&&""!==u[2]&&(i=u[2]))}else if(a.includes(t)){var c=a.split(t);c.length>=1&&(""!==c[0]&&(o=c[0]),c.length>=2&&""!==c[1]&&(i=c[1]))}o&&(o=parseFloat(o),s=o<0?"S":"N");i&&(i=parseFloat(i),l=i<0?"W":"E");return[s,l]}(l.lat+","+l.lon,","),S=I()(C,2),w=S[0],T=S[1];switch(r){case"Decimal Degrees":g=Ws(l.lat,o),y=Ws(l.lon,o),u=g.string,c=y.string;break;case"Degrees Decimal Minutes":g=Qs(l.lat,o),y=Qs(l.lon,o),u=g.string,c=y.string;break;case"Degrees Minutes Seconds":g=Xs(l.lat,o),y=Xs(l.lon,o),u=g.string,c=y.string;break;case"Geohash":u=Ls.a.encode(l.lat,l.lon,o);break;case"Military Grid Reference System":o%2!=0&&(o+=1),o>10&&(o=10),u=l.toUtm().toMgrs().toString(o);break;case"Ordnance Survey National Grid":if(""===(h=Os.a.OsGridRef.latLonToOsGrid(l)).toString())throw new B.a("Could not convert co-ordinates to OS National Grid. Are the co-ordinates in range?");o%2!=0&&(o+=1),o>10&&(o=10),u=h.toString(o);break;case"Universal Transverse Mercator":u=l.toUtm().toString(o)}if(void 0===u)throw new B.a("Error converting co-ordinates.");if(r.includes("Degrees")){"S"===w&&"None"!==i&&(u=u.replace("-","")),"W"===T&&"None"!==i&&(c=c.replace("-",""));var k="";"Before"===i&&(k+=w+" "),k+=u,"After"===i&&(k+=" "+w),k+=n,A&&("Before"===i&&(k+=T+" "),k+=c,"After"===i&&(k+=" "+T),k+=n),p=k}else p=u+n;return p}function _s(e){var t=[];return e.split(/\s+/).forEach(function(e){(e=e.replace(/[^0-9.-]/g,"")).length>0&&t.push(parseFloat(e))}),t}function Gs(e,t,a,r){var n=Math.abs(e)+t/60+a/3600,i=Js(n,r)+"°";return(Zs(e)||e<0)&&(n=-n,i="-"+i),{degrees:n,string:i}}function Ks(e,t,a){var r=Math.abs(e)+t/60,n=Js(r,a)+"°";return(Zs(e)||e<0)&&(r=-r,n="-"+n),{degrees:r,string:n}}function Ws(e,t){return{degrees:e,string:Js(e,t)+"°"}}function Xs(e,t){var a=Math.abs(e),r=Math.floor(a),n=Math.floor(60*(a-r)),i=Js(3600*(a-r)-60*n,t),o=r+"° "+n+"' "+i+'"';return(Zs(e)||e<0)&&(r=-r,o="-"+o),{degrees:r,minutes:n,seconds:i,string:o}}function Qs(e,t){var a=Math.abs(e),r=Math.floor(a),n=Js(60*(a-r),t),i=r+"° "+n+"'";return(e<0||Zs(e))&&(r=-r,i="-"+i),{degrees:r,minutes:n,string:i}}function zs(e){return{Auto:"Auto",Space:" ","\\n":"\n",Comma:",","Semi-colon":";",Colon:":"}[e]}function Zs(e){return 0===e&&1/e<0}function Js(e,t){return t=Math.pow(10,t),Math.round(e*t)/t}
/src/build/node/CyberChef.js-252-/**
