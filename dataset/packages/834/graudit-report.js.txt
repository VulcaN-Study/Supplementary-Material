/src/dist/config.js-25-        case 'json':
/src/dist/config.js:26:            return JSON.parse(fs_1.readFileSync(filepath, 'utf-8'));
/src/dist/config.js-27-        case 'js':
##############################################
/src/dist/config.js-40-        .option('-o, --overwrite', 'Overwrites existing files')
/src/dist/config.js:41:        .parse(argv);
/src/dist/config.js-42-    var isUsingOldApi = cliFlags.rawArgs.includes('--template') ||
##############################################
/src/dist/generate-and-save.js-41-var file_system_1 = require("./utils/file-system");
/src/dist/generate-and-save.js:42:process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';
/src/dist/generate-and-save.js-43-function generate(config, saveToFile) {
##############################################
/src/dist/init.js-301-    });
/src/dist/init.js:302:    var pkg = JSON.parse(pkgContent);
/src/dist/init.js-303-    var indent = detectIndent(pkgContent).indent;
##############################################
/src/dist/init.js-312-    // read codegen's version
/src/dist/init.js:313:    var version = JSON.parse(fs_1.readFileSync(path_1.resolve(__dirname, '../package.json'), {
/src/dist/init.js-314-        encoding: 'utf-8'
##############################################
/src/dist/init.js-324-        return __generator(this, function (_b) {
/src/dist/init.js:325:            pkg = JSON.parse(fs_1.readFileSync(path_1.resolve(process.cwd(), 'package.json'), {
/src/dist/init.js-326-                encoding: 'utf-8'
##############################################
/src/dist/old-cli-config.js-35-        .option('-o, --out <path>', 'Output file(s) path', String, './')
/src/dist/old-cli-config.js:36:        .option('-r, --require [require]', 'module to preload (option can be repeated)', collect, [])
/src/dist/old-cli-config.js-37-        .option('-ow, --no-overwrite', 'Skip file writing if the output file(s) already exists in path')
##############################################
/src/dist/old-cli-config.js-41-        .arguments('<options> [documents...]')
/src/dist/old-cli-config.js:42:        .parse(args);
/src/dist/old-cli-config.js-43-    return command;
##############################################
/src/dist/old-cli-config.js-164-    if (configPath && typeof configPath === 'string') {
/src/dist/old-cli-config.js:165:        var rawObj = JSON.parse(fs_1.readFileSync(configPath, 'utf-8'));
/src/dist/old-cli-config.js-166-        rootConfig = (rawObj || {}).generatorConfig || {};
