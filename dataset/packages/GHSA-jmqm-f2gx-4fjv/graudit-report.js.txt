/src/check-response.js-84-      try {
/src/check-response.js:85:        parsed = JSON.parse(body.toString('utf8'))
/src/check-response.js-86-      } catch (e) {}
##############################################
/src/README.md-114-
/src/README.md:115:The `jsonPath` argument is a [`JSONStream.parse()`
/src/README.md-116-path](https://github.com/dominictarr/JSONStream#jsonstreamparsepath), and the
##############################################
/src/README.md-183-
/src/README.md:184:See also [`opts.strictSSL`](#opts-strictSSL), [`opts.ca`](#opts-ca) and
/src/README.md-185-[`opts.key`](#opts-key)
##############################################
/src/README.md-569-
/src/README.md:570:##### <a name="opts-strictSSL"></a> `opts.strictSSL`
/src/README.md-571-
##############################################
/src/index.js-78-    const q = typeof opts.query === 'string'
/src/index.js:79:      ? qs.parse(opts.query)
/src/index.js-80-      : opts.query
##############################################
/src/index.js-121-    },
/src/index.js:122:    strictSSL: opts.strictSSL,
/src/index.js-123-    timeout: opts.timeout || 30 * 1000
##############################################
/src/index.js-138-  const opts = { ...defaultOpts, ...opts_ }
/src/index.js:139:  const parser = JSONStream.parse(jsonPath, opts.mapJSON)
/src/index.js-140-  regFetch(uri, opts).then(res =>
##############################################
/src/default-opts.js-9-  timeout: 5 * 60 * 1000, // 5 minutes
/src/default-opts.js:10:  strictSSL: true,
/src/default-opts.js-11-  noProxy: process.env.NOPROXY,
