/src/lib/app.js-10-function portInUse(port, host, callback) {
/src/lib/app.js:11:    var server = require('net').createServer();
/src/lib/app.js-12-
##############################################
/src/lib/makeserver.js-144-        var https = require('https');
/src/lib/makeserver.js:145:        server = https.createServer({
/src/lib/makeserver.js-146-            key: fs.readFileSync(osh.key),
##############################################
/src/lib/controllers/convert.js-30-function parseForm(req, res, callback) {
/src/lib/controllers/convert.js:31:    var form = new formidable.IncomingForm();
/src/lib/controllers/convert.js-32-    form.on('progress', function(bytesReceived, bytesExpected) {
##############################################
/src/lib/controllers/convert.js-39-                try {
/src/lib/controllers/convert.js:40:                    fs.unlink(file.path);
/src/lib/controllers/convert.js-41-                } catch(e) {
##############################################
/src/lib/controllers/convert.js-47-    });
/src/lib/controllers/convert.js:48:    form.parse(req, function(err, fields, files) {
/src/lib/controllers/convert.js-49-        if (fields.input_url !== undefined) {
##############################################
/src/lib/controllers/convert.js-56-            } else {
/src/lib/controllers/convert.js:57:                fs.unlink(files.input_file.path); // we have to delete the upload ourselves.
/src/lib/controllers/convert.js-58-                return tooBigError(req, res);
##############################################
/src/lib/controllers/convert.js-80-        if (fpath) {
/src/lib/controllers/convert.js:81:            fs.unlink(fpath); // clean up the temporary file on disk
/src/lib/controllers/convert.js-82-        }
##############################################
/src/lib/controllers/convert.js-118-        // Read file content embedded directly in POST data
/src/lib/controllers/convert.js:119:        convertStream(fs.createReadStream(fpath), req, res, hint, fpath);
/src/lib/controllers/convert.js-120-    }
##############################################
/src/lib/controllers/proxy.js-120-
/src/lib/controllers/proxy.js:121:        var remoteUrl = url.parse(remoteUrlString);
/src/lib/controllers/proxy.js-122-
/src/lib/controllers/proxy.js-123-        // Copy the query string
/src/lib/controllers/proxy.js:124:        remoteUrl.search = url.parse(req.url).search;
/src/lib/controllers/proxy.js-125-
##############################################
/src/lib/controllers/feedback.js-13-
/src/lib/controllers/feedback.js:14:    var parsedCreateIssueUrl = url.parse(options.issuesUrl, true);
/src/lib/controllers/feedback.js-15-    parsedCreateIssueUrl.query.access_token = options.accessToken;
##############################################
/src/lib/controllers/esri-token-auth.js-54-                } else {
/src/lib/controllers/esri-token-auth.js:55:                    let value = JSON.parse(response.body);
/src/lib/controllers/esri-token-auth.js-56-                    return res.status(200).send(JSON.stringify(value));
##############################################
/src/lib/controllers/esri-token-auth.js-85-    try {
/src/lib/controllers/esri-token-auth.js:86:        return url.format(url.parse(urlString));
/src/lib/controllers/esri-token-auth.js-87-    }
##############################################
/src/lib/controllers/esri-token-auth.js-116-    try {
/src/lib/controllers/esri-token-auth.js:117:        return (url.parse(urlString).protocol === 'https:')
/src/lib/controllers/esri-token-auth.js-118-    }
##############################################
/src/lib/options.js-35-        // Strip comments formatted as lines starting with a #, before parsing as JSON5. #-initial comments are deprecated, will be removed in version 3.
/src/lib/options.js:36:        config = json5.parse(fileContents.replace(/^\s*#.*$/mg,''));
/src/lib/options.js-37-        if (!quiet) {
##############################################
/src/extend.md-23-    //receive the posted object
/src/extend.md:24:    var form = new formidable.IncomingForm();
/src/extend.md:25:    form.parse(req, function(err, fields, files) {
/src/extend.md-26-        //create a layer for NM to display
