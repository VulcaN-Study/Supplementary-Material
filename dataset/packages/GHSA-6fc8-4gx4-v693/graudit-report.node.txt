/src/README.md-195-
/src/README.md:196:const server = new https.createServer({
/src/README.md-197-  cert: fs.readFileSync('/path/to/cert.pem'),
##############################################
/src/README.md-218-
/src/README.md:219:const server = http.createServer();
/src/README.md-220-const wss1 = new WebSocket.Server({ noServer: true });
##############################################
/src/README.md-231-server.on('upgrade', function upgrade(request, socket, head) {
/src/README.md:232:  const pathname = url.parse(request.url).pathname;
/src/README.md-233-
##############################################
/src/lib/websocket.js-483-    //
/src/lib/websocket.js:484:    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);
/src/lib/websocket.js-485-    websocket.url = address;
##############################################
/src/lib/websocket.js-644-      try {
/src/lib/websocket.js:645:        const extensions = extension.parse(
/src/lib/websocket.js-646-          res.headers['sec-websocket-extensions']
##############################################
/src/lib/websocket-server.js-66-    if (options.port != null) {
/src/lib/websocket-server.js:67:      this._server = http.createServer((req, res) => {
/src/lib/websocket-server.js-68-        const body = http.STATUS_CODES[426];
##############################################
/src/lib/websocket-server.js-210-      try {
/src/lib/websocket-server.js:211:        const offers = extension.parse(req.headers['sec-websocket-extensions']);
/src/lib/websocket-server.js-212-
