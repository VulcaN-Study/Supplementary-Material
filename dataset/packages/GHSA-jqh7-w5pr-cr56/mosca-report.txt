<report_mosca>
 <Path>/src/dist/src/verify-request/login-again-if-different-shop.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 7 -              var query, session;

 Line: 11 -                          query = ctx.query, session = ctx.session;

 Line: 12 -                          if (session && query.shop && session.shop !== query.shop) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/create-enable-cookies.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          var query = ctx.query;

 Line: 15 -          var shop = query.shop;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/create-oauth-start.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          var query = ctx.query;

 Line: 11 -          var shop = query.shop;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/create-top-level-redirect.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  var querystring_1 = tslib_1.__importDefault(require("querystring"));

 Line: 7 -          var host = ctx.host, query = ctx.query;

 Line: 8 -          var shop = query.shop;

 Line: 10 -          var queryString = querystring_1.default.stringify(params);

 Line: 13 -              redirectTo: "https://" + host + path + "?" + queryString,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/create-request-storage-access.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          var query = ctx.query;

 Line: 15 -          var shop = query.shop;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/errors.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -      Error["ShopParamMissing"] = "Expected a valid shop query parameter";

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/validate-hmac.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  var querystring_1 = tslib_1.__importDefault(require("querystring"));

 Line: 6 -  function validateHmac(hmac, secret, query) {

 Line: 7 -      var _hmac = query.hmac, _signature = query.signature, map = tslib_1.__rest(query, ["hmac", "signature"]);

 Line: 14 -      var message = querystring_1.default.stringify(orderedMap);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/oauth-query-string.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  var querystring_1 = tslib_1.__importDefault(require("querystring"));

 Line: 23 -      return querystring_1.default.stringify(redirectParams);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/src/auth/create-oauth-callback.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  var querystring_1 = tslib_1.__importDefault(require("querystring"));

 Line: 9 -              var query, cookies, code, hmac, shop, nonce, apiKey, secret, afterAuth, accessTokenQuery, accessTokenResponse, accessTokenData, accessToken;

 Line: 13 -                          query = ctx.query, cookies = ctx.cookies;

 Line: 14 -                          code = query.code, hmac = query.hmac, shop = query.shop, nonce = query.state;

 Line: 23 -                          if (validate_hmac_1.default(hmac, secret, query) === false) {

 Line: 27 -                          accessTokenQuery = querystring_1.default.stringify({

</Result>
</report_mosca>

