/src/dist/src/auth/client/request-storage-access.js-5-    if (prefix === void 0) { prefix = ''; }
/src/dist/src/auth/client/request-storage-access.js:6:    return "(function() {\n      function redirect() {\n        var targetInfo = {\n          myshopifyUrl: \"https://" + shop + "\",\n          hasStorageAccessUrl: \"" + prefix + "/auth/inline?shop=" + shop + "\",\n          doesNotHaveStorageAccessUrl: \"" + prefix + "/auth/enable_cookies?shop=" + shop + "\",\n          appTargetUrl: \"/?shop=" + shop + "\"\n        }\n\n        if (window.top == window.self) {\n          // If the current window is the 'parent', change the URL by setting location.href\n          window.top.location.href = targetInfo.hasStorageAccessUrl;\n        } else {\n          var storageAccessHelper = new StorageAccessHelper(targetInfo);\n          storageAccessHelper.execute();\n        }\n      }\n\n      document.addEventListener(\"DOMContentLoaded\", redirect);\n    })();";
/src/dist/src/auth/client/request-storage-access.js-7-};
##############################################
/src/dist/src/auth/client/itp-helper.d.ts:1:declare const itpHelper = "(function() {\n      function ITPHelper(opts) {\n        this.itpContent = document.getElementById('TopLevelInteractionContent');\n        this.itpAction = document.getElementById('TopLevelInteractionButton');\n        this.redirectUrl = opts.redirectUrl;\n      }\n\n      ITPHelper.prototype.redirect = function() {\n        sessionStorage.setItem('shopify.top_level_interaction', true);\n        window.location.href = this.redirectUrl;\n      }\n\n      ITPHelper.prototype.userAgentIsAffected = function() {\n        return Boolean(document.hasStorageAccess);\n      }\n\n      ITPHelper.prototype.canPartitionCookies = function() {\n        var versionRegEx = /Version\\/12\\.0\\.?\\d? Safari/;\n        return versionRegEx.test(navigator.userAgent);\n      }\n\n      ITPHelper.prototype.setUpContent = function(onClick) {\n        this.itpContent.style.display = 'block';\n        this.itpAction.addEventListener('click', this.redirect.bind(this));\n      }\n\n      ITPHelper.prototype.execute = function() {\n        if (!this.itpContent) {\n          return;\n        }\n\n        if (this.userAgentIsAffected()) {\n          this.setUpContent();\n        } else {\n          this.redirect();\n        }\n      }\n\n      this.ITPHelper = ITPHelper;\n    })(window);";
/src/dist/src/auth/client/itp-helper.d.ts-2-export default itpHelper;
##############################################
/src/dist/src/auth/client/storage-access-helper.js-3-// Copied from https://github.com/Shopify/shopify_app
/src/dist/src/auth/client/storage-access-helper.js:4:var storageAccessHelper = "(function() {\n      var ACCESS_GRANTED_STATUS = 'storage_access_granted';\n      var ACCESS_DENIED_STATUS = 'storage_access_denied';\n\n      function StorageAccessHelper(redirectData) {\n        this.redirectData = redirectData;\n      }\n\n      StorageAccessHelper.prototype.setNormalizedLink = function(storageAccessStatus) {\n        return storageAccessStatus === ACCESS_GRANTED_STATUS ? this.redirectData.hasStorageAccessUrl : this.redirectData.doesNotHaveStorageAccessUrl;\n      }\n\n      StorageAccessHelper.prototype.redirectToAppTLD = function(storageAccessStatus) {\n        var normalizedLink = document.createElement('a');\n\n        normalizedLink.href = this.setNormalizedLink(storageAccessStatus);\n\n        data = JSON.stringify({\n          message: 'Shopify.API.remoteRedirect',\n          data: {\n            location: normalizedLink.href,\n          }\n        });\n        window.parent.postMessage(data, this.redirectData.myshopifyUrl);\n      }\n\n      StorageAccessHelper.prototype.redirectToAppsIndex = function() {\n        window.parent.location.href = this.redirectData.myshopifyUrl + '/admin/apps';\n      }\n\n      StorageAccessHelper.prototype.redirectToAppTargetUrl = function() {\n        window.location.href = this.redirectData.appTargetUrl;\n      }\n\n      StorageAccessHelper.prototype.sameSiteNoneIncompatible = function(ua) {\n        return ua.includes(\"iPhone OS 12_\") || ua.includes(\"iPad; CPU OS 12_\") || //iOS 12\n        (ua.includes(\"UCBrowser/\")\n            ? this.isOlderUcBrowser(ua) //UC Browser < 12.13.2\n            : (ua.includes(\"Chrome/5\") || ua.includes(\"Chrome/6\"))) ||\n        ua.includes(\"Chromium/5\") || ua.includes(\"Chromium/6\") ||\n        (ua.includes(\" OS X 10_14_\") &&\n            ((ua.includes(\"Version/\") && ua.includes(\"Safari\")) || //Safari on MacOS 10.14\n            ua.endsWith(\"(KHTML, like Gecko)\"))); //Web view on MacOS 10.14\n      }\n\n      StorageAccessHelper.prototype.isOlderUcBrowser = function(ua) {\n        var match = ua.match(/UCBrowser\\/(\\d+)\\.(\\d+)\\.(\\d+)\\./);\n        if (!match) return false;\n        var major = parseInt(match[1]);\n        var minor = parseInt(match[2]);\n        var build = parseInt(match[3]);\n        if (major != 12) return major < 12;\n        if (minor != 13) return minor < 13;\n        return build < 2;\n      }\n\n      StorageAccessHelper.prototype.setCookie = function(value) {\n        if(!this.sameSiteNoneIncompatible(navigator.userAgent)) {\n          value += '; secure; SameSite=None'\n        }\n        document.cookie = value;\n      }\n\n      StorageAccessHelper.prototype.grantedStorageAccess = function() {\n        try {\n          sessionStorage.setItem('shopify.granted_storage_access', true);\n          this.setCookie('shopify.granted_storage_access=true');\n          if (!document.cookie) {\n            throw 'Cannot set third-party cookie.'\n          }\n          this.redirectToAppTargetUrl();\n        } catch (error) {\n          console.warn('Third party cookies may be blocked.', error);\n          this.redirectToAppTLD(ACCESS_DENIED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.handleRequestStorageAccess = function() {\n        return document.requestStorageAccess().then(this.grantedStorageAccess.bind(this), this.redirectToAppsIndex.bind(this, ACCESS_DENIED_STATUS));\n      }\n\n      StorageAccessHelper.prototype.setupRequestStorageAccess = function() {\n        var requestContent = document.getElementById('RequestStorageAccess');\n        var requestButton = document.getElementById('TriggerAllowCookiesPrompt');\n\n        requestButton.addEventListener('click', this.handleRequestStorageAccess.bind(this));\n        requestContent.style.display = 'block';\n      }\n\n      StorageAccessHelper.prototype.handleHasStorageAccess = function() {\n        if (sessionStorage.getItem('shopify.granted_storage_access')) {\n          // If app was classified by ITP and used Storage Access API to acquire access\n          this.redirectToAppTargetUrl();\n        } else {\n          // If app has not been classified by ITP and still has storage access\n          this.redirectToAppTLD(ACCESS_GRANTED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.handleGetStorageAccess = function() {\n        if (sessionStorage.getItem('shopify.top_level_interaction')) {\n          // If merchant has been redirected to interact with TLD (requirement for prompting request to gain storage access)\n          this.setupRequestStorageAccess();\n        } else {\n          // If merchant has not been redirected to interact with TLD (requirement for prompting request to gain storage access)\n          this.redirectToAppTLD(ACCESS_DENIED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.manageStorageAccess = function() {\n        return document.hasStorageAccess().then(function(hasAccess) {\n          if (hasAccess) {\n            this.handleHasStorageAccess();\n          } else {\n            this.handleGetStorageAccess();\n          }\n        }.bind(this));\n      }\n\n      StorageAccessHelper.prototype.execute = function() {\n        if (ITPHelper.prototype.userAgentIsAffected()) {\n          this.manageStorageAccess();\n        } else {\n          this.grantedStorageAccess();\n        }\n      }\n\n      /* ITP 2.0 solution: handles cookie partitioning */\n      StorageAccessHelper.prototype.setUpHelper = function() {\n        return new ITPHelper({redirectUrl: window.shopOrigin + \"/admin/apps/\" + window.apiKey + window.returnTo});\n      }\n\n      StorageAccessHelper.prototype.setCookieAndRedirect = function() {\n        this.setCookie('shopify.cookies_persist=true');\n        var helper = this.setUpHelper();\n        helper.redirect();\n      }\n\n      StorageAccessHelper.prototype.setUpCookiePartitioning = function() {\n        var itpContent = document.getElementById('CookiePartitionPrompt');\n        itpContent.style.display = 'block';\n\n        // var button = document.getElementById('AcceptCookies');\n        // button.addEventListener('click', this.setCookieAndRedirect.bind(this));\n      }\n\n      this.StorageAccessHelper = StorageAccessHelper;\n    })(window);";
/src/dist/src/auth/client/storage-access-helper.js-5-exports.default = storageAccessHelper;
##############################################
/src/dist/src/auth/client/storage-access-helper.d.ts:1:declare const storageAccessHelper = "(function() {\n      var ACCESS_GRANTED_STATUS = 'storage_access_granted';\n      var ACCESS_DENIED_STATUS = 'storage_access_denied';\n\n      function StorageAccessHelper(redirectData) {\n        this.redirectData = redirectData;\n      }\n\n      StorageAccessHelper.prototype.setNormalizedLink = function(storageAccessStatus) {\n        return storageAccessStatus === ACCESS_GRANTED_STATUS ? this.redirectData.hasStorageAccessUrl : this.redirectData.doesNotHaveStorageAccessUrl;\n      }\n\n      StorageAccessHelper.prototype.redirectToAppTLD = function(storageAccessStatus) {\n        var normalizedLink = document.createElement('a');\n\n        normalizedLink.href = this.setNormalizedLink(storageAccessStatus);\n\n        data = JSON.stringify({\n          message: 'Shopify.API.remoteRedirect',\n          data: {\n            location: normalizedLink.href,\n          }\n        });\n        window.parent.postMessage(data, this.redirectData.myshopifyUrl);\n      }\n\n      StorageAccessHelper.prototype.redirectToAppsIndex = function() {\n        window.parent.location.href = this.redirectData.myshopifyUrl + '/admin/apps';\n      }\n\n      StorageAccessHelper.prototype.redirectToAppTargetUrl = function() {\n        window.location.href = this.redirectData.appTargetUrl;\n      }\n\n      StorageAccessHelper.prototype.sameSiteNoneIncompatible = function(ua) {\n        return ua.includes(\"iPhone OS 12_\") || ua.includes(\"iPad; CPU OS 12_\") || //iOS 12\n        (ua.includes(\"UCBrowser/\")\n            ? this.isOlderUcBrowser(ua) //UC Browser < 12.13.2\n            : (ua.includes(\"Chrome/5\") || ua.includes(\"Chrome/6\"))) ||\n        ua.includes(\"Chromium/5\") || ua.includes(\"Chromium/6\") ||\n        (ua.includes(\" OS X 10_14_\") &&\n            ((ua.includes(\"Version/\") && ua.includes(\"Safari\")) || //Safari on MacOS 10.14\n            ua.endsWith(\"(KHTML, like Gecko)\"))); //Web view on MacOS 10.14\n      }\n\n      StorageAccessHelper.prototype.isOlderUcBrowser = function(ua) {\n        var match = ua.match(/UCBrowser\\/(\\d+)\\.(\\d+)\\.(\\d+)\\./);\n        if (!match) return false;\n        var major = parseInt(match[1]);\n        var minor = parseInt(match[2]);\n        var build = parseInt(match[3]);\n        if (major != 12) return major < 12;\n        if (minor != 13) return minor < 13;\n        return build < 2;\n      }\n\n      StorageAccessHelper.prototype.setCookie = function(value) {\n        if(!this.sameSiteNoneIncompatible(navigator.userAgent)) {\n          value += '; secure; SameSite=None'\n        }\n        document.cookie = value;\n      }\n\n      StorageAccessHelper.prototype.grantedStorageAccess = function() {\n        try {\n          sessionStorage.setItem('shopify.granted_storage_access', true);\n          this.setCookie('shopify.granted_storage_access=true');\n          if (!document.cookie) {\n            throw 'Cannot set third-party cookie.'\n          }\n          this.redirectToAppTargetUrl();\n        } catch (error) {\n          console.warn('Third party cookies may be blocked.', error);\n          this.redirectToAppTLD(ACCESS_DENIED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.handleRequestStorageAccess = function() {\n        return document.requestStorageAccess().then(this.grantedStorageAccess.bind(this), this.redirectToAppsIndex.bind(this, ACCESS_DENIED_STATUS));\n      }\n\n      StorageAccessHelper.prototype.setupRequestStorageAccess = function() {\n        var requestContent = document.getElementById('RequestStorageAccess');\n        var requestButton = document.getElementById('TriggerAllowCookiesPrompt');\n\n        requestButton.addEventListener('click', this.handleRequestStorageAccess.bind(this));\n        requestContent.style.display = 'block';\n      }\n\n      StorageAccessHelper.prototype.handleHasStorageAccess = function() {\n        if (sessionStorage.getItem('shopify.granted_storage_access')) {\n          // If app was classified by ITP and used Storage Access API to acquire access\n          this.redirectToAppTargetUrl();\n        } else {\n          // If app has not been classified by ITP and still has storage access\n          this.redirectToAppTLD(ACCESS_GRANTED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.handleGetStorageAccess = function() {\n        if (sessionStorage.getItem('shopify.top_level_interaction')) {\n          // If merchant has been redirected to interact with TLD (requirement for prompting request to gain storage access)\n          this.setupRequestStorageAccess();\n        } else {\n          // If merchant has not been redirected to interact with TLD (requirement for prompting request to gain storage access)\n          this.redirectToAppTLD(ACCESS_DENIED_STATUS);\n        }\n      }\n\n      StorageAccessHelper.prototype.manageStorageAccess = function() {\n        return document.hasStorageAccess().then(function(hasAccess) {\n          if (hasAccess) {\n            this.handleHasStorageAccess();\n          } else {\n            this.handleGetStorageAccess();\n          }\n        }.bind(this));\n      }\n\n      StorageAccessHelper.prototype.execute = function() {\n        if (ITPHelper.prototype.userAgentIsAffected()) {\n          this.manageStorageAccess();\n        } else {\n          this.grantedStorageAccess();\n        }\n      }\n\n      /* ITP 2.0 solution: handles cookie partitioning */\n      StorageAccessHelper.prototype.setUpHelper = function() {\n        return new ITPHelper({redirectUrl: window.shopOrigin + \"/admin/apps/\" + window.apiKey + window.returnTo});\n      }\n\n      StorageAccessHelper.prototype.setCookieAndRedirect = function() {\n        this.setCookie('shopify.cookies_persist=true');\n        var helper = this.setUpHelper();\n        helper.redirect();\n      }\n\n      StorageAccessHelper.prototype.setUpCookiePartitioning = function() {\n        var itpContent = document.getElementById('CookiePartitionPrompt');\n        itpContent.style.display = 'block';\n\n        // var button = document.getElementById('AcceptCookies');\n        // button.addEventListener('click', this.setCookieAndRedirect.bind(this));\n      }\n\n      this.StorageAccessHelper = StorageAccessHelper;\n    })(window);";
/src/dist/src/auth/client/storage-access-helper.d.ts-2-export default storageAccessHelper;
##############################################
/src/dist/src/auth/client/itp-helper.js-3-// Copied from https://github.com/Shopify/shopify_app
/src/dist/src/auth/client/itp-helper.js:4:var itpHelper = "(function() {\n      function ITPHelper(opts) {\n        this.itpContent = document.getElementById('TopLevelInteractionContent');\n        this.itpAction = document.getElementById('TopLevelInteractionButton');\n        this.redirectUrl = opts.redirectUrl;\n      }\n\n      ITPHelper.prototype.redirect = function() {\n        sessionStorage.setItem('shopify.top_level_interaction', true);\n        window.location.href = this.redirectUrl;\n      }\n\n      ITPHelper.prototype.userAgentIsAffected = function() {\n        return Boolean(document.hasStorageAccess);\n      }\n\n      ITPHelper.prototype.canPartitionCookies = function() {\n        var versionRegEx = /Version\\/12\\.0\\.?\\d? Safari/;\n        return versionRegEx.test(navigator.userAgent);\n      }\n\n      ITPHelper.prototype.setUpContent = function(onClick) {\n        this.itpContent.style.display = 'block';\n        this.itpAction.addEventListener('click', this.redirect.bind(this));\n      }\n\n      ITPHelper.prototype.execute = function() {\n        if (!this.itpContent) {\n          return;\n        }\n\n        if (this.userAgentIsAffected()) {\n          this.setUpContent();\n        } else {\n          this.redirect();\n        }\n      }\n\n      this.ITPHelper = ITPHelper;\n    })(window);";
/src/dist/src/auth/client/itp-helper.js-5-exports.default = itpHelper;
##############################################
/src/dist/src/auth/redirection-page.js-4-    var origin = _a.origin, redirectTo = _a.redirectTo, apiKey = _a.apiKey;
/src/dist/src/auth/redirection-page.js:5:    return "\n    <script src=\"https://unpkg.com/@shopify/app-bridge@^1\"></script> <script type=\"text/javascript\">\n      document.addEventListener('DOMContentLoaded', function() {\n        if (window.top === window.self) {\n          // If the current window is the 'parent', change the URL by setting location.href\n          window.location.href = '" + redirectTo + "';\n        } else {\n          // If the current window is the 'child', change the parent's URL with postMessage\n          var AppBridge = window['app-bridge'];\n          var createApp = AppBridge.default;\n          var Redirect = AppBridge.actions.Redirect;\n          var app = createApp({\n            apiKey: '" + apiKey + "',\n            shopOrigin: '" + origin + "',\n          });\n          var redirect = Redirect.create(app);\n          redirect.dispatch(Redirect.Action.REMOTE, '" + redirectTo + "');\n        }\n      });\n    </script>\n  ";
/src/dist/src/auth/redirection-page.js-6-}
