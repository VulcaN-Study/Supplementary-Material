<report_mosca>
 <Path>/src/dist/chartkick.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 11 -  r][1])]));return"datetime"===e?i.sort(y):"number"===e&&i.sort(m),i}function bt(t,e){var n,r,a;for(n=0;n<t.length;n++)for(a=l(t[n].data),r=0;r<a.length;r++)if(!e(a[r][0]))return!1;return!0}function xt(t,e,n){var r,a=t.options,o=t.rawData;for(!i(o)||"object"!=typeof o[0]||i(o[0])?(o=[{name:a.label,data:o}],t.hideLegend=!0):t.hideLegend=!1,t.xtype=e||(a.discrete?"string":function(t,e){return bt(t,u)?"number":!e&&bt(t,p)?"datetime":"string"}(o,n)),o=function(t){var e,n,r=[];for(e=0;e<t.length;e++){var a={};for(n in t[e])t[e].hasOwnProperty(n)&&(a[n]=t[e][n]);r.push(a)}return r}(o),r=0;r<o.length;r++)o[r].data=vt(l(o[r].data),t.xtype);return o}function Mt(t){var e,n=l(t.rawData);for(e=0;e<n.length;e++)n[e]=[f(n[e][0]),$(n[e][1])];return n}function wt(t,e,n){var r;if("string"==typeof t&&(r=t,!(t=document.getElementById(t))))throw new Error("No element with id "+r);this.element=t,this.options=q(Ct.options,n||{}),this.dataSource=e,ft(Ct.charts[t.id]=this,e),this.options.refresh&&this.startRefresh()}wt.prototype.getElement=function(){return this.element},wt.prototype.getDataSource=function(){return this.dataSource},wt.prototype.getData=function(){return this.data},wt.prototype.getOptions=function(){return this.options},wt.prototype.getChartObject=function(){return this.chart},wt.prototype.getAdapter=function(){return this.adapter},wt.prototype.updateData=function(t,e){this.dataSource=t,e&&this.__updateOptions(e),ft(this,t)},wt.prototype.setOptions=function(t){this.__updateOptions(t),this.redraw()},wt.prototype.redraw=function(){ft(this,this.rawData)},wt.prototype.refreshData=function(){if("string"==typeof this.dataSource){var t=-1===this.dataSource.indexOf("?")?"?":"&";ft(this,this.dataSource+t+"_="+(new Date).getTime())}else"function"==typeof this.dataSource&&ft(this,this.dataSource)},wt.prototype.startRefresh=function(){var t=this,e=this.options.refresh;if(e&&"string"!=typeof this.dataSource&&"function"!=typeof this.dataSource)throw new Error("Data source must be a URL or callback for refresh");if(!this.intervalId){if(!e)throw new Error("No refresh interval");this.intervalId=setInter</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/chartkick.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2013 -          this.intervalId = setInterval( function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/chartkick.esm.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2007 -        this.intervalId = setInterval( function () {

</Result>
</report_mosca>

