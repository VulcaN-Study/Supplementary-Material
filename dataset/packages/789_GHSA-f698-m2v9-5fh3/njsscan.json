{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 3
        },
        "extra": {
          "line": "# Unix-style newlines with a newline ending every file",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.editorconfig",
        "start": {
          "col": 1,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 11
        },
        "extra": {
          "line": "coverage/",
          "message": "Lexical error: end of file in comment"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 11
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 18,
          "line": 6
        },
        "extra": {
          "line": "- [Felix Geisend\u00f6rfer](https://github.com/felixge)",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/CONTRIBUTORS",
        "start": {
          "col": 17,
          "line": 6
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This file describes how to build node-opencv into a runnable linux container with all dependencies installed",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/Dockerfile",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 3,
          "line": 15
        },
        "extra": {
          "line": "\t@echo \"Tagging release $(VERSION)\"",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/Makefile",
        "start": {
          "col": 2,
          "line": 15
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This is a dockerfile to test the build on ubuntu 12.04",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/test/Dockerfile-ubuntu-12-04",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "# This is a dockerfile to test the build on ubuntu 14.04",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/test/Dockerfile-ubuntu-14-04",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 3,
          "line": 5
        },
        "extra": {
          "line": "\t# Using Ubuntu Trusty (14.04) for now",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/vagrant/Vagrantfile",
        "start": {
          "col": 2,
          "line": 5
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/test/unit.js",
          "match_lines": [
            291,
            291
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "    return Math.round(Math.random() * 255);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
