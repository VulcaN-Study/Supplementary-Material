/src/examples/method-passing/app.js-39-      name: 'Choose a nice MySQL connector',
/src/examples/method-passing/app.js:40:      deadline: new Date(Date.parse("Jul 8, 2100")),
/src/examples/method-passing/app.js-41-      importance: 10
##############################################
/src/examples/method-passing/app.js-44-      name: 'Build the rest',
/src/examples/method-passing/app.js:45:      deadline: new Date(Date.parse("Jul 8, 2005")),
/src/examples/method-passing/app.js-46-      importance: 90
##############################################
/src/spec-jasmine/sqlite/dao-factory.spec.js-34-          Helpers.async(function(done) {
/src/spec-jasmine/sqlite/dao-factory.spec.js:35:            require("fs").unlink(__dirname + '/test.sqlite', done)
/src/spec-jasmine/sqlite/dao-factory.spec.js-36-          })
##############################################
/src/bin/sequelize-13-  , packageJsonPath  = __dirname + '/../package.json'
/src/bin/sequelize:14:  , packageJson      = JSON.parse(fs.readFileSync(packageJsonPath).toString())
/src/bin/sequelize-15-  , configFile       = configPath + '/config.json'
##############################################
/src/bin/sequelize-61-  try {
/src/bin/sequelize:62:    config = JSON.parse(config)
/src/bin/sequelize-63-  } catch (e) {
##############################################
/src/bin/sequelize-80-  .option('-c, --create-migration [migration-name]', 'Creates a new migration.')
/src/bin/sequelize:81:  .parse(process.argv)
/src/bin/sequelize-82-
##############################################
/src/spec/dao.spec.js-475-      var user = this.User.build({ username: 'test.user', age: 99, isAdmin: true })
/src/spec/dao.spec.js:476:      expect(JSON.parse(JSON.stringify(user))).toEqual({ username: 'test.user', age: 99, isAdmin: true, id: null })
/src/spec/dao.spec.js-477-    })
##############################################
/src/spec/dao.spec.js-486-              expect(_user.projects).toBeDefined()
/src/spec/dao.spec.js:487:              expect(JSON.parse(JSON.stringify(_user)).projects).toBeDefined()
/src/spec/dao.spec.js-488-
##############################################
/src/spec/dao.spec.js-492-                expect(_project.lovelyUser).toBeDefined()
/src/spec/dao.spec.js:493:                expect(JSON.parse(JSON.stringify(_project)).lovelyUser).toBeDefined()
/src/spec/dao.spec.js-494-
##############################################
/src/lib/sequelize.js-51-      options = username || {}
/src/lib/sequelize.js:52:      urlParts = url.parse(arguments[0])
/src/lib/sequelize.js-53-      database = urlParts.path.replace(/^\//,  '')
