/src/third_party/closure/goog/caja/string/html/htmlparser.js-32- *   var parser = new goog.string.html.HtmlParser();
/src/third_party/closure/goog/caja/string/html/htmlparser.js:33: *   parser.parse(handler, '<html><a href="google.com">link found!</a></html>');
/src/third_party/closure/goog/caja/string/html/htmlparser.js-34- * </pre>
##############################################
/src/closure/bin/build/source.py-124-  try:
/src/closure/bin/build/source.py:125:    fileobj = codecs.open(path, encoding='utf-8-sig')
/src/closure/bin/build/source.py-126-    return fileobj.read()
##############################################
/src/closure/bin/build/closurebuilder.py-203-  if options.output_file:
/src/closure/bin/build/closurebuilder.py:204:    out = io.open(options.output_file, 'wb')
/src/closure/bin/build/closurebuilder.py-205-  else:
##############################################
/src/closure/goog/editor/seamlessfield.js-649-    if (goog.editor.node.isStandardsMode(iframe.ownerDocument)) {
/src/closure/goog/editor/seamlessfield.js:650:      doc.open();
/src/closure/goog/editor/seamlessfield.js-651-      var emptyHtml = goog.html.SafeHtml.concat(
##############################################
/src/closure/goog/editor/plugins/linkbubble.js-452-goog.editor.plugins.LinkBubble.prototype.testLink = function(opt_event) {
/src/closure/goog/editor/plugins/linkbubble.js:453:  goog.window.open(
/src/closure/goog/editor/plugins/linkbubble.js-454-      this.getTestLinkAction_(),
##############################################
/src/closure/goog/editor/icontent.js-266-  var doc = goog.dom.getFrameContentDocument(iframe);
/src/closure/goog/editor/icontent.js:267:  doc.open();
/src/closure/goog/editor/icontent.js-268-  doc.write(html);
##############################################
/src/closure/goog/editor/field.js-2069-        e.ctrlKey) {
/src/closure/goog/editor/field.js:2070:      this.originalDomHelper.getWindow().open(targetElement.href);
/src/closure/goog/editor/field.js-2071-    }
##############################################
/src/closure/goog/fx/dom.js-656-      computedBgColor != 'rgba(0, 0, 0, 0)') {
/src/closure/goog/fx/dom.js:657:    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex);
/src/closure/goog/fx/dom.js-658-  } else {
##############################################
/src/closure/goog/format/emailaddress.js-290-goog.format.EmailAddress.isValidAddress = function(str) {
/src/closure/goog/format/emailaddress.js:291:  return goog.format.EmailAddress.parse(str).isValid();
/src/closure/goog/format/emailaddress.js-292-};
##############################################
/src/closure/goog/format/jsonprettyprinter.js-121-    // Try to coerce a string into a JSON object.
/src/closure/goog/format/jsonprettyprinter.js:122:    json = JSON.parse(json);
/src/closure/goog/format/jsonprettyprinter.js-123-  }
##############################################
/src/closure/goog/format/internationalizedemailaddress.js-188-  }
/src/closure/goog/format/internationalizedemailaddress.js:189:  return goog.format.InternationalizedEmailAddress.parse(str).isValid();
/src/closure/goog/format/internationalizedemailaddress.js-190-};
##############################################
/src/closure/goog/ui/editor/linkdialog.js-929-    };
/src/closure/goog/ui/editor/linkdialog.js:930:    goog.window.open(url, openOptions, win);
/src/closure/goog/ui/editor/linkdialog.js-931-  }
##############################################
/src/closure/goog/ui/hsvpalette.js-195-  try {
/src/closure/goog/ui/hsvpalette.js:196:    parsed = goog.color.parse(this.inputElement.value).hex;
/src/closure/goog/ui/hsvpalette.js-197-  } catch (e) {
##############################################
/src/closure/goog/ui/hsvpalette.js-229-goog.ui.HsvPalette.prototype.setColorInternal = function(color) {
/src/closure/goog/ui/hsvpalette.js:230:  var rgbHex = goog.color.parse(color).hex;
/src/closure/goog/ui/hsvpalette.js-231-  var rgbArray = goog.color.hexToRgb(rgbHex);
##############################################
/src/closure/goog/ui/hsvapalette.js-292-goog.ui.HsvaPalette.parseColorRgbaHex_ = function(color) {
/src/closure/goog/ui/hsvapalette.js:293:  var hex = goog.color.alpha.parse(color).hex;
/src/closure/goog/ui/hsvapalette.js-294-  return [
##############################################
/src/closure/goog/ui/ac/remotearraymatcher.js-199-    try {
/src/closure/goog/ui/ac/remotearraymatcher.js:200:      matches = JSON.parse(responseText);
/src/closure/goog/ui/ac/remotearraymatcher.js-201-    } catch (exception) {
##############################################
/src/closure/goog/ui/customcolorpalette.js-125-  try {
/src/closure/goog/ui/customcolorpalette.js:126:    color = goog.color.parse(response).hex;
/src/closure/goog/ui/customcolorpalette.js-127-  } catch (er) {
##############################################
/src/closure/goog/ui/colormenubuttonrenderer.js-123-    hexColor = strValue && goog.color.isValidColor(strValue) ?
/src/closure/goog/ui/colormenubuttonrenderer.js:124:        goog.color.parse(strValue).hex :
/src/closure/goog/ui/colormenubuttonrenderer.js-125-        null;
##############################################
/src/closure/goog/ui/colorpalette.js-173-    try {
/src/closure/goog/ui/colorpalette.js:174:      return goog.color.parse(color).hex;
/src/closure/goog/ui/colorpalette.js-175-    } catch (ex) {
##############################################
/src/closure/goog/dom/fontsizemonitor.js-95-    var doc = resizeTarget.document;
/src/closure/goog/dom/fontsizemonitor.js:96:    doc.open();
/src/closure/goog/dom/fontsizemonitor.js-97-    doc.close();
##############################################
/src/closure/goog/dom/iframe.js-155-  var doc = goog.dom.getFrameContentDocument(iframe);
/src/closure/goog/dom/iframe.js:156:  doc.open();
/src/closure/goog/dom/iframe.js-157-  goog.dom.safe.documentWrite(doc, content);
##############################################
/src/closure/goog/dom/safe.js-697- * which is a safe alternative to
/src/closure/goog/dom/safe.js:698: *   window.open(url);
/src/closure/goog/dom/safe.js-699- * The latter can result in XSS vulnerabilities if redirectUrl is a
##############################################
/src/closure/goog/dom/safe.js-702- * @param {string|!goog.html.SafeUrl} url The URL to open.
/src/closure/goog/dom/safe.js:703: * @param {Window=} opt_openerWin Window of which to call the .open() method.
/src/closure/goog/dom/safe.js-704- *     Defaults to the global window.
/src/closure/goog/dom/safe.js-705- * @param {!goog.string.Const=} opt_name Name of the window to open in. Can be
/src/closure/goog/dom/safe.js:706: *     _top, etc as allowed by window.open().
/src/closure/goog/dom/safe.js-707- * @param {string=} opt_specs Comma-separated list of specifications, same as
/src/closure/goog/dom/safe.js:708: *     in window.open().
/src/closure/goog/dom/safe.js-709- * @param {boolean=} opt_replace Whether to replace the current entry in browser
/src/closure/goog/dom/safe.js:710: *     history, same as in window.open().
/src/closure/goog/dom/safe.js-711- * @return {Window} Window the url was opened in.
##############################################
/src/closure/goog/dom/safe.js-722-  var win = opt_openerWin || window;
/src/closure/goog/dom/safe.js:723:  return win.open(
/src/closure/goog/dom/safe.js-724-      goog.html.SafeUrl.unwrap(safeUrl),
##############################################
/src/closure/goog/db/db.js-129-  var d = new goog.async.Deferred();
/src/closure/goog/db/db.js:130:  var openRequest = opt_version ? goog.db.indexedDb_.open(name, opt_version) :
/src/closure/goog/db/db.js:131:                                  goog.db.indexedDb_.open(name);
/src/closure/goog/db/db.js-132-  openRequest.onsuccess = function(ev) {
##############################################
/src/closure/goog/json/nativejsonprocessor.js-71-goog.json.NativeJsonProcessor.prototype.parse = function(s) {
/src/closure/goog/json/nativejsonprocessor.js:72:  return goog.global['JSON'].parse(s, this.reviver_);
/src/closure/goog/json/nativejsonprocessor.js-73-};
##############################################
/src/closure/goog/json/hybrid.js-65-    try {
/src/closure/goog/json/hybrid.js:66:      var obj = goog.global.JSON.parse(jsonString);
/src/closure/goog/json/hybrid.js-67-      goog.asserts.assert(typeof obj == 'object');
##############################################
/src/closure/goog/json/json_perf.js-54-
/src/closure/goog/json/json_perf.js:55:  table.run(function() { var o = JSON.parse(s); }, 'Parse using JSON.parse');
/src/closure/goog/json/json_perf.js-56-
/src/closure/goog/json/json_perf.js-57-  table.run(function() {
/src/closure/goog/json/json_perf.js:58:    var o = goog.json.parse(s);
/src/closure/goog/json/json_perf.js-59-  }, 'Parse using goog.json.parse');
##############################################
/src/closure/goog/history/history.js-774-
/src/closure/goog/history/history.js:775:      doc.open('text/html', opt_replace ? 'replace' : undefined);
/src/closure/goog/history/history.js-776-      var iframeSourceHtml = goog.html.SafeHtml.concat(
##############################################
/src/closure/goog/labs/pubsub/broadcastpubsub.js-136-
/src/closure/goog/labs/pubsub/broadcastpubsub.js:137:  var data = JSON.parse(browserEvent.newValue);
/src/closure/goog/labs/pubsub/broadcastpubsub.js-138-  var args = goog.isObject(data) && data['args'];
##############################################
/src/closure/goog/labs/net/webchannel/wirev8.js-150-WireV8.prototype.decodeMessage = function(messageText) {
/src/closure/goog/labs/net/webchannel/wirev8.js:151:  var response = this.parser_.parse(messageText);
/src/closure/goog/labs/net/webchannel/wirev8.js-152-  goog.asserts.assert(goog.isArray(response));  // throw exception
##############################################
/src/closure/goog/labs/net/webchannel/webchanneldebug.js-203-  try {
/src/closure/goog/labs/net/webchannel/webchanneldebug.js:204:    var responseArray = JSON.parse(responseText);
/src/closure/goog/labs/net/webchannel/webchanneldebug.js-205-    if (responseArray) {
##############################################
/src/closure/goog/labs/net/webchannel/webchannelbase.js-2160-    hostPrefix, path, opt_overridePort) {
/src/closure/goog/labs/net/webchannel/webchannelbase.js:2161:  var uri = goog.Uri.parse(path);
/src/closure/goog/labs/net/webchannel/webchannelbase.js-2162-  var uriAbsolute = (uri.getDomain() != '');
##############################################
/src/closure/goog/labs/net/xhr.js-277-    try {
/src/closure/goog/labs/net/xhr.js:278:      request.open(method, url, true);
/src/closure/goog/labs/net/xhr.js-279-    } catch (e) {
##############################################
/src/closure/goog/labs/net/xhr.js-412-  }
/src/closure/goog/labs/net/xhr.js:413:  return /** @type {!Object} */ (JSON.parse(prefixStrippedResult));
/src/closure/goog/labs/net/xhr.js-414-};
##############################################
/src/closure/goog/net/websocket.js-30- *  try {
/src/closure/goog/net/websocket.js:31: *    ws.open('ws://127.0.0.1:4200');
/src/closure/goog/net/websocket.js-32- *  } catch (e) {
##############################################
/src/closure/goog/net/crossdomainrpc.js-451-  var requestFrameDoc = goog.dom.getFrameContentDocument(requestFrame);
/src/closure/goog/net/crossdomainrpc.js:452:  requestFrameDoc.open();
/src/closure/goog/net/crossdomainrpc.js-453-  goog.dom.safe.documentWrite(requestFrameDoc, requestFrameContentHtml);
##############################################
/src/closure/goog/net/crossdomainrpc.js-554-    this.responseTextIsJson_ = params.get('isDataJson') == 'true';
/src/closure/goog/net/crossdomainrpc.js:555:    this.responseHeaders = /** @type {?Object} */ (JSON.parse(
/src/closure/goog/net/crossdomainrpc.js-556-        /** @type {string} */ (params.get('headers'))));
##############################################
/src/closure/goog/net/crossdomainrpc.js-630-  return this.responseTextIsJson_ ?
/src/closure/goog/net/crossdomainrpc.js:631:      /** @type {?Object} */ (JSON.parse(this.responseText)) :
/src/closure/goog/net/crossdomainrpc.js-632-      undefined;
##############################################
/src/closure/goog/net/mockiframeio.js-249-goog.net.MockIFrameIo.prototype.getResponseJson = function() {
/src/closure/goog/net/mockiframeio.js:250:  return /** @type {!Object} */ (JSON.parse(this.lastContent_));
/src/closure/goog/net/mockiframeio.js-251-};
##############################################
/src/closure/goog/net/browsertestchannel.js-451-    try {
/src/closure/goog/net/browsertestchannel.js:452:      var respArray = this.parser_.parse(responseText);
/src/closure/goog/net/browsertestchannel.js-453-    } catch (e) {
##############################################
/src/closure/goog/net/streams/base64pbstreamparser.js-101-    var rawBytes = this.base64Decoder_.decode(input);
/src/closure/goog/net/streams/base64pbstreamparser.js:102:    result = (rawBytes === null) ? null : this.pbParser_.parse(rawBytes);
/src/closure/goog/net/streams/base64pbstreamparser.js-103-  } catch (e) {
##############################################
/src/closure/goog/net/streams/xhrstreamreader.js-382-    try {
/src/closure/goog/net/streams/xhrstreamreader.js:383:      var messages = this.parser_.parse(newData);
/src/closure/goog/net/streams/xhrstreamreader.js-384-      if (messages != null) {
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-160-      case State.MESSAGES: {
/src/closure/goog/net/streams/pbjsonstreamparser.js:161:        var messages = parser.jsonStreamParser_.parse(input.substring(pos));
/src/closure/goog/net/streams/pbjsonstreamparser.js-162-        addResultMessages(messages);
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-180-          // Feed a dummy "[" to match the ending "]".
/src/closure/goog/net/streams/pbjsonstreamparser.js:181:          parser.jsonStreamParser_.parse('[');
/src/closure/goog/net/streams/pbjsonstreamparser.js-182-          pos += (input[pos] === ',' ? 1 : 5);
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-191-      case State.STATUS: {
/src/closure/goog/net/streams/pbjsonstreamparser.js:192:        var status = parser.jsonStreamParser_.parse(input.substring(pos));
/src/closure/goog/net/streams/pbjsonstreamparser.js-193-        addResultStatus(status);
##############################################
/src/closure/goog/net/streams/jsonstreamparser.js-721-      parser.result_.push(
/src/closure/goog/net/streams/jsonstreamparser.js:722:          goog.asserts.assertInstanceof(JSON.parse(opt_data), Object));
/src/closure/goog/net/streams/jsonstreamparser.js-723-    }
##############################################
/src/closure/goog/net/channelrequest.js-950-
/src/closure/goog/net/channelrequest.js:951:  this.trident_.open();
/src/closure/goog/net/channelrequest.js-952-  goog.dom.safe.documentWrite(
##############################################
/src/closure/goog/net/corsxmlhttpfactory.js-139-  }
/src/closure/goog/net/corsxmlhttpfactory.js:140:  this.xdr_.open(method, url);
/src/closure/goog/net/corsxmlhttpfactory.js-141-};
##############################################
/src/closure/goog/net/xhrio.js-32- * The error event may also be called before completed and
/src/closure/goog/net/xhrio.js:33: * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.
/src/closure/goog/net/xhrio.js-34- *
##############################################
/src/closure/goog/net/xhrio.js-553-    this.inOpen_ = true;
/src/closure/goog/net/xhrio.js:554:    this.xhr_.open(method, String(url), true);  // Always async!
/src/closure/goog/net/xhrio.js-555-    this.inOpen_ = false;
##############################################
/src/closure/goog/net/xhrio.js-1176-
/src/closure/goog/net/xhrio.js:1177:  return goog.json.hybrid.parse(responseText);
/src/closure/goog/net/xhrio.js-1178-};
##############################################
/src/closure/goog/net/channeldebug.js-221-  try {
/src/closure/goog/net/channeldebug.js:222:    var responseArray = JSON.parse(responseText);
/src/closure/goog/net/channeldebug.js-223-    if (responseArray) {
##############################################
/src/closure/goog/net/iframeio.js-721- * JSON.parse or for responses that are not valid JSON (e.g. containing NaN).
/src/closure/goog/net/iframeio.js:722: * Use JSON.parse(this.getResponseText()) in the other cases.
/src/closure/goog/net/iframeio.js-723- * @return {Object} The parsed content.
##############################################
/src/closure/goog/net/iframeio.js-725-goog.net.IframeIo.prototype.getResponseJson = function() {
/src/closure/goog/net/iframeio.js:726:  return goog.json.parse(this.lastContent_);
/src/closure/goog/net/iframeio.js-727-};
##############################################
/src/closure/goog/net/browserchannel.js-1806-      try {
/src/closure/goog/net/browserchannel.js:1807:        response = this.parser_.parse(responseText);
/src/closure/goog/net/browserchannel.js-1808-      } catch (ex) {
##############################################
/src/closure/goog/net/browserchannel.js-1827-    if (!goog.string.isEmptyOrWhitespace(responseText)) {
/src/closure/goog/net/browserchannel.js:1828:      var response = this.parser_.parse(responseText);
/src/closure/goog/net/browserchannel.js-1829-      goog.asserts.assert(goog.isArray(response));
##############################################
/src/closure/goog/net/browserchannel.js-2341-    hostPrefix, path, opt_overridePort) {
/src/closure/goog/net/browserchannel.js:2342:  var uri = goog.Uri.parse(path);
/src/closure/goog/net/browserchannel.js-2343-  var uriAbsolute = (uri.getDomain() != '');
##############################################
/src/closure/goog/base.js-1233-      var xhr = new goog.global['XMLHttpRequest']();
/src/closure/goog/base.js:1234:      xhr.open('get', src, false);
/src/closure/goog/base.js-1235-      xhr.send();
##############################################
/src/closure/goog/transpile.js-241-Xd(Z5b(b));Fac(a.a,b)}function ypb(a,b){Wpb();ZEc(Ppb,b.n)&&oyc(a.b,b)}function Skb(a,b){return Wuc(b,a.g+"_const"+_Rc)}function NJb(a,b){return!!a.b&&a.b.a.a.c<=b.b.c}function dmb(a){return!a.j?a.b:dmb(a.j)+"."+a.b}function k1(a){return a.b==(vcb(),tcb)||a.b==scb}function TJb(a,b,c){return Lac(new Zbc(b,c),a.s)}function $Pb(a,b){return new bQb(hQb(a.a,qp(b)))}function JB(a,b){return b<a.e.length&&a.e[b]!=-1}function pWb(a,b){a.d.a=$E(_W,jNc,1,0,5,1);a.f=b}function BVb(a,b,c){CVb.call(this,a,b,c,
/src/closure/goog/transpile.js:242:0,false)}function Nzb(){Nsb.call(this,"lateConvertEs6")}function yzb(){Nsb.call(this,"es6ConvertSuper")}function azb(){Nsb.call(this,"Es6RewriteClass")}function mzb(){Nsb.call(this,"RewritePolyfills")}function zc(){vc.call(this,"CharMatcher.none()")}function Shc(){Shc=v$;Rhc=new $wnd.RegExp("\\s")}function l5b(){l5b=v$;k5b=$wnd.JSON.parse(o5b())}function ftc(){ftc=v$;etc=$E(LW,jNc,189,128,0,1)}function buc(){buc=v$;auc=$E(UW,jNc,136,256,0,1)}function nuc(){nuc=v$;muc=$E(XW,jNc,159,256,0,1)}function V0(a,
/src/closure/goog/transpile.js-243-b,c){l0(a,(mRb(),cRb),c);U0(a,b,c)}function _zc(a,b,c){DMc(b,a.length);Yzc(a,0,b,c)}function vlc(a,b){!a.j&&(a.j=new jzc);azc(a.j,b)}function knc(a,b){inc(a,b,b.ji(new wvc,false).a)}function o6b(a,b){Xd(Y5b(b));return new Zbc(a,b)}function onc(a){a=a.Li();return!!a.Pi()||kic(a)}function iFc(a){a.b=a.a;gFc(a);return a.c.b[a.b]}function OGc(a){a.a.b=a.b;a.b.a=a.a;a.a=a.b=null}function yu(a){var b;b=Qb(a.b);a.a=false;return b}function oOb(a,b,c,d){var e;e=X1b(c,d);a.Uh(b,e)}function G1b(a){throw UZ(new A1b(a.b.b,
##############################################
/src/closure/goog/transpile.js-1023-tHb=new pdb("JSC_DUPLICATE_REQUIRE",i3,new Vvc("''{0}'' required more than once."))}function ATb(a,b){var c,d;if(dVb(a,(aZb(),zYb)))return HTb(a);else{d=new WVb(fWb(a.g,0).d.b);d.b=b;d.a=a.b.d&&ZEc(VEc(tYb,bF(YE(tS,1),pNc,18,0,[sYb,rYb])),fWb(a.g,0).e)?aTb(a).e:null;d.c=!!SSb(a,HYb);return cVb(a,0,KXb)&&Huc(fWb(a.g,0).a,oPc)&&(nVb(a,1)||fWb(a.g,1).e==hYb)?ZTb(a,d):cVb(a,0,KXb)&&Huc(fWb(a.g,0).a,"set")&&(nVb(a,1)||fWb(a.g,1).e==hYb)?JUb(a,d):cVb(a,0,KXb)&&Huc(fWb(a.g,0).a,IPc)&&(c=fWb(a.g,1).d.b.b>
/src/closure/goog/transpile.js:1024:fWb(a.g,0).d.a.b,!(c||cVb(a,1,zYb)||cVb(a,1,kXb)||cVb(a,1,xXb)))&&(nVb(a,1)||fWb(a.g,1).e==hYb||cVb(a,1,DYb)&&(nVb(a,2)||fWb(a.g,2).e==hYb))?sTb(a,d):CTb(a,d)}}function RD(b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;c=new PD;f=null;try{f=$wnd.JSON.parse(b)}catch(a){a=TZ(a);if(QF(a,44)){d=a;throw UZ(new SD("JSON parse exception: "+d));}else throw UZ(a);}q=f;OD(c,q.version);JD(c,q.file);c.c=-1;KD(c,q.mappings);if(q.sections!=null){l=(Cn(),new ps);for(n=q.sections,o=0,p=n.length;o<p;++o){m=n[o];ns(l,QD(m))}MD(c,
/src/closure/goog/transpile.js-1025-Kn(l.a))}else c.f=null;ND(c,q.sources);LD(c,q.names);e=new CGc;k=$wnd.Object.keys(q);for(h=k,i=0,j=h.length;i<j;++i){g=h[i];Huc(g.substr(0,2),"x_")&&zGc(e,g,q[g])}ID(c,(IAc(),new ACc(e)));return new HD(c.i,c.c,c.b,c.d,c.g,c.e,c.f,c.a)}function qhb(a,b){var c,d,e,f,g,h,i,j,k,l,m,n;Kd(b.n==(Mhc(),Rgc)||b.n==Nec);n=KRc+a.b++;if(Rqb(b.g)){i=b.g;c=i.c?i.c.i:null;d=I5b((l=(ae(Luc(n,dvc(46))==-1,HOc,n),Cac(),new hec(Dgc,n)),l),Ghc);Wbc(d,b);xbc(i,b,d);h=K5b((m=x5b(b,(k=(ae(Luc(n,dvc(46))==-1,HOc,n),new hec(Dgc,
##############################################
/src/closure/goog/storage/encryptedstorage.js-185-  try {
/src/closure/goog/storage/encryptedstorage.js:186:    wrapper[goog.storage.RichStorage.DATA_KEY] = JSON.parse(json);
/src/closure/goog/storage/encryptedstorage.js-187-  } catch (e) {
##############################################
/src/closure/goog/storage/storage.js-84-  try {
/src/closure/goog/storage/storage.js:85:    return JSON.parse(json);
/src/closure/goog/storage/storage.js-86-  } catch (e) {
##############################################
/src/closure/goog/testing/net/mockiframeio.js-250-goog.testing.net.MockIFrameIo.prototype.getResponseJson = function() {
/src/closure/goog/testing/net/mockiframeio.js:251:  return /** @type {!Object} */ (JSON.parse(this.lastContent_));
/src/closure/goog/testing/net/mockiframeio.js-252-};
##############################################
/src/closure/goog/testing/net/xhrio.js-821-
/src/closure/goog/testing/net/xhrio.js:822:  return /** @type {!Object} */ (JSON.parse(responseText));
/src/closure/goog/testing/net/xhrio.js-823-};
##############################################
/src/closure/goog/datasource/jsxmlhttpdatasource.js-176-    try {
/src/closure/goog/datasource/jsxmlhttpdatasource.js:177:      var jsonObj = /** @type {!Object} */ (JSON.parse(text));
/src/closure/goog/datasource/jsxmlhttpdatasource.js-178-      this.extendWith(jsonObj);
##############################################
/src/closure/goog/messaging/abstractchannel.js-188-    try {
/src/closure/goog/messaging/abstractchannel.js:189:      return /** @type {!Object} */ (JSON.parse(payload));
/src/closure/goog/messaging/abstractchannel.js-190-    } catch (err) {
##############################################
/src/closure/goog/messaging/portchannel.js-281-    try {
/src/closure/goog/messaging/portchannel.js:282:      data = JSON.parse(data);
/src/closure/goog/messaging/portchannel.js-283-    } catch (error) {
##############################################
/src/closure/goog/uri/uri.js-49- * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part
/src/closure/goog/uri/uri.js:50: * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the
/src/closure/goog/uri/uri.js-51- * decoded path, <code>/foo bar</code>.
##############################################
/src/closure/goog/uri/uri.js-55- * will not be auto-decoded. For example:
/src/closure/goog/uri/uri.js:56: * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will
/src/closure/goog/uri/uri.js-57- * return <code>relative/path%2fto/resource</code>.
##############################################
/src/closure/goog/uri/uri.js-63- * All setters return <code>this</code> and so may be chained, a la
/src/closure/goog/uri/uri.js:64: * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.
/src/closure/goog/uri/uri.js-65- *
##############################################
/src/closure/goog/uri/uri.js-603- *
/src/closure/goog/uri/uri.js:604: * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])
/src/closure/goog/uri/uri.js-605- * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>
##############################################
/src/closure/goog/uri/uri.js-843-  if (!(base instanceof goog.Uri)) {
/src/closure/goog/uri/uri.js:844:    base = goog.Uri.parse(base);
/src/closure/goog/uri/uri.js-845-  }
##############################################
/src/closure/goog/uri/uri.js-847-  if (!(rel instanceof goog.Uri)) {
/src/closure/goog/uri/uri.js:848:    rel = goog.Uri.parse(rel);
/src/closure/goog/uri/uri.js-849-  }
##############################################
/src/closure/goog/proto2/textformatserializer.js-81-  var parser = new goog.proto2.TextFormatSerializer.Parser();
/src/closure/goog/proto2/textformatserializer.js:82:  if (!parser.parse(message, textData, this.ignoreMissingFields_)) {
/src/closure/goog/proto2/textformatserializer.js-83-    return parser.getError();
##############################################
/src/closure/goog/proto2/textformatserializer.js-1042-
/src/closure/goog/proto2/textformatserializer.js:1043:  var stringValue = JSON.parse(/** @type {string} */ (value)).toString();
/src/closure/goog/proto2/textformatserializer.js-1044-  while (this.lookingAtType_(types.STRING)) {
/src/closure/goog/proto2/textformatserializer.js-1045-    value = this.consumeToken_(types.STRING);
/src/closure/goog/proto2/textformatserializer.js:1046:    stringValue += JSON.parse(/** @type {string} */ (value)).toString();
/src/closure/goog/proto2/textformatserializer.js-1047-  }
##############################################
/src/closure/goog/debug/logrecordserializer.js-72-  return goog.debug.logRecordSerializer.reconstitute_(
/src/closure/goog/debug/logrecordserializer.js:73:      /** @type {!Object} */ (JSON.parse(s)));
/src/closure/goog/debug/logrecordserializer.js-74-};
##############################################
/src/closure/goog/debug/debugwindow.js-429-  this.winOpening_ = true;
/src/closure/goog/debug/debugwindow.js:430:  this.win = window.open(
/src/closure/goog/debug/debugwindow.js-431-      '', this.getWindowName_(), 'width=' + w + ',height=' + h +
##############################################
/src/closure/goog/debug/debugwindow.js-490-
/src/closure/goog/debug/debugwindow.js:491:  this.win.document.open();
/src/closure/goog/debug/debugwindow.js-492-
##############################################
/src/closure/goog/debug/fancywindow.js-118-  var doc = this.win.document;
/src/closure/goog/debug/fancywindow.js:119:  doc.open();
/src/closure/goog/debug/fancywindow.js-120-  goog.dom.safe.documentWrite(doc, this.getHtml_());
##############################################
/src/closure/goog/async/nexttick.js-167-      var doc = win.document;
/src/closure/goog/async/nexttick.js:168:      doc.open();
/src/closure/goog/async/nexttick.js-169-      doc.write('');
##############################################
/src/closure/goog/window/window.js-195-    // strings here for target.
/src/closure/goog/window/window.js:196:    newWin = parentWin.open('', target, optionString);
/src/closure/goog/window/window.js-197-
##############################################
/src/closure/goog/window/window.js-238-  } else {
/src/closure/goog/window/window.js:239:    newWin = parentWin.open(
/src/closure/goog/window/window.js-240-        goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);
/src/closure/goog/window/window.js:241:    // Passing in 'noopener' into the 'windowFeatures' param of window.open(...)
/src/closure/goog/window/window.js-242-    // will yield a feature-deprived browser. This is an known issue, tracked
##############################################
/src/closure/goog/window/window.js-305-  return /** @type {?Window} */ (
/src/closure/goog/window/window.js:306:      goog.window.open(url, opt_options, opt_parentWin));
/src/closure/goog/window/window.js-307-};
##############################################
/src/closure/goog/window/window.js-342-
/src/closure/goog/window/window.js:343:  var newWin = goog.window.open(linkRef, opt_options);
/src/closure/goog/window/window.js-344-  if (!newWin) {
