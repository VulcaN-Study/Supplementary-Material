/src/examples/long_desc.js-17-
/src/examples/long_desc.js:18:cli.parse({
/src/examples/long_desc.js-19-    foo: ['f', long_desc]
##############################################
/src/examples/command.js-4-
/src/examples/command.js:5://The second (optional) argument of cli.parse() is a command list 
/src/examples/command.js-6-//Type `./command.js --help` for usage info
##############################################
/src/examples/command.js-13-
/src/examples/command.js:14:cli.parse(null, ['install', 'test', 'edit', 'remove', 'uninstall', 'ls']);
/src/examples/command.js-15-
##############################################
/src/examples/echo.js-11-
/src/examples/echo.js:12:cli.parse({
/src/examples/echo.js-13-    newline:   ['n', 'Do not output the trailing newline'],
##############################################
/src/examples/sort.js-4-
/src/examples/sort.js:5:var options = cli.parse({
/src/examples/sort.js-6-    numeric: ['n', 'Compare using a numeric sort'],
##############################################
/src/examples/static.js-4-
/src/examples/static.js:5:cli.parse({
/src/examples/static.js-6-    log:   ['l', 'Enable logging'],
##############################################
/src/examples/static.js-21-    
/src/examples/static.js:22:    server = this.createServer(middleware).listen(options.port);
/src/examples/static.js-23-    
##############################################
/src/README.md-30-```javascript
/src/README.md:31:var cli = require('cli'), options = cli.parse();
/src/README.md-32-
##############################################
/src/README.md-48-
/src/README.md:49:cli.parse({
/src/README.md-50-    log:   ['l', 'Enable logging'],
##############################################
/src/README.md-65-
/src/README.md:66:    server = this.createServer(middleware).listen(options.port);
/src/README.md-67-
##############################################
/src/README.md-93-```javascript
/src/README.md:94:cli.parse({
/src/README.md-95-	file: [ 'f', 'A file to process', 'file', temp.log ],          // -f, --file FILE   A file to process
##############################################
/src/cli.js-513-    var parse_packagejson = function (path) {
/src/cli.js:514:        var packagejson = JSON.parse(cli.native.fs.readFileSync(path, 'utf8'));
/src/cli.js-515-        cli.version = packagejson.version;
##############################################
/src/cli.js-902-        try {
/src/cli.js:903:            file = cli.native.fs.createReadStream(file);
/src/cli.js-904-            file.on('error', cli.fatal);
##############################################
/src/cli.js-1027-        try {
/src/cli.js:1028:            cli.native.fs.createReadStream(log_file, {encoding: 'utf8'}).pipe(process.stdout);
/src/cli.js-1029-        } catch (e) {
##############################################
/src/cli.js-1070- *
/src/cli.js:1071: *     cli.createServer(middleware).listen(port);
/src/cli.js-1072- *
##############################################
/src/cli.js-1106-    });
/src/cli.js:1107:    return cli.native.http.createServer(handle);
/src/cli.js-1108-};
