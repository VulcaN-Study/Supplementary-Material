/src/examples/server/broadcast.js-5-
/src/examples/server/broadcast.js:6:mqtt.createServer(function(client) {
/src/examples/server/broadcast.js-7-  var self = this;
##############################################
/src/examples/server/orig.js-3-  
/src/examples/server/orig.js:4:mqtt.createServer(function(client) {
/src/examples/server/orig.js-5-  var self = this;
##############################################
/src/examples/server/redis.js-3-
/src/examples/server/redis.js:4:mqtt.createServer(function(err, client) {
/src/examples/server/redis.js-5-  client.p = redis.createClient(null, null, {no_ready_check: true});
##############################################
/src/README.md-136-
/src/README.md:137:mqtt.createServer(function(client) {
/src/README.md-138-  var self = this;
##############################################
/src/lib/mqtt.js-32-
/src/lib/mqtt.js:33:  brokerUrl = url.parse(brokerUrl, true);
/src/lib/mqtt.js-34-
##############################################
/src/test/client.js-21- */
/src/test/client.js:22:var server = mqtt.createServer(function (client) {
/src/test/client.js-23-
##############################################
/src/test/helpers/server_process.js:1:var server = require('../../lib/mqtt').createServer(function (client) {
/src/test/helpers/server_process.js-2-  client.on('connect', function () {
##############################################
/src/test/helpers/server.js-3-module.exports.init_server = function (PORT) {
/src/test/helpers/server.js:4:  var server = mqtt.createServer(function (client) {
/src/test/helpers/server.js-5-    /*var i, events = ['connect', 'publish', 'pubrel', 'subscribe', 'disconnect'];
##############################################
/src/test/mqtt.js-149-    it('should return an MqttServer', function() {
/src/test/mqtt.js:150:      var s = mqtt.createServer();
/src/test/mqtt.js-151-
