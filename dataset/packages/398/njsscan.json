{
  "errors": [],
  "nodejs": {
    "generic_path_traversal": {
      "files": [
        {
          "file_path": "/src/static-server.js",
          "match_lines": [
            6,
            37
          ],
          "match_position": [
            3,
            17
          ],
          "match_string": "  var urlObj = url.parse(req.url, true, false);\n\n  fs.readFile(ROOT_DIR + urlObj.pathname, function (err,data) {\n\n    if(urlObj.pathname.indexOf(\"getcity\") != -1) {\n\n        // Execute the REST service\n\n        console.log(\"In REST Service.\");\n\n        fs.readFile(ROOT_DIR + '/cities.dat.txt', function(err, data) {\n\n            if(err) {throw err;}\n\n            console.log(urlObj.query);\n\n            var regEx = new RegExp(\"^\" + urlObj.query[\"q\"]);\n\n            console.log(regEx);\n\n            cities = data.toString().split(\"\\n\");\n\n            var result = [];\n\n            cities.forEach(function(elem) {\n\n                if(elem.search(regEx) != -1) {\n\n                    console.log(elem);\n\n                    result.push({city:elem});\n\n                }\n\n            });\n\n            console.log(JSON.stringify(result));\n\n            res.writeHead(200);\n\n            res.end(JSON.stringify(result));\n\n        });\n\n    }\n\n    else {\n\n        // Serve static files\n\n        if (err) {\n\n          res.writeHead(404);\n\n          res.end(JSON.stringify(err));\n\n          return;\n\n        }\n\n    res.writeHead(200);\n\n    res.end(data);"
        }
      ],
      "metadata": {
        "cwe": "CWE-23: Relative Path Traversal",
        "description": "Untrusted user input in readFile()/readFileSync() can endup in Directory Traversal Attacks.",
        "owasp": "A5: Broken Access Control",
        "severity": "ERROR"
      }
    },
    "regex_injection_dos": {
      "files": [
        {
          "file_path": "/src/static-server.js",
          "match_lines": [
            6,
            37
          ],
          "match_position": [
            3,
            17
          ],
          "match_string": "  var urlObj = url.parse(req.url, true, false);\n\n  fs.readFile(ROOT_DIR + urlObj.pathname, function (err,data) {\n\n    if(urlObj.pathname.indexOf(\"getcity\") != -1) {\n\n        // Execute the REST service\n\n        console.log(\"In REST Service.\");\n\n        fs.readFile(ROOT_DIR + '/cities.dat.txt', function(err, data) {\n\n            if(err) {throw err;}\n\n            console.log(urlObj.query);\n\n            var regEx = new RegExp(\"^\" + urlObj.query[\"q\"]);\n\n            console.log(regEx);\n\n            cities = data.toString().split(\"\\n\");\n\n            var result = [];\n\n            cities.forEach(function(elem) {\n\n                if(elem.search(regEx) != -1) {\n\n                    console.log(elem);\n\n                    result.push({city:elem});\n\n                }\n\n            });\n\n            console.log(JSON.stringify(result));\n\n            res.writeHead(200);\n\n            res.end(JSON.stringify(result));\n\n        });\n\n    }\n\n    else {\n\n        // Serve static files\n\n        if (err) {\n\n          res.writeHead(404);\n\n          res.end(JSON.stringify(err));\n\n          return;\n\n        }\n\n    res.writeHead(200);\n\n    res.end(data);"
        }
      ],
      "metadata": {
        "cwe": "CWE-400: Uncontrolled Resource Consumption",
        "description": "User controlled data in RegExp() can make the application vulnerable to layer 7 DoS.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  },
  "templates": {}
}
