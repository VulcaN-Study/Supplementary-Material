/src/build.js-267-              script = script.replace('stock/', '');
/src/build.js:268:              fs.readFile(fullURL, 'utf8', (err, data) => {
/src/build.js-269-                handleScript(err, data);
##############################################
/src/build.js-296-
/src/build.js:297:        fs.writeFile(
/src/build.js-298-            __dirname + '/phantom/' + out + '.html',
##############################################
/src/bin/cli.js-167-        var old = options;
/src/bin/cli.js:168:        options = JSON.parse(fs.readFileSync(options.fromFile, 'utf8'));
/src/bin/cli.js-169-
##############################################
/src/bin/cli.js-227-        try {
/src/bin/cli.js:228:            options.resources = JSON.parse(
/src/bin/cli.js-229-                fs.readFileSync('resources.json', 'utf8')
##############################################
/src/tests/http/side-by-side.js-44-
/src/tests/http/side-by-side.js:45:        fs.readFile(__dirname + '/../testcharts/' + file, function (err, data) {
/src/tests/http/side-by-side.js-46-            if (err) return console.log(err);
##############################################
/src/tests/http/side-by-side.js-88-                            if (i === 1 && type !== 'svg' && type !== 'pdf') {
/src/tests/http/side-by-side.js:89:                                fs.readFile('tmp/' + file + '.' + i + '.' + type, function (err, res) {
/src/tests/http/side-by-side.js-90-                                    if (err) return console.log(err);
/src/tests/http/side-by-side.js:91:                                    fs.writeFile('tmp/' + file + '.' + i + '.' + type, Buffer.from(res.toString(), 'base64'), function (err) {
/src/tests/http/side-by-side.js-92-                                        if (err) return console.log(err);
##############################################
/src/lib/logger.js-135-        function doFileLog() {
/src/lib/logger.js:136:            fs.appendFile(
/src/lib/logger.js-137-                logPath + logName,
##############################################
/src/lib/chart.js-99-        try {
/src/lib/chart.js:100:            exportOptions.resources = JSON.parse(exportOptions.resources);
/src/lib/chart.js-101-        } catch (e) {
##############################################
/src/lib/chart.js-179-    {
/src/lib/chart.js:180:        fs.readFile(exportOptions.callback, function (err, data) {
/src/lib/chart.js-181-            if (err) {
##############################################
/src/lib/chart.js-245-            exportOptions, 
/src/lib/chart.js:246:            JSON.parse(
/src/lib/chart.js-247-                exportOptions.instr.
##############################################
/src/lib/chart.js-280-        
/src/lib/chart.js:281:        return fs.readFile(exportOptions.infile, function (err, data) {
/src/lib/chart.js-282-            if (err) return log(0, 'error loading input file:', err);
##############################################
/src/lib/server.js-85-app.use(cors());
/src/lib/server.js:86:app.use(formData.parse({
/src/lib/server.js-87-    maxFieldsSize: '50mb'
##############################################
/src/lib/server.js-162-        if (filename) {
/src/lib/server.js:163:            fs.unlink(filename, function (err) {
/src/lib/server.js-164-                if (err) return log(1, 'error when deleting temporary file:', err);
##############################################
/src/lib/server.js-269-            //need to convert to using pipes, this is silly.
/src/lib/server.js:270:            fs.readFile(info.filename, function (err, data) {
/src/lib/server.js-271-                if (err) {
##############################################
/src/lib/server.js-305-    start: function (port, sslPort, sslPath, fn, sslOnly, newTmpDir, host) {
/src/lib/server.js:306:        var httpServer = http.createServer(app),
/src/lib/server.js-307-            httpsServer
##############################################
/src/lib/server.js-349-
/src/lib/server.js:350:            fs.readFile(sslPath + 'server.key', function (err, skey) {
/src/lib/server.js-351-                if (err) return handleSSLLoadError(err);
/src/lib/server.js:352:                fs.readFile(sslPath + 'server.crt', function (err, cert) {
/src/lib/server.js-353-                    if (err) return handleSSLLoadError(err);
/src/lib/server.js:354:                    httpsServer = https.createServer({
/src/lib/server.js-355-                        key: skey,
##############################################
/src/lib/phantompool.js-211-        try {
/src/lib/phantompool.js:212:            worker.incoming = JSON.parse(worker.incoming + '\n');
/src/lib/phantompool.js-213-        } catch (e) {
##############################################
/src/phantom/export.js-60-
/src/phantom/export.js:61:          var chart = new Highcharts.Chart('highcharts', JSON.parse(chartJson));
/src/phantom/export.js-62-      }
##############################################
/src/phantom/worker.js-239-                            //open up things that aren't already open.
/src/phantom/worker.js:240:                            var __chartData = eval('(' + chartJson + ')');
/src/phantom/worker.js-241-
##############################################
/src/phantom/worker.js-527-    try {
/src/phantom/worker.js:528:        data = JSON.parse(data);
/src/phantom/worker.js-529-    } catch (e) {
