/src/src/stores/sources/HistogramDataStore.js-43-
/src/src/stores/sources/HistogramDataStore.js:44:    url.query(urlQuery);
/src/src/stores/sources/HistogramDataStore.js-45-
##############################################
/src/src/stores/messages/MessagesStore.js-47-  loadRawMessage(message, remoteAddress, codec, codecConfiguration) {
/src/src/stores/messages/MessagesStore.js:48:    const url = ApiRoutes.MessagesController.parse().url;
/src/src/stores/messages/MessagesStore.js-49-    const payload = {
##############################################
/src/src/components/indices/IndexSetDeletionForm.jsx-43-  open() {
/src/src/components/indices/IndexSetDeletionForm.jsx:44:    this.refs[`index-set-deletion-modal-${this.props.indexSet.id}`].open();
/src/src/components/indices/IndexSetDeletionForm.jsx-45-  },
##############################################
/src/src/components/indices/IndexSetsComponent.jsx-17-const IndexSetsComponent = React.createClass({
/src/src/components/indices/IndexSetsComponent.jsx:18:  mixins: [Reflux.connect(IndexSetsStore)],
/src/src/components/indices/IndexSetsComponent.jsx-19-
##############################################
/src/src/components/indices/IndexSetsComponent.jsx-48-    return () => {
/src/src/components/indices/IndexSetsComponent.jsx:49:      this.refs[`index-set-deletion-form-${indexSet.id}`].open();
/src/src/components/indices/IndexSetsComponent.jsx-50-    };
##############################################
/src/src/components/lookup-tables/DataAdaptersContainer.jsx-20-
/src/src/components/lookup-tables/DataAdaptersContainer.jsx:21:  mixins: [Reflux.connect(LookupTableDataAdaptersStore)],
/src/src/components/lookup-tables/DataAdaptersContainer.jsx-22-
##############################################
/src/src/components/lookup-tables/CachesContainer.jsx-20-
/src/src/components/lookup-tables/CachesContainer.jsx:21:  mixins: [Reflux.connect(LookupTableCachesStore)],
/src/src/components/lookup-tables/CachesContainer.jsx-22-
##############################################
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx-16-const AlertNotificationsComponent = React.createClass({
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx:17:  mixins: [Reflux.connect(AlertNotificationsStore)],
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx-18-
##############################################
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-18-const CreateAlertNotificationInput = React.createClass({
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx:19:  mixins: [Reflux.connect(AlertNotificationsStore)],
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-20-  getInitialState() {
##############################################
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-53-      },
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx:54:      () => this.refs.configurationForm.open(),
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-55-    );
##############################################
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-57-  _openForm() {
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx:58:    this.refs.configurationForm.open();
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-59-  },
##############################################
/src/src/components/alertnotifications/AlertNotification.jsx-23-  },
/src/src/components/alertnotifications/AlertNotification.jsx:24:  mixins: [Reflux.connect(AlertNotificationsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertnotifications/AlertNotification.jsx-25-
##############################################
/src/src/components/alertnotifications/AlertNotification.jsx-38-  _onEdit() {
/src/src/components/alertnotifications/AlertNotification.jsx:39:    this.refs.configurationForm.open();
/src/src/components/alertnotifications/AlertNotification.jsx-40-  },
##############################################
/src/src/components/notifications/NotificationsList.jsx-11-const NotificationsList = React.createClass({
/src/src/components/notifications/NotificationsList.jsx:12:  mixins: [Reflux.connect(NotificationsStore)],
/src/src/components/notifications/NotificationsList.jsx-13-  _formatNotificationCount(count) {
##############################################
/src/src/components/alertconditions/AlertConditionForm.jsx-17-  },
/src/src/components/alertconditions/AlertConditionForm.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/AlertConditionForm.jsx-19-
##############################################
/src/src/components/alertconditions/AlertConditionForm.jsx-37-  open() {
/src/src/components/alertconditions/AlertConditionForm.jsx:38:    this.refs.configurationForm.open();
/src/src/components/alertconditions/AlertConditionForm.jsx-39-  },
##############################################
/src/src/components/alertconditions/EditAlertConditionForm.jsx-19-
/src/src/components/alertconditions/EditAlertConditionForm.jsx:20:  mixins: [Reflux.connect(AlertConditionsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertconditions/EditAlertConditionForm.jsx-21-
/src/src/components/alertconditions/EditAlertConditionForm.jsx-22-  _onEdit() {
/src/src/components/alertconditions/EditAlertConditionForm.jsx:23:    this.refs.updateForm.open();
/src/src/components/alertconditions/EditAlertConditionForm.jsx-24-  },
##############################################
/src/src/components/alertconditions/AlertCondition.jsx-17-  },
/src/src/components/alertconditions/AlertCondition.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertconditions/AlertCondition.jsx-19-
##############################################
/src/src/components/alertconditions/AlertConditionsComponent.jsx-16-const AlertConditionsComponent = React.createClass({
/src/src/components/alertconditions/AlertConditionsComponent.jsx:17:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/AlertConditionsComponent.jsx-18-
##############################################
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-17-const CreateAlertConditionInput = React.createClass({
/src/src/components/alertconditions/CreateAlertConditionInput.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-19-  getInitialState() {
##############################################
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-52-  _openForm() {
/src/src/components/alertconditions/CreateAlertConditionInput.jsx:53:    this.refs.configurationForm.open();
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-54-  },
##############################################
/src/src/components/sources/SourceOverview.jsx-198-        query = query.substr(1, query.length - 1);
/src/src/components/sources/SourceOverview.jsx:199:        const range = Qs.parse(query).range;
/src/src/components/sources/SourceOverview.jsx-200-        if (range) {
##############################################
/src/src/components/layout/Footer.jsx-8-const Footer = React.createClass({
/src/src/components/layout/Footer.jsx:9:  mixins: [Reflux.connect(SystemStore)],
/src/src/components/layout/Footer.jsx-10-  componentDidMount() {
##############################################
/src/src/components/inputs/InputForm.jsx-31-  open() {
/src/src/components/inputs/InputForm.jsx:32:    this.refs.configurationForm.open();
/src/src/components/inputs/InputForm.jsx-33-  },
##############################################
/src/src/components/inputs/InputStateBadge.jsx-17-  },
/src/src/components/inputs/InputStateBadge.jsx:18:  mixins: [Reflux.connect(InputStatesStore), Reflux.connect(NodesStore)],
/src/src/components/inputs/InputStateBadge.jsx-19-  comparator: new InputStateComparator(),
##############################################
/src/src/components/inputs/StaticFieldForm.jsx-13-  open() {
/src/src/components/inputs/StaticFieldForm.jsx:14:    this.refs.modal.open();
/src/src/components/inputs/StaticFieldForm.jsx-15-  },
##############################################
/src/src/components/inputs/InputsList.jsx-25-  },
/src/src/components/inputs/InputsList.jsx:26:  mixins: [Reflux.connect(SingleNodeStore), Reflux.listenTo(InputsStore, '_splitInputs')],
/src/src/components/inputs/InputsList.jsx-27-  getInitialState() {
##############################################
/src/src/components/inputs/CreateInputControl.jsx-16-const CreateInputControl = React.createClass({
/src/src/components/inputs/CreateInputControl.jsx:17:  mixins: [Reflux.connect(InputTypesStore)],
/src/src/components/inputs/CreateInputControl.jsx-18-  getInitialState() {
##############################################
/src/src/components/inputs/CreateInputControl.jsx-48-    event.preventDefault();
/src/src/components/inputs/CreateInputControl.jsx:49:    this.refs.configurationForm.open();
/src/src/components/inputs/CreateInputControl.jsx-50-  },
##############################################
/src/src/components/inputs/InputListItem.jsx-26-  },
/src/src/components/inputs/InputListItem.jsx:27:  mixins: [PermissionsMixin, Reflux.connect(InputTypesStore)],
/src/src/components/inputs/InputListItem.jsx-28-  _deleteInput() {
##############################################
/src/src/components/inputs/InputListItem.jsx-34-  _openStaticFieldForm() {
/src/src/components/inputs/InputListItem.jsx:35:    this.refs.staticFieldForm.open();
/src/src/components/inputs/InputListItem.jsx-36-  },
/src/src/components/inputs/InputListItem.jsx-37-  _editInput() {
/src/src/components/inputs/InputListItem.jsx:38:    this.refs.configurationForm.open();
/src/src/components/inputs/InputListItem.jsx-39-  },
##############################################
/src/src/components/inputs/NodeOrGlobalSelect.jsx-16-  },
/src/src/components/inputs/NodeOrGlobalSelect.jsx:17:  mixins: [Reflux.connect(NodesStore)],
/src/src/components/inputs/NodeOrGlobalSelect.jsx-18-  getInitialState() {
##############################################
/src/src/components/inputs/InputThroughput.jsx-18-  },
/src/src/components/inputs/InputThroughput.jsx:19:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/inputs/InputThroughput.jsx-20-  getInitialState() {
##############################################
/src/src/components/grok-patterns/BulkLoadPatternModal.jsx-41-      <span>
/src/src/components/grok-patterns/BulkLoadPatternModal.jsx:42:        <Button bsStyle="info" style={{ marginRight: 5 }} onClick={() => this.refs.modal.open()}>导入模式文件</Button>
/src/src/components/grok-patterns/BulkLoadPatternModal.jsx-43-
##############################################
/src/src/components/grok-patterns/EditPatternModal.jsx-23-  openModal() {
/src/src/components/grok-patterns/EditPatternModal.jsx:24:    this.refs.modal.open();
/src/src/components/grok-patterns/EditPatternModal.jsx-25-  },
##############################################
/src/src/components/navigation/Navigation.jsx-35-
/src/src/components/navigation/Navigation.jsx:36:  mixins: [PermissionsMixin, Reflux.connect(NotificationsStore)],
/src/src/components/navigation/Navigation.jsx-37-
##############################################
/src/src/components/users/RolesComponent.jsx-18-export default React.createClass({
/src/src/components/users/RolesComponent.jsx:19:  mixins: [Reflux.connect(DashboardsStore, 'dashboards')],
/src/src/components/users/RolesComponent.jsx-20-  getInitialState() {
##############################################
/src/src/components/users/RoleList.jsx-14-const RoleList = React.createClass({
/src/src/components/users/RoleList.jsx:15:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/users/RoleList.jsx-16-  propTypes: {
##############################################
/src/src/components/users/UserPreferencesModal.jsx-31-      this.setState({ preferences: preferences });
/src/src/components/users/UserPreferencesModal.jsx:32:      this.refs.modal.open();
/src/src/components/users/UserPreferencesModal.jsx-33-    });
##############################################
/src/src/components/users/UserForm.jsx-30-  },
/src/src/components/users/UserForm.jsx:31:  mixins: [PermissionsMixin, Reflux.connect(CurrentUserStore), Reflux.connect(DashboardsStore)],
/src/src/components/users/UserForm.jsx-32-  getInitialState() {
##############################################
/src/src/components/extractors/ImportExtractors.jsx-17-    try {
/src/src/components/extractors/ImportExtractors.jsx:18:      const parsedExtractors = JSON.parse(this.refs.extractorsInput.getValue());
/src/src/components/extractors/ImportExtractors.jsx-19-      const extractors = parsedExtractors.extractors;
##############################################
/src/src/components/extractors/ExtractorsList.jsx-23-  },
/src/src/components/extractors/ExtractorsList.jsx:24:  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],
/src/src/components/extractors/ExtractorsList.jsx-25-  componentDidMount() {
##############################################
/src/src/components/extractors/ExtractorsList.jsx-37-  _openSortModal() {
/src/src/components/extractors/ExtractorsList.jsx:38:    this.refs.sortModal.open();
/src/src/components/extractors/ExtractorsList.jsx-39-  },
##############################################
/src/src/components/extractors/ExportExtractors.jsx-19-  },
/src/src/components/extractors/ExportExtractors.jsx:20:  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],
/src/src/components/extractors/ExportExtractors.jsx-21-  componentDidMount() {
##############################################
/src/src/components/extractors/ExtractorSortModal.jsx-16-  open() {
/src/src/components/extractors/ExtractorSortModal.jsx:17:    this.refs.modal.open();
/src/src/components/extractors/ExtractorSortModal.jsx-18-  },
##############################################
/src/src/components/outputs/CreateOutputDropdown.jsx-40-    if (this.state.typeName !== this.PLACEHOLDER && this.state.typeName !== '') {
/src/src/components/outputs/CreateOutputDropdown.jsx:41:      this.refs.configurationForm.open();
/src/src/components/outputs/CreateOutputDropdown.jsx-42-    }
##############################################
/src/src/components/outputs/EditOutputButton.jsx-23-      this.setState({ typeDefinition: definition.requested_configuration });
/src/src/components/outputs/EditOutputButton.jsx:24:      this.refs.configurationForm.open();
/src/src/components/outputs/EditOutputButton.jsx-25-    });
##############################################
/src/src/components/metrics/MetricContainer.jsx-20-  },
/src/src/components/metrics/MetricContainer.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricContainer.jsx-22-
##############################################
/src/src/components/metrics/MetricsMapper.jsx-12-  },
/src/src/components/metrics/MetricsMapper.jsx:13:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricsMapper.jsx-14-
##############################################
/src/src/components/metrics/MetricDetails.jsx-17-  },
/src/src/components/metrics/MetricDetails.jsx:18:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricDetails.jsx-19-  componentDidMount() {
##############################################
/src/src/components/bootstrap/BootstrapModalForm.jsx-33-  open() {
/src/src/components/bootstrap/BootstrapModalForm.jsx:34:    this.refs.modal.open();
/src/src/components/bootstrap/BootstrapModalForm.jsx-35-  }
##############################################
/src/src/components/source-tagging/ConfigurationBundlePreview.jsx-53-        </div>
/src/src/components/source-tagging/ConfigurationBundlePreview.jsx:54:        <div dangerouslySetInnerHTML={{ __html: markdownPreview }} />
/src/src/components/source-tagging/ConfigurationBundlePreview.jsx-55-        <div className="preview-actions">
##############################################
/src/src/components/source-tagging/ConfigurationBundles.jsx-18-const ConfigurationBundles = React.createClass({
/src/src/components/source-tagging/ConfigurationBundles.jsx:19:  mixins: [Reflux.connect(ConfigurationBundlesStore)],
/src/src/components/source-tagging/ConfigurationBundles.jsx-20-
##############################################
/src/src/components/streams/StreamForm.jsx-69-    IndexSetsActions.list(false);
/src/src/components/streams/StreamForm.jsx:70:    this.refs.modal.open();
/src/src/components/streams/StreamForm.jsx-71-  },
##############################################
/src/src/components/streams/CreateStreamButton.jsx-20-  onClick() {
/src/src/components/streams/CreateStreamButton.jsx:21:    this.refs.streamForm.open();
/src/src/components/streams/CreateStreamButton.jsx-22-  },
##############################################
/src/src/components/streams/Stream.jsx-94-  _onQuickAdd() {
/src/src/components/streams/Stream.jsx:95:    this.refs.quickAddStreamRuleForm.open();
/src/src/components/streams/Stream.jsx-96-  },
##############################################
/src/src/components/streams/StreamControls.jsx-32-    event.preventDefault();
/src/src/components/streams/StreamControls.jsx:33:    this.refs.streamForm.open();
/src/src/components/streams/StreamControls.jsx-34-  },
##############################################
/src/src/components/streams/StreamControls.jsx-36-    event.preventDefault();
/src/src/components/streams/StreamControls.jsx:37:    this.refs.cloneForm.open();
/src/src/components/streams/StreamControls.jsx-38-  },
##############################################
/src/src/components/streams/StreamThroughput.jsx-16-  },
/src/src/components/streams/StreamThroughput.jsx:17:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/streams/StreamThroughput.jsx-18-  componentWillMount() {
##############################################
/src/src/components/visualizations/QuickValuesVisualization.jsx-364-
/src/src/components/visualizations/QuickValuesVisualization.jsx:365:    return <span dangerouslySetInnerHTML={{ __html: `${analysisInformation.join(',')}.` }} />;
/src/src/components/visualizations/QuickValuesVisualization.jsx-366-  },
##############################################
/src/src/components/times/TimesList.jsx-13-const TimesList = React.createClass({
/src/src/components/times/TimesList.jsx:14:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(SystemStore)],
/src/src/components/times/TimesList.jsx-15-  getInitialState() {
##############################################
/src/src/components/alerts/AlertTimeline.jsx-21-
/src/src/components/alerts/AlertTimeline.jsx:22:  mixins: [Reflux.connect(AlertNotificationsStore), Reflux.connect(AlarmCallbackHistoryStore)],
/src/src/components/alerts/AlertTimeline.jsx-23-
##############################################
/src/src/components/alerts/AlertsComponent.jsx-14-const AlertsComponent = React.createClass({
/src/src/components/alerts/AlertsComponent.jsx:15:  mixins: [Reflux.connect(AlertsStore), Reflux.connect(AlertConditionsStore)],
/src/src/components/alerts/AlertsComponent.jsx-16-
##############################################
/src/src/components/configurationforms/ConfigurationForm.jsx-85-  open() {
/src/src/components/configurationforms/ConfigurationForm.jsx:86:    this.refs.modal.open();
/src/src/components/configurationforms/ConfigurationForm.jsx-87-  },
##############################################
/src/src/components/loggers/LogLevelDropdown.jsx-18-  },
/src/src/components/loggers/LogLevelDropdown.jsx:19:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LogLevelDropdown.jsx-20-  _changeLoglevel(loglevel) {
##############################################
/src/src/components/loggers/NodeLoggers.jsx-19-  },
/src/src/components/loggers/NodeLoggers.jsx:20:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/loggers/NodeLoggers.jsx-21-  getInitialState() {
##############################################
/src/src/components/loggers/LoggerOverview.jsx-10-const LoggerOverview = React.createClass({
/src/src/components/loggers/LoggerOverview.jsx:11:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LoggerOverview.jsx-12-  render() {
##############################################
/src/src/components/loggers/LogLevelMetrics.jsx-20-  },
/src/src/components/loggers/LogLevelMetrics.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/loggers/LogLevelMetrics.jsx-22-  componentDidMount() {
##############################################
/src/src/components/loggers/LogLevelMetricsOverview.jsx-13-  },
/src/src/components/loggers/LogLevelMetricsOverview.jsx:14:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LogLevelMetricsOverview.jsx-15-  render() {
##############################################
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx-19-
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx:20:  mixins: [Reflux.connect(AlarmCallbackHistoryStore), Reflux.connect(AlertNotificationsStore)],
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx-21-
##############################################
/src/src/components/throughput/GlobalThroughput.jsx-10-const GlobalThroughput = React.createClass({
/src/src/components/throughput/GlobalThroughput.jsx:11:  mixins: [Reflux.connect(GlobalThroughputStore)],
/src/src/components/throughput/GlobalThroughput.jsx-12-  render() {
##############################################
/src/src/components/throughput/NodeThroughput.jsx-21-  },
/src/src/components/throughput/NodeThroughput.jsx:22:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/throughput/NodeThroughput.jsx-23-  getDefaultProps() {
##############################################
/src/src/components/dashboard/AddToDashboardMenu.jsx-39-
/src/src/components/dashboard/AddToDashboardMenu.jsx:40:  mixins: [Reflux.connect(DashboardsStore), PermissionsMixin],
/src/src/components/dashboard/AddToDashboardMenu.jsx-41-
##############################################
/src/src/components/dashboard/AddToDashboardMenu.jsx-59-    this.setState({ selectedDashboard: dashboardId });
/src/src/components/dashboard/AddToDashboardMenu.jsx:60:    this.refs.widgetModal.open();
/src/src/components/dashboard/AddToDashboardMenu.jsx-61-  },
##############################################
/src/src/components/dashboard/AddToDashboardMenu.jsx-121-  _createNewDashboard() {
/src/src/components/dashboard/AddToDashboardMenu.jsx:122:    this.refs.createDashboardModal.open();
/src/src/components/dashboard/AddToDashboardMenu.jsx-123-  },
##############################################
/src/src/components/dashboard/EditDashboardModal.jsx-49-  open() {
/src/src/components/dashboard/EditDashboardModal.jsx:50:    this.refs.modal.open();
/src/src/components/dashboard/EditDashboardModal.jsx-51-  },
##############################################
/src/src/components/dashboard/EditDashboardModalTrigger.jsx-18-  openModal() {
/src/src/components/dashboard/EditDashboardModalTrigger.jsx:19:    this.refs.modal.open();
/src/src/components/dashboard/EditDashboardModalTrigger.jsx-20-  },
##############################################
/src/src/components/dashboard/DashboardListPage.jsx-23-  },
/src/src/components/dashboard/DashboardListPage.jsx:24:  mixins: [Reflux.connect(DashboardsStore, 'dashboards'), PermissionsMixin],
/src/src/components/dashboard/DashboardListPage.jsx-25-  getInitialState() {
##############################################
/src/src/components/dashboard/Dashboard.jsx-23-  },
/src/src/components/dashboard/Dashboard.jsx:24:  mixins: [PermissionsMixin, Reflux.connect(CurrentUserStore)],
/src/src/components/dashboard/Dashboard.jsx-25-  _setStartpage() {
##############################################
/src/src/components/common/LinkToNode.jsx-15-  },
/src/src/components/common/LinkToNode.jsx:16:  mixins: [Reflux.connect(NodesStore)],
/src/src/components/common/LinkToNode.jsx-17-  render() {
##############################################
/src/src/components/common/LocaleSelect.jsx-10-const LocaleSelect = React.createClass({
/src/src/components/common/LocaleSelect.jsx:11:  mixins: [Reflux.connect(SystemStore)],
/src/src/components/common/LocaleSelect.jsx-12-  propTypes: {
##############################################
/src/src/components/common/IfPermitted.jsx-18-  },
/src/src/components/common/IfPermitted.jsx:19:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/common/IfPermitted.jsx-20-  getDefaultProps() {
##############################################
/src/src/components/widgets/Widget.jsx-184-  _showConfig() {
/src/src/components/widgets/Widget.jsx:185:    this.refs.configModal.open();
/src/src/components/widgets/Widget.jsx-186-  },
/src/src/components/widgets/Widget.jsx-187-  _showEditConfig() {
/src/src/components/widgets/Widget.jsx:188:    this.refs.editModal.open();
/src/src/components/widgets/Widget.jsx-189-  },
##############################################
/src/src/components/widgets/WidgetConfigModal.jsx-19-  open() {
/src/src/components/widgets/WidgetConfigModal.jsx:20:    this.refs.configModal.open();
/src/src/components/widgets/WidgetConfigModal.jsx-21-  },
##############################################
/src/src/components/widgets/WidgetCreationModal.jsx-56-  open() {
/src/src/components/widgets/WidgetCreationModal.jsx:57:    this.refs.createModal.open();
/src/src/components/widgets/WidgetCreationModal.jsx-58-  },
##############################################
/src/src/components/widgets/WidgetEditConfigModal.jsx-40-  open() {
/src/src/components/widgets/WidgetEditConfigModal.jsx:41:    this.refs.editModal.open();
/src/src/components/widgets/WidgetEditConfigModal.jsx-42-  },
##############################################
/src/src/components/indexers/IndexerClusterHealth.jsx-13-const IndexerClusterHealth = React.createClass({
/src/src/components/indexers/IndexerClusterHealth.jsx:14:  mixins: [Reflux.connect(IndexerClusterStore)],
/src/src/components/indexers/IndexerClusterHealth.jsx-15-
##############################################
/src/src/components/cluster/GraylogClusterOverview.jsx-21-const GraylogClusterOverview = React.createClass({
/src/src/components/cluster/GraylogClusterOverview.jsx:22:  mixins: [Reflux.connect(NodesStore, 'nodes'), Reflux.connect(ClusterTrafficStore, 'traffic')],
/src/src/components/cluster/GraylogClusterOverview.jsx-23-
##############################################
/src/src/components/authentication/AuthenticationComponent.jsx-30-
/src/src/components/authentication/AuthenticationComponent.jsx:31:  mixins: [Reflux.connect(AuthenticationStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/authentication/AuthenticationComponent.jsx-32-
##############################################
/src/src/components/authentication/AuthProvidersConfig.jsx-36-  _openModal() {
/src/src/components/authentication/AuthProvidersConfig.jsx:37:    this.refs.configModal.open();
/src/src/components/authentication/AuthProvidersConfig.jsx-38-  },
##############################################
/src/src/components/configurations/SearchesConfig.jsx-143-  _openModal() {
/src/src/components/configurations/SearchesConfig.jsx:144:    this.refs.searchesConfigModal.open();
/src/src/components/configurations/SearchesConfig.jsx-145-  },
##############################################
/src/src/components/configurations/MessageProcessorsConfig.jsx-33-  _openModal() {
/src/src/components/configurations/MessageProcessorsConfig.jsx:34:    this.refs.configModal.open();
/src/src/components/configurations/MessageProcessorsConfig.jsx-35-  },
##############################################
/src/src/components/search/QueryInput.ts-78-        var parser = new queryParser.QueryParser(query);
/src/src/components/search/QueryInput.ts:79:        var ast = parser.parse();
/src/src/components/search/QueryInput.ts-80-        var visitor = new SerializeVisitor();
##############################################
/src/src/components/search/AddDecoratorButton.jsx-24-  },
/src/src/components/search/AddDecoratorButton.jsx:25:  mixins: [Reflux.connect(DecoratorsStore), PureRenderMixin],
/src/src/components/search/AddDecoratorButton.jsx-26-  getDefaultProps() {
##############################################
/src/src/components/search/AddDecoratorButton.jsx-54-  _openModal() {
/src/src/components/search/AddDecoratorButton.jsx:55:    this.refs.configurationForm.open();
/src/src/components/search/AddDecoratorButton.jsx-56-  },
##############################################
/src/src/components/search/ShowQueryModal.jsx-16-  open() {
/src/src/components/search/ShowQueryModal.jsx:17:    this.refs.modal.open();
/src/src/components/search/ShowQueryModal.jsx-18-  },
##############################################
/src/src/components/search/ShowQueryModal.jsx-24-  render() {
/src/src/components/search/ShowQueryModal.jsx:25:    const queryText = JSON.stringify(JSON.parse(this.props.builtQuery), null, '  ');
/src/src/components/search/ShowQueryModal.jsx-26-    return (
##############################################
/src/src/components/search/NoSearchResults.jsx-33-    event.preventDefault();
/src/src/components/search/NoSearchResults.jsx:34:    this.refs.showQueryModal.open();
/src/src/components/search/NoSearchResults.jsx-35-  },
##############################################
/src/src/components/search/SavedSearchControls.jsx-50-  _openModal() {
/src/src/components/search/SavedSearchControls.jsx:51:    this.refs.saveSearchModal.open();
/src/src/components/search/SavedSearchControls.jsx-52-  },
##############################################
/src/src/components/search/DecoratorSidebar.jsx-26-  },
/src/src/components/search/DecoratorSidebar.jsx:27:  mixins: [Reflux.connect(DecoratorsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/search/DecoratorSidebar.jsx-28-  getInitialState() {
##############################################
/src/src/components/search/Decorator.jsx-25-  },
/src/src/components/search/Decorator.jsx:26:  mixins: [Reflux.connect(DecoratorsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/search/Decorator.jsx-27-  componentDidMount() {
##############################################
/src/src/components/search/Decorator.jsx-36-  _handleEditClick() {
/src/src/components/search/Decorator.jsx:37:    this.refs.editForm.open();
/src/src/components/search/Decorator.jsx-38-  },
##############################################
/src/src/components/search/RefreshControls.jsx-14-const RefreshControls = React.createClass({
/src/src/components/search/RefreshControls.jsx:15:  mixins: [Reflux.connect(RefreshStore, 'refresh')],
/src/src/components/search/RefreshControls.jsx-16-  INTERVAL_OPTIONS: {
##############################################
/src/src/components/search/SearchSidebar.jsx-142-
/src/src/components/search/SearchSidebar.jsx:143:      ref.open();
/src/src/components/search/SearchSidebar.jsx-144-    };
##############################################
/src/src/components/field-analyzers/FieldQuickValues.jsx-31-  },
/src/src/components/field-analyzers/FieldQuickValues.jsx:32:  mixins: [Reflux.listenTo(RefreshStore, '_setupTimer', '_setupTimer'), Reflux.connect(FieldQuickValuesStore)],
/src/src/components/field-analyzers/FieldQuickValues.jsx-33-
##############################################
/src/src/components/systemjobs/SystemJobsComponent.jsx-14-const SystemJobsComponent = React.createClass({
/src/src/components/systemjobs/SystemJobsComponent.jsx:15:  mixins: [Reflux.connect(SystemJobsStore)],
/src/src/components/systemjobs/SystemJobsComponent.jsx-16-  componentDidMount() {
##############################################
/src/src/components/nodes/JournalState.jsx-19-  },
/src/src/components/nodes/JournalState.jsx:20:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JournalState.jsx-21-  componentWillMount() {
##############################################
/src/src/components/nodes/JvmHeapUsage.jsx-20-  },
/src/src/components/nodes/JvmHeapUsage.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JvmHeapUsage.jsx-22-  componentWillMount() {
##############################################
/src/src/components/nodes/BufferUsage.jsx-23-  },
/src/src/components/nodes/BufferUsage.jsx:24:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/BufferUsage.jsx-25-  componentWillMount() {
##############################################
/src/src/components/nodes/JournalDetails.jsx-27-  },
/src/src/components/nodes/JournalDetails.jsx:28:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JournalDetails.jsx-29-
##############################################
/src/src/components/nodes/NodesList.jsx-16-  },
/src/src/components/nodes/NodesList.jsx:17:  mixins: [Reflux.connect(NodesStore), Reflux.connect(ClusterOverviewStore)],
/src/src/components/nodes/NodesList.jsx-18-  _isLoading() {
##############################################
/src/src/components/streamrules/StreamRule.jsx-25-    event.preventDefault();
/src/src/components/streamrules/StreamRule.jsx:26:    this.refs.streamRuleForm.open();
/src/src/components/streamrules/StreamRule.jsx-27-  },
##############################################
/src/src/components/streamrules/StreamRulesEditor.jsx-66-    event.preventDefault();
/src/src/components/streamrules/StreamRulesEditor.jsx:67:    this.refs.newStreamRuleForm.open();
/src/src/components/streamrules/StreamRulesEditor.jsx-68-  },
##############################################
/src/src/components/streamrules/StreamRuleForm.jsx-53-    this._resetValues();
/src/src/components/streamrules/StreamRuleForm.jsx:54:    this.refs.modal.open();
/src/src/components/streamrules/StreamRuleForm.jsx-55-  },
##############################################
/src/src/components/messageloaders/RawMessageLoader.jsx-26-
/src/src/components/messageloaders/RawMessageLoader.jsx:27:  mixins: [Reflux.connect(CodecTypesStore), Reflux.connect(InputsStore)],
/src/src/components/messageloaders/RawMessageLoader.jsx-28-
##############################################
/src/src/legacy/analyzers/fieldcharts.js-268-    try {
/src/src/legacy/analyzers/fieldcharts.js:269:      return JSON.parse(cc.attr('data-lines'));
/src/src/legacy/analyzers/fieldcharts.js-270-    } catch (e) {
##############################################
/src/src/logic/local-storage/Store.js-14-    try {
/src/src/logic/local-storage/Store.js:15:      return JSON.parse(value);
/src/src/logic/local-storage/Store.js-16-    } catch (e) {
##############################################
/src/src/logic/search/queryParser.test.js-12-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:13:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-14-    var dumpVisitor = new DumpVisitor();
##############################################
/src/src/logic/search/queryParser.test.js-36-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:37:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-38-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-48-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:49:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-50-    expect(ast instanceof ExpressionListAST).toBeTruthy();
##############################################
/src/src/logic/search/queryParser.test.js-74-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:75:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-76-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-102-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:103:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-104-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-127-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:128:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-129-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-142-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:143:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-144-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-165-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:166:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-167-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-180-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:181:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-182-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-195-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:196:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-197-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-205-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:206:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-207-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-215-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:216:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-217-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-225-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:226:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-227-    expect(parser.errors.length).toBe(2);
##############################################
/src/src/logic/search/queryParser.test.js-237-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:238:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-239-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-269-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:270:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-271-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-281-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:282:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-283-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-305-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:306:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-307-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-315-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:316:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-317-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-325-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:326:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-327-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-344-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:345:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-346-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-363-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:364:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-365-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-385-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:386:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-387-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-406-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:407:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-408-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-417-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:418:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-419-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-444-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:445:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-446-    expect(parser.errors.length).toBe(2);
##############################################
/src/src/logic/search/queryParser.test.js-456-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:457:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-458-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-468-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:469:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-470-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-481-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:482:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-483-    expectIdentityDump(query, true);
##############################################
/src/src/logic/search/queryParser.test.js-488-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:489:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-490-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-498-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:499:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-500-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-506-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:507:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-508-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-518-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:519:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-520-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-531-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:532:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-533-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-543-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:544:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-545-    expectNoErrors(parser);
##############################################
/src/src/logic/search/queryParser.test.js-556-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:557:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-558-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/logic/search/queryParser.test.js-564-    var parser = new QueryParser(query);
/src/src/logic/search/queryParser.test.js:565:    var ast = parser.parse();
/src/src/logic/search/queryParser.test.js-566-    expect(parser.errors.length).toBe(1);
##############################################
/src/src/util/ObjectUtils.js-2-  clone(object) {
/src/src/util/ObjectUtils.js:3:    return JSON.parse(JSON.stringify(object));
/src/src/util/ObjectUtils.js-4-  },
##############################################
/src/src/util/URLUtils.js-19-        query = query.substr(1, query.length - 1);
/src/src/util/URLUtils.js:20:        search = Qs.parse(query);
/src/src/util/URLUtils.js-21-      }
##############################################
/src/src/util/URLUtils.js-31-        hash = hash.substr(1, hash.length - 1);
/src/src/util/URLUtils.js:32:        result = Qs.parse(hash);
/src/src/util/URLUtils.js-33-      }
##############################################
/src/src/pages/DashboardsPage.jsx-8-const DashboardsPage = React.createClass({
/src/src/pages/DashboardsPage.jsx:9:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/DashboardsPage.jsx-10-  render() {
##############################################
/src/src/pages/ImportExtractorsPage.jsx-17-  },
/src/src/pages/ImportExtractorsPage.jsx:18:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/ImportExtractorsPage.jsx-19-  getInitialState() {
##############################################
/src/src/pages/AlertsPage.jsx-17-const AlertsPage = React.createClass({
/src/src/pages/AlertsPage.jsx:18:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertsPage.jsx-19-  render() {
##############################################
/src/src/pages/StreamOutputsPage.jsx-15-const StreamOutputsPage = React.createClass({
/src/src/pages/StreamOutputsPage.jsx:16:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/StreamOutputsPage.jsx-17-  getInitialState() {
##############################################
/src/src/pages/NodeInputsPage.jsx-23-  },
/src/src/pages/NodeInputsPage.jsx:24:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connectFilter(NodesStore, 'node', nodeFilter)],
/src/src/pages/NodeInputsPage.jsx-25-  componentDidMount() {
##############################################
/src/src/pages/IndexSetCreationPage.jsx-24-
/src/src/pages/IndexSetCreationPage.jsx:25:  mixins: [Reflux.connect(IndexSetsStore), Reflux.connect(IndicesConfigurationStore)],
/src/src/pages/IndexSetCreationPage.jsx-26-
##############################################
/src/src/pages/UsersPage.jsx-15-const UsersPage = React.createClass({
/src/src/pages/UsersPage.jsx:16:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/pages/UsersPage.jsx-17-  render() {
##############################################
/src/src/pages/EditExtractorsPage.jsx-25-  },
/src/src/pages/EditExtractorsPage.jsx:26:  mixins: [Reflux.connect(ExtractorsStore), Reflux.connect(InputsStore)],
/src/src/pages/EditExtractorsPage.jsx-27-  getInitialState() {
##############################################
/src/src/pages/SystemOutputsPage.jsx-10-const SystemOutputsPage = React.createClass({
/src/src/pages/SystemOutputsPage.jsx:11:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/SystemOutputsPage.jsx-12-  render() {
##############################################
/src/src/pages/ExportContentPackPage.jsx-26-const ExportContentPackPage = React.createClass({
/src/src/pages/ExportContentPackPage.jsx:27:  mixins: [Reflux.connect(InputsStore), Reflux.connect(DashboardsStore)],
/src/src/pages/ExportContentPackPage.jsx-28-  getInitialState() {
##############################################
/src/src/pages/ShowAlertPage.jsx-25-
/src/src/pages/ShowAlertPage.jsx:26:  mixins: [Reflux.connect(AlertsStore), Reflux.connect(AlertConditionsStore)],
/src/src/pages/ShowAlertPage.jsx-27-
##############################################
/src/src/pages/StreamEditPage.jsx-17-  },
/src/src/pages/StreamEditPage.jsx:18:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/StreamEditPage.jsx-19-
##############################################
/src/src/pages/NodesPage.jsx-10-const NodesPage = React.createClass({
/src/src/pages/NodesPage.jsx:11:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NodesPage.jsx-12-  render() {
##############################################
/src/src/pages/AlertNotificationsPage.jsx-13-const AlertNotificationsPage = React.createClass({
/src/src/pages/AlertNotificationsPage.jsx:14:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertNotificationsPage.jsx-15-  render() {
##############################################
/src/src/pages/ShowMetricsPage.jsx-19-  },
/src/src/pages/ShowMetricsPage.jsx:20:  mixins: [Reflux.connect(NodesStore), Reflux.connect(MetricsStore), Reflux.listenTo(NodesStore, '_getMetrics')],
/src/src/pages/ShowMetricsPage.jsx-21-
##############################################
/src/src/pages/ShowDashboardPage.jsx-33-  },
/src/src/pages/ShowDashboardPage.jsx:34:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(FocusStore), PermissionsMixin],
/src/src/pages/ShowDashboardPage.jsx-35-
##############################################
/src/src/pages/ConfigurationsPage.jsx-16-const ConfigurationsPage = React.createClass({
/src/src/pages/ConfigurationsPage.jsx:17:  mixins: [Reflux.connect(ConfigurationsStore)],
/src/src/pages/ConfigurationsPage.jsx-18-
##############################################
/src/src/pages/ShowNodePage.jsx-29-    Reflux.connectFilter(ClusterOverviewStore, 'systemOverview', clusterOverviewFilter),
/src/src/pages/ShowNodePage.jsx:30:    Reflux.connect(InputTypesStore),
/src/src/pages/ShowNodePage.jsx-31-  ],
##############################################
/src/src/pages/IndexSetPage.jsx-28-  mixins: [
/src/src/pages/IndexSetPage.jsx:29:    Reflux.connect(IndexSetsStore),
/src/src/pages/IndexSetPage.jsx:30:    Reflux.connect(IndicesStore, 'indexDetails'),
/src/src/pages/IndexSetPage.jsx:31:    Reflux.connect(IndexerOverviewStore),
/src/src/pages/IndexSetPage.jsx-32-  ],
##############################################
/src/src/pages/ExportExtractorsPage.jsx-17-  },
/src/src/pages/ExportExtractorsPage.jsx:18:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/ExportExtractorsPage.jsx-19-  getInitialState() {
##############################################
/src/src/pages/NewAlertNotificationPage.jsx-14-const NewAlertNotificationPage = React.createClass({
/src/src/pages/NewAlertNotificationPage.jsx:15:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NewAlertNotificationPage.jsx-16-  render() {
##############################################
/src/src/pages/ExtractorsPage.jsx-26-  },
/src/src/pages/ExtractorsPage.jsx:27:  mixins: [Reflux.connect(InputsStore), Reflux.listenTo(NodesStore, 'onNodesChange')],
/src/src/pages/ExtractorsPage.jsx-28-  getInitialState() {
##############################################
/src/src/pages/LoginPage.jsx-17-const LoginPage = React.createClass({
/src/src/pages/LoginPage.jsx:18:  mixins: [Reflux.connect(SessionStore), Reflux.ListenerMethods],
/src/src/pages/LoginPage.jsx-19-
##############################################
/src/src/pages/IndexSetConfigurationPage.jsx-24-
/src/src/pages/IndexSetConfigurationPage.jsx:25:  mixins: [Reflux.connect(IndexSetsStore), Reflux.connect(IndicesConfigurationStore)],
/src/src/pages/IndexSetConfigurationPage.jsx-26-
##############################################
/src/src/pages/NewAlertConditionPage.jsx-16-const NewAlertConditionPage = React.createClass({
/src/src/pages/NewAlertConditionPage.jsx:17:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NewAlertConditionPage.jsx-18-  render() {
##############################################
/src/src/pages/StreamsPage.jsx-22-const StreamsPage = React.createClass({
/src/src/pages/StreamsPage.jsx:23:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(IndexSetsStore)],
/src/src/pages/StreamsPage.jsx-24-  getInitialState() {
##############################################
/src/src/pages/CreateExtractorsPage.jsx-28-  },
/src/src/pages/CreateExtractorsPage.jsx:29:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/CreateExtractorsPage.jsx-30-  getInitialState() {
##############################################
/src/src/pages/LUTDataAdaptersPage.jsx-25-  mixins: [
/src/src/pages/LUTDataAdaptersPage.jsx:26:    Reflux.connect(LookupTableDataAdaptersStore),
/src/src/pages/LUTDataAdaptersPage.jsx:27:    Reflux.connect(LookupTablesStore, 'tableStore'),
/src/src/pages/LUTDataAdaptersPage.jsx-28-  ],
##############################################
/src/src/pages/StartPage.jsx-20-  },
/src/src/pages/StartPage.jsx:21:  mixins: [Reflux.connect(CurrentUserStore), Reflux.listenTo(GettingStartedStore, 'onGettingStartedUpdate')],
/src/src/pages/StartPage.jsx-22-  getInitialState() {
##############################################
/src/src/pages/GettingStartedPage.jsx-19-  },
/src/src/pages/GettingStartedPage.jsx:20:  mixins: [Reflux.connect(SystemStore)],
/src/src/pages/GettingStartedPage.jsx-21-  _isLoading() {
##############################################
/src/src/pages/ShowMessagePage.jsx-24-  },
/src/src/pages/ShowMessagePage.jsx:25:  mixins: [Reflux.connect(NodesStore), Reflux.listenTo(InputsStore, '_formatInput')],
/src/src/pages/ShowMessagePage.jsx-26-  getInitialState() {
##############################################
/src/src/pages/EditAlertConditionPage.jsx-23-
/src/src/pages/EditAlertConditionPage.jsx:24:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(AlertConditionsStore)],
/src/src/pages/EditAlertConditionPage.jsx-25-
##############################################
/src/src/pages/LUTTablesPage.jsx-24-  mixins: [
/src/src/pages/LUTTablesPage.jsx:25:    Reflux.connect(LookupTablesStore),
/src/src/pages/LUTTablesPage.jsx-26-  ],
##############################################
/src/src/pages/ThreadDumpPage.jsx-22-  },
/src/src/pages/ThreadDumpPage.jsx:23:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connectFilter(NodesStore, 'node', nodeFilter)],
/src/src/pages/ThreadDumpPage.jsx-24-  componentDidMount() {
##############################################
/src/src/pages/AlertConditionsPage.jsx-16-const AlertConditionsPage = React.createClass({
/src/src/pages/AlertConditionsPage.jsx:17:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertConditionsPage.jsx-18-  render() {
##############################################
/src/src/pages/LUTCachesPage.jsx-24-  mixins: [
/src/src/pages/LUTCachesPage.jsx:25:    Reflux.connect(LookupTableCachesStore),
/src/src/pages/LUTCachesPage.jsx-26-  ],
##############################################
/src/src/pages/SearchPage.jsx-28-  mixins: [
/src/src/pages/SearchPage.jsx:29:    Reflux.connect(NodesStore),
/src/src/pages/SearchPage.jsx:30:    Reflux.connect(MessageFieldsStore),
/src/src/pages/SearchPage.jsx:31:    Reflux.connect(CurrentUserStore),
/src/src/pages/SearchPage.jsx-32-    Reflux.listenTo(InputsStore, '_formatInputs'),
##############################################
/src/src/pages/InputsPage.jsx-11-const InputsPage = React.createClass({
/src/src/pages/InputsPage.jsx:12:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/InputsPage.jsx-13-  componentDidMount() {
##############################################
/src/src/routing/App.jsx-25-
/src/src/routing/App.jsx:26:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/routing/App.jsx-27-  render() {
##############################################
/src/src/routing/AppFacade.jsx-21-const AppFacade = React.createClass({
/src/src/routing/AppFacade.jsx:22:  mixins: [Reflux.connect(SessionStore), Reflux.connect(ServerAvailabilityStore), Reflux.connect(CurrentUserStore)],
/src/src/routing/AppFacade.jsx-23-
##############################################
/src/src/routing/AppWithSearchBar.jsx-28-  mixins: [
/src/src/routing/AppWithSearchBar.jsx:29:    Reflux.connect(CurrentUserStore),
/src/src/routing/AppWithSearchBar.jsx:30:    Reflux.connect(SavedSearchesStore),
/src/src/routing/AppWithSearchBar.jsx:31:    Reflux.connect(ConfigurationsStore),
/src/src/routing/AppWithSearchBar.jsx-32-  ],
##############################################
/src/src/routing/Routes.jsx-129-    }
/src/src/routing/Routes.jsx:130:    route.query(queryParams);
/src/src/routing/Routes.jsx-131-    return route.resource();
##############################################
/src/src/routing/Routes.jsx-145-
/src/src/routing/Routes.jsx:146:    route.query(queryParams);
/src/src/routing/Routes.jsx-147-    return route.resource();
##############################################
/src/webpack.config.js-71-      template: path.resolve(ROOT_PATH, 'templates/index.html.template'),
/src/webpack.config.js:72:      vendorModule: () => JSON.parse(fs.readFileSync(path.resolve(ROOT_PATH, 'build/vendor-module.json'), 'utf8')),
/src/webpack.config.js-73-      chunksSortMode: (c1, c2) => {
##############################################
/src/webpack.combined.config.js-23-    // If a package.json file exists (should normally be the case) use the package name for pluginName
/src/webpack.combined.config.js:24:    const pkg = JSON.parse(fs.readFileSync(packageConfig, 'utf8'));
/src/webpack.combined.config.js-25-    return pkg.name.replace(/\s+/g, '');
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-13-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:14:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-15-    var dumpVisitor = new DumpVisitor();
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-37-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:38:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-39-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-49-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:50:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-51-    expect(ast instanceof ExpressionListAST).toBeTruthy();
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-75-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:76:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-77-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-103-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:104:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-105-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-128-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:129:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-130-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-143-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:144:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-145-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-166-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:167:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-168-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-181-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:182:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-183-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-196-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:197:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-198-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-206-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:207:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-208-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-216-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:217:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-218-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-226-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:227:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-228-    expect(parser.errors.length).toBe(2);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-238-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:239:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-240-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-270-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:271:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-272-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-282-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:283:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-284-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-306-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:307:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-308-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-316-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:317:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-318-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-326-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:327:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-328-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-345-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:346:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-347-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-364-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:365:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-366-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-386-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:387:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-388-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-407-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:408:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-409-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-418-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:419:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-420-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-445-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:446:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-447-    expect(parser.errors.length).toBe(2);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-457-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:458:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-459-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-469-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:470:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-471-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-482-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:483:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-484-    expectIdentityDump(query, true);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-489-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:490:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-491-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-499-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:500:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-501-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-507-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:508:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-509-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-519-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:520:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-521-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-532-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:533:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-534-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-544-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:545:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-546-    expectNoErrors(parser);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-557-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:558:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-559-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-565-    var parser = new QueryParser(query);
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7:566:    var ast = parser.parse();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/c7/queryParser.test_c727a50137013f038f8bcf4b687ff8b7-567-    expect(parser.errors.length).toBe(1);
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/8c/UserPreferencesModal_8cb696d3380ed2fd408c707683678e1c-32-      _this.setState({ preferences: preferences });
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/8c/UserPreferencesModal_8cb696d3380ed2fd408c707683678e1c:33:      _this.refs.modal.open();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/8c/UserPreferencesModal_8cb696d3380ed2fd408c707683678e1c-34-    });
##############################################
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/9e/BootstrapModalForm_9e8cb0ca7747d3e61f3f9b472752f3c3-34-    {
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/9e/BootstrapModalForm_9e8cb0ca7747d3e61f3f9b472752f3c3:35:      this.refs.modal.open();
/src/jest_0/jest-transform-cache-aafb1b209d0363f692de07a87fd3c854-cd34c9c39beadebc8237f94bfc3a1c9a/9e/BootstrapModalForm_9e8cb0ca7747d3e61f3f9b472752f3c3-36-    } }, { key: 'close', value: function close()
