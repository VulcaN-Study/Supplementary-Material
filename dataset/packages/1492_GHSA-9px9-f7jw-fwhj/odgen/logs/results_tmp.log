|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 30	  sink_hqbpillvul_spawn(command);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$18$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$19$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$20$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$21$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$22$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$23$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$24$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$25$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$26$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$27$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$28$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$29$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$30$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$31$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$32$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$33$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$34$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$35$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$36$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$37$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$38$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$39$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$40$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$41$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$42$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$43$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$18$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$19$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$20$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$21$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$22$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$23$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$24$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$25$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$26$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$27$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$28$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$29$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$30$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$31$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$32$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$33$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$34$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$35$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$36$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$37$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$38$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$39$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$40$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$41$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$42$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$43$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$4$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$5$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$6$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$7$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$8$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$9$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$10$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$11$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$12$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$13$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$14$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$15$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$16$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$17$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$18$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$19$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$20$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 236	        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$21$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 239	        child.stdout.pipe(stdout);

|checker| success id$22$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$23$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$24$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$25$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$26$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$27$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$28$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$29$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$30$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$31$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$32$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 17	    this.options = _.extend({}, this.options, options);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$33$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 228	        var logs = path.resolve(this.options.dir, this.options.logs);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$34$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 128	PriestController.prototype.createChild = function(info) {
    var self = this;
    var params = info.params;
    var cmd = params.cmd || params.bin;
    var isNode = (
        cmd === 'node' ||
        cmd === 'iojs' ||
        (! cmd)
    );

    cmd = cmd || process.argv[0];

    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });

    child.priestId = info.id;
    info.startedAt = new Date();

    var onStop = function(code){
        info.stopped = true;
        info.code = code;

        delete info.process;
        delete info._timeout;

        if (info.name) {
            delete self.names[info.name];
        }

        if (params.restart) {
            var restart = (params.restart === true)
                ? self.options.restart
                : params.restart;

            info._timeout = setTimeout(function(){
                self.restartProcess(info.id, function(err){
                    if (err) {
                        console.error('Could not restart process', err);
                    }
                });
            }, restart * 1000);
        }
    };

    child.on('error', function (error) {
        info.log.push({
            channel: 2,
            time: new Date(),
            data: error.toString()
        });

        onStop(1);
    });

    child.stdout.on('data', function(chunk){
        info.log.push({
            channel: 1,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.stderr.on('data', function(chunk){
        info.log.push({
            channel: 2,
            time: new Date(),
            data: chunk.toString()
        });

        var logSize = params.logSize || self.options.logSize;

        var needToCut = (
            logSize < Infinity &&
            logSize > 0 &&
            info.log.length > logSize + 10
        );

        if (needToCut) {
            info.log.splice(0, info.log.length - logSize);
        }
    });

    child.on('exit', onStop);

    if (params.logs) {
        var logs = path.resolve(this.options.dir, this.options.logs);
        var logName;
        if (typeof params.logs === 'string') {
            logName = params.logs;
        } else {
            logName = params.name || params.bin;
        }

        var stdout = fs.createWriteStream(path.join(logs, logName + '.log'));
        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));

        child.stdout.pipe(stdout);
        child.stderr.pipe(stderr);
    }

    info.process = child;

    return info;
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$35$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$36$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 13	function PriestController(options) {
    EventEmitter.call(this);
    this.id = 0;
    this.children = [];
    this.options = _.extend({}, this.options, options);
    this.names = {};
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$37$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$38$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 23	PriestController.prototype.options = {
    dir: process.cwd(),
    logs: 'logs',
    logSize: 1000, // 1_000 log items
    restart: 5,
    delay: 0,
    env: {
        COLORTERM: 1,
        FORCE_COLOR: 1
    }
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 140	    var child = spawn(cmd, params.args, {
        env: _.extend({PATH: process.env.PATH}, process.env, this.options.env, params.env),
        cwd: path.resolve(this.options.dir, params.cwd || '.'),
        stdio: [null, null, null, isNode ? 'ipc' : null]
    });
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$39$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$40$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 131	    var cmd = params.cmd || params.bin;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$41$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/fs.js
Line 22	module.exports = {
  read: read,
  readdir: readFile,
  readdirSync: readFile,
  readFile: readFile,
  readFileSync: readFile,
  readlink: read,
  readlinkSync: read,
  readSync: read,
  createReadStream: read
}
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$42$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 146	    child.priestId = info.id;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 237	        var stderr = fs.createWriteStream(path.join(logs, logName + '.error.log'));
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

|checker| success id$43$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 130	    var params = info.params;
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1492/package/src/controller.js
Line 240	        child.stderr.pipe(stderr);

