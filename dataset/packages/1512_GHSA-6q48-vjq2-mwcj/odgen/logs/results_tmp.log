|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 26	exports.umount = function(device, callback) {
  var unmountCommand;
  if (device == null) {
    throw new Error('Missing device');
  }
  if (!_.isString(device)) {
    throw new Error("Invalid device: " + device);
  }
  if (callback == null) {
    throw new Error('Missing callback');
  }
  if (!_.isFunction(callback)) {
    throw new Error("Invalid callback: " + callback);
  }
  if (utils.isWin32()) {
    return callback(null, null, null);
  }
  if (utils.isMacOSX()) {
    unmountCommand = '/usr/sbin/diskutil unmountDisk force';
  } else {
    unmountCommand = 'umount';
  }
  device = "\"" + device + "\"";
  if (utils.isLinux()) {
    device += '?* 2>/dev/null || /bin/true';
  }
  return child_process.exec(unmountCommand + " " + device, callback);
};
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 48	  device = "\"" + device + "\"";
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 50	    device += '?* 2>/dev/null || /bin/true';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 46	    unmountCommand = 'umount';
$FilePath$/home/tiago/empirical-jsvuln-tools-study/framework/src/packages/CWE-78/1512/package/build/umount.js
Line 52	  return child_process.exec(unmountCommand + " " + device, callback);
$FilePath$/home/tiago/empirical-jsvuln-tools-study/tools-testing/tools-docker/odgen/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

