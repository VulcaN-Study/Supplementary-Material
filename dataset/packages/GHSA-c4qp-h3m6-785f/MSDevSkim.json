[
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 201,
    "start_column": 35,
    "end_line": 201,
    "end_column": 58,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(uint16_t)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 204,
    "start_column": 31,
    "end_line": 204,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(char)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 351,
    "start_column": 45,
    "end_line": 351,
    "end_column": 87,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(connectionLength * sizeof(uint16_t)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 354,
    "start_column": 37,
    "end_line": 354,
    "end_column": 61,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(connectionLength)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 782,
    "start_column": 28,
    "end_line": 782,
    "end_column": 49,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(data->sqlSize)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 786,
    "start_column": 24,
    "end_line": 786,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(data->sqlSize)"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1171,
    "start_column": 34,
    "end_line": 1171,
    "end_column": 59,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((catalog->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1174,
    "start_column": 30,
    "end_line": 1174,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(catalog->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1181,
    "start_column": 33,
    "end_line": 1181,
    "end_column": 57,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((schema->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1184,
    "start_column": 29,
    "end_line": 1184,
    "end_column": 52,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(schema->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1191,
    "start_column": 32,
    "end_line": 1191,
    "end_column": 55,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((table->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1194,
    "start_column": 28,
    "end_line": 1194,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(table->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1201,
    "start_column": 31,
    "end_line": 1201,
    "end_column": 53,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((type->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1204,
    "start_column": 27,
    "end_line": 1204,
    "end_column": 48,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(type->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1282,
    "start_column": 34,
    "end_line": 1282,
    "end_column": 59,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((catalog->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1285,
    "start_column": 30,
    "end_line": 1285,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(catalog->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1292,
    "start_column": 33,
    "end_line": 1292,
    "end_column": 57,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((schema->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1295,
    "start_column": 29,
    "end_line": 1295,
    "end_column": 52,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(schema->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1302,
    "start_column": 32,
    "end_line": 1302,
    "end_column": 55,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((table->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1305,
    "start_column": 28,
    "end_line": 1305,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(table->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1312,
    "start_column": 33,
    "end_line": 1312,
    "end_column": 57,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((column->Length()"
  },
  {
    "filename": "/src/src/odbc_connection.cpp",
    "start_line": 1315,
    "start_column": 29,
    "end_line": 1315,
    "end_column": 52,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(column->Length()"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 316,
    "start_column": 9,
    "end_line": 316,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(columns[i].name, colname, buflen)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 577,
    "start_column": 13,
    "end_line": 577,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(tmp_out_ptr, (char *) buffer, bufferLength)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 952,
    "start_column": 9,
    "end_line": 952,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(param->buffer, &string, param->buffer_length)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 568,
    "start_column": 37,
    "end_line": 568,
    "end_column": 69,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( newbufflen + terCharLen)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 828,
    "start_column": 37,
    "end_line": 828,
    "end_column": 75,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(*paramCount * sizeof(Parameter)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 945,
    "start_column": 28,
    "end_line": 945,
    "end_column": 56,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(param->buffer_length)"
  },
  {
    "filename": "/src/src/odbc.cpp",
    "start_line": 624,
    "start_column": 11,
    "end_line": 624,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/src/odbc.h",
    "start_line": 182,
    "start_column": 31,
    "end_line": 182,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/src/odbc.h",
    "start_line": 184,
    "start_column": 36,
    "end_line": 184,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fwprintf"
  },
  {
    "filename": "/src/src/odbc.h",
    "start_line": 186,
    "start_column": 36,
    "end_line": 186,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/src/dynodbc.cpp",
    "start_line": 32,
    "start_column": 5,
    "end_line": 32,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/src/dynodbc.cpp",
    "start_line": 46,
    "start_column": 5,
    "end_line": 46,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/src/strptime.c",
    "start_line": 149,
    "start_column": 17,
    "end_line": 149,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(day[i])"
  },
  {
    "filename": "/src/src/strptime.c",
    "start_line": 154,
    "start_column": 17,
    "end_line": 154,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(abday[i])"
  },
  {
    "filename": "/src/src/strptime.c",
    "start_line": 175,
    "start_column": 17,
    "end_line": 175,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(mon[i])"
  },
  {
    "filename": "/src/src/strptime.c",
    "start_line": 180,
    "start_column": 17,
    "end_line": 180,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(abmon[i])"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 113,
    "start_column": 31,
    "end_line": 113,
    "end_column": 59,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(stmt->bufferLength+2)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 422,
    "start_column": 28,
    "end_line": 422,
    "end_column": 67,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((data->sqlLen * sizeof(uint16_t)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 425,
    "start_column": 24,
    "end_line": 425,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(data->sqlLen +1)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 578,
    "start_column": 23,
    "end_line": 578,
    "end_column": 55,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sqlLen * sizeof(uint16_t)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 582,
    "start_column": 19,
    "end_line": 582,
    "end_column": 33,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sqlLen)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 630,
    "start_column": 28,
    "end_line": 630,
    "end_column": 67,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((data->sqlLen * sizeof(uint16_t)"
  },
  {
    "filename": "/src/src/odbc_statement.cpp",
    "start_line": 633,
    "start_column": 24,
    "end_line": 633,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(data->sqlLen +1)"
  },
  {
    "filename": "/src/src/odbc_result.cpp",
    "start_line": 123,
    "start_column": 40,
    "end_line": 123,
    "end_column": 77,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(objODBCResult->bufferLength+2)"
  },
  {
    "filename": "/src/test/odbc-bench.c",
    "start_line": 80,
    "start_column": 9,
    "end_line": 80,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/test/odbc-bench.c",
    "start_line": 83,
    "start_column": 9,
    "end_line": 83,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/test/odbc-bench.c",
    "start_line": 110,
    "start_column": 3,
    "end_line": 110,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/test/odbc-bench.c",
    "start_line": 120,
    "start_column": 7,
    "end_line": 120,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/installer/driverInstall.js",
    "start_line": 12,
    "start_column": 21,
    "end_line": 12,
    "end_column": 27,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  }
]