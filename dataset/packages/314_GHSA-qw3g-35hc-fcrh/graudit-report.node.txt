/src/README.md-21-
/src/README.md:22:var server = restify.createServer({
/src/README.md-23-  name: 'myapp',
##############################################
/src/bin/report-latency-143-    var stream = readline.createInterface({
/src/bin/report-latency:144:        input: fs.createReadStream(f),
/src/bin/report-latency-145-        output: null
##############################################
/src/bin/report-latency-151-        try {
/src/bin/report-latency:152:            record = JSON.parse(l);
/src/bin/report-latency-153-        } catch (e) {
##############################################
/src/lib/request.js-280-    if (this._cacheURL !== this.url) {
/src/lib/request.js:281:        this._url = url.parse(this.url);
/src/lib/request.js-282-        this._cacheURL = this.url;
##############################################
/src/lib/response.js-487-        // otherwise fall back on current url.
/src/lib/response.js:488:        var parsedUri = url.parse(opt.hostname || currentFullPath, true);
/src/lib/response.js-489-
##############################################
/src/lib/router.js-98-    var re;
/src/lib/router.js:99:    var _url = url.parse(options.url).pathname;
/src/lib/router.js-100-    _url.split('/').forEach(function (frag) {
##############################################
/src/lib/plugins/multipart_body_parser.js-56-
/src/lib/plugins/multipart_body_parser.js:57:        var form = new formidable.IncomingForm();
/src/lib/plugins/multipart_body_parser.js-58-
##############################################
/src/lib/plugins/multipart_body_parser.js-85-
/src/lib/plugins/multipart_body_parser.js:86:        form.parse(req, function (err, fields, files) {
/src/lib/plugins/multipart_body_parser.js-87-            if (err) {
##############################################
/src/lib/plugins/multipart_body_parser.js-114-                        barrier.start('fs' + f);
/src/lib/plugins/multipart_body_parser.js:115:                        fs.readFile(files[f].path, function (ex, data) {
/src/lib/plugins/multipart_body_parser.js-116-                            barrier.done('fs' + f);
##############################################
/src/lib/plugins/form_body_parser.js-43-        try {
/src/lib/plugins/form_body_parser.js:44:            var params = querystring.parse(req.body);
/src/lib/plugins/form_body_parser.js-45-
##############################################
/src/lib/plugins/fielded_text_body_parser.js-55-
/src/lib/plugins/fielded_text_body_parser.js:56:        csv.parse(req.body, parserOptions, function (err, parsedBody) {
/src/lib/plugins/fielded_text_body_parser.js-57-            if (err) {
##############################################
/src/lib/plugins/conditional_request.js-121-        //
/src/lib/plugins/conditional_request.js:122:        if (Date.parse(mtime) <= Date.parse(ctime)) {
/src/lib/plugins/conditional_request.js-123-            switch (req.method) {
##############################################
/src/lib/plugins/conditional_request.js-161-    try {
/src/lib/plugins/conditional_request.js:162:        if (Date.parse(mtime) > Date.parse(ctime)) {
/src/lib/plugins/conditional_request.js-163-            err = new PreconditionFailedError(IF_UNMOD_FAIL,
##############################################
/src/lib/plugins/jsonp.js-21-        if (typeof (q) === 'string') {
/src/lib/plugins/jsonp.js:22:            req.query = qs.parse(q);
/src/lib/plugins/jsonp.js-23-        }
##############################################
/src/lib/plugins/json_body_parser.js-35-        try {
/src/lib/plugins/json_body_parser.js:36:            params = JSON.parse(req.body, options.reviver);
/src/lib/plugins/json_body_parser.js-37-        } catch (e) {
##############################################
/src/lib/plugins/query.js-31-
/src/lib/plugins/query.js:32:        req.query = qs.parse(req.getQuery());
/src/lib/plugins/query.js-33-
##############################################
/src/lib/plugins/static.js-58-
/src/lib/plugins/static.js:59:        var fstream = fs.createReadStream(file + (isGzip ? '.gz' : ''));
/src/lib/plugins/static.js-60-        var maxAge = opts.maxAge === undefined ? 3600 : opts.maxAge;
##############################################
/src/lib/clients/string_client.js-79-
/src/lib/clients/string_client.js:80:        req.once('result', self.parse(req, callback));
/src/lib/clients/string_client.js-81-        return (req.end());
##############################################
/src/lib/clients/string_client.js-106-
/src/lib/clients/string_client.js:107:            req.once('result', self.parse(req, callback));
/src/lib/clients/string_client.js-108-            req.end(data);
##############################################
/src/lib/clients/http_client.js-50-// jscs:disable maximumLineLength
/src/lib/clients/http_client.js:51:var VERSION = JSON.parse(fs.readFileSync(path.normalize(__dirname + '/../../package.json'), 'utf8')).version;
/src/lib/clients/http_client.js-52-// jscs:enable maximumLineLength
##############################################
/src/lib/clients/http_client.js-363-    this.socketPath = options.socketPath || false;
/src/lib/clients/http_client.js:364:    this.url = options.url ? url.parse(options.url) : {};
/src/lib/clients/http_client.js-365-
/src/lib/clients/http_client.js-366-    if (process.env.https_proxy) {
/src/lib/clients/http_client.js:367:        this.proxy = url.parse(process.env.https_proxy);
/src/lib/clients/http_client.js-368-    } else if (process.env.http_proxy) {
/src/lib/clients/http_client.js:369:        this.proxy = url.parse(process.env.http_proxy);
/src/lib/clients/http_client.js-370-    } else if (options.proxy) {
##############################################
/src/lib/clients/json_client.js-48-            if (data && !/^\s*$/.test(data)) {
/src/lib/clients/json_client.js:49:                obj = JSON.parse(data);
/src/lib/clients/json_client.js-50-            }
##############################################
/src/lib/server.js-261-        this.spdy = true;
/src/lib/server.js:262:        this.server = spdy.createServer(options.spdy);
/src/lib/server.js-263-    } else if ((options.cert || options.certificate) && options.key) {
##############################################
/src/lib/server.js-269-
/src/lib/server.js:270:        this.server = https.createServer({
/src/lib/server.js-271-            ca: self.ca,
##############################################
/src/lib/server.js-279-    } else if (options.httpsServerOptions) {
/src/lib/server.js:280:        this.server = https.createServer(options.httpsServerOptions);
/src/lib/server.js-281-    } else {
/src/lib/server.js:282:        this.server = http.createServer();
/src/lib/server.js-283-    }
