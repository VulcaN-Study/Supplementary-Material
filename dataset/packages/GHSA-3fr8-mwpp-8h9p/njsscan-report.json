{
  "errors": [
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_no_path",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile_light as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 102,
            "line": 1
          },
          "file": "/src/Dockerfile_light",
          "source_hash": "f991095b14eb2efb9a114ae9769e614d3c1e09a01781e4b955be34031ae51476",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .dockerignore as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 1
          },
          "file": "/src/.dockerignore",
          "source_hash": "675101987fb2ca01f045b8c596b5ef8a1fcd6aa77c16f8bcb7585e338b4f02e1",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Makefile as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/docs/Makefile",
          "source_hash": "1a5ce6882939b5e8aeaab73ec9af3f60d13e7b54f742ad820f556505ef0085fb",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_default",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile_test as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 107,
            "line": 1
          },
          "file": "/src/Dockerfile_test",
          "source_hash": "ed444608c12e44114fbecf10a2cf5c7a36d7b1d041a10dc628bef7166035bcba",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl-rtl-text.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.ssrf.node_ssrf",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 74,
            "line": 1
          },
          "file": "/src/Dockerfile",
          "source_hash": "b24348a9c4bf4ec673c9a94657cea28af32fac1a24760e798769b37e4d4c06ff",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile_light as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 102,
            "line": 1
          },
          "file": "/src/Dockerfile_light",
          "source_hash": "f991095b14eb2efb9a114ae9769e614d3c1e09a01781e4b955be34031ae51476",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl-rtl-text.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_default",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/public/resources/mapbox-gl-rtl-text.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.generic_header_injection",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .dockerignore as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 1
          },
          "file": "/src/.dockerignore",
          "source_hash": "675101987fb2ca01f045b8c596b5ef8a1fcd6aa77c16f8bcb7585e338b4f02e1",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile_test as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 107,
            "line": 1
          },
          "file": "/src/Dockerfile_test",
          "source_hash": "ed444608c12e44114fbecf10a2cf5c7a36d7b1d041a10dc628bef7166035bcba",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Makefile as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/docs/Makefile",
          "source_hash": "1a5ce6882939b5e8aeaab73ec9af3f60d13e7b54f742ad820f556505ef0085fb",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse Dockerfile as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 74,
            "line": 1
          },
          "file": "/src/Dockerfile",
          "source_hash": "b24348a9c4bf4ec673c9a94657cea28af32fac1a24760e798769b37e4d4c06ff",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "express_xss": {
      "files": [
        {
          "file_path": "/src/src/serve_data.js",
          "match_lines": [
            106,
            115
          ],
          "match_position": [
            7,
            29
          ],
          "match_string": "      const item = repo[req.params.id];\n      if (!item) {\n        return res.sendStatus(404);\n      }\n      const info = clone(item.tileJSON);\n      info.tiles = utils.getTileUrls(req, info.tiles,\n                                     `data/${req.params.id}`, info.format, item.publicUrl, {\n                                       'pbf': options.pbfAlias\n                                     });\n      return res.send(info);"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            554,
            561
          ],
          "match_position": [
            7,
            29
          ],
          "match_string": "      const item = repo[req.params.id];\n      if (!item) {\n        return res.sendStatus(404);\n      }\n      const info = clone(item.tileJSON);\n      info.tiles = utils.getTileUrls(req, info.tiles,\n        `styles/${req.params.id}`, info.format, item.publicUrl);\n      return res.send(info);"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            35,
            51
          ],
          "match_position": [
            7,
            35
          ],
          "match_string": "      const item = repo[req.params.id];\n      if (!item) {\n        return res.sendStatus(404);\n      }\n      const styleJSON_ = clone(item.styleJSON);\n      for (const name of Object.keys(styleJSON_.sources)) {\n        const source = styleJSON_.sources[name];\n        source.url = fixUrl(req, source.url, item.publicUrl);\n      }\n      // mapbox-gl-js viewer cannot handle sprite urls with query\n      if (styleJSON_.sprite) {\n        styleJSON_.sprite = fixUrl(req, styleJSON_.sprite, item.publicUrl, true);\n      }\n      if (styleJSON_.glyphs) {\n        styleJSON_.glyphs = fixUrl(req, styleJSON_.glyphs, item.publicUrl, false);\n      }\n      return res.send(styleJSON_);"
        },
        {
          "file_path": "/src/src/server.js",
          "match_lines": [
            246,
            256
          ],
          "match_position": [
            5,
            22
          ],
          "match_string": "    const query = req.query.key ? (`?key=${req.query.key}`) : '';\n    for (const id of Object.keys(serving.styles)) {\n      const styleJSON = serving.styles[id].styleJSON;\n      result.push({\n        version: styleJSON.version,\n        name: styleJSON.name,\n        id: id,\n        url: `${utils.getPublicUrl(opts.publicUrl, req)}styles/${id}/style.json${query}`\n      });\n    }\n    res.send(result);"
        }
      ],
      "metadata": {
        "cwe": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "Untrusted User Input in Response will result in Reflected Cross Site Scripting Vulnerability.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "generic_path_traversal": {
      "files": [
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            582,
            586
          ],
          "match_position": [
            15,
            18
          ],
          "match_string": "              const dir = options.paths[protocol];\n              const file = unescape(req.url).substring(protocol.length + 3);\n              fs.readFile(path.join(dir, file), (err, data) => {\n                callback(err, { data: data });\n              });"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            681,
            687
          ],
          "match_position": [
            5,
            6
          ],
          "match_string": "    const styleJSONPath = path.resolve(options.paths.styles, styleFile);\n    try {\n      styleJSON = JSON.parse(fs.readFileSync(styleJSONPath));\n    } catch (e) {\n      console.log('Error parsing style file');\n      return false;\n    }"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            59,
            71
          ],
          "match_position": [
            7,
            10
          ],
          "match_string": "      const scale = req.params.scale,\n        format = req.params.format;\n      const filename = `${item.spritePath + (scale || '')}.${format}`;\n      return fs.readFile(filename, (err, data) => {\n        if (err) {\n          console.log('Sprite load error:', filename);\n          return res.sendStatus(404);\n        } else {\n          if (format === 'json') res.header('Content-type', 'application/json');\n          if (format === 'png') res.header('Content-type', 'image/png');\n          return res.send(data);\n        }\n      });"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            80,
            88
          ],
          "match_position": [
            5,
            6
          ],
          "match_string": "    const styleFile = path.resolve(options.paths.styles, params.style);\n\n    let styleFileData;\n    try {\n      styleFileData = fs.readFileSync(styleFile);\n    } catch (e) {\n      console.log('Error reading style file');\n      return false;\n    }"
        }
      ],
      "metadata": {
        "cwe": "CWE-23: Relative Path Traversal",
        "description": "Untrusted user input in readFile()/readFileSync() can endup in Directory Traversal Attacks.",
        "owasp": "A5: Broken Access Control",
        "severity": "ERROR"
      }
    },
    "join_resolve_path_traversal": {
      "files": [
        {
          "file_path": "/src/src/serve_data.js",
          "match_lines": [
            121,
            121
          ],
          "match_position": [
            25,
            76
          ],
          "match_string": "    const mbtilesFile = path.resolve(options.paths.mbtiles, params.mbtiles);"
        },
        {
          "file_path": "/src/src/serve_font.js",
          "match_lines": [
            14,
            37
          ],
          "match_position": [
            3,
            5
          ],
          "match_string": "  const fontPath = options.paths.fonts;\n\n  const existingFonts = {};\n  const fontListingPromise = new Promise((resolve, reject) => {\n    fs.readdir(options.paths.fonts, (err, files) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      for (const file of files) {\n        fs.stat(path.join(fontPath, file), (err, stats) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          if (stats.isDirectory() &&\n            fs.existsSync(path.join(fontPath, file, '0-255.pbf'))) {\n            existingFonts[path.basename(file)] = true;\n          }\n        });\n      }\n      resolve();\n    });\n  });"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            209,
            209
          ],
          "match_position": [
            19,
            55
          ],
          "match_string": "          fs.stat(path.join(options.paths.fonts, file), (err, stats) => {"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            582,
            586
          ],
          "match_position": [
            15,
            18
          ],
          "match_string": "              const dir = options.paths[protocol];\n              const file = unescape(req.url).substring(protocol.length + 3);\n              fs.readFile(path.join(dir, file), (err, data) => {\n                callback(err, { data: data });\n              });"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            681,
            681
          ],
          "match_position": [
            27,
            72
          ],
          "match_string": "    const styleJSONPath = path.resolve(options.paths.styles, styleFile);"
        },
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            762,
            762
          ],
          "match_position": [
            25,
            73
          ],
          "match_string": "          mbtilesFile = path.resolve(options.paths.mbtiles, mbtilesFile);"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            80,
            144
          ],
          "match_position": [
            5,
            6
          ],
          "match_string": "    const styleFile = path.resolve(options.paths.styles, params.style);\n\n    let styleFileData;\n    try {\n      styleFileData = fs.readFileSync(styleFile);\n    } catch (e) {\n      console.log('Error reading style file');\n      return false;\n    }\n\n    let validationErrors = validate(styleFileData);\n    if (validationErrors.length > 0) {\n      console.log(`The file \"${params.style}\" is not valid a valid style file:`);\n      for (const err of validationErrors) {\n        console.log(`${err.line}: ${err.message}`);\n      }\n      return false;\n    }\n    let styleJSON = JSON.parse(styleFileData);\n\n    for (const name of Object.keys(styleJSON.sources)) {\n      const source = styleJSON.sources[name];\n      const url = source.url;\n      if (url && url.lastIndexOf('mbtiles:', 0) === 0) {\n        let mbtilesFile = url.substring('mbtiles://'.length);\n        const fromData = mbtilesFile[0] === '{' &&\n          mbtilesFile[mbtilesFile.length - 1] === '}';\n\n        if (fromData) {\n          mbtilesFile = mbtilesFile.substr(1, mbtilesFile.length - 2);\n          const mapsTo = (params.mapping || {})[mbtilesFile];\n          if (mapsTo) {\n            mbtilesFile = mapsTo;\n          }\n        }\n        const identifier = reportTiles(mbtilesFile, fromData);\n        if (!identifier) {\n          return false;\n        }\n        source.url = `local://data/${identifier}.json`;\n      }\n    }\n\n    for (let obj of styleJSON.layers) {\n      if (obj['type'] === 'symbol') {\n        const fonts = (obj['layout'] || {})['text-font'];\n        if (fonts && fonts.length) {\n          fonts.forEach(reportFont);\n        } else {\n          reportFont('Open Sans Regular');\n          reportFont('Arial Unicode MS Regular');\n        }\n      }\n    }\n\n    let spritePath;\n\n    if (styleJSON.sprite && !httpTester.test(styleJSON.sprite)) {\n      spritePath = path.join(options.paths.sprites,\n        styleJSON.sprite\n          .replace('{style}', path.basename(styleFile, '.json'))\n          .replace('{styleJsonFolder}', path.relative(options.paths.sprites, path.dirname(styleFile)))\n      );\n      styleJSON.sprite = `local://styles/${id}/sprite`;\n    }"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            80,
            80
          ],
          "match_position": [
            23,
            71
          ],
          "match_string": "    const styleFile = path.resolve(options.paths.styles, params.style);"
        },
        {
          "file_path": "/src/src/serve_style.js",
          "match_lines": [
            138,
            142
          ],
          "match_position": [
            20,
            8
          ],
          "match_string": "      spritePath = path.join(options.paths.sprites,\n        styleJSON.sprite\n          .replace('{style}', path.basename(styleFile, '.json'))\n          .replace('{styleJsonFolder}', path.relative(options.paths.sprites, path.dirname(styleFile)))\n      );"
        }
      ],
      "metadata": {
        "cwe": "CWE-22: Improper Limitation of a Pathname to a Restricted Directory (Path Traversal)",
        "description": "Path constructed with user input can result in Path Traversal. Ensure that user input does not reach `join()` or `resolve()`. ",
        "owasp": "A5: Broken Access Control",
        "severity": "WARNING"
      }
    },
    "node_sqli_injection": {
      "files": [
        {
          "file_path": "/src/public/resources/mapbox.js",
          "match_lines": [
            29,
            29
          ],
          "match_position": [
            3645,
            3768
          ],
          "match_string": "\"use strict\";var geocoder=require(\"./geocoder\"),util=require(\"./util\"),GeocoderControl=L.Control.extend({includes:L.Mixin.Events,options:{proximity:!0,position:\"topleft\",pointZoom:16,keepOpen:!1,autocomplete:!1},initialize:function(t,e){L.Util.setOptions(this,e),this.setURL(t),this._updateSubmit=L.bind(this._updateSubmit,this),this._updateAutocomplete=L.bind(this._updateAutocomplete,this),this._chooseResult=L.bind(this._chooseResult,this)},setURL:function(t){return this.geocoder=geocoder(t,{accessToken:this.options.accessToken}),this},getURL:function(){return this.geocoder.getURL()},setID:function(t){return this.setURL(t)},setTileJSON:function(t){return this.setURL(t.geocoder)},_toggle:function(t){t&&L.DomEvent.stop(t),L.DomUtil.hasClass(this._container,\"active\")?(L.DomUtil.removeClass(this._container,\"active\"),this._results.innerHTML=\"\",this._input.blur()):(L.DomUtil.addClass(this._container,\"active\"),this._input.focus(),this._input.select())},_closeIfOpen:function(){L.DomUtil.hasClass(this._container,\"active\")&&!this.options.keepOpen&&(L.DomUtil.removeClass(this._container,\"active\"),this._results.innerHTML=\"\",this._input.blur())},onAdd:function(t){var e=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder leaflet-bar leaflet-control\"),i=L.DomUtil.create(\"a\",\"leaflet-control-mapbox-geocoder-toggle mapbox-icon mapbox-icon-geocoder\",e),o=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder-results\",e),s=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder-wrap\",e),n=L.DomUtil.create(\"form\",\"leaflet-control-mapbox-geocoder-form\",s),r=L.DomUtil.create(\"input\",\"\",n);return i.href=\"#\",i.innerHTML=\"&nbsp;\",r.type=\"text\",r.setAttribute(\"placeholder\",\"Search\"),L.DomEvent.addListener(n,\"submit\",this._geocode,this),L.DomEvent.addListener(r,\"keyup\",this._autocomplete,this),L.DomEvent.disableClickPropagation(e),this._map=t,this._results=o,this._input=r,this._form=n,this.options.keepOpen?L.DomUtil.addClass(e,\"active\"):(this._map.on(\"click\",this._closeIfOpen,this),L.DomEvent.addListener(i,\"click\",this._toggle,this)),e},_updateSubmit:function(t,e){if(L.DomUtil.removeClass(this._container,\"searching\"),this._results.innerHTML=\"\",t||!e)this.fire(\"error\",{error:t});else{var i=[];e.results&&e.results.features&&(i=e.results.features),1===i.length?(this.fire(\"autoselect\",{feature:i[0]}),this.fire(\"found\",{results:e.results}),this._chooseResult(i[0]),this._closeIfOpen()):i.length>1?(this.fire(\"found\",{results:e.results}),this._displayResults(i)):this._displayResults(i)}},_updateAutocomplete:function(t,e){if(this._results.innerHTML=\"\",t||!e)this.fire(\"error\",{error:t});else{var i=[];e.results&&e.results.features&&(i=e.results.features),i.length&&this.fire(\"found\",{results:e.results}),this._displayResults(i)}},_displayResults:function(t){for(var e=0,i=Math.min(t.length,5);i>e;e++){var o=t[e],s=o.place_name;if(s.length){var n=L.DomUtil.create(\"a\",\"\",this._results),r=\"innerText\"in n?\"innerText\":\"textContent\";n[r]=s,n.setAttribute(\"title\",s),n.href=\"#\",L.bind(function(t){L.DomEvent.addListener(n,\"click\",function(e){this._chooseResult(t),L.DomEvent.stop(e),this.fire(\"select\",{feature:t})},this)},this)(o)}}if(t.length>5){var l=L.DomUtil.create(\"span\",\"\",this._results);l.innerHTML=\"Top 5 of \"+t.length+\"  results\"}},_chooseResult:function(t){t.bbox?this._map.fitBounds(util.lbounds(t.bbox)):t.center&&this._map.setView([t.center[1],t.center[0]],void 0===this._map.getZoom()?this.options.pointZoom:Math.max(this._map.getZoom(),this.options.pointZoom))},_geocode:function(t){return L.DomEvent.preventDefault(t),\"\"===this._input.value?this._updateSubmit():(L.DomUtil.addClass(this._container,\"searching\"),void this.geocoder.query({query:this._input.value,proximity:this.options.proximity?this._map.getCenter():!1},this._updateSubmit))},_autocomplete:function(){return this.options.autocomplete?\"\"===this._input.value?this._updateAutocomplete():void this.geocoder.query({query:this._input.value,proximity:this.options.proximity?this._map.getCenter():!1},this._updateAutocomplete):void 0}});module.exports.GeocoderControl=GeocoderControl,module.exports.geocoderControl=function(t,e){return new GeocoderControl(t,e)};"
        },
        {
          "file_path": "/src/public/resources/mapbox.js",
          "match_lines": [
            29,
            29
          ],
          "match_position": [
            3884,
            4013
          ],
          "match_string": "\"use strict\";var geocoder=require(\"./geocoder\"),util=require(\"./util\"),GeocoderControl=L.Control.extend({includes:L.Mixin.Events,options:{proximity:!0,position:\"topleft\",pointZoom:16,keepOpen:!1,autocomplete:!1},initialize:function(t,e){L.Util.setOptions(this,e),this.setURL(t),this._updateSubmit=L.bind(this._updateSubmit,this),this._updateAutocomplete=L.bind(this._updateAutocomplete,this),this._chooseResult=L.bind(this._chooseResult,this)},setURL:function(t){return this.geocoder=geocoder(t,{accessToken:this.options.accessToken}),this},getURL:function(){return this.geocoder.getURL()},setID:function(t){return this.setURL(t)},setTileJSON:function(t){return this.setURL(t.geocoder)},_toggle:function(t){t&&L.DomEvent.stop(t),L.DomUtil.hasClass(this._container,\"active\")?(L.DomUtil.removeClass(this._container,\"active\"),this._results.innerHTML=\"\",this._input.blur()):(L.DomUtil.addClass(this._container,\"active\"),this._input.focus(),this._input.select())},_closeIfOpen:function(){L.DomUtil.hasClass(this._container,\"active\")&&!this.options.keepOpen&&(L.DomUtil.removeClass(this._container,\"active\"),this._results.innerHTML=\"\",this._input.blur())},onAdd:function(t){var e=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder leaflet-bar leaflet-control\"),i=L.DomUtil.create(\"a\",\"leaflet-control-mapbox-geocoder-toggle mapbox-icon mapbox-icon-geocoder\",e),o=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder-results\",e),s=L.DomUtil.create(\"div\",\"leaflet-control-mapbox-geocoder-wrap\",e),n=L.DomUtil.create(\"form\",\"leaflet-control-mapbox-geocoder-form\",s),r=L.DomUtil.create(\"input\",\"\",n);return i.href=\"#\",i.innerHTML=\"&nbsp;\",r.type=\"text\",r.setAttribute(\"placeholder\",\"Search\"),L.DomEvent.addListener(n,\"submit\",this._geocode,this),L.DomEvent.addListener(r,\"keyup\",this._autocomplete,this),L.DomEvent.disableClickPropagation(e),this._map=t,this._results=o,this._input=r,this._form=n,this.options.keepOpen?L.DomUtil.addClass(e,\"active\"):(this._map.on(\"click\",this._closeIfOpen,this),L.DomEvent.addListener(i,\"click\",this._toggle,this)),e},_updateSubmit:function(t,e){if(L.DomUtil.removeClass(this._container,\"searching\"),this._results.innerHTML=\"\",t||!e)this.fire(\"error\",{error:t});else{var i=[];e.results&&e.results.features&&(i=e.results.features),1===i.length?(this.fire(\"autoselect\",{feature:i[0]}),this.fire(\"found\",{results:e.results}),this._chooseResult(i[0]),this._closeIfOpen()):i.length>1?(this.fire(\"found\",{results:e.results}),this._displayResults(i)):this._displayResults(i)}},_updateAutocomplete:function(t,e){if(this._results.innerHTML=\"\",t||!e)this.fire(\"error\",{error:t});else{var i=[];e.results&&e.results.features&&(i=e.results.features),i.length&&this.fire(\"found\",{results:e.results}),this._displayResults(i)}},_displayResults:function(t){for(var e=0,i=Math.min(t.length,5);i>e;e++){var o=t[e],s=o.place_name;if(s.length){var n=L.DomUtil.create(\"a\",\"\",this._results),r=\"innerText\"in n?\"innerText\":\"textContent\";n[r]=s,n.setAttribute(\"title\",s),n.href=\"#\",L.bind(function(t){L.DomEvent.addListener(n,\"click\",function(e){this._chooseResult(t),L.DomEvent.stop(e),this.fire(\"select\",{feature:t})},this)},this)(o)}}if(t.length>5){var l=L.DomUtil.create(\"span\",\"\",this._results);l.innerHTML=\"Top 5 of \"+t.length+\"  results\"}},_chooseResult:function(t){t.bbox?this._map.fitBounds(util.lbounds(t.bbox)):t.center&&this._map.setView([t.center[1],t.center[0]],void 0===this._map.getZoom()?this.options.pointZoom:Math.max(this._map.getZoom(),this.options.pointZoom))},_geocode:function(t){return L.DomEvent.preventDefault(t),\"\"===this._input.value?this._updateSubmit():(L.DomUtil.addClass(this._container,\"searching\"),void this.geocoder.query({query:this._input.value,proximity:this.options.proximity?this._map.getCenter():!1},this._updateSubmit))},_autocomplete:function(){return this.options.autocomplete?\"\"===this._input.value?this._updateAutocomplete():void this.geocoder.query({query:this._input.value,proximity:this.options.proximity?this._map.getCenter():!1},this._updateAutocomplete):void 0}});module.exports.GeocoderControl=GeocoderControl,module.exports.geocoderControl=function(t,e){return new GeocoderControl(t,e)};"
        }
      ],
      "metadata": {
        "cwe": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "description": "Untrusted input concatinated with raw SQL query can result in SQL Injection.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_ssrf": {
      "files": [
        {
          "file_path": "/src/src/serve_rendered.js",
          "match_lines": [
            636,
            663
          ],
          "match_position": [
            15,
            17
          ],
          "match_string": "              request({\n                url: req.url,\n                encoding: null,\n                gzip: true\n              }, (err, res, body) => {\n                const parts = url.parse(req.url);\n                const extension = path.extname(parts.pathname).toLowerCase();\n                const format = extensionToFormat[extension] || '';\n                if (err || res.statusCode < 200 || res.statusCode >= 300) {\n                  // console.log('HTTP error', err || res.statusCode);\n                  createEmptyResponse(format, '', callback);\n                  return;\n                }\n\n                const response = {};\n                if (res.headers.modified) {\n                  response.modified = new Date(res.headers.modified);\n                }\n                if (res.headers.expires) {\n                  response.expires = new Date(res.headers.expires);\n                }\n                if (res.headers.etag) {\n                  response.etag = res.headers.etag;\n                }\n\n                response.data = body;\n                callback(null, response);\n              });"
        }
      ],
      "metadata": {
        "cwe": "CWE-918: Server-Side Request Forgery (SSRF)",
        "description": "User controlled URL in http client libraries can result in Server Side Request Forgery (SSRF).",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    },
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/public/resources/leaflet-hash.js",
          "match_lines": [
            89,
            92
          ],
          "match_position": [
            4,
            5
          ],
          "match_string": "\t\t\tif (this.lastHash != hash) {\n\t\t\t\tlocation.replace(hash);\n\t\t\t\tthis.lastHash = hash;\n\t\t\t}"
        },
        {
          "file_path": "/src/public/resources/leaflet-hash.js",
          "match_lines": [
            98,
            100
          ],
          "match_position": [
            4,
            5
          ],
          "match_string": "\t\t\tif (hash === this.lastHash) {\n\t\t\t\treturn;\n\t\t\t}"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/src/serve_data.js",
          "match_lines": [
            44,
            44
          ],
          "match_position": [
            15,
            49
          ],
          "match_string": "          if (/does not exist/.test(err.message)) {"
        },
        {
          "file_path": "/src/src/utils.js",
          "match_lines": [
            18,
            21
          ],
          "match_position": [
            5,
            61
          ],
          "match_string": "    const host = req.headers.host;\n    const hostParts = host.split('.');\n    const relativeSubdomainsUsable = hostParts.length > 1 &&\n      !/^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\:[0-9]+)?$/.test(host);"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {
    "handlebar_mustache_template": {
      "files": [
        {
          "file_path": "/src/public/templates/index.tmpl",
          "match_lines": [
            48,
            48
          ],
          "match_position": [
            2057,
            2070
          ],
          "match_string": "{{&xyz_link}}"
        },
        {
          "file_path": "/src/public/templates/index.tmpl",
          "match_lines": [
            89,
            89
          ],
          "match_position": [
            3914,
            3927
          ],
          "match_string": "{{&xyz_link}}"
        },
        {
          "file_path": "/src/public/templates/index.tmpl",
          "match_lines": [
            85,
            85
          ],
          "match_position": [
            3681,
            3695
          ],
          "match_string": "{{&wmts_link}}"
        },
        {
          "file_path": "/src/public/templates/index.tmpl",
          "match_lines": [
            7,
            7
          ],
          "match_position": [
            278,
            292
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            302,
            316
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            9,
            9
          ],
          "match_position": [
            399,
            413
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            11,
            11
          ],
          "match_position": [
            526,
            540
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            7,
            7
          ],
          "match_position": [
            242,
            256
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            30,
            30
          ],
          "match_position": [
            1221,
            1235
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            1405,
            1419
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            27,
            27
          ],
          "match_position": [
            1088,
            1102
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/viewer.tmpl",
          "match_lines": [
            10,
            10
          ],
          "match_position": [
            456,
            470
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            259,
            273
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            23,
            23
          ],
          "match_position": [
            1166,
            1180
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            21,
            21
          ],
          "match_position": [
            1039,
            1053
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            77,
            77
          ],
          "match_position": [
            2642,
            2656
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            9,
            9
          ],
          "match_position": [
            360,
            374
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            11,
            11
          ],
          "match_position": [
            499,
            513
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            10,
            10
          ],
          "match_position": [
            420,
            434
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            45,
            45
          ],
          "match_position": [
            1688,
            1702
          ],
          "match_string": "{{&key_query}}"
        },
        {
          "file_path": "/src/public/templates/data.tmpl",
          "match_lines": [
            22,
            22
          ],
          "match_position": [
            1096,
            1110
          ],
          "match_string": "{{&key_query}}"
        }
      ],
      "metadata": {
        "cwe": "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "description": "The Handlebar.js/Mustache.js template has an unescaped variable. Untrusted user input passed to this variable results in Cross Site Scripting (XSS).",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  }
}