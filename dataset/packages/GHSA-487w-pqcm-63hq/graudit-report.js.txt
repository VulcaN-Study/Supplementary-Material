/src/lib/src/modules/Request/Http/AbstractHttp.js-42-        var thus = this;
/src/lib/src/modules/Request/Http/AbstractHttp.js:43:        this._request.open(this._method, this._url, true);
/src/lib/src/modules/Request/Http/AbstractHttp.js-44-        if(this._onSuccess)
##############################################
/src/lib/src/includes/devLaunch.js-2-	var BUNS_REQ = new XMLHttpRequest(), script = document.createElement('script');
/src/lib/src/includes/devLaunch.js:3:	BUNS_REQ.open('get', val, false);
/src/lib/src/includes/devLaunch.js-4-	BUNS_REQ.onload = function (response) {
/src/lib/src/includes/devLaunch.js:5:		//eval(response.target.responseText);
/src/lib/src/includes/devLaunch.js-6-	};
##############################################
/src/lib/src/core/Environment/Tools/Tools.js-38-                    try {
/src/lib/src/core/Environment/Tools/Tools.js:39:                        return JSON.parse(value);
/src/lib/src/core/Environment/Tools/Tools.js-40-                    } catch (e) {}
##############################################
/src/lib/index.js-54-try {
/src/lib/index.js:55:    localConfig = JSON.parse(fs.readFileSync(BUILD_CONF), 'utf-8')
/src/lib/index.js-56-} catch(e) {
##############################################
/src/lib/index.js-298-    function enableDebug() {
/src/lib/index.js:299:        var tempCode = code, parsed = esprima.parse(code, {
/src/lib/index.js-300-            range: true,//set to true to inject code at nth char
##############################################
/src/lib/index.js-468-
/src/lib/index.js:469:    var path = moduleDir + name + DS, moduleConf = JSON.parse(fs.readFileSync(path + 'package.json', 'utf-8')),
/src/lib/index.js-470-        loadedModules = moduleOrder.map(function(val) {
##############################################
/src/lib/index.js-587-        if('dev' === config.mode) {
/src/lib/index.js:588:            var confBuns = JSON.parse(fs.readFileSync(__buns + 'package.json')),
/src/lib/index.js:589:                infos = JSON.parse(exec('npm info buns --json').toString('utf8'));
/src/lib/index.js-590-            fs.appendFileSync(currentPath + TEMP_FILE, NL + `var BUNS_FILES = ["` + requiredPaths.join('","') + `"],`);
##############################################
/src/lib/index.js-615-        if('dev' === config.mode) {
/src/lib/index.js:616:            walk(esprima.parse(code, {
/src/lib/index.js-617-                range: true,//set to true to inject code at nth char
##############################################
/src/lib/index.js-672-            command += ' --only=dev';
/src/lib/index.js:673:            var confBuns = JSON.parse(fs.readFileSync(__buns + 'package.json'));
/src/lib/index.js-674-            confBuns.devDependencies = localConfig.modules;
##############################################
/src/lib/index.js-680-        if(requestedModule) {
/src/lib/index.js:681:            var conf = JSON.parse(fs.readFileSync(modulesPath + name + DS + 'package.json'));
/src/lib/index.js-682-            saveModule(conf);
##############################################
/src/lib/index.js-731-                if('dev' === config.mode) {
/src/lib/index.js:732:                    walk(esprima.parse(code, {
/src/lib/index.js-733-                        range: true,//set to true to inject code at nth char
##############################################
/src/lib/index.js-790-                if('dev' === config.mode) {
/src/lib/index.js:791:                    walk(esprima.parse(code, {
/src/lib/index.js-792-                        range: true,//set to true to inject code at nth char
##############################################
/src/lib/index.js-847-                if('dev' === config.mode) {
/src/lib/index.js:848:                    walk(esprima.parse(code, {
/src/lib/index.js-849-                        range: true,//set to true to inject code at nth char
