<report_mosca>
 <Path>/src/src/Path.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1017 -  				// The test / query object key is an object, recurse

 Line: 1024 -  				// The test / query object has a property that is not an object so add it as a key

 Line: 1064 -   * Determines if the query data exists anywhere inside the source

 Line: 1065 -   * data. Will recurse into arrays and objects to find query.

 Line: 1067 -   * @param {*} query The query data to find.

 Line: 1068 -   * @returns {Boolean} True if query was matched, false if not.

 Line: 1070 -  const match = (source, query) => {

 Line: 1072 -  	const queryType = typeof query;

 Line: 1074 -  	if (sourceType !== queryType) {

 Line: 1080 -  		return source === query;

 Line: 1105 -   * root source object if it matches the query.

 Line: 1112 -   * @param {*} query The query to match.

 Line: 1118 -  const findPath = (source, query, options = {maxDepth: Infinity, currentDepth: 0, includeRoot: true}, parentPath = "") => {

 Line: 1130 -  		if (match(source, query)) {

 Line: 1142 -  			const result = findPath(val, query, options, join(parentPath, key));

 Line: 1157 -   * @param {*} query The query to match.

 Line: 1163 -  const findOnePath = (source, query, options = {maxDepth: Infinity, currentDepth: 0, includeRoot: true}, parentPath = "") => {

 Line: 1174 -  		if (match(source, query)) {

 Line: 1192 -  			const result = findOnePath(val, query, options, subPath);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/path.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 727 -  			it("Will return true for matching two objects with a matching query", () => {

 Line: 733 -  			it("Will return true for matching two objects with a matching query and extended source", () => {

 Line: 753 -  			it("Will return false for matching two objects with a matching query", () => {

 Line: 759 -  			it("Will return false for matching two objects with a matching query and extended source", () => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/Path.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1084 -          // The test / query object key is an object, recurse

 Line: 1090 -          // The test / query object has a property that is not an object so add it as a key

 Line: 1130 -   * Determines if the query data exists anywhere inside the source

 Line: 1131 -   * data. Will recurse into arrays and objects to find query.

 Line: 1133 -   * @param {*} query The query data to find.

 Line: 1134 -   * @returns {Boolean} True if query was matched, false if not.

 Line: 1138 -  var match = function match(source, query) {

 Line: 1140 -    var queryType = (0, _typeof2["default"])(query);

 Line: 1142 -    if (sourceType !== queryType) {

 Line: 1148 -      return source === query;

 Line: 1174 -   * root source object if it matches the query.

 Line: 1181 -   * @param {*} query The query to match.

 Line: 1189 -  var findPath = function findPath(source, query) {

 Line: 1205 -      if (match(source, query)) {

 Line: 1220 -        var result = findPath(val, query, options, join(parentPath, key));

 Line: 1237 -   * @param {*} query The query to match.

 Line: 1245 -  var findOnePath = function findOnePath(source, query) {

 Line: 1260 -      if (match(source, query)) {

 Line: 1280 -        var result = findOnePath(val, query, options, subPath);

</Result>
</report_mosca>

