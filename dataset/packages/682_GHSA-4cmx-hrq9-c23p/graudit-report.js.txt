/src/README.md-27-var aedes = require('aedes')()
/src/README.md:28:var server = require('net').createServer(aedes.handle)
/src/README.md-29-var port = 1883
##############################################
/src/README.md-46-
/src/README.md:47:var server = require('tls').createServer(options, aedes.handle)
/src/README.md-48-
##############################################
/src/README.md-154-var aedes = require('./aedes')()
/src/README.md:155:var server = require('net').createServer(aedes.handle)
/src/README.md-156-```
##############################################
/src/benchmarks/bombing.js-3-var mqtt = require('mqtt')
/src/benchmarks/bombing.js:4:var client = mqtt.connect({ port: 1883, host: 'localhost', clean: true, keepalive: 0 })
/src/benchmarks/bombing.js-5-
##############################################
/src/benchmarks/throughputCounter.js-4-
/src/benchmarks/throughputCounter.js:5:var client = mqtt.connect({ port: 1883, host: 'localhost', clean: true, encoding: 'binary', keepalive: 0 })
/src/benchmarks/throughputCounter.js-6-var counter = 0
##############################################
/src/benchmarks/throughputCounterQoS1.js-4-
/src/benchmarks/throughputCounterQoS1.js:5:var client = mqtt.connect({ port: 1883, host: 'localhost', clean: true, encoding: 'binary', keepalive: 0 })
/src/benchmarks/throughputCounterQoS1.js-6-var counter = 0
##############################################
/src/benchmarks/server.js-5-var aedes = require('../')()
/src/benchmarks/server.js:6:var server = require('net').createServer(aedes.handle)
/src/benchmarks/server.js-7-var port = 1883
##############################################
/src/benchmarks/pingpong.js-5-var mode = require('compute-mode')
/src/benchmarks/pingpong.js:6:var client = mqtt.connect({ port: 1883, host: 'localhost', clean: true, keepalive: 0 })
/src/benchmarks/pingpong.js-7-
##############################################
/src/benchmarks/pingpong.js-30-client.on('message', function (topic, payload) {
/src/benchmarks/pingpong.js:31:  var sentAt = JSON.parse(payload)
/src/benchmarks/pingpong.js-32-  var diff = process.hrtime(sentAt)
##############################################
/src/benchmarks/bombingQoS1.js-3-var mqtt = require('mqtt')
/src/benchmarks/bombingQoS1.js:4:var client = mqtt.connect({ port: 1883, host: 'localhost', clean: true, keepalive: 0 })
/src/benchmarks/bombingQoS1.js-5-
##############################################
/src/lib/client.js-60-      if (buf) {
/src/lib/client.js:61:        client.parser.parse(buf)
/src/lib/client.js-62-      }
##############################################
/src/test/not-blocking.js-10-  var instance = aedes()
/src/test/not-blocking.js:11:  var server = net.createServer(instance.handle)
/src/test/not-blocking.js-12-  var total = 10000
##############################################
/src/test/not-blocking.js-18-
/src/test/not-blocking.js:19:    var publisher = mqtt.connect({
/src/test/not-blocking.js-20-      port: port,
##############################################
/src/test/not-blocking.js-39-    function startSubscriber () {
/src/test/not-blocking.js:40:      subscriber = mqtt.connect({
/src/test/not-blocking.js-41-        port: port,
##############################################
/src/test/not-blocking.js-76-  var instance = aedes({ concurrency: 15 })
/src/test/not-blocking.js:77:  var server = net.createServer(instance.handle)
/src/test/not-blocking.js-78-  var total = 10000
##############################################
/src/test/not-blocking.js-84-
/src/test/not-blocking.js:85:    var publisher = mqtt.connect({
/src/test/not-blocking.js-86-      port: port,
##############################################
/src/test/not-blocking.js-105-    function startSubscriber () {
/src/test/not-blocking.js:106:      subscriber = mqtt.connect({
/src/test/not-blocking.js-107-        port: port,
##############################################
/src/example.js-3-var aedes = require('./aedes')()
/src/example.js:4:var server = require('net').createServer(aedes.handle)
/src/example.js:5:var httpServer = require('http').createServer()
/src/example.js-6-var ws = require('websocket-stream')
##############################################
/src/example.js-13-
/src/example.js:14:ws.createServer({
/src/example.js-15-  server: httpServer
