/src/README.md-16-
/src/README.md:17:Http.createServer((request, response) => {
/src/README.md-18-
/src/README.md:19:    Subtext.parse(request, null, { parse: true, output: 'data' }, (err, parsed) => {
/src/README.md-20-
##############################################
/src/lib/index.js-80-    if (this.settings.parse === true) {
/src/lib/index.js:81:        return this.parse(contentType);
/src/lib/index.js-82-    }
##############################################
/src/lib/index.js-139-    if (output === 'file') {
/src/lib/index.js:140:        this.writeFile(source, this.settings, (err, path, bytes) => {
/src/lib/index.js-141-
##############################################
/src/lib/index.js-217-    if (output === 'file') {
/src/lib/index.js:218:        this.writeFile(source, this.settings, (err, path, bytes) => {
/src/lib/index.js-219-
##############################################
/src/lib/index.js-283-    try {
/src/lib/index.js:284:        parsed = Bourne.parse(payload.toString('utf8'));
/src/lib/index.js-285-    }
##############################################
/src/lib/index.js-360-            pendingFiles[id] = true;
/src/lib/index.js:361:            this.writeFile(part, this.settings, (err, path, bytes) => {
/src/lib/index.js-362-
##############################################
/src/lib/index.js-460-        file.destroy();
/src/lib/index.js:461:        Fs.unlink(path, (/* fsErr */) => {      // Ignore unlink errors
/src/lib/index.js-462-
