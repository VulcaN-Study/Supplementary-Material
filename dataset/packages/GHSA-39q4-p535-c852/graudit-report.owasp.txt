/src/php/var/unserialize.js-302-function expectClass(str, cache) {
/src/php/var/unserialize.js:303:  // can't be well supported, because requires calling eval (or similar)
/src/php/var/unserialize.js-304-  // in order to call serialized constructor name
##############################################
/src/php/var/is_callable.js.map:1:{"version":3,"sources":["../../../src/php/var/is_callable.js"],"names":["module","exports","is_callable","mixedVar","syntaxOnly","callableName","$global","window","global","validJSFunctionNamePattern","name","obj","method","validFunctionName","getFuncName","fn","exec","test","toString","match","Object","prototype","call","length","constructor","eval"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,QAAtB,EAAgCC,UAAhC,EAA4CC,YAA5C,EAA0D;AAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,UAAW,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAxD;;AAEA,MAAIC,6BAA6B,kDAAjC;;AAEA,MAAIC,OAAO,EAAX;AACA,MAAIC,MAAM,EAAV;AACA,MAAIC,SAAS,EAAb;AACA,MAAIC,oBAAoB,KAAxB;;AAEA,MAAIC,cAAc,SAAdA,WAAc,CAAUC,EAAV,EAAc;AAC9B,QAAIL,OAAQ,6BAAD,CAAgCM,IAAhC,CAAqCD,EAArC,CAAX;AACA,QAAI,CAACL,IAAL,EAAW;AACT,aAAO,aAAP;AACD;AACD,WAAOA,KAAK,CAAL,CAAP;AACD,GAND;;AAQA;AACA,MAAI,oBAAoBO,IAApB,CAAyBd,SAASe,QAAT,EAAzB,CAAJ,EAAmD;AACjD,WAAO,KAAP;AACD;;AAED,MAAI,OAAOf,QAAP,KAAoB,QAAxB,EAAkC;AAChCQ,UAAML,OAAN;AACAM,aAAST,QAAT;AACAO,WAAOP,QAAP;AACAU,wBAAoB,CAAC,CAACH,KAAKS,KAAL,CAAWV,0BAAX,CAAtB;AACD,GALD,MAKO,IAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;AACzC,WAAO,IAAP;AACD,GAFM,MAEA,IAAIiB,OAAOC,SAAP,CAAiBH,QAAjB,CAA0BI,IAA1B,CAA+BnB,QAA/B,MAA6C,gBAA7C,IACTA,SAASoB,MAAT,KAAoB,CADX,IAET,QAAOpB,SAAS,CAAT,CAAP,MAAuB,QAFd,IAGT,OAAOA,SAAS,CAAT,CAAP,KAAuB,QAHlB,EAG4B;AACjCQ,UAAMR,SAAS,CAAT,CAAN;AACAS,aAAST,SAAS,CAAT,CAAT;AACAO,WAAO,CAACC,IAAIa,WAAJ,IAAmBV,YAAYH,IAAIa,WAAhB,CAApB,IAAoD,IAApD,GAA2DZ,MAAlE;AACD;;AAED,MAAIR,cAAc,OAAOO,IAAIC,MAAJ,CAAP,KAAuB,UAAzC,EAAqD;AACnD,QAAIP,YAAJ,EAAkB;AAChBC,cAAQD,YAAR,IAAwBK,IAAxB;AACD;AACD,WAAO,IAAP;AACD;;AAED;AACA,MAAIG,qBAAqB,OAAOY,KAAKb,MAAL,CAAP,KAAwB,UAAjD,EAA6D;AAAE;AAC7D,QAAIP,YAAJ,EAAkB;AAChBC,cAAQD,YAAR,IAAwBK,IAAxB;AACD;AACD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAtFD","file":"is_callable.js","sourcesContent":["module.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_callable/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //    input by: Fran√ßois\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: KnightYoshi\n  // improved by: Waldo Malqui Silva (https://fayr.us/waldo/)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n  //   example 5: is_callable(class MyClass {})\n  //   returns 5: false\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  var name = ''\n  var obj = {}\n  var method = ''\n  var validFunctionName = false\n\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  // eslint-disable-next-line no-useless-escape\n  if (/(^class|\\(this\\,)/.test(mixedVar.toString())) {\n    return false\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n"]}
##############################################
/src/php/var/is_callable.js-18-  //      note 1: being kept on the object prototype
/src/php/var/is_callable.js:19:  //      note 2: Depending on the `callableName` that is passed, this function can use eval.
/src/php/var/is_callable.js:20:  //      note 2: The eval input is however checked to only allow valid function names,
/src/php/var/is_callable.js:21:  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)
/src/php/var/is_callable.js-22-  //      note 2: already pass any function to be executed here.
##############################################
/src/php/var/is_callable.js-80-  // validFunctionName avoids exploits
/src/php/var/is_callable.js:81:  if (validFunctionName && typeof eval(method) === 'function') {
/src/php/var/is_callable.js:82:    // eslint-disable-line no-eval
/src/php/var/is_callable.js-83-    if (callableName) {
##############################################
/src/php/var/unserialize.js.map:1:{"version":3,"sources":["../../../src/php/var/unserialize.js"],"names":["initCache","store","cache","value","push","get","index","length","RangeError","expectType","str","types","type","exec","SyntaxError","expectBool","expectInt","expectFloat","expectString","expectEscapedString","expectArray","expectObject","expectClass","expectReference","reBool","match","boolMatch","reInt","intMatch","parseInt","reFloat","floatMatch","floatValue","Number","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","readBytes","len","escapedString","bytes","out","c","strLen","wasHighSurrogate","escapedChars","chr","charAt","code","charCodeAt","isHighSurrogate","isLowSurrogate","String","fromCharCode","substr","reStrLength","byteLenMatch","strMatch","startsWith","strLenMatch","expectKeyOrIndex","err","reObjectLiteral","objectLiteralBeginMatch","className","propCountMatch","totalOffset","propCount","obj","i","prop","Error","reRef","refIndex","reArrayLength","arrayLiteralBeginMatch","arrayLengthMatch","array","expectArrayItems","expectedItems","key","hasStringKeys","item","items","Object","assign","module","exports","unserialize","console","error"],"mappings":"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","file":"unserialize.js","sourcesContent":["function initCache () {\n  const store = []\n  // cache only first element, second is length to jump ahead for the parser\n  const cache = function cache (value) {\n    store.push(value[0])\n    return value\n  }\n\n  cache.get = (index) => {\n    if (index >= store.length) {\n      throw RangeError(`Can't resolve reference ${index + 1}`)\n    }\n\n    return store[index]\n  }\n\n  return cache\n}\n\nfunction expectType (str, cache) {\n  const types = /^(?:N(?=;)|[bidsSaOCrR](?=:)|[^:]+(?=:))/g\n  const type = (types.exec(str) || [])[0]\n\n  if (!type) {\n    throw SyntaxError('Invalid input: ' + str)\n  }\n\n  switch (type) {\n    case 'N':\n      return cache([ null, 2 ])\n    case 'b':\n      return cache(expectBool(str))\n    case 'i':\n      return cache(expectInt(str))\n    case 'd':\n      return cache(expectFloat(str))\n    case 's':\n      return cache(expectString(str))\n    case 'S':\n      return cache(expectEscapedString(str))\n    case 'a':\n      return expectArray(str, cache)\n    case 'O':\n      return expectObject(str, cache)\n    case 'C':\n      return expectClass(str, cache)\n    case 'r':\n    case 'R':\n      return expectReference(str, cache)\n    default:\n      throw SyntaxError(`Invalid or unsupported data type: ${type}`)\n  }\n}\n\nfunction expectBool (str) {\n  const reBool = /^b:([01]);/\n  const [ match, boolMatch ] = reBool.exec(str) || []\n\n  if (!boolMatch) {\n    throw SyntaxError('Invalid bool value, expected 0 or 1')\n  }\n\n  return [ boolMatch === '1', match.length ]\n}\n\nfunction expectInt (str) {\n  const reInt = /^i:([+-]?\\d+);/\n  const [ match, intMatch ] = reInt.exec(str) || []\n\n  if (!intMatch) {\n    throw SyntaxError('Expected an integer value')\n  }\n\n  return [ parseInt(intMatch, 10), match.length ]\n}\n\nfunction expectFloat (str) {\n  const reFloat = /^d:(NAN|-?INF|(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)(?:[eE][+-]\\d+)?);/\n  const [ match, floatMatch ] = reFloat.exec(str) || []\n\n  if (!floatMatch) {\n    throw SyntaxError('Expected a float value')\n  }\n\n  let floatValue\n\n  switch (floatMatch) {\n    case 'NAN':\n      floatValue = Number.NaN\n      break\n    case '-INF':\n      floatValue = Number.NEGATIVE_INFINITY\n      break\n    case 'INF':\n      floatValue = Number.POSITIVE_INFINITY\n      break\n    default:\n      floatValue = parseFloat(floatMatch)\n      break\n  }\n\n  return [ floatValue, match.length ]\n}\n\nfunction readBytes (str, len, escapedString = false) {\n  let bytes = 0\n  let out = ''\n  let c = 0\n  const strLen = str.length\n  let wasHighSurrogate = false\n  let escapedChars = 0\n\n  while (bytes < len && c < strLen) {\n    let chr = str.charAt(c)\n    const code = chr.charCodeAt(0)\n    const isHighSurrogate = code >= 0xd800 && code <= 0xdbff\n    const isLowSurrogate = code >= 0xdc00 && code <= 0xdfff\n\n    if (escapedString && chr === '\\\\') {\n      chr = String.fromCharCode(parseInt(str.substr(c + 1, 2), 16))\n      escapedChars++\n\n      // each escaped sequence is 3 characters. Go 2 chars ahead.\n      // third character will be jumped over a few lines later\n      c += 2\n    }\n\n    c++\n\n    bytes += isHighSurrogate || (isLowSurrogate && wasHighSurrogate)\n      // if high surrogate, count 2 bytes, as expectation is to be followed by low surrogate\n      // if low surrogate preceded by high surrogate, add 2 bytes\n      ? 2\n      : code > 0x7ff\n        // otherwise low surrogate falls into this part\n        ? 3\n        : code > 0x7f\n          ? 2\n          : 1\n\n    // if high surrogate is not followed by low surrogate, add 1 more byte\n    bytes += wasHighSurrogate && !isLowSurrogate ? 1 : 0\n\n    out += chr\n    wasHighSurrogate = isHighSurrogate\n  }\n\n  return [ out, bytes, escapedChars ]\n}\n\nfunction expectString (str) {\n  // PHP strings consist of one-byte characters.\n  // JS uses 2 bytes with possible surrogate pairs.\n  // Serialized length of 2 is still 1 JS string character\n  const reStrLength = /^s:(\\d+):\"/g // also match the opening \" char\n  const [ match, byteLenMatch ] = reStrLength.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected a string value')\n  }\n\n  const len = parseInt(byteLenMatch, 10)\n\n  str = str.substr(match.length)\n\n  let [ strMatch, bytes ] = readBytes(str, len)\n\n  if (bytes !== len) {\n    throw SyntaxError(`Expected string of ${len} bytes, but got ${bytes}`)\n  }\n\n  str = str.substr(strMatch.length)\n\n  // strict parsing, match closing \"; chars\n  if (!str.startsWith('\";')) {\n    throw SyntaxError('Expected \";')\n  }\n\n  return [ strMatch, match.length + strMatch.length + 2 ] // skip last \";\n}\n\nfunction expectEscapedString (str) {\n  const reStrLength = /^S:(\\d+):\"/g // also match the opening \" char\n  const [ match, strLenMatch ] = reStrLength.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected an escaped string value')\n  }\n\n  const len = parseInt(strLenMatch, 10)\n\n  str = str.substr(match.length)\n\n  let [ strMatch, bytes, escapedChars ] = readBytes(str, len, true)\n\n  if (bytes !== len) {\n    throw SyntaxError(`Expected escaped string of ${len} bytes, but got ${bytes}`)\n  }\n\n  str = str.substr(strMatch.length + escapedChars * 2)\n\n  // strict parsing, match closing \"; chars\n  if (!str.startsWith('\";')) {\n    throw SyntaxError('Expected \";')\n  }\n\n  return [ strMatch, match.length + strMatch.length + 2 ] // skip last \";\n}\n\nfunction expectKeyOrIndex (str) {\n  try {\n    return expectString(str)\n  } catch (err) {}\n\n  try {\n    return expectEscapedString(str)\n  } catch (err) {}\n\n  try {\n    return expectInt(str)\n  } catch (err) {\n    throw SyntaxError('Expected key or index')\n  }\n}\n\nfunction expectObject (str, cache) {\n  // O:<class name length>:\"class name\":<prop count>:{<props and values>}\n  // O:8:\"stdClass\":2:{s:3:\"foo\";s:3:\"bar\";s:3:\"bar\";s:3:\"baz\";}\n  const reObjectLiteral = /^O:(\\d+):\"([^\"]+)\":(\\d+):\\{/\n  const [ objectLiteralBeginMatch, /* classNameLengthMatch */, className, propCountMatch ] = reObjectLiteral.exec(str) || []\n\n  if (!objectLiteralBeginMatch) {\n    throw SyntaxError('Invalid input')\n  }\n\n  if (className !== 'stdClass') {\n    throw SyntaxError(`Unsupported object type: ${className}`)\n  }\n\n  let totalOffset = objectLiteralBeginMatch.length\n\n  const propCount = parseInt(propCountMatch, 10)\n  const obj = {}\n  cache([obj])\n\n  str = str.substr(totalOffset)\n\n  for (let i = 0; i < propCount; i++) {\n    const prop = expectKeyOrIndex(str)\n    str = str.substr(prop[1])\n    totalOffset += prop[1]\n\n    const value = expectType(str, cache)\n    str = str.substr(value[1])\n    totalOffset += value[1]\n\n    obj[prop[0]] = value[0]\n  }\n\n  // strict parsing, expect } after object literal\n  if (str.charAt(0) !== '}') {\n    throw SyntaxError('Expected }')\n  }\n\n  return [ obj, totalOffset + 1 ] // skip final }\n}\n\nfunction expectClass (str, cache) {\n  // can't be well supported, because requires calling eval (or similar)\n  // in order to call serialized constructor name\n  // which is unsafe\n  // or assume that constructor is defined in global scope\n  // but this is too much limiting\n  throw Error('Not yet implemented')\n}\n\nfunction expectReference (str, cache) {\n  const reRef = /^[rR]:([1-9]\\d*);/\n  const [ match, refIndex ] = reRef.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected reference value')\n  }\n\n  return [ cache.get(parseInt(refIndex, 10) - 1), match.length ]\n}\n\nfunction expectArray (str, cache) {\n  const reArrayLength = /^a:(\\d+):{/\n  const [ arrayLiteralBeginMatch, arrayLengthMatch ] = reArrayLength.exec(str) || []\n\n  if (!arrayLengthMatch) {\n    throw SyntaxError('Expected array length annotation')\n  }\n\n  str = str.substr(arrayLiteralBeginMatch.length)\n\n  const array = expectArrayItems(str, parseInt(arrayLengthMatch, 10), cache)\n\n  // strict parsing, expect closing } brace after array literal\n  if (str.charAt(array[1]) !== '}') {\n    throw SyntaxError('Expected }')\n  }\n\n  return [ array[0], arrayLiteralBeginMatch.length + array[1] + 1 ] // jump over }\n}\n\nfunction expectArrayItems (str, expectedItems = 0, cache) {\n  let key\n  let hasStringKeys = false\n  let item\n  let totalOffset = 0\n  let items = []\n  cache([items])\n\n  for (let i = 0; i < expectedItems; i++) {\n    key = expectKeyOrIndex(str)\n\n    // this is for backward compatibility with previous implementation\n    if (!hasStringKeys) {\n      hasStringKeys = (typeof key[0] === 'string')\n    }\n\n    str = str.substr(key[1])\n    totalOffset += key[1]\n\n    // references are resolved immediately, so if duplicate key overwrites previous array index\n    // the old value is anyway resolved\n    // fixme: but next time the same reference should point to the new value\n    item = expectType(str, cache)\n    str = str.substr(item[1])\n    totalOffset += item[1]\n\n    items[key[0]] = item[0]\n  }\n\n  // this is for backward compatibility with previous implementation\n  if (hasStringKeys) {\n    items = Object.assign({}, items)\n  }\n\n  return [ items, totalOffset ]\n}\n\nmodule.exports = function unserialize (str) {\n  //       discuss at: https://locutus.io/php/unserialize/\n  //      original by: Arpad Ray (mailto:arpad@php.net)\n  //      improved by: Pedro Tainha (https://www.pedrotainha.com)\n  //      improved by: Kevin van Zonneveld (https://kvz.io)\n  //      improved by: Kevin van Zonneveld (https://kvz.io)\n  //      improved by: Chris\n  //      improved by: James\n  //      improved by: Le Torbi\n  //      improved by: Eli Skeggs\n  //      bugfixed by: dptr1988\n  //      bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  //      bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //      bugfixed by: philippsimon (https://github.com/philippsimon/)\n  //       revised by: d3x\n  //         input by: Brett Zamir (https://brett-zamir.me)\n  //         input by: Martin (https://www.erlenwiese.de/)\n  //         input by: kilops\n  //         input by: Jaroslaw Czarniak\n  //         input by: lovasoa (https://github.com/lovasoa/)\n  //      improved by: Rafa≈Ç Kukawski\n  // reimplemented by: Rafa≈Ç Kukawski\n  //           note 1: We feel the main purpose of this function should be\n  //           note 1: to ease the transport of data between php & js\n  //           note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //        example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //        returns 1: ['Kevin', 'van', 'Zonneveld']\n  //        example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //        returns 2: {firstName: 'Kevin', midName: 'van'}\n  //        example 3: unserialize('a:3:{s:2:\"√º\";s:2:\"√º\";s:3:\"Âõõ\";s:3:\"Âõõ\";s:4:\"†úé\";s:4:\"†úé\";}')\n  //        returns 3: {'√º': '√º', 'Âõõ': 'Âõõ', '†úé': '†úé'}\n  //        example 4: unserialize(undefined)\n  //        returns 4: false\n  //        example 5: unserialize('O:8:\"stdClass\":1:{s:3:\"foo\";b:1;}')\n  //        returns 5: { foo: true }\n  //        example 6: unserialize('a:2:{i:0;N;i:1;s:0:\"\";}')\n  //        returns 6: [null, \"\"]\n  //        example 7: unserialize('S:7:\"\\\\65\\\\73\\\\63\\\\61\\\\70\\\\65\\\\64\";')\n  //        returns 7: 'escaped'\n\n  try {\n    if (typeof str !== 'string') {\n      return false\n    }\n\n    return expectType(str, initCache())[0]\n  } catch (err) {\n    console.error(err)\n    return false\n  }\n}\n"]}
##############################################
/src/php/var/doubleval.js.map:1:{"version":3,"sources":["../../../src/php/var/doubleval.js"],"names":["module","exports","doubleval","mixedVar","floatval","require"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,SAAT,CAAoBC,QAApB,EAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,WAAWC,QAAQ,iBAAR,CAAf;;AAEA,SAAOD,SAASD,QAAT,CAAP;AACD,CAXD","file":"doubleval.js","sourcesContent":["module.exports = function doubleval (mixedVar) {\n  //  discuss at: https://locutus.io/php/doubleval/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  var floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n"]}
##############################################
/src/php/var/index.js.map:1:{"version":3,"sources":["../../../src/php/var/index.js"],"names":["module","exports","require"],"mappings":";;AAAAA,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,OAAf,IAA0BC,QAAQ,SAAR,CAA1B;AACAF,OAAOC,OAAP,CAAe,UAAf,IAA6BC,QAAQ,YAAR,CAA7B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,QAAf,IAA2BC,QAAQ,UAAR,CAA3B;AACAF,OAAOC,OAAP,CAAe,UAAf,IAA6BC,QAAQ,YAAR,CAA7B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,aAAf,IAAgCC,QAAQ,eAAR,CAAhC;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,UAAf,IAA6BC,QAAQ,YAAR,CAA7B;AACAF,OAAOC,OAAP,CAAe,QAAf,IAA2BC,QAAQ,UAAR,CAA3B;AACAF,OAAOC,OAAP,CAAe,YAAf,IAA+BC,QAAQ,cAAR,CAA/B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,YAAf,IAA+BC,QAAQ,cAAR,CAA/B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,YAAf,IAA+BC,QAAQ,cAAR,CAA/B;AACAF,OAAOC,OAAP,CAAe,OAAf,IAA0BC,QAAQ,SAAR,CAA1B;AACAF,OAAOC,OAAP,CAAe,SAAf,IAA4BC,QAAQ,WAAR,CAA5B;AACAF,OAAOC,OAAP,CAAe,WAAf,IAA8BC,QAAQ,aAAR,CAA9B;AACAF,OAAOC,OAAP,CAAe,QAAf,IAA2BC,QAAQ,UAAR,CAA3B;AACAF,OAAOC,OAAP,CAAe,aAAf,IAAgCC,QAAQ,eAAR,CAAhC;AACAF,OAAOC,OAAP,CAAe,UAAf,IAA6BC,QAAQ,YAAR,CAA7B;AACAF,OAAOC,OAAP,CAAe,YAAf,IAA+BC,QAAQ,cAAR,CAA/B","file":"index.js","sourcesContent":["module.exports['boolval'] = require('./boolval')\nmodule.exports['doubleval'] = require('./doubleval')\nmodule.exports['empty'] = require('./empty')\nmodule.exports['floatval'] = require('./floatval')\nmodule.exports['gettype'] = require('./gettype')\nmodule.exports['intval'] = require('./intval')\nmodule.exports['is_array'] = require('./is_array')\nmodule.exports['is_binary'] = require('./is_binary')\nmodule.exports['is_bool'] = require('./is_bool')\nmodule.exports['is_buffer'] = require('./is_buffer')\nmodule.exports['is_callable'] = require('./is_callable')\nmodule.exports['is_double'] = require('./is_double')\nmodule.exports['is_float'] = require('./is_float')\nmodule.exports['is_int'] = require('./is_int')\nmodule.exports['is_integer'] = require('./is_integer')\nmodule.exports['is_long'] = require('./is_long')\nmodule.exports['is_null'] = require('./is_null')\nmodule.exports['is_numeric'] = require('./is_numeric')\nmodule.exports['is_object'] = require('./is_object')\nmodule.exports['is_real'] = require('./is_real')\nmodule.exports['is_scalar'] = require('./is_scalar')\nmodule.exports['is_string'] = require('./is_string')\nmodule.exports['is_unicode'] = require('./is_unicode')\nmodule.exports['isset'] = require('./isset')\nmodule.exports['print_r'] = require('./print_r')\nmodule.exports['serialize'] = require('./serialize')\nmodule.exports['strval'] = require('./strval')\nmodule.exports['unserialize'] = require('./unserialize')\nmodule.exports['var_dump'] = require('./var_dump')\nmodule.exports['var_export'] = require('./var_export')\n"]}
##############################################
/src/php/var/index.js-3-module.exports['boolval'] = require('./boolval');
/src/php/var/index.js:4:module.exports['doubleval'] = require('./doubleval');
/src/php/var/index.js-5-module.exports['empty'] = require('./empty');
##############################################
/src/php/var/doubleval.js-2-
/src/php/var/doubleval.js:3:module.exports = function doubleval(mixedVar) {
/src/php/var/doubleval.js:4:  //  discuss at: https://locutus.io/php/doubleval/
/src/php/var/doubleval.js-5-  // original by: Brett Zamir (https://brett-zamir.me)
##############################################
/src/php/var/doubleval.js-7-  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.
/src/php/var/doubleval.js:8:  //   example 1: doubleval(186)
/src/php/var/doubleval.js-9-  //   returns 1: 186.00
##############################################
/src/php/var/doubleval.js-14-};
/src/php/var/doubleval.js:15://# sourceMappingURL=doubleval.js.map
##############################################
/src/php/info/assert_options.js.map:1:{"version":3,"sources":["../../../src/php/info/assert_options.js"],"names":["module","exports","assert_options","what","value","iniKey","defaultVal","msg","Error","iniVal","require","undefined"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAAE;AACvD;AACA;AACA;AACA;;AAEA,MAAIC,MAAJ,EAAYC,UAAZ;AACA,UAAQH,IAAR;AACE,SAAK,eAAL;AACEE,eAAS,eAAT;AACAC,mBAAa,CAAb;AACA;AACF,SAAK,gBAAL;AACED,eAAS,gBAAT;AACAC,mBAAa,CAAb;AACA,UAAIC,MAAM,uDAAV;AACAA,aAAO,kCAAP;AACA,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACF,SAAK,aAAL;AACEF,eAAS,aAAT;AACAC,mBAAa,CAAb;AACA;AACF,SAAK,mBAAL;AACED,eAAS,mBAAT;AACAC,mBAAa,CAAb;AACA;AACF,SAAK,iBAAL;AACED,eAAS,iBAAT;AACAC,mBAAa,IAAb;AACA;AACF;AACE,YAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;AAxBJ;;AA2BA;AACA,MAAIC,SAAS,CAAC,OAAOC,OAAP,KAAmB,WAAnB,GAAiCA,QAAQ,iBAAR,EAA2BL,MAA3B,CAAjC,GAAsEM,SAAvE,KAAqFL,UAAlG;;AAEA,SAAOG,MAAP;AACD,CAtCD","file":"assert_options.js","sourcesContent":["module.exports = function assert_options (what, value) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/assert_options/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: assert_options('ASSERT_CALLBACK')\n  //   returns 1: null\n\n  var iniKey, defaultVal\n  switch (what) {\n    case 'ASSERT_ACTIVE':\n      iniKey = 'assert.active'\n      defaultVal = 1\n      break\n    case 'ASSERT_WARNING':\n      iniKey = 'assert.warning'\n      defaultVal = 1\n      var msg = 'We have not yet implemented warnings for us to throw '\n      msg += 'in JavaScript (assert_options())'\n      throw new Error(msg)\n    case 'ASSERT_BAIL':\n      iniKey = 'assert.bail'\n      defaultVal = 0\n      break\n    case 'ASSERT_QUIET_EVAL':\n      iniKey = 'assert.quiet_eval'\n      defaultVal = 0\n      break\n    case 'ASSERT_CALLBACK':\n      iniKey = 'assert.callback'\n      defaultVal = null\n      break\n    default:\n      throw new Error('Improper type for assert_options()')\n  }\n\n  // I presume this is to be the most recent value, instead of the default value\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')(iniKey) : undefined) || defaultVal\n\n  return iniVal\n}\n"]}
##############################################
/src/php/info/assert_options.js-26-    case 'ASSERT_QUIET_EVAL':
/src/php/info/assert_options.js:27:      iniKey = 'assert.quiet_eval';
/src/php/info/assert_options.js-28-      defaultVal = 0;
##############################################
/src/php/funchand/call_user_func.js-9-  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,
/src/php/funchand/call_user_func.js:10:  //      note 1: this function can use `eval`.
/src/php/funchand/call_user_func.js:11:  //      note 1: The `eval` input is however checked to only allow valid function names,
/src/php/funchand/call_user_func.js:12:  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)
/src/php/funchand/call_user_func.js-13-  //      note 1: already pass any function to be executed here.
##############################################
/src/php/funchand/call_user_func_array.js-13-  //      note 1: Depending on the `cb` that is passed,
/src/php/funchand/call_user_func_array.js:14:  //      note 1: this function can use `eval` and/or `new Function`.
/src/php/funchand/call_user_func_array.js:15:  //      note 1: The `eval` input is however checked to only allow valid function names,
/src/php/funchand/call_user_func_array.js:16:  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)
/src/php/funchand/call_user_func_array.js-17-  //      note 1: already pass any function to be executed here.
##############################################
/src/php/funchand/call_user_func_array.js-37-      if (cb[0].match(validJSFunctionNamePattern)) {
/src/php/funchand/call_user_func_array.js:38:        func = eval(cb[0] + "['" + cb[1] + "']"); // eslint-disable-line no-eval
/src/php/funchand/call_user_func_array.js-39-      }
##############################################
/src/php/funchand/call_user_func_array.js-47-      } else if (cb[0].match(validJSFunctionNamePattern)) {
/src/php/funchand/call_user_func_array.js:48:        scope = eval(cb[0]); // eslint-disable-line no-eval
/src/php/funchand/call_user_func_array.js-49-      }
##############################################
/src/php/funchand/call_user_func.js.map:1:{"version":3,"sources":["../../../src/php/funchand/call_user_func.js"],"names":["module","exports","call_user_func","cb","parameters","callUserFuncArray","require","Array","prototype","slice","call","arguments"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAyBC,EAAzB,EAA6BC,UAA7B,EAAyC;AAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,oBAAoBC,QAAQ,kCAAR,CAAxB;AACAF,eAAaG,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAb;AACA,SAAON,kBAAkBF,EAAlB,EAAsBC,UAAtB,CAAP;AACD,CAhBD","file":"call_user_func.js","sourcesContent":["module.exports = function call_user_func (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/call_user_func/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Diplom@t (https://difane.com/)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,\n  //      note 1: this function can use `eval`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func('isNaN', 'a')\n  //   returns 1: true\n\n  var callUserFuncArray = require('../funchand/call_user_func_array')\n  parameters = Array.prototype.slice.call(arguments, 1)\n  return callUserFuncArray(cb, parameters)\n}\n"]}
##############################################
/src/php/funchand/call_user_func_array.js.map:1:{"version":3,"sources":["../../../src/php/funchand/call_user_func_array.js"],"names":["module","exports","call_user_func_array","cb","parameters","$global","window","global","func","scope","validJSFunctionNamePattern","match","Function","Object","prototype","toString","call","eval","Error","apply"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,oBAAT,CAA+BC,EAA/B,EAAmCC,UAAnC,EAA+C;AAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,UAAW,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAxD;AACA,MAAIC,IAAJ;AACA,MAAIC,QAAQ,IAAZ;;AAEA,MAAIC,6BAA6B,kDAAjC;;AAEA,MAAI,OAAOP,EAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAI,OAAOE,QAAQF,EAAR,CAAP,KAAuB,UAA3B,EAAuC;AACrCK,aAAOH,QAAQF,EAAR,CAAP;AACD,KAFD,MAEO,IAAIA,GAAGQ,KAAH,CAASD,0BAAT,CAAJ,EAA0C;AAC/CF,aAAQ,IAAII,QAAJ,CAAa,IAAb,EAAmB,YAAYT,EAA/B,GAAR,CAD+C,CACD;AAC/C;AACF,GAND,MAMO,IAAIU,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+Bb,EAA/B,MAAuC,gBAA3C,EAA6D;AAClE,QAAI,OAAOA,GAAG,CAAH,CAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAIA,GAAG,CAAH,EAAMQ,KAAN,CAAYD,0BAAZ,CAAJ,EAA6C;AAC3CF,eAAOS,KAAKd,GAAG,CAAH,IAAQ,IAAR,GAAeA,GAAG,CAAH,CAAf,GAAuB,IAA5B,CAAP,CAD2C,CACF;AAC1C;AACF,KAJD,MAIO;AACLK,aAAOL,GAAG,CAAH,EAAMA,GAAG,CAAH,CAAN,CAAP;AACD;;AAED,QAAI,OAAOA,GAAG,CAAH,CAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOE,QAAQF,GAAG,CAAH,CAAR,CAAP,KAA0B,UAA9B,EAA0C;AACxCM,gBAAQJ,QAAQF,GAAG,CAAH,CAAR,CAAR;AACD,OAFD,MAEO,IAAIA,GAAG,CAAH,EAAMQ,KAAN,CAAYD,0BAAZ,CAAJ,EAA6C;AAClDD,gBAAQQ,KAAKd,GAAG,CAAH,CAAL,CAAR,CADkD,CAC9B;AACrB;AACF,KAND,MAMO,IAAI,QAAOA,GAAG,CAAH,CAAP,MAAiB,QAArB,EAA+B;AACpCM,cAAQN,GAAG,CAAH,CAAR;AACD;AACF,GAlBM,MAkBA,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AACnCK,WAAOL,EAAP;AACD;;AAED,MAAI,OAAOK,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIU,KAAJ,CAAUV,OAAO,0BAAjB,CAAN;AACD;;AAED,SAAOA,KAAKW,KAAL,CAAWV,KAAX,EAAkBL,UAAlB,CAAP;AACD,CAxDD","file":"call_user_func_array.js","sourcesContent":["module.exports = function call_user_func_array (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/call_user_func_array/\n  // original by: Thiago Mata (https://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Diplom@t (https://difane.com/)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  var func\n  var scope = null\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = (new Function(null, 'return ' + cb)()) // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n"]}
##############################################
/src/php/network/setrawcookie.js-45-
/src/php/network/setrawcookie.js:46:  window.document.cookie = r.join(';');
/src/php/network/setrawcookie.js-47-
##############################################
/src/php/network/setrawcookie.js.map:1:{"version":3,"sources":["../../../src/php/network/setrawcookie.js"],"names":["module","exports","setrawcookie","name","value","expires","path","domain","secure","window","test","parseInt","Date","toUTCString","r","i","s","hasOwnProperty","push","document","cookie","join"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmDC,MAAnD,EAA2DC,MAA3D,EAAmE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,MAAI,OAAOJ,OAAP,KAAmB,QAAnB,IAAgC,OAAD,CAAUK,IAAV,CAAeL,OAAf,CAAnC,EAA4D;AAC1DA,cAAUM,SAASN,OAAT,EAAkB,EAAlB,CAAV;AACD;;AAED,MAAIA,mBAAmBO,IAAvB,EAA6B;AAC3BP,cAAUA,QAAQQ,WAAR,EAAV;AACD,GAFD,MAEO,IAAI,OAAOR,OAAP,KAAmB,QAAvB,EAAiC;AACtCA,cAAW,IAAIO,IAAJ,CAASP,UAAU,GAAnB,CAAD,CAA0BQ,WAA1B,EAAV;AACD;;AAED,MAAIC,IAAI,CAACX,OAAO,GAAP,GAAaC,KAAd,CAAR;AACA,MAAIW,IAAI,EAAR;AACA,MAAIC,IAAI;AACNX,aAASA,OADH;AAENC,UAAMA,IAFA;AAGNC,YAAQA;AAHF,GAAR;AAKA,OAAKQ,CAAL,IAAUC,CAAV,EAAa;AACX,QAAIA,EAAEC,cAAF,CAAiBF,CAAjB,CAAJ,EAAyB;AACvB;AACAC,QAAED,CAAF,KAAQD,EAAEI,IAAF,CAAOH,IAAI,GAAJ,GAAUC,EAAED,CAAF,CAAjB,CAAR;AACD;AACF;;AAED,MAAIP,MAAJ,EAAY;AACVM,MAAEI,IAAF,CAAO,QAAP;AACD;;AAEDT,SAAOU,QAAP,CAAgBC,MAAhB,GAAyBN,EAAEO,IAAF,CAAO,GAAP,CAAzB;;AAEA,SAAO,IAAP;AACD,CA9CD","file":"setrawcookie.js","sourcesContent":["module.exports = function setrawcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: https://locutus.io/php/setrawcookie/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && (/^\\d+$/).test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = (new Date(expires * 1e3)).toUTCString()\n  }\n\n  var r = [name + '=' + value]\n  var i = ''\n  var s = {\n    expires: expires,\n    path: path,\n    domain: domain\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n"]}
##############################################
/src/php/json/json_decode.js.map:1:{"version":3,"sources":["../../../src/php/json/json_decode.js"],"names":["module","exports","json_decode","strJson","$global","window","global","$locutus","php","json","JSON","parse","err","SyntaxError","Error","last_error_json","chars","join","cx","RegExp","j","text","lastIndex","test","replace","a","charCodeAt","toString","slice","m","eval"],"mappings":";;;;AAAAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;AAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AAQA,MAAIC,UAAW,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAxD;AACAF,UAAQG,QAAR,GAAmBH,QAAQG,QAAR,IAAoB,EAAvC;AACA,MAAIA,WAAWH,QAAQG,QAAvB;AACAA,WAASC,GAAT,GAAeD,SAASC,GAAT,IAAgB,EAA/B;;AAEA,MAAIC,OAAOL,QAAQM,IAAnB;AACA,MAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4B,OAAOA,KAAKE,KAAZ,KAAsB,UAAtD,EAAkE;AAChE,QAAI;AACF,aAAOF,KAAKE,KAAL,CAAWR,OAAX,CAAP;AACD,KAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,UAAI,EAAEA,eAAeC,WAAjB,CAAJ,EAAmC;AACjC,cAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED;AACAP,eAASC,GAAT,CAAaO,eAAb,GAA+B,CAA/B;AACA,aAAO,IAAP;AACD;AACF;;AAED,MAAIC,QAAQ,CACV,IADU,EAEV,MAFU,EAGV,eAHU,EAIV,QAJU,EAKV,QALU,EAMV,QANU,EAOV,eAPU,EAQV,eARU,EASV,eATU,EAUV,QAVU,EAWV,eAXU,EAYVC,IAZU,CAYL,EAZK,CAAZ;AAaA,MAAIC,KAAK,IAAIC,MAAJ,CAAW,MAAMH,KAAN,GAAc,GAAzB,EAA8B,GAA9B,CAAT;AACA,MAAII,CAAJ;AACA,MAAIC,OAAOlB,OAAX;;AAEA;AACA;AACA;AACAe,KAAGI,SAAH,GAAe,CAAf;AACA,MAAIJ,GAAGK,IAAH,CAAQF,IAAR,CAAJ,EAAmB;AACjBA,WAAOA,KAAKG,OAAL,CAAaN,EAAb,EAAiB,UAAUO,CAAV,EAAa;AACnC,aAAO,QAAQ,CAAC,SAASA,EAAEC,UAAF,CAAa,CAAb,EACtBC,QADsB,CACb,EADa,CAAV,EAEZC,KAFY,CAEN,CAAC,CAFK,CAAf;AAGD,KAJM,CAAP;AAKD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,IAAK,eAAD,CACLN,IADK,CACAF,KAAKG,OAAL,CAAa,oCAAb,EAAmD,GAAnD,EACLA,OADK,CACG,iEADH,EACsE,GADtE,EAELA,OAFK,CAEG,sBAFH,EAE2B,EAF3B,CADA,CAAR;;AAKA,MAAIK,CAAJ,EAAO;AACL;AACA;AACA;AACA;AACAT,QAAIU,KAAK,MAAMT,IAAN,GAAa,GAAlB,CAAJ,CALK,CAKsB;AAC3B,WAAOD,CAAP;AACD;;AAED;AACAb,WAASC,GAAT,CAAaO,eAAb,GAA+B,CAA/B;AACA,SAAO,IAAP;AACD,CAlGD","file":"json_decode.js","sourcesContent":["module.exports = function json_decode (strJson) { // eslint-disable-line camelcase\n  //       discuss at: https://phpjs.org/functions/json_decode/\n  //      original by: Public Domain (https://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (https://kevin.vanzonneveld.net)\n  //      improved by: T.J. Leahy\n  //      improved by: Michael White\n  //           note 1: If node or the browser does not offer JSON.parse,\n  //           note 1: this function falls backslash\n  //           note 1: to its own implementation using eval, and hence should be considered unsafe\n  //        example 1: json_decode('[ 1 ]')\n  //        returns 1: [1]\n\n  /*\n    https://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See https://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  if (typeof json === 'object' && typeof json.parse === 'function') {\n    try {\n      return json.parse(strJson)\n    } catch (err) {\n      if (!(err instanceof SyntaxError)) {\n        throw new Error('Unexpected error type in json_decode()')\n      }\n\n      // usable by json_last_error()\n      $locutus.php.last_error_json = 4\n      return null\n    }\n  }\n\n  var chars = [\n    '\\u0000',\n    '\\u00ad',\n    '\\u0600-\\u0604',\n    '\\u070f',\n    '\\u17b4',\n    '\\u17b5',\n    '\\u200c-\\u200f',\n    '\\u2028-\\u202f',\n    '\\u2060-\\u206f',\n    '\\ufeff',\n    '\\ufff0-\\uffff'\n  ].join('')\n  var cx = new RegExp('[' + chars + ']', 'g')\n  var j\n  var text = strJson\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n  cx.lastIndex = 0\n  if (cx.test(text)) {\n    text = text.replace(cx, function (a) {\n      return '\\\\u' + ('0000' + a.charCodeAt(0)\n        .toString(16))\n        .slice(-4)\n    })\n  }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  var m = (/^[\\],:{}\\s]*$/)\n    .test(text.replace(/\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n    .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g, ']')\n    .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\n  if (m) {\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')') // eslint-disable-line no-eval\n    return j\n  }\n\n  // usable by json_last_error()\n  $locutus.php.last_error_json = 4\n  return null\n}\n"]}
##############################################
/src/php/json/json_decode.js-13-  //           note 1: this function falls backslash
/src/php/json/json_decode.js:14:  //           note 1: to its own implementation using eval, and hence should be considered unsafe
/src/php/json/json_decode.js-15-  //        example 1: json_decode('[ 1 ]')
##############################################
/src/php/json/json_decode.js-70-  // we look to see that the remaining characters are only whitespace or ']' or
/src/php/json/json_decode.js:71:  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.
/src/php/json/json_decode.js-72-
##############################################
/src/php/json/json_decode.js-75-  if (m) {
/src/php/json/json_decode.js:76:    // In the third stage we use the eval function to compile the text into a
/src/php/json/json_decode.js-77-    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity
##############################################
/src/php/json/json_decode.js-79-    // in parens to eliminate the ambiguity.
/src/php/json/json_decode.js:80:    j = eval('(' + text + ')'); // eslint-disable-line no-eval
/src/php/json/json_decode.js-81-    return j;
##############################################
/src/php/filesystem/realpath.js-17-  var arr = []; // Save the root, if not given
/src/php/filesystem/realpath.js:18:  var r = this.window.location.href; // Avoid input failures
/src/php/filesystem/realpath.js-19-
##############################################
/src/php/filesystem/realpath.js.map:1:{"version":3,"sources":["../../../src/php/filesystem/realpath.js"],"names":["module","exports","realpath","path","window","nodePath","require","normalize","p","arr","r","location","href","replace","indexOf","substring","lastIndexOf","split","k","length","pop","push","join"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAmBC,IAAnB,EAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,WAAWC,QAAQ,MAAR,CAAf;AACA,WAAOD,SAASE,SAAT,CAAmBJ,IAAnB,CAAP;AACD;;AAED,MAAIK,IAAI,CAAR;AACA,MAAIC,MAAM,EAAV,CAdwC,CAc3B;AACb,MAAIC,IAAI,KAAKN,MAAL,CAAYO,QAAZ,CAAqBC,IAA7B,CAfwC,CAeN;;AAElC;AACAT,SAAO,CAACA,OAAO,EAAR,EAAYU,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,CAAP;AACA,MAAIV,KAAKW,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AAC9BN,QAAI,CAAJ;AACD;;AAED;AACA,MAAI,CAACA,CAAL,EAAQ;AACNL,WAAOO,EAAEK,SAAF,CAAY,CAAZ,EAAeL,EAAEM,WAAF,CAAc,GAAd,IAAqB,CAApC,IAAyCb,IAAhD;AACD;;AAED;AACAM,QAAMN,KAAKc,KAAL,CAAW,GAAX,CAAN,CA7BwC,CA6BlB;AACtBd,SAAO,EAAP,CA9BwC,CA8B9B;AACV,OAAK,IAAIe,CAAT,IAAcT,GAAd,EAAmB;AAAE;AACnB,QAAIA,IAAIS,CAAJ,MAAW,GAAf,EAAoB;AAClB;AACD;AACD;AACA,QAAIT,IAAIS,CAAJ,MAAW,IAAf,EAAqB;AACnB;;AAEA,UAAIf,KAAKgB,MAAL,GAAc,CAAlB,EAAqB;AACnBhB,aAAKiB,GAAL;AACD;AACF,KAND,MAMO;AACL;AACA;AACA;AACA;AACA,UAAKjB,KAAKgB,MAAL,GAAc,CAAf,IAAsBV,IAAIS,CAAJ,MAAW,EAArC,EAA0C;AACxCf,aAAKkB,IAAL,CAAUZ,IAAIS,CAAJ,CAAV;AACD;AACF;AACF;;AAED;AACA,SAAOf,KAAKmB,IAAL,CAAU,GAAV,CAAP;AACD,CAvDD","file":"realpath.js","sourcesContent":["module.exports = function realpath (path) {\n  //  discuss at: https://locutus.io/php/realpath/\n  // original by: mk.keck\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  //      note 1: Returned path is an url like e.g. 'https://yourhost.tld/path/'\n  //   example 1: realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\n  //   returns 1: 'some/_supporters/pj_test_supportfile_1.htm'\n\n  if (typeof window === 'undefined') {\n    var nodePath = require('path')\n    return nodePath.normalize(path)\n  }\n\n  var p = 0\n  var arr = [] // Save the root, if not given\n  var r = this.window.location.href // Avoid input failures\n\n  // Check if there's a port in path (like 'https://')\n  path = (path + '').replace('\\\\', '/')\n  if (path.indexOf('://') !== -1) {\n    p = 1\n  }\n\n  // Ok, there's not a port in path, so let's take the root\n  if (!p) {\n    path = r.substring(0, r.lastIndexOf('/') + 1) + path\n  }\n\n  // Explode the given path into it's parts\n  arr = path.split('/') // The path is an array now\n  path = [] // Foreach part make a check\n  for (var k in arr) { // This is'nt really interesting\n    if (arr[k] === '.') {\n      continue\n    }\n    // This reduces the realpath\n    if (arr[k] === '..') {\n      /* But only if there more than 3 parts in the path-array.\n       * The first three parts are for the uri */\n      if (path.length > 3) {\n        path.pop()\n      }\n    } else {\n      // This adds parts to the realpath\n      // But only if the part is not empty or the uri\n      // (the first three parts ar needed) was not\n      // saved\n      if ((path.length < 2) || (arr[k] !== '')) {\n        path.push(arr[k])\n      }\n    }\n  }\n\n  // Returns the absloute path as a string\n  return path.join('/')\n}\n"]}
