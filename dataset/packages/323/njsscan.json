{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 21,
          "line": 4
        },
        "extra": {
          "line": "  Copyright (c) 2010 Charlie Robbins, Mikeal Rogers, Fedor Indutny, & Marak Squires",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 17,
          "line": 4
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 15,
          "line": 1
        },
        "extra": {
          "line": "Benchmarks are being run on a development laptop using apache ab (everything running locally, on one machine)",
          "message": "Syntax error"
        },
        "path": "/src/benchmarks/ReadMe",
        "start": {
          "col": 12,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 56
        },
        "extra": {
          "line": " 100%     17 (longest request)",
          "message": "Lexical error: WIERD end of file in regexp"
        },
        "path": "/src/benchmarks/http-server-base",
        "start": {
          "col": 1,
          "line": 56
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 31,
          "line": 56
        },
        "extra": {
          "line": " 100%     10 (longest request)",
          "message": "Lexical error: WIERD end of file in regexp"
        },
        "path": "/src/benchmarks/proxy-to-http",
        "start": {
          "col": 31,
          "line": 56
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            61,
            61
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "    var numSpaces = 1 + Math.floor(Math.random() * 12);"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            66,
            66
          ],
          "match_position": [
            9,
            20
          ],
          "match_string": "        Math.random() * (4294967295 / numSpaces)"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            74,
            74
          ],
          "match_position": [
            35,
            46
          ],
          "match_string": "    var numChars = 1 + Math.floor(Math.random() * 12);"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            78,
            78
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "        var pos = Math.floor(Math.random() * s.length + 1);"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            80,
            80
          ],
          "match_position": [
            28,
            39
          ],
          "match_string": "        var c = Math.floor(Math.random() * (14 + 68));"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            93,
            93
          ],
          "match_position": [
            30,
            41
          ],
          "match_string": "        var pos = Math.floor(Math.random() * (s.length - 1)) + 1;"
        },
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            107,
            107
          ],
          "match_position": [
            45,
            56
          ],
          "match_string": "        c += String.fromCharCode(Math.floor(Math.random() * 255));"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_md5": {
      "files": [
        {
          "file_path": "/src/vendor/websocket.js",
          "match_lines": [
            155,
            155
          ],
          "match_position": [
            16,
            39
          ],
          "match_string": "    var hash = crypto.createHash('md5');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
