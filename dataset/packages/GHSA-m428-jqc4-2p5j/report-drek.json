[
 {
  "id": 1,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "                  }\n                }\n              } else {\n                if (arguments.length > 1) {\n                  for (i = 0, kl = _.keys.length; i < kl; i++) {\n                    eval(funcname + '(_.values[i], _.keys[i], userdata)');\n                  }\n                } else {\n                  for (i = 0, kl = _.keys.length; i < kl; i++) {\n                    eval(funcname + '(_.values[i], _.keys[i])');\n                  }",
  "line": 185,
  "start": 180,
  "end": 191
 },
 {
  "id": 2,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "                  for (i = 0, kl = _.keys.length; i < kl; i++) {\n                    eval(funcname + '(_.values[i], _.keys[i], userdata)');\n                  }\n                } else {\n                  for (i = 0, kl = _.keys.length; i < kl; i++) {\n                    eval(funcname + '(_.values[i], _.keys[i])');\n                  }\n                }\n              }\n            } else if (funcname && typeof funcname === 'object' && funcname.length === 2) {\n              obj = funcname[0];",
  "line": 189,
  "start": 184,
  "end": 195
 },
 {
  "id": 3,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "      if (typeof array[key] === 'object') {\n        return this.array_walk_recursive(array[key], funcname, userdata);\n      }\n  \n      if (typeof userdata !== 'undefined') {\n        eval(funcname + '( array [key] , key , userdata  )');\n      } else {\n        eval(funcname + '(  userdata ) ');\n      }\n    }\n  ",
  "line": 1761,
  "start": 1756,
  "end": 1767
 },
 {
  "id": 4,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "      }\n  \n      if (typeof userdata !== 'undefined') {\n        eval(funcname + '( array [key] , key , userdata  )');\n      } else {\n        eval(funcname + '(  userdata ) ');\n      }\n    }\n  \n    return true;\n};",
  "line": 1763,
  "start": 1758,
  "end": 1769
 },
 {
  "id": 5,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var func;\n  \n    if (typeof cb === 'string') {\n      func = (typeof this[cb] === 'function') ? this[cb] : func = (new Function(null, 'return ' + cb))();\n    } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n      func = (typeof cb[0] === 'string') ? eval(cb[0] + \"['\" + cb[1] + \"']\") : func = cb[0][cb[1]];\n    } else if (typeof cb === 'function') {\n      func = cb;\n    }\n  \n    if (typeof func !== 'function') {",
  "line": 3315,
  "start": 3310,
  "end": 3321
 },
 {
  "id": 6,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var func;\n  \n    if (typeof cb === 'string') {\n      func = (typeof this[cb] === 'function') ? this[cb] : func = (new Function(null, 'return ' + cb))();\n    } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n      func = (typeof cb[0] === 'string') ? eval(cb[0] + \"['\" + cb[1] + \"']\") : func = cb[0][cb[1]];\n    } else if (typeof cb === 'function') {\n      func = cb;\n    }\n  \n    if (typeof func !== 'function') {",
  "line": 3335,
  "start": 3330,
  "end": 3341
 },
 {
  "id": 7,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  \n      // In the third stage we use the eval function to compile the text into a\n      // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n      // in JavaScript: it can begin a block or an object literal. We wrap the text\n      // in parens to eliminate the ambiguity.\n      j = eval('(' + text + ')');\n  \n      return j;\n    }\n  \n    this.php_js = this.php_js || {};",
  "line": 3688,
  "start": 3683,
  "end": 3694
 },
 {
  "id": 8,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var p = '';\n    var retObj = {};\n    var invert = (flags === 1 || flags === 'PREG_GREP_INVERT'); // Todo: put flags as number and do bitwise checks (at least if other flags allowable); see pathinfo()\n  \n    if (typeof pattern === 'string') {\n      pattern = eval(pattern);\n    }\n  \n    if (invert) {\n      for (p in input) {\n        if ((input[p] + '')",
  "line": 5016,
  "start": 5011,
  "end": 5022
 },
 {
  "id": 9,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  \n    var replacer = function(s, m1, m2) {\n      // We assume for now that embedded variables do not have dollar sign; to add a dollar sign, you currently must use {$$var} (We might change this, however.)\n      // Doesn't cover all cases yet: see http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double\n      if (m1 !== '\\\\') {\n        return m1 + eval(m2);\n      } else {\n        return s;\n      }\n    };\n  ",
  "line": 5720,
  "start": 5715,
  "end": 5726
 },
 {
  "id": 10,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "            }\n          }\n        } else {\n          if (arguments.length > 2) {\n            for (key in array) {\n              eval(funcname + '(array[key], key, userdata)');\n            }\n          } else {\n            for (key in array) {\n              eval(funcname + '(array[key], key)');\n            }",
  "line": 9628,
  "start": 9623,
  "end": 9634
 },
 {
  "id": 11,
  "file": "/src/build/npm.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "            for (key in array) {\n              eval(funcname + '(array[key], key, userdata)');\n            }\n          } else {\n            for (key in array) {\n              eval(funcname + '(array[key], key)');\n            }\n          }\n        }\n      } else if (funcname && typeof funcname === 'object' && funcname.length === 2) {\n        var obj = funcname[0],",
  "line": 9632,
  "start": 9627,
  "end": 9638
 },
 {
  "id": 12,
  "file": "/src/functions/array/array_walk_recursive.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    if (typeof array[key] === 'object') {\n      return this.array_walk_recursive(array[key], funcname, userdata);\n    }\n\n    if (typeof userdata !== 'undefined') {\n      eval(funcname + '( array [key] , key , userdata  )');\n    } else {\n      eval(funcname + '(  userdata ) ');\n    }\n  }\n",
  "line": 21,
  "start": 16,
  "end": 27
 },
 {
  "id": 13,
  "file": "/src/functions/array/array_walk_recursive.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "    }\n\n    if (typeof userdata !== 'undefined') {\n      eval(funcname + '( array [key] , key , userdata  )');\n    } else {\n      eval(funcname + '(  userdata ) ');\n    }\n  }\n\n  return true;\n}",
  "line": 23,
  "start": 18,
  "end": 29
 },
 {
  "id": 14,
  "file": "/src/functions/array/array_walk.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "          }\n        }\n      } else {\n        if (arguments.length > 2) {\n          for (key in array) {\n            eval(funcname + '(array[key], key, userdata)');\n          }\n        } else {\n          for (key in array) {\n            eval(funcname + '(array[key], key)');\n          }",
  "line": 65,
  "start": 60,
  "end": 71
 },
 {
  "id": 15,
  "file": "/src/functions/array/array_walk.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "          for (key in array) {\n            eval(funcname + '(array[key], key, userdata)');\n          }\n        } else {\n          for (key in array) {\n            eval(funcname + '(array[key], key)');\n          }\n        }\n      }\n    } else if (funcname && typeof funcname === 'object' && funcname.length === 2) {\n      var obj = funcname[0],",
  "line": 69,
  "start": 64,
  "end": 75
 },
 {
  "id": 16,
  "file": "/src/functions/array/array.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "                }\n              }\n            } else {\n              if (arguments.length > 1) {\n                for (i = 0, kl = _.keys.length; i < kl; i++) {\n                  eval(funcname + '(_.values[i], _.keys[i], userdata)');\n                }\n              } else {\n                for (i = 0, kl = _.keys.length; i < kl; i++) {\n                  eval(funcname + '(_.values[i], _.keys[i])');\n                }",
  "line": 186,
  "start": 181,
  "end": 192
 },
 {
  "id": 17,
  "file": "/src/functions/array/array.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "                for (i = 0, kl = _.keys.length; i < kl; i++) {\n                  eval(funcname + '(_.values[i], _.keys[i], userdata)');\n                }\n              } else {\n                for (i = 0, kl = _.keys.length; i < kl; i++) {\n                  eval(funcname + '(_.values[i], _.keys[i])');\n                }\n              }\n            }\n          } else if (funcname && typeof funcname === 'object' && funcname.length === 2) {\n            obj = funcname[0];",
  "line": 190,
  "start": 185,
  "end": 196
 },
 {
  "id": 18,
  "file": "/src/functions/funchand/call_user_func_array.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var func;\n\n  if (typeof cb === 'string') {\n    func = (typeof this[cb] === 'function') ? this[cb] : func = (new Function(null, 'return ' + cb))();\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    func = (typeof cb[0] === 'string') ? eval(cb[0] + \"['\" + cb[1] + \"']\") : func = cb[0][cb[1]];\n  } else if (typeof cb === 'function') {\n    func = cb;\n  }\n\n  if (typeof func !== 'function') {",
  "line": 18,
  "start": 13,
  "end": 24
 },
 {
  "id": 19,
  "file": "/src/functions/funchand/call_user_func.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var func;\n\n  if (typeof cb === 'string') {\n    func = (typeof this[cb] === 'function') ? this[cb] : func = (new Function(null, 'return ' + cb))();\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    func = (typeof cb[0] === 'string') ? eval(cb[0] + \"['\" + cb[1] + \"']\") : func = cb[0][cb[1]];\n  } else if (typeof cb === 'function') {\n    func = cb;\n  }\n\n  if (typeof func !== 'function') {",
  "line": 14,
  "start": 9,
  "end": 20
 },
 {
  "id": 20,
  "file": "/src/functions/json/json_decode.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')');\n\n    return j;\n  }\n\n  this.php_js = this.php_js || {};",
  "line": 68,
  "start": 63,
  "end": 74
 },
 {
  "id": 21,
  "file": "/src/functions/pcre/preg_grep.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  var p = '';\n  var retObj = {};\n  var invert = (flags === 1 || flags === 'PREG_GREP_INVERT'); // Todo: put flags as number and do bitwise checks (at least if other flags allowable); see pathinfo()\n\n  if (typeof pattern === 'string') {\n    pattern = eval(pattern);\n  }\n\n  if (invert) {\n    for (p in input) {\n      if ((input[p] + '')",
  "line": 17,
  "start": 12,
  "end": 23
 },
 {
  "id": 22,
  "file": "/src/functions/strings/echo.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "\n  var replacer = function(s, m1, m2) {\n    // We assume for now that embedded variables do not have dollar sign; to add a dollar sign, you currently must use {$$var} (We might change this, however.)\n    // Doesn't cover all cases yet: see http://php.net/manual/en/language.types.string.php#language.types.string.syntax.double\n    if (m1 !== '\\\\') {\n      return m1 + eval(m2);\n    } else {\n      return s;\n    }\n  };\n",
  "line": 132,
  "start": 127,
  "end": 138
 },
 {
  "id": 23,
  "file": "/src/lib/phpjsutil.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "      .replace(/that\\.([a-z_])/g, '$1')\n      .replace(/this\\.([a-z_])/g, '$1')\n      .replace(/window\\.setTimeout/g, 'setTimeout');\n\n    // self.debug(code);\n    eval(code);\n\n\n\n    // Run each example\n    for (var i in params.headKeys.example) {",
  "line": 266,
  "start": 261,
  "end": 272
 },
 {
  "id": 24,
  "file": "/src/lib/phpjsutil.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "        continue;\n      }\n\n      // Needs an eval so types are cast properly, also, expected may\n      // contain code\n      eval('test.expected = ' + params.headKeys.returns[i].join('\\n') + '');\n\n      // Let's do something evil. Execute line by line (see date.js why)\n      // We need test.reslult be the last result of the example code\n      for (var j in params.headKeys.example[i]) {\n        if (+j === params.headKeys.example[i].length - 1) {",
  "line": 284,
  "start": 279,
  "end": 290
 },
 {
  "id": 25,
  "file": "/src/lib/phpjsutil.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "\n      // Let's do something evil. Execute line by line (see date.js why)\n      // We need test.reslult be the last result of the example code\n      for (var j in params.headKeys.example[i]) {\n        if (+j === params.headKeys.example[i].length - 1) {\n          eval('test.result = ' + params.headKeys.example[i][j] + '');\n        } else {\n          eval(params.headKeys.example[i][j] + '');\n        }\n      }\n",
  "line": 290,
  "start": 285,
  "end": 296
 },
 {
  "id": 26,
  "file": "/src/lib/phpjsutil.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "      // We need test.reslult be the last result of the example code\n      for (var j in params.headKeys.example[i]) {\n        if (+j === params.headKeys.example[i].length - 1) {\n          eval('test.result = ' + params.headKeys.example[i][j] + '');\n        } else {\n          eval(params.headKeys.example[i][j] + '');\n        }\n      }\n\n      var jsonExpected = JSON.stringify(test.expected, undefined, 2);\n      var jsonResult = JSON.stringify(test.result, undefined, 2);",
  "line": 292,
  "start": 287,
  "end": 298
 },
 {
  "id": 27,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "      <div id=\"content\"></div>\n    </div>\n  </body>\n\n\n  <script type=\"text/javascript\">\n    var code = 'function strtotime (text, now) {\\n' + \n      ' // Convert string representation of date and time to a timestamp\\n' + \n      ' //\\n' + \n      ' // version: 1109.2015\\n' + \n      ' // discuss at: http://phpjs.org/functions/strtotime\\n' + ",
  "line": 16,
  "start": 11,
  "end": 22
 },
 {
  "id": 28,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "      ' return (date.getTime() / 1000);\\n' + \n      '}\\n' + \n      '\\n'; \n  </script>\n\n  <script src=\"//code.jquery.com/jquery-1.9.1.min.js\"></script>\n  <script src=\"../lib/phpjsutil.js\"></script>\n  <script type=\"text/javascript\">\n    phpjsutil = new PhpjsUtil()\n    phpjsutil.parse('strtotime', code, function (err, result) {\n      if (err) {",
  "line": 151,
  "start": 146,
  "end": 157
 },
 {
  "id": 29,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "      '}\\n' + \n      '\\n'; \n  </script>\n\n  <script src=\"//code.jquery.com/jquery-1.9.1.min.js\"></script>\n  <script src=\"../lib/phpjsutil.js\"></script>\n  <script type=\"text/javascript\">\n    phpjsutil = new PhpjsUtil()\n    phpjsutil.parse('strtotime', code, function (err, result) {\n      if (err) {\n        $('#content').append('<pre class=\"alert-warning alert\">' + JSON.stringify(err, undefined, 2) + '</pre>');",
  "line": 152,
  "start": 147,
  "end": 158
 },
 {
  "id": 30,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "      '\\n'; \n  </script>\n\n  <script src=\"//code.jquery.com/jquery-1.9.1.min.js\"></script>\n  <script src=\"../lib/phpjsutil.js\"></script>\n  <script type=\"text/javascript\">\n    phpjsutil = new PhpjsUtil()\n    phpjsutil.parse('strtotime', code, function (err, result) {\n      if (err) {\n        $('#content').append('<pre class=\"alert-warning alert\">' + JSON.stringify(err, undefined, 2) + '</pre>');\n      }",
  "line": 153,
  "start": 148,
  "end": 159
 },
 {
  "id": 31,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "\n      console.log(result);\n    });\n  </script>\n\n  <script src=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js\"></script>\n  <script type=\"text/javascript\">\n    $('button[rel]').tooltip();\n  </script>\n</html>\n",
  "line": 165,
  "start": 160,
  "end": 171
 },
 {
  "id": 32,
  "file": "/src/test/browser/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "      console.log(result);\n    });\n  </script>\n\n  <script src=\"//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js\"></script>\n  <script type=\"text/javascript\">\n    $('button[rel]').tooltip();\n  </script>\n</html>\n",
  "line": 166,
  "start": 161,
  "end": 171
 },
 {
  "id": 33,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "        if(!isset($file_buffer) || !is_array($file_buffer)){\n            $file_buffer = array();\n        }\n\n        if(!isset($file_buffer[$filepath])){\n            $file_buffer[$filepath] = file_get_contents($filepath);\n        }\n\n        return $file_buffer[$filepath];\n    }\n",
  "line": 169,
  "start": 164,
  "end": 175
 },
 {
  "id": 34,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "        *** get\n        ******************************************************************************/\n        $tempdir = dirname(__FILE__).\"/temp\";\n        $tempfile = $tempdir.\"/\".$lfunc;\n        if(!file_exists($tempfile)){\n            file_put_contents($tempfile, file_get_contents(\"http://us2.php.net/\".$func));\n        }\n        $original_buf = $buf = file_get_contents($tempfile);\n\n\n        /******************************************************************************",
  "line": 187,
  "start": 182,
  "end": 193
 },
 {
  "id": 35,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "        $tempdir = dirname(__FILE__).\"/temp\";\n        $tempfile = $tempdir.\"/\".$lfunc;\n        if(!file_exists($tempfile)){\n            file_put_contents($tempfile, file_get_contents(\"http://us2.php.net/\".$func));\n        }\n        $original_buf = $buf = file_get_contents($tempfile);\n\n\n        /******************************************************************************\n        *** parse\n        ******************************************************************************/",
  "line": 189,
  "start": 184,
  "end": 195
 },
 {
  "id": 36,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "            file_put_contents($version_file, \"0\");\n            chmod($version_file, 0777);\n            return 0;\n        } \n        \n        $vers_int = file_get_contents($version_file);\n        $vers_int = preg_replace('/[^0-9]/', '', $vers_int);\n        if(!is_numeric($vers_int) || !$vers_int){\n            file_put_contents($version_file, \"0\");\n            return 0;\n        } ",
  "line": 388,
  "start": 383,
  "end": 394
 },
 {
  "id": 37,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\srequire_once\\s",
  "match": "\n        return $buf;\n    }\n\n    function highlight_js($code, $width=550, $xtrastyle=\"\"){\n        require_once \"inc/template.inc.php\";\n        return str_replace(\"<pre \",\"<pre style=\\\"width:\".$width.\"px;\".$xtrastyle.\"\\\" \", highlight_code( str_replace(\"<br />\",\"\\n\",htmlspecialchars_decode($code)),$width.\"px\",\"Javascript\", false, false));\n    }\n\n    function determineMedal($medals){\n        global $determineMedal_runs;",
  "line": 458,
  "start": 453,
  "end": 464
 },
 {
  "id": 38,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        return $ret;\n    }\n\n    function dbg($str){\n        #return true;\n        echo $str.\"\\n\";\n    }\n\n    function ioGetCodeFile($filepath){\n        global $file_buffer;\n        if(!isset($file_buffer) || !is_array($file_buffer)){",
  "line": 159,
  "start": 154,
  "end": 165
 },
 {
  "id": 39,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        ******************************************************************************/\n        // select main part\n        $pat = '/<div id=\"function\\.'.$lfunc.'[^>]+>(.*?)id=\"usernotes\"/is';\n        if(!preg_match($pat, $buf, $match)){\n            if($func == $debug_func){\n                echo $pat;\n                print_r($match);\n            }\n            $buf = \"\";\n        } else{\n            $buf = $match[1];",
  "line": 199,
  "start": 194,
  "end": 205
 },
 {
  "id": 40,
  "file": "/src/tools/oldcode/pj_func.inc.php",
  "filetype": "php",
  "search": "\\sinsert",
  "match": "        $buf = str_replace(array('border=\"5\"'), array('class=\"sortable\" style=\"350px;\"'), $buf);\n\n        // cleanup\n        $buf = strip_tags($buf, '<h3>,<h2>,<p>,<ul>,<li>,<b>,<br>,<strong>,<table>,<colgroup>,<thead>,<tbody>,<tr>,<th>,<td>,<em>,<u>,<i>,<pre>,<code>');\n\n        // insert see also\n        $seealso_html = \"\";\n        if(is_array($arrSeeAlso) && count($arrSeeAlso)){\n            foreach($arrSeeAlso as $see_func){\n                if($codefiles[$see_func]){\n                    $seealso_html .= \"<li><a href=\\\"/techblog/article/javascript_equivalent_for_phps_\".$see_func.\"/\\\">javascript \".$see_func.\"()</a></li>\\n\";",
  "line": 344,
  "start": 339,
  "end": 350
 },
 {
  "id": 41,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\s\\$_SERVER",
  "match": "require_once \"inc/jsmin-1.1.0.php\";\nrequire_once \"pj_func.inc.php\";\n\n// security\nif( !in_array($_SERVER[\"REMOTE_ADDR\"], $admin_ips) ){\n    die(\"no access for: \". $_SERVER[\"REMOTE_ADDR\"]);\n}\n\necho \"<xmp>\";\n\n    list($codefiles, $codefiles_InProgress, $authors) = indexCode($codedir);",
  "line": 13,
  "start": 8,
  "end": 19
 },
 {
  "id": 42,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "`",
  "match": "            $info[$k] = addslashes($v);\n        }\n\n        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];\n            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");",
  "line": 399,
  "start": 394,
  "end": 405
 },
 {
  "id": 43,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "`",
  "match": "                    if(!trim($tag))continue;\n                    $tag_id = addTag($tag);\n\n                    // add article tag combination\n                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"\n                    \");",
  "line": 428,
  "start": 423,
  "end": 434
 },
 {
  "id": 44,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "`",
  "match": "\n                    // add article tag combination\n                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"\n                    \");\n                }\n            }",
  "line": 430,
  "start": 425,
  "end": 436
 },
 {
  "id": 45,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "`",
  "match": "                    // add article tag combination\n                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"\n                    \");\n                }\n            }\n",
  "line": 431,
  "start": 426,
  "end": 437
 },
 {
  "id": 46,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "`",
  "match": "                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"\n                    \");\n                }\n            }\n\n        }",
  "line": 432,
  "start": 427,
  "end": 438
 },
 {
  "id": 47,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "    $copyright_portions = \" * Portions copyright \".implode(\", \", $all_authors);\n    $copyright_portions = wordwrap( $copyright_portions, 75, \"\\n * \", false);\n\n    // Determine version\n    $version_file = dirname(__FILE__).\"/pj_vers.dat\";\n    $osource  = file_get_contents($codedir.\"/php.js\");\n    $nsource  = $total_code;\n\n    $overs = versionGet($version_file); \n    $nvers = versionUpgrade($overs, $osource, $nsource);\n    ",
  "line": 454,
  "start": 449,
  "end": 460
 },
 {
  "id": 48,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sinclude\\s",
  "match": "    ******************************************************************************/\n    // link to php.js\n    $html_download  = \"\";\n    $html_download .= \"\\n<h3>Download php.js</h3>\\n\";\n    $html_download .= \"<p>\";\n        $html_download .= \"To easily include it in your code, every function currently available is stored in \";\n    $html_download .= \"</p>\";\n    \n    $html_download .= \"<p>\";\n        $html_download .= \"<b>Normal</b>\";\n    $html_download .= \"</p>\";",
  "line": 129,
  "start": 124,
  "end": 135
 },
 {
  "id": 49,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\smysql_",
  "match": "        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];\n            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");\n            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";",
  "line": 402,
  "start": 397,
  "end": 408
 },
 {
  "id": 50,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        // get php manual + function code\n        list($manual, $descr1, $descrF, $syntax) = ($ret = getParseManual($func, $codefiles));\n        if($manual === false){\n            foreach($ret as $output){\n                if(substr_count($output, \"#!#!#!#!#\")){\n                    echo \"\\n>>getParseManual Error: \".$output.\"\\n\";\n                }\n            }\n        }\n\n        // get dependencies",
  "line": 260,
  "start": 255,
  "end": 266
 },
 {
  "id": 51,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        foreach($info as $k=>$v){\n            $info[$k] = addslashes($v);\n        }\n\n        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];",
  "line": 398,
  "start": 393,
  "end": 404
 },
 {
  "id": 52,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];\n            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");\n            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";\n            $save = $info;\n            $sqle = insertSql($save, \"article\");\n            echo \"does not exist. inserting... \";",
  "line": 405,
  "start": 400,
  "end": 411
 },
 {
  "id": 53,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";\n            $save = $info;\n            $sqle = insertSql($save, \"article\");\n            echo \"does not exist. inserting... \";\n        }\n\n        // report\n        if(!queryE($sqle)){\n            echo \"fail\\n\";",
  "line": 410,
  "start": 405,
  "end": 416
 },
 {
  "id": 54,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "            echo \"does not exist. inserting... \";\n        }\n\n        // report\n        if(!queryE($sqle)){\n            echo \"fail\\n\";\n        } else{\n            echo \"sucess\\n\";\n\n            if($mode==\"insert\" && $article_id=mysql_insert_id()){\n                $tags = array(\"programming\", \"php\", \"javascript\", \"phpjs\");",
  "line": 415,
  "start": 410,
  "end": 421
 },
 {
  "id": 55,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "\n        // report\n        if(!queryE($sqle)){\n            echo \"fail\\n\";\n        } else{\n            echo \"sucess\\n\";\n\n            if($mode==\"insert\" && $article_id=mysql_insert_id()){\n                $tags = array(\"programming\", \"php\", \"javascript\", \"phpjs\");\n                foreach($tags as $k=>$tag_raw){\n                    $tag = substr(addslashes(preg_replace('/[^A-z0-9_\\s]/', '', trim(  preg_replace('/([\\s][\\s]*)/',\" \", $tag_raw)   ))),0,50);",
  "line": 417,
  "start": 412,
  "end": 423
 },
 {
  "id": 56,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    $copyright .= \" */ \\n\";\n    $copyright .= \"\\n\";\n\n    \n    // Original\n    echo \"writing \".$codedir.\"/php.js...\\n\";\n    file_put_contents($codedir.\"/php.js\", $copyright.$total_code);\n\n    echo \"writing \".$codedir.\"/php.namespaced.js...\\n\";\n    $namespaced_code = surroundNamespaced($namespaced_code);\n    file_put_contents($codedir.\"/php.namespaced.js\", \"\".$copyright.$namespaced_code);",
  "line": 504,
  "start": 499,
  "end": 510
 },
 {
  "id": 57,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    \n    // Original\n    echo \"writing \".$codedir.\"/php.js...\\n\";\n    file_put_contents($codedir.\"/php.js\", $copyright.$total_code);\n\n    echo \"writing \".$codedir.\"/php.namespaced.js...\\n\";\n    $namespaced_code = surroundNamespaced($namespaced_code);\n    file_put_contents($codedir.\"/php.namespaced.js\", \"\".$copyright.$namespaced_code);\n\n    // Packer\n    echo \"writing \".$codedir.\"/php.packed.js...\\n\";",
  "line": 507,
  "start": 502,
  "end": 513
 },
 {
  "id": 58,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    echo \"writing \".$codedir.\"/php.namespaced.js...\\n\";\n    $namespaced_code = surroundNamespaced($namespaced_code);\n    file_put_contents($codedir.\"/php.namespaced.js\", \"\".$copyright.$namespaced_code);\n\n    // Packer\n    echo \"writing \".$codedir.\"/php.packed.js...\\n\";\n    $myPacker = new JavaScriptPacker($total_code, 'Normal', true, false);\n    $total_code_packed = $myPacker->pack();\n    file_put_contents($codedir.\"/php.packed.js\", $copyright.$total_code_packed);\n    \n    echo \"writing \".$codedir.\"/php.namespaced.packed.js...\\n\";",
  "line": 512,
  "start": 507,
  "end": 518
 },
 {
  "id": 59,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    echo \"writing \".$codedir.\"/php.packed.js...\\n\";\n    $myPacker = new JavaScriptPacker($total_code, 'Normal', true, false);\n    $total_code_packed = $myPacker->pack();\n    file_put_contents($codedir.\"/php.packed.js\", $copyright.$total_code_packed);\n    \n    echo \"writing \".$codedir.\"/php.namespaced.packed.js...\\n\";\n    $myPacker = new JavaScriptPacker($namespaced_code, 'Normal', true, false);\n    $total_code_packed = $myPacker->pack();\n    file_put_contents($codedir.\"/php.namespaced.packed.js\", $copyright.$total_code_packed);\n    \n    // JSMIN",
  "line": 517,
  "start": 512,
  "end": 523
 },
 {
  "id": 60,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    $myPacker = new JavaScriptPacker($namespaced_code, 'Normal', true, false);\n    $total_code_packed = $myPacker->pack();\n    file_put_contents($codedir.\"/php.namespaced.packed.js\", $copyright.$total_code_packed);\n    \n    // JSMIN\n    echo \"writing \".$codedir.\"/php.min.js...\\n\";\n    $total_code_min = JSMin::minify($total_code);\n    file_put_contents($codedir.\"/php.min.js\", $copyright.$total_code_min);\n\n    echo \"writing \".$codedir.\"/php.namespaced.min.js...\\n\";\n    $total_code_min = JSMin::minify($namespaced_code);",
  "line": 523,
  "start": 518,
  "end": 529
 },
 {
  "id": 61,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    // JSMIN\n    echo \"writing \".$codedir.\"/php.min.js...\\n\";\n    $total_code_min = JSMin::minify($total_code);\n    file_put_contents($codedir.\"/php.min.js\", $copyright.$total_code_min);\n\n    echo \"writing \".$codedir.\"/php.namespaced.min.js...\\n\";\n    $total_code_min = JSMin::minify($namespaced_code);\n    file_put_contents($codedir.\"/php.namespaced.min.js\", $copyright.$total_code_min);\n    \n/*    // Packer With newlines\n    echo \"writing \".$codedir.\"/php.packed.newline.js...\\n\";",
  "line": 527,
  "start": 522,
  "end": 533
 },
 {
  "id": 62,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    echo \"writing \".$codedir.\"/php.namespaced.min.js...\\n\";\n    $total_code_min = JSMin::minify($namespaced_code);\n    file_put_contents($codedir.\"/php.namespaced.min.js\", $copyright.$total_code_min);\n    \n/*    // Packer With newlines\n    echo \"writing \".$codedir.\"/php.packed.newline.js...\\n\";\n    $myPacker = new JavaScriptPacker($total_code, 'None', true, false);\n    $total_code_packed = str_replace(\"function \", \"\\nfunction \", $myPacker->pack());\n    //$total_code_packed = str_replace(\"}\", \"}\\n\", $total_code_packed);\n    file_put_contents($codedir.\"/php.packed.newline.js\", $copyright.$total_code_packed);\n*/",
  "line": 532,
  "start": 527,
  "end": 538
 },
 {
  "id": 63,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    file_put_contents($codedir.\"/php.packed.newline.js\", $copyright.$total_code_packed);\n*/\n    /******************************************************************************\n    *** save RSS\n    ******************************************************************************/\n    echo \"saving rss...\\n\";\n    saveXMLFeed();\n\necho \"</xmp>\";\n?>",
  "line": 541,
  "start": 536,
  "end": 546
 },
 {
  "id": 64,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\squery",
  "match": "            $info[$k] = addslashes($v);\n        }\n\n        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];\n            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");",
  "line": 399,
  "start": 394,
  "end": 405
 },
 {
  "id": 65,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\squery",
  "match": "                    $tag = substr(addslashes(preg_replace('/[^A-z0-9_\\s]/', '', trim(  preg_replace('/([\\s][\\s]*)/',\" \", $tag_raw)   ))),0,50);\n                    if(!trim($tag))continue;\n                    $tag_id = addTag($tag);\n\n                    // add article tag combination\n                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"",
  "line": 427,
  "start": 422,
  "end": 433
 },
 {
  "id": 66,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sinsert",
  "match": "        // sanitize\n        foreach($info as $k=>$v){\n            $info[$k] = addslashes($v);\n        }\n\n        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);",
  "line": 397,
  "start": 392,
  "end": 403
 },
 {
  "id": 67,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sinsert",
  "match": "            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");\n            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";\n            $save = $info;\n            $sqle = insertSql($save, \"article\");\n            echo \"does not exist. inserting... \";\n        }\n\n        // report\n        if(!queryE($sqle)){",
  "line": 409,
  "start": 404,
  "end": 415
 },
 {
  "id": 68,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sinsert",
  "match": "            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";\n            $save = $info;\n            $sqle = insertSql($save, \"article\");\n            echo \"does not exist. inserting... \";\n        }\n\n        // report\n        if(!queryE($sqle)){\n            echo \"fail\\n\";",
  "line": 410,
  "start": 405,
  "end": 416
 },
 {
  "id": 69,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\sinsert",
  "match": "                    if(!trim($tag))continue;\n                    $tag_id = addTag($tag);\n\n                    // add article tag combination\n                    queryE(\"\n                        INSERT INTO `\".$tbl_article_tag.\"`\n                        SET\n                            `\".$tbl_article.\"_id` = \".$article_id.\",\n                            `\".$tbl_tag.\"_id` = \".$tag_id.\",\n                            `\".$tbl_site.\"_id` = \".$info[\"site_id\"].\"\n                    \");",
  "line": 428,
  "start": 423,
  "end": 434
 },
 {
  "id": 70,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\supdate",
  "match": "        $html_tester .= \"This info is then used to run the function, and the return value is compared to a \";\n        $html_tester .= \"predefined one.\";\n    $html_tester .= \"</p>\";\n/*    $html_tester .= \"<p>\";\n        $html_tester .= \"This way code is always checked on syntax errors, and if it doesn't function correctly anymore \";\n        $html_tester .= \"after an update, we should also be able to detect it more easily.\";\n    $html_tester .= \"</p>\";\n*/    $html_tester .= \"<p>\";\n        $html_tester .= \"If you want, <strong><a href=\\\"http://kevin.vanzonneveld.net/pj_tester.php\\\">go check it out</a></strong>.\";\n    $html_tester .= \"</p>\";\n",
  "line": 197,
  "start": 192,
  "end": 203
 },
 {
  "id": 71,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\supdate",
  "match": "        $html_construction .= \"</li>\";\n    $html_construction .= \"</ul>\";\n\n\n    /******************************************************************************\n    *** update database\n    ******************************************************************************/\n    $total_code = \"\";\n    $namespaced_code = \"\";\n    foreach($codefiles as $func=>$codefile){\n        $info = array();",
  "line": 245,
  "start": 240,
  "end": 251
 },
 {
  "id": 72,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\supdate",
  "match": "        // sanitize\n        foreach($info as $k=>$v){\n            $info[$k] = addslashes($v);\n        }\n\n        // update || insert\n        echo $info[\"title_url\"].\" (\".$descr1.\")\";\n        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);",
  "line": 397,
  "start": 392,
  "end": 403
 },
 {
  "id": 73,
  "file": "/src/tools/oldcode/pj_generator.php",
  "filetype": "php",
  "search": "\\supdate",
  "match": "        list($num, $res) = queryS(\"SELECT `article_id` FROM `article` WHERE `title_url`='\".$info[\"title_url\"].\"'\");\n        if($num){\n            $mode = \"update\";\n            $row = mysql_fetch_assoc($res);\n            $save[\"article\"] = $info[\"article\"];\n            $sqle = updateSql($row[\"article_id\"], $save, \"article\", \"article_id\");\n            echo \"exists. updating... \";\n        } else{\n            $mode = \"insert\";\n            $save = $info;\n            $sqle = insertSql($save, \"article\");",
  "line": 404,
  "start": 399,
  "end": 410
 },
 {
  "id": 74,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "\n// Choose mode & execute\n$hr = str_repeat(\"=\", 75).\"\\n\";\nswitch($mode) {\n    case \"testcode\":\n        echo $Function->testCode();\n        break;\n    case \"debug\":\n\n        echo \"Info\\n\";\n        echo $hr;",
  "line": 51,
  "start": 46,
  "end": 57
 },
 {
  "id": 75,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    case \"testcode\":\n        echo $Function->testCode();\n        break;\n    case \"debug\":\n\n        echo \"Info\\n\";\n        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n",
  "line": 55,
  "start": 50,
  "end": 61
 },
 {
  "id": 76,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $Function->testCode();\n        break;\n    case \"debug\":\n\n        echo \"Info\\n\";\n        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";",
  "line": 56,
  "start": 51,
  "end": 62
 },
 {
  "id": 77,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        break;\n    case \"debug\":\n\n        echo \"Info\\n\";\n        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;",
  "line": 57,
  "start": 52,
  "end": 63
 },
 {
  "id": 78,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    case \"debug\":\n\n        echo \"Info\\n\";\n        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());",
  "line": 58,
  "start": 53,
  "end": 64
 },
 {
  "id": 79,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "\n        echo \"Info\\n\";\n        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";",
  "line": 59,
  "start": 54,
  "end": 65
 },
 {
  "id": 80,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $hr;\n        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";",
  "line": 61,
  "start": 56,
  "end": 67
 },
 {
  "id": 81,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"source file: \". $Function->getRealPath().\"\\n\";\n        echo \"tester file: \". $Function->getTesterPath().\"\\n\";\n        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";\n        echo $hr;",
  "line": 62,
  "start": 57,
  "end": 68
 },
 {
  "id": 82,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"\\n\\n\";\n\n        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";\n        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";",
  "line": 64,
  "start": 59,
  "end": 70
 },
 {
  "id": 83,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"Examples\\n\";\n        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";\n        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";\n\n        echo \"Output\\n\";",
  "line": 66,
  "start": 61,
  "end": 72
 },
 {
  "id": 84,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $hr;\n        print_r($Function->DocBlock->getExamples());\n        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";\n        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";\n\n        echo \"Output\\n\";\n        echo $hr;",
  "line": 67,
  "start": 62,
  "end": 73
 },
 {
  "id": 85,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"\\n\\n\";\n\n        echo \"Dependencies\\n\";\n        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";\n\n        echo \"Output\\n\";\n        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";",
  "line": 69,
  "start": 64,
  "end": 75
 },
 {
  "id": 86,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"Dependencies\\n\";\n        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";\n\n        echo \"Output\\n\";\n        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";",
  "line": 71,
  "start": 66,
  "end": 77
 },
 {
  "id": 87,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $hr;\n        print_r($Function->getDependencies());\n        echo \"\\n\\n\";\n\n        echo \"Output\\n\";\n        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";\n        echo $hr;",
  "line": 72,
  "start": 67,
  "end": 78
 },
 {
  "id": 88,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"\\n\\n\";\n\n        echo \"Output\\n\";\n        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";\n        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";",
  "line": 74,
  "start": 69,
  "end": 80
 },
 {
  "id": 89,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"Output\\n\";\n        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";\n        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";",
  "line": 76,
  "start": 71,
  "end": 82
 },
 {
  "id": 90,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $hr;\n        $Function->testFunction(true);\n        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";\n        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;",
  "line": 77,
  "start": 72,
  "end": 83
 },
 {
  "id": 91,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"\\n\\n\";\n\n        echo \"Test result\\n\";\n        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;",
  "line": 79,
  "start": 74,
  "end": 85
 },
 {
  "id": 92,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo \"Test result\\n\";\n        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;\n    case \"output\":\n        $Function->testFunction(true);",
  "line": 81,
  "start": 76,
  "end": 87
 },
 {
  "id": 93,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        echo $hr;\n        $Function->testFunction(false);\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;\n    case \"output\":\n        $Function->testFunction(true);\n        break;",
  "line": 82,
  "start": 77,
  "end": 88
 },
 {
  "id": 94,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    case \"all\":\n        $PHPJS_Tester_Shell->setSelection(\"all\");\n        $PHPJS_Tester_Shell->test();\n        break;\n    case \"run\":\n        echo $Function->testFunction();\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);",
  "line": 104,
  "start": 99,
  "end": 110
 },
 {
  "id": 95,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        $PHPJS_Tester_Shell->setSelection(\"all\");\n        $PHPJS_Tester_Shell->test();\n        break;\n    case \"run\":\n        echo $Function->testFunction();\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;",
  "line": 105,
  "start": 100,
  "end": 111
 },
 {
  "id": 96,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        break;\n    case \"run\":\n        echo $Function->testFunction();\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;\n    default:\n        die(\"Unknown command: \".$mode);",
  "line": 107,
  "start": 102,
  "end": 113
 },
 {
  "id": 97,
  "file": "/src/tools/phpjstest.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    case \"run\":\n        echo $Function->testFunction();\n        echo \"\\n\\n\";\n\n        echo \"Js Lint result\\n\";\n        echo $hr;\n        $Function->testFunction(false, false, true);\n        break;\n    default:\n        die(\"Unknown command: \".$mode);\n        break;",
  "line": 108,
  "start": 103,
  "end": 114
 },
 {
  "id": 98,
  "file": "/src/tools/remove_unported.php",
  "filetype": "php",
  "search": "\\srequire_once\\s",
  "match": "#!/usr/bin/php -q\n<?php\n    error_reporting(E_ALL);\n    require_once \"PHPJS_Library/PHPJS/Library.php\";\n    \n    $dir         = realpath(dirname(__FILE__).\"/..\").\"/functions\";\n    $dirUnported = realpath(dirname(__FILE__).\"/..\").\"/_unported\";\n    \n    $PHPJS = new PHPJS_Library($dir);",
  "line": 4,
  "start": 1,
  "end": 10
 },
 {
  "id": 99,
  "file": "/src/tools/remove_unported.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    foreach ($PHPJS->Functions as $Function) {\n        $path         = $Function->getRealPath();\n        $pathUnported = str_replace(\"/functions/\", \"/_unported/\", $path);\n        \n        if (is_file($pathUnported)) {\n            echo \"Please remove: \".$pathUnported.\" \\n\";\n        }\n    }\n?>",
  "line": 17,
  "start": 12,
  "end": 21
 },
 {
  "id": 100,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\ssystem\\s*\\(",
  "match": "        if(!is_dir($store_dir)){\n            if(!mkdir($store_dir)){\n                echo \"Could not create: \".$store_dir.\"\\n\";\n                return false;\n            } else{\n                echo system(\"/usr/bin/svn add \".$store_dir ).\"\\n\";\n            }\n        }\n        \n        if(!file_exists($store_file)){\n            file_put_contents($store_file, '// not yet ported. feel like it?' );",
  "line": 124,
  "start": 119,
  "end": 130
 },
 {
  "id": 101,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\ssystem\\s*\\(",
  "match": "            }\n        }\n        \n        if(!file_exists($store_file)){\n            file_put_contents($store_file, '// not yet ported. feel like it?' );\n            echo system(\"/usr/bin/svn add \".$store_file ).\"\\n\";\n        }\n    }\n    \n    $function_homedir = \"/home/kevin/workspace/plutonia-phpjs/functions\";\n    $unported_homedir = \"/home/kevin/workspace/plutonia-phpjs/_unported\";",
  "line": 130,
  "start": 125,
  "end": 136
 },
 {
  "id": 102,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "            $cachefile = false;\n        }\n        \n        if($cachefile){\n            if(file_exists($cachefile)){\n                $buf = file_get_contents($cachefile);\n            } else{\n                $buf = file_get_contents($url);\n                file_put_contents($cachefile, $buf);\n            }\n        } else{",
  "line": 15,
  "start": 10,
  "end": 21
 },
 {
  "id": 103,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "        \n        if($cachefile){\n            if(file_exists($cachefile)){\n                $buf = file_get_contents($cachefile);\n            } else{\n                $buf = file_get_contents($url);\n                file_put_contents($cachefile, $buf);\n            }\n        } else{\n            $buf = file_get_contents($url);\n        }",
  "line": 17,
  "start": 12,
  "end": 23
 },
 {
  "id": 104,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\sfile_get_contents\\s*\\(",
  "match": "            } else{\n                $buf = file_get_contents($url);\n                file_put_contents($cachefile, $buf);\n            }\n        } else{\n            $buf = file_get_contents($url);\n        }\n        \n        return $buf;\n    }\n    ",
  "line": 21,
  "start": 16,
  "end": 27
 },
 {
  "id": 105,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        \n        $buf = strip_tags( $buf, '<a>');\n        preg_match_all('/function\\.([a-z\\.\\-]+)\\.php/s', $buf, $matches);\n        $functions = $matches[1];\n        if(!count($functions)){\n            echo \"No functions found in php: \".$subcat.\"\\n\";\n        } else {\n            foreach($functions as $k=>$v){\n                $functions[$k] = str_replace(\"-\", \"_\", $v);\n            }\n            $php_functions = array_combine($functions, $functions);",
  "line": 67,
  "start": 62,
  "end": 73
 },
 {
  "id": 106,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "    function jsFunctionStore($function, $subcat, $function_homedir){\n        $store_dir  = $function_homedir.\"/\".$subcat;\n        $store_file = $store_dir.\"/\".$function.\".js\";\n        if(!is_dir($store_dir)){\n            if(!mkdir($store_dir)){\n                echo \"Could not create: \".$store_dir.\"\\n\";\n                return false;\n            } else{\n                echo system(\"/usr/bin/svn add \".$store_dir ).\"\\n\";\n            }\n        }",
  "line": 121,
  "start": 116,
  "end": 127
 },
 {
  "id": 107,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "        if(!is_dir($store_dir)){\n            if(!mkdir($store_dir)){\n                echo \"Could not create: \".$store_dir.\"\\n\";\n                return false;\n            } else{\n                echo system(\"/usr/bin/svn add \".$store_dir ).\"\\n\";\n            }\n        }\n        \n        if(!file_exists($store_file)){\n            file_put_contents($store_file, '// not yet ported. feel like it?' );",
  "line": 124,
  "start": 119,
  "end": 130
 },
 {
  "id": 108,
  "file": "/src/tools/store_missing_funcs.php",
  "filetype": "php",
  "search": "\\secho",
  "match": "            }\n        }\n        \n        if(!file_exists($store_file)){\n            file_put_contents($store_file, '// not yet ported. feel like it?' );\n            echo system(\"/usr/bin/svn add \".$store_file ).\"\\n\";\n        }\n    }\n    \n    $function_homedir = \"/home/kevin/workspace/plutonia-phpjs/functions\";\n    $unported_homedir = \"/home/kevin/workspace/plutonia-phpjs/_unported\";",
  "line": 130,
  "start": 125,
  "end": 136
 }
]
