/src/build/npm.js-2890-  
/src/build/npm.js:2891:    // other formats and "now" should be parsed by Date.parse()
/src/build/npm.js-2892-    if (text === 'now') {
##############################################
/src/build/npm.js-2895-    }
/src/build/npm.js:2896:    if (!isNaN(parsed = Date.parse(text))) {
/src/build/npm.js-2897-      return parsed / 1000 | 0;
##############################################
/src/build/npm.js-3098-  
/src/build/npm.js:3099:      req.open(method, url, async);
/src/build/npm.js-3100-      if (async) {
##############################################
/src/build/npm.js-3640-      try {
/src/build/npm.js:3641:        return json.parse(str_json);
/src/build/npm.js-3642-      } catch (err) {
##############################################
/src/build/npm.js-5646-        var lsParser = dils.createLSParser(1, null); // synchronous, no schema type
/src/build/npm.js:5647:        return lsParser.parse(lsInput)
/src/build/npm.js-5648-          .firstChild;
##############################################
/src/build/npm.js-5668-        var req = new win.XMLHttpRequest;
/src/build/npm.js:5669:        req.open('GET', 'data:application/xml;charset=utf-8,'+encodeURIComponent(str), false);
/src/build/npm.js-5670-        if (req.overrideMimeType) {
##############################################
/src/build/npm.js-9931-    new Date(timestamp * 1000); // UNIX timestamp (auto-convert to int)
/src/build/npm.js:9932:    timestamp = Date.parse(dt.toUTCString()
/src/build/npm.js-9933-      .slice(0, -4)) / 1000;
##############################################
/src/build/npm.js-11084-    var tmp, headers, pair, i, j = 0;ß;
/src/build/npm.js:11085:    req.open('HEAD', url, false);
/src/build/npm.js-11086-    req.send(null);
##############################################
/src/build/npm.js-12251-      s: function(d) { // Yahoo uses return parseInt(d.getTime()/1000, 10);
/src/build/npm.js:12252:        return Date.parse(d) / 1000;
/src/build/npm.js-12253-      },
##############################################
/src/build/npm.js-13090-    );
/src/build/npm.js:13091:    timestamp = Date.parse(dt.toUTCString()
/src/build/npm.js-13092-      .slice(0, -4)) / 1000;
##############################################
/src/tools/env.js-23-		var xhr = new XMLHttpRequest();
/src/tools/env.js:24:		xhr.open("GET", url);
/src/tools/env.js-25-		xhr.onreadystatechange = function(){
##############################################
/src/tools/env.js-138-			DocumentBuilderFactory.newInstance()
/src/tools/env.js:139:				.newDocumentBuilder().parse(file);
/src/tools/env.js-140-
##############################################
/src/tools/env.bak.js-32-		var xhr = new XMLHttpRequest();
/src/tools/env.bak.js:33:		xhr.open("GET", url);
/src/tools/env.bak.js-34-		xhr.onreadystatechange = function(){
##############################################
/src/tools/env.bak.js-150-			DocumentBuilderFactory.newInstance()
/src/tools/env.bak.js:151:				.newDocumentBuilder().parse(file);
/src/tools/env.bak.js-152-		
##############################################
/src/bin/phpjs.js-14-// --debug works out of the box. See -h
/src/bin/phpjs.js:15:cli.parse({
/src/bin/phpjs.js-16-  action  : ['a', 'Test / Build', 'string', 'test'],
##############################################
/src/bin/phpjs.js-56-
/src/bin/phpjs.js:57:    fs.readFile(filepath, 'utf-8', function(err, code) {
/src/bin/phpjs.js-58-      if (err) {
##############################################
/src/lib/phpjsutil.js-196-
/src/lib/phpjsutil.js:197:    self.parse(name, code, function(err, params) {
/src/lib/phpjsutil.js-198-      if (err) {
##############################################
/src/test/browser/index.html-51-      '   return now === null || isNaN(now) ? new Date().getTime() / 1000 | 0 : now | 0;\n' + 
/src/test/browser/index.html:52:      ' else if (!isNaN(parse = Date.parse(text)))\n' + 
/src/test/browser/index.html-53-      '   return parse / 1000 | 0;\n' + 
##############################################
/src/test/browser/index.html-55-      '   return new Date().getTime() / 1000; // Return seconds, not milli-seconds\n' + 
/src/test/browser/index.html:56:      ' else if (!isNaN(parsed = Date.parse(text)))\n' + 
/src/test/browser/index.html-57-      '   return parsed / 1000;\n' + 
##############################################
/src/test/browser/index.html-154-    phpjsutil = new PhpjsUtil()
/src/test/browser/index.html:155:    phpjsutil.parse('strtotime', code, function (err, result) {
/src/test/browser/index.html-156-      if (err) {
##############################################
/src/test/browser/server.js-5-
/src/test/browser/server.js:6:http.createServer(function(req, res) {
/src/test/browser/server.js-7-  if (req.url === '/') {
##############################################
/src/test/browser/optimized.js-9-  }else {
/src/test/browser/optimized.js:10:    if (!isNaN(parse = Date.parse(text))) {
/src/test/browser/optimized.js-11-      return parse / 1E3 | 0;
##############################################
/src/test/browser/optimized.js-16-  }else {
/src/test/browser/optimized.js:17:    if (!isNaN(parsed = Date.parse(text))) {
/src/test/browser/optimized.js-18-      return parsed / 1E3;
##############################################
/src/test/test-phpjsutil.js-150-    it('should return exact fixture', function(done){
/src/test/test-phpjsutil.js:151:      PhpjsUtil.parse('array_change_key_case', files['array_change_key_case'], function(err, params) {
/src/test/test-phpjsutil.js-152-        assert.deepEqual(params, fixtures['array_change_key_case']);
##############################################
/src/functions/datetime/gmstrftime.js-13-  );
/src/functions/datetime/gmstrftime.js:14:  timestamp = Date.parse(dt.toUTCString()
/src/functions/datetime/gmstrftime.js-15-    .slice(0, -4)) / 1000;
##############################################
/src/functions/datetime/strftime.js-95-    s: function(d) { // Yahoo uses return parseInt(d.getTime()/1000, 10);
/src/functions/datetime/strftime.js:96:      return Date.parse(d) / 1000;
/src/functions/datetime/strftime.js-97-    },
##############################################
/src/functions/datetime/gmdate.js-12-  new Date(timestamp * 1000); // UNIX timestamp (auto-convert to int)
/src/functions/datetime/gmdate.js:13:  timestamp = Date.parse(dt.toUTCString()
/src/functions/datetime/gmdate.js-14-    .slice(0, -4)) / 1000;
##############################################
/src/functions/datetime/strtotime.js-158-
/src/functions/datetime/strtotime.js:159:  // other formats and "now" should be parsed by Date.parse()
/src/functions/datetime/strtotime.js-160-  if (text === 'now') {
##############################################
/src/functions/datetime/strtotime.js-163-  }
/src/functions/datetime/strtotime.js:164:  if (!isNaN(parsed = Date.parse(text))) {
/src/functions/datetime/strtotime.js-165-    return parsed / 1000 | 0;
##############################################
/src/functions/strings/echo.js-58-      var lsParser = dils.createLSParser(1, null); // synchronous, no schema type
/src/functions/strings/echo.js:59:      return lsParser.parse(lsInput)
/src/functions/strings/echo.js-60-        .firstChild;
##############################################
/src/functions/strings/echo.js-80-      var req = new win.XMLHttpRequest;
/src/functions/strings/echo.js:81:      req.open('GET', 'data:application/xml;charset=utf-8,'+encodeURIComponent(str), false);
/src/functions/strings/echo.js-82-      if (req.overrideMimeType) {
##############################################
/src/functions/json/json_decode.js-20-    try {
/src/functions/json/json_decode.js:21:      return json.parse(str_json);
/src/functions/json/json_decode.js-22-    } catch (err) {
##############################################
/src/functions/filesystem/file_get_contents.js-95-
/src/functions/filesystem/file_get_contents.js:96:    req.open(method, url, async);
/src/functions/filesystem/file_get_contents.js-97-    if (async) {
##############################################
/src/functions/url/get_headers.js-17-  var tmp, headers, pair, i, j = 0;ß;
/src/functions/url/get_headers.js:18:  req.open('HEAD', url, false);
/src/functions/url/get_headers.js-19-  req.send(null);
