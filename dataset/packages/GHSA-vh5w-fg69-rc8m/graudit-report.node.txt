/src/closure/bin/build/source.py-124-  try:
/src/closure/bin/build/source.py:125:    fileobj = codecs.open(path, encoding='utf-8-sig')
/src/closure/bin/build/source.py-126-    return fileobj.read()
##############################################
/src/closure/bin/build/closurebuilder.py-203-  if options.output_file:
/src/closure/bin/build/closurebuilder.py:204:    out = io.open(options.output_file, 'wb')
/src/closure/bin/build/closurebuilder.py-205-  else:
##############################################
/src/closure/goog/editor/seamlessfield.js-648-    if (goog.editor.node.isStandardsMode(iframe.ownerDocument)) {
/src/closure/goog/editor/seamlessfield.js:649:      doc.open();
/src/closure/goog/editor/seamlessfield.js-650-      var emptyHtml = goog.html.SafeHtml.concat(
##############################################
/src/closure/goog/editor/plugins/linkbubble.js-451-goog.editor.plugins.LinkBubble.prototype.testLink = function(opt_event) {
/src/closure/goog/editor/plugins/linkbubble.js:452:  goog.window.open(
/src/closure/goog/editor/plugins/linkbubble.js-453-      this.getTestLinkAction_(),
##############################################
/src/closure/goog/editor/icontent.js-264-  var doc = goog.dom.getFrameContentDocument(iframe);
/src/closure/goog/editor/icontent.js:265:  doc.open();
/src/closure/goog/editor/icontent.js-266-  doc.write(html);
##############################################
/src/closure/goog/editor/field.js-2071-        e.ctrlKey) {
/src/closure/goog/editor/field.js:2072:      this.originalDomHelper.getWindow().open(targetElement.href);
/src/closure/goog/editor/field.js-2073-    }
##############################################
/src/closure/goog/fx/dom.js-653-      computedBgColor != 'rgba(0, 0, 0, 0)') {
/src/closure/goog/fx/dom.js:654:    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex);
/src/closure/goog/fx/dom.js-655-  } else {
##############################################
/src/closure/goog/format/emailaddress.js-281-goog.format.EmailAddress.isValidAddress = function(str) {
/src/closure/goog/format/emailaddress.js:282:  return goog.format.EmailAddress.parse(str).isValid();
/src/closure/goog/format/emailaddress.js-283-};
##############################################
/src/closure/goog/format/jsonprettyprinter.js-112-    // Try to coerce a string into a JSON object.
/src/closure/goog/format/jsonprettyprinter.js:113:    json = JSON.parse(json);
/src/closure/goog/format/jsonprettyprinter.js-114-  }
##############################################
/src/closure/goog/format/internationalizedemailaddress.js-179-  }
/src/closure/goog/format/internationalizedemailaddress.js:180:  return goog.format.InternationalizedEmailAddress.parse(str).isValid();
/src/closure/goog/format/internationalizedemailaddress.js-181-};
##############################################
/src/closure/goog/ui/editor/linkdialog.js-949-    };
/src/closure/goog/ui/editor/linkdialog.js:950:    goog.window.open(url, openOptions, win);
/src/closure/goog/ui/editor/linkdialog.js-951-  }
##############################################
/src/closure/goog/ui/hsvpalette.js-194-  try {
/src/closure/goog/ui/hsvpalette.js:195:    parsed = goog.color.parse(this.inputElement.value).hex;
/src/closure/goog/ui/hsvpalette.js-196-  } catch (e) {
##############################################
/src/closure/goog/ui/hsvpalette.js-228-goog.ui.HsvPalette.prototype.setColorInternal = function(color) {
/src/closure/goog/ui/hsvpalette.js:229:  var rgbHex = goog.color.parse(color).hex;
/src/closure/goog/ui/hsvpalette.js-230-  var rgbArray = goog.color.hexToRgb(rgbHex);
##############################################
/src/closure/goog/ui/hsvapalette.js-291-goog.ui.HsvaPalette.parseColorRgbaHex_ = function(color) {
/src/closure/goog/ui/hsvapalette.js:292:  var hex = goog.color.alpha.parse(color).hex;
/src/closure/goog/ui/hsvapalette.js-293-  return [
##############################################
/src/closure/goog/ui/ac/remotearraymatcher.js-198-    try {
/src/closure/goog/ui/ac/remotearraymatcher.js:199:      matches = JSON.parse(responseText);
/src/closure/goog/ui/ac/remotearraymatcher.js-200-    } catch (exception) {
##############################################
/src/closure/goog/ui/customcolorpalette.js-123-  try {
/src/closure/goog/ui/customcolorpalette.js:124:    color = goog.color.parse(response).hex;
/src/closure/goog/ui/customcolorpalette.js-125-  } catch (er) {
##############################################
/src/closure/goog/ui/colormenubuttonrenderer.js-119-    hexColor = strValue && goog.color.isValidColor(strValue) ?
/src/closure/goog/ui/colormenubuttonrenderer.js:120:        goog.color.parse(strValue).hex :
/src/closure/goog/ui/colormenubuttonrenderer.js-121-        null;
##############################################
/src/closure/goog/ui/colorpalette.js-172-    try {
/src/closure/goog/ui/colorpalette.js:173:      return goog.color.parse(color).hex;
/src/closure/goog/ui/colorpalette.js-174-    } catch (ex) {
##############################################
/src/closure/goog/dom/fontsizemonitor.js-86-    var doc = resizeTarget.document;
/src/closure/goog/dom/fontsizemonitor.js:87:    doc.open();
/src/closure/goog/dom/fontsizemonitor.js-88-    doc.close();
##############################################
/src/closure/goog/dom/iframe.js-146-  var doc = goog.dom.getFrameContentDocument(iframe);
/src/closure/goog/dom/iframe.js:147:  doc.open();
/src/closure/goog/dom/iframe.js-148-  goog.dom.safe.documentWrite(doc, content);
##############################################
/src/closure/goog/dom/safe.js-697- * which is a safe alternative to
/src/closure/goog/dom/safe.js:698: *   window.open(url);
/src/closure/goog/dom/safe.js-699- * The latter can result in XSS vulnerabilities if redirectUrl is a
##############################################
/src/closure/goog/dom/safe.js-702- * @param {string|!goog.html.SafeUrl} url The URL to open.
/src/closure/goog/dom/safe.js:703: * @param {Window=} opt_openerWin Window of which to call the .open() method.
/src/closure/goog/dom/safe.js-704- *     Defaults to the global window.
/src/closure/goog/dom/safe.js-705- * @param {!goog.string.Const=} opt_name Name of the window to open in. Can be
/src/closure/goog/dom/safe.js:706: *     _top, etc as allowed by window.open().
/src/closure/goog/dom/safe.js-707- * @param {string=} opt_specs Comma-separated list of specifications, same as
/src/closure/goog/dom/safe.js:708: *     in window.open().
/src/closure/goog/dom/safe.js-709- * @param {boolean=} opt_replace Whether to replace the current entry in browser
/src/closure/goog/dom/safe.js:710: *     history, same as in window.open().
/src/closure/goog/dom/safe.js-711- * @return {Window} Window the url was opened in.
##############################################
/src/closure/goog/dom/safe.js-722-  var win = opt_openerWin || goog.global;
/src/closure/goog/dom/safe.js:723:  return win.open(
/src/closure/goog/dom/safe.js-724-      goog.html.SafeUrl.unwrap(safeUrl),
##############################################
/src/closure/goog/db/db.js-120-  var d = new goog.async.Deferred();
/src/closure/goog/db/db.js:121:  var openRequest = opt_version ? goog.db.indexedDb_.open(name, opt_version) :
/src/closure/goog/db/db.js:122:                                  goog.db.indexedDb_.open(name);
/src/closure/goog/db/db.js-123-  openRequest.onsuccess = function(ev) {
##############################################
/src/closure/goog/json/nativejsonprocessor.js-63-goog.json.NativeJsonProcessor.prototype.parse = function(s) {
/src/closure/goog/json/nativejsonprocessor.js:64:  return goog.global['JSON'].parse(s, this.reviver_);
/src/closure/goog/json/nativejsonprocessor.js-65-};
##############################################
/src/closure/goog/json/hybrid.js-55-    try {
/src/closure/goog/json/hybrid.js:56:      var obj = goog.global.JSON.parse(jsonString);
/src/closure/goog/json/hybrid.js-57-      goog.asserts.assert(typeof obj == 'object');
##############################################
/src/closure/goog/history/history.js-764-
/src/closure/goog/history/history.js:765:      doc.open('text/html', opt_replace ? 'replace' : undefined);
/src/closure/goog/history/history.js-766-      var iframeSourceHtml = goog.html.SafeHtml.concat(
##############################################
/src/closure/goog/labs/pubsub/broadcastpubsub.js-136-
/src/closure/goog/labs/pubsub/broadcastpubsub.js:137:  var data = JSON.parse(browserEvent.newValue);
/src/closure/goog/labs/pubsub/broadcastpubsub.js-138-  var args = goog.isObject(data) && data['args'];
##############################################
/src/closure/goog/labs/net/webchannel/wirev8.js-150-WireV8.prototype.decodeMessage = function(messageText) {
/src/closure/goog/labs/net/webchannel/wirev8.js:151:  var response = this.parser_.parse(messageText);
/src/closure/goog/labs/net/webchannel/wirev8.js-152-  goog.asserts.assert(Array.isArray(response));  // throw exception
##############################################
/src/closure/goog/labs/net/webchannel/webchanneldebug.js-203-  try {
/src/closure/goog/labs/net/webchannel/webchanneldebug.js:204:    var responseArray = JSON.parse(responseText);
/src/closure/goog/labs/net/webchannel/webchanneldebug.js-205-    if (responseArray) {
##############################################
/src/closure/goog/labs/net/webchannel/webchannelbase.js-2266-    hostPrefix, path, opt_overridePort) {
/src/closure/goog/labs/net/webchannel/webchannelbase.js:2267:  var uri = goog.Uri.parse(path);
/src/closure/goog/labs/net/webchannel/webchannelbase.js-2268-  var uriAbsolute = (uri.getDomain() != '');
##############################################
/src/closure/goog/labs/net/xhr.js-276-    try {
/src/closure/goog/labs/net/xhr.js:277:      request.open(method, url, true);
/src/closure/goog/labs/net/xhr.js-278-    } catch (e) {
##############################################
/src/closure/goog/labs/net/xhr.js-411-  }
/src/closure/goog/labs/net/xhr.js:412:  return /** @type {!Object} */ (JSON.parse(prefixStrippedResult));
/src/closure/goog/labs/net/xhr.js-413-};
##############################################
/src/closure/goog/net/websocket.js-30- *  try {
/src/closure/goog/net/websocket.js:31: *    ws.open('ws://127.0.0.1:4200');
/src/closure/goog/net/websocket.js-32- *  } catch (e) {
##############################################
/src/closure/goog/net/crossdomainrpc.js-450-  var requestFrameDoc = goog.dom.getFrameContentDocument(requestFrame);
/src/closure/goog/net/crossdomainrpc.js:451:  requestFrameDoc.open();
/src/closure/goog/net/crossdomainrpc.js-452-  goog.dom.safe.documentWrite(requestFrameDoc, requestFrameContentHtml);
##############################################
/src/closure/goog/net/crossdomainrpc.js-553-    this.responseTextIsJson_ = params.get('isDataJson') == 'true';
/src/closure/goog/net/crossdomainrpc.js:554:    this.responseHeaders = /** @type {?Object} */ (JSON.parse(
/src/closure/goog/net/crossdomainrpc.js-555-        /** @type {string} */ (params.get('headers'))));
##############################################
/src/closure/goog/net/crossdomainrpc.js-629-  return this.responseTextIsJson_ ?
/src/closure/goog/net/crossdomainrpc.js:630:      /** @type {?Object} */ (JSON.parse(this.responseText)) :
/src/closure/goog/net/crossdomainrpc.js-631-      undefined;
##############################################
/src/closure/goog/net/mockiframeio.js-249-goog.net.MockIFrameIo.prototype.getResponseJson = function() {
/src/closure/goog/net/mockiframeio.js:250:  return /** @type {!Object} */ (JSON.parse(this.lastContent_));
/src/closure/goog/net/mockiframeio.js-251-};
##############################################
/src/closure/goog/net/browsertestchannel.js-449-    try {
/src/closure/goog/net/browsertestchannel.js:450:      var respArray = this.parser_.parse(responseText);
/src/closure/goog/net/browsertestchannel.js-451-    } catch (e) {
##############################################
/src/closure/goog/net/streams/base64pbstreamparser.js-101-    var rawBytes = this.base64Decoder_.decode(input);
/src/closure/goog/net/streams/base64pbstreamparser.js:102:    result = (rawBytes === null) ? null : this.pbParser_.parse(rawBytes);
/src/closure/goog/net/streams/base64pbstreamparser.js-103-  } catch (e) {
##############################################
/src/closure/goog/net/streams/xhrstreamreader.js-382-    try {
/src/closure/goog/net/streams/xhrstreamreader.js:383:      var messages = this.parser_.parse(newData);
/src/closure/goog/net/streams/xhrstreamreader.js-384-      if (messages != null) {
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-160-      case State.MESSAGES: {
/src/closure/goog/net/streams/pbjsonstreamparser.js:161:        var messages = parser.jsonStreamParser_.parse(input.substring(pos));
/src/closure/goog/net/streams/pbjsonstreamparser.js-162-        addResultMessages(messages);
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-180-          // Feed a dummy "[" to match the ending "]".
/src/closure/goog/net/streams/pbjsonstreamparser.js:181:          parser.jsonStreamParser_.parse('[');
/src/closure/goog/net/streams/pbjsonstreamparser.js-182-          pos += (input[pos] === ',' ? 1 : 5);
##############################################
/src/closure/goog/net/streams/pbjsonstreamparser.js-191-      case State.STATUS: {
/src/closure/goog/net/streams/pbjsonstreamparser.js:192:        var status = parser.jsonStreamParser_.parse(input.substring(pos));
/src/closure/goog/net/streams/pbjsonstreamparser.js-193-        addResultStatus(status);
##############################################
/src/closure/goog/net/streams/jsonstreamparser.js-721-      parser.result_.push(
/src/closure/goog/net/streams/jsonstreamparser.js:722:          goog.asserts.assertInstanceof(JSON.parse(opt_data), Object));
/src/closure/goog/net/streams/jsonstreamparser.js-723-    }
##############################################
/src/closure/goog/net/channelrequest.js-948-
/src/closure/goog/net/channelrequest.js:949:  this.trident_.open();
/src/closure/goog/net/channelrequest.js-950-  goog.dom.safe.documentWrite(
##############################################
/src/closure/goog/net/corsxmlhttpfactory.js-149-  }
/src/closure/goog/net/corsxmlhttpfactory.js:150:  this.xdr_.open(method, url);
/src/closure/goog/net/corsxmlhttpfactory.js-151-};
##############################################
/src/closure/goog/net/xhrio.js-32- * The error event may also be called before completed and
/src/closure/goog/net/xhrio.js:33: * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.
/src/closure/goog/net/xhrio.js-34- *
##############################################
/src/closure/goog/net/xhrio.js-551-    this.inOpen_ = true;
/src/closure/goog/net/xhrio.js:552:    this.xhr_.open(method, String(url), true);  // Always async!
/src/closure/goog/net/xhrio.js-553-    this.inOpen_ = false;
##############################################
/src/closure/goog/net/xhrio.js-1174-
/src/closure/goog/net/xhrio.js:1175:  return goog.json.hybrid.parse(responseText);
/src/closure/goog/net/xhrio.js-1176-};
##############################################
/src/closure/goog/net/channeldebug.js-220-  try {
/src/closure/goog/net/channeldebug.js:221:    var responseArray = JSON.parse(responseText);
/src/closure/goog/net/channeldebug.js-222-    if (responseArray) {
##############################################
/src/closure/goog/net/iframeio.js-726- * JSON.parse or for responses that are not valid JSON (e.g. containing NaN).
/src/closure/goog/net/iframeio.js:727: * Use JSON.parse(this.getResponseText()) in the other cases.
/src/closure/goog/net/iframeio.js-728- * @return {Object} The parsed content.
##############################################
/src/closure/goog/net/iframeio.js-730-goog.net.IframeIo.prototype.getResponseJson = function() {
/src/closure/goog/net/iframeio.js:731:  return goog.json.parse(this.lastContent_);
/src/closure/goog/net/iframeio.js-732-};
##############################################
/src/closure/goog/net/browserchannel.js-1804-      try {
/src/closure/goog/net/browserchannel.js:1805:        response = this.parser_.parse(responseText);
/src/closure/goog/net/browserchannel.js-1806-      } catch (ex) {
##############################################
/src/closure/goog/net/browserchannel.js-1825-    if (!goog.string.isEmptyOrWhitespace(responseText)) {
/src/closure/goog/net/browserchannel.js:1826:      var response = this.parser_.parse(responseText);
/src/closure/goog/net/browserchannel.js-1827-      goog.asserts.assert(Array.isArray(response));
##############################################
/src/closure/goog/net/browserchannel.js-2339-    hostPrefix, path, opt_overridePort) {
/src/closure/goog/net/browserchannel.js:2340:  var uri = goog.Uri.parse(path);
/src/closure/goog/net/browserchannel.js-2341-  var uriAbsolute = (uri.getDomain() != '');
##############################################
/src/closure/goog/base.js-1223-      var xhr = new goog.global['XMLHttpRequest']();
/src/closure/goog/base.js:1224:      xhr.open('get', src, false);
/src/closure/goog/base.js-1225-      xhr.send();
##############################################
/src/closure/goog/transpile.js-706-function Kr(a,b){b=0>b?(-b<<1)+1:b<<1;do{var c=b&31;b=b>>>5|0;0<b&&(c|=32);Vg(a,uoa(c))}while(0<b)}function moa(){this.a=this.c=0}l(moa,n);function Xna(a){return a.b.charCodeAt(a.a)}function Wna(a){return a.a<a.c}function voa(){}l(voa,Ca);function Er(a){var b=new voa;sa(b,a);b.a(Error(b));return b}function woa(){this.a=this.c=0}l(woa,n);function xoa(a,b){a.b=b}function yoa(a,b){a.f=b}function zoa(){this.a=this.b=0}l(zoa,n);
/src/closure/goog/transpile.js:707:function Aoa(a,b,c,d,e,f,h,k,m){var p=new zoa;p.b=a;p.a=b;p.c=c;p.f=d;p.u=e;p.A=f;p.g=h;p.o=k;p.v=m;return p}function eoa(a){var b=JSON.parse(a);a=new woa;a.c=b.version;a.g=b.file;a.a=-1;a.o=b.mappings;a.A=b.sourceRoot;if(b.sections){for(var c=Lj(),d=b.sections,e=0;e<d.length;e++)c.Y(Boa(d[e]));xoa(a,c.ga())}else a.b=null;a.v=b.sources;a.u=b.names;var f=Xf();Kla(b,function(h){Ai(h,"x_")&&f.C(h,b[h])});yoa(a,uf(f));return Aoa(a.c,a.a,a.g,a.o,a.v,a.F,a.u,a.b,a.f)}
/src/closure/goog/transpile.js-708-function Boa(a){var b=a.offset.line,c=a.offset.column;if(null!=a.map&&null!=a.url)throw Er("Invalid map format: section may not have both 'map' and 'url'").s;if(null!=a.url){a=a.url;var d=(Fr(),doa),e=new toa;e.f=d;e.c=a;e.b=b;e.a=c;return e}if(null!=a.map)return a=r(a.map),d=(Fr(),roa),e=new toa,e.f=d,e.c=a,e.b=b,e.a=c,e;throw Er("Invalid map format: section must have either 'map' or 'url'").s;}function Coa(){this.f=0;this.c=!1}l(Coa,n);function Doa(){this.b=this.a=0}l(Doa,n);
##############################################
/src/closure/goog/storage/encryptedstorage.js-176-  try {
/src/closure/goog/storage/encryptedstorage.js:177:    wrapper[goog.storage.RichStorage.DATA_KEY] = JSON.parse(json);
/src/closure/goog/storage/encryptedstorage.js-178-  } catch (e) {
##############################################
/src/closure/goog/storage/storage.js-74-  try {
/src/closure/goog/storage/storage.js:75:    return JSON.parse(json);
/src/closure/goog/storage/storage.js-76-  } catch (e) {
##############################################
/src/closure/goog/testing/net/mockiframeio.js-250-goog.testing.net.MockIFrameIo.prototype.getResponseJson = function() {
/src/closure/goog/testing/net/mockiframeio.js:251:  return /** @type {!Object} */ (JSON.parse(this.lastContent_));
/src/closure/goog/testing/net/mockiframeio.js-252-};
##############################################
/src/closure/goog/testing/net/xhrio.js-821-
/src/closure/goog/testing/net/xhrio.js:822:  return /** @type {!Object} */ (JSON.parse(responseText));
/src/closure/goog/testing/net/xhrio.js-823-};
##############################################
/src/closure/goog/datasource/jsxmlhttpdatasource.js-167-    try {
/src/closure/goog/datasource/jsxmlhttpdatasource.js:168:      var jsonObj = /** @type {!Object} */ (JSON.parse(text));
/src/closure/goog/datasource/jsxmlhttpdatasource.js-169-      this.extendWith(jsonObj);
##############################################
/src/closure/goog/messaging/abstractchannel.js-187-    try {
/src/closure/goog/messaging/abstractchannel.js:188:      return /** @type {!Object} */ (JSON.parse(payload));
/src/closure/goog/messaging/abstractchannel.js-189-    } catch (err) {
##############################################
/src/closure/goog/messaging/portchannel.js-280-    try {
/src/closure/goog/messaging/portchannel.js:281:      data = JSON.parse(data);
/src/closure/goog/messaging/portchannel.js-282-    } catch (error) {
##############################################
/src/closure/goog/uri/uri.js-39- * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part
/src/closure/goog/uri/uri.js:40: * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the
/src/closure/goog/uri/uri.js-41- * decoded path, <code>/foo bar</code>.
##############################################
/src/closure/goog/uri/uri.js-45- * will not be auto-decoded. For example:
/src/closure/goog/uri/uri.js:46: * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will
/src/closure/goog/uri/uri.js-47- * return <code>relative/path%2fto/resource</code>.
##############################################
/src/closure/goog/uri/uri.js-53- * All setters return <code>this</code> and so may be chained, a la
/src/closure/goog/uri/uri.js:54: * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.
/src/closure/goog/uri/uri.js-55- *
##############################################
/src/closure/goog/uri/uri.js-593- *
/src/closure/goog/uri/uri.js:594: * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])
/src/closure/goog/uri/uri.js-595- * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>
##############################################
/src/closure/goog/uri/uri.js-833-  if (!(base instanceof goog.Uri)) {
/src/closure/goog/uri/uri.js:834:    base = goog.Uri.parse(base);
/src/closure/goog/uri/uri.js-835-  }
##############################################
/src/closure/goog/uri/uri.js-837-  if (!(rel instanceof goog.Uri)) {
/src/closure/goog/uri/uri.js:838:    rel = goog.Uri.parse(rel);
/src/closure/goog/uri/uri.js-839-  }
##############################################
/src/closure/goog/proto2/textformatserializer.js-73-  var parser = new goog.proto2.TextFormatSerializer.Parser();
/src/closure/goog/proto2/textformatserializer.js:74:  if (!parser.parse(message, textData, this.ignoreMissingFields_)) {
/src/closure/goog/proto2/textformatserializer.js-75-    return parser.getError();
##############################################
/src/closure/goog/proto2/textformatserializer.js-1034-
/src/closure/goog/proto2/textformatserializer.js:1035:  var stringValue = JSON.parse(/** @type {string} */ (value)).toString();
/src/closure/goog/proto2/textformatserializer.js-1036-  while (this.lookingAtType_(types.STRING)) {
/src/closure/goog/proto2/textformatserializer.js-1037-    value = this.consumeToken_(types.STRING);
/src/closure/goog/proto2/textformatserializer.js:1038:    stringValue += JSON.parse(/** @type {string} */ (value)).toString();
/src/closure/goog/proto2/textformatserializer.js-1039-  }
##############################################
/src/closure/goog/debug/logrecordserializer.js-63-  return goog.debug.logRecordSerializer.reconstitute_(
/src/closure/goog/debug/logrecordserializer.js:64:      /** @type {!Object} */ (JSON.parse(s)));
/src/closure/goog/debug/logrecordserializer.js-65-};
##############################################
/src/closure/goog/debug/debugwindow.js-420-  this.winOpening_ = true;
/src/closure/goog/debug/debugwindow.js:421:  this.win = window.open(
/src/closure/goog/debug/debugwindow.js-422-      '', this.getWindowName_(), 'width=' + w + ',height=' + h +
##############################################
/src/closure/goog/debug/debugwindow.js-481-
/src/closure/goog/debug/debugwindow.js:482:  this.win.document.open();
/src/closure/goog/debug/debugwindow.js-483-
##############################################
/src/closure/goog/debug/fancywindow.js-119-  var doc = this.win.document;
/src/closure/goog/debug/fancywindow.js:120:  doc.open();
/src/closure/goog/debug/fancywindow.js-121-  goog.dom.safe.documentWrite(doc, this.getHtml_());
##############################################
/src/closure/goog/async/nexttick.js-164-      var doc = win.document;
/src/closure/goog/async/nexttick.js:165:      doc.open();
/src/closure/goog/async/nexttick.js-166-      goog.dom.safe.documentWrite(doc, goog.html.SafeHtml.EMPTY);
##############################################
/src/closure/goog/window/window.js-191-    // strings here for target.
/src/closure/goog/window/window.js:192:    newWin = parentWin.open('', target, optionString);
/src/closure/goog/window/window.js-193-
##############################################
/src/closure/goog/window/window.js-240-  } else {
/src/closure/goog/window/window.js:241:    newWin = parentWin.open(
/src/closure/goog/window/window.js-242-        goog.html.SafeUrl.unwrap(safeLinkRef), target, optionString);
/src/closure/goog/window/window.js:243:    // Passing in 'noopener' into the 'windowFeatures' param of window.open(...)
/src/closure/goog/window/window.js-244-    // will yield a feature-deprived browser. This is an known issue, tracked
##############################################
/src/closure/goog/window/window.js-307-  return /** @type {?Window} */ (
/src/closure/goog/window/window.js:308:      goog.window.open(url, opt_options, opt_parentWin));
/src/closure/goog/window/window.js-309-};
##############################################
/src/closure/goog/window/window.js-344-
/src/closure/goog/window/window.js:345:  var newWin = goog.window.open(linkRef, opt_options);
/src/closure/goog/window/window.js-346-  if (!newWin) {
