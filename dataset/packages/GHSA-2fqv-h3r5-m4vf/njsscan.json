{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 6,
          "line": 15
        },
        "extra": {
          "line": "var \u00b5 = module.exports = {",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/src/plots/polar/micropolar.js",
        "start": {
          "col": 5,
          "line": 15
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 162
        },
        "extra": {
          "line": "  var \u03b5 = 1e-6, \u03b52 = \u03b5 * \u03b5, \u03c0 = Math.PI, half\u03c0 = \u03c0 / 2, sqrt\u03c0 = Math.sqrt(\u03c0), radians = \u03c0 / 180, degrees = 180 / \u03c0;",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/src/plots/geo/projections.js",
        "start": {
          "col": 7,
          "line": 162
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 20,
          "line": 1
        },
        "extra": {
          "line": "--ignore-directory=is:dist",
          "message": "Syntax error"
        },
        "path": "/src/.ackrc",
        "start": {
          "col": 19,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 13,
          "line": 3
        },
        "extra": {
          "line": "  \"browser\": true,  // Define globals exposed by modern browsers.",
          "message": "Syntax error"
        },
        "path": "/src/.jshintrc",
        "start": {
          "col": 12,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 8
        },
        "extra": {
          "line": "circle.yml",
          "message": "Lexical error: end of file in comment"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 8
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 8,
          "line": 1
        },
        "extra": {
          "line": "The MIT License (MIT)",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 11038
        },
        "extra": {
          "line": "  var \u03b5 = 1e-6, \u03b52 = \u03b5 * \u03b5, \u03c0 = Math.PI, \u03c4 = 2 * \u03c0, \u03c4\u03b5 = \u03c4 - \u03b5, half\u03c0 = \u03c0 / 2, d3_radians = \u03c0 / 180, d3_degrees = 180 / \u03c0;",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/dist/plotly-with-meta.js",
        "start": {
          "col": 7,
          "line": 11038
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 11038
        },
        "extra": {
          "line": "  var \u03b5 = 1e-6, \u03b52 = \u03b5 * \u03b5, \u03c0 = Math.PI, \u03c4 = 2 * \u03c0, \u03c4\u03b5 = \u03c4 - \u03b5, half\u03c0 = \u03c0 / 2, d3_radians = \u03c0 / 180, d3_degrees = 180 / \u03c0;",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/dist/plotly.js",
        "start": {
          "col": 7,
          "line": 11038
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "generic_error_disclosure": {
      "files": [
        {
          "file_path": "/src/src/lib/index.js",
          "match_lines": [
            119,
            119
          ],
          "match_position": [
            33,
            46
          ],
          "match_string": "    if(lib.VERBOSE === 'trace') console.trace();"
        }
      ],
      "metadata": {
        "cwe": "CWE-209: Generation of Error Message Containing Sensitive Information",
        "description": "Error messages with stack traces may expose sensitive information about the application.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "WARNING"
      }
    },
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/src/lib/index.js",
          "match_lines": [
            168,
            168
          ],
          "match_position": [
            24,
            35
          ],
          "match_string": "        x = Math.floor(Math.random() * base).toString(base);"
        },
        {
          "file_path": "/src/src/lib/index.js",
          "match_lines": [
            174,
            174
          ],
          "match_position": [
            24,
            35
          ],
          "match_string": "        x = Math.floor(Math.random() * b).toString(base);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
