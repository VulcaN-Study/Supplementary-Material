/src/src/schemes/urn.ts-49-				
/src/src/schemes/urn.ts:50:				components = schemeHandler.parse(components, options);
/src/src/schemes/urn.ts-51-			} else {
##############################################
/src/src/uri.ts-393-			if (schemeHandler && schemeHandler.parse) {
/src/src/uri.ts:394:				schemeHandler.parse(components, options);
/src/src/uri.ts-395-			}
##############################################
/src/build/schemes/urn.js-31-                components.path = matches[2];
/src/build/schemes/urn.js:32:                components = schemeHandler.parse(components, options);
/src/build/schemes/urn.js-33-            }
##############################################
/src/build/uri.js-266-            if (schemeHandler && schemeHandler.parse) {
/src/build/uri.js:267:                schemeHandler.parse(components, options);
/src/build/uri.js-268-            }
##############################################
/src/README.md-11-
/src/README.md:12:	var components = URI.parse("uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body");
/src/README.md-13-	//returns:
##############################################
/src/README.md-42-	//convert IRI to URI
/src/README.md:43:	URI.serialize(URI.parse("http://examplé.org/rosé")) === "http://xn--exampl-gva.org/ros%C3%A9"
/src/README.md-44-	//convert URI to IRI
/src/README.md:45:	URI.serialize(URI.parse("http://xn--exampl-gva.org/ros%C3%A9"), {iri:true}) === "http://examplé.org/rosé"
/src/README.md-46-
##############################################
/src/README.md-96-
/src/README.md:97:	URI.parse("mailto:alpha@example.com,bravo@example.com?subject=SUBSCRIBE&body=Sign%20me%20up!");
/src/README.md-98-	//returns:
##############################################
/src/tests/qunit.js-580-	message = message || (result ? "okay" : "failed");
/src/tests/qunit.js:581:	QUnit.ok( result, result ? message + ": " + expected : message + ", expected: " + QUnit.jsDump.parse(expected) + " result: " + QUnit.jsDump.parse(actual) );
/src/tests/qunit.js-582-}
##############################################
/src/tests/qunit.js-898-		while ( i-- )
/src/tests/qunit.js:899:			ret[i] = this.parse( arr[i] );				
/src/tests/qunit.js-900-		this.down();
##############################################
/src/tests/qunit.js-982-				
/src/tests/qunit.js:983:				ret = [ ret, this.parse( fn, 'functionArgs' ), '){'].join('');
/src/tests/qunit.js:984:				return join( ret, this.parse(fn,'functionCode'), '}' );
/src/tests/qunit.js-985-			},
##############################################
/src/tests/qunit.js-992-				for ( var key in map )
/src/tests/qunit.js:993:					ret.push( this.parse(key,'key') + ': ' + this.parse(map[key]) );
/src/tests/qunit.js-994-				this.down();
##############################################
/src/tests/qunit.js-1006-					if ( val )
/src/tests/qunit.js:1007:						ret += ' ' + a + '=' + this.parse( val, 'attribute' );
/src/tests/qunit.js-1008-				}
##############################################
/src/tests/tests.js-19-	//scheme
/src/tests/tests.js:20:	components = URI.parse("uri:");
/src/tests/tests.js-21-	strictEqual(components.error, undefined, "scheme errors");
##############################################
/src/tests/tests.js-31-	//userinfo
/src/tests/tests.js:32:	components = URI.parse("//@");
/src/tests/tests.js-33-	strictEqual(components.error, undefined, "userinfo errors");
##############################################
/src/tests/tests.js-43-	//host
/src/tests/tests.js:44:	components = URI.parse("//");
/src/tests/tests.js-45-	strictEqual(components.error, undefined, "host errors");
##############################################
/src/tests/tests.js-55-	//port
/src/tests/tests.js:56:	components = URI.parse("//:");
/src/tests/tests.js-57-	strictEqual(components.error, undefined, "port errors");
##############################################
/src/tests/tests.js-67-	//path
/src/tests/tests.js:68:	components = URI.parse("");
/src/tests/tests.js-69-	strictEqual(components.error, undefined, "path errors");
##############################################
/src/tests/tests.js-79-	//query
/src/tests/tests.js:80:	components = URI.parse("?");
/src/tests/tests.js-81-	strictEqual(components.error, undefined, "query errors");
##############################################
/src/tests/tests.js-91-	//fragment
/src/tests/tests.js:92:	components = URI.parse("#");
/src/tests/tests.js-93-	strictEqual(components.error, undefined, "fragment errors");
##############################################
/src/tests/tests.js-103-	//all
/src/tests/tests.js:104:	components = URI.parse("uri://user:pass@example.com:123/one/two.three?q1=a1&q2=a2#body");
/src/tests/tests.js-105-	strictEqual(components.error, undefined, "all errors");
##############################################
/src/tests/tests.js-115-	//IPv4address
/src/tests/tests.js:116:	components = URI.parse("//10.10.10.10/test");
/src/tests/tests.js-117-	strictEqual(components.error, undefined, "IPv4address errors");
##############################################
/src/tests/tests.js-126-	//mixed IPv4address & reg-name, example from terion-name (https://github.com/garycourt/uri-js/issues/4)
/src/tests/tests.js:127:	components = URI.parse("uri://10.10.10.10.example.com/en/process");
/src/tests/tests.js-128-	strictEqual(components.error, undefined, "mixed errors");
##############################################
/src/tests/tests.js-285-	test("IRI Parsing", function () {
/src/tests/tests.js:286:		var components = URI.parse("uri://us\xA0er:pa\uD7FFss@example.com:123/o\uF900ne/t\uFDCFwo.t\uFDF0hree?q1=a1\uF8FF\uE000&q2=a2#bo\uFFEFdy", IRI_OPTION);
/src/tests/tests.js-287-		strictEqual(components.error, undefined, "all errors");
##############################################
/src/tests/tests.js-321-		//example from RFC 3987
/src/tests/tests.js:322:		strictEqual(URI.serialize(URI.parse("uri://www.example.org/red%09ros\xE9#red", IRI_OPTION)), "uri://www.example.org/red%09ros%C3%A9#red");
/src/tests/tests.js-323-		
/src/tests/tests.js-324-		//Internationalized Domain Name conversion via punycode example from RFC 3987
/src/tests/tests.js:325:		strictEqual(URI.serialize(URI.parse("uri://r\xE9sum\xE9.example.org", {iri:true, domainHost:true}), {domainHost:true}), "uri://xn--rsum-bpad.example.org");
/src/tests/tests.js-326-	});
##############################################
/src/tests/tests.js-329-		//examples from RFC 3987
/src/tests/tests.js:330:		strictEqual(URI.serialize(URI.parse("uri://www.example.org/D%C3%BCrst"), IRI_OPTION), "uri://www.example.org/D\xFCrst");
/src/tests/tests.js:331:		strictEqual(URI.serialize(URI.parse("uri://www.example.org/D%FCrst"), IRI_OPTION), "uri://www.example.org/D%FCrst");
/src/tests/tests.js:332:		strictEqual(URI.serialize(URI.parse("uri://xn--99zt52a.example.org/%e2%80%ae"), IRI_OPTION), "uri://xn--99zt52a.example.org/%E2%80%AE");  //or uri://\u7D0D\u8C46.example.org/%E2%80%AE
/src/tests/tests.js-333-		
/src/tests/tests.js-334-		//Internationalized Domain Name conversion via punycode example from RFC 3987
/src/tests/tests.js:335:		strictEqual(URI.serialize(URI.parse("uri://xn--rsum-bpad.example.org", {domainHost:true}), {iri:true, domainHost:true}), "uri://r\xE9sum\xE9.example.org");
/src/tests/tests.js-336-	});
##############################################
/src/tests/tests.js-380-		//example from RFC 2141
/src/tests/tests.js:381:		var components = URI.parse("urn:foo:a123,456");
/src/tests/tests.js-382-		strictEqual(components.error, undefined, "errors");
##############################################
/src/tests/tests.js-416-		//example from RFC 4122
/src/tests/tests.js:417:		var components = URI.parse("urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6");
/src/tests/tests.js-418-		strictEqual(components.error, undefined, "errors");
##############################################
/src/tests/tests.js-421-		
/src/tests/tests.js:422:		components = URI.parse("urn:uuid:notauuid-7dec-11d0-a765-00a0c91e6bf6");
/src/tests/tests.js-423-		notStrictEqual(components.error, undefined, "errors");
##############################################
/src/tests/tests.js-459-
/src/tests/tests.js:460:		components = URI.parse("mailto:chris@example.com");
/src/tests/tests.js-461-		strictEqual(components.error, undefined, "error");
##############################################
/src/tests/tests.js-473-		
/src/tests/tests.js:474:		components = URI.parse("mailto:infobot@example.com?subject=current-issue");
/src/tests/tests.js-475-		deepEqual(components.to, ["infobot@example.com"], "to");
##############################################
/src/tests/tests.js-477-
/src/tests/tests.js:478:		components = URI.parse("mailto:infobot@example.com?body=send%20current-issue");
/src/tests/tests.js-479-		deepEqual(components.to, ["infobot@example.com"], "to");
##############################################
/src/tests/tests.js-481-
/src/tests/tests.js:482:		components = URI.parse("mailto:infobot@example.com?body=send%20current-issue%0D%0Asend%20index");
/src/tests/tests.js-483-		deepEqual(components.to, ["infobot@example.com"], "to");
##############################################
/src/tests/tests.js-485-
/src/tests/tests.js:486:		components = URI.parse("mailto:list@example.org?In-Reply-To=%3C3469A91.D10AF4C@example.com%3E");
/src/tests/tests.js-487-		deepEqual(components.to, ["list@example.org"], "to");
##############################################
/src/tests/tests.js-489-
/src/tests/tests.js:490:		components = URI.parse("mailto:majordomo@example.com?body=subscribe%20bamboo-l");
/src/tests/tests.js-491-		deepEqual(components.to, ["majordomo@example.com"], "to");
##############################################
/src/tests/tests.js-493-
/src/tests/tests.js:494:		components = URI.parse("mailto:joe@example.com?cc=bob@example.com&body=hello");
/src/tests/tests.js-495-		deepEqual(components.to, ["joe@example.com"], "to");
##############################################
/src/tests/tests.js-498-
/src/tests/tests.js:499:		components = URI.parse("mailto:joe@example.com?cc=bob@example.com?body=hello");
/src/tests/tests.js-500-		if (URI.VALIDATE_SUPPORT) ok(components.error, "invalid header fields");
/src/tests/tests.js-501-
/src/tests/tests.js:502:		components = URI.parse("mailto:gorby%25kremvax@example.com");
/src/tests/tests.js-503-		deepEqual(components.to, ["gorby%kremvax@example.com"], "to gorby%kremvax@example.com");
/src/tests/tests.js-504-
/src/tests/tests.js:505:		components = URI.parse("mailto:unlikely%3Faddress@example.com?blat=foop");
/src/tests/tests.js-506-		deepEqual(components.to, ["unlikely?address@example.com"], "to unlikely?address@example.com");
##############################################
/src/tests/tests.js-508-		
/src/tests/tests.js:509:		components = URI.parse("mailto:Mike%26family@example.org");
/src/tests/tests.js-510-		deepEqual(components.to, ["Mike&family@example.org"], "to Mike&family@example.org");
/src/tests/tests.js-511-
/src/tests/tests.js:512:		components = URI.parse("mailto:%22not%40me%22@example.org");
/src/tests/tests.js-513-		deepEqual(components.to, ['"not@me"@example.org'], "to " + '"not@me"@example.org');
/src/tests/tests.js-514-
/src/tests/tests.js:515:		components = URI.parse("mailto:%22oh%5C%5Cno%22@example.org");
/src/tests/tests.js-516-		deepEqual(components.to, ['"oh\\\\no"@example.org'], "to " + '"oh\\\\no"@example.org');
/src/tests/tests.js-517-
/src/tests/tests.js:518:		components = URI.parse("mailto:%22%5C%5C%5C%22it's%5C%20ugly%5C%5C%5C%22%22@example.org");
/src/tests/tests.js-519-		deepEqual(components.to, ['"\\\\\\"it\'s\\ ugly\\\\\\""@example.org'], "to " + '"\\\\\\"it\'s\\ ugly\\\\\\""@example.org');
/src/tests/tests.js-520-
/src/tests/tests.js:521:		components = URI.parse("mailto:user@example.org?subject=caf%C3%A9");
/src/tests/tests.js-522-		deepEqual(components.to, ["user@example.org"], "to");
##############################################
/src/tests/tests.js-524-
/src/tests/tests.js:525:		components = URI.parse("mailto:user@example.org?subject=%3D%3Futf-8%3FQ%3Fcaf%3DC3%3DA9%3F%3D");
/src/tests/tests.js-526-		deepEqual(components.to, ["user@example.org"], "to");
##############################################
/src/tests/tests.js-528-
/src/tests/tests.js:529:		components = URI.parse("mailto:user@example.org?subject=%3D%3Fiso-8859-1%3FQ%3Fcaf%3DE9%3F%3D");
/src/tests/tests.js-530-		deepEqual(components.to, ["user@example.org"], "to");
##############################################
/src/tests/tests.js-532-
/src/tests/tests.js:533:		components = URI.parse("mailto:user@example.org?subject=caf%C3%A9&body=caf%C3%A9");
/src/tests/tests.js-534-		deepEqual(components.to, ["user@example.org"], "to");
##############################################
/src/tests/tests.js-538-		if (URI.IRI_SUPPORT) {
/src/tests/tests.js:539:			components = URI.parse("mailto:user@%E7%B4%8D%E8%B1%86.example.org?subject=Test&body=NATTO");
/src/tests/tests.js-540-			deepEqual(components.to, ["user@xn--99zt52a.example.org"], "to");
##############################################
/src/dist/uri-iri.min.js-11-d.scheme?"relative":void 0===d.fragment?"absolute":"uri":"same-document";b.reference&&"suffix"!==b.reference&&b.reference!==d.reference&&(d.error=d.error||"URI is not a "+b.reference+" reference.");c=t[(b.scheme||d.scheme||"").toLowerCase()];if("undefined"===typeof A||b.unicodeSupport||c&&c.unicodeSupport)h(d,g);else{if(d.host&&(b.domainHost||c&&c.domainHost))try{d.host=A.b(d.host.replace(g.a,w).toLowerCase())}catch(p){d.error=d.error||"Host's domain name can not be converted to ASCII via punycode: "+
/src/dist/uri-iri.min.js:12:p}h(d,u)}c&&c.parse&&c.parse(d,b)}else d.error=d.error||"URI can not be parsed.";return d}function C(a){var b=[];void 0!==a.userinfo&&(b.push(a.userinfo),b.push("@"));void 0!==a.host&&b.push(a.host);"number"===typeof a.port&&(b.push(":"),b.push(a.port.toString(10)));return b.length?b.join(""):void 0}function l(a){for(var b=[],g;a.length;)a.match(D)?a=a.replace(D,""):a.match(E)?a=a.replace(E,"/"):a.match(c)?(a=a.replace(c,"/"),b.pop()):"."===a||".."===a?a="":(g=a.match(p)[0],a=a.slice(g.length),b.push(g));
/src/dist/uri-iri.min.js-13-return b.join("")}function v(a,b){void 0===b&&(b={});var g=b.iri?z:u,c=[],d,f;(d=t[(b.scheme||a.scheme||"").toLowerCase()])&&d.serialize&&d.serialize(a,b);if("undefined"!==typeof A&&a.host&&(b.domainHost||d&&d.domainHost))try{a.host=b.iri?A.f(a.host):A.b(a.host.replace(g.a,w).toLowerCase())}catch(r){a.error=a.error||"Host's domain name can not be converted to "+(b.iri?"Unicode":"ASCII")+" via punycode: "+r}h(a,g);"suffix"!==b.reference&&a.scheme&&(c.push(a.scheme),c.push(":"));g=C(a);void 0!==g&&
##############################################
/src/dist/schemes/urn.min.js-1-(function(){var e=URI.pctEncChar,k=/^urn\:((?:[0-9A-Za-z][0-9A-Za-z\-]{1,31}))$/,n=/^((?:[0-9A-Za-z][0-9A-Za-z\-]{1,31}))\:((?:(?:(?:\%[0-9A-Fa-f]{2})|[0-9A-Za-z\(\)\+\,\-\.\:\=\@\;\$\_\!\*\'\/\?\#])+))$/,w=/^([^\:]+)\:(.*)/,B=/[\x00-\x20\\\"\&\<\>\[\]\^\`\{\|\}\~\x7F-\xFF]/g,x=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/;URI.SCHEMES.urn={parse:function(h,e){var k=h.path.match(n),l,v;k||(e.tolerant||(h.error=h.error||"URN is not strictly valid."),k=h.path.match(w));k?(l="urn:"+k[1].toLowerCase(),
/src/dist/schemes/urn.min.js:2:(v=URI.SCHEMES[l])||(v=URI.SCHEMES[l]={parse:function(h){return h},serialize:URI.SCHEMES.urn.serialize}),h.scheme=l,h.path=k[2],h=v.parse(h,e)):h.error=h.error||"URN can not be parsed.";return h},serialize:function(h,m){var n=h.scheme||m.scheme,l;n&&"urn"!==n&&((l=n.match(k))||(l=["urn:"+n,n]),h.scheme="urn",h.path=l[1]+":"+(h.path?h.path.replace(B,e):""));return h}};URI.SCHEMES["urn:uuid"]={parse:function(h,e){e.tolerant||h.path&&h.path.match(x)||(h.error=h.error||"UUID is not valid.");return h},
/src/dist/schemes/urn.min.js-3-serialize:function(h,e){e.tolerant||h.path&&h.path.match(x)?h.path=(h.path||"").toLowerCase():h.scheme=void 0;return URI.SCHEMES.urn.serialize(h,e)}}})();
##############################################
/src/dist/uri.min.js-8-c.path=e[6]||"",c.query=e[7],c.fragment=e[8],isNaN(c.port)&&(c.port=e[5])):(c.scheme=e[1]||void 0,c.userinfo=-1!==a.indexOf("@")?e[3]:void 0,c.host=-1!==a.indexOf("//")?e[4]:void 0,c.port=parseInt(e[5],10),c.path=e[6]||"",c.query=-1!==a.indexOf("?")?e[7]:void 0,c.fragment=-1!==a.indexOf("#")?e[8]:void 0,isNaN(c.port)&&(c.port=a.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?e[4]:void 0)),c.reference=void 0!==c.scheme||void 0!==c.userinfo||void 0!==c.host||void 0!==c.port||c.path||void 0!==c.query?void 0===
/src/dist/uri.min.js:9:c.scheme?"relative":void 0===c.fragment?"absolute":"uri":"same-document",b.reference&&"suffix"!==b.reference&&b.reference!==c.reference&&(c.error=c.error||"URI is not a "+b.reference+" reference."),e=r[(b.scheme||c.scheme||"").toLowerCase()],t(c,d),e&&e.parse&&e.parse(c,b)):c.error=c.error||"URI can not be parsed.";return c}function u(a){var b=[];void 0!==a.userinfo&&(b.push(a.userinfo),b.push("@"));void 0!==a.host&&b.push(a.host);"number"===typeof a.port&&(b.push(":"),b.push(a.port.toString(10)));
/src/dist/uri.min.js-10-return b.length?b.join(""):void 0}function l(a){for(var b=[],d;a.length;)a.match(v)?a=a.replace(v,""):a.match(w)?a=a.replace(w,"/"):a.match(x)?(a=a.replace(x,"/"),b.pop()):"."===a||".."===a?a="":(d=a.match(B)[0],a=a.slice(d.length),b.push(d));return b.join("")}function g(a,b){void 0===b&&(b={});var d=n,e=[],c,f;(c=r[(b.scheme||a.scheme||"").toLowerCase()])&&c.serialize&&c.serialize(a,b);t(a,d);"suffix"!==b.reference&&a.scheme&&(e.push(a.scheme),e.push(":"));d=u(a);void 0!==d&&("suffix"!==b.reference&&
