/src/lib/features/data-source.js-69-    const type = id.split(':')[0];
/src/lib/features/data-source.js:70:    const funcArgs = JSON.parse(args);
/src/lib/features/data-source.js-71-    const method = this[`create${type}`].bind(this);
##############################################
/src/lib/features/data-source.js.map:1:{"version":3,"sources":["../../src/features/data-source.js"],"names":["Feature","RockApolloDataSource","console","warn","getFeatures","ApollosConfig","featuresConfig","args","Promise","all","map","featureConfig","finalConfig","type","createActionBarFeature","createVerticalCardListFeature","createHorizontalCardListFeature","createHeroListFeature","createPrayerListFeature","createActionListFeature","getFromId","id","info","cacheControl","split","funcArgs","JSON","parse","method","bind","setCacheHint","createFeatureId","stringify","attachRelatedNodeId","relatedNode","action","__typename","algorithms","title","subtitle","primaryAction","ActionAlgorithm","context","dataSources","actions","runAlgorithms","compiledActions","length","heroAlgorithms","heroCard","cards","allActions","slice","isFeatured","hyphenatedTitle","createTextFeature","text","body","createScriptureFeature","reference","version","isCard","prayers","getScriptureShareMessage","ref","Scripture","scriptures","getScriptures","content","replace","join"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\nimport RockApolloDataSource from '@apollosproject/rock-apollo-data-source';\nimport { createGlobalId } from '@apollosproject/server-core';\nimport ApollosConfig from '@apollosproject/config';\n\nexport default class Feature extends RockApolloDataSource {\n  resource = '';\n\n  getFromId(args, id, { info } = { info: {} }) {\n    this.cacheControl = info.cacheControl;\n    const type = id.split(':')[0];\n    const funcArgs = JSON.parse(args);\n    const method = this[`create${type}`].bind(this);\n    return method(funcArgs);\n  }\n\n  setCacheHint(args) {\n    if (this.cacheControl) {\n      this.cacheControl.setCacheHint(args);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createFeatureId({ args }) {\n    return JSON.stringify(args);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  attachRelatedNodeId({ relatedNode, ...action } = {}) {\n    if (relatedNode && !relatedNode.id) {\n      return {\n        ...action,\n        relatedNode: {\n          ...relatedNode,\n          id: createGlobalId(\n            JSON.stringify(relatedNode),\n            relatedNode.__typename\n          ),\n        },\n      };\n    }\n\n    return { relatedNode, ...action };\n  }\n\n  async createActionListFeature({\n    algorithms = [],\n    title,\n    subtitle,\n    primaryAction,\n    ...args\n  }) {\n    // Generate a list of actions.\n    const { ActionAlgorithm } = this.context.dataSources;\n    const actions = () => ActionAlgorithm.runAlgorithms({ algorithms, args });\n\n    // Ensures that we have a generated ID for the Primary Action related node, if not provided.\n    if (primaryAction) {\n      // eslint-disable-next-line no-param-reassign\n      primaryAction = this.attachRelatedNodeId(primaryAction);\n    }\n\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          algorithms,\n          title,\n          subtitle,\n          primaryAction,\n          ...args,\n        },\n      }),\n      actions,\n      title,\n      subtitle,\n      primaryAction,\n      // Typanme is required so GQL knows specifically what Feature is being created\n      __typename: 'ActionListFeature',\n    };\n  }\n\n  async createActionBarFeature({\n    actions = [],\n    title,\n    algorithms = [],\n    ...args\n  }) {\n    const { ActionAlgorithm } = this.context.dataSources;\n\n    // Run algorithms if we have them, otherwise pull from the config\n    const compiledActions = () =>\n      actions.length\n        ? actions.map((action) => this.attachRelatedNodeId(action))\n        : ActionAlgorithm.runAlgorithms({ algorithms, args });\n\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          title,\n          algorithms,\n          actions,\n        },\n      }),\n      actions: compiledActions,\n      title,\n      // Typename is required so GQL knows specifically what Feature is being created\n      __typename: 'ActionBarFeature',\n    };\n  }\n\n  async createHeroListFeature({\n    algorithms = [],\n    heroAlgorithms = [],\n    title,\n    subtitle,\n    primaryAction,\n    ...args\n  }) {\n    // Generate a list of actions.\n    let actions;\n    let heroCard;\n    const { ActionAlgorithm } = this.context.dataSources;\n\n    // If we have a strategy for selecting the hero card.\n    if (heroAlgorithms && heroAlgorithms.length) {\n      // The actions come from the action algorithms\n      actions = () => ActionAlgorithm.runAlgorithms({ algorithms, args });\n      // and the hero comes from the hero algorithms\n      heroCard = async () => {\n        const cards = await ActionAlgorithm.runAlgorithms({\n          algorithms: heroAlgorithms,\n          args,\n        });\n        return cards.length ? cards[0] : null;\n      };\n      // Otherwise, if we don't have a strategy\n    } else {\n      // Get all the cards (sorry, no lazy loading here)\n      const allActions = await ActionAlgorithm.runAlgorithms({\n        algorithms,\n        args,\n      });\n      // The actions are all actions after the first\n      actions = allActions.slice(1);\n      // And the hero is the first action.\n      heroCard = allActions.length ? allActions[0] : null;\n    }\n\n    // Ensures that we have a generated ID for the Primary Action related node, if not provided.\n    if (primaryAction) {\n      // eslint-disable-next-line no-param-reassign\n      primaryAction = this.attachRelatedNodeId(primaryAction);\n    }\n\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          algorithms,\n          heroAlgorithms,\n          title,\n          subtitle,\n          primaryAction,\n          ...args,\n        },\n      }),\n      actions,\n      heroCard,\n      title,\n      subtitle,\n      primaryAction,\n      // Typanme is required so GQL knows specifically what Feature is being created\n      __typename: 'HeroListFeature',\n    };\n  }\n\n  async createVerticalCardListFeature({\n    algorithms = [],\n    title,\n    subtitle,\n    isFeatured = false,\n    ...args\n  }) {\n    // Generate a list of cards.\n    const { ActionAlgorithm } = this.context.dataSources;\n    const cards = () => ActionAlgorithm.runAlgorithms({ algorithms, args });\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          algorithms,\n          title,\n          subtitle,\n          isFeatured,\n          ...args,\n        },\n      }),\n      cards,\n      isFeatured,\n      title,\n      subtitle,\n      // Typename is required so GQL knows specifically what Feature is being created\n      __typename: 'VerticalCardListFeature',\n    };\n  }\n\n  async createHorizontalCardListFeature({\n    algorithms = [],\n    hyphenatedTitle,\n    title,\n    subtitle,\n    primaryAction,\n    ...args\n  }) {\n    // Generate a list of horizontal cards.\n    const { ActionAlgorithm } = this.context.dataSources;\n    const cards = () => ActionAlgorithm.runAlgorithms({ algorithms, args });\n    // Ensures that we have a generated ID for the Primary Action related node, if not provided.\n    // Ensures that we have a generated ID for the Primary Action related node, if not provided.\n    if (primaryAction) {\n      // eslint-disable-next-line no-param-reassign\n      primaryAction = this.attachRelatedNodeId(primaryAction);\n    }\n\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          algorithms,\n          title,\n          subtitle,\n          primaryAction,\n          ...args,\n        },\n      }),\n      cards,\n      hyphenatedTitle,\n      title,\n      subtitle,\n      primaryAction,\n      // Typename is required so GQL knows specifically what Feature is being created\n      __typename: 'HorizontalCardListFeature',\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createTextFeature({ text, id }) {\n    return {\n      body: text,\n      id,\n      __typename: 'TextFeature',\n    };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createScriptureFeature({ reference, version, id }) {\n    return {\n      reference,\n      version,\n      id,\n      __typename: 'ScriptureFeature',\n    };\n  }\n\n  createPrayerListFeature({\n    algorithms = [],\n    title,\n    subtitle,\n    isCard = true,\n    ...args\n  }) {\n    const { ActionAlgorithm } = this.context.dataSources;\n    const prayers = () => ActionAlgorithm.runAlgorithms({ algorithms, args });\n    return {\n      // The Feature ID is based on all of the action ids, added together.\n      // This is naive, and could be improved.\n      id: this.createFeatureId({\n        args: {\n          algorithms,\n          title,\n          subtitle,\n          isCard,\n          ...args,\n        },\n      }),\n      prayers,\n      title,\n      subtitle,\n      isCard,\n      // Typename is required so GQL knows specifically what Feature is being created\n      __typename: 'PrayerListFeature',\n    };\n  }\n\n  async getScriptureShareMessage(ref) {\n    const { Scripture } = this.context.dataSources;\n    const scriptures = await Scripture.getScriptures(ref);\n    return scriptures\n      .map(\n        ({ content, reference }) =>\n          `${content.replace(/<[^>]*>?/gm, '')} ${reference}`\n      )\n      .join('\\n\\n');\n  }\n\n  // deprecated\n  getHomeFeedFeatures = () =>\n    console.warn(\n      'getHomeFeedFeatures is deprecated, please use FeatureFeed.getFeed({type: \"apollosConfig\", args: {\"section\": \"home\"}})'\n    ) || this.getFeatures(get(ApollosConfig, 'HOME_FEATURES', []));\n\n  getFeatures = async (featuresConfig = [], args = {}) => {\n    return Promise.all(\n      featuresConfig.map((featureConfig) => {\n        const finalConfig = { ...featureConfig, ...args };\n        switch (featureConfig.type) {\n          case 'ActionBar':\n            return this.createActionBarFeature(finalConfig);\n          case 'VerticalCardList':\n            return this.createVerticalCardListFeature(finalConfig);\n          case 'HorizontalCardList':\n            return this.createHorizontalCardListFeature(finalConfig);\n          case 'HeroListFeature':\n            console.warn(\n              'Deprecated: Please use the name \"HeroList\" instead. You used \"HeroListFeature\"'\n            );\n            return this.createHeroListFeature(finalConfig);\n          case 'HeroList':\n            return this.createHeroListFeature(finalConfig);\n          case 'PrayerList':\n            return this.createPrayerListFeature(finalConfig);\n          case 'ActionList':\n          default:\n            // Action list was the default in 1.3.0 and prior.\n            return this.createActionListFeature(finalConfig);\n        }\n      })\n    );\n  };\n}\n"],"file":"data-source.js"}
##############################################
/src/lib/template/data-source.js-29-      });
/src/lib/template/data-source.js:30:      return JSON.parse(result).template;
/src/lib/template/data-source.js-31-    });
##############################################
/src/lib/template/data-source.js.map:1:{"version":3,"sources":["../../src/template/data-source.js"],"names":["Template","RockApolloDataSource","template","currentPersonId","personId","context","dataSources","Auth","getCurrentPerson","id","AuthenticationError","templateWithContext","result","post","JSON","parse"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEe,MAAMA,QAAN,SAAuBC,6BAAvB,CAA4C;AAAA;AAAA;;AAAA,4CACxC,OAAO;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAP,KAAyC;AACxD,YAAMC,QAAQ,GACZD,eAAe,IACf,CAAC,MAAM,KAAKE,OAAL,CAAaC,WAAb,CAAyBC,IAAzB,CAA8BC,gBAA9B,EAAP,EAAyDC,EAF3D;AAIA,UAAI,CAACL,QAAL,EACE,MAAM,IAAIM,iCAAJ,CACJ,0DADI,CAAN;AAIF,YAAMC,mBAAmB,GAAI,iBAAgBP,QAAS,OAAMF,QAAS,iBAArE;AACA,YAAMU,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAU,qBAAV,EAAiC;AACpDX,QAAAA,QAAQ,EAAES;AAD0C,OAAjC,CAArB;AAGA,aAAOG,IAAI,CAACC,KAAL,CAAWH,MAAX,EAAmBV,QAA1B;AACD,KAhBwD;AAAA;;AAAA","sourcesContent":["import RockApolloDataSource from '@apollosproject/rock-apollo-data-source';\nimport { AuthenticationError } from 'apollo-server';\n\nexport default class Template extends RockApolloDataSource {\n  renderTemplate = async ({ template, currentPersonId }) => {\n    const personId =\n      currentPersonId ||\n      (await this.context.dataSources.Auth.getCurrentPerson()).id;\n\n    if (!personId)\n      throw new AuthenticationError(\n        'Must provide a `currentPersonId` context or be logged in'\n      );\n\n    const templateWithContext = `{% person id:'${personId}' %}${template}{% endperson %}`;\n    const result = await this.post('Lava/RenderTemplate', {\n      template: templateWithContext,\n    });\n    return JSON.parse(result).template;\n  };\n}\n"],"file":"data-source.js"}
##############################################
/src/lib/rock-constants/index.js.map:1:{"version":3,"sources":["../../src/rock-constants/index.js"],"names":["ROCK_MAPPINGS","ApollosConfig","RockConstants","RockApolloDataSource","name","CONTENT_ITEM","EntityType","findOrCreate","model","objectAttributes","Cache","context","dataSources","cacheKey","JSON","stringify","cachedObj","get","key","parse","filter","Object","keys","map","join","object","request","first","set","data","objectId","post","ret","createOrFindInteractionComponent","componentName","channelId","entityId","Name","ROCK","VERSION","InteractionChannelId","ChannelId","EntityId","createOrFindInteractionChannel","channelName","entityTypeId","UsesSession","IsActive","ComponentEntityTypeId","ChannelTypeMediumValueId","INTERACTIONS","CHANNEL_MEDIUM_TYPE_ID","interactionComponent","entityTypeName","channel","interactionChannel","COMPONENT_NAME","id","parseInt","CHANNEL_NAME","contentItemInteractionComponent","contentItemId","friendlyName","modelType","contentItemInteractionChannel","nameInput","mapApollosNameToRockName","type","cache","ttl"],"mappings":"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","sourcesContent":["import RockApolloDataSource from '@apollosproject/rock-apollo-data-source';\nimport ApollosConfig from '@apollosproject/config';\nimport { get } from 'lodash';\n\nconst { ROCK_MAPPINGS } = ApollosConfig;\n\nclass RockConstants extends RockApolloDataSource {\n  async findOrCreate({ model, objectAttributes }) {\n    // Turns {ChannelId: 7, Name: 'Something'} into '(ChannelId eq 7) and (Name eq 'Something')'\n    const { Cache } = this.context.dataSources;\n\n    const cacheKey = ['rockConstants', model, JSON.stringify(objectAttributes)];\n    const cachedObj = await Cache.get({ key: cacheKey });\n\n    // If we have a cached object, return it.\n    if (cachedObj) {\n      return JSON.parse(cachedObj);\n    }\n\n    // If we don't have a cached object create a filter out of the attributes of the expected objects.\n    const filter = Object.keys(objectAttributes)\n      .map((key) => {\n        if (typeof objectAttributes[key] === 'string') {\n          return `(${key} eq '${objectAttributes[key]}')`;\n        }\n        return `(${key} eq ${objectAttributes[key]})`;\n      })\n      .join(' and ');\n\n    // Look for objects matching that filter.\n    const object = await this.request(model)\n      .filter(filter)\n      .first();\n\n    // if we have one\n    if (object) {\n      // cache it\n      await Cache.set({ key: cacheKey, data: JSON.stringify(object) });\n      // and return it.\n      return object;\n    }\n\n    // Otherwise, if no object matching the `objectAttributes` exists, create it.\n    const objectId = await this.post(`/${model}`, objectAttributes);\n    // Go grab the newly created object\n    const ret = await this.get(`/${model}/${objectId}`);\n    // Cache it\n    await Cache.set({ key: cacheKey, data: JSON.stringify(ret) });\n\n    // And return it.\n    return ret;\n  }\n\n  async createOrFindInteractionComponent({\n    componentName,\n    channelId,\n    entityId,\n  }) {\n    return this.findOrCreate({\n      model: 'InteractionComponents',\n      objectAttributes: {\n        Name: componentName,\n        // https://www.rockrms.com/ReleaseNotes#v11.0-core\n        ...(ApollosConfig?.ROCK?.VERSION >= 11.0\n          ? { InteractionChannelId: channelId }\n          : { ChannelId: channelId }),\n        EntityId: entityId,\n      },\n    });\n  }\n\n  async createOrFindInteractionChannel({ channelName, entityTypeId }) {\n    return this.findOrCreate({\n      model: 'InteractionChannels',\n      objectAttributes: {\n        Name: channelName,\n        UsesSession: false,\n        IsActive: true,\n        ComponentEntityTypeId: entityTypeId,\n        ChannelTypeMediumValueId:\n          ROCK_MAPPINGS.INTERACTIONS.CHANNEL_MEDIUM_TYPE_ID,\n      },\n    });\n  }\n\n  async interactionComponent({ entityId, entityTypeId, entityTypeName }) {\n    const channel = await this.interactionChannel({\n      entityTypeId,\n      entityTypeName,\n    });\n    return this.createOrFindInteractionComponent({\n      componentName: `${\n        ROCK_MAPPINGS.INTERACTIONS.COMPONENT_NAME\n      } - ${entityId}`,\n      channelId: channel.id,\n      entityId: parseInt(entityId, 10),\n    });\n  }\n\n  async interactionChannel({ entityTypeId, entityTypeName }) {\n    return this.createOrFindInteractionChannel({\n      channelName: `${\n        ROCK_MAPPINGS.INTERACTIONS.CHANNEL_NAME\n      } - ${entityTypeName}`,\n      entityTypeId,\n    });\n  }\n\n  // Deprecated. Use the interactionComponent method directly.\n  async contentItemInteractionComponent({ contentItemId }) {\n    const { id, friendlyName } = await this.modelType('ContentItem');\n    return this.interactionComponent({\n      entityId: contentItemId,\n      entityTypeId: id,\n      entityTypeName: friendlyName,\n    });\n  }\n\n  // Deprecated. Use the interactionChannel method directly.\n  async contentItemInteractionChannel() {\n    const { id, friendlyName } = await this.modelType('ContentItem');\n    return this.interactionChannel({\n      entityTypeId: id,\n      entityTypeName: friendlyName,\n    });\n  }\n\n  mapApollosNameToRockName = (name) => {\n    if (ROCK_MAPPINGS.CONTENT_ITEM[name]) {\n      return ROCK_MAPPINGS.CONTENT_ITEM[name].EntityType;\n    }\n    return get(ROCK_MAPPINGS, `ENTITY_TYPES.${name}`, name);\n  };\n\n  async modelType(nameInput) {\n    const name = this.mapApollosNameToRockName(nameInput);\n\n    const type = await this.request('EntityTypes')\n      .filter(`Name eq 'Rock.Model.${name}'`)\n      .cache({ ttl: 86400 })\n      .first();\n\n    if (type) {\n      return type;\n    }\n\n    return null;\n  }\n}\n// eslint-disable-next-line import/prefer-default-export\nexport { RockConstants as dataSource };\n"],"file":"index.js"}
##############################################
/src/lib/rock-constants/index.js-48-    if (cachedObj) {
/src/lib/rock-constants/index.js:49:      return JSON.parse(cachedObj);
/src/lib/rock-constants/index.js-50-    } // If we don't have a cached object create a filter out of the attributes of the expected objects.
##############################################
/src/lib/feature-feeds/index.js.map:1:{"version":3,"sources":["../../src/feature-feeds/index.js"],"names":["resolver","Query","homeFeedFeatures","root","args","dataSources","FeatureFeed","getFeed","type","section","discoverFeedFeatures","WeekendContentItem","featureFeed","id","ContentSeriesContentItem","features","getFeatures","RockApolloDataSource","JSON","parse","Feature","ContentItem","context","ApollosConfig","contentItem","getFromId","__typename","stringify"],"mappings":"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","sourcesContent":["import RockApolloDataSource from '@apollosproject/rock-apollo-data-source';\nimport { createGlobalId } from '@apollosproject/server-core';\nimport ApollosConfig from '@apollosproject/config';\n\nconst resolver = {\n  Query: {\n    homeFeedFeatures: (root, args, { dataSources: { FeatureFeed } }) =>\n      FeatureFeed.getFeed({\n        type: 'apollosConfig',\n        args: { section: 'HOME_FEATURES', ...args },\n      }),\n    discoverFeedFeatures: (root, args, { dataSources: { FeatureFeed } }) =>\n      FeatureFeed.getFeed({\n        type: 'apollosConfig',\n        args: { section: 'DISCOVER_FEATURES' },\n      }),\n  },\n  WeekendContentItem: {\n    featureFeed: ({ id }, args, { dataSources: { FeatureFeed } }) =>\n      FeatureFeed.getFeed({ type: 'contentItem', args: { id } }),\n  },\n  ContentSeriesContentItem: {\n    featureFeed: ({ id }, args, { dataSources: { FeatureFeed } }) =>\n      FeatureFeed.getFeed({ type: 'contentItem', args: { id } }),\n  },\n  FeatureFeed: {\n    // lazy-loaded\n    features: ({ getFeatures }) => getFeatures(),\n  },\n};\n\nclass FeatureFeed extends RockApolloDataSource {\n  getFromId = (id) => {\n    return this.getFeed(JSON.parse(id));\n  };\n\n  getFeed = async ({ type = '', args = {} }) => {\n    let getFeatures = () => [];\n    const { Feature, ContentItem } = this.context.dataSources;\n\n    if (type === 'apollosConfig') {\n      getFeatures = () =>\n        Feature.getFeatures(ApollosConfig[args.section] || [], args);\n    }\n\n    if (type === 'contentItem' && args.id) {\n      const contentItem = await ContentItem.getFromId(args.id);\n      getFeatures = () => ContentItem.getFeatures(contentItem);\n    }\n\n    return {\n      __typename: 'FeatureFeed',\n      id: createGlobalId(JSON.stringify({ type, args }), 'FeatureFeed'),\n      getFeatures,\n    };\n  };\n}\n\nexport { resolver, FeatureFeed as dataSource };\n"],"file":"index.js"}
##############################################
/src/lib/feature-feeds/index.js-83-    _defineProperty(this, "getFromId", id => {
/src/lib/feature-feeds/index.js:84:      return this.getFeed(JSON.parse(id));
/src/lib/feature-feeds/index.js-85-    });
