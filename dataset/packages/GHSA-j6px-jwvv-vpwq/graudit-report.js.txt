/src/lib/main.js-48-	if (!compile.cache) {
/src/lib/main.js:49:		return parser.parse(src);
/src/lib/main.js-50-	}
##############################################
/src/lib/main.js-53-	if (!cached) {
/src/lib/main.js:54:		cached = compile.cache[src] = parser.parse(src);
/src/lib/main.js-55-	}
##############################################
/src/lib/parse.js-1366-function fromJson(json) {
/src/lib/parse.js:1367:	return isString(json) ? JSON.parse(json) : json;
/src/lib/parse.js-1368-}
##############################################
/src/lib/parse.js-1374-	var requestedTimezoneOffset =
/src/lib/parse.js:1375:		Date.parse("Jan 01, 1970 00:00:00 " + timezone) / 60000;
/src/lib/parse.js-1376-	return isNumberNaN(requestedTimezoneOffset)
##############################################
/src/lib/parse.js-4325-							var parser = new Parser(lexer, $filter, $parseOptions);
/src/lib/parse.js:4326:							parsedExpression = parser.parse(exp);
/src/lib/parse.js-4327-							if (parsedExpression.constant) {
##############################################
/src/test/main.test.js-29-
/src/test/main.test.js:30:		it("should provide a .parse()-method", function() {
/src/test/main.test.js-31-			var parser = new expressions.Parser(undefined, undefined, {});
