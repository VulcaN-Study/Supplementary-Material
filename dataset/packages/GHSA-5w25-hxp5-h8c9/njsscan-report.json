{
  "errors": [
    {
      "code": 9,
      "level": "warn",
      "path": "/src/node/tenvoy.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_default",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 150,
            "line": 1
          },
          "file": "/src/tweetnacljs/LICENSE",
          "source_hash": "88d9b4eb60579c191ec391ca04c16130572d7eedc4a86daa58bf28c6e14c9bcd",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/src/crypto/public_key/elliptic/curves.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/compat/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/openpgpjs/LICENSE",
          "source_hash": "e3a994d82e644b03a792a930f574002658412f62407f5fee083f2555c5f23118",
          "start": {
            "col": 20,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 1187,
            "line": 1
          },
          "file": "/src/tweetnacljs/LICENSE",
          "source_hash": "88d9b4eb60579c191ec391ca04c16130572d7eedc4a86daa58bf28c6e14c9bcd",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/lightweight/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/compat/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 1187,
            "line": 1
          },
          "file": "/src/fast-sha256-js/LICENSE",
          "source_hash": "88d9b4eb60579c191ec391ca04c16130572d7eedc4a86daa58bf28c6e14c9bcd",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/compat/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/openpgpjs/LICENSE",
          "source_hash": "e3a994d82e644b03a792a930f574002658412f62407f5fee083f2555c5f23118",
          "start": {
            "col": 20,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/lightweight/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 150,
            "line": 1
          },
          "file": "/src/fast-sha256-js/LICENSE",
          "source_hash": "88d9b4eb60579c191ec391ca04c16130572d7eedc4a86daa58bf28c6e14c9bcd",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/lightweight/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "e3a994d82e644b03a792a930f574002658412f62407f5fee083f2555c5f23118",
          "start": {
            "col": 20,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/test/general/key.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_default",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/test/general/key.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.headers.cookie_session_no_path",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/test/general/packet.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.database.node_knex_sqli_injection",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/tenvoy.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/test/general/key.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/tenvoy.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.redirect.express_open_redirect2",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/dist/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/tenvoy.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.xss.express_xss",
      "type": "MatchTimeoutError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 83,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "e3a994d82e644b03a792a930f574002658412f62407f5fee083f2555c5f23118",
          "start": {
            "col": 20,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 9,
      "level": "warn",
      "path": "/src/openpgpjs/test/general/openpgp.js",
      "rule_id": "usr.local.lib.python3.8.site-packages.njsscan.rules.semantic_grep.dos.regex_dos",
      "type": "MatchTimeoutError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/openpgpjs/test/general/testInputs.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            29,
            42
          ],
          "match_string": "        arr.push(Math.floor(Math.random() * 10174) + 1);"
        },
        {
          "file_path": "/src/openpgpjs/test/general/testInputs.js",
          "match_lines": [
            11,
            11
          ],
          "match_position": [
            39,
            52
          ],
          "match_string": "        arr.push(0x1F600 + Math.floor(Math.random() * (0x1F64F - 0x1F600)) + 1);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_password": {
      "files": [
        {
          "file_path": "/src/openpgpjs/test/general/keyring.js",
          "match_lines": [
            11,
            11
          ],
          "match_position": [
            9,
            28
          ],
          "match_string": "  const passphrase = 'asdf';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/openpgp.js",
          "match_lines": [
            289,
            289
          ],
          "match_position": [
            7,
            33
          ],
          "match_string": "const passphrase = 'hello world';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/openpgp.js",
          "match_lines": [
            291,
            291
          ],
          "match_position": [
            7,
            36
          ],
          "match_string": "const password1 = 'I am a password';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/openpgp.js",
          "match_lines": [
            292,
            292
          ],
          "match_position": [
            7,
            42
          ],
          "match_string": "const password2 = 'I am another password';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/openpgp.js",
          "match_lines": [
            293,
            293
          ],
          "match_position": [
            7,
            42
          ],
          "match_string": "const password3 = 'I am a third password';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/packet.js",
          "match_lines": [
            458,
            458
          ],
          "match_position": [
            11,
            31
          ],
          "match_string": "    const passphrase = 'hello';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/packet.js",
          "match_lines": [
            494,
            494
          ],
          "match_position": [
            13,
            33
          ],
          "match_string": "      const passphrase = 'hello';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/packet.js",
          "match_lines": [
            563,
            563
          ],
          "match_position": [
            13,
            36
          ],
          "match_string": "      const passphrase = 'password';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/packet.js",
          "match_lines": [
            638,
            638
          ],
          "match_position": [
            13,
            36
          ],
          "match_string": "      const passphrase = 'password';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/streaming.js",
          "match_lines": [
            77,
            77
          ],
          "match_position": [
            7,
            33
          ],
          "match_string": "const passphrase = 'hello world';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/streaming.js",
          "match_lines": [
            123,
            123
          ],
          "match_position": [
            7,
            28
          ],
          "match_string": "const brainpoolPass = '321';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/streaming.js",
          "match_lines": [
            160,
            160
          ],
          "match_position": [
            7,
            20
          ],
          "match_string": "const xPass = 'sun';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/decompression.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            7,
            35
          ],
          "match_string": "const password = 'I am a password';"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded password in plain text is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    },
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            801,
            803
          ],
          "match_position": [
            3,
            4
          ],
          "match_string": "\t\tif(password == null) {\n\t\t\tthrow \"tEnvoy Fatal Error: argument password of method keyFactory.pbkdf2 is required and does not have a default value.\";\n\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            831,
            833
          ],
          "match_position": [
            3,
            4
          ],
          "match_string": "\t\tif(password == null) {\n\t\t\treject(\"tEnvoy Fatal Error: argument password of method keyFactory.genSeedFromCredentials is required and does not have a default value.\");\n\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            1486,
            1500
          ],
          "match_position": [
            6,
            7
          ],
          "match_string": "\t\t\t\t\tif(password == null) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyPGPKey Fatal Error: Key is password-protected for method \" + methodName + \", and no password was specified.\"\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if(!_tEnvoy.util.compareConstant(password, _getPassword())) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyPGPKey Fatal Error: Key is password-protected for method \" + methodName + \", and an incorrect password was specified.\"\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            1879,
            1886
          ],
          "match_position": [
            3,
            4
          ],
          "match_string": "\t\tif(password == null) {\n\t\t\t_setKey(key);\n\t\t} else {\n\t\t\t_nonce = _nacl.randomBytes(12);\n\t\t\tlet encryptionKey = new tEnvoyNaClKey(password, \"secret\", null, [], _tEnvoy);\n\t\t\t_setKey(encryptionKey.encrypt(key, _nonce));\n\t\t\tencryptionKey.destroy();\n\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            1916,
            1930
          ],
          "match_position": [
            6,
            7
          ],
          "match_string": "\t\t\t\t\tif(password == null) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyNaClKey Fatal Error: Key is password-protected for method \" + methodName + \", and no password was specified\"\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if(!_tEnvoy.util.compareConstant(password, _getPassword())) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyNaClKey Fatal Error: Key is password-protected for method \" + methodName + \", and an incorrect password was specified.\"\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            2196,
            2203
          ],
          "match_position": [
            3,
            4
          ],
          "match_string": "\t\tif(password == null) {\n\t\t\t_setKey(key);\n\t\t} else {\n\t\t\t_nonce = _nacl.randomBytes(12);\n\t\t\tlet encryptionKey = new tEnvoyNaClKey(password, \"secret\", null, [], _tEnvoy);\n\t\t\t_setKey(encryptionKey.encrypt(key, _nonce));\n\t\t\tencryptionKey.destroy();\n\t\t}"
        },
        {
          "file_path": "/src/node/tenvoy.js",
          "match_lines": [
            2233,
            2247
          ],
          "match_position": [
            6,
            7
          ],
          "match_string": "\t\t\t\t\tif(password == null) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyNaClSigningKey Fatal Error: Key is password-protected for method \" + methodName + \", and no password was specified.\"\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if(!_tEnvoy.util.compareConstant(password, _getPassword())) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: false,\n\t\t\t\t\t\t\terror: \"tEnvoyNaClSigningKey Fatal Error: Key is password-protected for method \" + methodName + \", and an incorrect password was specified.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tproceed: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_username": {
      "files": [
        {
          "file_path": "/src/openpgpjs/test/general/keyring.js",
          "match_lines": [
            10,
            10
          ],
          "match_position": [
            9,
            43
          ],
          "match_string": "  const user = 'whiteout.test@t-online.de';"
        },
        {
          "file_path": "/src/openpgpjs/test/general/keyring.js",
          "match_lines": [
            86,
            86
          ],
          "match_position": [
            9,
            34
          ],
          "match_string": "  const user3 = 'plain@email.org';"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded username in plain text is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    },
    "regex_injection_dos": {
      "files": [
        {
          "file_path": "/src/openpgpjs/src/keyring/keyring.js",
          "match_lines": [
            133,
            134
          ],
          "match_position": [
            3,
            54
          ],
          "match_string": "  const emailEsc = email.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  const emailRegex = new RegExp('<' + emailEsc + '>');"
        }
      ],
      "metadata": {
        "cwe": "CWE-400: Uncontrolled Resource Consumption",
        "description": "User controlled data in RegExp() can make the application vulnerable to layer 7 DoS.",
        "owasp": "A1: Injection",
        "severity": "ERROR"
      }
    }
  },
  "templates": {}
}