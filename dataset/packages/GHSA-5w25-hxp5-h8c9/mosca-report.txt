<report_mosca>
 <Path>/src/openpgpjs/src/crypto/public_key/prime.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 214 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/src/hkp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 54 -      throw new Error('You must provide a query parameter!');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/test/general/streaming.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 240 -      setTimeout(dataArrived, 3000); // Do not wait until data arrived, but wait a bit to check that it doesn't arrive early.

 Line: 540 -            await new Promise(resolve => setTimeout(resolve, 10));

 Line: 592 -      await new Promise(resolve => setTimeout(resolve));

 Line: 659 -      await new Promise(resolve => setTimeout(resolve, 3000));

 Line: 671 -      await new Promise(resolve => setTimeout(resolve, 3000));

 Line: 698 -        await new Promise(resolve => setTimeout(resolve, 3000));

 Line: 722 -      await new Promise(resolve => setTimeout(resolve, 3000));

 Line: 849 -      await new Promise(resolve => setTimeout(resolve, 3000));

 Line: 913 -          await new Promise(setTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/test/general/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1762 -                        await new Promise(res => setTimeout(res));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/test/general/signature.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1244 -            await new Promise(setTimeout);

 Line: 1310 -            await new Promise(setTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/test/general/hkp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 129 -          query: 'safewithme.testuser@gmail.com'

 Line: 137 -          query: 'safewithme.testuse@gmail.com'

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/test/unittests.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 53 -            openpgp.config[key] = eval(openpgp.config[key]);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/lightweight/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 79 -      e && e instanceof p.AssertionError && setTimeout(() => {

 Line: 16847 -      throw new Error('setTimeout has not been defined');

 Line: 16854 -          if (typeof setTimeout === 'function') {

 Line: 16855 -              cachedSetTimeout = setTimeout;

 Line: 16873 -      if (cachedSetTimeout === setTimeout) {

 Line: 16875 -          return setTimeout(fun, 0);

 Line: 16877 -      // if setTimeout wasn't available but was latter defined

 Line: 16878 -      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {

 Line: 16879 -          cachedSetTimeout = setTimeout;

 Line: 16880 -          return setTimeout(fun, 0);

 Line: 16883 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 16908 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 16916 -              // Some versions of I.E. have different rules for clearTimeout vs setTimeout

 Line: 19967 -      await new Promise(setTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/lightweight/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11772 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

 Line: 11778 -          /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 11966 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 12000 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 12015 -          /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

 Line: 12019 -  //                Call UPDATE_HASH() MIN_MATCH-3 more times

 Line: 12095 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 12147 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 13174 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 14999 -                  /*UPDATE(state.check, put - _out, _out);*/

 Line: 15087 -      strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/

 Line: 17145 -   *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 Line: 26564 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 28722 -      throw new Error('You must provide a query parameter!');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/lightweight/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2 -  >1;if("function"!=typeof e)throw new TypeError("size property of a queuing strategy must be a function");return t=>e(t)}function g(e,t,r){return Promise.prototype.then.call(e,t,r)}function w(e,t,r){let n,i;const a=new Promise((e,t)=>{n=e,i=t});return void 0===r&&(r=(e=>{throw e})),function(e,t,r){let n=!1;const i=e=>{!1===n&&(n=!0,r(e))};let a=0,s=0;const o=e.length,u=new Array(o);for(const l of e){const e=a;g(l,r=>{u[e]=r,++s===o&&t(u)},i),++a}}(e,e=>{try{const r=t(e);n(r)}catch(e){i(e)}},e=>{try{const t=r(e);n(t)}catch(e){i(e)}}),a}function b(e){}function _(e){e&&e instanceof b.AssertionError&&setTimeout(()=>{throw e},0)}function v(e){const t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function k(e,t,r){if(!l(r=Number(r)))throw new RangeError("Size must be a finite, non-NaN, non-negative number.");e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function A(e){e._queue=[],e._queueTotalSize=0}b.AssertionError=function(){};const S=r("[[AbortSteps]]"),P=r("[[ErrorSteps]]");class E{constructor(e={},t={}){M(this);const r=t.size;let n=t.highWaterMark;if(void 0!==e.type)throw new RangeError("Invalid type is specified");const i=m(r);void 0===n&&(n=1),function(e,t,r,n){const i=Object.create(H.prototype),a=f(t,"write",1,[i]),s=f(t,"close",0,[]),o=f(t,"abort",1,[]);W(e,i,function(){return d(t,"start",[i])},a,s,o,r,n)}(this,e,n=y(n),i)}get locked(){if(!1===K(this))throw X("locked");return U(this)}abort(e){return!1===K(this)?Promise.reject(X("abort")):!0===U(this)?Promise.reject(new TypeError("Cannot abort a stream that already has a writer")):C(this,e)}getWriter(){if(!1===K(this))throw X("getWriter");return x(this)}}function x(e){return new z(e)}function M(e){e._state="writable",e._storedError=void 0,e._writer=void 0,e._writableStreamController=void 0,e._writeRequests=[],e._inFlightWriteRequest=void 0,e._closeRequest=void 0,e._inFlightCloseRequest=void 0,e._pendingAbortRequest=void 0,e._backpressure=!1}function K(e){return!!a(e)&&!!Object.prototype.hasOwnProperty.call(e,"_writableStreamController")}function U(e){return void 0!== Line: 98 -  (e,t,r,n):e.strategy===i||l===u?(q(e,(c<<1)+(n?1:0),3),$(e,K,U)):(q(e,(f<<1)+(n?1:0),3),function(e,t,r,n){var i;for(q(e,t-257,5),q(e,r-1,5),q(e,n-4,4),i=0;i<n;i++)q(e,e.bl_tree[2*M[i]+1],3);J(e,e.dyn_ltree,t-1),J(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,d+1),$(e,e.dyn_ltree,e.dyn_dtree)),Z(e),n&&G(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(R[r]+h+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){q(e,c<<1,3),F(e,v,K),function(e){16===e.bi_valid?(L(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{"../utils/common":31}],43:[function(e,t,r){"use strict";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],44:[function(e,t,r){var n,i,a=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{i="function"==typeof clearTimeout?clearTimeout:o}catch(e){i=o}}();var l,c=[],f=!1,d=-1;function h(){f&&l&&(f=!1,l.length?c=l.concat(c):d=-1,c.length&&p())}function p(){if(!f){var e=u(h);f=!0;for(var t=c.length;t;){for(l=c,c=[];++d<t;)l&&l[d].run();d=-1,t=c.length}l=null,f=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===o||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function y(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function( Line: 113 -  versions"),a=e("./reader");const s=n.isNode&&e("buffer").Buffer;function o(e){let t=(0,n.isStream)(e);return"node"===t?(0,i.nodeToWeb)(e):t?e:new ReadableStream({start(t){t.enqueue(e),t.close()}})}function u(e){return e.some(n.isStream)?l(e):"string"==typeof e[0]?e.join(""):s&&s.isBuffer(e[0])?s.concat(e):(0,n.concatUint8Array)(e)}function l(e){e=e.map(o);const t=p(async function(e){await Promise.all(n.map(t=>_(t,e)))});let r=Promise.resolve();const n=e.map((n,i)=>m(n,(n,a)=>r=r.then(()=>d(n,t.writable,{preventClose:i!==e.length-1}))));return t.readable}function c(e){return new a.Reader(e)}function f(e){const t=e.getWriter(),r=t.releaseLock;return t.releaseLock=(()=>{t.closed.catch(function(){}),r.call(t)}),t}async function d(e,t,r){e=o(e);try{if(e[a.externalBuffer]){const r=f(t);for(let t=0;t<e[a.externalBuffer].length;t++)await r.ready,await r.write(e[a.externalBuffer][t]);r.releaseLock()}return await e.pipeTo(t,r)}catch(n){}}function h(e,t){const r=new TransformStream(t);return d(e,r.writable),r.readable}function p(e){let t,r,n=!1;return{readable:new ReadableStream({start(e){r=e},pull(){t?t():n=!0},cancel:e},{highWaterMark:0}),writable:new WritableStream({write:async function(e){r.enqueue(e),n?n=!1:(await new Promise(e=>{t=e}),t=null)},close:r.close.bind(r),abort:r.error.bind(r)})}}function y(e,t=(()=>void 0),r=(()=>void 0)){if((0,n.isStream)(e))return h(e,{async transform(e,r){try{const i=await t(e);void 0!==i&&r.enqueue(i)}catch(n){r.error(n)}},async flush(e){try{const n=await r();void 0!==n&&e.enqueue(n)}catch(t){e.error(t)}}});const i=t(e),a=r();return void 0!==i&&void 0!==a?u([i,a]):void 0!==i?i:a}function m(e,t){let r;const n=new TransformStream({start(e){r=e}}),i=d(e,n.writable),a=p(async function(){r.error(new Error("Readable side was canceled.")),await i,await new Promise(setTimeout)});return t(n.readable,a.writable),a.readable}function g(e,t){Object.entries(Object.getOwnPropertyDescriptors(ReadableStream.prototype)).forEach(([r,n])=>{"constructor"!==r&&(n.value?n.value=n.value.bind(t):n.get=n.get.bind(t),Object.defineProperty(e,r,n))})}function w(e,t=0,r=1/0){if(</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/lightweight/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 180 -  prototype.lookup=function(e){let t=this._baseUrl+"/pks/lookup?op=get&options=mr&search=";const r=this._fetch;if(e.keyId)t+="0x"+encodeURIComponent(e.keyId);else{if(!e.query)throw new Error("You must provide a query parameter!");t+=encodeURIComponent(e.query)}return r(t).then(function(e){if(200===e.status)return e.text()}).then(function(e){if(e&&!(e.indexOf("-----END PGP PUBLIC KEY BLOCK-----")<0))return e.trim()})},s.prototype.upload=function(e){const t=this._baseUrl+"/pks/add";return(0,this._fetch)(t,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:"keytext="+encodeURIComponent(e)})},r.default=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./config":57,"node-fetch":"node-fetch"}],93:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.lightweight=r.WKD=r.HKP=r.AsyncProxy=r.Keyring=r.crypto=r.config=r.enums=r.armor=r.stream=r.OID=r.KDFParams=r.ECDHSymmetricKey=r.Keyid=r.S2K=r.MPI=r.packet=r.util=r.cleartext=r.message=r.signature=r.key=r.destroyWorker=r.getWorker=r.initWorker=r.decryptSessionKeys=r.encryptSessionKey=r.decryptKey=r.revokeKey=r.reformatKey=r.generateKey=r.verify=r.sign=r.decrypt=r.encrypt=void 0;var n=e("./openpgp");Object.defineProperty(r,"encrypt",{enumerable:!0,get:function(){return n.encrypt}}),Object.defineProperty(r,"decrypt",{enumerable:!0,get:function(){return n.decrypt}}),Object.defineProperty(r,"sign",{enumerable:!0,get:function(){return n.sign}}),Object.defineProperty(r,"verify",{enumerable:!0,get:function(){return n.verify}}),Object.defineProperty(r,"generateKey",{enumerable:!0,get:function(){return n.generateKey}}),Object.defineProperty(r,"reformatKey",{enumerable:!0,get:function(){return n.reformatKey}}),Object.defineProperty(r,"revokeKey",{enumerable:!0,get:function(){return n.revokeKey}}),Object.defineProperty(r,"decryptKey",{enumerable:!0,get:function(){return n.decryptKey}}),Object.defineProperty(r,"encryptSessionKey",{enumerable:!0,get:function(){return n.encryptSessionKey}}),Object.defineProperty(r</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 79 -      e && e instanceof p.AssertionError && setTimeout(() => {

 Line: 21234 -      throw new Error('setTimeout has not been defined');

 Line: 21241 -          if (typeof setTimeout === 'function') {

 Line: 21242 -              cachedSetTimeout = setTimeout;

 Line: 21260 -      if (cachedSetTimeout === setTimeout) {

 Line: 21262 -          return setTimeout(fun, 0);

 Line: 21264 -      // if setTimeout wasn't available but was latter defined

 Line: 21265 -      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {

 Line: 21266 -          cachedSetTimeout = setTimeout;

 Line: 21267 -          return setTimeout(fun, 0);

 Line: 21270 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 21295 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 21303 -              // Some versions of I.E. have different rules for clearTimeout vs setTimeout

 Line: 24354 -      await new Promise(setTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16159 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

 Line: 16165 -          /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 16353 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16387 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16402 -          /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

 Line: 16406 -  //                Call UPDATE_HASH() MIN_MATCH-3 more times

 Line: 16482 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16534 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 17561 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 19386 -                  /*UPDATE(state.check, put - _out, _out);*/

 Line: 19474 -      strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/

 Line: 21532 -   *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 Line: 30951 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 33109 -      throw new Error('You must provide a query parameter!');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2 -  >1;if("function"!=typeof e)throw new TypeError("size property of a queuing strategy must be a function");return t=>e(t)}function m(e,t,r){return Promise.prototype.then.call(e,t,r)}function g(e,t,r){let n,i;const a=new Promise((e,t)=>{n=e,i=t});return void 0===r&&(r=(e=>{throw e})),function(e,t,r){let n=!1;const i=e=>{!1===n&&(n=!0,r(e))};let a=0,s=0;const o=e.length,u=new Array(o);for(const c of e){const e=a;m(c,r=>{u[e]=r,++s===o&&t(u)},i),++a}}(e,e=>{try{const r=t(e);n(r)}catch(e){i(e)}},e=>{try{const t=r(e);n(t)}catch(e){i(e)}}),a}function w(e){}function _(e){e&&e instanceof w.AssertionError&&setTimeout(()=>{throw e},0)}function v(e){const t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function k(e,t,r){if(!c(r=Number(r)))throw new RangeError("Size must be a finite, non-NaN, non-negative number.");e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function A(e){e._queue=[],e._queueTotalSize=0}w.AssertionError=function(){};const S=r("[[AbortSteps]]"),E=r("[[ErrorSteps]]");class P{constructor(e={},t={}){M(this);const r=t.size;let n=t.highWaterMark;if(void 0!==e.type)throw new RangeError("Invalid type is specified");const i=b(r);void 0===n&&(n=1),function(e,t,r,n){const i=Object.create(H.prototype),a=d(t,"write",1,[i]),s=d(t,"close",0,[]),o=d(t,"abort",1,[]);W(e,i,function(){return l(t,"start",[i])},a,s,o,r,n)}(this,e,n=y(n),i)}get locked(){if(!1===C(this))throw X("locked");return K(this)}abort(e){return!1===C(this)?Promise.reject(X("abort")):!0===K(this)?Promise.reject(new TypeError("Cannot abort a stream that already has a writer")):U(this,e)}getWriter(){if(!1===C(this))throw X("getWriter");return x(this)}}function x(e){return new z(e)}function M(e){e._state="writable",e._storedError=void 0,e._writer=void 0,e._writableStreamController=void 0,e._writeRequests=[],e._inFlightWriteRequest=void 0,e._closeRequest=void 0,e._inFlightCloseRequest=void 0,e._pendingAbortRequest=void 0,e._backpressure=!1}function C(e){return!!a(e)&&!!Object.prototype.hasOwnProperty.call(e,"_writableStreamController")}function K(e){return void 0!== Line: 135 -  r t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return a;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return s;for(t=32;t<h;t++)if(0!==e.dyn_ltree[2*t])return s;return a}(e)),J(e,e.l_desc),J(e,e.d_desc),l=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),J(e,e.bl_desc),t=b-1;t>=3&&0===e.bl_tree[2*M[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),u=e.opt_len+3+7>>>3,(c=e.static_len+3+7>>>3)<=u&&(u=c)):u=c=r+5,r+4<=u&&-1!==t?te(e,t,r,n):e.strategy===i||c===u?(F(e,(f<<1)+(n?1:0),3),$(e,C,K)):(F(e,(d<<1)+(n?1:0),3),function(e,t,r,n){var i;for(F(e,t-257,5),F(e,r-1,5),F(e,n-4,4),i=0;i<n;i++)F(e,e.bl_tree[2*M[i]+1],3);Q(e,e.dyn_ltree,t-1),Q(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,l+1),$(e,e.dyn_ltree,e.dyn_dtree)),G(e),n&&Z(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(R[r]+h+1)]++,e.dyn_dtree[2*q(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){F(e,f<<1,3),L(e,v,C),function(e){16===e.bi_valid?(N(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{"../utils/common":53}],65:[function(e,t,r){"use strict";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],66:[function(e,t,r){var n,i,a=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{i="function"==typeof clearTimeout?clea Line: 151 -  [i,a]):void 0!==i?i:a}function b(e,t){let r;const n=new TransformStream({start(e){r=e}}),i=l(e,n.writable),a=p(async function(){r.error(new Error("Readable side was canceled.")),await i,await new Promise(setTimeout)});return t(n.readable,a.writable),a.readable}function m(e,t){Object.entries(Object.getOwnPropertyDescriptors(ReadableStream.prototype)).forEach(([r,n])=>{"constructor"!==r&&(n.value?n.value=n.value.bind(t):n.get=n.get.bind(t),Object.defineProperty(e,r,n))})}function g(e,t=0,r=1/0){if((0,n.isStream)(e)){if(t>=0&&r>=0){let n=0;return h(e,{transform(e,i){n<r?(n+e.length>=t&&i.enqueue(g(e,Math.max(t-n,0),r-n)),n+=e.length):i.terminate()}})}if(t<0&&(r<0||r===1/0)){let n=[];return y(e,e=>{e.length>=-t?n=[e]:n.push(e)},()=>g(u(n),t,r))}if(0===t&&r<0){let n;return y(e,e=>{const i=n?u([n,e]):e;if(i.length>=-r)return n=g(i,r),g(i,t,r);n=i})}return console.warn(`stream.slice(input, ${t}, ${r}) not implemented efficiently.`),v(async()=>g(await w(e),t,r))}return e[a.externalBuffer]&&(e=u(e[a.externalBuffer].concat([e]))),!(0,n.isUint8Array)(e)||s&&s.isBuffer(e)?e.slice(t,r):(r===1/0&&(r=e.length),e.subarray(t,r))}async function w(e,t){return(0,n.isStream)(e)?f(e).readToEnd(t):e}async function _(e,t){if((0,n.isStream)(e)&&e.cancel)return e.cancel(t)}function v(e){return new ReadableStream({pull:async t=>{try{t.enqueue(await e()),t.close()}catch(r){t.error(r)}}})}r.default={isStream:n.isStream,isUint8Array:n.isUint8Array,toStream:o,concatUint8Array:n.concatUint8Array,concatStream:c,concat:u,getReader:f,getWriter:d,pipe:l,transformRaw:h,transform:y,transformPair:b,parse:function(e,t){let r;const n=b(e,(e,i)=>{const a=f(e);a.remainder=(()=>(a.releaseLock(),l(e,i),n)),r=t(a)});return r},clone:function(e){if((0,n.isStream)(e)){const t=function(e){if((0,n.isStream)(e)){const t=o(e).tee();return t[0][a.externalBuffer]=t[1][a.externalBuffer]=e[a.externalBuffer],t}return[g(e),g(e)]}(e);return m(e,t[0]),t[1]}return g(e)},passiveClone:function(e){return(0,n.isStream)(e)?new ReadableStream({start(t){const r=b(e,async(e,r)=>{const n=f(e),i=d(r);try{for(;;){await i.ready;var a=await n.read()</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 217 -  ite:function(e,t){if("number"==typeof t&&(t=this.read(e,t)),void 0!==e[t])return e[t];throw new Error("Invalid enum value.")},read:function(e,t){if(e[n]||(e[n]=[],Object.entries(e).forEach(([t,r])=>{e[n][r]=t})),void 0!==e[n][t])return e[n][t];throw new Error("Invalid enum value.")}}},{}],114:[function(e,t,r){(function(t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n,i=e("./config"),a=(n=i)&&n.__esModule?n:{default:n};function s(r){this._baseUrl=r||a.default.keyserver,this._fetch="function"==typeof t.fetch?t.fetch:e("node-fetch")}s.prototype.lookup=function(e){let t=this._baseUrl+"/pks/lookup?op=get&options=mr&search=";const r=this._fetch;if(e.keyId)t+="0x"+encodeURIComponent(e.keyId);else{if(!e.query)throw new Error("You must provide a query parameter!");t+=encodeURIComponent(e.query)}return r(t).then(function(e){if(200===e.status)return e.text()}).then(function(e){if(e&&!(e.indexOf("-----END PGP PUBLIC KEY BLOCK-----")<0))return e.trim()})},s.prototype.upload=function(e){const t=this._baseUrl+"/pks/add";return(0,this._fetch)(t,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:"keytext="+encodeURIComponent(e)})},r.default=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./config":79,"node-fetch":"node-fetch"}],115:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.lightweight=r.WKD=r.HKP=r.AsyncProxy=r.Keyring=r.crypto=r.config=r.enums=r.armor=r.stream=r.OID=r.KDFParams=r.ECDHSymmetricKey=r.Keyid=r.S2K=r.MPI=r.packet=r.util=r.cleartext=r.message=r.signature=r.key=r.destroyWorker=r.getWorker=r.initWorker=r.decryptSessionKeys=r.encryptSessionKey=r.decryptKey=r.revokeKey=r.reformatKey=r.generateKey=r.verify=r.sign=r.decrypt=r.encrypt=void 0;var n=e("./openpgp");Object.defineProperty(r,"encrypt",{enumerable:!0,get:function(){return n.encrypt}}),Object.defineProperty(r,"decrypt",{enumerable:!0,get:function(){return n.decrypt}}),Object.defineProperty(r,"sign",{enumerable:!0,get:function(){return n.sign}}),Object.def</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/compat/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 170 -      e && e instanceof p.AssertionError && setTimeout(function () {

 Line: 9840 -    // - setTimeout

 Line: 10392 -        setTimeout(ctx(run, id, 1), 0);

 Line: 30133 -              return new _promise2.default(setTimeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/compat/openpgp.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 20718 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

 Line: 20724 -          /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 20912 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 20946 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 20961 -          /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

 Line: 20965 -  //                Call UPDATE_HASH() MIN_MATCH-3 more times

 Line: 21041 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 21093 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 22120 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 23945 -                  /*UPDATE(state.check, put - _out, _out);*/

 Line: 24033 -      strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/

 Line: 26669 -   *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 Line: 30826 -    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

 Line: 39673 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 42917 -      throw new Error('You must provide a query parameter!');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/compat/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 2 -  unction"!=typeof e)throw new TypeError("Argument is not a function");return Function.prototype.apply.call(e,t,r)}function A(e,t,r,n){var a=e[t];if(void 0!==a){if("function"!=typeof a)throw new TypeError(a+" is not a method");switch(r){case 0:return function(){return E(a,e,n)};case 1:return function(t){var r=[t].concat(n);return E(a,e,r)}}}return function(){return h.default.resolve()}}function S(e,t,r){var n=e[t];if(void 0!==n)return x(n,e,r)}function E(e,t,r){try{return h.default.resolve(x(e,t,r))}catch(e){return h.default.reject(e)}}function j(e){return e}function P(e){if(e=Number(e),a(e)||e<0)throw new RangeError("highWaterMark property of a queuing strategy must be non-negative and non-NaN");return e}function M(e){if(void 0===e)return function(){return 1};if("function"!=typeof e)throw new TypeError("size property of a queuing strategy must be a function");return function(t){return e(t)}}function C(e,t,r){var n=void 0,a=void 0,i=new h.default(function(e,t){n=e,a=t});return void 0===r&&(r=function(e){throw e}),function(e,t,r){var n=!1,a=function(e){!1===n&&(n=!0,r(e))},i=0,s=0,o=e.length,u=new Array(o),c=function(e){var r=i;(function(e,t,r){h.default.prototype.then.call(e,t,r)})(e,function(e){u[r]=e,++s===o&&t(u)},a),++i},f=!0,d=!1,p=void 0;try{for(var b,y=(0,l.default)(e);!(f=(b=y.next()).done);f=!0){c(b.value)}}catch(m){d=!0,p=m}finally{try{!f&&y.return&&y.return()}finally{if(d)throw p}}}(e,function(e){try{var r=t(e);n(r)}catch(e){a(e)}},function(e){try{var t=r(e);n(t)}catch(e){a(e)}}),i}function T(e){}function K(e){e&&e instanceof T.AssertionError&&setTimeout(function(){throw e},0)}function U(e){var t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function R(e,t,r){if(!k(r=Number(r)))throw new RangeError("Size must be a finite, non-NaN, non-negative number.");e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function B(e){e._queue=[],e._queueTotalSize=0}T.AssertionError=function(){};var I=t("[[AbortSteps]]"),O=t("[[ErrorSteps]]"),D=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{} Line: 86 -  ":void 0:(i=o.charCodeAt(u))<55296||i>56319||u+1===c||(s=o.charCodeAt(u+1))<56320||s>57343?e?o.charAt(u):i:e?o.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},{"./_defined":89,"./_to-integer":149}],147:[function(e,t,r){var n,a,i,s=e("./_ctx"),o=e("./_invoke"),u=e("./_html"),c=e("./_dom-create"),f=e("./_global"),d=f.process,l=f.setImmediate,h=f.clearImmediate,p=f.MessageChannel,b=f.Dispatch,y=0,m={},v=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},g=function(e){v.call(e.data)};l&&h||(l=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return m[++y]=function(){o("function"==typeof e?e:Function(e),t)},n(y),y},h=function(e){delete m[e]},"process"==e("./_cof")(d)?n=function(e){d.nextTick(s(v,e,1))}:b&&b.now?n=function(e){b.now(s(v,e,1))}:p?(i=(a=new p).port2,a.port1.onmessage=g,n=s(i.postMessage,i,1)):f.addEventListener&&"function"==typeof postMessage&&!f.importScripts?(n=function(e){f.postMessage(e+"","*")},f.addEventListener("message",g,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),v.call(e)}}:function(e){setTimeout(s(v,e,1),0)}),t.exports={set:l,clear:h}},{"./_cof":83,"./_ctx":88,"./_dom-create":91,"./_global":97,"./_html":100,"./_invoke":102}],148:[function(e,t,r){var n=e("./_to-integer"),a=Math.max,i=Math.min;t.exports=function(e,t){return(e=n(e))<0?a(e+t,0):i(e,t)}},{"./_to-integer":149}],149:[function(e,t,r){var n=Math.ceil,a=Math.floor;t.exports=function(e){return isNaN(e=+e)?0:(e>0?a:n)(e)}},{}],150:[function(e,t,r){var n=e("./_iobject"),a=e("./_defined");t.exports=function(e){return n(a(e))}},{"./_defined":89,"./_iobject":103}],151:[function(e,t,r){var n=e("./_to-integer"),a=Math.min;t.exports=function(e){return e>0?a(n(e),9007199254740991):0}},{"./_to-integer":149}],152:[function(e,t,r){var n=e("./_defined");t.exports=function(e){return Object(n(e))}},{"./_defined":89}],153:[function(e,t,r){var n=e("./_is-object");t.exports=function(e,t){if(!n(e))return e;var r,a;if(t&&"function"==typeof(r=e.toString)&&!n(a=r.call(e)))return a;if("function"= Line: 197 -  :new ReadableStream({start:function(e){n=e},pull:function(){r?r():t=!0},cancel:e},{highWaterMark:0}),writable:new WritableStream({write:function(){var e=(0,l.default)(f.default.mark(function e(a){return f.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n.enqueue(a),t){e.next=7;break}return e.next=4,new d.default(function(e){r=e});case 4:r=null,e.next=8;break;case 7:t=!1;case 8:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),close:n.close.bind(n),abort:n.error.bind(n)})}}function P(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){};if((0,y.isStream)(e))return E(e,{transform:function(e,r){var n=this;return(0,l.default)(f.default.mark(function a(){var i;return f.default.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,t(e);case 3:void 0!==(i=n.sent)&&r.enqueue(i),n.next=10;break;case 7:n.prev=7,n.t0=n.catch(0),r.error(n.t0);case 10:case"end":return n.stop()}},a,n,[[0,7]])}))()},flush:function(e){var t=this;return(0,l.default)(f.default.mark(function n(){var a;return f.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,r();case 3:void 0!==(a=t.sent)&&e.enqueue(a),t.next=10;break;case 7:t.prev=7,t.t0=t.catch(0),e.error(t.t0);case 10:case"end":return t.stop()}},n,t,[[0,7]])}))()}});var n=t(e),a=r();return void 0!==n&&void 0!==a?k([n,a]):void 0!==n?n:a}function M(e,t){var r=void 0,n=new TransformStream({start:function(e){r=e}}),a=h(e,n.writable),i=j((0,l.default)(f.default.mark(function e(){return f.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r.error(new Error("Readable side was canceled.")),e.next=3,a;case 3:return e.next=5,new d.default(setTimeout);case 5:case"end":return e.stop()}},e,this)})));return t(n.readable,i.writable),i.readable}function C(e,t){(0,c.default)((0,u.default)(ReadableStream.prototype)).forEach(function(r){var n=(0,o.default)(r,2),a=n[0],i=n[1];"constructor"!==a&&(i.value?i.value=i.value.bind(t):i.get=i.get.bind(t),(0,s.</Result>
</report_mosca>

<report_mosca>
 <Path>/src/openpgpjs/dist/compat/openpgp.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 200 -  ?window:{})},{"babel-runtime/helpers/typeof":42,stream:"stream"}],347:[function(e,t,r){!function(e){"use strict";if(!e.fetch){var t={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};if(t.arrayBuffer)var r=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],n=function(e){return e&&DataView.prototype.isPrototypeOf(e)},a=ArrayBuffer.isView||function(e){return e&&r.indexOf(Object.prototype.toString.call(e))>-1};f.prototype.append=function(e,t){e=o(e),t=u(t);var r=this.map[e];this.map[e]=r?r+","+t:t},f.prototype.delete=function(e){delete this.map[o(e)]},f.prototype.get=function(e){return e=o(e),this.has(e)?this.map[e]:null},f.prototype.has=function(e){return this.map.hasOwnProperty(o(e))},f.prototype.set=function(e,t){this.map[o(e)]=u(t)},f.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},f.prototype.keys=function(){var e=[];return this.forEach(function(t,r){e.push(r)}),c(e)},f.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),c(e)},f.prototype.entries=function(){var e=[];return this.forEach(function(t,r){e.push([r,t])}),c(e)},t.iterable&&(f.prototype[Symbol.iterator]=f.prototype.entries);var i=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];y.prototype.clone=function(){return new y(this,{body:this._bodyInit})},b.call(y.prototype),b.call(v.prototype),v.prototype.clone=function(){return new v(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new f(this.headers),url:this.url})},v.error=function(){var e=new v(null,{status:0,statusText:""});return e.type="error",e};var s=[301,302,303,307,308];v.redirect=function(e,t){if(-1===s.indexOf(t))throw new RangeError("Invalid status code");return new v(null,{status:t,headers:{location:e}})},e.Headers=f,e Line: 286 -  orRevocation:{no_reason:0,key_superseded:1,key_compromised:2,key_retired:3,userid_invalid:32},features:{modification_detection:1,aead:2,v5_keys:4},write:function(e,t){if("number"==typeof t&&(t=this.read(e,t)),void 0!==e[t])return e[t];throw new Error("Invalid enum value.")},read:function(e,t){if(e[s]||(e[s]=[],(0,a.default)(e).forEach(function(t){var r=(0,n.default)(t,2),a=r[0],i=r[1];e[s][i]=a})),void 0!==e[s][t])return e[s][t];throw new Error("Invalid enum value.")}}},{"babel-runtime/core-js/object/entries":25,"babel-runtime/core-js/symbol":32,"babel-runtime/helpers/slicedToArray":40}],385:[function(e,t,r){(function(t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n,a=e("./config"),i=(n=a)&&n.__esModule?n:{default:n};function s(r){this._baseUrl=r||i.default.keyserver,this._fetch="function"==typeof t.fetch?t.fetch:e("node-fetch")}s.prototype.lookup=function(e){var t=this._baseUrl+"/pks/lookup?op=get&options=mr&search=",r=this._fetch;if(e.keyId)t+="0x"+encodeURIComponent(e.keyId);else{if(!e.query)throw new Error("You must provide a query parameter!");t+=encodeURIComponent(e.query)}return r(t).then(function(e){if(200===e.status)return e.text()}).then(function(e){if(e&&!(e.indexOf("-----END PGP PUBLIC KEY BLOCK-----")<0))return e.trim()})},s.prototype.upload=function(e){var t=this._baseUrl+"/pks/add";return(0,this._fetch)(t,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:"keytext="+encodeURIComponent(e)})},r.default=s}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./config":350,"node-fetch":"node-fetch"}],386:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.lightweight=r.WKD=r.HKP=r.AsyncProxy=r.Keyring=r.crypto=r.config=r.enums=r.armor=r.stream=r.OID=r.KDFParams=r.ECDHSymmetricKey=r.Keyid=r.S2K=r.MPI=r.packet=r.util=r.cleartext=r.message=r.signature=r.key=r.destroyWorker=r.getWorker=r.initWorker=r.decryptSessionKeys=r.encryptSessionKey=r.decryptKey=r.revokeKey=r.reformatKey=r.generateKey=r.verify=r.sign=r.decr</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tenvoy.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 81 -      e && e instanceof p.AssertionError && setTimeout(() => {

 Line: 21236 -      throw new Error('setTimeout has not been defined');

 Line: 21243 -          if (typeof setTimeout === 'function') {

 Line: 21244 -              cachedSetTimeout = setTimeout;

 Line: 21262 -      if (cachedSetTimeout === setTimeout) {

 Line: 21264 -          return setTimeout(fun, 0);

 Line: 21266 -      // if setTimeout wasn't available but was latter defined

 Line: 21267 -      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {

 Line: 21268 -          cachedSetTimeout = setTimeout;

 Line: 21269 -          return setTimeout(fun, 0);

 Line: 21272 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 21297 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 21305 -              // Some versions of I.E. have different rules for clearTimeout vs setTimeout

 Line: 24356 -      await new Promise(setTimeout);

 Line: 48301 -  setTimeout(() => {

 Line: 48304 -  setTimeout(() => {

 Line: 48307 -  setTimeout(() => {

 Line: 48310 -  setTimeout(() => {

 Line: 48313 -  setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tenvoy.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16161 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

 Line: 16167 -          /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 16355 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16389 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16404 -          /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

 Line: 16408 -  //                Call UPDATE_HASH() MIN_MATCH-3 more times

 Line: 16484 -        /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 16536 -            /*** INSERT_STRING(s, s.strstart, hash_head); ***/

 Line: 17563 -        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

 Line: 19388 -                  /*UPDATE(state.check, put - _out, _out);*/

 Line: 19476 -      strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/

 Line: 21534 -   *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 Line: 30953 -  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 Line: 33111 -      throw new Error('You must provide a query parameter!');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tenvoy.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 25 -  }}function m(e){if(e=Number(e),n(e)||e<0)throw new RangeError("highWaterMark property of a queuing strategy must be non-negative and non-NaN");return e}function g(t){if(void 0===t)return()=>1;if("function"!=typeof t)throw new TypeError("size property of a queuing strategy must be a function");return e=>t(e)}function _(e,l,r){let f,d;var t=new Promise((e,t)=>{f=e,d=t});return void 0===r&&(r=e=>{throw e}),function(t,r){let n=!1;var e,a,i=e=>{!1===n&&(n=!0,r(e))};let s=0,o=0;const u=t.length,c=new Array(u);for(const r of t){const t=s;e=r,a=e=>{c[t]=e,++o===u&&(e=>{try{const t=l(e);f(t)}catch(e){d(e)}})(c)},Promise.prototype.then.call(e,a,i),++s}}(e,e=>{try{var t=r(e);f(t)}catch(e){d(e)}}),t}function u(e){}function k(e){e&&e instanceof u.AssertionError&&setTimeout(()=>{throw e},0)}function c(e){var t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function l(e,t,r){if(!s(r=Number(r)))throw new RangeError("Size must be a finite, non-NaN, non-negative number.");e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function f(e){e._queue=[],e._queueTotalSize=0}u.AssertionError=function(){};const d=t("[[AbortSteps]]"),w=t("[[ErrorSteps]]");class v{constructor(e={},t={}){S(this);var r=t.size;let n=t.highWaterMark;if(void 0!==e.type)throw new RangeError("Invalid type is specified");r=g(r);void 0===n&&(n=1),function(e,t,r,n){const a=Object.create(N.prototype);var i=p(t,"write",1,[a]),s=p(t,"close",0,[]),o=p(t,"abort",1,[]);F(e,a,function(){return y(t,"start",[a])},i,s,o,r,n)}(this,e,n=m(n),r)}get locked(){if(!1===E(this))throw V("locked");return P(this)}abort(e){return!1===E(this)?Promise.reject(V("abort")):!0===P(this)?Promise.reject(new TypeError("Cannot abort a stream that already has a writer")):x(this,e)}getWriter(){if(!1===E(this))throw V("getWriter");return A(this)}}function A(e){return new B(e)}function S(e){e._state="writable",e._storedError=void 0,e._writer=void 0,e._writableStreamController=void 0,e._writeRequests=[],e._inFlightWriteRequest=void 0,e._closeRequest=void 0,e._inFlightCloseRequest=void 0,e._pendingAbortRequest=vo Line: 157 -  ){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],66:[function(e,t,r){var n,a,t=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function o(t){if(n===setTimeout)return setTimeout(t,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a="function"==typeof clearTimeout?clearTimeout:s}catch(e){a=s}}();var u,c=[],l=!1,f=-1;function d(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!l){var e=o(d);l=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,l=!1,function(t){if(a===clearTimeout)return clearTimeout(t);if((a===s||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(t);try{a(t)}catch(e){try{return a.call(null,t)}catch(e){return a.call(this,t)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function y(){}t.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new p(e,t)),1!==c.length||l||o(h)},p.prototype.run=function(){this.fun.apply(null,this.array)},t.title="browser",t.browser=!0,t.env={},t.argv=[],t.version="",t.versions={},t.on=y,t.addListener=y,t.once=y,t.off=y,t.removeListener=y,t.removeAllListeners=y,t.emit=y,t.prependListener=y,t.prependOnceListener=y,t.listeners=function(e){return[]},t.binding=function(e){throw new Error("process.binding is not supported")},t.cwd=function(){return"/"},t.chdir=function(e){throw new Error("process.chdir is not supported")},t.umask=function(){return 0}},{}],67:[function(e,t,r){"use strict";function n(e){this.stream=e,this.bitOffset=0,this.curByte=0,this.hasByte=!1}var a=[0,1,3,7,15,31,63,127,255];n.prototype._ensureByte=function(){this.hasByte||(this.curByte=this.stream.readByte(),thi Line: 172 -  ,close:n.close.bind(n),abort:n.error.bind(n)})}}function p(e,n=()=>{},r=()=>{}){if((0,i.isStream)(e))return d(e,{async transform(e,t){try{var r=await n(e);void 0!==r&&t.enqueue(r)}catch(e){t.error(e)}},async flush(t){try{var e=await r();void 0!==e&&t.enqueue(e)}catch(e){t.error(e)}}});var t=n(e),e=r();return void 0!==t&&void 0!==e?u([t,e]):void 0!==t?t:e}function y(e,t){let r;var n=new TransformStream({start(e){r=e}});const a=f(e,n.writable);e=h(async function(){r.error(new Error("Readable side was canceled.")),await a,await new Promise(setTimeout)});return t(n.readable,e.writable),e.readable}function a(r,n){Object.entries(Object.getOwnPropertyDescriptors(ReadableStream.prototype)).forEach(([e,t])=>{"constructor"!==e&&(t.value?t.value=t.value.bind(n):t.get=t.get.bind(n),Object.defineProperty(r,e,t))})}function b(e,n=0,a=1/0){if((0,i.isStream)(e)){if(0<=n&&0<=a){let r=0;return d(e,{transform(e,t){r<a?(r+e.length>=n&&t.enqueue(b(e,Math.max(n-r,0),a-r)),r+=e.length):t.terminate()}})}if(n<0&&(a<0||a===1/0)){let t=[];return p(e,e=>{e.length>=-n?t=[e]:t.push(e)},()=>b(u(t),n,a))}if(0===n&&a<0){let t;return p(e,e=>{e=t?u([t,e]):e;if(e.length>=-a)return t=b(e,a),b(e,n,a);t=e})}return console.warn(`stream.slice(input, ${n}, ${a}) not implemented efficiently.`),w(async()=>b(await m(e),n,a))}return e[s.externalBuffer]&&(e=u(e[s.externalBuffer].concat([e]))),!(0,i.isUint8Array)(e)||t&&t.isBuffer(e)?e.slice(n,a):(a===1/0&&(a=e.length),e.subarray(n,a))}async function m(e,t){return(0,i.isStream)(e)?c(e).readToEnd(t):e}async function g(e,t){if((0,i.isStream)(e)&&e.cancel)return e.cancel(t)}function w(e){return new ReadableStream({pull:async t=>{try{t.enqueue(await e()),t.close()}catch(e){t.error(e)}}})}_.default={isStream:i.isStream,isUint8Array:i.isUint8Array,toStream:o,concatUint8Array:i.concatUint8Array,concatStream:n,concat:u,getReader:c,getWriter:l,pipe:f,transformRaw:d,transform:p,transformPair:y,parse:function(e,n){let a;const i=y(e,(e,t)=>{const r=c(e);r.remainder=()=>(r.releaseLock(),f(e,t),i),a=n(r)});return a},clone:function(e){if((0,i.isStream)(e)){var t=function(e){if((0,i.isStr Line: 317 -  new Uint8Array(t.digestLength);function r(e,t,r,n){if(t===void 0)t=h;if(n===void 0)n=32;var a=new Uint8Array([1]);var i=f(t,e);var s=new p(i);var o=new Uint8Array(s.digestLength);var u=o.length;var c=new Uint8Array(n);for(var l=0;l<n;l++){if(u===o.length){d(o,s,r,a);u=0}c[l]=o[u++]}s.clean();o.fill(0);a.fill(0);return c}function a(e,t,r,n){var a=new p(e);var i=a.digestLength;var s=new Uint8Array(4);var o=new Uint8Array(i);var u=new Uint8Array(i);var c=new Uint8Array(n);for(var l=0;l*i<n;l++){var f=l+1;s[0]=f>>>24&255;s[1]=f>>>16&255;s[2]=f>>>8&255;s[3]=f>>>0&255;a.reset();a.update(t);a.update(s);a.finish(u);for(var d=0;d<i;d++)o[d]=u[d];for(var d=2;d<=r;d++){a.reset();a.update(u).finish(u);for(var h=0;h<i;h++)o[h]^=u[h]}for(var d=0;d<i&&l*i+d<n;d++)c[l*i+d]=o[d]}for(var l=0;l<i;l++)o[l]=u[l]=0;for(var l=0;l<4;l++)s[l]=0;a.clean();return c}t.hkdf=r,t.pbkdf2=a}(t);var r,n=t.default;for(r in t)n[r]=t[r];"object"==typeof module&&"object"==typeof module.exports?module.exports=n:"function"==typeof define&&define.amd?define(function(){return n}):e.sha256=n}(this),null==window.TogaTech&&(window.TogaTech={}),TogaTech.tEnvoy=new tEnvoy(openpgp,nacl,sha256);let message=()=>{console.log("%cPowered by TogaTech (TogaTech.org)\n%cSTOP!%c\nTHE CONSOLE IS INTENDED FOR DEVELOPERS ONLY. USE AT YOUR OWN RISK.\n\nIF SOMEONE TOLD YOU TO TYPE ANYTHING HERE, YOU ARE BEING SCAMMED.%c\nIf you were told to enter any text here, maybe to enable a hidden feature, DO NOT TYPE IT HERE. Doing so could send your password and sensitive data to hackers.\n\nTo learn more, visit togatech.org/selfxss.\n\n%ctEnvoy "+TogaTech.tEnvoy.version,"font-size: 15px;","color: red; font-size: 50px;","font-size: 27px;","font-size: 17px;","font-size: 12px;")};message(),setTimeout(()=>{message()},1e3),setTimeout(()=>{message()},2e3),setTimeout(()=>{message()},3e3),setTimeout(()=>{message()},4e3),setTimeout(()=>{message()},5e3);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tenvoy.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 238 -  ault:e};function a(e){this._baseUrl=e||n.default.keyserver,this._fetch="function"==typeof t.fetch?t.fetch:i("node-fetch")}a.prototype.lookup=function(e){let t=this._baseUrl+"/pks/lookup?op=get&options=mr&search=";const r=this._fetch;if(e.keyId)t+="0x"+encodeURIComponent(e.keyId);else{if(!e.query)throw new Error("You must provide a query parameter!");t+=encodeURIComponent(e.query)}return r(t).then(function(e){if(200===e.status)return e.text()}).then(function(e){if(e&&!(e.indexOf("-----END PGP PUBLIC KEY BLOCK-----")<0))return e.trim()})},a.prototype.upload=function(e){var t=this._baseUrl+"/pks/add";const r=this._fetch;return r(t,{method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:"keytext="+encodeURIComponent(e)})},s.default=a}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./config":79,"node-fetch":"node-fetch"}],115:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.lightweight=r.WKD=r.HKP=r.AsyncProxy=r.Keyring=r.crypto=r.config=r.enums=r.armor=r.stream=r.OID=r.KDFParams=r.ECDHSymmetricKey=r.Keyid=r.S2K=r.MPI=r.packet=r.util=r.cleartext=r.message=r.signature=r.key=r.destroyWorker=r.getWorker=r.initWorker=r.decryptSessionKeys=r.encryptSessionKey=r.decryptKey=r.revokeKey=r.reformatKey=r.generateKey=r.verify=r.sign=r.decrypt=r.encrypt=void 0;var n=e("./openpgp");Object.defineProperty(r,"encrypt",{enumerable:!0,get:function(){return n.encrypt}}),Object.defineProperty(r,"decrypt",{enumerable:!0,get:function(){return n.decrypt}}),Object.defineProperty(r,"sign",{enumerable:!0,get:function(){return n.sign}}),Object.defineProperty(r,"verify",{enumerable:!0,get:function(){return n.verify}}),Object.defineProperty(r,"generateKey",{enumerable:!0,get:function(){return n.generateKey}}),Object.defineProperty(r,"reformatKey",{enumerable:!0,get:function(){return n.reformatKey}}),Object.defineProperty(r,"revokeKey",{enumerable:!0,get:function(){return n.revokeKey}}),Object.defineProperty(r,"decryptKey",{enumerable:!0,get:function(){return n.decryptKey}}</Result>
</report_mosca>

