[
 {
  "id": 1,
  "file": "/src/example/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "</header>\n<body>\n\t<h1>Hello</h1>\n\t<p>This is a demo page. Open your console to see more output!</p>\n</body>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"></script>\n<script src=\"socket.io.js\"></script>\n<script src=\"jquery.service.js\"></script>\n<script language=\"javascript\">\n\n//var socket = io.connect( document.location.origin );",
  "line": 10,
  "start": 5,
  "end": 16
 },
 {
  "id": 2,
  "file": "/src/example/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "<body>\n\t<h1>Hello</h1>\n\t<p>This is a demo page. Open your console to see more output!</p>\n</body>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"></script>\n<script src=\"socket.io.js\"></script>\n<script src=\"jquery.service.js\"></script>\n<script language=\"javascript\">\n\n//var socket = io.connect( document.location.origin );\n//socket.on('connect', function () {",
  "line": 11,
  "start": 6,
  "end": 17
 },
 {
  "id": 3,
  "file": "/src/example/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "\t<h1>Hello</h1>\n\t<p>This is a demo page. Open your console to see more output!</p>\n</body>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"></script>\n<script src=\"socket.io.js\"></script>\n<script src=\"jquery.service.js\"></script>\n<script language=\"javascript\">\n\n//var socket = io.connect( document.location.origin );\n//socket.on('connect', function () {\n//    socket.emit('hello', {id: '123'});",
  "line": 12,
  "start": 7,
  "end": 18
 },
 {
  "id": 4,
  "file": "/src/example/index.html",
  "filetype": "html",
  "search": "<script",
  "match": "\t<p>This is a demo page. Open your console to see more output!</p>\n</body>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js\"></script>\n<script src=\"socket.io.js\"></script>\n<script src=\"jquery.service.js\"></script>\n<script language=\"javascript\">\n\n//var socket = io.connect( document.location.origin );\n//socket.on('connect', function () {\n//    socket.emit('hello', {id: '123'});\n//    socket.on('hello', function (response) {",
  "line": 13,
  "start": 8,
  "end": 19
 },
 {
  "id": 5,
  "file": "/src/example/socket.io.js",
  "filetype": "js",
  "search": "\\seval\\s*\\(",
  "match": "  // In the third stage we use the eval function to compile the text into a\n  // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n  // in JavaScript: it can begin a block or an object literal. We wrap the text\n  // in parens to eliminate the ambiguity.\n\n          j = eval('(' + text + ')');\n\n  // In the optional fourth stage, we recursively walk the new structure, passing\n  // each name/value pair to a reviver function for possible transformation.\n\n          return typeof reviver === 'function' ?",
  "line": 957,
  "start": 952,
  "end": 963
 }
]
