/src/README.md-14-
/src/README.md:15:http.createServer(
/src/README.md-16-  st(process.cwd())
##############################################
/src/README.md-25-var mount = st({ path: __dirname + '/static', url: '/static' })
/src/README.md:26:http.createServer(function(req, res) {
/src/README.md-27-  var stHandled = mount(req, res);
##############################################
/src/README.md-38-var mount = st({ path: __dirname + '/static', url: '/static' })
/src/README.md:39:http.createServer(function(req, res) {
/src/README.md-40-  mount(req, res, function() {
##############################################
/src/README.md-51-var mount = st({ path: __dirname + '/static', url: '/' })
/src/README.md:52:http.createServer(function(req, res) {
/src/README.md-53-  if (shouldDoThing(req)) {
##############################################
/src/README.md-65-var mount = st({ path: __dirname + '/static', url: '/', passthrough: true })
/src/README.md:66:http.createServer(function(req, res) {
/src/README.md-67-  mount(req, res, function() {
##############################################
/src/README.md-140-// with bare node.js
/src/README.md:141:http.createServer(function (req, res) {
/src/README.md-142-  if (mount(req, res)) return // serving a static file
##############################################
/src/bin/server.js-137-
/src/bin/server.js:138:http.createServer(function (q, s) {
/src/bin/server.js-139-  if (mount(q, s)) return
##############################################
/src/st.js-158-Mount.prototype.getPath = function (u) {
/src/st.js:159:  u = path.normalize(url.parse(u).pathname.replace(/^[\/\\]?/, '/')).replace(/\\/g, '/')
/src/st.js-160-  if (u.indexOf(this.url) !== 0) return false
##############################################
/src/st.js-187-  // querystrings are of no concern to us
/src/st.js:188:  req.url = url.parse(req.url).pathname
/src/st.js-189-
##############################################
/src/st.js-346-  var streamOpt = { fd: fd, start: 0, end: stat.size }
/src/st.js:347:  var stream = fs.createReadStream(p, streamOpt)
/src/st.js-348-  stream.destroy = function () {}
##############################################
/src/test/multi-mount.js-73-  // using the middleware approach
/src/test/multi-mount.js:74:  middlewareServer = http.createServer(function (req, res) {
/src/test/multi-mount.js-75-    mount1(req, res, function () {
##############################################
/src/test/multi-mount.js-88-test('setup regular server', function (t) {
/src/test/multi-mount.js:89:  server = http.createServer(function (req, res) {
/src/test/multi-mount.js-90-    if (!mount1(req, res) && !mount2(req, res)) {
##############################################
/src/test/basic.js-30-test('setup', function (t) {
/src/test/basic.js:31:  server = http.createServer(function (req, res) {
/src/test/basic.js-32-    if (!mount(req, res)) {
##############################################
/src/example/server.js-4-// Just serve the files in this dir
/src/example/server.js:5:http.createServer(
/src/example/server.js-6-  st(process.cwd())
