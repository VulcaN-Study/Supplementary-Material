/src/bin/serve.js-43-// And initialize `args`
/src/bin/serve.js:44:const flags = args.parse(process.argv, { minimist })
/src/bin/serve.js-45-
##############################################
/src/bin/serve.js-82-const microHttps = fn =>
/src/bin/serve.js:83:  https.createServer(httpsOpts, (req, res) => micro.run(req, res, fn))
/src/bin/serve.js-84-const server = flags.ssl
##############################################
/src/lib/render.js-29-    const index = files.indexOf(file)
/src/lib/render.js:30:    const details = path.parse(filePath)
/src/lib/render.js-31-
##############################################
/src/lib/server.js-61-
/src/lib/server.js:62:  let related = path.parse(path.join(current, pathname))
/src/lib/server.js-63-  let assetRequest = false
##############################################
/src/lib/server.js-67-    const relative = path.relative(assetDir, pathname)
/src/lib/server.js:68:    related = path.parse(path.join(__dirname, '/../assets', relative))
/src/lib/server.js-69-  }
##############################################
/src/lib/server.js-75-    const custom404Path = path.join(current, '/404.html')
/src/lib/server.js:76:    notFoundResponse = yield fs.readFile(custom404Path, 'utf-8')
/src/lib/server.js-77-  } catch (err) {}
