/src/bin/file-static-server-12-  .option('-P, --port [port]', 'The port to listen')
/src/bin/file-static-server:13:  .parse(process.argv)
/src/bin/file-static-server-14-
##############################################
/src/lib/control.js-23-      .write()
/src/lib/control.js:24:    fs.createReadStream(path.join(__dirname, '../views/404.html')).pipe(this.res)
/src/lib/control.js-25-  },
##############################################
/src/lib/file.js-63-    }
/src/lib/file.js:64:    fs.readFile(this.filePath, 'utf8', function (err, result) {
/src/lib/file.js-65-      if (err) {
##############################################
/src/lib/file.js-75-    }
/src/lib/file.js:76:    fs.readFile(this.filePath, 'utf8', function (err, result) {
/src/lib/file.js-77-      if (err) {
##############################################
/src/lib/file.js-87-  getStream: function () {
/src/lib/file.js:88:    return fs.createReadStream(this.filePath)
/src/lib/file.js-89-  }
##############################################
/src/server.js-3-
/src/server.js:4:var server = http.createServer(function (req, res) {
/src/server.js-5-  var control = new Control(req, res)
