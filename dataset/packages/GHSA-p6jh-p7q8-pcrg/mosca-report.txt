<report_mosca>
 <Path>/src/lib/fsExt.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 229 -                      eval(code);

 Line: 299 -                  eval(code);

 Line: 356 -              else setTimeout(function(){

 Line: 386 -              else setTimeout(function(){

 Line: 869 -                  return setTimeout(function(){

 Line: 929 -              else if(err && repeated < 5) setTimeout(function(){

 Line: 1043 -              if(repeated < maxRepeats) setTimeout(function(){

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/object.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 30 -          node:['setTimeout','clearTimeout','setInterval','clearInterval','setImmediate','clearImmediate','global','GLOBAL','require','process','__dirname','__filename','console','exports','module']

 Line: 95 -      if (!obj || Object.prototype.toString.call(obj) !== '[object Object]' || obj.nodeType || obj.setInterval) return false;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/object.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 170 -                  // copy all include undefined props - helpful in query builder

 Line: 303 -   * Update object using mongodb update query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/query.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 89 -      query = (object.isObject(query)) ? query : { $this:query };

 Line: 93 -          var ops = query[key];

 Line: 96 -              return query[key].map(compile).join(op);

 Line: 113 -              if(op[0]!=='$') { // nested query

 Line: 206 -          if(object.isObject(query)) query = this.compile(query);

 Line: 207 -          else if(typeof query === 'string') query = this.fromCompiledString(query);

 Line: 208 -          else if(typeof query !== 'function') throw new Error('Wrong Arguments');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/async.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 17 -                asyncFncWrapper === setTimeout ||

 Line: 20 -          throw new Error('Wrong argument "asyncFncWrapper", it have to be function, setImmediate, setTimeout, ' +

 Line: 29 -   * @param {Object} asyncFncWrapper (optional) by default is setImmediate, but can be setTimeout, or any custom function

 Line: 210 -   * @param {Object} asyncFncWrapper (optional) by default is setImmediate, but can be setTimeout, or any custom function

</Result>
</report_mosca>

