/src/nosqlworker.js-126-			if (typeof(msg.arg[0]) === 'string')
/src/nosqlworker.js:127:				msg.arg[0] = eval('(' + msg.arg[0] + ')');
/src/nosqlworker.js-128-
##############################################
/src/nosqlworker.js-139-			if (typeof(msg.arg[0]) === 'string')
/src/nosqlworker.js:140:				msg.arg[0] = eval('(' + msg.arg[0] + ')');
/src/nosqlworker.js-141-
##############################################
/src/nosqlworker.js-237-		case 'storage.scan':
/src/nosqlworker.js:238:			db.storage.scan(msg.arg[0], msg.arg[1], eval('(' + msg.arg[2] + ')'), function(err, response, repository) {
/src/nosqlworker.js-239-				RESTORAGESCAN.id = msg.id;
##############################################
/src/nosqlworker.js-254-		case 'stream':
/src/nosqlworker.js:255:			db[msg.TYPE](eval('(' + msg.arg[0] + ')'), msg.arg[1], function(err, repository, count) {
/src/nosqlworker.js-256-				RESSTREAM.id = msg.id;
##############################################
/src/internal.js-2040-	try {
/src/internal.js:2041:		fn = eval(fn);
/src/internal.js-2042-		fn.components = keys;
##############################################
/src/internal.js-3433-			try {
/src/internal.js:3434:				r.push({ cmd: command.phrase, value: eval('(' + cmd + ')') });
/src/internal.js-3435-			} catch (e) {
##############################################
/src/index.js-4702-
/src/index.js:4703:		F.routes.middleware[name] = typeof(declaration) === 'function' ? declaration : eval(declaration);
/src/index.js-4704-		F._length_middleware = Object.keys(F.routes.middleware).length;
##############################################
/src/index.js-5051-			} else
/src/index.js:5052:				obj = typeof(declaration) === 'function' ? eval('(' + declaration.toString() + ')()') : eval(declaration);
/src/index.js-5053-
##############################################
/src/index.js-5104-			else {
/src/index.js:5105:				obj = typeof(declaration) === 'function' ? eval('(' + declaration.toString() + ')()') : eval(declaration);
/src/index.js-5106-				content = declaration.toString();
##############################################
/src/index.js-10475-
/src/index.js:10476:	process.env.NODE_TLS_REJECT_UNAUTHORIZED = CONF.allow_ssc_validation === false ? '0' : '1';
/src/index.js-10477-
##############################################
/src/nosql.js-2875-	this.$repository = data.repository;
/src/nosql.js:2876:	this.$insertcallback = data.insert ? eval('(' + data.insert + ')') : null;
/src/nosql.js-2877-
##############################################
/src/nosql.js-2879-		for (var i = 0; i < data.functions.length; i++)
/src/nosql.js:2880:			data.functions[i] = eval('(' + data.functions[i] + ')');
/src/nosql.js-2881-		this.$functions = data.functions;
##############################################
/src/changes.txt-1227-- fixed: (critical) view compilation in release mode (problem with just-in-time rendering)
/src/changes.txt:1228:- fixed: (critical) `F.eval()`
/src/changes.txt-1229-- fixed: (critical) parsing Date instance as Date instance in SchemaBuilder
##############################################
/src/changes.txt-1972-- added: framework.config['allow-custom-titles'] - (default: false)
/src/changes.txt:1973:- added: new option into Mail: rejectUnauthorized (for TLS)
/src/changes.txt-1974-- added: @{log()} and @{LOG()} into views
##############################################
/src/changes.txt-2319-- updated: utils.download(url, flags, [data], callback, cookies, headers, encoding, timeout)
/src/changes.txt:2320:- updated: framework.eval(string/url/function) - this function supports eval code from another URL
/src/changes.txt-2321-- updated: assertion testing (new features)
