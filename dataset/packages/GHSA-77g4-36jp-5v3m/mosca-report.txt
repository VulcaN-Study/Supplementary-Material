<report_mosca>
 <Path>/src/client.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 155 -    self._rotateInterval = setInterval(self._rotateSecrets.bind(self), ROTATE_INTERVAL)

 Line: 805 -        var bootstrapTimeout = setTimeout(function () {

 Line: 1509 -    var timeout = setTimeout(onTimeout, SEND_TIMEOUT)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/client.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 232 -   * Announce that the peer, controlling the querying node, is downloading a torrent on a

 Line: 935 -      queryClosest()

 Line: 938 -    function query (addr) {

 Line: 951 -    function queryClosest () {

 Line: 953 -        query(contact.addr)

 Line: 1006 -        // query as many candidates as our concurrency limit will allow

 Line: 1007 -        query(candidates.pop().addr)

 Line: 1074 -   * Called when another node sends a query.

 Line: 1080 -    var query = message.q.toString()

 Line: 1085 -      var errMessage = 'unexpected query type'

 Line: 1177 -   * Send "ping" query to given addr.

 Line: 1187 -   * Called when another node sends a "ping" query.

 Line: 1206 -   * Send "find_node" query to given addr.

 Line: 1264 -   * Called when another node sends a "find_node" query.

 Line: 1298 -   * Send "get_peers" query to given addr.

 Line: 1338 -   * Called when another node sends a "get_peers" query.

 Line: 1380 -   * Send "announce_peer" query to given host and port.

 Line: 1407 -   * Called when another node sends a "announce_peer" query.

 Line: 1520 -   * Generate token (for response to `get_peers` query). Tokens are the SHA1 hash of

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/internal.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -  test('`ping` query send and response', function (t) {

 Line: 23 -  test('`find_node` query for exact match (with one in table)', function (t) {

 Line: 50 -  test('`find_node` query (with many in table)', function (t) {

 Line: 79 -  test('`get_peers` query to node with *no* peers in table', function (t) {

 Line: 107 -  test('`get_peers` query to node with peers in table', function (t) {

 Line: 138 -  test('`announce_peer` query with bad token', function (t) {

 Line: 160 -  test('`announce_peer` query gets ack response', function (t) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/horde.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 45 -    var timeoutId = setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/basic.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 75 -    setTimeout(function () {

 Line: 97 -    setTimeout(t.pass(), 100)

</Result>
</report_mosca>

