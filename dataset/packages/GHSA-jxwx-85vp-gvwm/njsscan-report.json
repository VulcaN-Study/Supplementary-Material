{
  "errors": [],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            121,
            121
          ],
          "match_position": [
            37,
            59
          ],
          "match_string": "\treturn this.optional( element ) || /^\\w+$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            134,
            134
          ],
          "match_position": [
            10,
            59
          ],
          "match_string": "\tif ( !( /^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test( value ) ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            173,
            173
          ],
          "match_position": [
            40,
            131
          ],
          "match_string": "    return this.optional( element ) || /^([A-Z]{6}[A-Z2-9][A-NP-Z1-9])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test( value.toUpperCase() );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            249,
            249
          ],
          "match_position": [
            30,
            52
          ],
          "match_string": "\tif ( value.length !== 9 || !cifRegEx.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            490,
            490
          ],
          "match_position": [
            7,
            33
          ],
          "match_string": "\tif ( /[^0-9 \\-]+/.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            528,
            528
          ],
          "match_position": [
            7,
            32
          ],
          "match_string": "\tif ( /[^0-9\\-]+/.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            563,
            563
          ],
          "match_position": [
            32,
            59
          ],
          "match_string": "\tif ( validTypes & 0x0001 && ( /^(5[12345])/.test( value ) || /^(2[234567])/.test( value ) ) ) { // Mastercard"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            563,
            563
          ],
          "match_position": [
            63,
            91
          ],
          "match_string": "\tif ( validTypes & 0x0001 && ( /^(5[12345])/.test( value ) || /^(2[234567])/.test( value ) ) ) { // Mastercard"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            566,
            566
          ],
          "match_position": [
            30,
            50
          ],
          "match_string": "\tif ( validTypes & 0x0002 && /^(4)/.test( value ) ) { // Visa"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            569,
            569
          ],
          "match_position": [
            30,
            54
          ],
          "match_string": "\tif ( validTypes & 0x0004 && /^(3[47])/.test( value ) ) { // Amex"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            572,
            572
          ],
          "match_position": [
            30,
            66
          ],
          "match_string": "\tif ( validTypes & 0x0008 && /^(3(0[012345]|[68]))/.test( value ) ) { // Dinersclub"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            575,
            575
          ],
          "match_position": [
            30,
            59
          ],
          "match_string": "\tif ( validTypes & 0x0010 && /^(2(014|149))/.test( value ) ) { // Enroute"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            578,
            578
          ],
          "match_position": [
            30,
            53
          ],
          "match_string": "\tif ( validTypes & 0x0020 && /^(6011)/.test( value ) ) { // Discover"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            581,
            581
          ],
          "match_position": [
            30,
            50
          ],
          "match_string": "\tif ( validTypes & 0x0040 && /^(3)/.test( value ) ) { // Jcb"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            584,
            584
          ],
          "match_position": [
            30,
            58
          ],
          "match_string": "\tif ( validTypes & 0x0040 && /^(2131|1800)/.test( value ) ) { // Jcb"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            631,
            631
          ],
          "match_position": [
            40,
            59
          ],
          "match_string": "    return this.optional( element ) || regex.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            636,
            636
          ],
          "match_position": [
            37,
            163
          ],
          "match_string": "\treturn this.optional( element ) || /^[1-4]\\d{3}\\/((0?[1-6]\\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\\/(30|([1-2][0-9])|(0?[1-9]))))$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            662,
            662
          ],
          "match_position": [
            7,
            23
          ],
          "match_string": "\tif ( re.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            680,
            680
          ],
          "match_position": [
            37,
            124
          ],
          "match_string": "\treturn this.optional( element ) || /^(0?[1-9]|[12]\\d|3[01])[\\.\\/\\-](0?[1-9]|1[012])[\\.\\/\\-]([12]\\d)?(\\d\\d)$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            693,
            693
          ],
          "match_position": [
            37,
            65
          ],
          "match_string": "\treturn this.optional( element ) || /^[0-9]{1,7}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            858,
            858
          ],
          "match_position": [
            37,
            60
          ],
          "match_string": "\treturn this.optional( element ) || /^-?\\d+$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            862,
            862
          ],
          "match_position": [
            37,
            178
          ],
          "match_string": "\treturn this.optional( element ) || /^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            866,
            866
          ],
          "match_position": [
            37,
            919
          ],
          "match_string": "\treturn this.optional( element ) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            894,
            894
          ],
          "match_position": [
            37,
            62
          ],
          "match_string": "\treturn this.optional( element ) || /^[a-z]+$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            898,
            898
          ],
          "match_position": [
            37,
            72
          ],
          "match_string": "\treturn this.optional( element ) || /^[a-z\\-.,()'\"\\s]+$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            959,
            959
          ],
          "match_position": [
            37,
            136
          ],
          "match_string": "\treturn this.optional( element ) || /^((\\+|00(\\s|\\s?\\-\\s?)?)31(\\s|\\s?\\-\\s?)?(\\(0\\)[\\-\\s]?)?|0)6((\\s|\\s?\\-\\s?)?[0-9]){8}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            963,
            964
          ],
          "match_position": [
            2,
            117
          ],
          "match_string": "\tvar ruPhone_number = phone_number.replace( /\\(|\\)|\\s+|-/g, \"\" );\n\treturn this.optional( element ) || ruPhone_number.length > 9 && /^((\\+7|7|8)+([0-9]){10})$/.test( ruPhone_number );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            982,
            982
          ],
          "match_position": [
            40,
            231
          ],
          "match_string": "    return this.optional( element ) || /^(254|252|248|240|224|192|128)\\.0\\.0\\.0|255\\.(254|252|248|240|224|192|128|0)\\.0\\.0|255\\.255\\.(254|252|248|240|224|192|128|0)\\.0|255\\.255\\.255\\.(254|252|248|240|224|192|128|0)/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1008,
            1008
          ],
          "match_position": [
            49,
            71
          ],
          "match_string": "\tif ( value.length > 10 || value.length < 9 || !nieRegEx.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1043,
            1043
          ],
          "match_position": [
            7,
            41
          ],
          "match_string": "\tif ( /^[0-9]{8}[A-Z]{1}$/.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1048,
            1048
          ],
          "match_position": [
            7,
            32
          ],
          "match_string": "\tif ( /^[KLM]{1}/.test( value ) ) {"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1142,
            1142
          ],
          "match_position": [
            37,
            59
          ],
          "match_string": "\treturn this.optional( element ) || /^\\S+$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1165,
            1165
          ],
          "match_position": [
            9,
            28
          ],
          "match_string": "\treturn param.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1172,
            1172
          ],
          "match_position": [
            37,
            140
          ],
          "match_string": "\treturn this.optional( element ) || /^((\\+|00(\\s|\\s?\\-\\s?)?)31(\\s|\\s?\\-\\s?)?(\\(0\\)[\\-\\s]?)?|0)[1-9]((\\s|\\s?\\-\\s?)?[0-9]){8}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1194,
            1196
          ],
          "match_position": [
            2,
            65
          ],
          "match_string": "\tphone_number = phone_number.replace( /\\s+/g, \"\" );\n\tvar regexp = /^(?:(?:(?:\\+|00)?48)|(?:\\(\\+?48\\)))?(?:1[2-8]|2[2-69]|3[2-49]|4[1-68]|5[0-9]|6[0-35-9]|[7-8][1-9]|9[145])\\d{7}$/;\n\treturn this.optional( element ) || regexp.test( phone_number );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1196,
            1196
          ],
          "match_position": [
            37,
            64
          ],
          "match_string": "\treturn this.optional( element ) || regexp.test( phone_number );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1260,
            1260
          ],
          "match_position": [
            37,
            93
          ],
          "match_string": "\treturn this.optional( element ) || /^\\d{2}.\\d{3}-\\d{3}?$|^\\d{5}-?\\d{3}?$/.test( cep_value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1277,
            1277
          ],
          "match_position": [
            37,
            128
          ],
          "match_string": "\treturn this.optional( element ) || /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ] *\\d[ABCEGHJKLMNPRSTVWXYZ]\\d$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1282,
            1282
          ],
          "match_position": [
            37,
            60
          ],
          "match_string": "\treturn this.optional( element ) || /^\\d{5}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1286,
            1286
          ],
          "match_position": [
            37,
            82
          ],
          "match_string": "\treturn this.optional( element ) || /^[1-9][0-9]{3}\\s?[a-zA-Z]{2}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1291,
            1291
          ],
          "match_position": [
            37,
            275
          ],
          "match_string": "\treturn this.optional( element ) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\\s?(0AA))$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1428,
            1428
          ],
          "match_position": [
            37,
            56
          ],
          "match_string": "\treturn this.optional( element ) || regex.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1437,
            1437
          ],
          "match_position": [
            37,
            91
          ],
          "match_string": "\treturn this.optional( element ) || /^([01]\\d|2[0-3]|[0-9])(:[0-5]\\d){1,2}$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1441,
            1441
          ],
          "match_position": [
            37,
            99
          ],
          "match_string": "\treturn this.optional( element ) || /^((0?[1-9]|1[012])(:[0-5]\\d){1,2}(\\ ?[AP]M))$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1446,
            1446
          ],
          "match_position": [
            37,
            1239
          ],
          "match_string": "\treturn this.optional( element ) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1505,
            1505
          ],
          "match_position": [
            37,
            69
          ],
          "match_string": "\treturn this.optional( element ) || /^\\d{5}(-\\d{4})?$/.test( value );"
        },
        {
          "file_path": "/src/dist/additional-methods.js",
          "match_lines": [
            1509,
            1509
          ],
          "match_position": [
            37,
            75
          ],
          "match_string": "\treturn this.optional( element ) || /^90[2-5]\\d\\{2\\}-\\d{4}$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_de.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            80
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d\\d?\\.\\d\\d?\\.\\d\\d\\d?\\d?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_de.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            38,
            94
          ],
          "match_string": "\t\treturn this.optional( element ) || /^-?(?:\\d+|\\d{1,3}(?:\\.\\d{3})+)(?:,\\d+)?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_es_CL.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            80
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d\\d?\\-\\d\\d?\\-\\d\\d\\d?\\d?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_es_CL.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            38,
            94
          ],
          "match_string": "\t\treturn this.optional( element ) || /^-?(?:\\d+|\\d{1,3}(?:\\.\\d{3})+)(?:,\\d+)?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_fi.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            79
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d{1,2}\\.\\d{1,2}\\.\\d{4}$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_fi.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            38,
            74
          ],
          "match_string": "\t\treturn this.optional( element ) || /^-?(?:\\d+)(?:,\\d+)?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_it.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            80
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d\\d?\\-\\d\\d?\\-\\d\\d\\d?\\d?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_it.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            38,
            94
          ],
          "match_string": "\t\treturn this.optional( element ) || /^-?(?:\\d+|\\d{1,3}(?:\\.\\d{3})+)(?:,\\d+)?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_nl.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            92
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d\\d?[\\.\\/\\-]\\d\\d?[\\.\\/\\-]\\d\\d\\d?\\d?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_nl.js",
          "match_lines": [
            20,
            20
          ],
          "match_position": [
            38,
            94
          ],
          "match_string": "\t\treturn this.optional( element ) || /^-?(?:\\d+|\\d{1,3}(?:\\.\\d{3})+)(?:,\\d+)?$/.test( value );"
        },
        {
          "file_path": "/src/dist/localization/methods_pt.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            38,
            80
          ],
          "match_string": "\t\treturn this.optional( element ) || /^\\d\\d?\\/\\d\\d?\\/\\d\\d\\d?\\d?$/.test( value );"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}