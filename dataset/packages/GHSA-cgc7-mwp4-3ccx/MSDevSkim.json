[
  {
    "filename": "/src/cli-integration-tests.js",
    "start_line": 178,
    "start_column": 14,
    "end_line": 178,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/ResourceServer.js",
    "start_line": 31,
    "start_column": 11,
    "end_line": 31,
    "end_column": 17,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 80,
    "start_column": 22,
    "end_line": 80,
    "end_column": 28,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 89,
    "start_column": 92,
    "end_line": 89,
    "end_column": 98,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 95,
    "start_column": 32,
    "end_line": 95,
    "end_column": 38,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 109,
    "start_column": 22,
    "end_line": 109,
    "end_column": 28,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 113,
    "start_column": 22,
    "end_line": 113,
    "end_column": 28,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 261,
    "start_column": 98,
    "end_line": 261,
    "end_column": 104,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 281,
    "start_column": 98,
    "end_line": 281,
    "end_column": 104,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 285,
    "start_column": 102,
    "end_line": 285,
    "end_column": 108,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 295,
    "start_column": 118,
    "end_line": 295,
    "end_column": 124,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/command-apidoc.js",
    "start_line": 295,
    "start_column": 45,
    "end_line": 295,
    "end_column": 79,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"00a87474082744c1a8515da6aa5792d2\""
  },
  {
    "filename": "/src/lib/onedrive-api.js",
    "start_line": 370,
    "start_column": 32,
    "end_line": 370,
    "end_column": 38,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 11,
    "start_column": 135,
    "end_line": 11,
    "end_column": 138,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLS"
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 4,
    "start_column": 19,
    "end_line": 4,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"8a1556e382704160808e9a7bef7135d3\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 10,
    "start_column": 27,
    "end_line": 10,
    "end_column": 61,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"5c05172554194f95b60971f6d577cc1a\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 14,
    "start_column": 27,
    "end_line": 14,
    "end_column": 61,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"3a851ab0c0e849b7bc9e8cd5c4feb34a\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 18,
    "start_column": 26,
    "end_line": 18,
    "end_column": 60,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 21,
    "start_column": 19,
    "end_line": 21,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"b863cbc514cb4cafbae8dd6a4fcad919\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 26,
    "start_column": 26,
    "end_line": 26,
    "end_column": 60,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 29,
    "start_column": 19,
    "end_line": 29,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"25b656aac0564d1a91ab98295aa3cc58\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 34,
    "start_column": 26,
    "end_line": 34,
    "end_column": 60,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 37,
    "start_column": 19,
    "end_line": 37,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"2ee48f80889447429a3cccb04a466072\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 43,
    "start_column": 27,
    "end_line": 43,
    "end_column": 61,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"30cf9214f5054c4da3b23eed7211a6e0\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 47,
    "start_column": 26,
    "end_line": 47,
    "end_column": 60,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 50,
    "start_column": 19,
    "end_line": 50,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"5ec2e7505ec2e7505ec2e7505ec2e750\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 55,
    "start_column": 26,
    "end_line": 55,
    "end_column": 60,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/welcomeAssets.js",
    "start_line": 60,
    "start_column": 19,
    "end_line": 60,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "\"9bb5d498aba74cc6a047cfdc841e82a1\""
  },
  {
    "filename": "/src/lib/BaseApplication.js",
    "start_line": 397,
    "start_column": 18,
    "end_line": 397,
    "end_column": 46,
    "rule_id": "DS125134",
    "rule_name": "Disabled certificate validation",
    "severity": 1,
    "description": "Extend default certificate validation, but do not disable or override default rules.",
    "match": "NODE_TLS_REJECT_UNAUTHORIZED"
  },
  {
    "filename": "/src/lib/BaseApplication.js",
    "start_line": 396,
    "start_column": 15,
    "end_line": 396,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "Tls"
  },
  {
    "filename": "/src/lib/BaseApplication.js",
    "start_line": 397,
    "start_column": 23,
    "end_line": 397,
    "end_column": 27,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "TLS_"
  },
  {
    "filename": "/src/lib/BaseApplication.js",
    "start_line": 397,
    "start_column": 76,
    "end_line": 397,
    "end_column": 79,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "Tls"
  },
  {
    "filename": "/src/lib/reserved-ids.js",
    "start_line": 3,
    "start_column": 23,
    "end_line": 3,
    "end_column": 57,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "'c3176726992c11e9ac940492261af972'"
  },
  {
    "filename": "/src/lib/onedrive-api-node-utils.js",
    "start_line": 47,
    "start_column": 47,
    "end_line": 47,
    "end_column": 53,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/onedrive-api-node-utils.js",
    "start_line": 83,
    "start_column": 37,
    "end_line": 83,
    "end_column": 43,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/onedrive-api-node-utils.js",
    "start_line": 117,
    "start_column": 23,
    "end_line": 117,
    "end_column": 29,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/models/Setting.js",
    "start_line": 670,
    "start_column": 28,
    "end_line": 670,
    "end_column": 31,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "TLS"
  },
  {
    "filename": "/src/lib/models/Setting.js",
    "start_line": 671,
    "start_column": 220,
    "end_line": 671,
    "end_column": 223,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "TLS"
  },
  {
    "filename": "/src/lib/models/Setting.js",
    "start_line": 673,
    "start_column": 15,
    "end_line": 673,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "Tls"
  },
  {
    "filename": "/src/lib/models/Setting.js",
    "start_line": 683,
    "start_column": 28,
    "end_line": 683,
    "end_column": 31,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "TLS"
  },
  {
    "filename": "/src/lib/models/Folder.js",
    "start_line": 92,
    "start_column": 10,
    "end_line": 92,
    "end_column": 44,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "'c04f1c7c04f1c7c04f1c7c04f1c7c04f'"
  },
  {
    "filename": "/src/lib/components/side-menu-content.js",
    "start_line": 203,
    "start_column": 19,
    "end_line": 203,
    "end_column": 53,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "'c3176726992c11e9ac940492261af972'"
  },
  {
    "filename": "/src/lib/components/screens/notes.js",
    "start_line": 162,
    "start_column": 22,
    "end_line": 162,
    "end_column": 56,
    "rule_id": "DS173237",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 2,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "'c3176726992c11e9ac940492261af972'"
  },
  {
    "filename": "/src/lib/components/shared/note-screen-shared.js",
    "start_line": 271,
    "start_column": 11,
    "end_line": 271,
    "end_column": 14,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/components/shared/note-screen-shared.js",
    "start_line": 274,
    "start_column": 8,
    "end_line": 274,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/components/shared/note-screen-shared.js",
    "start_line": 276,
    "start_column": 8,
    "end_line": 276,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/components/shared/note-screen-shared.js",
    "start_line": 279,
    "start_column": 12,
    "end_line": 279,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ltmain.sh",
    "start_line": 83,
    "start_column": 3,
    "end_line": 83,
    "end_column": 10,
    "rule_id": "DS440010",
    "rule_name": "OpenSSL: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "NULLCMD"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ltmain.sh",
    "start_line": 2734,
    "start_column": 3,
    "end_line": 2734,
    "end_column": 10,
    "rule_id": "DS440010",
    "rule_name": "OpenSSL: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "NULLCMD"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 19348,
    "start_column": 31,
    "end_line": 19348,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(C)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28029,
    "start_column": 7,
    "end_line": 28029,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28909,
    "start_column": 47,
    "end_line": 28909,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(bufpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28929,
    "start_column": 38,
    "end_line": 28929,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(bufpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31267,
    "start_column": 28,
    "end_line": 31267,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31279,
    "start_column": 24,
    "end_line": 31279,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCol->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 34519,
    "start_column": 12,
    "end_line": 34519,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAbsoluteName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 37230,
    "start_column": 15,
    "end_line": 37230,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDirname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38107,
    "start_column": 29,
    "end_line": 38107,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBasePath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39197,
    "start_column": 22,
    "end_line": 39197,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39600,
    "start_column": 48,
    "end_line": 39600,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39613,
    "start_column": 19,
    "end_line": 39613,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40390,
    "start_column": 16,
    "end_line": 40390,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(dbPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40411,
    "start_column": 14,
    "end_line": 40411,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(lockPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40842,
    "start_column": 39,
    "end_line": 40842,
    "end_column": 76,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&writeBuffer[PROXY_PATHINDEX])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40973,
    "start_column": 18,
    "end_line": 40973,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(dbPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40999,
    "start_column": 16,
    "end_line": 40999,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(conchPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41049,
    "start_column": 18,
    "end_line": 41049,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41057,
    "start_column": 15,
    "end_line": 41057,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41057,
    "start_column": 55,
    "end_line": 41057,
    "end_column": 77,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(DOTLOCK_SUFFIX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41061,
    "start_column": 13,
    "end_line": 41061,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56422,
    "start_column": 12,
    "end_line": 56422,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56423,
    "start_column": 12,
    "end_line": 56423,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76927,
    "start_column": 33,
    "end_line": 76927,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 128087,
    "start_column": 11,
    "end_line": 128087,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 142242,
    "start_column": 27,
    "end_line": 142242,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAff)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165233,
    "start_column": 14,
    "end_line": 165233,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165257,
    "start_column": 11,
    "end_line": 165257,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDatabase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165257,
    "start_column": 31,
    "end_line": 165257,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zJournal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165257,
    "start_column": 50,
    "end_line": 165257,
    "end_column": 62,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165259,
    "start_column": 14,
    "end_line": 165259,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(azParam[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 167723,
    "start_column": 19,
    "end_line": 167723,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168008,
    "start_column": 15,
    "end_line": 168008,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168019,
    "start_column": 22,
    "end_line": 168019,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168085,
    "start_column": 11,
    "end_line": 168085,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168090,
    "start_column": 14,
    "end_line": 168090,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168091,
    "start_column": 16,
    "end_line": 168091,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168125,
    "start_column": 9,
    "end_line": 168125,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168160,
    "start_column": 17,
    "end_line": 168160,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168186,
    "start_column": 18,
    "end_line": 168186,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168187,
    "start_column": 18,
    "end_line": 168187,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168225,
    "start_column": 24,
    "end_line": 168225,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168350,
    "start_column": 18,
    "end_line": 168350,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->azColumn[iCol])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168353,
    "start_column": 27,
    "end_line": 168353,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173060,
    "start_column": 14,
    "end_line": 173060,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173064,
    "start_column": 18,
    "end_line": 173064,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173072,
    "start_column": 16,
    "end_line": 173072,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173397,
    "start_column": 33,
    "end_line": 173397,
    "end_column": 59,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCsr->filter.zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173404,
    "start_column": 24,
    "end_line": 173404,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCsr->zStop)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 174053,
    "start_column": 21,
    "end_line": 174053,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 174513,
    "start_column": 14,
    "end_line": 174513,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 174922,
    "start_column": 30,
    "end_line": 174922,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 175313,
    "start_column": 22,
    "end_line": 175313,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 175775,
    "start_column": 21,
    "end_line": 175775,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176053,
    "start_column": 17,
    "end_line": 176053,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176063,
    "start_column": 68,
    "end_line": 176063,
    "end_column": 77,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176473,
    "start_column": 21,
    "end_line": 176473,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176525,
    "start_column": 22,
    "end_line": 176525,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176717,
    "start_column": 20,
    "end_line": 176717,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176755,
    "start_column": 22,
    "end_line": 176755,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176764,
    "start_column": 22,
    "end_line": 176764,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183024,
    "start_column": 24,
    "end_line": 183024,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMatchinfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183494,
    "start_column": 20,
    "end_line": 183494,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 184874,
    "start_column": 18,
    "end_line": 184874,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 184929,
    "start_column": 25,
    "end_line": 184929,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 185700,
    "start_column": 20,
    "end_line": 185700,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zBuf+p->nUsed)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 187713,
    "start_column": 44,
    "end_line": 187713,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189934,
    "start_column": 36,
    "end_line": 189934,
    "end_column": 50,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(idxStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 191795,
    "start_column": 14,
    "end_line": 191795,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 191796,
    "start_column": 16,
    "end_line": 191796,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 193667,
    "start_column": 9,
    "end_line": 193667,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 193668,
    "start_column": 11,
    "end_line": 193668,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 195039,
    "start_column": 9,
    "end_line": 195039,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 195095,
    "start_column": 14,
    "end_line": 195095,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 196804,
    "start_column": 11,
    "end_line": 196804,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 196960,
    "start_column": 22,
    "end_line": 196960,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 197748,
    "start_column": 14,
    "end_line": 197748,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMask)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198709,
    "start_column": 11,
    "end_line": 198709,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zRbu)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198794,
    "start_column": 15,
    "end_line": 198794,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 199803,
    "start_column": 30,
    "end_line": 199803,
    "end_column": 45,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTarget)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 199804,
    "start_column": 17,
    "end_line": 199804,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zRbu)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 199985,
    "start_column": 13,
    "end_line": 199985,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zState)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 200014,
    "start_column": 22,
    "end_line": 200014,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zErrmsg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 200856,
    "start_column": 19,
    "end_line": 200856,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 201101,
    "start_column": 11,
    "end_line": 201101,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204781,
    "start_column": 51,
    "end_line": 204781,
    "end_column": 70,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTab->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 206331,
    "start_column": 53,
    "end_line": 206331,
    "end_column": 65,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 206814,
    "start_column": 21,
    "end_line": 206814,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207266,
    "start_column": 23,
    "end_line": 207266,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207714,
    "start_column": 53,
    "end_line": 207714,
    "end_column": 72,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pIter->zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210956,
    "start_column": 24,
    "end_line": 210956,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 211620,
    "start_column": 19,
    "end_line": 211620,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 211814,
    "start_column": 18,
    "end_line": 211814,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212147,
    "start_column": 20,
    "end_line": 212147,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zEnum)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212179,
    "start_column": 19,
    "end_line": 212179,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCmd)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212235,
    "start_column": 26,
    "end_line": 212235,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212365,
    "start_column": 23,
    "end_line": 212365,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 213738,
    "start_column": 45,
    "end_line": 213738,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 214588,
    "start_column": 14,
    "end_line": 214588,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 214675,
    "start_column": 66,
    "end_line": 214675,
    "end_column": 79,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 215168,
    "start_column": 19,
    "end_line": 215168,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTerm->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 215651,
    "start_column": 24,
    "end_line": 215651,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTerm->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 215970,
    "start_column": 32,
    "end_line": 215970,
    "end_column": 54,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(fts5EntryKey(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 216292,
    "start_column": 29,
    "end_line": 216292,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 216342,
    "start_column": 22,
    "end_line": 216342,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 218293,
    "start_column": 54,
    "end_line": 218293,
    "end_column": 67,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 218373,
    "start_column": 55,
    "end_line": 218373,
    "end_column": 68,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 218822,
    "start_column": 19,
    "end_line": 218822,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((const char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 220890,
    "start_column": 44,
    "end_line": 220890,
    "end_column": 57,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 223569,
    "start_column": 23,
    "end_line": 223569,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&idxStr[iIdxStr])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 225551,
    "start_column": 13,
    "end_line": 225551,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 225589,
    "start_column": 11,
    "end_line": 225589,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 226168,
    "start_column": 21,
    "end_line": 226168,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDefn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 226171,
    "start_column": 24,
    "end_line": 226171,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDefn[iOff])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227263,
    "start_column": 16,
    "end_line": 227263,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227640,
    "start_column": 13,
    "end_line": 227640,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227641,
    "start_column": 13,
    "end_line": 227641,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zOutput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 229604,
    "start_column": 21,
    "end_line": 229604,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 229614,
    "start_column": 20,
    "end_line": 229614,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 229615,
    "start_column": 21,
    "end_line": 229615,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 22930,
    "start_column": 13,
    "end_line": 22930,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&sNow, pTm, sizeof(sNow)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 23230,
    "start_column": 5,
    "end_line": 23230,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBufOut, &sqlite3Config.iPrngSeed, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24121,
    "start_column": 7,
    "end_line": 24121,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBt, &aAddr[1], pHdr->nBacktrace*sizeof(void*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24130,
    "start_column": 7,
    "end_line": 24130,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, mem.zTitle, mem.nTitle)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24197,
    "start_column": 5,
    "end_line": 24197,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, pPrior, (int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24303,
    "start_column": 3,
    "end_line": 24303,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(mem.zTitle, zTitle, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24916,
    "start_column": 7,
    "end_line": 24916,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24918,
    "start_column": 7,
    "end_line": 24918,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nBytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25473,
    "start_column": 5,
    "end_line": 25473,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28032,
    "start_column": 5,
    "end_line": 28032,
    "end_column": 23,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28043,
    "start_column": 5,
    "end_line": 28043,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, z, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28687,
    "start_column": 11,
    "end_line": 28687,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &rx, sizeof(u)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 28710,
    "start_column": 13,
    "end_line": 28710,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buf+(prefix!=0),\"Inf\",4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29085,
    "start_column": 42,
    "end_line": 29085,
    "end_column": 74,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, p->zText, p->nChar)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29120,
    "start_column": 5,
    "end_line": 29120,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->zText[p->nChar], z, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29139,
    "start_column": 5,
    "end_line": 29139,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->zText[p->nChar-N], z, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29161,
    "start_column": 5,
    "end_line": 29161,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zText, p->zText, p->nChar+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31252,
    "start_column": 3,
    "end_line": 31252,
    "end_column": 25,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&y,&x,sizeof(y)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31805,
    "start_column": 3,
    "end_line": 31805,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, &zTemp[i+1], sizeof(zTemp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31968,
    "start_column": 5,
    "end_line": 31968,
    "end_column": 24,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, &u, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32009,
    "start_column": 7,
    "end_line": 32009,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pValue, &u, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32449,
    "start_column": 3,
    "end_line": 32449,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32453,
    "start_column": 3,
    "end_line": 32453,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32457,
    "start_column": 3,
    "end_line": 32457,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32466,
    "start_column": 3,
    "end_line": 32466,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&v,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32469,
    "start_column": 3,
    "end_line": 32469,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&x,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32472,
    "start_column": 3,
    "end_line": 32472,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&x,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32746,
    "start_column": 3,
    "end_line": 32746,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32843,
    "start_column": 3,
    "end_line": 32843,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 34523,
    "start_column": 3,
    "end_line": 34523,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zCanonicalName, zAbsoluteName, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 34976,
    "start_column": 5,
    "end_line": 34976,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pInode->fileId, &fileId, sizeof(fileId)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 36909,
    "start_column": 7,
    "end_line": 36909,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &((u8 *)(pFile->pMapRegion))[offset], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 37044,
    "start_column": 7,
    "end_line": 37044,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&((u8 *)(pFile->pMapRegion))[offset], pBuf, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39463,
    "start_column": 5,
    "end_line": 39463,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDb, zPath, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39946,
    "start_column": 15,
    "end_line": 39946,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDel, zIn, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40062,
    "start_column": 7,
    "end_line": 40062,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, &t, sizeof(t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40063,
    "start_column": 7,
    "end_line": 40063,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zBuf[sizeof(t)], &randomnessPid, sizeof(randomnessPid)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40785,
    "start_column": 13,
    "end_line": 40785,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(lockPath, &readBuf[PROXY_PATHINDEX], pathLen)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40835,
    "start_column": 9,
    "end_line": 40835,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&writeBuffer[PROXY_HEADERLEN], myHostID, PROXY_HOSTIDLEN)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40982,
    "start_column": 3,
    "end_line": 40982,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(conchPath, dbPath, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40998,
    "start_column": 3,
    "end_line": 40998,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&conchPath[i+1], \"-conch\", 7)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41058,
    "start_column": 5,
    "end_line": 41058,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(dbPath, (char *)pFile->lockingContext, len + 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43035,
    "start_column": 5,
    "end_line": 43035,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDbgBuf, zBuf, nMin)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43051,
    "start_column": 5,
    "end_line": 43051,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDbgBuf, zBuf, nMin)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 44430,
    "start_column": 7,
    "end_line": 44430,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &((u8 *)(pFile->pMapRegion))[offset], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 44508,
    "start_column": 7,
    "end_line": 44508,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&((u8 *)(pFile->pMapRegion))[offset], pBuf, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 47987,
    "start_column": 23,
    "end_line": 47987,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, p->aData+iOfst, p->sz - iOfst)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 47990,
    "start_column": 3,
    "end_line": 47990,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, p->aData+iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48035,
    "start_column": 3,
    "end_line": 48035,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aData+iOfst, z, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48339,
    "start_column": 18,
    "end_line": 48339,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, p->aData, p->sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48369,
    "start_column": 13,
    "end_line": 48369,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, sqlite3PagerGetData(pPage), szPage)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48682,
    "start_column": 7,
    "end_line": 48682,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiValues, p->u.aHash, sizeof(p->u.aHash)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48722,
    "start_column": 5,
    "end_line": 48722,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiValues, p->u.aHash, sizeof(p->u.aHash)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 53191,
    "start_column": 5,
    "end_line": 53191,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHeader, aJournalMagic, sizeof(aJournalMagic)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 54127,
    "start_column": 5,
    "end_line": 54127,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, (u8*)aData, pPager->pageSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 54138,
    "start_column": 7,
    "end_line": 54138,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, &((u8*)pData)[24],sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 54700,
    "start_column": 7,
    "end_line": 54700,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, dbFileVers, sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 55944,
    "start_column": 9,
    "end_line": 55944,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHeader, aJournalMagic, sizeof(aJournalMagic)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56101,
    "start_column": 9,
    "end_line": 56101,
    "end_column": 75,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, &pData[24], sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56513,
    "start_column": 3,
    "end_line": 56513,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, &pPager, sizeof(pPager)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56519,
    "start_column": 5,
    "end_line": 56519,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56521,
    "start_column": 7,
    "end_line": 56521,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zUri, nUriByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56531,
    "start_column": 5,
    "end_line": 56531,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56532,
    "start_column": 5,
    "end_line": 56532,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, \"-journal\",8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56545,
    "start_column": 5,
    "end_line": 56545,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 56546,
    "start_column": 5,
    "end_line": 56546,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, \"-wal\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 57984,
    "start_column": 11,
    "end_line": 57984,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, pCopy, sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 60134,
    "start_column": 3,
    "end_line": 60134,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)&aHdr[1], (const void*)&pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 60136,
    "start_column": 3,
    "end_line": 60136,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)&aHdr[0], (const void*)&pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 60165,
    "start_column": 5,
    "end_line": 60165,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aFrame[8], pWal->hdr.aSalt, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 60619,
    "start_column": 5,
    "end_line": 60619,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr.aSalt, &aBuf[16], 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 60980,
    "start_column": 3,
    "end_line": 60980,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aLeft, aTmp, sizeof(aTmp[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 61296,
    "start_column": 3,
    "end_line": 61296,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr.aSalt[1], &salt1, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 61645,
    "start_column": 3,
    "end_line": 61645,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&h1, (void *)&aHdr[0], sizeof(h1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 61647,
    "start_column": 3,
    "end_line": 61647,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&h2, (void *)&aHdr[1], sizeof(h2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 61662,
    "start_column": 5,
    "end_line": 61662,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, &h1, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 61872,
    "start_column": 3,
    "end_line": 61872,
    "end_column": 67,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, (void*)walIndexHdr(pWal), sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 62383,
    "start_column": 9,
    "end_line": 62383,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, pSnapshot, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 62657,
    "start_column": 5,
    "end_line": 62657,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, (void *)walIndexHdr(pWal), sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 62961,
    "start_column": 5,
    "end_line": 62961,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aWalHdr[16], pWal->hdr.aSalt, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 63364,
    "start_column": 5,
    "end_line": 63364,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, &pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 65992,
    "start_column": 7,
    "end_line": 65992,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&temp[x], &data[x], (cbrk+size)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 65995,
    "start_column": 5,
    "end_line": 65995,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[cbrk], &src[pc], size)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 66052,
    "start_column": 9,
    "end_line": 66052,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[iAddr], &aData[pc], 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 66890,
    "start_column": 9,
    "end_line": 66890,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFullPathname, zFilename, nFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 67782,
    "start_column": 3,
    "end_line": 67782,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(data, zMagicHeader, sizeof(zMagicHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 69228,
    "start_column": 5,
    "end_line": 69228,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pBuf, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 69231,
    "start_column": 5,
    "end_line": 69231,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, pPayload, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 69413,
    "start_column": 11,
    "end_line": 69413,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSave, aWrite, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 69417,
    "start_column": 11,
    "end_line": 69417,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aWrite, aSave, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70498,
    "start_column": 9,
    "end_line": 70498,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPage1->aData[32], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70522,
    "start_column": 13,
    "end_line": 70522,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPage1->aData[32], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70528,
    "start_column": 13,
    "end_line": 70528,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPrevTrunk->aData[0], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70551,
    "start_column": 11,
    "end_line": 70551,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNewTrunk->aData[0], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70553,
    "start_column": 11,
    "end_line": 70553,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNewTrunk->aData[8], &pTrunk->aData[12], (k-1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70618,
    "start_column": 13,
    "end_line": 70618,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[8+closest*4], &aData[4+k*4], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 70996,
    "start_column": 5,
    "end_line": 70996,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, nSrc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71054,
    "start_column": 7,
    "end_line": 71054,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71057,
    "start_column": 7,
    "end_line": 71057,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71215,
    "start_column": 7,
    "end_line": 71215,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTemp, pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71259,
    "start_column": 7,
    "end_line": 71259,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[idx+4], pCell+4, sz-4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71262,
    "start_column": 7,
    "end_line": 71262,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[idx], pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71444,
    "start_column": 3,
    "end_line": 71444,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pTmp[j], &aData[j], usableSize - j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71467,
    "start_column": 5,
    "end_line": 71467,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71654,
    "start_column": 3,
    "end_line": 71654,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTmp, aData, pPg->pBt->usableSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71935,
    "start_column": 5,
    "end_line": 71935,
    "end_column": 62,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aTo[iData], &aFrom[iData], pBt->usableSize-iData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71936,
    "start_column": 5,
    "end_line": 71936,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aTo[iToHdr], &aFrom[iFromHdr], pFrom->cellOffset + 2*pFrom->nCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72134,
    "start_column": 11,
    "end_line": 72134,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aOvflSpace[iOff], apDiv[i], szNew[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72255,
    "start_column": 7,
    "end_line": 72255,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTemp, apDiv[i], sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72264,
    "start_column": 9,
    "end_line": 72264,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(b.apCell[b.nCell], &pOld->aData[8], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72515,
    "start_column": 5,
    "end_line": 72515,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&apNew[nNew-1]->aData[8], &pOld->aData[8], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72590,
    "start_column": 7,
    "end_line": 72590,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->aData[8], pCell, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72819,
    "start_column": 3,
    "end_line": 72820,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pChild->aiOvfl, pRoot->aiOvfl,\n         pRoot->nOverflow*sizeof(pRoot->aiOvfl[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 72821,
    "start_column": 3,
    "end_line": 72822,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pChild->apOvfl, pRoot->apOvfl,\n         pRoot->nOverflow*sizeof(pRoot->apOvfl[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 73290,
    "start_column": 7,
    "end_line": 73290,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(newCell, oldCell, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 73314,
    "start_column": 7,
    "end_line": 73314,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(oldCell, newCell, szNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 73370,
    "start_column": 11,
    "end_line": 73370,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->pKey, pX->pKey, pX->nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 75332,
    "start_column": 7,
    "end_line": 75332,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 75944,
    "start_column": 5,
    "end_line": 75944,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, (char*)&p->u, (p->flags&MEM_Int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76097,
    "start_column": 5,
    "end_line": 76097,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem->zMalloc, pMem->z, pMem->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76287,
    "start_column": 3,
    "end_line": 76287,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem, &t, sizeof(t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76837,
    "start_column": 3,
    "end_line": 76837,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76854,
    "start_column": 3,
    "end_line": 76854,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76878,
    "start_column": 3,
    "end_line": 76878,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, sizeof(Mem)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 76952,
    "start_column": 5,
    "end_line": 76952,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem->z, z, nAlloc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 77830,
    "start_column": 7,
    "end_line": 77830,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStr->z, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 77881,
    "start_column": 3,
    "end_line": 77881,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pB->aCounter, pA->aCounter, sizeof(pB->aCounter)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 78137,
    "start_column": 16,
    "end_line": 78137,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p4copy, zP4, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81548,
    "start_column": 7,
    "end_line": 81548,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&v, &pMem->u.r, sizeof(v)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81567,
    "start_column": 17,
    "end_line": 81567,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buf, pMem->z, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81624,
    "start_column": 5,
    "end_line": 81624,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pMem->u.r, &x, sizeof(x)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 83325,
    "start_column": 3,
    "end_line": 83325,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, pOrig, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86651,
    "start_column": 3,
    "end_line": 86651,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pVar, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86911,
    "start_column": 5,
    "end_line": 86911,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->z, pIn2->z, pIn2->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86915,
    "start_column": 3,
    "end_line": 86915,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pOut->z[pIn2->n], pIn1->z, pIn1->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 87139,
    "start_column": 7,
    "end_line": 87139,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&uA, &iA, sizeof(uA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 87147,
    "start_column": 7,
    "end_line": 87147,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iA, &uA, sizeof(iA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 88143,
    "start_column": 7,
    "end_line": 88143,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDest->z, zData, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 88617,
    "start_column": 9,
    "end_line": 88617,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94434,
    "start_column": 5,
    "end_line": 94434,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aAlloc, &p->aBuffer[iBuf], nAvail)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94450,
    "start_column": 7,
    "end_line": 94450,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aAlloc[nByte - nRem], aNext, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94858,
    "start_column": 5,
    "end_line": 94858,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pKeyInfo, pCsr->pKeyInfo, szKeyInfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 95362,
    "start_column": 5,
    "end_line": 95362,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuffer[p->iBufEnd], &pData[nData-nRem], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 95746,
    "start_column": 3,
    "end_line": 95746,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(SRVAL(pNew), pVal->z, pVal->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 96589,
    "start_column": 3,
    "end_line": 96589,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->z, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 97194,
    "start_column": 5,
    "end_line": 97194,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, (u8*)pChunk->zChunk + iChunkOffset, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 97292,
    "start_column": 7,
    "end_line": 97292,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((u8*)p->pFirst->zChunk, zBuf, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 97320,
    "start_column": 9,
    "end_line": 97320,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((u8*)p->endpoint.pChunk->zChunk + iChunkOffset, zWrite, iSpace)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 97855,
    "start_column": 5,
    "end_line": 97855,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pExpr, pDup, sizeof(*pExpr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 100542,
    "start_column": 25,
    "end_line": 100542,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->u.zToken, pToken->z, pToken->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 101023,
    "start_column": 7,
    "end_line": 101023,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAlloc, p, nNewSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 101026,
    "start_column": 7,
    "end_line": 101026,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAlloc, p, nSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 101044,
    "start_column": 7,
    "end_line": 101044,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zToken, p->u.zToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 106285,
    "start_column": 3,
    "end_line": 106285,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aCol, pTab->aCol, sizeof(Column)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 106919,
    "start_column": 5,
    "end_line": 106919,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zSql, nSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 106942,
    "start_column": 7,
    "end_line": 106942,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOff], zReplace, nReplace)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 107873,
    "start_column": 5,
    "end_line": 107873,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->u.aRowid, pData, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 107900,
    "start_column": 3,
    "end_line": 107900,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anEq, pFrom->anEq, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 107901,
    "start_column": 3,
    "end_line": 107901,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anLt, pFrom->anLt, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 107902,
    "start_column": 3,
    "end_line": 107902,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anDLt, pFrom->anDLt, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 108591,
    "start_column": 5,
    "end_line": 108591,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStat1->zName, \"sqlite_stat1\", 13)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 109376,
    "start_column": 7,
    "end_line": 109376,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSample->p, sqlite3_column_blob(pStmt, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 109638,
    "start_column": 7,
    "end_line": 109638,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aNew, db->aDb, sizeof(db->aDb[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 110674,
    "start_column": 3,
    "end_line": 110674,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(saveBuf, PARSE_TAIL(pParse), PARSE_TAIL_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 110679,
    "start_column": 3,
    "end_line": 110679,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(PARSE_TAIL(pParse), saveBuf, PARSE_TAIL_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 110960,
    "start_column": 5,
    "end_line": 110960,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(db->aDbStatic, db->aDb, 2*sizeof(db->aDb[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 111661,
    "start_column": 3,
    "end_line": 111661,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pName->z, pName->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 111698,
    "start_column": 5,
    "end_line": 111698,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zType, pType->z, pType->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 112263,
    "start_column": 5,
    "end_line": 112263,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zStmt[k], zType, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 112283,
    "start_column": 3,
    "end_line": 112283,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->azColl, sizeof(char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 112286,
    "start_column": 3,
    "end_line": 112286,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->aiColumn, sizeof(i16)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 112289,
    "start_column": 3,
    "end_line": 112289,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->aSortOrder, pIdx->nColumn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 113611,
    "start_column": 3,
    "end_line": 113611,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pTo->z, pTo->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 113645,
    "start_column": 7,
    "end_line": 113645,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pToCol->a[i].zEName, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 114110,
    "start_column": 3,
    "end_line": 114110,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pIndex->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 114189,
    "start_column": 7,
    "end_line": 114189,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, zColl, nColl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 114499,
    "start_column": 3,
    "end_line": 114499,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a[1], aVal, nCopy*sizeof(LogEst)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 114976,
    "start_column": 7,
    "end_line": 114976,
    "end_column": 68,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p1->a[1], p2->a, p2->nSrc*sizeof(struct SrcList_item)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 115602,
    "start_column": 7,
    "end_line": 115602,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColl, pColl2, sizeof(CollSeq)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 115668,
    "start_column": 7,
    "end_line": 115668,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColl[0].zName, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 116003,
    "start_column": 5,
    "end_line": 116003,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)&pBest[1], zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 117943,
    "start_column": 7,
    "end_line": 117943,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&backupInfo, pInfo, sizeof(backupInfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 118344,
    "start_column": 7,
    "end_line": 118344,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[j], zRep, nRep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 118350,
    "start_column": 3,
    "end_line": 118350,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[j], &zStr[i], nStr-i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 120429,
    "start_column": 7,
    "end_line": 120429,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)pStep->zTarget, zFrom, nFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 124829,
    "start_column": 5,
    "end_line": 124829,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAltEntry, \"sqlite3_\", 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 124838,
    "start_column": 5,
    "end_line": 124838,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAltEntry+iEntry, \"_init\", 6)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 124874,
    "start_column": 5,
    "end_line": 124874,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aHandle, db->aExtension, sizeof(handle)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 131398,
    "start_column": 9,
    "end_line": 131398,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCol->zName[n+1], zType, m+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 136282,
    "start_column": 9,
    "end_line": 136282,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, argv[i], n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 136813,
    "start_column": 5,
    "end_line": 136813,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pName->z, pName->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 139637,
    "start_column": 5,
    "end_line": 139637,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 140734,
    "start_column": 3,
    "end_line": 140734,
    "end_column": 68,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)&pNew[1], pDef->zName, sqlite3Strlen30(pDef->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 142652,
    "start_column": 3,
    "end_line": 142652,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->orig, pExpr, sizeof(*pExpr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 143596,
    "start_column": 7,
    "end_line": 143596,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOrTab->a, pTabItem, sizeof(*pTabItem)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 143599,
    "start_column": 9,
    "end_line": 143599,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pOrTab->a[k], &origSrc[pLevel[k].iFrom], sizeof(pOrTab->a[k])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 144071,
    "start_column": 5,
    "end_line": 144071,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWC->a, pOld, sizeof(pWC->a[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 145754,
    "start_column": 3,
    "end_line": 145754,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiCur, pWInfo->aiCurOnePass, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 145778,
    "start_column": 3,
    "end_line": 145778,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDest->a, pSrc->a, pDest->n*sizeof(pDest->a[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 147363,
    "start_column": 5,
    "end_line": 147363,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zType, \"....\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 147508,
    "start_column": 3,
    "end_line": 147508,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(paNew, p->aLTerm, sizeof(p->aLTerm[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 147524,
    "start_column": 3,
    "end_line": 147524,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, WHERE_LOOP_XFER_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 147525,
    "start_column": 3,
    "end_line": 147525,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->aLTerm, pFrom->aLTerm, pTo->nLTerm*sizeof(pTo->aLTerm[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 149945,
    "start_column": 9,
    "end_line": 149945,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->aLoop, pFrom->aLoop, sizeof(WhereLoop*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 151153,
    "start_column": 5,
    "end_line": 151153,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->pExpr, &p->orig, sizeof(p->orig)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 152230,
    "start_column": 9,
    "end_line": 152230,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab, pTab2, sizeof(Table)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 154367,
    "start_column": 7,
    "end_line": 154367,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->u.zToken, t.z, t.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 161350,
    "start_column": 5,
    "end_line": 161350,
    "end_column": 22,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&y, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 164016,
    "start_column": 7,
    "end_line": 164016,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFile, zUri, nUri)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 164147,
    "start_column": 3,
    "end_line": 164147,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(db->aLimit, aHardLimit, sizeof(db->aLimit)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165234,
    "start_column": 3,
    "end_line": 165234,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 165867,
    "start_column": 11,
    "end_line": 165867,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, aArg, nArg*sizeof(void *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168020,
    "start_column": 9,
    "end_line": 168020,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, zCol, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168317,
    "start_column": 3,
    "end_line": 168317,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aIndex, aIndex, sizeof(struct Fts3Index)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168327,
    "start_column": 3,
    "end_line": 168327,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168330,
    "start_column": 3,
    "end_line": 168330,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168339,
    "start_column": 7,
    "end_line": 168339,
    "end_column": 25,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168831,
    "start_column": 5,
    "end_line": 168831,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zBuffer[nPrefix], zCsr, nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 168989,
    "start_column": 5,
    "end_line": 168989,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, *ppPoslist, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 169027,
    "start_column": 5,
    "end_line": 169027,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, *ppPoslist, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 169769,
    "start_column": 7,
    "end_line": 169769,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTS->aaOutput[0], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 171609,
    "start_column": 9,
    "end_line": 171609,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aDoclist, a[p->nToken-1].pList, nByte+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173088,
    "start_column": 3,
    "end_line": 173088,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zDb, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173089,
    "start_column": 3,
    "end_line": 173089,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zName, zFts3, nFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173747,
    "start_column": 9,
    "end_line": 173747,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->pPhrase->aToken[0].z, zToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173862,
    "start_column": 9,
    "end_line": 173862,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zTemp[nTemp], zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 173890,
    "start_column": 7,
    "end_line": 173890,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, zTemp, nTemp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 175191,
    "start_column": 5,
    "end_line": 175191,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)new_elem->pKey, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176269,
    "start_column": 7,
    "end_line": 176269,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void *)pp, sqlite3_column_blob(pStmt, 0)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176766,
    "start_column": 9,
    "end_line": 176766,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSpace, argv[i], n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 176987,
    "start_column": 21,
    "end_line": 176987,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zInput, zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 178434,
    "start_column": 9,
    "end_line": 178434,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCopy, pList->aData, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 178499,
    "start_column": 3,
    "end_line": 178499,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pReader->zTerm[nPrefix], pNext, nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 178737,
    "start_column": 17,
    "end_line": 178737,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pReader->aNode, zRoot, nRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 178861,
    "start_column": 7,
    "end_line": 178861,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pReader->ppNextElem, aElem, nElem*sizeof(Fts3HashElem *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179159,
    "start_column": 7,
    "end_line": 179159,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pTree->aData[nData], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179173,
    "start_column": 9,
    "end_line": 179173,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTree->zTerm, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179430,
    "start_column": 3,
    "end_line": 179430,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWriter->aData[nData], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179434,
    "start_column": 3,
    "end_line": 179434,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWriter->aData[nData], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179454,
    "start_column": 5,
    "end_line": 179454,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->zTerm, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 179763,
    "start_column": 3,
    "end_line": 179763,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMsr->aBuffer, pList, nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 180114,
    "start_column": 15,
    "end_line": 180114,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCsr->aBuffer[nDoclist], pList, nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 180879,
    "start_column": 7,
    "end_line": 180879,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->term.a[nPrefix], &p->aNode[p->iOff], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 180986,
    "start_column": 9,
    "end_line": 180986,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pBlk->a[pBlk->n], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 180989,
    "start_column": 9,
    "end_line": 180989,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->key.a, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181063,
    "start_column": 3,
    "end_line": 181063,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPrev->a, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181070,
    "start_column": 3,
    "end_line": 181070,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNode->a[pNode->n], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181075,
    "start_column": 5,
    "end_line": 181075,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNode->a[pNode->n], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181416,
    "start_column": 9,
    "end_line": 181416,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->block.a, aRoot, nRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181430,
    "start_column": 13,
    "end_line": 181430,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->key.a, reader.term.a, reader.term.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181442,
    "start_column": 17,
    "end_line": 181442,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->block.a, aBlock, nBlock)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 181913,
    "start_column": 11,
    "end_line": 181913,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pHint->a, aHint, nHint)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 182641,
    "start_column": 3,
    "end_line": 182641,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, &p->pList->aData[nSkip], *pnData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183034,
    "start_column": 5,
    "end_line": 183034,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zMatchinfo, zMatchinfo, nStr+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183075,
    "start_column": 24,
    "end_line": 183075,
    "end_column": 76,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, &p->aMatchinfo[1], p->nElem*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183085,
    "start_column": 3,
    "end_line": 183085,
    "end_column": 77,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aMatchinfo[2+p->nElem], &p->aMatchinfo[1], p->nElem*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 183513,
    "start_column": 3,
    "end_line": 183513,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pStr->z[pStr->n], zAppend, nAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 185668,
    "start_column": 5,
    "end_line": 185668,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, p->zBuf, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 185688,
    "start_column": 3,
    "end_line": 185688,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zBuf+p->nUsed, zIn, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 186507,
    "start_column": 3,
    "end_line": 186507,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)p->zJson, zJson, nJson+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 187842,
    "start_column": 3,
    "end_line": 187842,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zJson, z, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 187864,
    "start_column": 7,
    "end_line": 187864,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zRoot, zRoot, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188558,
    "start_column": 3,
    "end_line": 188558,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188562,
    "start_column": 3,
    "end_line": 188562,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188566,
    "start_column": 3,
    "end_line": 188566,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188598,
    "start_column": 3,
    "end_line": 188598,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188601,
    "start_column": 3,
    "end_line": 188601,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188604,
    "start_column": 3,
    "end_line": 188604,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188617,
    "start_column": 3,
    "end_line": 188617,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188620,
    "start_column": 3,
    "end_line": 188620,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188622,
    "start_column": 3,
    "end_line": 188622,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189224,
    "start_column": 5,
    "end_line": 189224,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&c.u,a,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189232,
    "start_column": 5,
    "end_line": 189232,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&c.u,a,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189856,
    "start_column": 3,
    "end_line": 189856,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBlob, pSrc, pSrc->iSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190199,
    "start_column": 3,
    "end_line": 190199,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&cell, p, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190383,
    "start_column": 5,
    "end_line": 190383,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSpare, aLeft, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190452,
    "start_column": 5,
    "end_line": 190452,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSpare, aLeft, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190543,
    "start_column": 7,
    "end_line": 190543,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&left, &aCell[aaSorted[ii][0]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190544,
    "start_column": 7,
    "end_line": 190544,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&right, &aCell[aaSorted[ii][nCell-1]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190573,
    "start_column": 3,
    "end_line": 190573,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBboxLeft, &aCell[aaSorted[iBestDim][0]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190574,
    "start_column": 3,
    "end_line": 190574,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBboxRight, &aCell[aaSorted[iBestDim][iBestSplit]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190641,
    "start_column": 3,
    "end_line": 190641,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aCell[nCell], pCell, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 190936,
    "start_column": 7,
    "end_line": 190936,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aCell[ii], pCell, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 191807,
    "start_column": 3,
    "end_line": 191807,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zDb, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 191808,
    "start_column": 3,
    "end_line": 191808,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zName, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 192081,
    "start_column": 9,
    "end_line": 192081,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, pNode, nNode)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 192705,
    "start_column": 7,
    "end_line": 192705,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->a, s.a, s.nVertex*2*sizeof(GeoCoord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 192753,
    "start_column": 9,
    "end_line": 192753,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->hdr, a, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 193164,
    "start_column": 7,
    "end_line": 193164,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBBox->a, a, sizeof(RtreeCoord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 193681,
    "start_column": 3,
    "end_line": 193681,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zDb, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 193682,
    "start_column": 3,
    "end_line": 193682,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zName, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 195049,
    "start_column": 5,
    "end_line": 195049,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zLocale, argv[0], n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 196451,
    "start_column": 9,
    "end_line": 196451,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, &zSrc[ofst], cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 196466,
    "start_column": 9,
    "end_line": 196466,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zDelta, cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 196963,
    "start_column": 9,
    "end_line": 196963,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zStr, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 197117,
    "start_column": 5,
    "end_line": 197117,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pIter->abIndexed, pIter->abTblPk, sizeof(u8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198469,
    "start_column": 5,
    "end_line": 198469,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pUp->zMask, zMask, pIter->nTblCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198627,
    "start_column": 5,
    "end_line": 198627,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zStateDb, \"stat\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198629,
    "start_column": 5,
    "end_line": 198629,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zStateDb, \"main\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 199821,
    "start_column": 9,
    "end_line": 199821,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zTarget, zTarget, nTarget+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 199825,
    "start_column": 7,
    "end_line": 199825,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zRbu, zRbu, nRbu+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 200859,
    "start_column": 13,
    "end_line": 200859,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zBase, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 201114,
    "start_column": 7,
    "end_line": 201114,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->base, &vfs_template, sizeof(sqlite3_vfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 201119,
    "start_column": 7,
    "end_line": 201119,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSpace, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 202367,
    "start_column": 7,
    "end_line": 202369,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(sqlite3PagerGetData(pDbPage),\n             sqlite3_value_blob(argv[3]),\n             szPage)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 202828,
    "start_column": 13,
    "end_line": 202828,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&i, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 202852,
    "start_column": 19,
    "end_line": 202852,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nVarint + 1], z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 202958,
    "start_column": 11,
    "end_line": 202958,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iVal, &rVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203114,
    "start_column": 7,
    "end_line": 203114,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203117,
    "start_column": 7,
    "end_line": 203117,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203212,
    "start_column": 9,
    "end_line": 203212,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, aOld, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203240,
    "start_column": 7,
    "end_line": 203240,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, aNew, nNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203302,
    "start_column": 11,
    "end_line": 203302,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203461,
    "start_column": 7,
    "end_line": 203461,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAlloc, zThis, nThis+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 203471,
    "start_column": 7,
    "end_line": 203471,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAlloc, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204125,
    "start_column": 3,
    "end_line": 204125,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zDb, zDb, nDb+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204250,
    "start_column": 9,
    "end_line": 204250,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204350,
    "start_column": 5,
    "end_line": 204350,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuf[p->nBuf], aBlob, nBlob)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204370,
    "start_column": 5,
    "end_line": 204370,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuf[p->nBuf], zStr, nStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204443,
    "start_column": 9,
    "end_line": 204443,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&i, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204526,
    "start_column": 13,
    "end_line": 204526,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&dVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 204732,
    "start_column": 11,
    "end_line": 204732,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 205176,
    "start_column": 3,
    "end_line": 205176,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCopy, aData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 205253,
    "start_column": 11,
    "end_line": 205253,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&d, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 205388,
    "start_column": 5,
    "end_line": 205388,
    "end_column": 67,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->tblhdr.aBuf[iPK], &p->in.aData[p->in.iNext], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207079,
    "start_column": 7,
    "end_line": 207079,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aRecord, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207091,
    "start_column": 11,
    "end_line": 207091,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207123,
    "start_column": 13,
    "end_line": 207123,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207126,
    "start_column": 13,
    "end_line": 207126,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207189,
    "start_column": 11,
    "end_line": 207189,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCsr, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207214,
    "start_column": 11,
    "end_line": 207214,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCsr, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207284,
    "start_column": 9,
    "end_line": 207284,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->abPK, abPK, nCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207286,
    "start_column": 9,
    "end_line": 207286,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->zName, zNew, nNew+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207577,
    "start_column": 9,
    "end_line": 207577,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, nn2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207580,
    "start_column": 9,
    "end_line": 207580,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, nn1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207633,
    "start_column": 9,
    "end_line": 207633,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207637,
    "start_column": 9,
    "end_line": 207637,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 207651,
    "start_column": 11,
    "end_line": 207651,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 211605,
    "start_column": 5,
    "end_line": 211605,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pBuf->p[pBuf->n], pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 211818,
    "start_column": 7,
    "end_line": 211818,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, pIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 211913,
    "start_column": 9,
    "end_line": 211913,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->pTerm, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212253,
    "start_column": 13,
    "end_line": 212253,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSpace, p2, p-p2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212375,
    "start_column": 5,
    "end_line": 212375,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212719,
    "start_column": 19,
    "end_line": 212719,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRank, pRank, p-pRank)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 212739,
    "start_column": 27,
    "end_line": 212739,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRankArgs, pArgs, p-pArgs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 213301,
    "start_column": 9,
    "end_line": 213301,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aNew, aIter, sizeof(Fts5PoslistReader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 214504,
    "start_column": 7,
    "end_line": 214504,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSyn->zTerm, pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 214662,
    "start_column": 9,
    "end_line": 214662,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColset, pColsetOrig, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 214879,
    "start_column": 7,
    "end_line": 214879,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, pOrig, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 215007,
    "start_column": 5,
    "end_line": 215007,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->apChild[p->nChild], pSub->apChild, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 216082,
    "start_column": 5,
    "end_line": 216082,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zKey[1], pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 216302,
    "start_column": 7,
    "end_line": 216302,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pRet[nPre], &((u8*)p)[nHashPre], nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 217454,
    "start_column": 3,
    "end_line": 217454,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&(pBuf)->p[(pBuf)->n], pBlob, nBlob)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 217552,
    "start_column": 9,
    "end_line": 217552,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->aSeg, &pLvl->aSeg[is], sizeof(Fts5StructureSegment)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 221518,
    "start_column": 23,
    "end_line": 221518,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData->p, doclist.p, doclist.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 221765,
    "start_column": 18,
    "end_line": 221765,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&buf.p[1], pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 222734,
    "start_column": 13,
    "end_line": 222734,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, aBlob, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 225557,
    "start_column": 7,
    "end_line": 225557,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAux->zFunc, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 225595,
    "start_column": 5,
    "end_line": 225595,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227089,
    "start_column": 7,
    "end_line": 227089,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aTokenChar, aAsciiTokenChar, sizeof(aAsciiTokenChar)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227508,
    "start_column": 9,
    "end_line": 227508,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aFold, p->aFold, nFold)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227649,
    "start_column": 7,
    "end_line": 227649,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nStem], p->zOutput, p->nOutput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227888,
    "start_column": 9,
    "end_line": 227888,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227896,
    "start_column": 9,
    "end_line": 227896,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227904,
    "start_column": 9,
    "end_line": 227904,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227923,
    "start_column": 11,
    "end_line": 227923,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227928,
    "start_column": 11,
    "end_line": 227928,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-6], \"tion\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227937,
    "start_column": 11,
    "end_line": 227937,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ence\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227942,
    "start_column": 11,
    "end_line": 227942,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ance\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227951,
    "start_column": 11,
    "end_line": 227951,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227960,
    "start_column": 11,
    "end_line": 227960,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"log\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227969,
    "start_column": 11,
    "end_line": 227969,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227974,
    "start_column": 11,
    "end_line": 227974,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227979,
    "start_column": 11,
    "end_line": 227979,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ent\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227984,
    "start_column": 11,
    "end_line": 227984,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"e\", 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227989,
    "start_column": 11,
    "end_line": 227989,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ous\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227998,
    "start_column": 11,
    "end_line": 227998,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228003,
    "start_column": 11,
    "end_line": 228003,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228008,
    "start_column": 11,
    "end_line": 228008,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228017,
    "start_column": 11,
    "end_line": 228017,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228022,
    "start_column": 11,
    "end_line": 228022,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ive\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228027,
    "start_column": 11,
    "end_line": 228027,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ful\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228032,
    "start_column": 11,
    "end_line": 228032,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ous\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228041,
    "start_column": 11,
    "end_line": 228041,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228046,
    "start_column": 11,
    "end_line": 228046,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ive\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228051,
    "start_column": 11,
    "end_line": 228051,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-6], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228070,
    "start_column": 11,
    "end_line": 228070,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228087,
    "start_column": 11,
    "end_line": 228087,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228092,
    "start_column": 11,
    "end_line": 228092,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228117,
    "start_column": 11,
    "end_line": 228117,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228136,
    "start_column": 11,
    "end_line": 228136,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"ee\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 228199,
    "start_column": 3,
    "end_line": 228199,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aBuf, pToken, nBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 229632,
    "start_column": 7,
    "end_line": 229632,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zFts5Tbl, zTab, nTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 229633,
    "start_column": 7,
    "end_line": 229633,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zFts5Db, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 230059,
    "start_column": 9,
    "end_line": 230059,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zLeTerm, zCopy, pCsr->nLeTerm+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 23628,
    "start_column": 38,
    "end_line": 23628,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(x)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24101,
    "start_column": 7,
    "end_line": 24101,
    "end_column": 24,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(totalSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156184,
    "start_column": 12,
    "end_line": 156184,
    "end_column": 42,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(newSize*sizeof(pNew[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 209804,
    "start_column": 12,
    "end_line": 209804,
    "end_column": 42,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(newSize*sizeof(pNew[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 19386,
    "start_column": 38,
    "end_line": 19386,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "alloca"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 19387,
    "start_column": 45,
    "end_line": 19387,
    "end_column": 51,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "alloca"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 21774,
    "start_column": 20,
    "end_line": 21774,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 22235,
    "start_column": 8,
    "end_line": 22235,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 22386,
    "start_column": 31,
    "end_line": 22386,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 22929,
    "start_column": 9,
    "end_line": 22929,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "gmtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24327,
    "start_column": 9,
    "end_line": 24327,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24329,
    "start_column": 5,
    "end_line": 24329,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24336,
    "start_column": 5,
    "end_line": 24336,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24343,
    "start_column": 7,
    "end_line": 24343,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24346,
    "start_column": 3,
    "end_line": 24346,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24349,
    "start_column": 7,
    "end_line": 24349,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24354,
    "start_column": 5,
    "end_line": 24354,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24974,
    "start_column": 11,
    "end_line": 24974,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24976,
    "start_column": 7,
    "end_line": 24976,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24982,
    "start_column": 3,
    "end_line": 24982,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24986,
    "start_column": 7,
    "end_line": 24986,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24991,
    "start_column": 7,
    "end_line": 24991,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 24996,
    "start_column": 7,
    "end_line": 24996,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25001,
    "start_column": 7,
    "end_line": 25001,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25003,
    "start_column": 7,
    "end_line": 25003,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25009,
    "start_column": 5,
    "end_line": 25009,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25011,
    "start_column": 7,
    "end_line": 25011,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25014,
    "start_column": 5,
    "end_line": 25014,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25018,
    "start_column": 5,
    "end_line": 25018,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25020,
    "start_column": 7,
    "end_line": 25020,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25023,
    "start_column": 5,
    "end_line": 25023,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25025,
    "start_column": 3,
    "end_line": 25025,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25026,
    "start_column": 3,
    "end_line": 25026,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25027,
    "start_column": 3,
    "end_line": 25027,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25594,
    "start_column": 11,
    "end_line": 25594,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25596,
    "start_column": 7,
    "end_line": 25596,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25605,
    "start_column": 5,
    "end_line": 25605,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25607,
    "start_column": 3,
    "end_line": 25607,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25608,
    "start_column": 3,
    "end_line": 25608,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25609,
    "start_column": 3,
    "end_line": 25609,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25610,
    "start_column": 3,
    "end_line": 25610,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25611,
    "start_column": 3,
    "end_line": 25611,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25612,
    "start_column": 3,
    "end_line": 25612,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25613,
    "start_column": 3,
    "end_line": 25613,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 25614,
    "start_column": 3,
    "end_line": 25614,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 26517,
    "start_column": 5,
    "end_line": 26517,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 26566,
    "start_column": 5,
    "end_line": 26566,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 26596,
    "start_column": 5,
    "end_line": 26596,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29435,
    "start_column": 3,
    "end_line": 29435,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 29527,
    "start_column": 3,
    "end_line": 29527,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 30205,
    "start_column": 11,
    "end_line": 30205,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 30208,
    "start_column": 11,
    "end_line": 30208,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 30210,
    "start_column": 9,
    "end_line": 30210,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 30850,
    "start_column": 5,
    "end_line": 30850,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31008,
    "start_column": 5,
    "end_line": 31008,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 31045,
    "start_column": 7,
    "end_line": 31045,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 32678,
    "start_column": 39,
    "end_line": 32678,
    "end_column": 46,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 34809,
    "start_column": 10,
    "end_line": 34809,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 36370,
    "start_column": 28,
    "end_line": 36370,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39267,
    "start_column": 32,
    "end_line": 39267,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39268,
    "start_column": 32,
    "end_line": 39268,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39733,
    "start_column": 22,
    "end_line": 39733,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39739,
    "start_column": 18,
    "end_line": 39739,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 39945,
    "start_column": 15,
    "end_line": 39945,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40424,
    "start_column": 27,
    "end_line": 40424,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40622,
    "start_column": 3,
    "end_line": 40622,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40633,
    "start_column": 5,
    "end_line": 40633,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40864,
    "start_column": 15,
    "end_line": 40864,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40865,
    "start_column": 36,
    "end_line": 40865,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40867,
    "start_column": 15,
    "end_line": 40867,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40871,
    "start_column": 13,
    "end_line": 40871,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 40872,
    "start_column": 32,
    "end_line": 40872,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43052,
    "start_column": 5,
    "end_line": 43052,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43054,
    "start_column": 5,
    "end_line": 43054,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43882,
    "start_column": 20,
    "end_line": 43882,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 46468,
    "start_column": 34,
    "end_line": 46468,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 46469,
    "start_column": 34,
    "end_line": 46469,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 46470,
    "start_column": 34,
    "end_line": 46470,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 46471,
    "start_column": 34,
    "end_line": 46471,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 46472,
    "start_column": 34,
    "end_line": 46472,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48963,
    "start_column": 8,
    "end_line": 48963,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48965,
    "start_column": 28,
    "end_line": 48965,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 48966,
    "start_column": 8,
    "end_line": 48966,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 51825,
    "start_column": 28,
    "end_line": 51825,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 64513,
    "start_column": 42,
    "end_line": 64513,
    "end_column": 48,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 65944,
    "start_column": 11,
    "end_line": 65944,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 65952,
    "start_column": 9,
    "end_line": 65952,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71170,
    "start_column": 5,
    "end_line": 71170,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71265,
    "start_column": 5,
    "end_line": 71265,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71555,
    "start_column": 5,
    "end_line": 71555,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71662,
    "start_column": 5,
    "end_line": 71662,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71680,
    "start_column": 5,
    "end_line": 71680,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 71694,
    "start_column": 9,
    "end_line": 71694,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 73026,
    "start_column": 7,
    "end_line": 73026,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 78310,
    "start_column": 5,
    "end_line": 78310,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 79589,
    "start_column": 3,
    "end_line": 79589,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 79947,
    "start_column": 11,
    "end_line": 79947,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81081,
    "start_column": 17,
    "end_line": 81081,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81083,
    "start_column": 7,
    "end_line": 81083,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81085,
    "start_column": 9,
    "end_line": 81085,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81087,
    "start_column": 7,
    "end_line": 81087,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81090,
    "start_column": 9,
    "end_line": 81090,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81092,
    "start_column": 26,
    "end_line": 81092,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81096,
    "start_column": 24,
    "end_line": 81096,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 81105,
    "start_column": 9,
    "end_line": 81105,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85784,
    "start_column": 5,
    "end_line": 85784,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85786,
    "start_column": 5,
    "end_line": 85786,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85788,
    "start_column": 5,
    "end_line": 85788,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85790,
    "start_column": 5,
    "end_line": 85790,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85792,
    "start_column": 5,
    "end_line": 85792,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85795,
    "start_column": 5,
    "end_line": 85795,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85798,
    "start_column": 5,
    "end_line": 85798,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85804,
    "start_column": 5,
    "end_line": 85804,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85806,
    "start_column": 32,
    "end_line": 85806,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85809,
    "start_column": 3,
    "end_line": 85809,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85812,
    "start_column": 5,
    "end_line": 85812,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85814,
    "start_column": 3,
    "end_line": 85814,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86050,
    "start_column": 7,
    "end_line": 86050,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86058,
    "start_column": 22,
    "end_line": 86058,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86059,
    "start_column": 11,
    "end_line": 86059,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86064,
    "start_column": 44,
    "end_line": 86064,
    "end_column": 50,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 93286,
    "start_column": 19,
    "end_line": 93286,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94954,
    "start_column": 3,
    "end_line": 94954,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94959,
    "start_column": 3,
    "end_line": 94959,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94968,
    "start_column": 3,
    "end_line": 94968,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 94978,
    "start_column": 5,
    "end_line": 94978,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 96491,
    "start_column": 26,
    "end_line": 96491,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 106936,
    "start_column": 9,
    "end_line": 106936,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 108154,
    "start_column": 5,
    "end_line": 108154,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 118823,
    "start_column": 7,
    "end_line": 118823,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 119022,
    "start_column": 14,
    "end_line": 119022,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 119088,
    "start_column": 7,
    "end_line": 119088,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 119092,
    "start_column": 9,
    "end_line": 119092,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 119094,
    "start_column": 7,
    "end_line": 119094,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 141990,
    "start_column": 5,
    "end_line": 141990,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 141992,
    "start_column": 5,
    "end_line": 141992,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 150648,
    "start_column": 9,
    "end_line": 150648,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 151105,
    "start_column": 9,
    "end_line": 151105,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 151144,
    "start_column": 47,
    "end_line": 151144,
    "end_column": 53,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156194,
    "start_column": 7,
    "end_line": 156194,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156404,
    "start_column": 5,
    "end_line": 156404,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156481,
    "start_column": 9,
    "end_line": 156481,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156523,
    "start_column": 11,
    "end_line": 156523,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156539,
    "start_column": 13,
    "end_line": 156539,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156594,
    "start_column": 6,
    "end_line": 156594,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156615,
    "start_column": 7,
    "end_line": 156615,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 156619,
    "start_column": 7,
    "end_line": 156619,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 157482,
    "start_column": 7,
    "end_line": 157482,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 157488,
    "start_column": 7,
    "end_line": 157488,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 158996,
    "start_column": 5,
    "end_line": 158996,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159043,
    "start_column": 5,
    "end_line": 159043,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159104,
    "start_column": 7,
    "end_line": 159104,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159107,
    "start_column": 7,
    "end_line": 159107,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159137,
    "start_column": 9,
    "end_line": 159137,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159167,
    "start_column": 11,
    "end_line": 159167,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159236,
    "start_column": 5,
    "end_line": 159236,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159238,
    "start_column": 7,
    "end_line": 159238,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 159241,
    "start_column": 5,
    "end_line": 159241,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 160323,
    "start_column": 5,
    "end_line": 160323,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 178833,
    "start_column": 7,
    "end_line": 178833,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 182509,
    "start_column": 11,
    "end_line": 182509,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 182513,
    "start_column": 11,
    "end_line": 182513,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 182517,
    "start_column": 27,
    "end_line": 182517,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 182520,
    "start_column": 11,
    "end_line": 182520,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 187402,
    "start_column": 3,
    "end_line": 187402,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 188885,
    "start_column": 3,
    "end_line": 188885,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189575,
    "start_column": 16,
    "end_line": 189575,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189575,
    "start_column": 37,
    "end_line": 189575,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189576,
    "start_column": 3,
    "end_line": 189576,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189581,
    "start_column": 5,
    "end_line": 189581,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189583,
    "start_column": 5,
    "end_line": 189583,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189588,
    "start_column": 3,
    "end_line": 189588,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 189593,
    "start_column": 32,
    "end_line": 189593,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 192453,
    "start_column": 35,
    "end_line": 192453,
    "end_column": 41,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 192638,
    "start_column": 24,
    "end_line": 192638,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 198796,
    "start_column": 31,
    "end_line": 198796,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 200019,
    "start_column": 9,
    "end_line": 200019,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 205095,
    "start_column": 7,
    "end_line": 205095,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 209814,
    "start_column": 7,
    "end_line": 209814,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 209959,
    "start_column": 5,
    "end_line": 209959,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210036,
    "start_column": 9,
    "end_line": 210036,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210078,
    "start_column": 11,
    "end_line": 210078,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210094,
    "start_column": 13,
    "end_line": 210094,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210149,
    "start_column": 6,
    "end_line": 210149,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210170,
    "start_column": 7,
    "end_line": 210170,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210174,
    "start_column": 7,
    "end_line": 210174,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210323,
    "start_column": 7,
    "end_line": 210323,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210329,
    "start_column": 7,
    "end_line": 210329,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210554,
    "start_column": 5,
    "end_line": 210554,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210599,
    "start_column": 5,
    "end_line": 210599,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210660,
    "start_column": 7,
    "end_line": 210660,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210663,
    "start_column": 7,
    "end_line": 210663,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210693,
    "start_column": 9,
    "end_line": 210693,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210723,
    "start_column": 11,
    "end_line": 210723,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210792,
    "start_column": 5,
    "end_line": 210792,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210794,
    "start_column": 7,
    "end_line": 210794,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 210797,
    "start_column": 5,
    "end_line": 210797,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 213231,
    "start_column": 9,
    "end_line": 213231,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 215148,
    "start_column": 7,
    "end_line": 215148,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 216008,
    "start_column": 9,
    "end_line": 216008,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 217323,
    "start_column": 9,
    "end_line": 217323,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 217517,
    "start_column": 3,
    "end_line": 217517,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 220687,
    "start_column": 7,
    "end_line": 220687,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 227288,
    "start_column": 13,
    "end_line": 227288,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 16476,
    "start_column": 28,
    "end_line": 16476,
    "end_column": 31,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 23237,
    "start_column": 28,
    "end_line": 23237,
    "end_column": 31,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 34714,
    "start_column": 23,
    "end_line": 34714,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 35073,
    "start_column": 42,
    "end_line": 35073,
    "end_column": 45,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 35158,
    "start_column": 23,
    "end_line": 35158,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 35167,
    "start_column": 21,
    "end_line": 35167,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 35683,
    "start_column": 58,
    "end_line": 35683,
    "end_column": 61,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 37399,
    "start_column": 15,
    "end_line": 37399,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tlS"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 37517,
    "start_column": 15,
    "end_line": 37517,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tlS"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38135,
    "start_column": 23,
    "end_line": 38135,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38240,
    "start_column": 53,
    "end_line": 38240,
    "end_column": 56,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38241,
    "start_column": 52,
    "end_line": 38241,
    "end_column": 55,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38375,
    "start_column": 53,
    "end_line": 38375,
    "end_column": 56,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 38376,
    "start_column": 52,
    "end_line": 38376,
    "end_column": 55,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 42638,
    "start_column": 10,
    "end_line": 42638,
    "end_column": 13,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 43076,
    "start_column": 4,
    "end_line": 43076,
    "end_column": 7,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 62046,
    "start_column": 13,
    "end_line": 62046,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86003,
    "start_column": 14,
    "end_line": 86003,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86021,
    "start_column": 12,
    "end_line": 86021,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86023,
    "start_column": 12,
    "end_line": 86023,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86231,
    "start_column": 26,
    "end_line": 86231,
    "end_column": 29,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86233,
    "start_column": 12,
    "end_line": 86233,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 86235,
    "start_column": 14,
    "end_line": 86235,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 93330,
    "start_column": 26,
    "end_line": 93330,
    "end_column": 29,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 93331,
    "start_column": 12,
    "end_line": 93331,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 93333,
    "start_column": 14,
    "end_line": 93333,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 162643,
    "start_column": 11,
    "end_line": 162643,
    "end_column": 14,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 162653,
    "start_column": 11,
    "end_line": 162653,
    "end_column": 14,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 164767,
    "start_column": 17,
    "end_line": 164767,
    "end_column": 20,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 201026,
    "start_column": 17,
    "end_line": 201026,
    "end_column": 20,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 201089,
    "start_column": 10,
    "end_line": 201089,
    "end_column": 13,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 26731,
    "start_column": 41,
    "end_line": 26731,
    "end_column": 44,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "EAX"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 33735,
    "start_column": 41,
    "end_line": 33735,
    "end_column": 44,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "EAX"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 41594,
    "start_column": 41,
    "end_line": 41594,
    "end_column": 44,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "EAX"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/sqlite3.c",
    "start_line": 85887,
    "start_column": 41,
    "end_line": 85887,
    "end_column": 44,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "EAX"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/ltmain.sh",
    "start_line": 2076,
    "start_column": 25,
    "end_line": 2076,
    "end_column": 31,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/ltmain.sh",
    "start_line": 2077,
    "start_column": 35,
    "end_line": 2077,
    "end_column": 41,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/ltmain.sh",
    "start_line": 120,
    "start_column": 3,
    "end_line": 120,
    "end_column": 10,
    "rule_id": "DS440010",
    "rule_name": "OpenSSL: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "NULLCMD"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/ltmain.sh",
    "start_line": 5234,
    "start_column": 3,
    "end_line": 5234,
    "end_column": 10,
    "rule_id": "DS440010",
    "rule_name": "OpenSSL: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "NULLCMD"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1936,
    "start_column": 12,
    "end_line": 1936,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2019,
    "start_column": 14,
    "end_line": 2019,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2428,
    "start_column": 22,
    "end_line": 2428,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2957,
    "start_column": 24,
    "end_line": 2957,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCur->zBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5675,
    "start_column": 18,
    "end_line": 5675,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6724,
    "start_column": 9,
    "end_line": 6724,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6755,
    "start_column": 17,
    "end_line": 6755,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6878,
    "start_column": 24,
    "end_line": 6878,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDelete)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6946,
    "start_column": 20,
    "end_line": 6946,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6962,
    "start_column": 24,
    "end_line": 6962,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7368,
    "start_column": 20,
    "end_line": 7368,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11193,
    "start_column": 22,
    "end_line": 11193,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14048,
    "start_column": 20,
    "end_line": 14048,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNL)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14052,
    "start_column": 20,
    "end_line": 14052,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCR)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 17949,
    "start_column": 22,
    "end_line": 17949,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCollist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19670,
    "start_column": 19,
    "end_line": 19670,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20380,
    "start_column": 14,
    "end_line": 20380,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 705,
    "start_column": 7,
    "end_line": 705,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zLine, zTrans, nTrans)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 864,
    "start_column": 5,
    "end_line": 864,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z+p->n, zAppend, nAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2037,
    "start_column": 13,
    "end_line": 2037,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2051,
    "start_column": 13,
    "end_line": 2051,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 3834,
    "start_column": 3,
    "end_line": 3834,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, APND_MARK_PREFIX, APND_MARK_PREFIX_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5157,
    "start_column": 7,
    "end_line": 5157,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5167,
    "start_column": 5,
    "end_line": 5167,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a,&r,sizeof(a)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5231,
    "start_column": 5,
    "end_line": 5231,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &a, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5255,
    "start_column": 5,
    "end_line": 5255,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5272,
    "start_column": 5,
    "end_line": 5272,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&v, &r, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 5687,
    "start_column": 7,
    "end_line": 5687,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zFile, zFile, nFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6162,
    "start_column": 7,
    "end_line": 6162,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aExtra, &aRead[nFile], nExtra)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6185,
    "start_column": 11,
    "end_line": 6185,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aData, &aBlob[pNew->iDataOff], pNew->cds.szCompressed)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6677,
    "start_column": 3,
    "end_line": 6677,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pCds->zFile, (int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7086,
    "start_column": 3,
    "end_line": 7086,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pCDS->zFile, pCDS->nFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7091,
    "start_column": 5,
    "end_line": 7091,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pEntry->aExtra, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7396,
    "start_column": 5,
    "end_line": 7396,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->body.a[p->body.n], aData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7444,
    "start_column": 7,
    "end_line": 7444,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aZip, p->body.a, p->body.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 7445,
    "start_column": 7,
    "end_line": 7445,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aZip[p->body.n], p->cds.a, p->cds.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8041,
    "start_column": 5,
    "end_line": 8041,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->zKey, zKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8044,
    "start_column": 7,
    "end_line": 8044,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->zVal, zVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8097,
    "start_column": 5,
    "end_line": 8097,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zColl, zColl, nColl+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8527,
    "start_column": 5,
    "end_line": 8527,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr, zCol, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8536,
    "start_column": 7,
    "end_line": 8536,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr, zCol, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8549,
    "start_column": 5,
    "end_line": 8549,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zTab, nTab+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8579,
    "start_column": 17,
    "end_line": 8579,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 8580,
    "start_column": 7,
    "end_line": 8580,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zRet[nIn], zAppend, nAppend+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 9297,
    "start_column": 9,
    "end_line": 9297,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSlot->z, sqlite3_value_blob(argv[1]), nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 9299,
    "start_column": 9,
    "end_line": 9299,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSlot->z, sqlite3_value_text(argv[1]), nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 9655,
    "start_column": 11,
    "end_line": 9655,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zSql, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10116,
    "start_column": 9,
    "end_line": 10116,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPage, pCopy, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10213,
    "start_column": 11,
    "end_line": 10213,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10356,
    "start_column": 13,
    "end_line": 10356,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->pRec, &pCsr->aPage[iOff], nLocal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10374,
    "start_column": 17,
    "end_line": 10374,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCsr->pRec[nPayload-nRem], &aOvfl[4], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11013,
    "start_column": 3,
    "end_line": 11013,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->colSepPrior, p->colSeparator, sizeof(p->colSeparator)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11014,
    "start_column": 3,
    "end_line": 11014,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->rowSepPrior, p->rowSeparator, sizeof(p->rowSeparator)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11019,
    "start_column": 3,
    "end_line": 11019,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->colSeparator, p->colSepPrior, sizeof(p->colSeparator)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11020,
    "start_column": 3,
    "end_line": 11020,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->rowSeparator, p->rowSepPrior, sizeof(p->rowSeparator)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11436,
    "start_column": 3,
    "end_line": 11436,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zText, zText, nText+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11481,
    "start_column": 7,
    "end_line": 11481,
    "end_column": 62,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->sGraph.zPrefix[n], pNext ? \"|  \" : \"   \", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11805,
    "start_column": 11,
    "end_line": 11805,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&ur,&r,sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11846,
    "start_column": 11,
    "end_line": 11846,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&ur,&r,sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 12098,
    "start_column": 5,
    "end_line": 12098,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zErrMsg, sqlite3_errmsg(db), nErrMsg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14067,
    "start_column": 9,
    "end_line": 14067,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], \"replace(replace(\", 16)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14070,
    "start_column": 9,
    "end_line": 14070,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], \"replace(\", 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14075,
    "start_column": 11,
    "end_line": 14075,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], zNL, nNL)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14078,
    "start_column": 11,
    "end_line": 14078,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], zCR, nCR)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14088,
    "start_column": 9,
    "end_line": 14088,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], zNL, nNL)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14089,
    "start_column": 9,
    "end_line": 14089,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], \"', char(10)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14093,
    "start_column": 9,
    "end_line": 14093,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], zCR, nCR)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14094,
    "start_column": 9,
    "end_line": 14094,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOut], \"', char(13)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14294,
    "start_column": 3,
    "end_line": 14294,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, zLine, iStart)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14305,
    "start_column": 7,
    "end_line": 14305,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf+iStart, zCompletion, nCompletion+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14708,
    "start_column": 3,
    "end_line": 14708,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zInsert+i, \");\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 15001,
    "start_column": 5,
    "end_line": 15001,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aHdr, sqlite3_column_blob(pStmt,0)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 17175,
    "start_column": 5,
    "end_line": 17175,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data, p, sizeof(data)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 17547,
    "start_column": 5,
    "end_line": 17547,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data, p, sizeof(data)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18638,
    "start_column": 5,
    "end_line": 18638,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data, p, sizeof(data)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20003,
    "start_column": 7,
    "end_line": 20003,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zLine,\";\",2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20016,
    "start_column": 7,
    "end_line": 20016,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSql, zLine+i, nLine+1-i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20021,
    "start_column": 7,
    "end_line": 20021,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSql+nSql, zLine, nLine+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20109,
    "start_column": 13,
    "end_line": 20109,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, home_dir, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20247,
    "start_column": 3,
    "end_line": 20247,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(data->colSeparator,SEP_Column, 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20248,
    "start_column": 3,
    "end_line": 20248,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(data->rowSeparator,SEP_Row, 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20383,
    "start_column": 5,
    "end_line": 20383,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(argv[i], z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 12024,
    "start_column": 23,
    "end_line": 12024,
    "end_column": 36,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13416,
    "start_column": 11,
    "end_line": 13416,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( len+100 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20095,
    "start_column": 18,
    "end_line": 20095,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20108,
    "start_column": 15,
    "end_line": 20108,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20372,
    "start_column": 16,
    "end_line": 20372,
    "end_column": 38,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20381,
    "start_column": 15,
    "end_line": 20381,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20459,
    "start_column": 42,
    "end_line": 20459,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc((int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20470,
    "start_column": 37,
    "end_line": 20470,
    "end_column": 49,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n*sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20797,
    "start_column": 25,
    "end_line": 20797,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nHistory)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1288,
    "start_column": 3,
    "end_line": 1288,
    "end_column": 53,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(dirp->d_first.d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1321,
    "start_column": 3,
    "end_line": 1321,
    "end_column": 52,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(dirp->d_next.d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1345,
    "start_column": 5,
    "end_line": 1345,
    "end_column": 59,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(entry->d_name, dirp->d_first.d_name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1365,
    "start_column": 3,
    "end_line": 1365,
    "end_column": 46,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(entry->d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18532,
    "start_column": 7,
    "end_line": 18532,
    "end_column": 40,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(mainPrompt,azArg[1],(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18535,
    "start_column": 7,
    "end_line": 18535,
    "end_column": 44,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(continuePrompt,azArg[2],(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 298,
    "start_column": 5,
    "end_line": 298,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 377,
    "start_column": 5,
    "end_line": 377,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 473,
    "start_column": 5,
    "end_line": 473,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 478,
    "start_column": 22,
    "end_line": 478,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 486,
    "start_column": 21,
    "end_line": 486,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 735,
    "start_column": 5,
    "end_line": 735,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 1265,
    "start_column": 3,
    "end_line": 1265,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2256,
    "start_column": 8,
    "end_line": 2256,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2263,
    "start_column": 3,
    "end_line": 2263,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 2492,
    "start_column": 19,
    "end_line": 2492,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4074,
    "start_column": 5,
    "end_line": 4074,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4226,
    "start_column": 5,
    "end_line": 4226,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4234,
    "start_column": 5,
    "end_line": 4234,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4245,
    "start_column": 5,
    "end_line": 4245,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4563,
    "start_column": 7,
    "end_line": 4563,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 4726,
    "start_column": 5,
    "end_line": 4726,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6587,
    "start_column": 19,
    "end_line": 6587,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 6776,
    "start_column": 20,
    "end_line": 6776,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10900,
    "start_column": 15,
    "end_line": 10900,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10925,
    "start_column": 7,
    "end_line": 10925,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10956,
    "start_column": 7,
    "end_line": 10956,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 10964,
    "start_column": 3,
    "end_line": 10964,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11924,
    "start_column": 21,
    "end_line": 11924,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11924,
    "start_column": 37,
    "end_line": 11924,
    "end_column": 41,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11983,
    "start_column": 14,
    "end_line": 11983,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 11984,
    "start_column": 25,
    "end_line": 11984,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 12111,
    "start_column": 8,
    "end_line": 12111,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13765,
    "start_column": 14,
    "end_line": 13765,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13772,
    "start_column": 3,
    "end_line": 13772,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13843,
    "start_column": 13,
    "end_line": 13843,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13895,
    "start_column": 10,
    "end_line": 13895,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13909,
    "start_column": 8,
    "end_line": 13909,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13925,
    "start_column": 10,
    "end_line": 13925,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13933,
    "start_column": 10,
    "end_line": 13933,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14428,
    "start_column": 9,
    "end_line": 14428,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14754,
    "start_column": 9,
    "end_line": 14754,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14809,
    "start_column": 5,
    "end_line": 14809,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14819,
    "start_column": 5,
    "end_line": 14819,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14836,
    "start_column": 7,
    "end_line": 14836,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 14846,
    "start_column": 7,
    "end_line": 14846,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 15207,
    "start_column": 13,
    "end_line": 15207,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 15208,
    "start_column": 28,
    "end_line": 15208,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 17522,
    "start_column": 17,
    "end_line": 17522,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 17734,
    "start_column": 17,
    "end_line": 17734,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18001,
    "start_column": 17,
    "end_line": 18001,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18035,
    "start_column": 9,
    "end_line": 18035,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18067,
    "start_column": 7,
    "end_line": 18067,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18352,
    "start_column": 20,
    "end_line": 18352,
    "end_column": 27,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18365,
    "start_column": 20,
    "end_line": 18365,
    "end_column": 27,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18552,
    "start_column": 18,
    "end_line": 18552,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18724,
    "start_column": 39,
    "end_line": 18724,
    "end_column": 45,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18812,
    "start_column": 13,
    "end_line": 18812,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 18825,
    "start_column": 11,
    "end_line": 18825,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19049,
    "start_column": 11,
    "end_line": 19049,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19128,
    "start_column": 19,
    "end_line": 19128,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19519,
    "start_column": 15,
    "end_line": 19519,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19978,
    "start_column": 46,
    "end_line": 19978,
    "end_column": 52,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19987,
    "start_column": 41,
    "end_line": 19987,
    "end_column": 47,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 19991,
    "start_column": 41,
    "end_line": 19991,
    "end_column": 47,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20035,
    "start_column": 41,
    "end_line": 20035,
    "end_column": 47,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20079,
    "start_column": 16,
    "end_line": 20079,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20084,
    "start_column": 16,
    "end_line": 20084,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20091,
    "start_column": 14,
    "end_line": 20091,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20092,
    "start_column": 13,
    "end_line": 20092,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20142,
    "start_column": 11,
    "end_line": 20142,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20272,
    "start_column": 3,
    "end_line": 20272,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20279,
    "start_column": 3,
    "end_line": 20279,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20335,
    "start_column": 7,
    "end_line": 20335,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20337,
    "start_column": 7,
    "end_line": 20337,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20674,
    "start_column": 7,
    "end_line": 20674,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20781,
    "start_column": 7,
    "end_line": 20781,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20787,
    "start_column": 9,
    "end_line": 20787,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20789,
    "start_column": 9,
    "end_line": 20789,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 20792,
    "start_column": 18,
    "end_line": 20792,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/shell.c",
    "start_line": 13460,
    "start_column": 10,
    "end_line": 13460,
    "end_column": 16,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/README.txt",
    "start_line": 105,
    "start_column": 24,
    "end_line": 105,
    "end_column": 30,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/joplin-renderer/MdToHtml/rules/checkbox.js",
    "start_line": 90,
    "start_column": 13,
    "end_line": 90,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/joplin-renderer/MdToHtml/rules/checkbox.js",
    "start_line": 91,
    "start_column": 13,
    "end_line": 91,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/joplin-renderer/MdToHtml/rules/checkbox.ts",
    "start_line": 95,
    "start_column": 13,
    "end_line": 95,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/joplin-renderer/MdToHtml/rules/checkbox.ts",
    "start_line": 96,
    "start_column": 13,
    "end_line": 96,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/joplin-renderer/assets/mermaid/mermaid.min.js",
    "start_line": 31,
    "start_column": 403,
    "end_line": 31,
    "end_column": 349364,
    "rule_id": "DS117838",
    "rule_name": "Do not store tokens or keys in source code.",
    "severity": 1,
    "description": "A token or key was found in source code. If this represents a secret, it should be moved somewhere else.",
    "match": "keys:n(27),map:n(162),reduce:n(164),size:n(316),transform:n(322),union:n(323),values:n(169)}}catch(t){}r||(r=window._),t.exports=r},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}},function(t,e,n){var r=n(43);t.exports={isSubgraph:function(t,e){return!!t.children(e).length},edgeToId:function(t){return a(t.v)+\":\"+a(t.w)+\":\"+a(t.name)},applyStyle:function(t,e){e&&t.attr(\"style\",e)},applyClass:function(t,e,n){e&&t.attr(\"class\",e).attr(\"class\",n+\" \"+t.attr(\"class\"))},applyTransition:function(t,e){var n=e.graph();if(r.isPlainObject(n)){var i=n.transition;if(r.isFunction(i))return i(t)}return t}};var i=/:/g;function a(t){return t?String(t).replace(i,\"\\\\:\"):\"\"}},function(t,e){function n(t,e){if(!t)throw new Error(e||\"Assertion failed\")}t.exports=n,n.equal=function(t,e,n){if(t!=e)throw new Error(n||\"Assertion failed: \"+t+\" != \"+e)}},function(t,e,n){\"use strict\";var r=e,i=n(5),a=n(16),o=n(215);r.assert=a,r.toArray=o.toArray,r.zero2=o.zero2,r.toHex=o.toHex,r.encode=o.encode,r.getNAF=function(t,e,n){var r=new Array(Math.max(t.bitLength(),n)+1);r.fill(0);for(var i=1<<e+1,a=t.clone(),o=0;o<r.length;o++){var s,u=a.andln(i-1);a.isOdd()?(s=u>(i>>1)-1?(i>>1)-u:u,a.isubn(s)):s=0,r[o]=s,a.iushrn(1)}return r},r.getJSF=function(t,e){var n=[[],[]];t=t.clone(),e=e.clone();for(var r=0,i=0;t.cmpn(-r)>0||e.cmpn(-i)>0;){var a,o,s,u=t.andln(3)+r&3,c=e.andln(3)+i&3;if(3===u&&(u=-1),3===c&&(c=-1),0==(1&u))a=0;else a=3!==(s=t.andln(7)+r&7)&&5!==s||2!==c?u:-u;if(n[0].push(a),0==(1&c))o=0;else o=3!==(s=e.andln(7)+i&7)&&5!==s||2!==u?c:-c;n[1].push(o),2*r===a+1&&(r=1-r),2*i===o+1&&(i=1-i),t.iushrn(1),e.iushrn(1)}return n},r.cachedProperty=function(t,e,n){var r=\"_\"+e;t.prototype[e]=function(){return void 0!==this[r]?this[r]:this[r]=n.call(this)}},r.parseBytes=function(t){return\"string\"==typeof t?r.toArray(t,\"hex\"):t},r.intFromLE=function(t){return new i(t,\"hex\",\"le\")}},function(t,e,n){var r=n(131),i=\"object\"==typeof self&&self&&self.Object===Object&&self,a=r||i||Function(\"return this\")();t.exports=a},function(t,e,n){var r;try{r=n(25)}catch(t){}r||(r=window.graphlib),t.exports=r},function(t,e){t.exports=function(t){return null!=t&&\"object\"==typeof t}},function(t,e,n){\"use strict\";var r=n(16),i=n(2);function a(t,e){return 55296==(64512&t.charCodeAt(e))&&(!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1)))}function o(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function s(t){return 1===t.length?\"0\"+t:t}function u(t){return 7===t.length?\"0\"+t:6===t.length?\"00\"+t:5===t.length?\"000\"+t:4===t.length?\"0000\"+t:3===t.length?\"00000\"+t:2===t.length?\"000000\"+t:1===t.length?\"0000000\"+t:t}e.inherits=i,e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var n=[];if(\"string\"==typeof t)if(e){if(\"hex\"===e)for((t=t.replace(/[^a-z0-9]+/gi,\"\")).length%2!=0&&(t=\"0\"+t),i=0;i<t.length;i+=2)n.push(parseInt(t[i]+t[i+1],16))}else for(var r=0,i=0;i<t.length;i++){var o=t.charCodeAt(i);o<128?n[r++]=o:o<2048?(n[r++]=o>>6|192,n[r++]=63&o|128):a(t,i)?(o=65536+((1023&o)<<10)+(1023&t.charCodeAt(++i)),n[r++]=o>>18|240,n[r++]=o>>12&63|128,n[r++]=o>>6&63|128,n[r++]=63&o|128):(n[r++]=o>>12|224,n[r++]=o>>6&63|128,n[r++]=63&o|128)}else for(i=0;i<t.length;i++)n[i]=0|t[i];return n},e.toHex=function(t){for(var e=\"\",n=0;n<t.length;n++)e+=s(t[n].toString(16));return e},e.htonl=o,e.toHex32=function(t,e){for(var n=\"\",r=0;r<t.length;r++){var i=t[r];\"little\"===e&&(i=o(i)),n+=u(i.toString(16))}return n},e.zero2=s,e.zero8=u,e.join32=function(t,e,n,i){var a=n-e;r(a%4==0);for(var o=new Array(a/4),s=0,u=e;s<o.length;s++,u+=4){var c;c=\"big\"===i?t[u]<<24|t[u+1]<<16|t[u+2]<<8|t[u+3]:t[u+3]<<24|t[u+2]<<16|t[u+1]<<8|t[u],o[s]=c>>>0}return o},e.split32=function(t,e){for(var n=new Array(4*t.length),r=0,i=0;r<t.length;r++,i+=4){var a=t[r];\"big\"===e?(n[i]=a>>>24,n[i+1]=a>>>16&255,n[i+2]=a>>>8&255,n[i+3]=255&a):(n[i+3]=a>>>24,n[i+2]=a>>>16&255,n[i+1]=a>>>8&255,n[i]=255&a)}return n},e.rotr32=function(t,e){return t>>>e|t<<32-e},e.rotl32=function(t,e){return t<<e|t>>>32-e},e.sum32=function(t,e){return t+e>>>0},e.sum32_3=function(t,e,n){return t+e+n>>>0},e.sum32_4=function(t,e,n,r){return t+e+n+r>>>0},e.sum32_5=function(t,e,n,r,i){return t+e+n+r+i>>>0},e.sum64=function(t,e,n,r){var i=t[e],a=r+t[e+1]>>>0,o=(a<r?1:0)+n+i;t[e]=o>>>0,t[e+1]=a},e.sum64_hi=function(t,e,n,r){return(e+r>>>0<e?1:0)+t+n>>>0},e.sum64_lo=function(t,e,n,r){return e+r>>>0},e.sum64_4_hi=function(t,e,n,r,i,a,o,s){var u=0,c=e;return u+=(c=c+r>>>0)<e?1:0,u+=(c=c+a>>>0)<a?1:0,t+n+i+o+(u+=(c=c+s>>>0)<s?1:0)>>>0},e.sum64_4_lo=function(t,e,n,r,i,a,o,s){return e+r+a+s>>>0},e.sum64_5_hi=function(t,e,n,r,i,a,o,s,u,c){var f=0,l=e;return f+=(l=l+r>>>0)<e?1:0,f+=(l=l+a>>>0)<a?1:0,f+=(l=l+s>>>0)<s?1:0,t+n+i+o+u+(f+=(l=l+c>>>0)<c?1:0)>>>0},e.sum64_5_lo=function(t,e,n,r,i,a,o,s,u,c){return e+r+a+s+c>>>0},e.rotr64_hi=function(t,e,n){return(e<<32-n|t>>>n)>>>0},e.rotr64_lo=function(t,e,n){return(t<<32-n|e>>>n)>>>0},e.shr64_hi=function(t,e,n){return t>>>n},e.shr64_lo=function(t,e,n){return(t<<32-n|e>>>n)>>>0}},function(t,e,n){(function(t){t.exports=function(){\"use strict\";var e,r;function i(){return e.apply(null,arguments)}function a(t){return t instanceof Array||\"[object Array]\"===Object.prototype.toString.call(t)}function o(t){return null!=t&&\"[object Object]\"===Object.prototype.toString.call(t)}function s(t){return void 0===t}function u(t){return\"number\"==typeof t||\"[object Number]\"===Object.prototype.toString.call(t)}function c(t){return t instanceof Date||\"[object Date]\"===Object.prototype.toString.call(t)}function f(t,e){var n,r=[];for(n=0;n<t.length;++n)r.push(e(t[n],n));return r}function l(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function h(t,e){for(var n in e)l(e,n)&&(t[n]=e[n]);return l(e,\"toString\")&&(t.toString=e.toString),l(e,\"valueOf\")&&(t.valueOf=e.valueOf),t}function d(t,e,n,r){return Me(t,e,n,r,!0).utc()}function p(t){return null==t._pf&&(t._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),t._pf}function g(t){if(null==t._isValid){var e=p(t),n=r.call(e.parsedDateParts,(function(t){return null!=t})),i=!isNaN(t._d.getTime())&&e.overflow<0&&!e.empty&&!e.invalidMonth&&!e.invalidWeekday&&!e.weekdayMismatch&&!e.nullInput&&!e.invalidFormat&&!e.userInvalidated&&(!e.meridiem||e.meridiem&&n);if(t._strict&&(i=i&&0===e.charsLeftOver&&0===e.unusedTokens.length&&void 0===e.bigHour),null!=Object.isFrozen&&Object.isFrozen(t))return i;t._isValid=i}return t._isValid}function y(t){var e=d(NaN);return null!=t?h(p(e),t):p(e).userInvalidated=!0,e}r=Array.prototype.some?Array.prototype.some:function(t){for(var e=Object(this),n=e.length>>>0,r=0;r<n;r++)if(r in e&&t.call(this,e[r],r,e))return!0;return!1};var b=i.momentProperties=[];function v(t,e){var n,r,i;if(s(e._isAMomentObject)||(t._isAMomentObject=e._isAMomentObject),s(e._i)||(t._i=e._i),s(e._f)||(t._f=e._f),s(e._l)||(t._l=e._l),s(e._strict)||(t._strict=e._strict),s(e._tzm)||(t._tzm=e._tzm),s(e._isUTC)||(t._isUTC=e._isUTC),s(e._offset)||(t._offset=e._offset),s(e._pf)||(t._pf=p(e)),s(e._locale)||(t._locale=e._locale),0<b.length)for(n=0;n<b.length;n++)s(i=e[r=b[n]])||(t[r]=i);return t}var m=!1;function _(t){v(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===m&&(m=!0,i.updateOffset(this),m=!1)}function w(t){return t instanceof _||null!=t&&null!=t._isAMomentObject}function x(t){return t<0?Math.ceil(t)||0:Math.floor(t)}function k(t){var e=+t,n=0;return 0!==e&&isFinite(e)&&(n=x(e)),n}function E(t,e,n){var r,i=Math.min(t.length,e.length),a=Math.abs(t.length-e.length),o=0;for(r=0;r<i;r++)(n&&t[r]!==e[r]||!n&&k(t[r])!==k(e[r]))&&o++;return o+a}function A(t){!1===i.suppressDeprecationWarnings&&\"undefined\"!=typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+t)}function S(t,e){var n=!0;return h((function(){if(null!=i.deprecationHandler&&i.deprecationHandler(null,t),n){for(var r,a=[],o=0;o<arguments.length;o++){if(r=\"\",\"object\"==typeof arguments[o]){for(var s in r+=\"\\n[\"+o+\"] \",arguments[0])r+=s+\": \"+arguments[0][s]+\", \";r=r.slice(0,-2)}else r=arguments[o];a.push(r)}A(t+\"\\nArguments: \"+Array.prototype.slice.call(a).join(\"\")+\"\\n\"+(new Error).stack),n=!1}return e.apply(this,arguments)}),e)}var M,T={};function D(t,e){null!=i.deprecationHandler&&i.deprecationHandler(t,e),T[t]||(A(e),T[t]=!0)}function C(t){return t instanceof Function||\"[object Function]\"===Object.prototype.toString.call(t)}function N(t,e){var n,r=h({},t);for(n in e)l(e,n)&&(o(t[n])&&o(e[n])?(r[n]={},h(r[n],t[n]),h(r[n],e[n])):null!=e[n]?r[n]=e[n]:delete r[n]);for(n in t)l(t,n)&&!l(e,n)&&o(t[n])&&(r[n]=h({},r[n]));return r}function I(t){null!=t&&this.set(t)}i.suppressDeprecationWarnings=!1,i.deprecationHandler=null,M=Object.keys?Object.keys:function(t){var e,n=[];for(e in t)l(t,e)&&n.push(e);return n};var L={};function B(t,e){var n=t.toLowerCase();L[n]=L[n+\"s\"]=L[e]=t}function O(t){return\"string\"==typeof t?L[t]||L[t.toLowerCase()]:void 0}function R(t){var e,n,r={};for(n in t)l(t,n)&&(e=O(n))&&(r[e]=t[n]);return r}var P={};function F(t,e){P[t]=e}function q(t,e,n){var r=\"\"+Math.abs(t),i=e-r.length;return(0<=t?n?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,i)).toString().substr(1)+r}var j=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,U=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,z={},Y={};function V(t,e,n,r){var i=r;\"string\"==typeof r&&(i=function(){return this[r]()}),t&&(Y[t]=i),e&&(Y[e[0]]=function(){return q(i.apply(this,arguments),e[1],e[2])}),n&&(Y[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),t)})}function H(t,e){return t.isValid()?(e=G(e,t.localeData()),z[e]=z[e]||function(t){var e,n,r,i=t.match(j);for(e=0,n=i.length;e<n;e++)Y[i[e]]?i[e]=Y[i[e]]:i[e]=(r=i[e]).match(/\\[[\\s\\S]/)?r.replace(/^\\[|\\]$/g,\"\"):r.replace(/\\\\/g,\"\");return function(e){var r,a=\"\";for(r=0;r<n;r++)a+=C(i[r])?i[r].call(e,t):i[r];return a}}(e),z[e](t)):t.localeData().invalidDate()}function G(t,e){var n=5;function r(t){return e.longDateFormat(t)||t}for(U.lastIndex=0;0<=n&&U.test(t);)t=t.replace(U,r),U.lastIndex=0,n-=1;return t}var $=/\\d/,W=/\\d\\d/,K=/\\d{3}/,X=/\\d{4}/,Z=/[+-]?\\d{6}/,J=/\\d\\d?/,Q=/\\d\\d\\d\\d?/,tt=/\\d\\d\\d\\d\\d\\d?/,et=/\\d{1,3}/,nt=/\\d{1,4}/,rt=/[+-]?\\d{1,6}/,it=/\\d+/,at=/[+-]?\\d+/,ot=/Z|[+-]\\d\\d:?\\d\\d/gi,st=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,ut=/[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,ct={};function ft(t,e,n){ct[t]=C(e)?e:function(t,r){return t&&n?n:e}}function lt(t,e){return l(ct,t)?ct[t](e._strict,e._locale):new RegExp(ht(t.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,(function(t,e,n,r,i){return e||n||r||i}))))}function ht(t){return t.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}var dt={};function pt(t,e){var n,r=e;for(\"string\"==typeof t&&(t=[t]),u(e)&&(r=function(t,n){n[e]=k(t)}),n=0;n<t.length;n++)dt[t[n]]=r}function gt(t,e){pt(t,(function(t,n,r,i){r._w=r._w||{},e(t,r._w,r,i)}))}var yt=0,bt=1,vt=2,mt=3,_t=4,wt=5,xt=6,kt=7,Et=8;function At(t){return St(t)?366:365}function St(t){return t%4==0&&t%100!=0||t%400==0}V(\"Y\",0,0,(function(){var t=this.year();return t<=9999?\"\"+t:\"+\"+t})),V(0,[\"YY\",2],0,(function(){return this.year()%100})),V(0,[\"YYYY\",4],0,\"year\"),V(0,[\"YYYYY\",5],0,\"year\"),V(0,[\"YYYYYY\",6,!0],0,\"year\"),B(\"year\",\"y\"),F(\"year\",1),ft(\"Y\",at),ft(\"YY\",J,W),ft(\"YYYY\",nt,X),ft(\"YYYYY\",rt,Z),ft(\"YYYYYY\",rt,Z),pt([\"YYYYY\",\"YYYYYY\"],yt),pt(\"YYYY\",(function(t,e){e[yt]=2===t.length?i.parseTwoDigitYear(t):k(t)})),pt(\"YY\",(function(t,e){e[yt]=i.parseTwoDigitYear(t)})),pt(\"Y\",(function(t,e){e[yt]=parseInt(t,10)})),i.parseTwoDigitYear=function(t){return k(t)+(68<k(t)?1900:2e3)};var Mt,Tt=Dt(\"FullYear\",!0);function Dt(t,e){return function(n){return null!=n?(Nt(this,t,n),i.updateOffset(this,e),this):Ct(this,t)}}function Ct(t,e){return t.isValid()?t._d[\"get\"+(t._isUTC?\"UTC\":\"\")+e]():NaN}function Nt(t,e,n){t.isValid()&&!isNaN(n)&&(\"FullYear\"===e&&St(t.year())&&1===t.month()&&29===t.date()?t._d[\"set\"+(t._isUTC?\"UTC\":\"\")+e](n,t.month(),It(n,t.month())):t._d[\"set\"+(t._isUTC?\"UTC\":\"\")+e](n))}function It(t,e){if(isNaN(t)||isNaN(e))return NaN;var n=(e%12+12)%12;return t+=(e-n)/12,1===n?St(t)?29:28:31-n%7%2}Mt=Array.prototype.indexOf?Array.prototype.indexOf:function(t){var e;for(e=0;e<this.length;++e)if(this[e]===t)return e;return-1},V(\"M\",[\"MM\",2],\"Mo\",(function(){return this.month()+1})),V(\"MMM\",0,0,(function(t){return this.localeData().monthsShort(this,t)})),V(\"MMMM\",0,0,(function(t){return this.localeData().months(this,t)})),B(\"month\",\"M\"),F(\"month\",8),ft(\"M\",J),ft(\"MM\",J,W),ft(\"MMM\",(function(t,e){return e.monthsShortRegex(t)})),ft(\"MMMM\",(function(t,e){return e.monthsRegex(t)})),pt([\"M\",\"MM\"],(function(t,e){e[bt]=k(t)-1})),pt([\"MMM\",\"MMMM\"],(function(t,e,n,r){var i=n._locale.monthsParse(t,r,n._strict);null!=i?e[bt]=i:p(n).invalidMonth=t}));var Lt=/D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,Bt=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),Ot=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\");function Rt(t,e){var n;if(!t.isValid())return t;if(\"string\"==typeof e)if(/^\\d+$/.test(e))e=k(e);else if(!u(e=t.localeData().monthsParse(e)))return t;return n=Math.min(t.date(),It(t.year(),e)),t._d[\"set\"+(t._isUTC?\"UTC\":\"\")+\"Month\"](e,n),t}function Pt(t){return null!=t?(Rt(this,t),i.updateOffset(this,!0),this):Ct(this,\"Month\")}var Ft=ut,qt=ut;function jt(){function t(t,e){return e.length-t.length}var e,n,r=[],i=[],a=[];for(e=0;e<12;e++)n=d([2e3,e]),r.push(this.monthsShort(n,\"\")),i.push(this.months(n,\"\")),a.push(this.months(n,\"\")),a.push(this.monthsShort(n,\"\"));for(r.sort(t),i.sort(t),a.sort(t),e=0;e<12;e++)r[e]=ht(r[e]),i[e]=ht(i[e]);for(e=0;e<24;e++)a[e]=ht(a[e]);this._monthsRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\")}function Ut(t){var e=new Date(Date.UTC.apply(null,arguments));return t<100&&0<=t&&isFinite(e.getUTCFullYear())&&e.setUTCFullYear(t),e}function zt(t,e,n){var r=7+e-n;return-(7+Ut(t,0,r).getUTCDay()-e)%7+r-1}function Yt(t,e,n,r,i){var a,o,s=1+7*(e-1)+(7+n-r)%7+zt(t,r,i);return s<=0?o=At(a=t-1)+s:s>At(t)?(a=t+1,o=s-At(t)):(a=t,o=s),{year:a,dayOfYear:o}}function Vt(t,e,n){var r,i,a=zt(t.year(),e,n),o=Math.floor((t.dayOfYear()-a-1)/7)+1;return o<1?r=o+Ht(i=t.year()-1,e,n):o>Ht(t.year(),e,n)?(r=o-Ht(t.year(),e,n),i=t.year()+1):(i=t.year(),r=o),{week:r,year:i}}function Ht(t,e,n){var r=zt(t,e,n),i=zt(t+1,e,n);return(At(t)-r+i)/7}V(\"w\",[\"ww\",2],\"wo\",\"week\"),V(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),B(\"week\",\"w\"),B(\"isoWeek\",\"W\"),F(\"week\",5),F(\"isoWeek\",5),ft(\"w\",J),ft(\"ww\",J,W),ft(\"W\",J),ft(\"WW\",J,W),gt([\"w\",\"ww\",\"W\",\"WW\"],(function(t,e,n,r){e[r.substr(0,1)]=k(t)})),V(\"d\",0,\"do\",\"day\"),V(\"dd\",0,0,(function(t){return this.localeData().weekdaysMin(this,t)})),V(\"ddd\",0,0,(function(t){return this.localeData().weekdaysShort(this,t)})),V(\"dddd\",0,0,(function(t){return this.localeData().weekdays(this,t)})),V(\"e\",0,0,\"weekday\"),V(\"E\",0,0,\"isoWeekday\"),B(\"day\",\"d\"),B(\"weekday\",\"e\"),B(\"isoWeekday\",\"E\"),F(\"day\",11),F(\"weekday\",11),F(\"isoWeekday\",11),ft(\"d\",J),ft(\"e\",J),ft(\"E\",J),ft(\"dd\",(function(t,e){return e.weekdaysMinRegex(t)})),ft(\"ddd\",(function(t,e){return e.weekdaysShortRegex(t)})),ft(\"dddd\",(function(t,e){return e.weekdaysRegex(t)})),gt([\"dd\",\"ddd\",\"dddd\"],(function(t,e,n,r){var i=n._locale.weekdaysParse(t,r,n._strict);null!=i?e.d=i:p(n).invalidWeekday=t})),gt([\"d\",\"e\",\"E\"],(function(t,e,n,r){e[r]=k(t)}));var Gt=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),$t=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),Wt=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),Kt=ut,Xt=ut,Zt=ut;function Jt(){function t(t,e){return e.length-t.length}var e,n,r,i,a,o=[],s=[],u=[],c=[];for(e=0;e<7;e++)n=d([2e3,1]).day(e),r=this.weekdaysMin(n,\"\"),i=this.weekdaysShort(n,\"\"),a=this.weekdays(n,\"\"),o.push(r),s.push(i),u.push(a),c.push(r),c.push(i),c.push(a);for(o.sort(t),s.sort(t),u.sort(t),c.sort(t),e=0;e<7;e++)s[e]=ht(s[e]),u[e]=ht(u[e]),c[e]=ht(c[e]);this._weekdaysRegex=new RegExp(\"^(\"+c.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+u.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+s.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\")}function Qt(){return this.hours()%12||12}function te(t,e){V(t,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),e)}))}function ee(t,e){return e._meridiemParse}V(\"H\",[\"HH\",2],0,\"hour\"),V(\"h\",[\"hh\",2],0,Qt),V(\"k\",[\"kk\",2],0,(function(){return this.hours()||24})),V(\"hmm\",0,0,(function(){return\"\"+Qt.apply(this)+q(this.minutes(),2)})),V(\"hmmss\",0,0,(function(){return\"\"+Qt.apply(this)+q(this.minutes(),2)+q(this.seconds(),2)})),V(\"Hmm\",0,0,(function(){return\"\"+this.hours()+q(this.minutes(),2)})),V(\"Hmmss\",0,0,(function(){return\"\"+this.hours()+q(this.minutes(),2)+q(this.seconds(),2)})),te(\"a\",!0),te(\"A\",!1),B(\"hour\",\"h\"),F(\"hour\",13),ft(\"a\",ee),ft(\"A\",ee),ft(\"H\",J),ft(\"h\",J),ft(\"k\",J),ft(\"HH\",J,W),ft(\"hh\",J,W),ft(\"kk\",J,W),ft(\"hmm\",Q),ft(\"hmmss\",tt),ft(\"Hmm\",Q),ft(\"Hmmss\",tt),pt([\"H\",\"HH\"],mt),pt([\"k\",\"kk\"],(function(t,e,n){var r=k(t);e[mt]=24===r?0:r})),pt([\"a\",\"A\"],(function(t,e,n){n._isPm=n._locale.isPM(t),n._meridiem=t})),pt([\"h\",\"hh\"],(function(t,e,n){e[mt]=k(t),p(n).bigHour=!0})),pt(\"hmm\",(function(t,e,n){var r=t.length-2;e[mt]=k(t.substr(0,r)),e[_t]=k(t.substr(r)),p(n).bigHour=!0})),pt(\"hmmss\",(function(t,e,n){var r=t.length-4,i=t.length-2;e[mt]=k(t.substr(0,r)),e[_t]=k(t.substr(r,2)),e[wt]=k(t.substr(i)),p(n).bigHour=!0})),pt(\"Hmm\",(function(t,e,n){var r=t.length-2;e[mt]=k(t.substr(0,r)),e[_t]=k(t.substr(r))})),pt(\"Hmmss\",(function(t,e,n){var r=t.length-4,i=t.length-2;e[mt]=k(t.substr(0,r)),e[_t]=k(t.substr(r,2)),e[wt]=k(t.substr(i))}));var ne,re=Dt(\"Hours\",!0),ie={calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},longDateFormat:{LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},invalidDate:\"Invalid date\",ordinal:\"%d\",dayOfMonthOrdinalParse:/\\d{1,2}/,relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",ss:\"%d seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},months:Bt,monthsShort:Ot,week:{dow:0,doy:6},weekdays:Gt,weekdaysMin:Wt,weekdaysShort:$t,meridiemParse:/[ap]\\.?m?\\.?/i},ae={},oe={};function se(t){return t?t.toLowerCase().replace(\"_\",\"-\"):t}function ue(e){var r=null;if(!ae[e]&&void 0!==t&&t&&t.exports)try{r=ne._abbr,n(235)(\"./\"+e),ce(r)}catch(e){}return ae[e]}function ce(t,e){var n;return t&&((n=s(e)?le(t):fe(t,e))?ne=n:\"undefined\"!=typeof console&&console.warn&&console.warn(\"Locale \"+t+\" not found. Did you forget to load it?\")),ne._abbr}function fe(t,e){if(null!==e){var n,r=ie;if(e.abbr=t,null!=ae[t])D(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),r=ae[t]._config;else if(null!=e.parentLocale)if(null!=ae[e.parentLocale])r=ae[e.parentLocale]._config;else{if(null==(n=ue(e.parentLocale)))return oe[e.parentLocale]||(oe[e.parentLocale]=[]),oe[e.parentLocale].push({name:t,config:e}),null;r=n._config}return ae[t]=new I(N(r,e)),oe[t]&&oe[t].forEach((function(t){fe(t.name,t.config)})),ce(t),ae[t]}return delete ae[t],null}function le(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return ne;if(!a(t)){if(e=ue(t))return e;t=[t]}return function(t){for(var e,n,r,i,a=0;a<t.length;){for(e=(i=se(t[a]).split(\"-\")).length,n=(n=se(t[a+1]))?n.split(\"-\"):null;0<e;){if(r=ue(i.slice(0,e).join(\"-\")))return r;if(n&&n.length>=e&&E(i,n,!0)>=e-1)break;e--}a++}return ne}(t)}function he(t){var e,n=t._a;return n&&-2===p(t).overflow&&(e=n[bt]<0||11<n[bt]?bt:n[vt]<1||n[vt]>It(n[yt],n[bt])?vt:n[mt]<0||24<n[mt]||24===n[mt]&&(0!==n[_t]||0!==n[wt]||0!==n[xt])?mt:n[_t]<0||59<n[_t]?_t:n[wt]<0||59<n[wt]?wt:n[xt]<0||999<n[xt]?xt:-1,p(t)._overflowDayOfYear&&(e<yt||vt<e)&&(e=vt),p(t)._overflowWeeks&&-1===e&&(e=kt),p(t)._overflowWeekday&&-1===e&&(e=Et),p(t).overflow=e),t}function de(t,e,n){return null!=t?t:null!=e?e:n}function pe(t){var e,n,r,a,o,s=[];if(!t._d){var u,c;for(u=t,c=new Date(i.now()),r=u._useUTC?[c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()]:[c.getFullYear(),c.getMonth(),c.getDate()],t._w&&null==t._a[vt]&&null==t._a[bt]&&function(t){var e,n,r,i,a,o,s,u;if(null!=(e=t._w).GG||null!=e.W||null!=e.E)a=1,o=4,n=de(e.GG,t._a[yt],Vt(Te(),1,4).year),r=de(e.W,1),((i=de(e.E,1))<1||7<i)&&(u=!0);else{a=t._locale._week.dow,o=t._locale._week.doy;var c=Vt(Te(),a,o);n=de(e.gg,t._a[yt],c.year),r=de(e.w,c.week),null!=e.d?((i=e.d)<0||6<i)&&(u=!0):null!=e.e?(i=e.e+a,(e.e<0||6<e.e)&&(u=!0)):i=a}r<1||r>Ht(n,a,o)?p(t)._overflowWeeks=!0:null!=u?p(t)._overflowWeekday=!0:(s=Yt(n,r,i,a,o),t._a[yt]=s.year,t._dayOfYear=s.dayOfYear)}(t),null!=t._dayOfYear&&(o=de(t._a[yt],r[yt]),(t._dayOfYear>At(o)||0===t._dayOfYear)&&(p(t)._overflowDayOfYear=!0),n=Ut(o,0,t._dayOfYear),t._a[bt]=n.getUTCMonth(),t._a[vt]=n.getUTCDate()),e=0;e<3&&null==t._a[e];++e)t._a[e]=s[e]=r[e];for(;e<7;e++)t._a[e]=s[e]=null==t._a[e]?2===e?1:0:t._a[e];24===t._a[mt]&&0===t._a[_t]&&0===t._a[wt]&&0===t._a[xt]&&(t._nextDay=!0,t._a[mt]=0),t._d=(t._useUTC?Ut:function(t,e,n,r,i,a,o){var s=new Date(t,e,n,r,i,a,o);return t<100&&0<=t&&isFinite(s.getFullYear())&&s.setFullYear(t),s}).apply(null,s),a=t._useUTC?t._d.getUTCDay():t._d.getDay(),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[mt]=24),t._w&&void 0!==t._w.d&&t._w.d!==a&&(p(t).weekdayMismatch=!0)}}var ge=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,ye=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,be=/Z|[+-]\\d\\d(?::?\\d\\d)?/,ve=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],me=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],_e=/^\\/?Date\\((\\-?\\d+)/i;function we(t){var e,n,r,i,a,o,s=t._i,u=ge.exec(s)||ye.exec(s);if(u){for(p(t).iso=!0,e=0,n=ve.length;e<n;e++)if(ve[e][1].exec(u[1])){i=ve[e][0],r=!1!==ve[e][2];break}if(null==i)return void(t._isValid=!1);if(u[3]){for(e=0,n=me.length;e<n;e++)if(me[e][1].exec(u[3])){a=(u[2]||\" \")+me[e][0];break}if(null==a)return void(t._isValid=!1)}if(!r&&null!=a)return void(t._isValid=!1);if(u[4]){if(!be.exec(u[4]))return void(t._isValid=!1);o=\"Z\"}t._f=i+(a||\"\")+(o||\"\"),Ae(t)}else t._isValid=!1}var xe=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,ke={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Ee(t){var e,n,r,i=xe.exec(t._i.replace(/\\([^)]*\\)|[\\n\\t]/g,\" \").replace(/(\\s\\s+)/g,\" \").trim());if(i){var a=function(t,e,n,r,i,a){var o=[function(t){var e=parseInt(t,10);return e<=49?2e3+e:e<=999?1900+e:e}(t),Ot.indexOf(e),parseInt(n,10),parseInt(r,10),parseInt(i,10)];return a&&o.push(parseInt(a,10)),o}(i[4],i[3],i[2],i[5],i[6],i[7]);if(n=a,r=t,(e=i[1])&&$t.indexOf(e)!==new Date(n[0],n[1],n[2]).getDay()&&(p(r).weekdayMismatch=!0,!(r._isValid=!1)))return;t._a=a,t._tzm=function(t,e,n){if(t)return ke[t];if(e)return 0;var r=parseInt(n,10),i=r%100;return(r-i)/100*60+i}(i[8],i[9],i[10]),t._d=Ut.apply(null,t._a),t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),p(t).rfc2822=!0}else t._isValid=!1}function Ae(t){if(t._f!==i.ISO_8601)if(t._f!==i.RFC_2822){t._a=[],p(t).empty=!0;var e,n,r,a,o,s,u,c,f=\"\"+t._i,h=f.length,d=0;for(r=G(t._f,t._locale).match(j)||[],e=0;e<r.length;e++)a=r[e],(n=(f.match(lt(a,t))||[])[0])&&(0<(o=f.substr(0,f.indexOf(n))).length&&p(t).unusedInput.push(o),f=f.slice(f.indexOf(n)+n.length),d+=n.length),Y[a]?(n?p(t).empty=!1:p(t).unusedTokens.push(a),s=a,c=t,null!=(u=n)&&l(dt,s)&&dt[s](u,c._a,c,s)):t._strict&&!n&&p(t).unusedTokens.push(a);p(t).charsLeftOver=h-d,0<f.length&&p(t).unusedInput.push(f),t._a[mt]<=12&&!0===p(t).bigHour&&0<t._a[mt]&&(p(t).bigHour=void 0),p(t).parsedDateParts=t._a.slice(0),p(t).meridiem=t._meridiem,t._a[mt]=function(t,e,n){var r;return null==n?e:null!=t.meridiemHour?t.meridiemHour(e,n):(null!=t.isPM&&((r=t.isPM(n))&&e<12&&(e+=12),r||12!==e||(e=0)),e)}(t._locale,t._a[mt],t._meridiem),pe(t),he(t)}else Ee(t);else we(t)}function Se(t){var e,n,r,l,d=t._i,b=t._f;return t._locale=t._locale||le(t._l),null===d||void 0===b&&\"\"===d?y({nullInput:!0}):(\"string\"==typeof d&&(t._i=d=t._locale.preparse(d)),w(d)?new _(he(d)):(c(d)?t._d=d:a(b)?function(t){var e,n,r,i,a;if(0===t._f.length)return p(t).invalidFormat=!0,t._d=new Date(NaN);for(i=0;i<t._f.length;i++)a=0,e=v({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._f=t._f[i],Ae(e),g(e)&&(a+=p(e).charsLeftOver,a+=10*p(e).unusedTokens.length,p(e).score=a,(null==r||a<r)&&(r=a,n=e));h(t,n||e)}(t):b?Ae(t):s(n=(e=t)._i)?e._d=new Date(i.now()):c(n)?e._d=new Date(n.valueOf()):\"string\"==typeof n?(r=e,null===(l=_e.exec(r._i))?(we(r),!1===r._isValid&&(delete r._isValid,Ee(r),!1===r._isValid&&(delete r._isValid,i.createFromInputFallback(r)))):r._d=new Date(+l[1])):a(n)?(e._a=f(n.slice(0),(function(t){return parseInt(t,10)})),pe(e)):o(n)?function(t){if(!t._d){var e=R(t._i);t._a=f([e.year,e.month,e.day||e.date,e.hour,e.minute,e.second,e.millisecond],(function(t){return t&&parseInt(t,10)})),pe(t)}}(e):u(n)?e._d=new Date(n):i.createFromInputFallback(e),g(t)||(t._d=null),t))}function Me(t,e,n,r,i){var s,u={};return!0!==n&&!1!==n||(r=n,n=void 0),(o(t)&&function(t){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(t).length;var e;for(e in t)if(t.hasOwnProperty(e))return!1;return!0}(t)||a(t)&&0===t.length)&&(t=void 0),u._isAMomentObject=!0,u._useUTC=u._isUTC=i,u._l=n,u._i=t,u._f=e,u._strict=r,(s=new _(he(Se(u))))._nextDay&&(s.add(1,\"d\"),s._nextDay=void 0),s}function Te(t,e,n,r){return Me(t,e,n,r,!1)}i.createFromInputFallback=S(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",(function(t){t._d=new Date(t._i+(t._useUTC?\" UTC\":\"\"))})),i.ISO_8601=function(){},i.RFC_2822=function(){};var De=S(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var t=Te.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:y()})),Ce=S(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var t=Te.apply(null,arguments);return this.isValid()&&t.isValid()?this<t?this:t:y()}));function Ne(t,e){var n,r;if(1===e.length&&a(e[0])&&(e=e[0]),!e.length)return Te();for(n=e[0],r=1;r<e.length;++r)e[r].isValid()&&!e[r][t](n)||(n=e[r]);return n}var Ie=[\"year\",\"quarter\",\"month\",\"week\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\"];function Le(t){var e=R(t),n=e.year||0,r=e.quarter||0,i=e.month||0,a=e.week||0,o=e.day||0,s=e.hour||0,u=e.minute||0,c=e.second||0,f=e.millisecond||0;this._isValid=function(t){for(var e in t)if(-1===Mt.call(Ie,e)||null!=t[e]&&isNaN(t[e]))return!1;for(var n=!1,r=0;r<Ie.length;++r)if(t[Ie[r]]){if(n)return!1;parseFloat(t[Ie[r]])!==k(t[Ie[r]])&&(n=!0)}return!0}(e),this._milliseconds=+f+1e3*c+6e4*u+1e3*s*60*60,this._days=+o+7*a,this._months=+i+3*r+12*n,this._data={},this._locale=le(),this._bubble()}function Be(t){return t instanceof Le}function Oe(t){return t<0?-1*Math.round(-1*t):Math.round(t)}function Re(t,e){V(t,0,0,(function(){var t=this.utcOffset(),n=\"+\";return t<0&&(t=-t,n=\"-\"),n+q(~~(t/60),2)+e+q(~~t%60,2)}))}Re(\"Z\",\":\"),Re(\"ZZ\",\"\"),ft(\"Z\",st),ft(\"ZZ\",st),pt([\"Z\",\"ZZ\"],(function(t,e,n){n._useUTC=!0,n._tzm=Fe(st,t)}));var Pe=/([\\+\\-]|\\d\\d)/gi;function Fe(t,e){var n=(e||\"\").match(t);if(null===n)return null;var r=((n[n.length-1]||[])+\"\").match(Pe)||[\"-\",0,0],i=60*r[1]+k(r[2]);return 0===i?0:\"+\"===r[0]?i:-i}function qe(t,e){var n,r;return e._isUTC?(n=e.clone(),r=(w(t)||c(t)?t.valueOf():Te(t).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+r),i.updateOffset(n,!1),n):Te(t).local()}function je(t){return 15*-Math.round(t._d.getTimezoneOffset()/15)}function Ue(){return!!this.isValid()&&this._isUTC&&0===this._offset}i.updateOffset=function(){};var ze=/^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/,Ye=/^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Ve(t,e){var n,r,i,a=t,o=null;return Be(t)?a={ms:t._milliseconds,d:t._days,M:t._months}:u(t)?(a={},e?a[e]=t:a.milliseconds=t):(o=ze.exec(t))?(n=\"-\"===o[1]?-1:1,a={y:0,d:k(o[vt])*n,h:k(o[mt])*n,m:k(o[_t])*n,s:k(o[wt])*n,ms:k(Oe(1e3*o[xt]))*n}):(o=Ye.exec(t))?(n=\"-\"===o[1]?-1:(o[1],1),a={y:He(o[2],n),M:He(o[3],n),w:He(o[4],n),d:He(o[5],n),h:He(o[6],n),m:He(o[7],n),s:He(o[8],n)}):null==a?a={}:\"object\"==typeof a&&(\"from\"in a||\"to\"in a)&&(i=function(t,e){var n;return t.isValid()&&e.isValid()?(e=qe(e,t),t.isBefore(e)?n=Ge(t,e):((n=Ge(e,t)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(Te(a.from),Te(a.to)),(a={}).ms=i.milliseconds,a.M=i.months),r=new Le(a),Be(t)&&l(t,\"_locale\")&&(r._locale=t._locale),r}function He(t,e){var n=t&&parseFloat(t.replace(\",\",\".\"));return(isNaN(n)?0:n)*e}function Ge(t,e){var n={milliseconds:0,months:0};return n.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(n.months,\"M\").isAfter(e)&&--n.months,n.milliseconds=+e-+t.clone().add(n.months,\"M\"),n}function $e(t,e){return function(n,r){var i;return null===r||isNaN(+r)||(D(e,\"moment().\"+e+\"(period, number) is deprecated. Please use moment().\"+e+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),i=n,n=r,r=i),We(this,Ve(n=\"string\"==typeof n?+n:n,r),t),this}}function We(t,e,n,r){var a=e._milliseconds,o=Oe(e._days),s=Oe(e._months);t.isValid()&&(r=null==r||r,s&&Rt(t,Ct(t,\"Month\")+s*n),o&&Nt(t,\"Date\",Ct(t,\"Date\")+o*n),a&&t._d.setTime(t._d.valueOf()+a*n),r&&i.updateOffset(t,o||s))}Ve.fn=Le.prototype,Ve.invalid=function(){return Ve(NaN)};var Ke=$e(1,\"add\"),Xe=$e(-1,\"subtract\");function Ze(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),r=t.clone().add(n,\"months\");return-(n+(e-r<0?(e-r)/(r-t.clone().add(n-1,\"months\")):(e-r)/(t.clone().add(n+1,\"months\")-r)))||0}function Je(t){var e;return void 0===t?this._locale._abbr:(null!=(e=le(t))&&(this._locale=e),this)}i.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",i.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Qe=S(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",(function(t){return void 0===t?this.localeData():this.locale(t)}));function tn(){return this._locale}function en(t,e){V(0,[t,t.length],0,e)}function nn(t,e,n,r,i){var a;return null==t?Vt(this,r,i).year:((a=Ht(t,r,i))<e&&(e=a),function(t,e,n,r,i){var a=Yt(t,e,n,r,i),o=Ut(a.year,0,a.dayOfYear);return this.year(o.getUTCFullYear()),this.month(o.getUTCMonth()),this.date(o.getUTCDate()),this}.call(this,t,e,n,r,i))}V(0,[\"gg\",2],0,(function(){return this.weekYear()%100})),V(0,[\"GG\",2],0,(function(){return this.isoWeekYear()%100})),en(\"gggg\",\"weekYear\"),en(\"ggggg\",\"weekYear\"),en(\"GGGG\",\"isoWeekYear\"),en(\"GGGGG\",\"isoWeekYear\"),B(\"weekYear\",\"gg\"),B(\"isoWeekYear\",\"GG\"),F(\"weekYear\",1),F(\"isoWeekYear\",1),ft(\"G\",at),ft(\"g\",at),ft(\"GG\",J,W),ft(\"gg\",J,W),ft(\"GGGG\",nt,X),ft(\"gggg\",nt,X),ft(\"GGGGG\",rt,Z),ft(\"ggggg\",rt,Z),gt([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],(function(t,e,n,r){e[r.substr(0,2)]=k(t)})),gt([\"gg\",\"GG\"],(function(t,e,n,r){e[r]=i.parseTwoDigitYear(t)})),V(\"Q\",0,\"Qo\",\"quarter\"),B(\"quarter\",\"Q\"),F(\"quarter\",7),ft(\"Q\",$),pt(\"Q\",(function(t,e){e[bt]=3*(k(t)-1)})),V(\"D\",[\"DD\",2],\"Do\",\"date\"),B(\"date\",\"D\"),F(\"date\",9),ft(\"D\",J),ft(\"DD\",J,W),ft(\"Do\",(function(t,e){return t?e._dayOfMonthOrdinalParse||e._ordinalParse:e._dayOfMonthOrdinalParseLenient})),pt([\"D\",\"DD\"],vt),pt(\"Do\",(function(t,e){e[vt]=k(t.match(J)[0])}));var rn=Dt(\"Date\",!0);V(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),B(\"dayOfYear\",\"DDD\"),F(\"dayOfYear\",4),ft(\"DDD\",et),ft(\"DDDD\",K),pt([\"DDD\",\"DDDD\"],(function(t,e,n){n._dayOfYear=k(t)})),V(\"m\",[\"mm\",2],0,\"minute\"),B(\"minute\",\"m\"),F(\"minute\",14),ft(\"m\",J),ft(\"mm\",J,W),pt([\"m\",\"mm\"],_t);var an=Dt(\"Minutes\",!1);V(\"s\",[\"ss\",2],0,\"second\"),B(\"second\",\"s\"),F(\"second\",15),ft(\"s\",J),ft(\"ss\",J,W),pt([\"s\",\"ss\"],wt);var on,sn=Dt(\"Seconds\",!1);for(V(\"S\",0,0,(function(){return~~(this.millisecond()/100)})),V(0,[\"SS\",2],0,(function(){return~~(this.millisecond()/10)})),V(0,[\"SSS\",3],0,\"millisecond\"),V(0,[\"SSSS\",4],0,(function(){return 10*this.millisecond()})),V(0,[\"SSSSS\",5],0,(function(){return 100*this.millisecond()})),V(0,[\"SSSSSS\",6],0,(function(){return 1e3*this.millisecond()})),V(0,[\"SSSSSSS\",7],0,(function(){return 1e4*this.millisecond()})),V(0,[\"SSSSSSSS\",8],0,(function(){return 1e5*this.millisecond()})),V(0,[\"SSSSSSSSS\",9],0,(function(){return 1e6*this.millisecond()})),B(\"millisecond\",\"ms\"),F(\"millisecond\",16),ft(\"S\",et,$),ft(\"SS\",et,W),ft(\"SSS\",et,K),on=\"SSSS\";on.length<=9;on+=\"S\")ft(on,it);function un(t,e){e[xt]=k(1e3*(\"0.\"+t))}for(on=\"S\";on.length<=9;on+=\"S\")pt(on,un);var cn=Dt(\"Milliseconds\",!1);V(\"z\",0,0,\"zoneAbbr\"),V(\"zz\",0,0,\"zoneName\");var fn=_.prototype;function ln(t){return t}fn.add=Ke,fn.calendar=function(t,e){var n=t||Te(),r=qe(n,this).startOf(\"day\"),a=i.calendarFormat(this,r)||\"sameElse\",o=e&&(C(e[a])?e[a].call(this,n):e[a]);return this.format(o||this.localeData().calendar(a,this,Te(n)))},fn.clone=function(){return new _(this)},fn.diff=function(t,e,n){var r,i,a;if(!this.isValid())return NaN;if(!(r=qe(t,this)).isValid())return NaN;switch(i=6e4*(r.utcOffset()-this.utcOffset()),e=O(e)){case\"year\":a=Ze(this,r)/12;break;case\"month\":a=Ze(this,r);break;case\"quarter\":a=Ze(this,r)/3;break;case\"second\":a=(this-r)/1e3;break;case\"minute\":a=(this-r)/6e4;break;case\"hour\":a=(this-r)/36e5;break;case\"day\":a=(this-r-i)/864e5;break;case\"week\":a=(this-r-i)/6048e5;break;default:a=this-r}return n?a:x(a)},fn.endOf=function(t){return void 0===(t=O(t))||\"millisecond\"===t?this:(\"date\"===t&&(t=\"day\"),this.startOf(t).add(1,\"isoWeek\"===t?\"week\":t).subtract(1,\"ms\"))},fn.format=function(t){t||(t=this.isUtc()?i.defaultFormatUtc:i.defaultFormat);var e=H(this,t);return this.localeData().postformat(e)},fn.from=function(t,e){return this.isValid()&&(w(t)&&t.isValid()||Te(t).isValid())?Ve({to:this,from:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},fn.fromNow=function(t){return this.from(Te(),t)},fn.to=function(t,e){return this.isValid()&&(w(t)&&t.isValid()||Te(t).isValid())?Ve({from:this,to:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},fn.toNow=function(t){return this.to(Te(),t)},fn.get=function(t){return C(this[t=O(t)])?this[t]():this},fn.invalidAt=function(){return p(this).overflow},fn.isAfter=function(t,e){var n=w(t)?t:Te(t);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(e=O(s(e)?\"millisecond\":e))?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(e).valueOf())},fn.isBefore=function(t,e){var n=w(t)?t:Te(t);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(e=O(s(e)?\"millisecond\":e))?this.valueOf()<n.valueOf():this.clone().endOf(e).valueOf()<n.valueOf())},fn.isBetween=function(t,e,n,r){return(\"(\"===(r=r||\"()\")[0]?this.isAfter(t,n):!this.isBefore(t,n))&&(\")\"===r[1]?this.isBefore(e,n):!this.isAfter(e,n))},fn.isSame=function(t,e){var n,r=w(t)?t:Te(t);return!(!this.isValid()||!r.isValid())&&(\"millisecond\"===(e=O(e||\"millisecond\"))?this.valueOf()===r.valueOf():(n=r.valueOf(),this.clone().startOf(e).valueOf()<=n&&n<=this.clone().endOf(e).valueOf()))},fn.isSameOrAfter=function(t,e){return this.isSame(t,e)||this.isAfter(t,e)},fn.isSameOrBefore=function(t,e){return this.isSame(t,e)||this.isBefore(t,e)},fn.isValid=function(){return g(this)},fn.lang=Qe,fn.locale=Je,fn.localeData=tn,fn.max=Ce,fn.min=De,fn.parsingFlags=function(){return h({},p(this))},fn.set=function(t,e){if(\"object\"==typeof t)for(var n=function(t){var e=[];for(var n in t)e.push({unit:n,priority:P[n]});return e.sort((function(t,e){return t.priority-e.priority})),e}(t=R(t)),r=0;r<n.length;r++)this[n[r].unit](t[n[r].unit]);else if(C(this[t=O(t)]))return this[t](e);return this},fn.startOf=function(t){switch(t=O(t)){case\"year\":this.month(0);case\"quarter\":case\"month\":this.date(1);case\"week\":case\"isoWeek\":case\"day\":case\"date\":this.hours(0);case\"hour\":this.minutes(0);case\"minute\":this.seconds(0);case\"second\":this.milliseconds(0)}return\"week\"===t&&this.weekday(0),\"isoWeek\"===t&&this.isoWeekday(1),\"quarter\"===t&&this.month(3*Math.floor(this.month()/3)),this},fn.subtract=Xe,fn.toArray=function(){var t=this;return[t.year(),t.month(),t.date(),t.hour(),t.minute(),t.second(),t.millisecond()]},fn.toObject=function(){var t=this;return{years:t.year(),months:t.month(),date:t.date(),hours:t.hours(),minutes:t.minutes(),seconds:t.seconds(),milliseconds:t.milliseconds()}},fn.toDate=function(){return new Date(this.valueOf())},fn.toISOString=function(t){if(!this.isValid())return null;var e=!0!==t,n=e?this.clone().utc():this;return n.year()<0||9999<n.year()?H(n,e?\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ\"):C(Date.prototype.toISOString)?e?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace(\"Z\",H(n,\"Z\")):H(n,e?\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYY-MM-DD[T]HH:mm:ss.SSSZ\")},fn.inspect=function(){if(!this.isValid())return\"moment.invalid(/* \"+this._i+\" */)\";var t=\"moment\",e=\"\";this.isLocal()||(t=0===this.utcOffset()?\"moment.utc\":\"moment.parseZone\",e=\"Z\");var n=\"[\"+t+'(\"]',r=0<=this.year()&&this.year()<=9999?\"YYYY\":\"YYYYYY\",i=e+'[\")]';return this.format(n+r+\"-MM-DD[T]HH:mm:ss.SSS\"+i)},fn.toJSON=function(){return this.isValid()?this.toISOString():null},fn.toString=function(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")},fn.unix=function(){return Math.floor(this.valueOf()/1e3)},fn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},fn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},fn.year=Tt,fn.isLeapYear=function(){return St(this.year())},fn.weekYear=function(t){return nn.call(this,t,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},fn.isoWeekYear=function(t){return nn.call(this,t,this.isoWeek(),this.isoWeekday(),1,4)},fn.quarter=fn.quarters=function(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)},fn.month=Pt,fn.daysInMonth=function(){return It(this.year(),this.month())},fn.week=fn.weeks=function(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),\"d\")},fn.isoWeek=fn.isoWeeks=function(t){var e=Vt(this,1,4).week;return null==t?e:this.add(7*(t-e),\"d\")},fn.weeksInYear=function(){var t=this.localeData()._week;return Ht(this.year(),t.dow,t.doy)},fn.isoWeeksInYear=function(){return Ht(this.year(),1,4)},fn.date=rn,fn.day=fn.days=function(t){if(!this.isValid())return null!=t?this:NaN;var e,n,r=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(e=t,n=this.localeData(),t=\"string\"!=typeof e?e:isNaN(e)?\"number\"==typeof(e=n.weekdaysParse(e))?e:null:parseInt(e,10),this.add(t-r,\"d\")):r},fn.weekday=function(t){if(!this.isValid())return null!=t?this:NaN;var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,\"d\")},fn.isoWeekday=function(t){if(!this.isValid())return null!=t?this:NaN;if(null!=t){var e=(n=t,r=this.localeData(),\"string\"==typeof n?r.weekdaysParse(n)%7||7:isNaN(n)?null:n);return this.day(this.day()%7?e:e-7)}return this.day()||7;var n,r},fn.dayOfYear=function(t){var e=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==t?e:this.add(t-e,\"d\")},fn.hour=fn.hours=re,fn.minute=fn.minutes=an,fn.second=fn.seconds=sn,fn.millisecond=fn.milliseconds=cn,fn.utcOffset=function(t,e,n){var r,a=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null!=t){if(\"string\"==typeof t){if(null===(t=Fe(st,t)))return this}else Math.abs(t)<16&&!n&&(t*=60);return!this._isUTC&&e&&(r=je(this)),this._offset=t,this._isUTC=!0,null!=r&&this.add(r,\"m\"),a!==t&&(!e||this._changeInProgress?We(this,Ve(t-a,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,i.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?a:je(this)},fn.utc=function(t){return this.utcOffset(0,t)},fn.local=function(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(je(this),\"m\")),this},fn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if(\"string\"==typeof this._i){var t=Fe(ot,this._i);null!=t?this.utcOffset(t):this.utcOffset(0,!0)}return this},fn.hasAlignedHourOffset=function(t){return!!this.isValid()&&(t=t?Te(t).utcOffset():0,(this.utcOffset()-t)%60==0)},fn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},fn.isLocal=function(){return!!this.isValid()&&!this._isUTC},fn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},fn.isUtc=Ue,fn.isUTC=Ue,fn.zoneAbbr=function(){return this._isUTC?\"UTC\":\"\"},fn.zoneName=function(){return this._isUTC?\"Coordinated Universal Time\":\"\"},fn.dates=S(\"dates accessor is deprecated. Use date instead.\",rn),fn.months=S(\"months accessor is deprecated. Use month instead\",Pt),fn.years=S(\"years accessor is deprecated. Use year instead\",Tt),fn.zone=S(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",(function(t,e){return null!=t?(\"string\"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()})),fn.isDSTShifted=S(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",(function(){if(!s(this._isDSTShifted))return this._isDSTShifted;var t={};if(v(t,this),(t=Se(t))._a){var e=t._isUTC?d(t._a):Te(t._a);this._isDSTShifted=this.isValid()&&0<E(t._a,e.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted}));var hn=I.prototype;function dn(t,e,n,r){var i=le(),a=d().set(r,e);return i[n](a,t)}function pn(t,e,n){if(u(t)&&(e=t,t=void 0),t=t||\"\",null!=e)return dn(t,e,n,\"month\");var r,i=[];for(r=0;r<12;r++)i[r]=dn(t,r,n,\"month\");return i}function gn(t,e,n,r){\"boolean\"==typeof t?u(e)&&(n=e,e=void 0):(e=t,t=!1,u(n=e)&&(n=e,e=void 0)),e=e||\"\";var i,a=le(),o=t?a._week.dow:0;if(null!=n)return dn(e,(n+o)%7,r,\"day\");var s=[];for(i=0;i<7;i++)s[i]=dn(e,(i+o)%7,r,\"day\");return s}hn.calendar=function(t,e,n){var r=this._calendar[t]||this._calendar.sameElse;return C(r)?r.call(e,n):r},hn.longDateFormat=function(t){var e=this._longDateFormat[t],n=this._longDateFormat[t.toUpperCase()];return e||!n?e:(this._longDateFormat[t]=n.replace(/MMMM|MM|DD|dddd/g,(function(t){return t.slice(1)})),this._longDateFormat[t])},hn.invalidDate=function(){return this._invalidDate},hn.ordinal=function(t){return this._ordinal.replace(\"%d\",t)},hn.preparse=ln,hn.postformat=ln,hn.relativeTime=function(t,e,n,r){var i=this._relativeTime[n];return C(i)?i(t,e,n,r):i.replace(/%d/i,t)},hn.pastFuture=function(t,e){var n=this._relativeTime[0<t?\"future\":\"past\"];return C(n)?n(e):n.replace(/%s/i,e)},hn.set=function(t){var e,n;for(n in t)C(e=t[n])?this[n]=e:this[\"_\"+n]=e;this._config=t,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+\"|\"+/\\d{1,2}/.source)},hn.months=function(t,e){return t?a(this._months)?this._months[t.month()]:this._months[(this._months.isFormat||Lt).test(e)?\"format\":\"standalone\"][t.month()]:a(this._months)?this._months:this._months.standalone},hn.monthsShort=function(t,e){return t?a(this._monthsShort)?this._monthsShort[t.month()]:this._monthsShort[Lt.test(e)?\"format\":\"standalone\"][t.month()]:a(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},hn.monthsParse=function(t,e,n){var r,i,a;if(this._monthsParseExact)return function(t,e,n){var r,i,a,o=t.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],r=0;r<12;++r)a=d([2e3,r]),this._shortMonthsParse[r]=this.monthsShort(a,\"\").toLocaleLowerCase(),this._longMonthsParse[r]=this.months(a,\"\").toLocaleLowerCase();return n?\"MMM\"===e?-1!==(i=Mt.call(this._shortMonthsParse,o))?i:null:-1!==(i=Mt.call(this._longMonthsParse,o))?i:null:\"MMM\"===e?-1!==(i=Mt.call(this._shortMonthsParse,o))?i:-1!==(i=Mt.call(this._longMonthsParse,o))?i:null:-1!==(i=Mt.call(this._longMonthsParse,o))?i:-1!==(i=Mt.call(this._shortMonthsParse,o))?i:null}.call(this,t,e,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),r=0;r<12;r++){if(i=d([2e3,r]),n&&!this._longMonthsParse[r]&&(this._longMonthsParse[r]=new RegExp(\"^\"+this.months(i,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[r]=new RegExp(\"^\"+this.monthsShort(i,\"\").replace(\".\",\"\")+\"$\",\"i\")),n||this._monthsParse[r]||(a=\"^\"+this.months(i,\"\")+\"|^\"+this.monthsShort(i,\"\"),this._monthsParse[r]=new RegExp(a.replace(\".\",\"\"),\"i\")),n&&\"MMMM\"===e&&this._longMonthsParse[r].test(t))return r;if(n&&\"MMM\"===e&&this._shortMonthsParse[r].test(t))return r;if(!n&&this._monthsParse[r].test(t))return r}},hn.monthsRegex=function(t){return this._monthsParseExact?(l(this,\"_monthsRegex\")||jt.call(this),t?this._monthsStrictRegex:this._monthsRegex):(l(this,\"_monthsRegex\")||(this._monthsRegex=qt),this._monthsStrictRegex&&t?this._monthsStrictRegex:this._monthsRegex)},hn.monthsShortRegex=function(t){return this._monthsParseExact?(l(this,\"_monthsRegex\")||jt.call(this),t?this._monthsShortStrictRegex:this._monthsShortRegex):(l(this,\"_monthsShortRegex\")||(this._monthsShortRegex=Ft),this._monthsShortStrictRegex&&t?this._monthsShortStrictRegex:this._monthsShortRegex)},hn.week=function(t){return Vt(t,this._week.dow,this._week.doy).week},hn.firstDayOfYear=function(){return this._week.doy},hn.firstDayOfWeek=function(){return this._week.dow},hn.weekdays=function(t,e){return t?a(this._weekdays)?this._weekdays[t.day()]:this._weekdays[this._weekdays.isFormat.test(e)?\"format\":\"standalone\"][t.day()]:a(this._weekdays)?this._weekdays:this._weekdays.standalone},hn.weekdaysMin=function(t){return t?this._weekdaysMin[t.day()]:this._weekdaysMin},hn.weekdaysShort=function(t){return t?this._weekdaysShort[t.day()]:this._weekdaysShort},hn.weekdaysParse=function(t,e,n){var r,i,a;if(this._weekdaysParseExact)return function(t,e,n){var r,i,a,o=t.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],r=0;r<7;++r)a=d([2e3,1]).day(r),this._minWeekdaysParse[r]=this.weekdaysMin(a,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[r]=this.weekdaysShort(a,\"\").toLocaleLowerCase(),this._weekdaysParse[r]=this.weekdays(a,\"\").toLocaleLowerCase();return n?\"dddd\"===e?-1!==(i=Mt.call(this._weekdaysParse,o))?i:null:\"ddd\"===e?-1!==(i=Mt.call(this._shortWeekdaysParse,o))?i:null:-1!==(i=Mt.call(this._minWeekdaysParse,o))?i:null:\"dddd\"===e?-1!==(i=Mt.call(this._weekdaysParse,o))?i:-1!==(i=Mt.call(this._shortWeekdaysParse,o))?i:-1!==(i=Mt.call(this._minWeekdaysParse,o))?i:null:\"ddd\"===e?-1!==(i=Mt.call(this._shortWeekdaysParse,o))?i:-1!==(i=Mt.call(this._weekdaysParse,o))?i:-1!==(i=Mt.call(this._minWeekdaysParse,o))?i:null:-1!==(i=Mt.call(this._minWeekdaysParse,o))?i:-1!==(i=Mt.call(this._weekdaysParse,o))?i:-1!==(i=Mt.call(this._shortWeekdaysParse,o))?i:null}.call(this,t,e,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),r=0;r<7;r++){if(i=d([2e3,1]).day(r),n&&!this._fullWeekdaysParse[r]&&(this._fullWeekdaysParse[r]=new RegExp(\"^\"+this.weekdays(i,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._shortWeekdaysParse[r]=new RegExp(\"^\"+this.weekdaysShort(i,\"\").replace(\".\",\".?\")+\"$\",\"i\"),this._minWeekdaysParse[r]=new RegExp(\"^\"+this.weekdaysMin(i,\"\").replace(\".\",\".?\")+\"$\",\"i\")),this._weekdaysParse[r]||(a=\"^\"+this.weekdays(i,\"\")+\"|^\"+this.weekdaysShort(i,\"\")+\"|^\"+this.weekdaysMin(i,\"\"),this._weekdaysParse[r]=new RegExp(a.replace(\".\",\"\"),\"i\")),n&&\"dddd\"===e&&this._fullWeekdaysParse[r].test(t))return r;if(n&&\"ddd\"===e&&this._shortWeekdaysParse[r].test(t))return r;if(n&&\"dd\"===e&&this._minWeekdaysParse[r].test(t))return r;if(!n&&this._weekdaysParse[r].test(t))return r}},hn.weekdaysRegex=function(t){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jt.call(this),t?this._weekdaysStrictRegex:this._weekdaysRegex):(l(this,\"_weekdaysRegex\")||(this._weekdaysRegex=Kt),this._weekdaysStrictRegex&&t?this._weekdaysStrictRegex:this._weekdaysRegex)},hn.weekdaysShortRegex=function(t){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jt.call(this),t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(l(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=Xt),this._weekdaysShortStrictRegex&&t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},hn.weekdaysMinRegex=function(t){return this._weekdaysParseExact?(l(this,\"_weekdaysRegex\")||Jt.call(this),t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(l(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=Zt),this._weekdaysMinStrictRegex&&t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},hn.isPM=function(t){return\"p\"===(t+\"\").toLowerCase().charAt(0)},hn.meridiem=function(t,e,n){return 11<t?n?\"pm\":\"PM\":n?\"am\":\"AM\"},ce(\"en\",{dayOfMonthOrdinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10;return t+(1===k(t%100/10)?\"th\":1===e?\"st\":2===e?\"nd\":3===e?\"rd\":\"th\")}}),i.lang=S(\"moment.lang is deprecated. Use moment.locale instead.\",ce),i.langData=S(\"moment.langData is deprecated. Use moment.localeData instead.\",le);var yn=Math.abs;function bn(t,e,n,r){var i=Ve(e,n);return t._milliseconds+=r*i._milliseconds,t._days+=r*i._days,t._months+=r*i._months,t._bubble()}function vn(t){return t<0?Math.floor(t):Math.ceil(t)}function mn(t){return 4800*t/146097}function _n(t){return 146097*t/4800}function wn(t){return function(){return this.as(t)}}var xn=wn(\"ms\"),kn=wn(\"s\"),En=wn(\"m\"),An=wn(\"h\"),Sn=wn(\"d\"),Mn=wn(\"w\"),Tn=wn(\"M\"),Dn=wn(\"y\");function Cn(t){return function(){return this.isValid()?this._data[t]:NaN}}var Nn=Cn(\"milliseconds\"),In=Cn(\"seconds\"),Ln=Cn(\"minutes\"),Bn=Cn(\"hours\"),On=Cn(\"days\"),Rn=Cn(\"months\"),Pn=Cn(\"years\"),Fn=Math.round,qn={ss:44,s:45,m:45,h:22,d:26,M:11},jn=Math.abs;function Un(t){return(0<t)-(t<0)||+t}function zn(){if(!this.isValid())return this.localeData().invalidDate();var t,e,n=jn(this._milliseconds)/1e3,r=jn(this._days),i=jn(this._months);e=x((t=x(n/60))/60),n%=60,t%=60;var a=x(i/12),o=i%=12,s=r,u=e,c=t,f=n?n.toFixed(3).replace(/\\.?0+$/,\"\"):\"\",l=this.asSeconds();if(!l)return\"P0D\";var h=l<0?\"-\":\"\",d=Un(this._months)!==Un(l)?\"-\":\"\",p=Un(this._days)!==Un(l)?\"-\":\"\",g=Un(this._milliseconds)!==Un(l)?\"-\":\"\";return h+\"P\"+(a?d+a+\"Y\":\"\")+(o?d+o+\"M\":\"\")+(s?p+s+\"D\":\"\")+(u||c||f?\"T\":\"\")+(u?g+u+\"H\":\"\")+(c?g+c+\"M\":\"\")+(f?g+f+\"S\":\"\")}var Yn=Le.prototype;return Yn.isValid=function(){return this._isValid},Yn.abs=function(){var t=this._data;return this._milliseconds=yn(this._milliseconds),this._days=yn(this._days),this._months=yn(this._months),t.milliseconds=yn(t.milliseconds),t.seconds=yn(t.seconds),t.minutes=yn(t.minutes),t.hours=yn(t.hours),t.months=yn(t.months),t.years=yn(t.years),this},Yn.add=function(t,e){return bn(this,t,e,1)},Yn.subtract=function(t,e){return bn(this,t,e,-1)},Yn.as=function(t){if(!this.isValid())return NaN;var e,n,r=this._milliseconds;if(\"month\"===(t=O(t))||\"year\"===t)return e=this._days+r/864e5,n=this._months+mn(e),\"month\"===t?n:n/12;switch(e=this._days+Math.round(_n(this._months)),t){case\"week\":return e/7+r/6048e5;case\"day\":return e+r/864e5;case\"hour\":return 24*e+r/36e5;case\"minute\":return 1440*e+r/6e4;case\"second\":return 86400*e+r/1e3;case\"millisecond\":return Math.floor(864e5*e)+r;default:throw new Error(\"Unknown unit \"+t)}},Yn.asMilliseconds=xn,Yn.asSeconds=kn,Yn.asMinutes=En,Yn.asHours=An,Yn.asDays=Sn,Yn.asWeeks=Mn,Yn.asMonths=Tn,Yn.asYears=Dn,Yn.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*k(this._months/12):NaN},Yn._bubble=function(){var t,e,n,r,i,a=this._milliseconds,o=this._days,s=this._months,u=this._data;return 0<=a&&0<=o&&0<=s||a<=0&&o<=0&&s<=0||(a+=864e5*vn(_n(s)+o),s=o=0),u.milliseconds=a%1e3,t=x(a/1e3),u.seconds=t%60,e=x(t/60),u.minutes=e%60,n=x(e/60),u.hours=n%24,s+=i=x(mn(o+=x(n/24))),o-=vn(_n(i)),r=x(s/12),s%=12,u.days=o,u.months=s,u.years=r,this},Yn.clone=function(){return Ve(this)},Yn.get=function(t){return t=O(t),this.isValid()?this[t+\"s\"]():NaN},Yn.milliseconds=Nn,Yn.seconds=In,Yn.minutes=Ln,Yn.hours=Bn,Yn.days=On,Yn.weeks=function(){return x(this.days()/7)},Yn.months=Rn,Yn.years=Pn,Yn.humanize=function(t){if(!this.isValid())return this.localeData().invalidDate();var e,n,r,i,a,o,s,u,c,f,l=this.localeData(),h=(e=!t,n=l,r=Ve(this).abs(),i=Fn(r.as(\"s\")),a=Fn(r.as(\"m\")),o=Fn(r.as(\"h\")),s=Fn(r.as(\"d\")),u=Fn(r.as(\"M\")),c=Fn(r.as(\"y\")),(f=i<=qn.ss&&[\"s\",i]||i<qn.s&&[\"ss\",i]||a<=1&&[\"m\"]||a<qn.m&&[\"mm\",a]||o<=1&&[\"h\"]||o<qn.h&&[\"hh\",o]||s<=1&&[\"d\"]||s<qn.d&&[\"dd\",s]||u<=1&&[\"M\"]||u<qn.M&&[\"MM\",u]||c<=1&&[\"y\"]||[\"yy\",c])[2]=e,f[3]=0<+this,f[4]=n,function(t,e,n,r,i){return i.relativeTime(e||1,!!n,t,r)}.apply(null,f));return t&&(h=l.pastFuture(+this,h)),l.postformat(h)},Yn.toISOString=zn,Yn.toString=zn,Yn.toJSON=zn,Yn.locale=Je,Yn.localeData=tn,Yn.toIsoString=S(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",zn),Yn.lang=Qe,V(\"X\",0,0,\"unix\"),V(\"x\",0,0,\"valueOf\"),ft(\"x\",at),ft(\"X\",/[+-]?\\d+(\\.\\d{1,3})?/),pt(\"X\",(function(t,e,n){n._d=new Date(1e3*parseFloat(t,10))})),pt(\"x\",(function(t,e,n){n._d=new Date(k(t))})),i.version=\"2.22.1\",e=Te,i.fn=fn,i.min=function(){return Ne(\"isBefore\",[].slice.call(arguments,0))},i.max=function(){return Ne(\"isAfter\",[].slice.call(arguments,0))},i.now=function(){return Date.now?Date.now():+new Date},i.utc=d,i.unix=function(t){return Te(1e3*t)},i.months=function(t,e){return pn(t,e,\"months\")},i.isDate=c,i.locale=ce,i.invalid=y,i.duration=Ve,i.isMoment=w,i.weekdays=function(t,e,n){return gn(t,e,n,\"weekdays\")},i.parseZone=function(){return Te.apply(null,arguments).parseZone()},i.localeData=le,i.isDuration=Be,i.monthsShort=function(t,e){return pn(t,e,\"monthsShort\")},i.weekdaysMin=function(t,e,n){return gn(t,e,n,\"weekdaysMin\")},i.defineLocale=fe,i.updateLocale=function(t,e){if(null!=e){var n,r,i=ie;null!=(r=ue(t))&&(i=r._config),(n=new I(e=N(i,e))).parentLocale=ae[t],ae[t]=n,ce(t)}else null!=ae[t]&&(null!=ae[t].parentLocale?ae[t]=ae[t].parentLocale:null!=ae[t]&&delete ae[t]);return ae[t]},i.locales=function(){return M(ae)},i.weekdaysShort=function(t,e,n){return gn(t,e,n,\"weekdaysShort\")},i.normalizeUnits=O,i.relativeTimeRounding=function(t){return void 0===t?Fn:\"function\"==typeof t&&(Fn=t,!0)},i.relativeTimeThreshold=function(t,e){return void 0!==qn[t]&&(void 0===e?qn[t]:(qn[t]=e,\"s\"===t&&(qn.ss=e-1),!0))},i.calendarFormat=function(t,e){var n=t.diff(e,\"days\",!0);return n<-6?\"sameElse\":n<-1?\"lastWeek\":n<0?\"lastDay\":n<1?\"sameDay\":n<2?\"nextDay\":n<7?\"nextWeek\":\"sameElse\"},i.prototype=fn,i.HTML5_FMT={DATETIME_LOCAL:\"YYYY-MM-DDTHH:mm\",DATETIME_LOCAL_SECONDS:\"YYYY-MM-DDTHH:mm:ss\",DATETIME_LOCAL_MS:\"YYYY-MM-DDTHH:mm:ss.SSS\",DATE:\"YYYY-MM-DD\",TIME:\"HH:mm\",TIME_SECONDS:\"HH:mm:ss\",TIME_MS:\"HH:mm:ss.SSS\",WEEK:\"YYYY-[W]WW\",MONTH:\"YYYY-MM\"},i}()}).call(this,n(9)(t))},function(t,e,n){var r=n(37),i=n(93);t.exports=function(t){return null!=t&&i(t.length)&&!r(t)}},function(t,e,n){var r=n(293),i=n(303),a=n(34),o=n(6),s=n(310);t.exports=function(t){return\"function\"==typeof t?t:null==t?a:\"object\"==typeof t?o(t)?i(t[0],t[1]):r(t):s(t)}},function(t,e,n){var r=n(236);t.exports={Graph:r.Graph,json:n(338),alg:n(339),version:r.version}},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[6,8,10,11,12,13,14,15,16,18,20],n=[1,9],r=[1,10],i=[1,11],a=[1,12],o=[1,13],s=[1,14],u=[1,16],c=[1,17],f={trace:function(){},yy:{},symbols_:{error:2,start:3,gantt:4,document:5,EOF:6,line:7,SPACE:8,statement:9,NL:10,dateFormat:11,inclusiveEndDates:12,axisFormat:13,excludes:14,title:15,section:16,clickStatement:17,taskTxt:18,taskData:19,click:20,callbackname:21,callbackargs:22,href:23,clickStatementDebug:24,$accept:0,$end:1},terminals_:{2:\"error\",4:\"gantt\",6:\"EOF\",8:\"SPACE\",10:\"NL\",11:\"dateFormat\",12:\"inclusiveEndDates\",13:\"axisFormat\",14:\"excludes\",15:\"title\",16:\"section\",18:\"taskTxt\",19:\"taskData\",20:\"click\",21:\"callbackname\",22:\"callbackargs\",23:\"href\"},productions_:[0,[3,3],[5,0],[5,2],[7,2],[7,1],[7,1],[7,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[9,2],[17,2],[17,3],[17,3],[17,4],[17,3],[17,4],[17,2],[24,2],[24,3],[24,3],[24,4],[24,3],[24,4],[24,2]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 1:return a[s-1];case 2:this.$=[];break;case 3:a[s-1].push(a[s]),this.$=a[s-1];break;case 4:case 5:this.$=a[s];break;case 6:case 7:this.$=[];break;case 8:r.setDateFormat(a[s].substr(11)),this.$=a[s].substr(11);break;case 9:r.enableInclusiveEndDates(),this.$=a[s].substr(18);break;case 10:r.setAxisFormat(a[s].substr(11)),this.$=a[s].substr(11);break;case 11:r.setExcludes(a[s].substr(9)),this.$=a[s].substr(9);break;case 12:r.setTitle(a[s].substr(6)),this.$=a[s].substr(6);break;case 13:r.addSection(a[s].substr(8)),this.$=a[s].substr(8);break;case 15:r.addTask(a[s-1],a[s]),this.$=\"task\";break;case 16:this.$=a[s-1],r.setClickEvent(a[s-1],a[s],null);break;case 17:this.$=a[s-2],r.setClickEvent(a[s-2],a[s-1],a[s]);break;case 18:this.$=a[s-2],r.setClickEvent(a[s-2],a[s-1],null),r.setLink(a[s-2],a[s]);break;case 19:this.$=a[s-3],r.setClickEvent(a[s-3],a[s-2],a[s-1]),r.setLink(a[s-3],a[s]);break;case 20:this.$=a[s-2],r.setClickEvent(a[s-2],a[s],null),r.setLink(a[s-2],a[s-1]);break;case 21:this.$=a[s-3],r.setClickEvent(a[s-3],a[s-1],a[s]),r.setLink(a[s-3],a[s-2]);break;case 22:this.$=a[s-1],r.setLink(a[s-1],a[s]);break;case 23:case 29:this.$=a[s-1]+\" \"+a[s];break;case 24:case 25:case 27:this.$=a[s-2]+\" \"+a[s-1]+\" \"+a[s];break;case 26:case 28:this.$=a[s-3]+\" \"+a[s-2]+\" \"+a[s-1]+\" \"+a[s]}},table:[{3:1,4:[1,2]},{1:[3]},t(e,[2,2],{5:3}),{6:[1,4],7:5,8:[1,6],9:7,10:[1,8],11:n,12:r,13:i,14:a,15:o,16:s,17:15,18:u,20:c},t(e,[2,7],{1:[2,1]}),t(e,[2,3]),{9:18,11:n,12:r,13:i,14:a,15:o,16:s,17:15,18:u,20:c},t(e,[2,5]),t(e,[2,6]),t(e,[2,8]),t(e,[2,9]),t(e,[2,10]),t(e,[2,11]),t(e,[2,12]),t(e,[2,13]),t(e,[2,14]),{19:[1,19]},{21:[1,20],23:[1,21]},t(e,[2,4]),t(e,[2,15]),t(e,[2,16],{22:[1,22],23:[1,23]}),t(e,[2,22],{21:[1,24]}),t(e,[2,17],{23:[1,25]}),t(e,[2,18]),t(e,[2,20],{22:[1,26]}),t(e,[2,19]),t(e,[2,21])],defaultActions:{},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},l={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{\"case-insensitive\":!0},performAction:function(t,e,n,r){switch(n){case 0:return 10;case 1:case 2:case 3:break;case 4:this.begin(\"href\");break;case 5:this.popState();break;case 6:return 23;case 7:this.begin(\"callbackname\");break;case 8:this.popState();break;case 9:this.popState(),this.begin(\"callbackargs\");break;case 10:return 21;case 11:this.popState();break;case 12:return 22;case 13:this.begin(\"click\");break;case 14:this.popState();break;case 15:return 20;case 16:return 4;case 17:return 11;case 18:return 12;case 19:return 13;case 20:return 14;case 21:return\"date\";case 22:return 15;case 23:return 16;case 24:return 18;case 25:return 19;case 26:return\":\";case 27:return 6;case 28:return\"INVALID\"}},rules:[/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:href[\\s]+[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:call[\\s]+)/i,/^(?:\\([\\s]*\\))/i,/^(?:\\()/i,/^(?:[^(]*)/i,/^(?:\\))/i,/^(?:[^)]*)/i,/^(?:click[\\s]+)/i,/^(?:[\\s\\n])/i,/^(?:[^\\s\\n]*)/i,/^(?:gantt\\b)/i,/^(?:dateFormat\\s[^#\\n;]+)/i,/^(?:inclusiveEndDates\\b)/i,/^(?:axisFormat\\s[^#\\n;]+)/i,/^(?:excludes\\s[^#\\n;]+)/i,/^(?:\\d\\d\\d\\d-\\d\\d-\\d\\d\\b)/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:section\\s[^#:\\n;]+)/i,/^(?:[^#:\\n;]+)/i,/^(?::[^#\\n;]+)/i,/^(?::)/i,/^(?:$)/i,/^(?:.)/i],conditions:{callbackargs:{rules:[11,12],inclusive:!1},callbackname:{rules:[8,9,10],inclusive:!1},href:{rules:[5,6],inclusive:!1},click:{rules:[14,15],inclusive:!1},INITIAL:{rules:[0,1,2,3,4,7,13,16,17,18,19,20,21,22,23,24,25,26,27,28],inclusive:!0}}};function h(){this.yy={}}return f.lexer=l,h.prototype=f,f.Parser=h,new h}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){var r=n(134),i=n(95),a=n(23);t.exports=function(t){return a(t)?r(t):i(t)}},function(t,e){},function(t,e,n){(function(t){function n(t,e){for(var n=0,r=t.length-1;r>=0;r--){var i=t[r];\".\"===i?t.splice(r,1):\"..\"===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift(\"..\");return t}function r(t,e){if(t.filter)return t.filter(e);for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}e.resolve=function(){for(var e=\"\",i=!1,a=arguments.length-1;a>=-1&&!i;a--){var o=a>=0?arguments[a]:t.cwd();if(\"string\"!=typeof o)throw new TypeError(\"Arguments to path.resolve must be strings\");o&&(e=o+\"/\"+e,i=\"/\"===o.charAt(0))}return(i?\"/\":\"\")+(e=n(r(e.split(\"/\"),(function(t){return!!t})),!i).join(\"/\"))||\".\"},e.normalize=function(t){var a=e.isAbsolute(t),o=\"/\"===i(t,-1);return(t=n(r(t.split(\"/\"),(function(t){return!!t})),!a).join(\"/\"))||a||(t=\".\"),t&&o&&(t+=\"/\"),(a?\"/\":\"\")+t},e.isAbsolute=function(t){return\"/\"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(r(t,(function(t,e){if(\"string\"!=typeof t)throw new TypeError(\"Arguments to path.join must be strings\");return t})).join(\"/\"))},e.relative=function(t,n){function r(t){for(var e=0;e<t.length&&\"\"===t[e];e++);for(var n=t.length-1;n>=0&&\"\"===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var i=r(t.split(\"/\")),a=r(n.split(\"/\")),o=Math.min(i.length,a.length),s=o,u=0;u<o;u++)if(i[u]!==a[u]){s=u;break}var c=[];for(u=s;u<i.length;u++)c.push(\"..\");return(c=c.concat(a.slice(s))).join(\"/\")},e.sep=\"/\",e.delimiter=\":\",e.dirname=function(t){if(\"string\"!=typeof t&&(t+=\"\"),0===t.length)return\".\";for(var e=t.charCodeAt(0),n=47===e,r=-1,i=!0,a=t.length-1;a>=1;--a)if(47===(e=t.charCodeAt(a))){if(!i){r=a;break}}else i=!1;return-1===r?n?\"/\":\".\":n&&1===r?\"/\":t.slice(0,r)},e.basename=function(t,e){var n=function(t){\"string\"!=typeof t&&(t+=\"\");var e,n=0,r=-1,i=!0;for(e=t.length-1;e>=0;--e)if(47===t.charCodeAt(e)){if(!i){n=e+1;break}}else-1===r&&(i=!1,r=e+1);return-1===r?\"\":t.slice(n,r)}(t);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){\"string\"!=typeof t&&(t+=\"\");for(var e=-1,n=0,r=-1,i=!0,a=0,o=t.length-1;o>=0;--o){var s=t.charCodeAt(o);if(47!==s)-1===r&&(i=!1,r=o+1),46===s?-1===e?e=o:1!==a&&(a=1):-1!==e&&(a=-1);else if(!i){n=o+1;break}}return-1===e||-1===r||0===a||1===a&&e===r-1&&e===n+1?\"\":t.slice(e,r)};var i=\"b\"===\"ab\".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(this,n(7))},function(t,e,n){var r;if(!r)try{r=n(0)}catch(t){}r||(r=window.d3),t.exports=r},function(t,e,n){var r=n(3).Buffer,i=n(112).Transform,a=n(117).StringDecoder;function o(t){i.call(this),this.hashMode=\"string\"==typeof t,this.hashMode?this[t]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}n(2)(o,i),o.prototype.update=function(t,e,n){\"string\"==typeof t&&(t=r.from(t,e));var i=this._update(t);return this.hashMode?this:(n&&(i=this._toString(i,n)),i)},o.prototype.setAutoPadding=function(){},o.prototype.getAuthTag=function(){throw new Error(\"trying to get auth tag in unsupported state\")},o.prototype.setAuthTag=function(){throw new Error(\"trying to set auth tag in unsupported state\")},o.prototype.setAAD=function(){throw new Error(\"trying to set aad in unsupported state\")},o.prototype._transform=function(t,e,n){var r;try{this.hashMode?this._update(t):this.push(this._update(t))}catch(t){r=t}finally{n(r)}},o.prototype._flush=function(t){var e;try{this.push(this.__final())}catch(t){e=t}t(e)},o.prototype._finalOrDigest=function(t){var e=this.__final()||r.alloc(0);return t&&(e=this._toString(e,t,!0)),e},o.prototype._toString=function(t,e,n){if(this._decoder||(this._decoder=new a(e),this._encoding=e),this._encoding!==e)throw new Error(\"can't switch encodings\");var r=this._decoder.write(t);return n&&(r+=this._decoder.end()),r},t.exports=o},function(t,e,n){var r=n(248),i=n(253);t.exports=function(t,e){var n=i(t,e);return r(n)?n:void 0}},function(t,e,n){var r=n(38),i=n(249),a=n(250),o=\"[object Null]\",s=\"[object Undefined]\",u=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?s:o:u&&u in Object(t)?i(t):a(t)}},function(t,e){t.exports=function(t){return t}},function(t,e,n){\"use strict\";var r=n(78),i=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};t.exports=l;var a=n(54);a.inherits=n(2);var o=n(193),s=n(116);a.inherits(l,o);for(var u=i(s.prototype),c=0;c<u.length;c++){var f=u[c];l.prototype[f]||(l.prototype[f]=s.prototype[f])}function l(t){if(!(this instanceof l))return new l(t);o.call(this,t),s.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once(\"end\",h)}function h(){this.allowHalfOpen||this._writableState.ended||r.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(l.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,\"destroyed\",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),l.prototype._destroy=function(t,e){this.push(null),this.end(),r.nextTick(e,t)}},function(t,e){t.exports=function(t,e){return t===e||t!=t&&e!=e}},function(t,e,n){var r=n(33),i=n(14),a=\"[object AsyncFunction]\",o=\"[object Function]\",s=\"[object GeneratorFunction]\",u=\"[object Proxy]\";t.exports=function(t){if(!i(t))return!1;var e=r(t);return e==o||e==s||e==a||e==u}},function(t,e,n){var r=n(18).Symbol;t.exports=r},function(t,e,n){(function(t){var r=n(18),i=n(269),a=e&&!e.nodeType&&e,o=a&&\"object\"==typeof t&&t&&!t.nodeType&&t,s=o&&o.exports===a?r.Buffer:void 0,u=(s?s.isBuffer:void 0)||i;t.exports=u}).call(this,n(9)(t))},function(t,e,n){var r=n(134),i=n(273),a=n(23);t.exports=function(t){return a(t)?r(t,!0):i(t)}},function(t,e,n){var r=n(278),i=n(90),a=n(279),o=n(143),s=n(280),u=n(33),c=n(132),f=c(r),l=c(i),h=c(a),d=c(o),p=c(s),g=u;(r&&\"[object DataView]\"!=g(new r(new ArrayBuffer(1)))||i&&\"[object Map]\"!=g(new i)||a&&\"[object Promise]\"!=g(a.resolve())||o&&\"[object Set]\"!=g(new o)||s&&\"[object WeakMap]\"!=g(new s))&&(g=function(t){var e=u(t),n=\"[object Object]\"==e?t.constructor:void 0,r=n?c(n):\"\";if(r)switch(r){case f:return\"[object DataView]\";case l:return\"[object Map]\";case h:return\"[object Promise]\";case d:return\"[object Set]\";case p:return\"[object WeakMap]\"}return e}),t.exports=g},function(t,e,n){var r=n(33),i=n(20),a=\"[object Symbol]\";t.exports=function(t){return\"symbol\"==typeof t||i(t)&&r(t)==a}},function(t,e,n){var r;try{r={defaults:n(176),each:n(100),isFunction:n(37),isPlainObject:n(180),pick:n(183),has:n(106),range:n(184),uniqueId:n(185)}}catch(t){}r||(r=window._),t.exports=r},function(t,e,n){\"use strict\";(function(e,r){var i=65536,a=4294967295;var o=n(3).Buffer,s=e.crypto||e.msCrypto;s&&s.getRandomValues?t.exports=function(t,e){if(t>a)throw new RangeError(\"requested too many random bytes\");var n=o.allocUnsafe(t);if(t>0)if(t>i)for(var u=0;u<t;u+=i)s.getRandomValues(n.slice(u,u+i));else s.getRandomValues(n);if(\"function\"==typeof e)return r.nextTick((function(){e(null,n)}));return n}:t.exports=function(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}}).call(this,n(12),n(7))},function(t,e,n){var r=n(3).Buffer;function i(t,e){this._block=r.alloc(t),this._finalSize=e,this._blockSize=t,this._len=0}i.prototype.update=function(t,e){\"string\"==typeof t&&(e=e||\"utf8\",t=r.from(t,e));for(var n=this._block,i=this._blockSize,a=t.length,o=this._len,s=0;s<a;){for(var u=o%i,c=Math.min(a-s,i-u),f=0;f<c;f++)n[u+f]=t[s+f];s+=c,(o+=c)%i==0&&this._update(n)}return this._len+=a,this},i.prototype.digest=function(t){var e=this._len%this._blockSize;this._block[e]=128,this._block.fill(0,e+1),e>=this._finalSize&&(this._update(this._block),this._block.fill(0));var n=8*this._len;if(n<=4294967295)this._block.writeUInt32BE(n,this._blockSize-4);else{var r=(4294967295&n)>>>0,i=(n-r)/4294967296;this._block.writeUInt32BE(i,this._blockSize-8),this._block.writeUInt32BE(r,this._blockSize-4)}this._update(this._block);var a=this._hash();return t?a.toString(t):a},i.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")},t.exports=i},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[1,13],n=[1,16],r=[1,14],i=[1,15],a=[1,17],o=[1,18],s=[1,20],u=[1,21],c=[1,22],f=[6,8],l=[1,31],h=[1,32],d=[1,33],p=[1,34],g=[1,35],y=[1,36],b=[6,8,14,20,28,31,32,33,34,35,36],v=[6,8,12,14,20,24,28,31,32,33,34,35,36,52,53,54],m=[28,52,53,54],_=[28,35,36,52,53,54],w=[28,31,32,33,34,52,53,54],x=[6,8,14],k=[1,59],E={trace:function(){},yy:{},symbols_:{error:2,mermaidDoc:3,graphConfig:4,CLASS_DIAGRAM:5,NEWLINE:6,statements:7,EOF:8,statement:9,className:10,alphaNumToken:11,GENERICTYPE:12,relationStatement:13,LABEL:14,classStatement:15,methodStatement:16,annotationStatement:17,clickStatement:18,CLASS:19,STRUCT_START:20,members:21,STRUCT_STOP:22,ANNOTATION_START:23,ANNOTATION_END:24,MEMBER:25,SEPARATOR:26,relation:27,STR:28,relationType:29,lineType:30,AGGREGATION:31,EXTENSION:32,COMPOSITION:33,DEPENDENCY:34,LINE:35,DOTTED_LINE:36,CALLBACK:37,LINK:38,commentToken:39,textToken:40,graphCodeTokens:41,textNoTagsToken:42,TAGSTART:43,TAGEND:44,\"==\":45,\"--\":46,PCT:47,DEFAULT:48,SPACE:49,MINUS:50,keywords:51,UNICODE_TEXT:52,NUM:53,ALPHA:54,$accept:0,$end:1},terminals_:{2:\"error\",5:\"CLASS_DIAGRAM\",6:\"NEWLINE\",8:\"EOF\",12:\"GENERICTYPE\",14:\"LABEL\",19:\"CLASS\",20:\"STRUCT_START\",22:\"STRUCT_STOP\",23:\"ANNOTATION_START\",24:\"ANNOTATION_END\",25:\"MEMBER\",26:\"SEPARATOR\",28:\"STR\",31:\"AGGREGATION\",32:\"EXTENSION\",33:\"COMPOSITION\",34:\"DEPENDENCY\",35:\"LINE\",36:\"DOTTED_LINE\",37:\"CALLBACK\",38:\"LINK\",41:\"graphCodeTokens\",43:\"TAGSTART\",44:\"TAGEND\",45:\"==\",46:\"--\",47:\"PCT\",48:\"DEFAULT\",49:\"SPACE\",50:\"MINUS\",51:\"keywords\",52:\"UNICODE_TEXT\",53:\"NUM\",54:\"ALPHA\"},productions_:[0,[3,1],[4,4],[7,1],[7,2],[7,3],[10,2],[10,1],[10,3],[10,2],[9,1],[9,2],[9,1],[9,1],[9,1],[9,1],[15,2],[15,5],[17,4],[21,1],[21,2],[16,1],[16,2],[16,1],[16,1],[13,3],[13,4],[13,4],[13,5],[27,3],[27,2],[27,2],[27,1],[29,1],[29,1],[29,1],[29,1],[30,1],[30,1],[18,3],[18,4],[18,3],[18,4],[39,1],[39,1],[40,1],[40,1],[40,1],[40,1],[40,1],[40,1],[40,1],[42,1],[42,1],[42,1],[42,1],[11,1],[11,1],[11,1]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 6:this.$=a[s-1]+a[s];break;case 7:this.$=a[s];break;case 8:this.$=a[s-2]+\"~\"+a[s-1]+a[s];break;case 9:this.$=a[s-1]+\"~\"+a[s];break;case 10:r.addRelation(a[s]);break;case 11:a[s-1].title=r.cleanupLabel(a[s]),r.addRelation(a[s-1]);break;case 16:r.addClass(a[s]);break;case 17:r.addClass(a[s-3]),r.addMembers(a[s-3],a[s-1]);break;case 18:r.addAnnotation(a[s],a[s-2]);break;case 19:this.$=[a[s]];break;case 20:a[s].push(a[s-1]),this.$=a[s];break;case 21:break;case 22:r.addMember(a[s-1],r.cleanupLabel(a[s]));break;case 23:case 24:break;case 25:this.$={id1:a[s-2],id2:a[s],relation:a[s-1],relationTitle1:\"none\",relationTitle2:\"none\"};break;case 26:this.$={id1:a[s-3],id2:a[s],relation:a[s-1],relationTitle1:a[s-2],relationTitle2:\"none\"};break;case 27:this.$={id1:a[s-3],id2:a[s],relation:a[s-2],relationTitle1:\"none\",relationTitle2:a[s-1]};break;case 28:this.$={id1:a[s-4],id2:a[s],relation:a[s-2],relationTitle1:a[s-3],relationTitle2:a[s-1]};break;case 29:this.$={type1:a[s-2],type2:a[s],lineType:a[s-1]};break;case 30:this.$={type1:\"none\",type2:a[s],lineType:a[s-1]};break;case 31:this.$={type1:a[s-1],type2:\"none\",lineType:a[s]};break;case 32:this.$={type1:\"none\",type2:\"none\",lineType:a[s]};break;case 33:this.$=r.relationType.AGGREGATION;break;case 34:this.$=r.relationType.EXTENSION;break;case 35:this.$=r.relationType.COMPOSITION;break;case 36:this.$=r.relationType.DEPENDENCY;break;case 37:this.$=r.lineType.LINE;break;case 38:this.$=r.lineType.DOTTED_LINE;break;case 39:this.$=a[s-2],r.setClickEvent(a[s-1],a[s],void 0);break;case 40:this.$=a[s-3],r.setClickEvent(a[s-2],a[s-1],a[s]);break;case 41:this.$=a[s-2],r.setLink(a[s-1],a[s],void 0);break;case 42:this.$=a[s-3],r.setLink(a[s-2],a[s-1],a[s])}},table:[{3:1,4:2,5:[1,3]},{1:[3]},{1:[2,1]},{6:[1,4]},{7:5,9:6,10:12,11:19,13:7,15:8,16:9,17:10,18:11,19:e,23:n,25:r,26:i,37:a,38:o,52:s,53:u,54:c},{8:[1,23]},{6:[1,24],8:[2,3]},t(f,[2,10],{14:[1,25]}),t(f,[2,12]),t(f,[2,13]),t(f,[2,14]),t(f,[2,15]),t(f,[2,21],{27:26,29:29,30:30,14:[1,28],28:[1,27],31:l,32:h,33:d,34:p,35:g,36:y}),{10:37,11:19,52:s,53:u,54:c},t(f,[2,23]),t(f,[2,24]),{11:38,52:s,53:u,54:c},{10:39,11:19,52:s,53:u,54:c},{10:40,11:19,52:s,53:u,54:c},t(b,[2,7],{11:19,10:41,12:[1,42],52:s,53:u,54:c}),t(v,[2,56]),t(v,[2,57]),t(v,[2,58]),{1:[2,2]},{7:43,8:[2,4],9:6,10:12,11:19,13:7,15:8,16:9,17:10,18:11,19:e,23:n,25:r,26:i,37:a,38:o,52:s,53:u,54:c},t(f,[2,11]),{10:44,11:19,28:[1,45],52:s,53:u,54:c},{27:46,29:29,30:30,31:l,32:h,33:d,34:p,35:g,36:y},t(f,[2,22]),{30:47,35:g,36:y},t(m,[2,32],{29:48,31:l,32:h,33:d,34:p}),t(_,[2,33]),t(_,[2,34]),t(_,[2,35]),t(_,[2,36]),t(w,[2,37]),t(w,[2,38]),t(f,[2,16],{20:[1,49]}),{24:[1,50]},{28:[1,51]},{28:[1,52]},t(b,[2,6]),t(b,[2,9],{11:19,10:53,52:s,53:u,54:c}),{8:[2,5]},t(x,[2,25]),{10:54,11:19,52:s,53:u,54:c},{10:55,11:19,28:[1,56],52:s,53:u,54:c},t(m,[2,31],{29:57,31:l,32:h,33:d,34:p}),t(m,[2,30]),{21:58,25:k},{10:60,11:19,52:s,53:u,54:c},t(f,[2,39],{28:[1,61]}),t(f,[2,41],{28:[1,62]}),t(b,[2,8]),t(x,[2,27]),t(x,[2,26]),{10:63,11:19,52:s,53:u,54:c},t(m,[2,29]),{22:[1,64]},{21:65,22:[2,19],25:k},t(f,[2,18]),t(f,[2,40]),t(f,[2,42]),t(x,[2,28]),t(f,[2,17]),{22:[2,20]}],defaultActions:{2:[2,1],23:[2,2],43:[2,5],65:[2,20]},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},A={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(t,e,n,r){switch(n){case 0:break;case 1:return 6;case 2:break;case 3:return 5;case 4:return this.begin(\"struct\"),20;case 5:return\"EOF_IN_STRUCT\";case 6:return\"OPEN_IN_STRUCT\";case 7:return this.popState(),22;case 8:break;case 9:return\"MEMBER\";case 10:return 19;case 11:return 37;case 12:return 38;case 13:return 23;case 14:return 24;case 15:this.begin(\"generic\");break;case 16:this.popState();break;case 17:return\"GENERICTYPE\";case 18:this.begin(\"string\");break;case 19:this.popState();break;case 20:return\"STR\";case 21:case 22:return 32;case 23:case 24:return 34;case 25:return 33;case 26:return 31;case 27:return 35;case 28:return 36;case 29:return 14;case 30:return 50;case 31:return\"DOT\";case 32:return\"PLUS\";case 33:return 47;case 34:case 35:return\"EQUALS\";case 36:return 54;case 37:return\"PUNCTUATION\";case 38:return 53;case 39:return 52;case 40:return 49;case 41:return 8}},rules:[/^(?:%%[^\\n]*\\n*)/,/^(?:\\n+)/,/^(?:\\s+)/,/^(?:classDiagram\\b)/,/^(?:[\\{])/,/^(?:$)/,/^(?:[\\{])/,/^(?:\\})/,/^(?:[\\n])/,/^(?:[^\\{\\}\\n]*)/,/^(?:class\\b)/,/^(?:callback\\b)/,/^(?:link\\b)/,/^(?:<<)/,/^(?:>>)/,/^(?:[~])/,/^(?:[~])/,/^(?:[^~]*)/,/^(?:[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:\\s*<\\|)/,/^(?:\\s*\\|>)/,/^(?:\\s*>)/,/^(?:\\s*<)/,/^(?:\\s*\\*)/,/^(?:\\s*o\\b)/,/^(?:--)/,/^(?:\\.\\.)/,/^(?::[^\\n;]+)/,/^(?:-)/,/^(?:\\.)/,/^(?:\\+)/,/^(?:%)/,/^(?:=)/,/^(?:=)/,/^(?:\\w+)/,/^(?:[!\"#$%&'*+,-.`?\\\\\\/])/,/^(?:[0-9]+)/,/^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/,/^(?:\\s)/,/^(?:$)/],conditions:{string:{rules:[19,20],inclusive:!1},generic:{rules:[16,17],inclusive:!1},struct:{rules:[5,6,7,8,9],inclusive:!1},INITIAL:{rules:[0,1,2,3,4,10,11,12,13,14,15,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],inclusive:!0}}};function S(){this.yy={}}return E.lexer=A,S.prototype=E,E.Parser=S,new S}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[1,2],n=[1,3],r=[1,4],i=[2,4],a=[1,9],o=[1,11],s=[1,13],u=[1,14],c=[1,15],f=[1,16],l=[1,21],h=[1,17],d=[1,18],p=[1,19],g=[1,20],y=[1,22],b=[1,4,5,13,14,16,18,19,21,22,23,24,25,28],v=[1,4,5,11,12,13,14,16,18,19,21,22,23,24,25,28],m=[4,5,13,14,16,18,19,21,22,23,24,25,28],_={trace:function(){},yy:{},symbols_:{error:2,start:3,SPACE:4,NL:5,SD:6,document:7,line:8,statement:9,idStatement:10,DESCR:11,\"--\\x3e\":12,HIDE_EMPTY:13,scale:14,WIDTH:15,COMPOSIT_STATE:16,STRUCT_START:17,STRUCT_STOP:18,STATE_DESCR:19,AS:20,ID:21,FORK:22,JOIN:23,CONCURRENT:24,note:25,notePosition:26,NOTE_TEXT:27,EDGE_STATE:28,left_of:29,right_of:30,$accept:0,$end:1},terminals_:{2:\"error\",4:\"SPACE\",5:\"NL\",6:\"SD\",11:\"DESCR\",12:\"--\\x3e\",13:\"HIDE_EMPTY\",14:\"scale\",15:\"WIDTH\",16:\"COMPOSIT_STATE\",17:\"STRUCT_START\",18:\"STRUCT_STOP\",19:\"STATE_DESCR\",20:\"AS\",21:\"ID\",22:\"FORK\",23:\"JOIN\",24:\"CONCURRENT\",25:\"note\",27:\"NOTE_TEXT\",28:\"EDGE_STATE\",29:\"left_of\",30:\"right_of\"},productions_:[0,[3,2],[3,2],[3,2],[7,0],[7,2],[8,2],[8,1],[8,1],[9,1],[9,2],[9,3],[9,4],[9,1],[9,2],[9,1],[9,4],[9,3],[9,6],[9,1],[9,1],[9,1],[9,4],[9,4],[10,1],[10,1],[26,1],[26,1]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 3:return r.setRootDoc(a[s]),a[s];case 4:this.$=[];break;case 5:\"nl\"!=a[s]&&(a[s-1].push(a[s]),this.$=a[s-1]);break;case 6:case 7:this.$=a[s];break;case 8:this.$=\"nl\";break;case 9:this.$={stmt:\"state\",id:a[s],type:\"default\",description:\"\"};break;case 10:this.$={stmt:\"state\",id:a[s-1],type:\"default\",description:a[s].trim()};break;case 11:this.$={stmt:\"relation\",state1:{stmt:\"state\",id:a[s-2],type:\"default\",description:\"\"},state2:{stmt:\"state\",id:a[s],type:\"default\",description:\"\"}};break;case 12:this.$={stmt:\"relation\",state1:{stmt:\"state\",id:a[s-3],type:\"default\",description:\"\"},state2:{stmt:\"state\",id:a[s-1],type:\"default\",description:\"\"},description:a[s].substr(1).trim()};break;case 16:this.$={stmt:\"state\",id:a[s-3],type:\"default\",description:\"\",doc:a[s-1]};break;case 17:var u=a[s],c=a[s-2].trim();if(a[s].match(\":\")){var f=a[s].split(\":\");u=f[0],c=[c,f[1]]}this.$={stmt:\"state\",id:u,type:\"default\",description:c};break;case 18:this.$={stmt:\"state\",id:a[s-3],type:\"default\",description:a[s-5],doc:a[s-1]};break;case 19:this.$={stmt:\"state\",id:a[s],type:\"fork\"};break;case 20:this.$={stmt:\"state\",id:a[s],type:\"join\"};break;case 21:this.$={stmt:\"state\",id:r.getDividerId(),type:\"divider\"};break;case 22:this.$={stmt:\"state\",id:a[s-1].trim(),note:{position:a[s-2].trim(),text:a[s].trim()}};break;case 24:case 25:this.$=a[s]}},table:[{3:1,4:e,5:n,6:r},{1:[3]},{3:5,4:e,5:n,6:r},{3:6,4:e,5:n,6:r},t([1,4,5,13,14,16,19,21,22,23,24,25,28],i,{7:7}),{1:[2,1]},{1:[2,2]},{1:[2,3],4:a,5:o,8:8,9:10,10:12,13:s,14:u,16:c,19:f,21:l,22:h,23:d,24:p,25:g,28:y},t(b,[2,5]),{9:23,10:12,13:s,14:u,16:c,19:f,21:l,22:h,23:d,24:p,25:g,28:y},t(b,[2,7]),t(b,[2,8]),t(b,[2,9],{11:[1,24],12:[1,25]}),t(b,[2,13]),{15:[1,26]},t(b,[2,15],{17:[1,27]}),{20:[1,28]},t(b,[2,19]),t(b,[2,20]),t(b,[2,21]),{26:29,27:[1,30],29:[1,31],30:[1,32]},t(v,[2,24]),t(v,[2,25]),t(b,[2,6]),t(b,[2,10]),{10:33,21:l,28:y},t(b,[2,14]),t(m,i,{7:34}),{21:[1,35]},{21:[1,36]},{20:[1,37]},{21:[2,26]},{21:[2,27]},t(b,[2,11],{11:[1,38]}),{4:a,5:o,8:8,9:10,10:12,13:s,14:u,16:c,18:[1,39],19:f,21:l,22:h,23:d,24:p,25:g,28:y},t(b,[2,17],{17:[1,40]}),{27:[1,41]},{21:[1,42]},t(b,[2,12]),t(b,[2,16]),t(m,i,{7:43}),t(b,[2,22]),t(b,[2,23]),{4:a,5:o,8:8,9:10,10:12,13:s,14:u,16:c,18:[1,44],19:f,21:l,22:h,23:d,24:p,25:g,28:y},t(b,[2,18])],defaultActions:{5:[2,1],6:[2,2],31:[2,26],32:[2,27]},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},w={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{\"case-insensitive\":!0},performAction:function(t,e,n,r){switch(n){case 0:return 5;case 1:case 2:case 3:case 4:break;case 5:return this.pushState(\"SCALE\"),14;case 6:return 15;case 7:this.popState();break;case 8:this.pushState(\"STATE\");break;case 9:return this.popState(),e.yytext=e.yytext.slice(0,-8).trim(),22;case 10:return this.popState(),e.yytext=e.yytext.slice(0,-8).trim(),23;case 11:return this.popState(),e.yytext=e.yytext.slice(0,-8).trim(),22;case 12:return this.popState(),e.yytext=e.yytext.slice(0,-8).trim(),23;case 13:this.begin(\"STATE_STRING\");break;case 14:return this.popState(),this.pushState(\"STATE_ID\"),\"AS\";case 15:return this.popState(),\"ID\";case 16:this.popState();break;case 17:return\"STATE_DESCR\";case 18:return 16;case 19:this.popState();break;case 20:return this.popState(),this.pushState(\"struct\"),17;case 21:return this.popState(),18;case 22:break;case 23:return this.begin(\"NOTE\"),25;case 24:return this.popState(),this.pushState(\"NOTE_ID\"),29;case 25:return this.popState(),this.pushState(\"NOTE_ID\"),30;case 26:this.popState(),this.pushState(\"FLOATING_NOTE\");break;case 27:return this.popState(),this.pushState(\"FLOATING_NOTE_ID\"),\"AS\";case 28:break;case 29:return\"NOTE_TEXT\";case 30:return this.popState(),\"ID\";case 31:return this.popState(),this.pushState(\"NOTE_TEXT\"),21;case 32:return this.popState(),e.yytext=e.yytext.substr(2).trim(),27;case 33:return this.popState(),e.yytext=e.yytext.slice(0,-8).trim(),27;case 34:return 6;case 35:return 13;case 36:return 28;case 37:return 21;case 38:return e.yytext=e.yytext.trim(),11;case 39:return 12;case 40:return 24;case 41:return 5;case 42:return\"INVALID\"}},rules:[/^(?:[\\n]+)/i,/^(?:\\s+)/i,/^(?:((?!\\n)\\s)+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:scale\\s+)/i,/^(?:\\d+)/i,/^(?:\\s+width\\b)/i,/^(?:state\\s+)/i,/^(?:.*<<fork>>)/i,/^(?:.*<<join>>)/i,/^(?:.*\\[\\[fork\\]\\])/i,/^(?:.*\\[\\[join\\]\\])/i,/^(?:[\"])/i,/^(?:as\\s*)/i,/^(?:[^\\n\\{]*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n\\s\\{]+)/i,/^(?:\\n)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:[\\n])/i,/^(?:note\\s+)/i,/^(?:left of\\b)/i,/^(?:right of\\b)/i,/^(?:\")/i,/^(?:\\s*as\\s*)/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[^\\n]*)/i,/^(?:\\s*[^:\\n\\s\\-]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:\\s*[^:;]+end note\\b)/i,/^(?:stateDiagram\\s+)/i,/^(?:hide empty description\\b)/i,/^(?:\\[\\*\\])/i,/^(?:[^:\\n\\s\\-\\{]+)/i,/^(?:\\s*:[^:\\n;]+)/i,/^(?:-->)/i,/^(?:--)/i,/^(?:$)/i,/^(?:.)/i],conditions:{LINE:{rules:[2,3],inclusive:!1},struct:{rules:[2,3,8,21,22,23,36,37,38,39,40],inclusive:!1},FLOATING_NOTE_ID:{rules:[30],inclusive:!1},FLOATING_NOTE:{rules:[27,28,29],inclusive:!1},NOTE_TEXT:{rules:[32,33],inclusive:!1},NOTE_ID:{rules:[31],inclusive:!1},NOTE:{rules:[24,25,26],inclusive:!1},SCALE:{rules:[6,7],inclusive:!1},ALIAS:{rules:[],inclusive:!1},STATE_ID:{rules:[15],inclusive:!1},STATE_STRING:{rules:[16,17],inclusive:!1},FORK_STATE:{rules:[],inclusive:!1},STATE:{rules:[2,3,9,10,11,12,13,14,18,19,20],inclusive:!1},ID:{rules:[2,3],inclusive:!1},INITIAL:{rules:[0,1,3,4,5,8,20,23,34,35,36,37,38,39,41,42],inclusive:!0}}};function x(){this.yy={}}return _.lexer=w,x.prototype=_,_.Parser=x,new x}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){(function(t,n){(function(){var r,i=200,a=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",o=\"Expected a function\",s=\"__lodash_hash_undefined__\",u=500,c=\"__lodash_placeholder__\",f=1,l=2,h=4,d=1,p=2,g=1,y=2,b=4,v=8,m=16,_=32,w=64,x=128,k=256,E=512,A=30,S=\"...\",M=800,T=16,D=1,C=2,N=1/0,I=9007199254740991,L=17976931348623157e292,B=NaN,O=4294967295,R=O-1,P=O>>>1,F=[[\"ary\",x],[\"bind\",g],[\"bindKey\",y],[\"curry\",v],[\"curryRight\",m],[\"flip\",E],[\"partial\",_],[\"partialRight\",w],[\"rearg\",k]],q=\"[object Arguments]\",j=\"[object Array]\",U=\"[object AsyncFunction]\",z=\"[object Boolean]\",Y=\"[object Date]\",V=\"[object DOMException]\",H=\"[object Error]\",G=\"[object Function]\",$=\"[object GeneratorFunction]\",W=\"[object Map]\",K=\"[object Number]\",X=\"[object Null]\",Z=\"[object Object]\",J=\"[object Proxy]\",Q=\"[object RegExp]\",tt=\"[object Set]\",et=\"[object String]\",nt=\"[object Symbol]\",rt=\"[object Undefined]\",it=\"[object WeakMap]\",at=\"[object WeakSet]\",ot=\"[object ArrayBuffer]\",st=\"[object DataView]\",ut=\"[object Float32Array]\",ct=\"[object Float64Array]\",ft=\"[object Int8Array]\",lt=\"[object Int16Array]\",ht=\"[object Int32Array]\",dt=\"[object Uint8Array]\",pt=\"[object Uint8ClampedArray]\",gt=\"[object Uint16Array]\",yt=\"[object Uint32Array]\",bt=/\\b__p \\+= '';/g,vt=/\\b(__p \\+=) '' \\+/g,mt=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,_t=/&(?:amp|lt|gt|quot|#39);/g,wt=/[&<>\"']/g,xt=RegExp(_t.source),kt=RegExp(wt.source),Et=/<%-([\\s\\S]+?)%>/g,At=/<%([\\s\\S]+?)%>/g,St=/<%=([\\s\\S]+?)%>/g,Mt=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,Tt=/^\\w*$/,Dt=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,Ct=/[\\\\^$.*+?()[\\]{}|]/g,Nt=RegExp(Ct.source),It=/^\\s+|\\s+$/g,Lt=/^\\s+/,Bt=/\\s+$/,Ot=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Rt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Pt=/,? & /,Ft=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,qt=/\\\\(\\\\)?/g,jt=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Ut=/\\w*$/,zt=/^[-+]0x[0-9a-f]+$/i,Yt=/^0b[01]+$/i,Vt=/^\\[object .+?Constructor\\]$/,Ht=/^0o[0-7]+$/i,Gt=/^(?:0|[1-9]\\d*)$/,$t=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Wt=/($^)/,Kt=/['\\n\\r\\u2028\\u2029\\\\]/g,Xt=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\",Zt=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",Jt=\"[\\\\ud800-\\\\udfff]\",Qt=\"[\"+Zt+\"]\",te=\"[\"+Xt+\"]\",ee=\"\\\\d+\",ne=\"[\\\\u2700-\\\\u27bf]\",re=\"[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]\",ie=\"[^\\\\ud800-\\\\udfff\"+Zt+ee+\"\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",ae=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",oe=\"[^\\\\ud800-\\\\udfff]\",se=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",ue=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",ce=\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",fe=\"(?:\"+re+\"|\"+ie+\")\",le=\"(?:\"+ce+\"|\"+ie+\")\",he=\"(?:\"+te+\"|\"+ae+\")\"+\"?\",de=\"[\\\\ufe0e\\\\ufe0f]?\"+he+(\"(?:\\\\u200d(?:\"+[oe,se,ue].join(\"|\")+\")[\\\\ufe0e\\\\ufe0f]?\"+he+\")*\"),pe=\"(?:\"+[ne,se,ue].join(\"|\")+\")\"+de,ge=\"(?:\"+[oe+te+\"?\",te,se,ue,Jt].join(\"|\")+\")\",ye=RegExp(\"['’]\",\"g\"),be=RegExp(te,\"g\"),ve=RegExp(ae+\"(?=\"+ae+\")|\"+ge+de,\"g\"),me=RegExp([ce+\"?\"+re+\"+(?:['’](?:d|ll|m|re|s|t|ve))?(?=\"+[Qt,ce,\"$\"].join(\"|\")+\")\",le+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=\"+[Qt,ce+fe,\"$\"].join(\"|\")+\")\",ce+\"?\"+fe+\"+(?:['’](?:d|ll|m|re|s|t|ve))?\",ce+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?\",\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",ee,pe].join(\"|\"),\"g\"),_e=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\"+Xt+\"\\\\ufe0e\\\\ufe0f]\"),we=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,xe=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],ke=-1,Ee={};Ee[ut]=Ee[ct]=Ee[ft]=Ee[lt]=Ee[ht]=Ee[dt]=Ee[pt]=Ee[gt]=Ee[yt]=!0,Ee[q]=Ee[j]=Ee[ot]=Ee[z]=Ee[st]=Ee[Y]=Ee[H]=Ee[G]=Ee[W]=Ee[K]=Ee[Z]=Ee[Q]=Ee[tt]=Ee[et]=Ee[it]=!1;var Ae={};Ae[q]=Ae[j]=Ae[ot]=Ae[st]=Ae[z]=Ae[Y]=Ae[ut]=Ae[ct]=Ae[ft]=Ae[lt]=Ae[ht]=Ae[W]=Ae[K]=Ae[Z]=Ae[Q]=Ae[tt]=Ae[et]=Ae[nt]=Ae[dt]=Ae[pt]=Ae[gt]=Ae[yt]=!0,Ae[H]=Ae[G]=Ae[it]=!1;var Se={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Me=parseFloat,Te=parseInt,De=\"object\"==typeof t&&t&&t.Object===Object&&t,Ce=\"object\"==typeof self&&self&&self.Object===Object&&self,Ne=De||Ce||Function(\"return this\")(),Ie=e&&!e.nodeType&&e,Le=Ie&&\"object\"==typeof n&&n&&!n.nodeType&&n,Be=Le&&Le.exports===Ie,Oe=Be&&De.process,Re=function(){try{var t=Le&&Le.require&&Le.require(\"util\").types;return t||Oe&&Oe.binding&&Oe.binding(\"util\")}catch(t){}}(),Pe=Re&&Re.isArrayBuffer,Fe=Re&&Re.isDate,qe=Re&&Re.isMap,je=Re&&Re.isRegExp,Ue=Re&&Re.isSet,ze=Re&&Re.isTypedArray;function Ye(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function Ve(t,e,n,r){for(var i=-1,a=null==t?0:t.length;++i<a;){var o=t[i];e(r,o,n(o),t)}return r}function He(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}function Ge(t,e){for(var n=null==t?0:t.length;n--&&!1!==e(t[n],n,t););return t}function $e(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(!e(t[n],n,t))return!1;return!0}function We(t,e){for(var n=-1,r=null==t?0:t.length,i=0,a=[];++n<r;){var o=t[n];e(o,n,t)&&(a[i++]=o)}return a}function Ke(t,e){return!!(null==t?0:t.length)&&on(t,e,0)>-1}function Xe(t,e,n){for(var r=-1,i=null==t?0:t.length;++r<i;)if(n(e,t[r]))return!0;return!1}function Ze(t,e){for(var n=-1,r=null==t?0:t.length,i=Array(r);++n<r;)i[n]=e(t[n],n,t);return i}function Je(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t}function Qe(t,e,n,r){var i=-1,a=null==t?0:t.length;for(r&&a&&(n=t[++i]);++i<a;)n=e(n,t[i],i,t);return n}function tn(t,e,n,r){var i=null==t?0:t.length;for(r&&i&&(n=t[--i]);i--;)n=e(n,t[i],i,t);return n}function en(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}var nn=fn(\"length\");function rn(t,e,n){var r;return n(t,(function(t,n,i){if(e(t,n,i))return r=n,!1})),r}function an(t,e,n,r){for(var i=t.length,a=n+(r?1:-1);r?a--:++a<i;)if(e(t[a],a,t))return a;return-1}function on(t,e,n){return e==e?function(t,e,n){var r=n-1,i=t.length;for(;++r<i;)if(t[r]===e)return r;return-1}(t,e,n):an(t,un,n)}function sn(t,e,n,r){for(var i=n-1,a=t.length;++i<a;)if(r(t[i],e))return i;return-1}function un(t){return t!=t}function cn(t,e){var n=null==t?0:t.length;return n?dn(t,e)/n:B}function fn(t){return function(e){return null==e?r:e[t]}}function ln(t){return function(e){return null==t?r:t[e]}}function hn(t,e,n,r,i){return i(t,(function(t,i,a){n=r?(r=!1,t):e(n,t,i,a)})),n}function dn(t,e){for(var n,i=-1,a=t.length;++i<a;){var o=e(t[i]);o!==r&&(n=n===r?o:n+o)}return n}function pn(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}function gn(t){return function(e){return t(e)}}function yn(t,e){return Ze(e,(function(e){return t[e]}))}function bn(t,e){return t.has(e)}function vn(t,e){for(var n=-1,r=t.length;++n<r&&on(e,t[n],0)>-1;);return n}function mn(t,e){for(var n=t.length;n--&&on(e,t[n],0)>-1;);return n}var _n=ln({\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"Ç\":\"C\",\"ç\":\"c\",\"Ð\":\"D\",\"ð\":\"d\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"Ñ\":\"N\",\"ñ\":\"n\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"Ý\":\"Y\",\"ý\":\"y\",\"ÿ\":\"y\",\"Æ\":\"Ae\",\"æ\":\"ae\",\"Þ\":\"Th\",\"þ\":\"th\",\"ß\":\"ss\",\"Ā\":\"A\",\"Ă\":\"A\",\"Ą\":\"A\",\"ā\":\"a\",\"ă\":\"a\",\"ą\":\"a\",\"Ć\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Č\":\"C\",\"ć\":\"c\",\"ĉ\":\"c\",\"ċ\":\"c\",\"č\":\"c\",\"Ď\":\"D\",\"Đ\":\"D\",\"ď\":\"d\",\"đ\":\"d\",\"Ē\":\"E\",\"Ĕ\":\"E\",\"Ė\":\"E\",\"Ę\":\"E\",\"Ě\":\"E\",\"ē\":\"e\",\"ĕ\":\"e\",\"ė\":\"e\",\"ę\":\"e\",\"ě\":\"e\",\"Ĝ\":\"G\",\"Ğ\":\"G\",\"Ġ\":\"G\",\"Ģ\":\"G\",\"ĝ\":\"g\",\"ğ\":\"g\",\"ġ\":\"g\",\"ģ\":\"g\",\"Ĥ\":\"H\",\"Ħ\":\"H\",\"ĥ\":\"h\",\"ħ\":\"h\",\"Ĩ\":\"I\",\"Ī\":\"I\",\"Ĭ\":\"I\",\"Į\":\"I\",\"İ\":\"I\",\"ĩ\":\"i\",\"ī\":\"i\",\"ĭ\":\"i\",\"į\":\"i\",\"ı\":\"i\",\"Ĵ\":\"J\",\"ĵ\":\"j\",\"Ķ\":\"K\",\"ķ\":\"k\",\"ĸ\":\"k\",\"Ĺ\":\"L\",\"Ļ\":\"L\",\"Ľ\":\"L\",\"Ŀ\":\"L\",\"Ł\":\"L\",\"ĺ\":\"l\",\"ļ\":\"l\",\"ľ\":\"l\",\"ŀ\":\"l\",\"ł\":\"l\",\"Ń\":\"N\",\"Ņ\":\"N\",\"Ň\":\"N\",\"Ŋ\":\"N\",\"ń\":\"n\",\"ņ\":\"n\",\"ň\":\"n\",\"ŋ\":\"n\",\"Ō\":\"O\",\"Ŏ\":\"O\",\"Ő\":\"O\",\"ō\":\"o\",\"ŏ\":\"o\",\"ő\":\"o\",\"Ŕ\":\"R\",\"Ŗ\":\"R\",\"Ř\":\"R\",\"ŕ\":\"r\",\"ŗ\":\"r\",\"ř\":\"r\",\"Ś\":\"S\",\"Ŝ\":\"S\",\"Ş\":\"S\",\"Š\":\"S\",\"ś\":\"s\",\"ŝ\":\"s\",\"ş\":\"s\",\"š\":\"s\",\"Ţ\":\"T\",\"Ť\":\"T\",\"Ŧ\":\"T\",\"ţ\":\"t\",\"ť\":\"t\",\"ŧ\":\"t\",\"Ũ\":\"U\",\"Ū\":\"U\",\"Ŭ\":\"U\",\"Ů\":\"U\",\"Ű\":\"U\",\"Ų\":\"U\",\"ũ\":\"u\",\"ū\":\"u\",\"ŭ\":\"u\",\"ů\":\"u\",\"ű\":\"u\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"Ż\":\"Z\",\"Ž\":\"Z\",\"ź\":\"z\",\"ż\":\"z\",\"ž\":\"z\",\"Ĳ\":\"IJ\",\"ĳ\":\"ij\",\"Œ\":\"Oe\",\"œ\":\"oe\",\"ŉ\":\"'n\",\"ſ\":\"s\"}),wn=ln({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"});function xn(t){return\"\\\\\"+Se[t]}function kn(t){return _e.test(t)}function En(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}function An(t,e){return function(n){return t(e(n))}}function Sn(t,e){for(var n=-1,r=t.length,i=0,a=[];++n<r;){var o=t[n];o!==e&&o!==c||(t[n]=c,a[i++]=n)}return a}function Mn(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}function Tn(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=[t,t]})),n}function Dn(t){return kn(t)?function(t){var e=ve.lastIndex=0;for(;ve.test(t);)++e;return e}(t):nn(t)}function Cn(t){return kn(t)?function(t){return t.match(ve)||[]}(t):function(t){return t.split(\"\")}(t)}var Nn=ln({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"});var In=function t(e){var n,Xt=(e=null==e?Ne:In.defaults(Ne.Object(),e,In.pick(Ne,xe))).Array,Zt=e.Date,Jt=e.Error,Qt=e.Function,te=e.Math,ee=e.Object,ne=e.RegExp,re=e.String,ie=e.TypeError,ae=Xt.prototype,oe=Qt.prototype,se=ee.prototype,ue=e[\"__core-js_shared__\"],ce=oe.toString,fe=se.hasOwnProperty,le=0,he=(n=/[^.]+$/.exec(ue&&ue.keys&&ue.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+n:\"\",de=se.toString,pe=ce.call(ee),ge=Ne._,ve=ne(\"^\"+ce.call(fe).replace(Ct,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),_e=Be?e.Buffer:r,Se=e.Symbol,De=e.Uint8Array,Ce=_e?_e.allocUnsafe:r,Ie=An(ee.getPrototypeOf,ee),Le=ee.create,Oe=se.propertyIsEnumerable,Re=ae.splice,nn=Se?Se.isConcatSpreadable:r,ln=Se?Se.iterator:r,Ln=Se?Se.toStringTag:r,Bn=function(){try{var t=Fa(ee,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}(),On=e.clearTimeout!==Ne.clearTimeout&&e.clearTimeout,Rn=Zt&&Zt.now!==Ne.Date.now&&Zt.now,Pn=e.setTimeout!==Ne.setTimeout&&e.setTimeout,Fn=te.ceil,qn=te.floor,jn=ee.getOwnPropertySymbols,Un=_e?_e.isBuffer:r,zn=e.isFinite,Yn=ae.join,Vn=An(ee.keys,ee),Hn=te.max,Gn=te.min,$n=Zt.now,Wn=e.parseInt,Kn=te.random,Xn=ae.reverse,Zn=Fa(e,\"DataView\"),Jn=Fa(e,\"Map\"),Qn=Fa(e,\"Promise\"),tr=Fa(e,\"Set\"),er=Fa(e,\"WeakMap\"),nr=Fa(ee,\"create\"),rr=er&&new er,ir={},ar=fo(Zn),or=fo(Jn),sr=fo(Qn),ur=fo(tr),cr=fo(er),fr=Se?Se.prototype:r,lr=fr?fr.valueOf:r,hr=fr?fr.toString:r;function dr(t){if(Ts(t)&&!bs(t)&&!(t instanceof br)){if(t instanceof yr)return t;if(fe.call(t,\"__wrapped__\"))return lo(t)}return new yr(t)}var pr=function(){function t(){}return function(e){if(!Ms(e))return{};if(Le)return Le(e);t.prototype=e;var n=new t;return t.prototype=r,n}}();function gr(){}function yr(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=r}function br(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=O,this.__views__=[]}function vr(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function mr(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function _r(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function wr(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new _r;++e<n;)this.add(t[e])}function xr(t){var e=this.__data__=new mr(t);this.size=e.size}function kr(t,e){var n=bs(t),r=!n&&ys(t),i=!n&&!r&&ws(t),a=!n&&!r&&!i&&Rs(t),o=n||r||i||a,s=o?pn(t.length,re):[],u=s.length;for(var c in t)!e&&!fe.call(t,c)||o&&(\"length\"==c||i&&(\"offset\"==c||\"parent\"==c)||a&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||Ha(c,u))||s.push(c);return s}function Er(t){var e=t.length;return e?t[wi(0,e-1)]:r}function Ar(t,e){return so(na(t),Br(e,0,t.length))}function Sr(t){return so(na(t))}function Mr(t,e,n){(n===r||ds(t[e],n))&&(n!==r||e in t)||Ir(t,e,n)}function Tr(t,e,n){var i=t[e];fe.call(t,e)&&ds(i,n)&&(n!==r||e in t)||Ir(t,e,n)}function Dr(t,e){for(var n=t.length;n--;)if(ds(t[n][0],e))return n;return-1}function Cr(t,e,n,r){return qr(t,(function(t,i,a){e(r,t,n(t),a)})),r}function Nr(t,e){return t&&ra(e,iu(e),t)}function Ir(t,e,n){\"__proto__\"==e&&Bn?Bn(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}function Lr(t,e){for(var n=-1,i=e.length,a=Xt(i),o=null==t;++n<i;)a[n]=o?r:Qs(t,e[n]);return a}function Br(t,e,n){return t==t&&(n!==r&&(t=t<=n?t:n),e!==r&&(t=t>=e?t:e)),t}function Or(t,e,n,i,a,o){var s,u=e&f,c=e&l,d=e&h;if(n&&(s=a?n(t,i,a,o):n(t)),s!==r)return s;if(!Ms(t))return t;var p=bs(t);if(p){if(s=function(t){var e=t.length,n=new t.constructor(e);e&&\"string\"==typeof t[0]&&fe.call(t,\"index\")&&(n.index=t.index,n.input=t.input);return n}(t),!u)return na(t,s)}else{var g=Ua(t),y=g==G||g==$;if(ws(t))return Xi(t,u);if(g==Z||g==q||y&&!a){if(s=c||y?{}:Ya(t),!u)return c?function(t,e){return ra(t,ja(t),e)}(t,function(t,e){return t&&ra(e,au(e),t)}(s,t)):function(t,e){return ra(t,qa(t),e)}(t,Nr(s,t))}else{if(!Ae[g])return a?t:{};s=function(t,e,n){var r=t.constructor;switch(e){case ot:return Zi(t);case z:case Y:return new r(+t);case st:return function(t,e){var n=e?Zi(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}(t,n);case ut:case ct:case ft:case lt:case ht:case dt:case pt:case gt:case yt:return Ji(t,n);case W:return new r;case K:case et:return new r(t);case Q:return function(t){var e=new t.constructor(t.source,Ut.exec(t));return e.lastIndex=t.lastIndex,e}(t);case tt:return new r;case nt:return i=t,lr?ee(lr.call(i)):{}}var i}(t,g,u)}}o||(o=new xr);var b=o.get(t);if(b)return b;o.set(t,s),Ls(t)?t.forEach((function(r){s.add(Or(r,e,n,r,t,o))})):Ds(t)&&t.forEach((function(r,i){s.set(i,Or(r,e,n,i,t,o))}));var v=p?r:(d?c?Na:Ca:c?au:iu)(t);return He(v||t,(function(r,i){v&&(r=t[i=r]),Tr(s,i,Or(r,e,n,i,t,o))})),s}function Rr(t,e,n){var i=n.length;if(null==t)return!i;for(t=ee(t);i--;){var a=n[i],o=e[a],s=t[a];if(s===r&&!(a in t)||!o(s))return!1}return!0}function Pr(t,e,n){if(\"function\"!=typeof t)throw new ie(o);return ro((function(){t.apply(r,n)}),e)}function Fr(t,e,n,r){var a=-1,o=Ke,s=!0,u=t.length,c=[],f=e.length;if(!u)return c;n&&(e=Ze(e,gn(n))),r?(o=Xe,s=!1):e.length>=i&&(o=bn,s=!1,e=new wr(e));t:for(;++a<u;){var l=t[a],h=null==n?l:n(l);if(l=r||0!==l?l:0,s&&h==h){for(var d=f;d--;)if(e[d]===h)continue t;c.push(l)}else o(e,h,r)||c.push(l)}return c}dr.templateSettings={escape:Et,evaluate:At,interpolate:St,variable:\"\",imports:{_:dr}},dr.prototype=gr.prototype,dr.prototype.constructor=dr,yr.prototype=pr(gr.prototype),yr.prototype.constructor=yr,br.prototype=pr(gr.prototype),br.prototype.constructor=br,vr.prototype.clear=function(){this.__data__=nr?nr(null):{},this.size=0},vr.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},vr.prototype.get=function(t){var e=this.__data__;if(nr){var n=e[t];return n===s?r:n}return fe.call(e,t)?e[t]:r},vr.prototype.has=function(t){var e=this.__data__;return nr?e[t]!==r:fe.call(e,t)},vr.prototype.set=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=nr&&e===r?s:e,this},mr.prototype.clear=function(){this.__data__=[],this.size=0},mr.prototype.delete=function(t){var e=this.__data__,n=Dr(e,t);return!(n<0)&&(n==e.length-1?e.pop():Re.call(e,n,1),--this.size,!0)},mr.prototype.get=function(t){var e=this.__data__,n=Dr(e,t);return n<0?r:e[n][1]},mr.prototype.has=function(t){return Dr(this.__data__,t)>-1},mr.prototype.set=function(t,e){var n=this.__data__,r=Dr(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this},_r.prototype.clear=function(){this.size=0,this.__data__={hash:new vr,map:new(Jn||mr),string:new vr}},_r.prototype.delete=function(t){var e=Ra(this,t).delete(t);return this.size-=e?1:0,e},_r.prototype.get=function(t){return Ra(this,t).get(t)},_r.prototype.has=function(t){return Ra(this,t).has(t)},_r.prototype.set=function(t,e){var n=Ra(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this},wr.prototype.add=wr.prototype.push=function(t){return this.__data__.set(t,s),this},wr.prototype.has=function(t){return this.__data__.has(t)},xr.prototype.clear=function(){this.__data__=new mr,this.size=0},xr.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},xr.prototype.get=function(t){return this.__data__.get(t)},xr.prototype.has=function(t){return this.__data__.has(t)},xr.prototype.set=function(t,e){var n=this.__data__;if(n instanceof mr){var r=n.__data__;if(!Jn||r.length<i-1)return r.push([t,e]),this.size=++n.size,this;n=this.__data__=new _r(r)}return n.set(t,e),this.size=n.size,this};var qr=oa($r),jr=oa(Wr,!0);function Ur(t,e){var n=!0;return qr(t,(function(t,r,i){return n=!!e(t,r,i)})),n}function zr(t,e,n){for(var i=-1,a=t.length;++i<a;){var o=t[i],s=e(o);if(null!=s&&(u===r?s==s&&!Os(s):n(s,u)))var u=s,c=o}return c}function Yr(t,e){var n=[];return qr(t,(function(t,r,i){e(t,r,i)&&n.push(t)})),n}function Vr(t,e,n,r,i){var a=-1,o=t.length;for(n||(n=Va),i||(i=[]);++a<o;){var s=t[a];e>0&&n(s)?e>1?Vr(s,e-1,n,r,i):Je(i,s):r||(i[i.length]=s)}return i}var Hr=sa(),Gr=sa(!0);function $r(t,e){return t&&Hr(t,e,iu)}function Wr(t,e){return t&&Gr(t,e,iu)}function Kr(t,e){return We(e,(function(e){return Es(t[e])}))}function Xr(t,e){for(var n=0,i=(e=Gi(e,t)).length;null!=t&&n<i;)t=t[co(e[n++])];return n&&n==i?t:r}function Zr(t,e,n){var r=e(t);return bs(t)?r:Je(r,n(t))}function Jr(t){return null==t?t===r?rt:X:Ln&&Ln in ee(t)?function(t){var e=fe.call(t,Ln),n=t[Ln];try{t[Ln]=r;var i=!0}catch(t){}var a=de.call(t);i&&(e?t[Ln]=n:delete t[Ln]);return a}(t):function(t){return de.call(t)}(t)}function Qr(t,e){return t>e}function ti(t,e){return null!=t&&fe.call(t,e)}function ei(t,e){return null!=t&&e in ee(t)}function ni(t,e,n){for(var i=n?Xe:Ke,a=t[0].length,o=t.length,s=o,u=Xt(o),c=1/0,f=[];s--;){var l=t[s];s&&e&&(l=Ze(l,gn(e))),c=Gn(l.length,c),u[s]=!n&&(e||a>=120&&l.length>=120)?new wr(s&&l):r}l=t[0];var h=-1,d=u[0];t:for(;++h<a&&f.length<c;){var p=l[h],g=e?e(p):p;if(p=n||0!==p?p:0,!(d?bn(d,g):i(f,g,n))){for(s=o;--s;){var y=u[s];if(!(y?bn(y,g):i(t[s],g,n)))continue t}d&&d.push(g),f.push(p)}}return f}function ri(t,e,n){var i=null==(t=to(t,e=Gi(e,t)))?t:t[co(ko(e))];return null==i?r:Ye(i,t,n)}function ii(t){return Ts(t)&&Jr(t)==q}function ai(t,e,n,i,a){return t===e||(null==t||null==e||!Ts(t)&&!Ts(e)?t!=t&&e!=e:function(t,e,n,i,a,o){var s=bs(t),u=bs(e),c=s?j:Ua(t),f=u?j:Ua(e),l=(c=c==q?Z:c)==Z,h=(f=f==q?Z:f)==Z,g=c==f;if(g&&ws(t)){if(!ws(e))return!1;s=!0,l=!1}if(g&&!l)return o||(o=new xr),s||Rs(t)?Ta(t,e,n,i,a,o):function(t,e,n,r,i,a,o){switch(n){case st:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case ot:return!(t.byteLength!=e.byteLength||!a(new De(t),new De(e)));case z:case Y:case K:return ds(+t,+e);case H:return t.name==e.name&&t.message==e.message;case Q:case et:return t==e+\"\";case W:var s=En;case tt:var u=r&d;if(s||(s=Mn),t.size!=e.size&&!u)return!1;var c=o.get(t);if(c)return c==e;r|=p,o.set(t,e);var f=Ta(s(t),s(e),r,i,a,o);return o.delete(t),f;case nt:if(lr)return lr.call(t)==lr.call(e)}return!1}(t,e,c,n,i,a,o);if(!(n&d)){var y=l&&fe.call(t,\"__wrapped__\"),b=h&&fe.call(e,\"__wrapped__\");if(y||b){var v=y?t.value():t,m=b?e.value():e;return o||(o=new xr),a(v,m,n,i,o)}}if(!g)return!1;return o||(o=new xr),function(t,e,n,i,a,o){var s=n&d,u=Ca(t),c=u.length,f=Ca(e).length;if(c!=f&&!s)return!1;var l=c;for(;l--;){var h=u[l];if(!(s?h in e:fe.call(e,h)))return!1}var p=o.get(t);if(p&&o.get(e))return p==e;var g=!0;o.set(t,e),o.set(e,t);var y=s;for(;++l<c;){h=u[l];var b=t[h],v=e[h];if(i)var m=s?i(v,b,h,e,t,o):i(b,v,h,t,e,o);if(!(m===r?b===v||a(b,v,n,i,o):m)){g=!1;break}y||(y=\"constructor\"==h)}if(g&&!y){var _=t.constructor,w=e.constructor;_!=w&&\"constructor\"in t&&\"constructor\"in e&&!(\"function\"==typeof _&&_ instanceof _&&\"function\"==typeof w&&w instanceof w)&&(g=!1)}return o.delete(t),o.delete(e),g}(t,e,n,i,a,o)}(t,e,n,i,ai,a))}function oi(t,e,n,i){var a=n.length,o=a,s=!i;if(null==t)return!o;for(t=ee(t);a--;){var u=n[a];if(s&&u[2]?u[1]!==t[u[0]]:!(u[0]in t))return!1}for(;++a<o;){var c=(u=n[a])[0],f=t[c],l=u[1];if(s&&u[2]){if(f===r&&!(c in t))return!1}else{var h=new xr;if(i)var g=i(f,l,c,t,e,h);if(!(g===r?ai(l,f,d|p,i,h):g))return!1}}return!0}function si(t){return!(!Ms(t)||(e=t,he&&he in e))&&(Es(t)?ve:Vt).test(fo(t));var e}function ui(t){return\"function\"==typeof t?t:null==t?Cu:\"object\"==typeof t?bs(t)?pi(t[0],t[1]):di(t):qu(t)}function ci(t){if(!Xa(t))return Vn(t);var e=[];for(var n in ee(t))fe.call(t,n)&&\"constructor\"!=n&&e.push(n);return e}function fi(t){if(!Ms(t))return function(t){var e=[];if(null!=t)for(var n in ee(t))e.push(n);return e}(t);var e=Xa(t),n=[];for(var r in t)(\"constructor\"!=r||!e&&fe.call(t,r))&&n.push(r);return n}function li(t,e){return t<e}function hi(t,e){var n=-1,r=ms(t)?Xt(t.length):[];return qr(t,(function(t,i,a){r[++n]=e(t,i,a)})),r}function di(t){var e=Pa(t);return 1==e.length&&e[0][2]?Ja(e[0][0],e[0][1]):function(n){return n===t||oi(n,t,e)}}function pi(t,e){return $a(t)&&Za(e)?Ja(co(t),e):function(n){var i=Qs(n,t);return i===r&&i===e?tu(n,t):ai(e,i,d|p)}}function gi(t,e,n,i,a){t!==e&&Hr(e,(function(o,s){if(a||(a=new xr),Ms(o))!function(t,e,n,i,a,o,s){var u=eo(t,n),c=eo(e,n),f=s.get(c);if(f)return void Mr(t,n,f);var l=o?o(u,c,n+\"\",t,e,s):r,h=l===r;if(h){var d=bs(c),p=!d&&ws(c),g=!d&&!p&&Rs(c);l=c,d||p||g?bs(u)?l=u:_s(u)?l=na(u):p?(h=!1,l=Xi(c,!0)):g?(h=!1,l=Ji(c,!0)):l=[]:Ns(c)||ys(c)?(l=u,ys(u)?l=Vs(u):Ms(u)&&!Es(u)||(l=Ya(c))):h=!1}h&&(s.set(c,l),a(l,c,i,o,s),s.delete(c));Mr(t,n,l)}(t,e,s,n,gi,i,a);else{var u=i?i(eo(t,s),o,s+\"\",t,e,a):r;u===r&&(u=o),Mr(t,s,u)}}),au)}function yi(t,e){var n=t.length;if(n)return Ha(e+=e<0?n:0,n)?t[e]:r}function bi(t,e,n){var r=-1;return e=Ze(e.length?e:[Cu],gn(Oa())),function(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}(hi(t,(function(t,n,i){return{criteria:Ze(e,(function(e){return e(t)})),index:++r,value:t}})),(function(t,e){return function(t,e,n){var r=-1,i=t.criteria,a=e.criteria,o=i.length,s=n.length;for(;++r<o;){var u=Qi(i[r],a[r]);if(u){if(r>=s)return u;var c=n[r];return u*(\"desc\"==c?-1:1)}}return t.index-e.index}(t,e,n)}))}function vi(t,e,n){for(var r=-1,i=e.length,a={};++r<i;){var o=e[r],s=Xr(t,o);n(s,o)&&Si(a,Gi(o,t),s)}return a}function mi(t,e,n,r){var i=r?sn:on,a=-1,o=e.length,s=t;for(t===e&&(e=na(e)),n&&(s=Ze(t,gn(n)));++a<o;)for(var u=0,c=e[a],f=n?n(c):c;(u=i(s,f,u,r))>-1;)s!==t&&Re.call(s,u,1),Re.call(t,u,1);return t}function _i(t,e){for(var n=t?e.length:0,r=n-1;n--;){var i=e[n];if(n==r||i!==a){var a=i;Ha(i)?Re.call(t,i,1):Fi(t,i)}}return t}function wi(t,e){return t+qn(Kn()*(e-t+1))}function xi(t,e){var n=\"\";if(!t||e<1||e>I)return n;do{e%2&&(n+=t),(e=qn(e/2))&&(t+=t)}while(e);return n}function ki(t,e){return io(Qa(t,e,Cu),t+\"\")}function Ei(t){return Er(du(t))}function Ai(t,e){var n=du(t);return so(n,Br(e,0,n.length))}function Si(t,e,n,i){if(!Ms(t))return t;for(var a=-1,o=(e=Gi(e,t)).length,s=o-1,u=t;null!=u&&++a<o;){var c=co(e[a]),f=n;if(a!=s){var l=u[c];(f=i?i(l,c,u):r)===r&&(f=Ms(l)?l:Ha(e[a+1])?[]:{})}Tr(u,c,f),u=u[c]}return t}var Mi=rr?function(t,e){return rr.set(t,e),t}:Cu,Ti=Bn?function(t,e){return Bn(t,\"toString\",{configurable:!0,enumerable:!1,value:Mu(e),writable:!0})}:Cu;function Di(t){return so(du(t))}function Ci(t,e,n){var r=-1,i=t.length;e<0&&(e=-e>i?0:i+e),(n=n>i?i:n)<0&&(n+=i),i=e>n?0:n-e>>>0,e>>>=0;for(var a=Xt(i);++r<i;)a[r]=t[r+e];return a}function Ni(t,e){var n;return qr(t,(function(t,r,i){return!(n=e(t,r,i))})),!!n}function Ii(t,e,n){var r=0,i=null==t?r:t.length;if(\"number\"==typeof e&&e==e&&i<=P){for(;r<i;){var a=r+i>>>1,o=t[a];null!==o&&!Os(o)&&(n?o<=e:o<e)?r=a+1:i=a}return i}return Li(t,e,Cu,n)}function Li(t,e,n,i){e=n(e);for(var a=0,o=null==t?0:t.length,s=e!=e,u=null===e,c=Os(e),f=e===r;a<o;){var l=qn((a+o)/2),h=n(t[l]),d=h!==r,p=null===h,g=h==h,y=Os(h);if(s)var b=i||g;else b=f?g&&(i||d):u?g&&d&&(i||!p):c?g&&d&&!p&&(i||!y):!p&&!y&&(i?h<=e:h<e);b?a=l+1:o=l}return Gn(o,R)}function Bi(t,e){for(var n=-1,r=t.length,i=0,a=[];++n<r;){var o=t[n],s=e?e(o):o;if(!n||!ds(s,u)){var u=s;a[i++]=0===o?0:o}}return a}function Oi(t){return\"number\"==typeof t?t:Os(t)?B:+t}function Ri(t){if(\"string\"==typeof t)return t;if(bs(t))return Ze(t,Ri)+\"\";if(Os(t))return hr?hr.call(t):\"\";var e=t+\"\";return\"0\"==e&&1/t==-N?\"-0\":e}function Pi(t,e,n){var r=-1,a=Ke,o=t.length,s=!0,u=[],c=u;if(n)s=!1,a=Xe;else if(o>=i){var f=e?null:xa(t);if(f)return Mn(f);s=!1,a=bn,c=new wr}else c=e?[]:u;t:for(;++r<o;){var l=t[r],h=e?e(l):l;if(l=n||0!==l?l:0,s&&h==h){for(var d=c.length;d--;)if(c[d]===h)continue t;e&&c.push(h),u.push(l)}else a(c,h,n)||(c!==u&&c.push(h),u.push(l))}return u}function Fi(t,e){return null==(t=to(t,e=Gi(e,t)))||delete t[co(ko(e))]}function qi(t,e,n,r){return Si(t,e,n(Xr(t,e)),r)}function ji(t,e,n,r){for(var i=t.length,a=r?i:-1;(r?a--:++a<i)&&e(t[a],a,t););return n?Ci(t,r?0:a,r?a+1:i):Ci(t,r?a+1:0,r?i:a)}function Ui(t,e){var n=t;return n instanceof br&&(n=n.value()),Qe(e,(function(t,e){return e.func.apply(e.thisArg,Je([t],e.args))}),n)}function zi(t,e,n){var r=t.length;if(r<2)return r?Pi(t[0]):[];for(var i=-1,a=Xt(r);++i<r;)for(var o=t[i],s=-1;++s<r;)s!=i&&(a[i]=Fr(a[i]||o,t[s],e,n));return Pi(Vr(a,1),e,n)}function Yi(t,e,n){for(var i=-1,a=t.length,o=e.length,s={};++i<a;){var u=i<o?e[i]:r;n(s,t[i],u)}return s}function Vi(t){return _s(t)?t:[]}function Hi(t){return\"function\"==typeof t?t:Cu}function Gi(t,e){return bs(t)?t:$a(t,e)?[t]:uo(Hs(t))}var $i=ki;function Wi(t,e,n){var i=t.length;return n=n===r?i:n,!e&&n>=i?t:Ci(t,e,n)}var Ki=On||function(t){return Ne.clearTimeout(t)};function Xi(t,e){if(e)return t.slice();var n=t.length,r=Ce?Ce(n):new t.constructor(n);return t.copy(r),r}function Zi(t){var e=new t.constructor(t.byteLength);return new De(e).set(new De(t)),e}function Ji(t,e){var n=e?Zi(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}function Qi(t,e){if(t!==e){var n=t!==r,i=null===t,a=t==t,o=Os(t),s=e!==r,u=null===e,c=e==e,f=Os(e);if(!u&&!f&&!o&&t>e||o&&s&&c&&!u&&!f||i&&s&&c||!n&&c||!a)return 1;if(!i&&!o&&!f&&t<e||f&&n&&a&&!i&&!o||u&&n&&a||!s&&a||!c)return-1}return 0}function ta(t,e,n,r){for(var i=-1,a=t.length,o=n.length,s=-1,u=e.length,c=Hn(a-o,0),f=Xt(u+c),l=!r;++s<u;)f[s]=e[s];for(;++i<o;)(l||i<a)&&(f[n[i]]=t[i]);for(;c--;)f[s++]=t[i++];return f}function ea(t,e,n,r){for(var i=-1,a=t.length,o=-1,s=n.length,u=-1,c=e.length,f=Hn(a-s,0),l=Xt(f+c),h=!r;++i<f;)l[i]=t[i];for(var d=i;++u<c;)l[d+u]=e[u];for(;++o<s;)(h||i<a)&&(l[d+n[o]]=t[i++]);return l}function na(t,e){var n=-1,r=t.length;for(e||(e=Xt(r));++n<r;)e[n]=t[n];return e}function ra(t,e,n,i){var a=!n;n||(n={});for(var o=-1,s=e.length;++o<s;){var u=e[o],c=i?i(n[u],t[u],u,n,t):r;c===r&&(c=t[u]),a?Ir(n,u,c):Tr(n,u,c)}return n}function ia(t,e){return function(n,r){var i=bs(n)?Ve:Cr,a=e?e():{};return i(n,t,Oa(r,2),a)}}function aa(t){return ki((function(e,n){var i=-1,a=n.length,o=a>1?n[a-1]:r,s=a>2?n[2]:r;for(o=t.length>3&&\"function\"==typeof o?(a--,o):r,s&&Ga(n[0],n[1],s)&&(o=a<3?r:o,a=1),e=ee(e);++i<a;){var u=n[i];u&&t(e,u,i,o)}return e}))}function oa(t,e){return function(n,r){if(null==n)return n;if(!ms(n))return t(n,r);for(var i=n.length,a=e?i:-1,o=ee(n);(e?a--:++a<i)&&!1!==r(o[a],a,o););return n}}function sa(t){return function(e,n,r){for(var i=-1,a=ee(e),o=r(e),s=o.length;s--;){var u=o[t?s:++i];if(!1===n(a[u],u,a))break}return e}}function ua(t){return function(e){var n=kn(e=Hs(e))?Cn(e):r,i=n?n[0]:e.charAt(0),a=n?Wi(n,1).join(\"\"):e.slice(1);return i[t]()+a}}function ca(t){return function(e){return Qe(Eu(yu(e).replace(ye,\"\")),t,\"\")}}function fa(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var n=pr(t.prototype),r=t.apply(n,e);return Ms(r)?r:n}}function la(t){return function(e,n,i){var a=ee(e);if(!ms(e)){var o=Oa(n,3);e=iu(e),n=function(t){return o(a[t],t,a)}}var s=t(e,n,i);return s>-1?a[o?e[s]:s]:r}}function ha(t){return Da((function(e){var n=e.length,i=n,a=yr.prototype.thru;for(t&&e.reverse();i--;){var s=e[i];if(\"function\"!=typeof s)throw new ie(o);if(a&&!u&&\"wrapper\"==La(s))var u=new yr([],!0)}for(i=u?i:n;++i<n;){var c=La(s=e[i]),f=\"wrapper\"==c?Ia(s):r;u=f&&Wa(f[0])&&f[1]==(x|v|_|k)&&!f[4].length&&1==f[9]?u[La(f[0])].apply(u,f[3]):1==s.length&&Wa(s)?u[c]():u.thru(s)}return function(){var t=arguments,r=t[0];if(u&&1==t.length&&bs(r))return u.plant(r).value();for(var i=0,a=n?e[i].apply(this,t):r;++i<n;)a=e[i].call(this,a);return a}}))}function da(t,e,n,i,a,o,s,u,c,f){var l=e&x,h=e&g,d=e&y,p=e&(v|m),b=e&E,_=d?r:fa(t);return function g(){for(var y=arguments.length,v=Xt(y),m=y;m--;)v[m]=arguments[m];if(p)var w=Ba(g),x=function(t,e){for(var n=t.length,r=0;n--;)t[n]===e&&++r;return r}(v,w);if(i&&(v=ta(v,i,a,p)),o&&(v=ea(v,o,s,p)),y-=x,p&&y<f){var k=Sn(v,w);return _a(t,e,da,g.placeholder,n,v,k,u,c,f-y)}var E=h?n:this,A=d?E[t]:t;return y=v.length,u?v=function(t,e){var n=t.length,i=Gn(e.length,n),a=na(t);for(;i--;){var o=e[i];t[i]=Ha(o,n)?a[o]:r}return t}(v,u):b&&y>1&&v.reverse(),l&&c<y&&(v.length=c),this&&this!==Ne&&this instanceof g&&(A=_||fa(A)),A.apply(E,v)}}function pa(t,e){return function(n,r){return function(t,e,n,r){return $r(t,(function(t,i,a){e(r,n(t),i,a)})),r}(n,t,e(r),{})}}function ga(t,e){return function(n,i){var a;if(n===r&&i===r)return e;if(n!==r&&(a=n),i!==r){if(a===r)return i;\"string\"==typeof n||\"string\"==typeof i?(n=Ri(n),i=Ri(i)):(n=Oi(n),i=Oi(i)),a=t(n,i)}return a}}function ya(t){return Da((function(e){return e=Ze(e,gn(Oa())),ki((function(n){var r=this;return t(e,(function(t){return Ye(t,r,n)}))}))}))}function ba(t,e){var n=(e=e===r?\" \":Ri(e)).length;if(n<2)return n?xi(e,t):e;var i=xi(e,Fn(t/Dn(e)));return kn(e)?Wi(Cn(i),0,t).join(\"\"):i.slice(0,t)}function va(t){return function(e,n,i){return i&&\"number\"!=typeof i&&Ga(e,n,i)&&(n=i=r),e=js(e),n===r?(n=e,e=0):n=js(n),function(t,e,n,r){for(var i=-1,a=Hn(Fn((e-t)/(n||1)),0),o=Xt(a);a--;)o[r?a:++i]=t,t+=n;return o}(e,n,i=i===r?e<n?1:-1:js(i),t)}}function ma(t){return function(e,n){return\"string\"==typeof e&&\"string\"==typeof n||(e=Ys(e),n=Ys(n)),t(e,n)}}function _a(t,e,n,i,a,o,s,u,c,f){var l=e&v;e|=l?_:w,(e&=~(l?w:_))&b||(e&=~(g|y));var h=[t,e,a,l?o:r,l?s:r,l?r:o,l?r:s,u,c,f],d=n.apply(r,h);return Wa(t)&&no(d,h),d.placeholder=i,ao(d,t,e)}function wa(t){var e=te[t];return function(t,n){if(t=Ys(t),(n=null==n?0:Gn(Us(n),292))&&zn(t)){var r=(Hs(t)+\"e\").split(\"e\");return+((r=(Hs(e(r[0]+\"e\"+(+r[1]+n)))+\"e\").split(\"e\"))[0]+\"e\"+(+r[1]-n))}return e(t)}}var xa=tr&&1/Mn(new tr([,-0]))[1]==N?function(t){return new tr(t)}:Ou;function ka(t){return function(e){var n=Ua(e);return n==W?En(e):n==tt?Tn(e):function(t,e){return Ze(e,(function(e){return[e,t[e]]}))}(e,t(e))}}function Ea(t,e,n,i,a,s,u,f){var l=e&y;if(!l&&\"function\"!=typeof t)throw new ie(o);var h=i?i.length:0;if(h||(e&=~(_|w),i=a=r),u=u===r?u:Hn(Us(u),0),f=f===r?f:Us(f),h-=a?a.length:0,e&w){var d=i,p=a;i=a=r}var E=l?r:Ia(t),A=[t,e,n,i,a,d,p,s,u,f];if(E&&function(t,e){var n=t[1],r=e[1],i=n|r,a=i<(g|y|x),o=r==x&&n==v||r==x&&n==k&&t[7].length<=e[8]||r==(x|k)&&e[7].length<=e[8]&&n==v;if(!a&&!o)return t;r&g&&(t[2]=e[2],i|=n&g?0:b);var s=e[3];if(s){var u=t[3];t[3]=u?ta(u,s,e[4]):s,t[4]=u?Sn(t[3],c):e[4]}(s=e[5])&&(u=t[5],t[5]=u?ea(u,s,e[6]):s,t[6]=u?Sn(t[5],c):e[6]);(s=e[7])&&(t[7]=s);r&x&&(t[8]=null==t[8]?e[8]:Gn(t[8],e[8]));null==t[9]&&(t[9]=e[9]);t[0]=e[0],t[1]=i}(A,E),t=A[0],e=A[1],n=A[2],i=A[3],a=A[4],!(f=A[9]=A[9]===r?l?0:t.length:Hn(A[9]-h,0))&&e&(v|m)&&(e&=~(v|m)),e&&e!=g)S=e==v||e==m?function(t,e,n){var i=fa(t);return function a(){for(var o=arguments.length,s=Xt(o),u=o,c=Ba(a);u--;)s[u]=arguments[u];var f=o<3&&s[0]!==c&&s[o-1]!==c?[]:Sn(s,c);return(o-=f.length)<n?_a(t,e,da,a.placeholder,r,s,f,r,r,n-o):Ye(this&&this!==Ne&&this instanceof a?i:t,this,s)}}(t,e,f):e!=_&&e!=(g|_)||a.length?da.apply(r,A):function(t,e,n,r){var i=e&g,a=fa(t);return function e(){for(var o=-1,s=arguments.length,u=-1,c=r.length,f=Xt(c+s),l=this&&this!==Ne&&this instanceof e?a:t;++u<c;)f[u]=r[u];for(;s--;)f[u++]=arguments[++o];return Ye(l,i?n:this,f)}}(t,e,n,i);else var S=function(t,e,n){var r=e&g,i=fa(t);return function e(){return(this&&this!==Ne&&this instanceof e?i:t).apply(r?n:this,arguments)}}(t,e,n);return ao((E?Mi:no)(S,A),t,e)}function Aa(t,e,n,i){return t===r||ds(t,se[n])&&!fe.call(i,n)?e:t}function Sa(t,e,n,i,a,o){return Ms(t)&&Ms(e)&&(o.set(e,t),gi(t,e,r,Sa,o),o.delete(e)),t}function Ma(t){return Ns(t)?r:t}function Ta(t,e,n,i,a,o){var s=n&d,u=t.length,c=e.length;if(u!=c&&!(s&&c>u))return!1;var f=o.get(t);if(f&&o.get(e))return f==e;var l=-1,h=!0,g=n&p?new wr:r;for(o.set(t,e),o.set(e,t);++l<u;){var y=t[l],b=e[l];if(i)var v=s?i(b,y,l,e,t,o):i(y,b,l,t,e,o);if(v!==r){if(v)continue;h=!1;break}if(g){if(!en(e,(function(t,e){if(!bn(g,e)&&(y===t||a(y,t,n,i,o)))return g.push(e)}))){h=!1;break}}else if(y!==b&&!a(y,b,n,i,o)){h=!1;break}}return o.delete(t),o.delete(e),h}function Da(t){return io(Qa(t,r,vo),t+\"\")}function Ca(t){return Zr(t,iu,qa)}function Na(t){return Zr(t,au,ja)}var Ia=rr?function(t){return rr.get(t)}:Ou;function La(t){for(var e=t.name+\"\",n=ir[e],r=fe.call(ir,e)?n.length:0;r--;){var i=n[r],a=i.func;if(null==a||a==t)return i.name}return e}function Ba(t){return(fe.call(dr,\"placeholder\")?dr:t).placeholder}function Oa(){var t=dr.iteratee||Nu;return t=t===Nu?ui:t,arguments.length?t(arguments[0],arguments[1]):t}function Ra(t,e){var n,r,i=t.__data__;return(\"string\"==(r=typeof(n=e))||\"number\"==r||\"symbol\"==r||\"boolean\"==r?\"__proto__\"!==n:null===n)?i[\"string\"==typeof e?\"string\":\"hash\"]:i.map}function Pa(t){for(var e=iu(t),n=e.length;n--;){var r=e[n],i=t[r];e[n]=[r,i,Za(i)]}return e}function Fa(t,e){var n=function(t,e){return null==t?r:t[e]}(t,e);return si(n)?n:r}var qa=jn?function(t){return null==t?[]:(t=ee(t),We(jn(t),(function(e){return Oe.call(t,e)})))}:zu,ja=jn?function(t){for(var e=[];t;)Je(e,qa(t)),t=Ie(t);return e}:zu,Ua=Jr;function za(t,e,n){for(var r=-1,i=(e=Gi(e,t)).length,a=!1;++r<i;){var o=co(e[r]);if(!(a=null!=t&&n(t,o)))break;t=t[o]}return a||++r!=i?a:!!(i=null==t?0:t.length)&&Ss(i)&&Ha(o,i)&&(bs(t)||ys(t))}function Ya(t){return\"function\"!=typeof t.constructor||Xa(t)?{}:pr(Ie(t))}function Va(t){return bs(t)||ys(t)||!!(nn&&t&&t[nn])}function Ha(t,e){var n=typeof t;return!!(e=null==e?I:e)&&(\"number\"==n||\"symbol\"!=n&&Gt.test(t))&&t>-1&&t%1==0&&t<e}function Ga(t,e,n){if(!Ms(n))return!1;var r=typeof e;return!!(\"number\"==r?ms(n)&&Ha(e,n.length):\"string\"==r&&e in n)&&ds(n[e],t)}function $a(t,e){if(bs(t))return!1;var n=typeof t;return!(\"number\"!=n&&\"symbol\"!=n&&\"boolean\"!=n&&null!=t&&!Os(t))||(Tt.test(t)||!Mt.test(t)||null!=e&&t in ee(e))}function Wa(t){var e=La(t),n=dr[e];if(\"function\"!=typeof n||!(e in br.prototype))return!1;if(t===n)return!0;var r=Ia(n);return!!r&&t===r[0]}(Zn&&Ua(new Zn(new ArrayBuffer(1)))!=st||Jn&&Ua(new Jn)!=W||Qn&&\"[object Promise]\"!=Ua(Qn.resolve())||tr&&Ua(new tr)!=tt||er&&Ua(new er)!=it)&&(Ua=function(t){var e=Jr(t),n=e==Z?t.constructor:r,i=n?fo(n):\"\";if(i)switch(i){case ar:return st;case or:return W;case sr:return\"[object Promise]\";case ur:return tt;case cr:return it}return e});var Ka=ue?Es:Yu;function Xa(t){var e=t&&t.constructor;return t===(\"function\"==typeof e&&e.prototype||se)}function Za(t){return t==t&&!Ms(t)}function Ja(t,e){return function(n){return null!=n&&(n[t]===e&&(e!==r||t in ee(n)))}}function Qa(t,e,n){return e=Hn(e===r?t.length-1:e,0),function(){for(var r=arguments,i=-1,a=Hn(r.length-e,0),o=Xt(a);++i<a;)o[i]=r[e+i];i=-1;for(var s=Xt(e+1);++i<e;)s[i]=r[i];return s[e]=n(o),Ye(t,this,s)}}function to(t,e){return e.length<2?t:Xr(t,Ci(e,0,-1))}function eo(t,e){if((\"constructor\"!==e||\"function\"!=typeof t[e])&&\"__proto__\"!=e)return t[e]}var no=oo(Mi),ro=Pn||function(t,e){return Ne.setTimeout(t,e)},io=oo(Ti);function ao(t,e,n){var r=e+\"\";return io(t,function(t,e){var n=e.length;if(!n)return t;var r=n-1;return e[r]=(n>1?\"& \":\"\")+e[r],e=e.join(n>2?\", \":\" \"),t.replace(Ot,\"{\\n/* [wrapped with \"+e+\"] */\\n\")}(r,function(t,e){return He(F,(function(n){var r=\"_.\"+n[0];e&n[1]&&!Ke(t,r)&&t.push(r)})),t.sort()}(function(t){var e=t.match(Rt);return e?e[1].split(Pt):[]}(r),n)))}function oo(t){var e=0,n=0;return function(){var i=$n(),a=T-(i-n);if(n=i,a>0){if(++e>=M)return arguments[0]}else e=0;return t.apply(r,arguments)}}function so(t,e){var n=-1,i=t.length,a=i-1;for(e=e===r?i:e;++n<e;){var o=wi(n,a),s=t[o];t[o]=t[n],t[n]=s}return t.length=e,t}var uo=function(t){var e=ss(t,(function(t){return n.size===u&&n.clear(),t})),n=e.cache;return e}((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(\"\"),t.replace(Dt,(function(t,n,r,i){e.push(r?i.replace(qt,\"$1\"):n||t)})),e}));function co(t){if(\"string\"==typeof t||Os(t))return t;var e=t+\"\";return\"0\"==e&&1/t==-N?\"-0\":e}function fo(t){if(null!=t){try{return ce.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function lo(t){if(t instanceof br)return t.clone();var e=new yr(t.__wrapped__,t.__chain__);return e.__actions__=na(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}var ho=ki((function(t,e){return _s(t)?Fr(t,Vr(e,1,_s,!0)):[]})),po=ki((function(t,e){var n=ko(e);return _s(n)&&(n=r),_s(t)?Fr(t,Vr(e,1,_s,!0),Oa(n,2)):[]})),go=ki((function(t,e){var n=ko(e);return _s(n)&&(n=r),_s(t)?Fr(t,Vr(e,1,_s,!0),r,n):[]}));function yo(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var i=null==n?0:Us(n);return i<0&&(i=Hn(r+i,0)),an(t,Oa(e,3),i)}function bo(t,e,n){var i=null==t?0:t.length;if(!i)return-1;var a=i-1;return n!==r&&(a=Us(n),a=n<0?Hn(i+a,0):Gn(a,i-1)),an(t,Oa(e,3),a,!0)}function vo(t){return(null==t?0:t.length)?Vr(t,1):[]}function mo(t){return t&&t.length?t[0]:r}var _o=ki((function(t){var e=Ze(t,Vi);return e.length&&e[0]===t[0]?ni(e):[]})),wo=ki((function(t){var e=ko(t),n=Ze(t,Vi);return e===ko(n)?e=r:n.pop(),n.length&&n[0]===t[0]?ni(n,Oa(e,2)):[]})),xo=ki((function(t){var e=ko(t),n=Ze(t,Vi);return(e=\"function\"==typeof e?e:r)&&n.pop(),n.length&&n[0]===t[0]?ni(n,r,e):[]}));function ko(t){var e=null==t?0:t.length;return e?t[e-1]:r}var Eo=ki(Ao);function Ao(t,e){return t&&t.length&&e&&e.length?mi(t,e):t}var So=Da((function(t,e){var n=null==t?0:t.length,r=Lr(t,e);return _i(t,Ze(e,(function(t){return Ha(t,n)?+t:t})).sort(Qi)),r}));function Mo(t){return null==t?t:Xn.call(t)}var To=ki((function(t){return Pi(Vr(t,1,_s,!0))})),Do=ki((function(t){var e=ko(t);return _s(e)&&(e=r),Pi(Vr(t,1,_s,!0),Oa(e,2))})),Co=ki((function(t){var e=ko(t);return e=\"function\"==typeof e?e:r,Pi(Vr(t,1,_s,!0),r,e)}));function No(t){if(!t||!t.length)return[];var e=0;return t=We(t,(function(t){if(_s(t))return e=Hn(t.length,e),!0})),pn(e,(function(e){return Ze(t,fn(e))}))}function Io(t,e){if(!t||!t.length)return[];var n=No(t);return null==e?n:Ze(n,(function(t){return Ye(e,r,t)}))}var Lo=ki((function(t,e){return _s(t)?Fr(t,e):[]})),Bo=ki((function(t){return zi(We(t,_s))})),Oo=ki((function(t){var e=ko(t);return _s(e)&&(e=r),zi(We(t,_s),Oa(e,2))})),Ro=ki((function(t){var e=ko(t);return e=\"function\"==typeof e?e:r,zi(We(t,_s),r,e)})),Po=ki(No);var Fo=ki((function(t){var e=t.length,n=e>1?t[e-1]:r;return n=\"function\"==typeof n?(t.pop(),n):r,Io(t,n)}));function qo(t){var e=dr(t);return e.__chain__=!0,e}function jo(t,e){return e(t)}var Uo=Da((function(t){var e=t.length,n=e?t[0]:0,i=this.__wrapped__,a=function(e){return Lr(e,t)};return!(e>1||this.__actions__.length)&&i instanceof br&&Ha(n)?((i=i.slice(n,+n+(e?1:0))).__actions__.push({func:jo,args:[a],thisArg:r}),new yr(i,this.__chain__).thru((function(t){return e&&!t.length&&t.push(r),t}))):this.thru(a)}));var zo=ia((function(t,e,n){fe.call(t,n)?++t[n]:Ir(t,n,1)}));var Yo=la(yo),Vo=la(bo);function Ho(t,e){return(bs(t)?He:qr)(t,Oa(e,3))}function Go(t,e){return(bs(t)?Ge:jr)(t,Oa(e,3))}var $o=ia((function(t,e,n){fe.call(t,n)?t[n].push(e):Ir(t,n,[e])}));var Wo=ki((function(t,e,n){var r=-1,i=\"function\"==typeof e,a=ms(t)?Xt(t.length):[];return qr(t,(function(t){a[++r]=i?Ye(e,t,n):ri(t,e,n)})),a})),Ko=ia((function(t,e,n){Ir(t,n,e)}));function Xo(t,e){return(bs(t)?Ze:hi)(t,Oa(e,3))}var Zo=ia((function(t,e,n){t[n?0:1].push(e)}),(function(){return[[],[]]}));var Jo=ki((function(t,e){if(null==t)return[];var n=e.length;return n>1&&Ga(t,e[0],e[1])?e=[]:n>2&&Ga(e[0],e[1],e[2])&&(e=[e[0]]),bi(t,Vr(e,1),[])})),Qo=Rn||function(){return Ne.Date.now()};function ts(t,e,n){return e=n?r:e,e=t&&null==e?t.length:e,Ea(t,x,r,r,r,r,e)}function es(t,e){var n;if(\"function\"!=typeof e)throw new ie(o);return t=Us(t),function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=r),n}}var ns=ki((function(t,e,n){var r=g;if(n.length){var i=Sn(n,Ba(ns));r|=_}return Ea(t,r,e,n,i)})),rs=ki((function(t,e,n){var r=g|y;if(n.length){var i=Sn(n,Ba(rs));r|=_}return Ea(e,r,t,n,i)}));function is(t,e,n){var i,a,s,u,c,f,l=0,h=!1,d=!1,p=!0;if(\"function\"!=typeof t)throw new ie(o);function g(e){var n=i,o=a;return i=a=r,l=e,u=t.apply(o,n)}function y(t){var n=t-f;return f===r||n>=e||n<0||d&&t-l>=s}function b(){var t=Qo();if(y(t))return v(t);c=ro(b,function(t){var n=e-(t-f);return d?Gn(n,s-(t-l)):n}(t))}function v(t){return c=r,p&&i?g(t):(i=a=r,u)}function m(){var t=Qo(),n=y(t);if(i=arguments,a=this,f=t,n){if(c===r)return function(t){return l=t,c=ro(b,e),h?g(t):u}(f);if(d)return Ki(c),c=ro(b,e),g(f)}return c===r&&(c=ro(b,e)),u}return e=Ys(e)||0,Ms(n)&&(h=!!n.leading,s=(d=\"maxWait\"in n)?Hn(Ys(n.maxWait)||0,e):s,p=\"trailing\"in n?!!n.trailing:p),m.cancel=function(){c!==r&&Ki(c),l=0,i=f=a=c=r},m.flush=function(){return c===r?u:v(Qo())},m}var as=ki((function(t,e){return Pr(t,1,e)})),os=ki((function(t,e,n){return Pr(t,Ys(e)||0,n)}));function ss(t,e){if(\"function\"!=typeof t||null!=e&&\"function\"!=typeof e)throw new ie(o);var n=function(){var r=arguments,i=e?e.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var o=t.apply(this,r);return n.cache=a.set(i,o)||a,o};return n.cache=new(ss.Cache||_r),n}function us(t){if(\"function\"!=typeof t)throw new ie(o);return function(){var e=arguments;switch(e.length){case 0:return!t.call(this);case 1:return!t.call(this,e[0]);case 2:return!t.call(this,e[0],e[1]);case 3:return!t.call(this,e[0],e[1],e[2])}return!t.apply(this,e)}}ss.Cache=_r;var cs=$i((function(t,e){var n=(e=1==e.length&&bs(e[0])?Ze(e[0],gn(Oa())):Ze(Vr(e,1),gn(Oa()))).length;return ki((function(r){for(var i=-1,a=Gn(r.length,n);++i<a;)r[i]=e[i].call(this,r[i]);return Ye(t,this,r)}))})),fs=ki((function(t,e){var n=Sn(e,Ba(fs));return Ea(t,_,r,e,n)})),ls=ki((function(t,e){var n=Sn(e,Ba(ls));return Ea(t,w,r,e,n)})),hs=Da((function(t,e){return Ea(t,k,r,r,r,e)}));function ds(t,e){return t===e||t!=t&&e!=e}var ps=ma(Qr),gs=ma((function(t,e){return t>=e})),ys=ii(function(){return arguments}())?ii:function(t){return Ts(t)&&fe.call(t,\"callee\")&&!Oe.call(t,\"callee\")},bs=Xt.isArray,vs=Pe?gn(Pe):function(t){return Ts(t)&&Jr(t)==ot};function ms(t){return null!=t&&Ss(t.length)&&!Es(t)}function _s(t){return Ts(t)&&ms(t)}var ws=Un||Yu,xs=Fe?gn(Fe):function(t){return Ts(t)&&Jr(t)==Y};function ks(t){if(!Ts(t))return!1;var e=Jr(t);return e==H||e==V||\"string\"==typeof t.message&&\"string\"==typeof t.name&&!Ns(t)}function Es(t){if(!Ms(t))return!1;var e=Jr(t);return e==G||e==$||e==U||e==J}function As(t){return\"number\"==typeof t&&t==Us(t)}function Ss(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=I}function Ms(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}function Ts(t){return null!=t&&\"object\"==typeof t}var Ds=qe?gn(qe):function(t){return Ts(t)&&Ua(t)==W};function Cs(t){return\"number\"==typeof t||Ts(t)&&Jr(t)==K}function Ns(t){if(!Ts(t)||Jr(t)!=Z)return!1;var e=Ie(t);if(null===e)return!0;var n=fe.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&ce.call(n)==pe}var Is=je?gn(je):function(t){return Ts(t)&&Jr(t)==Q};var Ls=Ue?gn(Ue):function(t){return Ts(t)&&Ua(t)==tt};function Bs(t){return\"string\"==typeof t||!bs(t)&&Ts(t)&&Jr(t)==et}function Os(t){return\"symbol\"==typeof t||Ts(t)&&Jr(t)==nt}var Rs=ze?gn(ze):function(t){return Ts(t)&&Ss(t.length)&&!!Ee[Jr(t)]};var Ps=ma(li),Fs=ma((function(t,e){return t<=e}));function qs(t){if(!t)return[];if(ms(t))return Bs(t)?Cn(t):na(t);if(ln&&t[ln])return function(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}(t[ln]());var e=Ua(t);return(e==W?En:e==tt?Mn:du)(t)}function js(t){return t?(t=Ys(t))===N||t===-N?(t<0?-1:1)*L:t==t?t:0:0===t?t:0}function Us(t){var e=js(t),n=e%1;return e==e?n?e-n:e:0}function zs(t){return t?Br(Us(t),0,O):0}function Ys(t){if(\"number\"==typeof t)return t;if(Os(t))return B;if(Ms(t)){var e=\"function\"==typeof t.valueOf?t.valueOf():t;t=Ms(e)?e+\"\":e}if(\"string\"!=typeof t)return 0===t?t:+t;t=t.replace(It,\"\");var n=Yt.test(t);return n||Ht.test(t)?Te(t.slice(2),n?2:8):zt.test(t)?B:+t}function Vs(t){return ra(t,au(t))}function Hs(t){return null==t?\"\":Ri(t)}var Gs=aa((function(t,e){if(Xa(e)||ms(e))ra(e,iu(e),t);else for(var n in e)fe.call(e,n)&&Tr(t,n,e[n])})),$s=aa((function(t,e){ra(e,au(e),t)})),Ws=aa((function(t,e,n,r){ra(e,au(e),t,r)})),Ks=aa((function(t,e,n,r){ra(e,iu(e),t,r)})),Xs=Da(Lr);var Zs=ki((function(t,e){t=ee(t);var n=-1,i=e.length,a=i>2?e[2]:r;for(a&&Ga(e[0],e[1],a)&&(i=1);++n<i;)for(var o=e[n],s=au(o),u=-1,c=s.length;++u<c;){var f=s[u],l=t[f];(l===r||ds(l,se[f])&&!fe.call(t,f))&&(t[f]=o[f])}return t})),Js=ki((function(t){return t.push(r,Sa),Ye(su,r,t)}));function Qs(t,e,n){var i=null==t?r:Xr(t,e);return i===r?n:i}function tu(t,e){return null!=t&&za(t,e,ei)}var eu=pa((function(t,e,n){null!=e&&\"function\"!=typeof e.toString&&(e=de.call(e)),t[e]=n}),Mu(Cu)),nu=pa((function(t,e,n){null!=e&&\"function\"!=typeof e.toString&&(e=de.call(e)),fe.call(t,e)?t[e].push(n):t[e]=[n]}),Oa),ru=ki(ri);function iu(t){return ms(t)?kr(t):ci(t)}function au(t){return ms(t)?kr(t,!0):fi(t)}var ou=aa((function(t,e,n){gi(t,e,n)})),su=aa((function(t,e,n,r){gi(t,e,n,r)})),uu=Da((function(t,e){var n={};if(null==t)return n;var r=!1;e=Ze(e,(function(e){return e=Gi(e,t),r||(r=e.length>1),e})),ra(t,Na(t),n),r&&(n=Or(n,f|l|h,Ma));for(var i=e.length;i--;)Fi(n,e[i]);return n}));var cu=Da((function(t,e){return null==t?{}:function(t,e){return vi(t,e,(function(e,n){return tu(t,n)}))}(t,e)}));function fu(t,e){if(null==t)return{};var n=Ze(Na(t),(function(t){return[t]}));return e=Oa(e),vi(t,n,(function(t,n){return e(t,n[0])}))}var lu=ka(iu),hu=ka(au);function du(t){return null==t?[]:yn(t,iu(t))}var pu=ca((function(t,e,n){return e=e.toLowerCase(),t+(n?gu(e):e)}));function gu(t){return ku(Hs(t).toLowerCase())}function yu(t){return(t=Hs(t))&&t.replace($t,_n).replace(be,\"\")}var bu=ca((function(t,e,n){return t+(n?\"-\":\"\")+e.toLowerCase()})),vu=ca((function(t,e,n){return t+(n?\" \":\"\")+e.toLowerCase()})),mu=ua(\"toLowerCase\");var _u=ca((function(t,e,n){return t+(n?\"_\":\"\")+e.toLowerCase()}));var wu=ca((function(t,e,n){return t+(n?\" \":\"\")+ku(e)}));var xu=ca((function(t,e,n){return t+(n?\" \":\"\")+e.toUpperCase()})),ku=ua(\"toUpperCase\");function Eu(t,e,n){return t=Hs(t),(e=n?r:e)===r?function(t){return we.test(t)}(t)?function(t){return t.match(me)||[]}(t):function(t){return t.match(Ft)||[]}(t):t.match(e)||[]}var Au=ki((function(t,e){try{return Ye(t,r,e)}catch(t){return ks(t)?t:new Jt(t)}})),Su=Da((function(t,e){return He(e,(function(e){e=co(e),Ir(t,e,ns(t[e],t))})),t}));function Mu(t){return function(){return t}}var Tu=ha(),Du=ha(!0);function Cu(t){return t}function Nu(t){return ui(\"function\"==typeof t?t:Or(t,f))}var Iu=ki((function(t,e){return function(n){return ri(n,t,e)}})),Lu=ki((function(t,e){return function(n){return ri(t,n,e)}}));function Bu(t,e,n){var r=iu(e),i=Kr(e,r);null!=n||Ms(e)&&(i.length||!r.length)||(n=e,e=t,t=this,i=Kr(e,iu(e)));var a=!(Ms(n)&&\"chain\"in n&&!n.chain),o=Es(t);return He(i,(function(n){var r=e[n];t[n]=r,o&&(t.prototype[n]=function(){var e=this.__chain__;if(a||e){var n=t(this.__wrapped__),i=n.__actions__=na(this.__actions__);return i.push({func:r,args:arguments,thisArg:t}),n.__chain__=e,n}return r.apply(t,Je([this.value()],arguments))})})),t}function Ou(){}var Ru=ya(Ze),Pu=ya($e),Fu=ya(en);function qu(t){return $a(t)?fn(co(t)):function(t){return function(e){return Xr(e,t)}}(t)}var ju=va(),Uu=va(!0);function zu(){return[]}function Yu(){return!1}var Vu=ga((function(t,e){return t+e}),0),Hu=wa(\"ceil\"),Gu=ga((function(t,e){return t/e}),1),$u=wa(\"floor\");var Wu,Ku=ga((function(t,e){return t*e}),1),Xu=wa(\"round\"),Zu=ga((function(t,e){return t-e}),0);return dr.after=function(t,e){if(\"function\"!=typeof e)throw new ie(o);return t=Us(t),function(){if(--t<1)return e.apply(this,arguments)}},dr.ary=ts,dr.assign=Gs,dr.assignIn=$s,dr.assignInWith=Ws,dr.assignWith=Ks,dr.at=Xs,dr.before=es,dr.bind=ns,dr.bindAll=Su,dr.bindKey=rs,dr.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return bs(t)?t:[t]},dr.chain=qo,dr.chunk=function(t,e,n){e=(n?Ga(t,e,n):e===r)?1:Hn(Us(e),0);var i=null==t?0:t.length;if(!i||e<1)return[];for(var a=0,o=0,s=Xt(Fn(i/e));a<i;)s[o++]=Ci(t,a,a+=e);return s},dr.compact=function(t){for(var e=-1,n=null==t?0:t.length,r=0,i=[];++e<n;){var a=t[e];a&&(i[r++]=a)}return i},dr.concat=function(){var t=arguments.length;if(!t)return[];for(var e=Xt(t-1),n=arguments[0],r=t;r--;)e[r-1]=arguments[r];return Je(bs(n)?na(n):[n],Vr(e,1))},dr.cond=function(t){var e=null==t?0:t.length,n=Oa();return t=e?Ze(t,(function(t){if(\"function\"!=typeof t[1])throw new ie(o);return[n(t[0]),t[1]]})):[],ki((function(n){for(var r=-1;++r<e;){var i=t[r];if(Ye(i[0],this,n))return Ye(i[1],this,n)}}))},dr.conforms=function(t){return function(t){var e=iu(t);return function(n){return Rr(n,t,e)}}(Or(t,f))},dr.constant=Mu,dr.countBy=zo,dr.create=function(t,e){var n=pr(t);return null==e?n:Nr(n,e)},dr.curry=function t(e,n,i){var a=Ea(e,v,r,r,r,r,r,n=i?r:n);return a.placeholder=t.placeholder,a},dr.curryRight=function t(e,n,i){var a=Ea(e,m,r,r,r,r,r,n=i?r:n);return a.placeholder=t.placeholder,a},dr.debounce=is,dr.defaults=Zs,dr.defaultsDeep=Js,dr.defer=as,dr.delay=os,dr.difference=ho,dr.differenceBy=po,dr.differenceWith=go,dr.drop=function(t,e,n){var i=null==t?0:t.length;return i?Ci(t,(e=n||e===r?1:Us(e))<0?0:e,i):[]},dr.dropRight=function(t,e,n){var i=null==t?0:t.length;return i?Ci(t,0,(e=i-(e=n||e===r?1:Us(e)))<0?0:e):[]},dr.dropRightWhile=function(t,e){return t&&t.length?ji(t,Oa(e,3),!0,!0):[]},dr.dropWhile=function(t,e){return t&&t.length?ji(t,Oa(e,3),!0):[]},dr.fill=function(t,e,n,i){var a=null==t?0:t.length;return a?(n&&\"number\"!=typeof n&&Ga(t,e,n)&&(n=0,i=a),function(t,e,n,i){var a=t.length;for((n=Us(n))<0&&(n=-n>a?0:a+n),(i=i===r||i>a?a:Us(i))<0&&(i+=a),i=n>i?0:zs(i);n<i;)t[n++]=e;return t}(t,e,n,i)):[]},dr.filter=function(t,e){return(bs(t)?We:Yr)(t,Oa(e,3))},dr.flatMap=function(t,e){return Vr(Xo(t,e),1)},dr.flatMapDeep=function(t,e){return Vr(Xo(t,e),N)},dr.flatMapDepth=function(t,e,n){return n=n===r?1:Us(n),Vr(Xo(t,e),n)},dr.flatten=vo,dr.flattenDeep=function(t){return(null==t?0:t.length)?Vr(t,N):[]},dr.flattenDepth=function(t,e){return(null==t?0:t.length)?Vr(t,e=e===r?1:Us(e)):[]},dr.flip=function(t){return Ea(t,E)},dr.flow=Tu,dr.flowRight=Du,dr.fromPairs=function(t){for(var e=-1,n=null==t?0:t.length,r={};++e<n;){var i=t[e];r[i[0]]=i[1]}return r},dr.functions=function(t){return null==t?[]:Kr(t,iu(t))},dr.functionsIn=function(t){return null==t?[]:Kr(t,au(t))},dr.groupBy=$o,dr.initial=function(t){return(null==t?0:t.length)?Ci(t,0,-1):[]},dr.intersection=_o,dr.intersectionBy=wo,dr.intersectionWith=xo,dr.invert=eu,dr.invertBy=nu,dr.invokeMap=Wo,dr.iteratee=Nu,dr.keyBy=Ko,dr.keys=iu,dr.keysIn=au,dr.map=Xo,dr.mapKeys=function(t,e){var n={};return e=Oa(e,3),$r(t,(function(t,r,i){Ir(n,e(t,r,i),t)})),n},dr.mapValues=function(t,e){var n={};return e=Oa(e,3),$r(t,(function(t,r,i){Ir(n,r,e(t,r,i))})),n},dr.matches=function(t){return di(Or(t,f))},dr.matchesProperty=function(t,e){return pi(t,Or(e,f))},dr.memoize=ss,dr.merge=ou,dr.mergeWith=su,dr.method=Iu,dr.methodOf=Lu,dr.mixin=Bu,dr.negate=us,dr.nthArg=function(t){return t=Us(t),ki((function(e){return yi(e,t)}))},dr.omit=uu,dr.omitBy=function(t,e){return fu(t,us(Oa(e)))},dr.once=function(t){return es(2,t)},dr.orderBy=function(t,e,n,i){return null==t?[]:(bs(e)||(e=null==e?[]:[e]),bs(n=i?r:n)||(n=null==n?[]:[n]),bi(t,e,n))},dr.over=Ru,dr.overArgs=cs,dr.overEvery=Pu,dr.overSome=Fu,dr.partial=fs,dr.partialRight=ls,dr.partition=Zo,dr.pick=cu,dr.pickBy=fu,dr.property=qu,dr.propertyOf=function(t){return function(e){return null==t?r:Xr(t,e)}},dr.pull=Eo,dr.pullAll=Ao,dr.pullAllBy=function(t,e,n){return t&&t.length&&e&&e.length?mi(t,e,Oa(n,2)):t},dr.pullAllWith=function(t,e,n){return t&&t.length&&e&&e.length?mi(t,e,r,n):t},dr.pullAt=So,dr.range=ju,dr.rangeRight=Uu,dr.rearg=hs,dr.reject=function(t,e){return(bs(t)?We:Yr)(t,us(Oa(e,3)))},dr.remove=function(t,e){var n=[];if(!t||!t.length)return n;var r=-1,i=[],a=t.length;for(e=Oa(e,3);++r<a;){var o=t[r];e(o,r,t)&&(n.push(o),i.push(r))}return _i(t,i),n},dr.rest=function(t,e){if(\"function\"!=typeof t)throw new ie(o);return ki(t,e=e===r?e:Us(e))},dr.reverse=Mo,dr.sampleSize=function(t,e,n){return e=(n?Ga(t,e,n):e===r)?1:Us(e),(bs(t)?Ar:Ai)(t,e)},dr.set=function(t,e,n){return null==t?t:Si(t,e,n)},dr.setWith=function(t,e,n,i){return i=\"function\"==typeof i?i:r,null==t?t:Si(t,e,n,i)},dr.shuffle=function(t){return(bs(t)?Sr:Di)(t)},dr.slice=function(t,e,n){var i=null==t?0:t.length;return i?(n&&\"number\"!=typeof n&&Ga(t,e,n)?(e=0,n=i):(e=null==e?0:Us(e),n=n===r?i:Us(n)),Ci(t,e,n)):[]},dr.sortBy=Jo,dr.sortedUniq=function(t){return t&&t.length?Bi(t):[]},dr.sortedUniqBy=function(t,e){return t&&t.length?Bi(t,Oa(e,2)):[]},dr.split=function(t,e,n){return n&&\"number\"!=typeof n&&Ga(t,e,n)&&(e=n=r),(n=n===r?O:n>>>0)?(t=Hs(t))&&(\"string\"==typeof e||null!=e&&!Is(e))&&!(e=Ri(e))&&kn(t)?Wi(Cn(t),0,n):t.split(e,n):[]},dr.spread=function(t,e){if(\"function\"!=typeof t)throw new ie(o);return e=null==e?0:Hn(Us(e),0),ki((function(n){var r=n[e],i=Wi(n,0,e);return r&&Je(i,r),Ye(t,this,i)}))},dr.tail=function(t){var e=null==t?0:t.length;return e?Ci(t,1,e):[]},dr.take=function(t,e,n){return t&&t.length?Ci(t,0,(e=n||e===r?1:Us(e))<0?0:e):[]},dr.takeRight=function(t,e,n){var i=null==t?0:t.length;return i?Ci(t,(e=i-(e=n||e===r?1:Us(e)))<0?0:e,i):[]},dr.takeRightWhile=function(t,e){return t&&t.length?ji(t,Oa(e,3),!1,!0):[]},dr.takeWhile=function(t,e){return t&&t.length?ji(t,Oa(e,3)):[]},dr.tap=function(t,e){return e(t),t},dr.throttle=function(t,e,n){var r=!0,i=!0;if(\"function\"!=typeof t)throw new ie(o);return Ms(n)&&(r=\"leading\"in n?!!n.leading:r,i=\"trailing\"in n?!!n.trailing:i),is(t,e,{leading:r,maxWait:e,trailing:i})},dr.thru=jo,dr.toArray=qs,dr.toPairs=lu,dr.toPairsIn=hu,dr.toPath=function(t){return bs(t)?Ze(t,co):Os(t)?[t]:na(uo(Hs(t)))},dr.toPlainObject=Vs,dr.transform=function(t,e,n){var r=bs(t),i=r||ws(t)||Rs(t);if(e=Oa(e,4),null==n){var a=t&&t.constructor;n=i?r?new a:[]:Ms(t)&&Es(a)?pr(Ie(t)):{}}return(i?He:$r)(t,(function(t,r,i){return e(n,t,r,i)})),n},dr.unary=function(t){return ts(t,1)},dr.union=To,dr.unionBy=Do,dr.unionWith=Co,dr.uniq=function(t){return t&&t.length?Pi(t):[]},dr.uniqBy=function(t,e){return t&&t.length?Pi(t,Oa(e,2)):[]},dr.uniqWith=function(t,e){return e=\"function\"==typeof e?e:r,t&&t.length?Pi(t,r,e):[]},dr.unset=function(t,e){return null==t||Fi(t,e)},dr.unzip=No,dr.unzipWith=Io,dr.update=function(t,e,n){return null==t?t:qi(t,e,Hi(n))},dr.updateWith=function(t,e,n,i){return i=\"function\"==typeof i?i:r,null==t?t:qi(t,e,Hi(n),i)},dr.values=du,dr.valuesIn=function(t){return null==t?[]:yn(t,au(t))},dr.without=Lo,dr.words=Eu,dr.wrap=function(t,e){return fs(Hi(e),t)},dr.xor=Bo,dr.xorBy=Oo,dr.xorWith=Ro,dr.zip=Po,dr.zipObject=function(t,e){return Yi(t||[],e||[],Tr)},dr.zipObjectDeep=function(t,e){return Yi(t||[],e||[],Si)},dr.zipWith=Fo,dr.entries=lu,dr.entriesIn=hu,dr.extend=$s,dr.extendWith=Ws,Bu(dr,dr),dr.add=Vu,dr.attempt=Au,dr.camelCase=pu,dr.capitalize=gu,dr.ceil=Hu,dr.clamp=function(t,e,n){return n===r&&(n=e,e=r),n!==r&&(n=(n=Ys(n))==n?n:0),e!==r&&(e=(e=Ys(e))==e?e:0),Br(Ys(t),e,n)},dr.clone=function(t){return Or(t,h)},dr.cloneDeep=function(t){return Or(t,f|h)},dr.cloneDeepWith=function(t,e){return Or(t,f|h,e=\"function\"==typeof e?e:r)},dr.cloneWith=function(t,e){return Or(t,h,e=\"function\"==typeof e?e:r)},dr.conformsTo=function(t,e){return null==e||Rr(t,e,iu(e))},dr.deburr=yu,dr.defaultTo=function(t,e){return null==t||t!=t?e:t},dr.divide=Gu,dr.endsWith=function(t,e,n){t=Hs(t),e=Ri(e);var i=t.length,a=n=n===r?i:Br(Us(n),0,i);return(n-=e.length)>=0&&t.slice(n,a)==e},dr.eq=ds,dr.escape=function(t){return(t=Hs(t))&&kt.test(t)?t.replace(wt,wn):t},dr.escapeRegExp=function(t){return(t=Hs(t))&&Nt.test(t)?t.replace(Ct,\"\\\\$&\"):t},dr.every=function(t,e,n){var i=bs(t)?$e:Ur;return n&&Ga(t,e,n)&&(e=r),i(t,Oa(e,3))},dr.find=Yo,dr.findIndex=yo,dr.findKey=function(t,e){return rn(t,Oa(e,3),$r)},dr.findLast=Vo,dr.findLastIndex=bo,dr.findLastKey=function(t,e){return rn(t,Oa(e,3),Wr)},dr.floor=$u,dr.forEach=Ho,dr.forEachRight=Go,dr.forIn=function(t,e){return null==t?t:Hr(t,Oa(e,3),au)},dr.forInRight=function(t,e){return null==t?t:Gr(t,Oa(e,3),au)},dr.forOwn=function(t,e){return t&&$r(t,Oa(e,3))},dr.forOwnRight=function(t,e){return t&&Wr(t,Oa(e,3))},dr.get=Qs,dr.gt=ps,dr.gte=gs,dr.has=function(t,e){return null!=t&&za(t,e,ti)},dr.hasIn=tu,dr.head=mo,dr.identity=Cu,dr.includes=function(t,e,n,r){t=ms(t)?t:du(t),n=n&&!r?Us(n):0;var i=t.length;return n<0&&(n=Hn(i+n,0)),Bs(t)?n<=i&&t.indexOf(e,n)>-1:!!i&&on(t,e,n)>-1},dr.indexOf=function(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var i=null==n?0:Us(n);return i<0&&(i=Hn(r+i,0)),on(t,e,i)},dr.inRange=function(t,e,n){return e=js(e),n===r?(n=e,e=0):n=js(n),function(t,e,n){return t>=Gn(e,n)&&t<Hn(e,n)}(t=Ys(t),e,n)},dr.invoke=ru,dr.isArguments=ys,dr.isArray=bs,dr.isArrayBuffer=vs,dr.isArrayLike=ms,dr.isArrayLikeObject=_s,dr.isBoolean=function(t){return!0===t||!1===t||Ts(t)&&Jr(t)==z},dr.isBuffer=ws,dr.isDate=xs,dr.isElement=function(t){return Ts(t)&&1===t.nodeType&&!Ns(t)},dr.isEmpty=function(t){if(null==t)return!0;if(ms(t)&&(bs(t)||\"string\"==typeof t||\"function\"==typeof t.splice||ws(t)||Rs(t)||ys(t)))return!t.length;var e=Ua(t);if(e==W||e==tt)return!t.size;if(Xa(t))return!ci(t).length;for(var n in t)if(fe.call(t,n))return!1;return!0},dr.isEqual=function(t,e){return ai(t,e)},dr.isEqualWith=function(t,e,n){var i=(n=\"function\"==typeof n?n:r)?n(t,e):r;return i===r?ai(t,e,r,n):!!i},dr.isError=ks,dr.isFinite=function(t){return\"number\"==typeof t&&zn(t)},dr.isFunction=Es,dr.isInteger=As,dr.isLength=Ss,dr.isMap=Ds,dr.isMatch=function(t,e){return t===e||oi(t,e,Pa(e))},dr.isMatchWith=function(t,e,n){return n=\"function\"==typeof n?n:r,oi(t,e,Pa(e),n)},dr.isNaN=function(t){return Cs(t)&&t!=+t},dr.isNative=function(t){if(Ka(t))throw new Jt(a);return si(t)},dr.isNil=function(t){return null==t},dr.isNull=function(t){return null===t},dr.isNumber=Cs,dr.isObject=Ms,dr.isObjectLike=Ts,dr.isPlainObject=Ns,dr.isRegExp=Is,dr.isSafeInteger=function(t){return As(t)&&t>=-I&&t<=I},dr.isSet=Ls,dr.isString=Bs,dr.isSymbol=Os,dr.isTypedArray=Rs,dr.isUndefined=function(t){return t===r},dr.isWeakMap=function(t){return Ts(t)&&Ua(t)==it},dr.isWeakSet=function(t){return Ts(t)&&Jr(t)==at},dr.join=function(t,e){return null==t?\"\":Yn.call(t,e)},dr.kebabCase=bu,dr.last=ko,dr.lastIndexOf=function(t,e,n){var i=null==t?0:t.length;if(!i)return-1;var a=i;return n!==r&&(a=(a=Us(n))<0?Hn(i+a,0):Gn(a,i-1)),e==e?function(t,e,n){for(var r=n+1;r--;)if(t[r]===e)return r;return r}(t,e,a):an(t,un,a,!0)},dr.lowerCase=vu,dr.lowerFirst=mu,dr.lt=Ps,dr.lte=Fs,dr.max=function(t){return t&&t.length?zr(t,Cu,Qr):r},dr.maxBy=function(t,e){return t&&t.length?zr(t,Oa(e,2),Qr):r},dr.mean=function(t){return cn(t,Cu)},dr.meanBy=function(t,e){return cn(t,Oa(e,2))},dr.min=function(t){return t&&t.length?zr(t,Cu,li):r},dr.minBy=function(t,e){return t&&t.length?zr(t,Oa(e,2),li):r},dr.stubArray=zu,dr.stubFalse=Yu,dr.stubObject=function(){return{}},dr.stubString=function(){return\"\"},dr.stubTrue=function(){return!0},dr.multiply=Ku,dr.nth=function(t,e){return t&&t.length?yi(t,Us(e)):r},dr.noConflict=function(){return Ne._===this&&(Ne._=ge),this},dr.noop=Ou,dr.now=Qo,dr.pad=function(t,e,n){t=Hs(t);var r=(e=Us(e))?Dn(t):0;if(!e||r>=e)return t;var i=(e-r)/2;return ba(qn(i),n)+t+ba(Fn(i),n)},dr.padEnd=function(t,e,n){t=Hs(t);var r=(e=Us(e))?Dn(t):0;return e&&r<e?t+ba(e-r,n):t},dr.padStart=function(t,e,n){t=Hs(t);var r=(e=Us(e))?Dn(t):0;return e&&r<e?ba(e-r,n)+t:t},dr.parseInt=function(t,e,n){return n||null==e?e=0:e&&(e=+e),Wn(Hs(t).replace(Lt,\"\"),e||0)},dr.random=function(t,e,n){if(n&&\"boolean\"!=typeof n&&Ga(t,e,n)&&(e=n=r),n===r&&(\"boolean\"==typeof e?(n=e,e=r):\"boolean\"==typeof t&&(n=t,t=r)),t===r&&e===r?(t=0,e=1):(t=js(t),e===r?(e=t,t=0):e=js(e)),t>e){var i=t;t=e,e=i}if(n||t%1||e%1){var a=Kn();return Gn(t+a*(e-t+Me(\"1e-\"+((a+\"\").length-1))),e)}return wi(t,e)},dr.reduce=function(t,e,n){var r=bs(t)?Qe:hn,i=arguments.length<3;return r(t,Oa(e,4),n,i,qr)},dr.reduceRight=function(t,e,n){var r=bs(t)?tn:hn,i=arguments.length<3;return r(t,Oa(e,4),n,i,jr)},dr.repeat=function(t,e,n){return e=(n?Ga(t,e,n):e===r)?1:Us(e),xi(Hs(t),e)},dr.replace=function(){var t=arguments,e=Hs(t[0]);return t.length<3?e:e.replace(t[1],t[2])},dr.result=function(t,e,n){var i=-1,a=(e=Gi(e,t)).length;for(a||(a=1,t=r);++i<a;){var o=null==t?r:t[co(e[i])];o===r&&(i=a,o=n),t=Es(o)?o.call(t):o}return t},dr.round=Xu,dr.runInContext=t,dr.sample=function(t){return(bs(t)?Er:Ei)(t)},dr.size=function(t){if(null==t)return 0;if(ms(t))return Bs(t)?Dn(t):t.length;var e=Ua(t);return e==W||e==tt?t.size:ci(t).length},dr.snakeCase=_u,dr.some=function(t,e,n){var i=bs(t)?en:Ni;return n&&Ga(t,e,n)&&(e=r),i(t,Oa(e,3))},dr.sortedIndex=function(t,e){return Ii(t,e)},dr.sortedIndexBy=function(t,e,n){return Li(t,e,Oa(n,2))},dr.sortedIndexOf=function(t,e){var n=null==t?0:t.length;if(n){var r=Ii(t,e);if(r<n&&ds(t[r],e))return r}return-1},dr.sortedLastIndex=function(t,e){return Ii(t,e,!0)},dr.sortedLastIndexBy=function(t,e,n){return Li(t,e,Oa(n,2),!0)},dr.sortedLastIndexOf=function(t,e){if(null==t?0:t.length){var n=Ii(t,e,!0)-1;if(ds(t[n],e))return n}return-1},dr.startCase=wu,dr.startsWith=function(t,e,n){return t=Hs(t),n=null==n?0:Br(Us(n),0,t.length),e=Ri(e),t.slice(n,n+e.length)==e},dr.subtract=Zu,dr.sum=function(t){return t&&t.length?dn(t,Cu):0},dr.sumBy=function(t,e){return t&&t.length?dn(t,Oa(e,2)):0},dr.template=function(t,e,n){var i=dr.templateSettings;n&&Ga(t,e,n)&&(e=r),t=Hs(t),e=Ws({},e,i,Aa);var a,o,s=Ws({},e.imports,i.imports,Aa),u=iu(s),c=yn(s,u),f=0,l=e.interpolate||Wt,h=\"__p += '\",d=ne((e.escape||Wt).source+\"|\"+l.source+\"|\"+(l===St?jt:Wt).source+\"|\"+(e.evaluate||Wt).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(fe.call(e,\"sourceURL\")?(e.sourceURL+\"\").replace(/[\\r\\n]/g,\" \"):\"lodash.templateSources[\"+ ++ke+\"]\")+\"\\n\";t.replace(d,(function(e,n,r,i,s,u){return r||(r=i),h+=t.slice(f,u).replace(Kt,xn),n&&(a=!0,h+=\"' +\\n__e(\"+n+\") +\\n'\"),s&&(o=!0,h+=\"';\\n\"+s+\";\\n__p += '\"),r&&(h+=\"' +\\n((__t = (\"+r+\")) == null ? '' : __t) +\\n'\"),f=u+e.length,e})),h+=\"';\\n\";var g=fe.call(e,\"variable\")&&e.variable;g||(h=\"with (obj) {\\n\"+h+\"\\n}\\n\"),h=(o?h.replace(bt,\"\"):h).replace(vt,\"$1\").replace(mt,\"$1;\"),h=\"function(\"+(g||\"obj\")+\") {\\n\"+(g?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(a?\", __e = _.escape\":\"\")+(o?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+h+\"return __p\\n}\";var y=Au((function(){return Qt(u,p+\"return \"+h).apply(r,c)}));if(y.source=h,ks(y))throw y;return y},dr.times=function(t,e){if((t=Us(t))<1||t>I)return[];var n=O,r=Gn(t,O);e=Oa(e),t-=O;for(var i=pn(r,e);++n<t;)e(n);return i},dr.toFinite=js,dr.toInteger=Us,dr.toLength=zs,dr.toLower=function(t){return Hs(t).toLowerCase()},dr.toNumber=Ys,dr.toSafeInteger=function(t){return t?Br(Us(t),-I,I):0===t?t:0},dr.toString=Hs,dr.toUpper=function(t){return Hs(t).toUpperCase()},dr.trim=function(t,e,n){if((t=Hs(t))&&(n||e===r))return t.replace(It,\"\");if(!t||!(e=Ri(e)))return t;var i=Cn(t),a=Cn(e);return Wi(i,vn(i,a),mn(i,a)+1).join(\"\")},dr.trimEnd=function(t,e,n){if((t=Hs(t))&&(n||e===r))return t.replace(Bt,\"\");if(!t||!(e=Ri(e)))return t;var i=Cn(t);return Wi(i,0,mn(i,Cn(e))+1).join(\"\")},dr.trimStart=function(t,e,n){if((t=Hs(t))&&(n||e===r))return t.replace(Lt,\"\");if(!t||!(e=Ri(e)))return t;var i=Cn(t);return Wi(i,vn(i,Cn(e))).join(\"\")},dr.truncate=function(t,e){var n=A,i=S;if(Ms(e)){var a=\"separator\"in e?e.separator:a;n=\"length\"in e?Us(e.length):n,i=\"omission\"in e?Ri(e.omission):i}var o=(t=Hs(t)).length;if(kn(t)){var s=Cn(t);o=s.length}if(n>=o)return t;var u=n-Dn(i);if(u<1)return i;var c=s?Wi(s,0,u).join(\"\"):t.slice(0,u);if(a===r)return c+i;if(s&&(u+=c.length-u),Is(a)){if(t.slice(u).search(a)){var f,l=c;for(a.global||(a=ne(a.source,Hs(Ut.exec(a))+\"g\")),a.lastIndex=0;f=a.exec(l);)var h=f.index;c=c.slice(0,h===r?u:h)}}else if(t.indexOf(Ri(a),u)!=u){var d=c.lastIndexOf(a);d>-1&&(c=c.slice(0,d))}return c+i},dr.unescape=function(t){return(t=Hs(t))&&xt.test(t)?t.replace(_t,Nn):t},dr.uniqueId=function(t){var e=++le;return Hs(t)+e},dr.upperCase=xu,dr.upperFirst=ku,dr.each=Ho,dr.eachRight=Go,dr.first=mo,Bu(dr,(Wu={},$r(dr,(function(t,e){fe.call(dr.prototype,e)||(Wu[e]=t)})),Wu),{chain:!1}),dr.VERSION=\"4.17.15\",He([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],(function(t){dr[t].placeholder=dr})),He([\"drop\",\"take\"],(function(t,e){br.prototype[t]=function(n){n=n===r?1:Hn(Us(n),0);var i=this.__filtered__&&!e?new br(this):this.clone();return i.__filtered__?i.__takeCount__=Gn(n,i.__takeCount__):i.__views__.push({size:Gn(n,O),type:t+(i.__dir__<0?\"Right\":\"\")}),i},br.prototype[t+\"Right\"]=function(e){return this.reverse()[t](e).reverse()}})),He([\"filter\",\"map\",\"takeWhile\"],(function(t,e){var n=e+1,r=n==D||3==n;br.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:Oa(t,3),type:n}),e.__filtered__=e.__filtered__||r,e}})),He([\"head\",\"last\"],(function(t,e){var n=\"take\"+(e?\"Right\":\"\");br.prototype[t]=function(){return this[n](1).value()[0]}})),He([\"initial\",\"tail\"],(function(t,e){var n=\"drop\"+(e?\"\":\"Right\");br.prototype[t]=function(){return this.__filtered__?new br(this):this[n](1)}})),br.prototype.compact=function(){return this.filter(Cu)},br.prototype.find=function(t){return this.filter(t).head()},br.prototype.findLast=function(t){return this.reverse().find(t)},br.prototype.invokeMap=ki((function(t,e){return\"function\"==typeof t?new br(this):this.map((function(n){return ri(n,t,e)}))})),br.prototype.reject=function(t){return this.filter(us(Oa(t)))},br.prototype.slice=function(t,e){t=Us(t);var n=this;return n.__filtered__&&(t>0||e<0)?new br(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),e!==r&&(n=(e=Us(e))<0?n.dropRight(-e):n.take(e-t)),n)},br.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},br.prototype.toArray=function(){return this.take(O)},$r(br.prototype,(function(t,e){var n=/^(?:filter|find|map|reject)|While$/.test(e),i=/^(?:head|last)$/.test(e),a=dr[i?\"take\"+(\"last\"==e?\"Right\":\"\"):e],o=i||/^find/.test(e);a&&(dr.prototype[e]=function(){var e=this.__wrapped__,s=i?[1]:arguments,u=e instanceof br,c=s[0],f=u||bs(e),l=function(t){var e=a.apply(dr,Je([t],s));return i&&h?e[0]:e};f&&n&&\"function\"==typeof c&&1!=c.length&&(u=f=!1);var h=this.__chain__,d=!!this.__actions__.length,p=o&&!h,g=u&&!d;if(!o&&f){e=g?e:new br(this);var y=t.apply(e,s);return y.__actions__.push({func:jo,args:[l],thisArg:r}),new yr(y,h)}return p&&g?t.apply(this,s):(y=this.thru(l),p?i?y.value()[0]:y.value():y)})})),He([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],(function(t){var e=ae[t],n=/^(?:push|sort|unshift)$/.test(t)?\"tap\":\"thru\",r=/^(?:pop|shift)$/.test(t);dr.prototype[t]=function(){var t=arguments;if(r&&!this.__chain__){var i=this.value();return e.apply(bs(i)?i:[],t)}return this[n]((function(n){return e.apply(bs(n)?n:[],t)}))}})),$r(br.prototype,(function(t,e){var n=dr[e];if(n){var r=n.name+\"\";fe.call(ir,r)||(ir[r]=[]),ir[r].push({name:e,func:n})}})),ir[da(r,y).name]=[{name:\"wrapper\",func:r}],br.prototype.clone=function(){var t=new br(this.__wrapped__);return t.__actions__=na(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=na(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=na(this.__views__),t},br.prototype.reverse=function(){if(this.__filtered__){var t=new br(this);t.__dir__=-1,t.__filtered__=!0}else(t=this.clone()).__dir__*=-1;return t},br.prototype.value=function(){var t=this.__wrapped__.value(),e=this.__dir__,n=bs(t),r=e<0,i=n?t.length:0,a=function(t,e,n){var r=-1,i=n.length;for(;++r<i;){var a=n[r],o=a.size;switch(a.type){case\"drop\":t+=o;break;case\"dropRight\":e-=o;break;case\"take\":e=Gn(e,t+o);break;case\"takeRight\":t=Hn(t,e-o)}}return{start:t,end:e}}(0,i,this.__views__),o=a.start,s=a.end,u=s-o,c=r?s:o-1,f=this.__iteratees__,l=f.length,h=0,d=Gn(u,this.__takeCount__);if(!n||!r&&i==u&&d==u)return Ui(t,this.__actions__);var p=[];t:for(;u--&&h<d;){for(var g=-1,y=t[c+=e];++g<l;){var b=f[g],v=b.iteratee,m=b.type,_=v(y);if(m==C)y=_;else if(!_){if(m==D)continue t;break t}}p[h++]=y}return p},dr.prototype.at=Uo,dr.prototype.chain=function(){return qo(this)},dr.prototype.commit=function(){return new yr(this.value(),this.__chain__)},dr.prototype.next=function(){this.__values__===r&&(this.__values__=qs(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?r:this.__values__[this.__index__++]}},dr.prototype.plant=function(t){for(var e,n=this;n instanceof gr;){var i=lo(n);i.__index__=0,i.__values__=r,e?a.__wrapped__=i:e=i;var a=i;n=n.__wrapped__}return a.__wrapped__=t,e},dr.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof br){var e=t;return this.__actions__.length&&(e=new br(this)),(e=e.reverse()).__actions__.push({func:jo,args:[Mo],thisArg:r}),new yr(e,this.__chain__)}return this.thru(Mo)},dr.prototype.toJSON=dr.prototype.valueOf=dr.prototype.value=function(){return Ui(this.__wrapped__,this.__actions__)},dr.prototype.first=dr.prototype.head,ln&&(dr.prototype[ln]=function(){return this}),dr}();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(Ne._=In,define((function(){return In}))):Le?((Le.exports=In)._=In,Ie._=In):Ne._=In}).call(this)}).call(this,n(12),n(9)(t))},function(t,e,n){var r=n(66),i=n(67);t.exports=function(t,e,n,a){var o=!n;n||(n={});for(var s=-1,u=e.length;++s<u;){var c=e[s],f=a?a(n[c],t[c],c,n,t):void 0;void 0===f&&(f=t[c]),o?i(n,c,f):r(n,c,f)}return n}},function(t,e,n){var r=n(268),i=n(20),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,u=r(function(){return arguments}())?r:function(t){return i(t)&&o.call(t,\"callee\")&&!s.call(t,\"callee\")};t.exports=u},function(t,e,n){var r=n(270),i=n(69),a=n(94),o=a&&a.isTypedArray,s=o?i(o):r;t.exports=s},function(t,e,n){var r=n(42),i=1/0;t.exports=function(t){if(\"string\"==typeof t||r(t))return t;var e=t+\"\";return\"0\"==e&&1/t==-i?\"-0\":e}},function(t,e,n){\"use strict\";var r=n(2),i=n(111),a=n(118),o=n(119),s=n(31);function u(t){s.call(this,\"digest\"),this._hash=t}r(u,s),u.prototype._update=function(t){this._hash.update(t)},u.prototype._final=function(){return this._hash.digest()},t.exports=function(t){return\"md5\"===(t=t.toLowerCase())?new i:\"rmd160\"===t||\"ripemd160\"===t?new a:new u(o(t))}},function(t,e,n){(function(t){function n(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):\"[object Array]\"===n(t)},e.isBoolean=function(t){return\"boolean\"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return\"number\"==typeof t},e.isString=function(t){return\"string\"==typeof t},e.isSymbol=function(t){return\"symbol\"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return\"[object RegExp]\"===n(t)},e.isObject=function(t){return\"object\"==typeof t&&null!==t},e.isDate=function(t){return\"[object Date]\"===n(t)},e.isError=function(t){return\"[object Error]\"===n(t)||t instanceof Error},e.isFunction=function(t){return\"function\"==typeof t},e.isPrimitive=function(t){return null===t||\"boolean\"==typeof t||\"number\"==typeof t||\"string\"==typeof t||\"symbol\"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,n(8).Buffer)},function(t,e,n){(function(e){t.exports=function(t,n){for(var r=Math.min(t.length,n.length),i=new e(r),a=0;a<r;++a)i[a]=t[a]^n[a];return i}}).call(this,n(8).Buffer)},function(t,e,n){\"use strict\";var r=n(21),i=n(16);function a(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian=\"big\",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}e.BlockHash=a,a.prototype.update=function(t,e){if(t=r.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var n=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-n,t.length),0===this.pending.length&&(this.pending=null),t=r.join32(t,0,t.length-n,this.endian);for(var i=0;i<t.length;i+=this._delta32)this._update(t,i,i+this._delta32)}return this},a.prototype.digest=function(t){return this.update(this._pad()),i(null===this.pending),this._digest(t)},a.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,n=e-(t+this.padLength)%e,r=new Array(n+this.padLength);r[0]=128;for(var i=1;i<n;i++)r[i]=0;if(t<<=3,\"big\"===this.endian){for(var a=8;a<this.padLength;a++)r[i++]=0;r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=t>>>24&255,r[i++]=t>>>16&255,r[i++]=t>>>8&255,r[i++]=255&t}else for(r[i++]=255&t,r[i++]=t>>>8&255,r[i++]=t>>>16&255,r[i++]=t>>>24&255,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,a=8;a<this.padLength;a++)r[i++]=0;return r}},function(t,e,n){var r=e;r.bignum=n(5),r.define=n(482).define,r.base=n(58),r.constants=n(221),r.decoders=n(487),r.encoders=n(489)},function(t,e,n){var r=e;r.Reporter=n(484).Reporter,r.DecoderBuffer=n(220).DecoderBuffer,r.EncoderBuffer=n(220).EncoderBuffer,r.Node=n(485)},function(t,e,n){t.exports={graphlib:n(19),layout:n(349),debug:n(403),util:{time:n(10).time,notime:n(10).notime},version:n(404)}},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[1,4],n=[1,3],r=[1,5],i=[1,8,9,10,11,26,34,61,62,63,64,65,66,76,77,80,81,82,84,85,91,92,93,94,95,96],a=[2,2],o=[1,12],s=[1,13],u=[1,14],c=[1,15],f=[1,22],l=[1,46],h=[1,24],d=[1,25],p=[1,26],g=[1,27],y=[1,28],b=[1,40],v=[1,35],m=[1,37],_=[1,32],w=[1,36],x=[1,39],k=[1,43],E=[1,44],A=[1,45],S=[1,34],M=[1,38],T=[1,41],D=[1,42],C=[1,33],N=[1,51],I=[1,8,9,10,11,26,30,34,61,62,63,64,65,66,76,77,80,81,82,84,85,91,92,93,94,95,96],L=[1,55],B=[1,54],O=[1,56],R=[8,9,11,55,56],P=[8,9,10,11,55,56],F=[8,9,10,11,35,55,56],q=[8,9,10,11,28,34,35,37,39,41,43,45,47,48,50,55,56,66,76,77,80,81,82,84,85,91,92,93,94,95,96],j=[8,9,11,34,55,56,66,76,77,80,81,82,84,85,91,92,93,94,95,96],U=[34,66,76,77,80,81,82,84,85,91,92,93,94,95,96],z=[1,100],Y=[1,121],V=[1,122],H=[1,123],G=[1,124],$=[1,104],W=[1,95],K=[1,96],X=[1,92],Z=[1,116],J=[1,117],Q=[1,118],tt=[1,119],et=[1,120],nt=[1,125],rt=[1,126],it=[1,98],at=[1,106],ot=[1,109],st=[1,107],ut=[1,108],ct=[1,101],ft=[1,114],lt=[1,113],ht=[1,97],dt=[1,94],pt=[1,103],gt=[1,105],yt=[1,110],bt=[1,111],vt=[1,112],mt=[1,115],_t=[8,9,10,11,26,30,34,61,62,63,64,65,66,76,77,80,81,82,84,85,91,92,93,94,95,96],wt=[1,129],xt=[1,133],kt=[1,135],Et=[1,136],At=[8,9,10,11,12,13,26,28,29,30,34,38,40,42,44,46,47,49,51,55,56,57,61,62,63,64,65,66,67,70,76,77,80,81,82,84,85,86,87,91,92,93,94,95,96],St=[8,9,10,11,13,34,66,76,77,80,81,82,84,85,91,92,93,94,95,96],Mt=[10,77],Tt=[1,201],Dt=[1,205],Ct=[1,202],Nt=[1,199],It=[1,196],Lt=[1,197],Bt=[1,198],Ot=[1,200],Rt=[1,203],Pt=[1,204],Ft=[1,206],qt=[8,9,11],jt=[1,222],Ut=[8,9,11,77],zt=[8,9,10,11,61,73,76,77,80,81,82,83,84,85,86],Yt={trace:function(){},yy:{},symbols_:{error:2,mermaidDoc:3,graphConfig:4,document:5,line:6,statement:7,SEMI:8,NEWLINE:9,SPACE:10,EOF:11,GRAPH:12,DIR:13,FirstStmtSeperator:14,ending:15,endToken:16,spaceList:17,spaceListNewline:18,verticeStatement:19,separator:20,styleStatement:21,linkStyleStatement:22,classDefStatement:23,classStatement:24,clickStatement:25,subgraph:26,text:27,SQS:28,SQE:29,end:30,link:31,node:32,vertex:33,AMP:34,STYLE_SEPARATOR:35,idString:36,PS:37,PE:38,\"(-\":39,\"-)\":40,STADIUMSTART:41,STADIUMEND:42,CYLINDERSTART:43,CYLINDEREND:44,DIAMOND_START:45,DIAMOND_STOP:46,TAGEND:47,TRAPSTART:48,TRAPEND:49,INVTRAPSTART:50,INVTRAPEND:51,linkStatement:52,arrowText:53,TESTSTR:54,START_LINK:55,LINK:56,PIPE:57,textToken:58,STR:59,keywords:60,STYLE:61,LINKSTYLE:62,CLASSDEF:63,CLASS:64,CLICK:65,DOWN:66,UP:67,textNoTags:68,textNoTagsToken:69,DEFAULT:70,stylesOpt:71,alphaNum:72,HEX:73,numList:74,INTERPOLATE:75,NUM:76,COMMA:77,style:78,styleComponent:79,ALPHA:80,COLON:81,MINUS:82,UNIT:83,BRKT:84,DOT:85,PCT:86,TAGSTART:87,alphaNumToken:88,idStringToken:89,alphaNumStatement:90,PUNCTUATION:91,UNICODE_TEXT:92,PLUS:93,EQUALS:94,MULT:95,UNDERSCORE:96,graphCodeTokens:97,ARROW_CROSS:98,ARROW_POINT:99,ARROW_CIRCLE:100,ARROW_OPEN:101,QUOTE:102,$accept:0,$end:1},terminals_:{2:\"error\",8:\"SEMI\",9:\"NEWLINE\",10:\"SPACE\",11:\"EOF\",12:\"GRAPH\",13:\"DIR\",26:\"subgraph\",28:\"SQS\",29:\"SQE\",30:\"end\",34:\"AMP\",35:\"STYLE_SEPARATOR\",37:\"PS\",38:\"PE\",39:\"(-\",40:\"-)\",41:\"STADIUMSTART\",42:\"STADIUMEND\",43:\"CYLINDERSTART\",44:\"CYLINDEREND\",45:\"DIAMOND_START\",46:\"DIAMOND_STOP\",47:\"TAGEND\",48:\"TRAPSTART\",49:\"TRAPEND\",50:\"INVTRAPSTART\",51:\"INVTRAPEND\",54:\"TESTSTR\",55:\"START_LINK\",56:\"LINK\",57:\"PIPE\",59:\"STR\",61:\"STYLE\",62:\"LINKSTYLE\",63:\"CLASSDEF\",64:\"CLASS\",65:\"CLICK\",66:\"DOWN\",67:\"UP\",70:\"DEFAULT\",73:\"HEX\",75:\"INTERPOLATE\",76:\"NUM\",77:\"COMMA\",80:\"ALPHA\",81:\"COLON\",82:\"MINUS\",83:\"UNIT\",84:\"BRKT\",85:\"DOT\",86:\"PCT\",87:\"TAGSTART\",91:\"PUNCTUATION\",92:\"UNICODE_TEXT\",93:\"PLUS\",94:\"EQUALS\",95:\"MULT\",96:\"UNDERSCORE\",98:\"ARROW_CROSS\",99:\"ARROW_POINT\",100:\"ARROW_CIRCLE\",101:\"ARROW_OPEN\",102:\"QUOTE\"},productions_:[0,[3,2],[5,0],[5,2],[6,1],[6,1],[6,1],[6,1],[6,1],[4,2],[4,2],[4,3],[15,2],[15,1],[16,1],[16,1],[16,1],[14,1],[14,1],[14,2],[18,2],[18,2],[18,1],[18,1],[17,2],[17,1],[7,2],[7,2],[7,2],[7,2],[7,2],[7,2],[7,9],[7,6],[7,4],[20,1],[20,1],[20,1],[19,3],[19,4],[19,2],[19,1],[32,1],[32,5],[32,3],[33,4],[33,6],[33,4],[33,4],[33,4],[33,4],[33,4],[33,6],[33,4],[33,4],[33,4],[33,4],[33,4],[33,1],[31,2],[31,3],[31,3],[31,1],[31,3],[52,1],[53,3],[27,1],[27,2],[27,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[60,1],[68,1],[68,2],[23,5],[23,5],[24,5],[25,5],[25,7],[25,5],[25,7],[21,5],[21,5],[22,5],[22,5],[22,9],[22,9],[22,7],[22,7],[74,1],[74,3],[71,1],[71,3],[78,1],[78,2],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[79,1],[58,1],[58,1],[58,1],[58,1],[58,1],[58,1],[69,1],[69,1],[69,1],[69,1],[36,1],[36,2],[72,1],[72,2],[90,1],[90,1],[90,1],[90,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[88,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[89,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 2:this.$=[];break;case 3:a[s]!==[]&&a[s-1].push(a[s]),this.$=a[s-1];break;case 4:case 66:case 68:case 80:case 126:case 128:case 129:this.$=a[s];break;case 11:r.setDirection(a[s-1]),this.$=a[s-1];break;case 26:this.$=a[s-1].nodes;break;case 27:case 28:case 29:case 30:case 31:this.$=[];break;case 32:this.$=r.addSubGraph(a[s-6],a[s-1],a[s-4]);break;case 33:this.$=r.addSubGraph(a[s-3],a[s-1],a[s-3]);break;case 34:this.$=r.addSubGraph(void 0,a[s-1],void 0);break;case 38:r.addLink(a[s-2].stmt,a[s],a[s-1]),this.$={stmt:a[s],nodes:a[s].concat(a[s-2].nodes)};break;case 39:r.addLink(a[s-3].stmt,a[s-1],a[s-2]),this.$={stmt:a[s-1],nodes:a[s-1].concat(a[s-3].nodes)};break;case 40:this.$={stmt:a[s-1],nodes:a[s-1]};break;case 41:this.$={stmt:a[s],nodes:a[s]};break;case 42:this.$=[a[s]];break;case 43:this.$=a[s-4].concat(a[s]);break;case 44:this.$=[a[s-2]],r.setClass(a[s-2],a[s]);break;case 45:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"square\");break;case 46:this.$=a[s-5],r.addVertex(a[s-5],a[s-2],\"circle\");break;case 47:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"ellipse\");break;case 48:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"stadium\");break;case 49:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"cylinder\");break;case 50:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"round\");break;case 51:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"diamond\");break;case 52:this.$=a[s-5],r.addVertex(a[s-5],a[s-2],\"hexagon\");break;case 53:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"odd\");break;case 54:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"trapezoid\");break;case 55:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"inv_trapezoid\");break;case 56:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"lean_right\");break;case 57:this.$=a[s-3],r.addVertex(a[s-3],a[s-1],\"lean_left\");break;case 58:this.$=a[s],r.addVertex(a[s]);break;case 59:a[s-1].text=a[s],this.$=a[s-1];break;case 60:case 61:a[s-2].text=a[s-1],this.$=a[s-2];break;case 62:this.$=a[s];break;case 63:var u=r.destructLink(a[s],a[s-2]);this.$={type:u.type,stroke:u.stroke,text:a[s-1]};break;case 64:u=r.destructLink(a[s]);this.$={type:u.type,stroke:u.stroke};break;case 65:this.$=a[s-1];break;case 67:case 81:case 127:this.$=a[s-1]+\"\"+a[s];break;case 82:case 83:this.$=a[s-4],r.addClass(a[s-2],a[s]);break;case 84:this.$=a[s-4],r.setClass(a[s-2],a[s]);break;case 85:this.$=a[s-4],r.setClickEvent(a[s-2],a[s],void 0);break;case 86:this.$=a[s-6],r.setClickEvent(a[s-4],a[s-2],a[s]);break;case 87:this.$=a[s-4],r.setLink(a[s-2],a[s],void 0);break;case 88:this.$=a[s-6],r.setLink(a[s-4],a[s-2],a[s]);break;case 89:this.$=a[s-4],r.addVertex(a[s-2],void 0,void 0,a[s]);break;case 90:case 92:this.$=a[s-4],r.updateLink(a[s-2],a[s]);break;case 91:this.$=a[s-4],r.updateLink([a[s-2]],a[s]);break;case 93:this.$=a[s-8],r.updateLinkInterpolate([a[s-6]],a[s-2]),r.updateLink([a[s-6]],a[s]);break;case 94:this.$=a[s-8],r.updateLinkInterpolate(a[s-6],a[s-2]),r.updateLink(a[s-6],a[s]);break;case 95:this.$=a[s-6],r.updateLinkInterpolate([a[s-4]],a[s]);break;case 96:this.$=a[s-6],r.updateLinkInterpolate(a[s-4],a[s]);break;case 97:case 99:this.$=[a[s]];break;case 98:case 100:a[s-2].push(a[s]),this.$=a[s-2];break;case 102:this.$=a[s-1]+a[s];break;case 124:this.$=a[s];break;case 125:this.$=a[s-1]+\"\"+a[s];break;case 130:this.$=\"v\";break;case 131:this.$=\"-\"}},table:[{3:1,4:2,9:e,10:n,12:r},{1:[3]},t(i,a,{5:6}),{4:7,9:e,10:n,12:r},{4:8,9:e,10:n,12:r},{13:[1,9]},{1:[2,1],6:10,7:11,8:o,9:s,10:u,11:c,19:16,21:17,22:18,23:19,24:20,25:21,26:f,32:23,33:29,34:l,36:30,61:h,62:d,63:p,64:g,65:y,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},t(i,[2,9]),t(i,[2,10]),{8:[1,48],9:[1,49],10:N,14:47,17:50},t(I,[2,3]),t(I,[2,4]),t(I,[2,5]),t(I,[2,6]),t(I,[2,7]),t(I,[2,8]),{8:L,9:B,11:O,20:52,31:53,52:57,55:[1,58],56:[1,59]},{8:L,9:B,11:O,20:60},{8:L,9:B,11:O,20:61},{8:L,9:B,11:O,20:62},{8:L,9:B,11:O,20:63},{8:L,9:B,11:O,20:64},{8:L,9:B,10:[1,65],11:O,20:66},t(R,[2,41],{17:67,10:N}),{10:[1,68]},{10:[1,69]},{10:[1,70]},{10:[1,71]},{10:[1,72]},t(P,[2,42],{35:[1,73]}),t(F,[2,58],{89:83,28:[1,74],34:l,37:[1,75],39:[1,76],41:[1,77],43:[1,78],45:[1,79],47:[1,80],48:[1,81],50:[1,82],66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,91:A,92:S,93:M,94:T,95:D,96:C}),t(q,[2,124]),t(q,[2,145]),t(q,[2,146]),t(q,[2,147]),t(q,[2,148]),t(q,[2,149]),t(q,[2,150]),t(q,[2,151]),t(q,[2,152]),t(q,[2,153]),t(q,[2,154]),t(q,[2,155]),t(q,[2,156]),t(q,[2,157]),t(q,[2,158]),t(q,[2,159]),t(i,[2,11]),t(i,[2,17]),t(i,[2,18]),{9:[1,84]},t(j,[2,25],{17:85,10:N}),t(I,[2,26]),{32:86,33:29,34:l,36:30,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},t(I,[2,35]),t(I,[2,36]),t(I,[2,37]),t(U,[2,62],{53:87,54:[1,88],57:[1,89]}),{10:z,12:Y,13:V,26:H,27:90,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t([34,54,57,66,76,77,80,81,82,84,85,91,92,93,94,95,96],[2,64]),t(I,[2,27]),t(I,[2,28]),t(I,[2,29]),t(I,[2,30]),t(I,[2,31]),{10:z,12:Y,13:V,26:H,27:127,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(_t,a,{5:128}),t(R,[2,40],{34:wt}),{13:xt,34:$,66:kt,72:130,73:[1,131],76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{70:[1,137],74:138,76:[1,139]},{13:xt,34:$,66:kt,70:[1,140],72:141,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{13:xt,34:$,66:kt,72:142,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{13:xt,34:$,66:kt,72:143,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{34:l,36:144,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},{10:z,12:Y,13:V,26:H,27:145,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:147,30:G,34:$,37:[1,146],47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:148,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:149,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:150,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:151,30:G,34:$,45:[1,152],47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:153,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:154,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:155,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(q,[2,125]),t(i,[2,19]),t(j,[2,24]),t(R,[2,38],{17:156,10:N}),t(U,[2,59],{10:[1,157]}),{10:[1,158]},{10:z,12:Y,13:V,26:H,27:159,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,47:W,55:K,56:[1,160],58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(At,[2,66]),t(At,[2,68]),t(At,[2,114]),t(At,[2,115]),t(At,[2,116]),t(At,[2,117]),t(At,[2,118]),t(At,[2,119]),t(At,[2,120]),t(At,[2,121]),t(At,[2,122]),t(At,[2,123]),t(At,[2,132]),t(At,[2,133]),t(At,[2,134]),t(At,[2,135]),t(At,[2,136]),t(At,[2,137]),t(At,[2,138]),t(At,[2,139]),t(At,[2,140]),t(At,[2,141]),t(At,[2,142]),t(At,[2,143]),t(At,[2,144]),t(At,[2,69]),t(At,[2,70]),t(At,[2,71]),t(At,[2,72]),t(At,[2,73]),t(At,[2,74]),t(At,[2,75]),t(At,[2,76]),t(At,[2,77]),t(At,[2,78]),t(At,[2,79]),{8:L,9:B,10:z,11:O,12:Y,13:V,20:163,26:H,28:[1,162],30:G,34:$,47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{6:10,7:11,8:o,9:s,10:u,11:c,19:16,21:17,22:18,23:19,24:20,25:21,26:f,30:[1,164],32:23,33:29,34:l,36:30,61:h,62:d,63:p,64:g,65:y,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},{10:N,17:165},{10:[1,166],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:167,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:[1,168]},t(St,[2,126]),t(St,[2,128]),t(St,[2,129]),t(St,[2,130]),t(St,[2,131]),{10:[1,169]},{10:[1,170],77:[1,171]},t(Mt,[2,97]),{10:[1,172]},{10:[1,173],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:167,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:[1,174],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:167,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:[1,175],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:167,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(P,[2,44],{89:83,34:l,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,91:A,92:S,93:M,94:T,95:D,96:C}),{10:z,12:Y,13:V,26:H,29:[1,176],30:G,34:$,47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:177,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,38:[1,178],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,40:[1,179],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,42:[1,180],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,44:[1,181],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,46:[1,182],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,27:183,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,29:[1,184],30:G,34:$,47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,47:W,49:[1,185],51:[1,186],55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{10:z,12:Y,13:V,26:H,30:G,34:$,47:W,49:[1,188],51:[1,187],55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(R,[2,39],{34:wt}),t(U,[2,61]),t(U,[2,60]),{10:z,12:Y,13:V,26:H,30:G,34:$,47:W,55:K,57:[1,189],58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(U,[2,63]),t(At,[2,67]),{10:z,12:Y,13:V,26:H,27:190,30:G,34:$,47:W,55:K,58:91,59:X,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(_t,a,{5:191}),t(I,[2,34]),{33:192,34:l,36:30,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},{10:Tt,61:Dt,71:193,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},t(St,[2,127]),{10:Tt,61:Dt,71:207,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{10:Tt,61:Dt,71:208,73:Ct,75:[1,209],76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{10:Tt,61:Dt,71:210,73:Ct,75:[1,211],76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{76:[1,212]},{10:Tt,61:Dt,71:213,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{10:Tt,61:Dt,71:214,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{13:xt,34:$,66:kt,72:215,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{13:xt,34:$,59:[1,217],66:kt,72:216,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(F,[2,45]),{10:z,12:Y,13:V,26:H,30:G,34:$,38:[1,218],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(F,[2,50]),t(F,[2,47]),t(F,[2,48]),t(F,[2,49]),t(F,[2,51]),{10:z,12:Y,13:V,26:H,30:G,34:$,46:[1,219],47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},t(F,[2,53]),t(F,[2,54]),t(F,[2,56]),t(F,[2,55]),t(F,[2,57]),t([10,34,66,76,77,80,81,82,84,85,91,92,93,94,95,96],[2,65]),{10:z,12:Y,13:V,26:H,29:[1,220],30:G,34:$,47:W,55:K,58:161,60:102,61:Z,62:J,63:Q,64:tt,65:et,66:nt,67:rt,69:93,70:it,76:at,77:ot,80:st,81:ut,82:ct,84:ft,85:lt,86:ht,87:dt,88:99,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{6:10,7:11,8:o,9:s,10:u,11:c,19:16,21:17,22:18,23:19,24:20,25:21,26:f,30:[1,221],32:23,33:29,34:l,36:30,61:h,62:d,63:p,64:g,65:y,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},t(P,[2,43]),t(qt,[2,89],{77:jt}),t(Ut,[2,99],{79:223,10:Tt,61:Dt,73:Ct,76:Nt,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft}),t(zt,[2,101]),t(zt,[2,103]),t(zt,[2,104]),t(zt,[2,105]),t(zt,[2,106]),t(zt,[2,107]),t(zt,[2,108]),t(zt,[2,109]),t(zt,[2,110]),t(zt,[2,111]),t(zt,[2,112]),t(zt,[2,113]),t(qt,[2,90],{77:jt}),t(qt,[2,91],{77:jt}),{10:[1,224]},t(qt,[2,92],{77:jt}),{10:[1,225]},t(Mt,[2,98]),t(qt,[2,82],{77:jt}),t(qt,[2,83],{77:jt}),t(qt,[2,84],{88:134,90:167,13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt}),t(qt,[2,85],{88:134,90:167,10:[1,226],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt}),t(qt,[2,87],{10:[1,227]}),{38:[1,228]},{46:[1,229]},{8:L,9:B,11:O,20:230},t(I,[2,33]),{10:Tt,61:Dt,73:Ct,76:Nt,78:231,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},t(zt,[2,102]),{13:xt,34:$,66:kt,72:232,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{13:xt,34:$,66:kt,72:233,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,88:134,90:132,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt},{59:[1,234]},{59:[1,235]},t(F,[2,46]),t(F,[2,52]),t(_t,a,{5:236}),t(Ut,[2,100],{79:223,10:Tt,61:Dt,73:Ct,76:Nt,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft}),t(qt,[2,95],{88:134,90:167,10:[1,237],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt}),t(qt,[2,96],{88:134,90:167,10:[1,238],13:xt,34:$,66:kt,76:at,77:ot,80:st,81:ut,82:Et,84:ft,85:lt,91:pt,92:gt,93:yt,94:bt,95:vt,96:mt}),t(qt,[2,86]),t(qt,[2,88]),{6:10,7:11,8:o,9:s,10:u,11:c,19:16,21:17,22:18,23:19,24:20,25:21,26:f,30:[1,239],32:23,33:29,34:l,36:30,61:h,62:d,63:p,64:g,65:y,66:b,76:v,77:m,80:_,81:w,82:x,84:k,85:E,89:31,91:A,92:S,93:M,94:T,95:D,96:C},{10:Tt,61:Dt,71:240,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},{10:Tt,61:Dt,71:241,73:Ct,76:Nt,78:194,79:195,80:It,81:Lt,82:Bt,83:Ot,84:Rt,85:Pt,86:Ft},t(I,[2,32]),t(qt,[2,93],{77:jt}),t(qt,[2,94],{77:jt})],defaultActions:{},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},Vt={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(t,e,n,r){switch(n){case 0:break;case 1:this.begin(\"string\");break;case 2:this.popState();break;case 3:return\"STR\";case 4:return 61;case 5:return 70;case 6:return 62;case 7:return 75;case 8:return 63;case 9:return 64;case 10:return 65;case 11:return t.lex.firstGraph()&&this.begin(\"dir\"),12;case 12:return 26;case 13:return 30;case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:return this.popState(),13;case 24:return 76;case 25:return 84;case 26:return 35;case 27:return 81;case 28:return 34;case 29:return 8;case 30:return 77;case 31:return 95;case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 58:case 59:return 56;case 60:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 68:case 69:case 70:case 71:return 55;case 72:return 39;case 73:return 40;case 74:return 41;case 75:return 42;case 76:return 43;case 77:return 44;case 78:return 82;case 79:return 85;case 80:return 96;case 81:return 93;case 82:return 86;case 83:case 84:return 94;case 85:return 87;case 86:return 47;case 87:return 67;case 88:return\"SEP\";case 89:return 66;case 90:return 80;case 91:return 49;case 92:return 48;case 93:return 51;case 94:return 50;case 95:return 91;case 96:return 92;case 97:return 57;case 98:return 37;case 99:return 38;case 100:return 28;case 101:return 29;case 102:return 45;case 103:return 46;case 104:return 102;case 105:return 9;case 106:return 10;case 107:return 11}},rules:[/^(?:%%[^\\n]*\\n*)/,/^(?:[\"])/,/^(?:[\"])/,/^(?:[^\"]*)/,/^(?:style\\b)/,/^(?:default\\b)/,/^(?:linkStyle\\b)/,/^(?:interpolate\\b)/,/^(?:classDef\\b)/,/^(?:class\\b)/,/^(?:click\\b)/,/^(?:graph\\b)/,/^(?:subgraph\\b)/,/^(?:end\\b\\s*)/,/^(?:\\s*LR\\b)/,/^(?:\\s*RL\\b)/,/^(?:\\s*TB\\b)/,/^(?:\\s*BT\\b)/,/^(?:\\s*TD\\b)/,/^(?:\\s*BR\\b)/,/^(?:\\s*<)/,/^(?:\\s*>)/,/^(?:\\s*\\^)/,/^(?:\\s*v\\b)/,/^(?:[0-9]+)/,/^(?:#)/,/^(?::::)/,/^(?::)/,/^(?:&)/,/^(?:;)/,/^(?:,)/,/^(?:\\*)/,/^(?:\\s*--[x]\\s*)/,/^(?:\\s*-->\\s*)/,/^(?:\\s*<-->\\s*)/,/^(?:\\s*[x]--[x]\\s*)/,/^(?:\\s*[o]--[o]\\s*)/,/^(?:\\s*[o]\\.-[o]\\s*)/,/^(?:\\s*<==>\\s*)/,/^(?:\\s*[o]==[o]\\s*)/,/^(?:\\s*[x]==[x]\\s*)/,/^(?:\\s*[x].-[x]\\s*)/,/^(?:\\s*[x]-\\.-[x]\\s*)/,/^(?:\\s*<\\.->\\s*)/,/^(?:\\s*<-\\.->\\s*)/,/^(?:\\s*[o]-\\.-[o]\\s*)/,/^(?:\\s*--[o]\\s*)/,/^(?:\\s*---\\s*)/,/^(?:\\s*-\\.-[x]\\s*)/,/^(?:\\s*-\\.->\\s*)/,/^(?:\\s*-\\.-[o]\\s*)/,/^(?:\\s*-\\.-\\s*)/,/^(?:\\s*.-[x]\\s*)/,/^(?:\\s*\\.->\\s*)/,/^(?:\\s*\\.-[o]\\s*)/,/^(?:\\s*\\.-\\s*)/,/^(?:\\s*==[x]\\s*)/,/^(?:\\s*==>\\s*)/,/^(?:\\s*==[o]\\s*)/,/^(?:\\s*==[\\=]\\s*)/,/^(?:\\s*<--\\s*)/,/^(?:\\s*[x]--\\s*)/,/^(?:\\s*[o]--\\s*)/,/^(?:\\s*<-\\.\\s*)/,/^(?:\\s*[x]-\\.\\s*)/,/^(?:\\s*[o]-\\.\\s*)/,/^(?:\\s*<==\\s*)/,/^(?:\\s*[x]==\\s*)/,/^(?:\\s*[o]==\\s*)/,/^(?:\\s*--\\s*)/,/^(?:\\s*-\\.\\s*)/,/^(?:\\s*==\\s*)/,/^(?:\\(-)/,/^(?:-\\))/,/^(?:\\(\\[)/,/^(?:\\]\\))/,/^(?:\\[\\()/,/^(?:\\)\\])/,/^(?:-)/,/^(?:\\.)/,/^(?:[\\_])/,/^(?:\\+)/,/^(?:%)/,/^(?:=)/,/^(?:=)/,/^(?:<)/,/^(?:>)/,/^(?:\\^)/,/^(?:\\\\\\|)/,/^(?:v\\b)/,/^(?:[A-Za-z]+)/,/^(?:\\\\\\])/,/^(?:\\[\\/)/,/^(?:\\/\\])/,/^(?:\\[\\\\)/,/^(?:[!\"#$%&'*+,-.`?\\\\_\\/])/,/^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/,/^(?:\\|)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\")/,/^(?:(\\r|\\n|\\r\\n)+)/,/^(?:\\s)/,/^(?:$)/],conditions:{vertex:{rules:[],inclusive:!1},dir:{rules:[14,15,16,17,18,19,20,21,22,23],inclusive:!1},string:{rules:[2,3],inclusive:!1},INITIAL:{rules:[0,1,4,5,6,7,8,9,10,11,12,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],inclusive:!0}}};function Ht(){this.yy={}}return Yt.lexer=Vt,Ht.prototype=Yt,Yt.Parser=Ht,new Ht}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){var r=n(62),i=n(243),a=n(244),o=n(245),s=n(246),u=n(247);function c(t){var e=this.__data__=new r(t);this.size=e.size}c.prototype.clear=i,c.prototype.delete=a,c.prototype.get=o,c.prototype.has=s,c.prototype.set=u,t.exports=c},function(t,e,n){var r=n(238),i=n(239),a=n(240),o=n(241),s=n(242);function u(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=i,u.prototype.get=a,u.prototype.has=o,u.prototype.set=s,t.exports=u},function(t,e,n){var r=n(36);t.exports=function(t,e){for(var n=t.length;n--;)if(r(t[n][0],e))return n;return-1}},function(t,e,n){var r=n(32)(Object,\"create\");t.exports=r},function(t,e,n){var r=n(262);t.exports=function(t,e){var n=t.__data__;return r(e)?n[\"string\"==typeof e?\"string\":\"hash\"]:n.map}},function(t,e,n){var r=n(67),i=n(36),a=Object.prototype.hasOwnProperty;t.exports=function(t,e,n){var o=t[e];a.call(t,e)&&i(o,n)&&(void 0!==n||e in t)||r(t,e,n)}},function(t,e,n){var r=n(133);t.exports=function(t,e,n){\"__proto__\"==e&&r?r(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}},function(t,e){var n=9007199254740991,r=/^(?:0|[1-9]\\d*)$/;t.exports=function(t,e){var i=typeof t;return!!(e=null==e?n:e)&&(\"number\"==i||\"symbol\"!=i&&r.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e){var n=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===(\"function\"==typeof e&&e.prototype||n)}},function(t,e,n){var r=n(135)(Object.getPrototypeOf,Object);t.exports=r},function(t,e,n){var r=n(101),i=n(291)(r);t.exports=i},function(t,e,n){var r=n(6),i=n(105),a=n(305),o=n(157);t.exports=function(t,e){return r(t)?t:i(t,e)?[t]:a(o(t))}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,i=Array(r);++n<r;)i[n]=e(t[n],n,t);return i}},function(t,e,n){var r=n(34),i=n(165),a=n(166);t.exports=function(t,e){return a(i(t,e,r),t+\"\")}},function(t,e,n){var r=n(36),i=n(23),a=n(68),o=n(14);t.exports=function(t,e,n){if(!o(n))return!1;var s=typeof e;return!!(\"number\"==s?i(n)&&a(e,n.length):\"string\"==s&&e in n)&&r(n[e],t)}},function(t,e,n){\"use strict\";var r=n(4);t.exports={longestPath:function(t){var e={};r.forEach(t.sources(),(function n(i){var a=t.node(i);if(r.has(e,i))return a.rank;e[i]=!0;var o=r.min(r.map(t.outEdges(i),(function(e){return n(e.w)-t.edge(e).minlen})));return o!==Number.POSITIVE_INFINITY&&null!=o||(o=0),a.rank=o}))},slack:function(t,e){return t.node(e.w).rank-t.node(e.v).rank-t.edge(e).minlen}}},function(t,e,n){\"use strict\";(function(e){void 0===e||!e.version||0===e.version.indexOf(\"v0.\")||0===e.version.indexOf(\"v1.\")&&0!==e.version.indexOf(\"v1.8.\")?t.exports={nextTick:function(t,n,r,i){if(\"function\"!=typeof t)throw new TypeError('\"callback\" argument must be a function');var a,o,s=arguments.length;switch(s){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick((function(){t.call(null,n)}));case 3:return e.nextTick((function(){t.call(null,n,r)}));case 4:return e.nextTick((function(){t.call(null,n,r,i)}));default:for(a=new Array(s-1),o=0;o<a.length;)a[o++]=arguments[o];return e.nextTick((function(){t.apply(null,a)}))}}}:t.exports=e}).call(this,n(7))},function(t,e,n){var r=n(3).Buffer;function i(t){r.isBuffer(t)||(t=r.from(t));for(var e=t.length/4|0,n=new Array(e),i=0;i<e;i++)n[i]=t.readUInt32BE(4*i);return n}function a(t){for(;0<t.length;t++)t[0]=0}function o(t,e,n,r,i){for(var a,o,s,u,c=n[0],f=n[1],l=n[2],h=n[3],d=t[0]^e[0],p=t[1]^e[1],g=t[2]^e[2],y=t[3]^e[3],b=4,v=1;v<i;v++)a=c[d>>>24]^f[p>>>16&255]^l[g>>>8&255]^h[255&y]^e[b++],o=c[p>>>24]^f[g>>>16&255]^l[y>>>8&255]^h[255&d]^e[b++],s=c[g>>>24]^f[y>>>16&255]^l[d>>>8&255]^h[255&p]^e[b++],u=c[y>>>24]^f[d>>>16&255]^l[p>>>8&255]^h[255&g]^e[b++],d=a,p=o,g=s,y=u;return a=(r[d>>>24]<<24|r[p>>>16&255]<<16|r[g>>>8&255]<<8|r[255&y])^e[b++],o=(r[p>>>24]<<24|r[g>>>16&255]<<16|r[y>>>8&255]<<8|r[255&d])^e[b++],s=(r[g>>>24]<<24|r[y>>>16&255]<<16|r[d>>>8&255]<<8|r[255&p])^e[b++],u=(r[y>>>24]<<24|r[d>>>16&255]<<16|r[p>>>8&255]<<8|r[255&g])^e[b++],[a>>>=0,o>>>=0,s>>>=0,u>>>=0]}var s=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),e=0;e<256;e++)t[e]=e<128?e<<1:e<<1^283;for(var n=[],r=[],i=[[],[],[],[]],a=[[],[],[],[]],o=0,s=0,u=0;u<256;++u){var c=s^s<<1^s<<2^s<<3^s<<4;c=c>>>8^255&c^99,n[o]=c,r[c]=o;var f=t[o],l=t[f],h=t[l],d=257*t[c]^16843008*c;i[0][o]=d<<24|d>>>8,i[1][o]=d<<16|d>>>16,i[2][o]=d<<8|d>>>24,i[3][o]=d,d=16843009*h^65537*l^257*f^16843008*o,a[0][c]=d<<24|d>>>8,a[1][c]=d<<16|d>>>16,a[2][c]=d<<8|d>>>24,a[3][c]=d,0===o?o=s=1:(o=f^t[t[t[h^f]]],s^=t[t[s]])}return{SBOX:n,INV_SBOX:r,SUB_MIX:i,INV_SUB_MIX:a}}();function c(t){this._key=i(t),this._reset()}c.blockSize=16,c.keySize=32,c.prototype.blockSize=c.blockSize,c.prototype.keySize=c.keySize,c.prototype._reset=function(){for(var t=this._key,e=t.length,n=e+6,r=4*(n+1),i=[],a=0;a<e;a++)i[a]=t[a];for(a=e;a<r;a++){var o=i[a-1];a%e==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=s[a/e|0]<<24):e>6&&a%e==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),i[a]=i[a-e]^o}for(var c=[],f=0;f<r;f++){var l=r-f,h=i[l-(f%4?0:4)];c[f]=f<4||l<=4?h:u.INV_SUB_MIX[0][u.SBOX[h>>>24]]^u.INV_SUB_MIX[1][u.SBOX[h>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[h>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&h]]}this._nRounds=n,this._keySchedule=i,this._invKeySchedule=c},c.prototype.encryptBlockRaw=function(t){return o(t=i(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},c.prototype.encryptBlock=function(t){var e=this.encryptBlockRaw(t),n=r.allocUnsafe(16);return n.writeUInt32BE(e[0],0),n.writeUInt32BE(e[1],4),n.writeUInt32BE(e[2],8),n.writeUInt32BE(e[3],12),n},c.prototype.decryptBlock=function(t){var e=(t=i(t))[1];t[1]=t[3],t[3]=e;var n=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),a=r.allocUnsafe(16);return a.writeUInt32BE(n[0],0),a.writeUInt32BE(n[3],4),a.writeUInt32BE(n[2],8),a.writeUInt32BE(n[1],12),a},c.prototype.scrub=function(){a(this._keySchedule),a(this._invKeySchedule),a(this._key)},t.exports.AES=c},function(t,e,n){var r=n(3).Buffer,i=n(111);t.exports=function(t,e,n,a){if(r.isBuffer(t)||(t=r.from(t,\"binary\")),e&&(r.isBuffer(e)||(e=r.from(e,\"binary\")),8!==e.length))throw new RangeError(\"salt should be Buffer with 8 byte length\");for(var o=n/8,s=r.alloc(o),u=r.alloc(a||0),c=r.alloc(0);o>0||a>0;){var f=new i;f.update(c),f.update(t),e&&f.update(e),c=f.digest();var l=0;if(o>0){var h=s.length-o;l=Math.min(o,c.length),c.copy(s,h,0,l),o-=l}if(l<c.length&&a>0){var d=u.length-a,p=Math.min(a,c.length-l);c.copy(u,d,l,l+p),a-=p}}return c.fill(0),{key:s,iv:u}}},function(t,e,n){\"use strict\";var r=n(5),i=n(17),a=i.getNAF,o=i.getJSF,s=i.assert;function u(t,e){this.type=t,this.p=new r(e.p,16),this.red=e.prime?r.red(e.prime):r.mont(this.p),this.zero=new r(0).toRed(this.red),this.one=new r(1).toRed(this.red),this.two=new r(2).toRed(this.red),this.n=e.n&&new r(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var n=this.n&&this.p.div(this.n);!n||n.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function c(t,e){this.curve=t,this.type=e,this.precomputed=null}t.exports=u,u.prototype.point=function(){throw new Error(\"Not implemented\")},u.prototype.validate=function(){throw new Error(\"Not implemented\")},u.prototype._fixedNafMul=function(t,e){s(t.precomputed);var n=t._getDoubles(),r=a(e,1,this._bitLength),i=(1<<n.step+1)-(n.step%2==0?2:1);i/=3;for(var o=[],u=0;u<r.length;u+=n.step){var c=0;for(e=u+n.step-1;e>=u;e--)c=(c<<1)+r[e];o.push(c)}for(var f=this.jpoint(null,null,null),l=this.jpoint(null,null,null),h=i;h>0;h--){for(u=0;u<o.length;u++){(c=o[u])===h?l=l.mixedAdd(n.points[u]):c===-h&&(l=l.mixedAdd(n.points[u].neg()))}f=f.add(l)}return f.toP()},u.prototype._wnafMul=function(t,e){var n=4,r=t._getNAFPoints(n);n=r.wnd;for(var i=r.points,o=a(e,n,this._bitLength),u=this.jpoint(null,null,null),c=o.length-1;c>=0;c--){for(e=0;c>=0&&0===o[c];c--)e++;if(c>=0&&e++,u=u.dblp(e),c<0)break;var f=o[c];s(0!==f),u=\"affine\"===t.type?f>0?u.mixedAdd(i[f-1>>1]):u.mixedAdd(i[-f-1>>1].neg()):f>0?u.add(i[f-1>>1]):u.add(i[-f-1>>1].neg())}return\"affine\"===t.type?u.toP():u},u.prototype._wnafMulAdd=function(t,e,n,r,i){for(var s=this._wnafT1,u=this._wnafT2,c=this._wnafT3,f=0,l=0;l<r;l++){var h=(A=e[l])._getNAFPoints(t);s[l]=h.wnd,u[l]=h.points}for(l=r-1;l>=1;l-=2){var d=l-1,p=l;if(1===s[d]&&1===s[p]){var g=[e[d],null,null,e[p]];0===e[d].y.cmp(e[p].y)?(g[1]=e[d].add(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg())):0===e[d].y.cmp(e[p].y.redNeg())?(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].add(e[p].neg())):(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg()));var y=[-3,-1,-5,-7,0,7,5,1,3],b=o(n[d],n[p]);f=Math.max(b[0].length,f),c[d]=new Array(f),c[p]=new Array(f);for(var v=0;v<f;v++){var m=0|b[0][v],_=0|b[1][v];c[d][v]=y[3*(m+1)+(_+1)],c[p][v]=0,u[d]=g}}else c[d]=a(n[d],s[d],this._bitLength),c[p]=a(n[p],s[p],this._bitLength),f=Math.max(c[d].length,f),f=Math.max(c[p].length,f)}var w=this.jpoint(null,null,null),x=this._wnafT4;for(l=f;l>=0;l--){for(var k=0;l>=0;){var E=!0;for(v=0;v<r;v++)x[v]=0|c[v][l],0!==x[v]&&(E=!1);if(!E)break;k++,l--}if(l>=0&&k++,w=w.dblp(k),l<0)break;for(v=0;v<r;v++){var A,S=x[v];0!==S&&(S>0?A=u[v][S-1>>1]:S<0&&(A=u[v][-S-1>>1].neg()),w=\"affine\"===A.type?w.mixedAdd(A):w.add(A))}}for(l=0;l<r;l++)u[l]=null;return i?w:w.toP()},u.BasePoint=c,c.prototype.eq=function(){throw new Error(\"Not implemented\")},c.prototype.validate=function(){return this.curve.validate(this)},u.prototype.decodePoint=function(t,e){t=i.toArray(t,e);var n=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*n)return 6===t[0]?s(t[t.length-1]%2==0):7===t[0]&&s(t[t.length-1]%2==1),this.point(t.slice(1,1+n),t.slice(1+n,1+2*n));if((2===t[0]||3===t[0])&&t.length-1===n)return this.pointFromX(t.slice(1,1+n),3===t[0]);throw new Error(\"Unknown point format\")},c.prototype.encodeCompressed=function(t){return this.encode(t,!0)},c.prototype._encode=function(t){var e=this.curve.p.byteLength(),n=this.getX().toArray(\"be\",e);return t?[this.getY().isEven()?2:3].concat(n):[4].concat(n,this.getY().toArray(\"be\",e))},c.prototype.encode=function(t,e){return i.encode(this._encode(e),t)},c.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},c.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},c.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var n=[this],r=this,i=0;i<e;i+=t){for(var a=0;a<t;a++)r=r.dbl();n.push(r)}return{step:t,points:n}},c.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],n=(1<<t)-1,r=1===n?null:this.dbl(),i=1;i<n;i++)e[i]=e[i-1].add(r);return{wnd:t,points:e}},c.prototype._getBeta=function(){return null},c.prototype.dblp=function(t){for(var e=this,n=0;n<t;n++)e=e.dbl();return e}},function(t,e,n){var r=n(481),i=n(492),a=n(493),o=n(121),s=n(202),u=n(3).Buffer;function c(t){var e;\"object\"!=typeof t||u.isBuffer(t)||(e=t.passphrase,t=t.key),\"string\"==typeof t&&(t=u.from(t));var n,c,f=a(t,e),l=f.tag,h=f.data;switch(l){case\"CERTIFICATE\":c=r.certificate.decode(h,\"der\").tbsCertificate.subjectPublicKeyInfo;case\"PUBLIC KEY\":switch(c||(c=r.PublicKey.decode(h,\"der\")),n=c.algorithm.algorithm.join(\".\")){case\"1.2.840.113549.1.1.1\":return r.RSAPublicKey.decode(c.subjectPublicKey.data,\"der\");case\"1.2.840.10045.2.1\":return c.subjectPrivateKey=c.subjectPublicKey,{type:\"ec\",data:c};case\"1.2.840.10040.4.1\":return c.algorithm.params.pub_key=r.DSAparam.decode(c.subjectPublicKey.data,\"der\"),{type:\"dsa\",data:c.algorithm.params};default:throw new Error(\"unknown key id \"+n)}throw new Error(\"unknown key type \"+l);case\"ENCRYPTED PRIVATE KEY\":h=function(t,e){var n=t.algorithm.decrypt.kde.kdeparams.salt,r=parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(),10),a=i[t.algorithm.decrypt.cipher.algo.join(\".\")],c=t.algorithm.decrypt.cipher.iv,f=t.subjectPrivateKey,l=parseInt(a.split(\"-\")[1],10)/8,h=s.pbkdf2Sync(e,n,r,l,\"sha1\"),d=o.createDecipheriv(a,h,c),p=[];return p.push(d.update(f)),p.push(d.final()),u.concat(p)}(h=r.EncryptedPrivateKey.decode(h,\"der\"),e);case\"PRIVATE KEY\":switch(n=(c=r.PrivateKey.decode(h,\"der\")).algorithm.algorithm.join(\".\")){case\"1.2.840.113549.1.1.1\":return r.RSAPrivateKey.decode(c.subjectPrivateKey,\"der\");case\"1.2.840.10045.2.1\":return{curve:c.algorithm.curve,privateKey:r.ECPrivateKey.decode(c.subjectPrivateKey,\"der\").privateKey};case\"1.2.840.10040.4.1\":return c.algorithm.params.priv_key=r.DSAparam.decode(c.subjectPrivateKey,\"der\"),{type:\"dsa\",params:c.algorithm.params};default:throw new Error(\"unknown key id \"+n)}throw new Error(\"unknown key type \"+l);case\"RSA PUBLIC KEY\":return r.RSAPublicKey.decode(h,\"der\");case\"RSA PRIVATE KEY\":return r.RSAPrivateKey.decode(h,\"der\");case\"DSA PRIVATE KEY\":return{type:\"dsa\",params:r.DSAPrivateKey.decode(h,\"der\")};case\"EC PRIVATE KEY\":return{curve:(h=r.ECPrivateKey.decode(h,\"der\")).parameters.value,privateKey:h.privateKey};default:throw new Error(\"unknown key type \"+l)}}t.exports=c,c.signature=r.signature},function(t,e,n){\"use strict\";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||\"\",r=t[3];if(!r)return n;if(e&&\"function\"==typeof btoa){var i=(o=r,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\"),a=r.sources.map((function(t){return\"/*# sourceURL=\"+r.sourceRoot+t+\" */\"}));return[n].concat(a).concat([i]).join(\"\\n\")}var o;return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n})).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var r={},i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(i=0;i<t.length;i++){var o=t[i];null!=o[0]&&r[o[0]]||(n&&!o[2]?o[2]=n:n&&(o[2]=\"(\"+o[2]+\") and (\"+n+\")\"),e.push(o))}},e}},function(t,e,n){\"use strict\";var r=/^(%20|\\s)*(javascript|data)/im,i=/[^\\x20-\\x7E]/gim,a=/^([^:]+):/gm,o=[\".\",\"/\"];t.exports={sanitizeUrl:function(t){if(!t)return\"about:blank\";var e,n,s=t.replace(i,\"\").trim();return function(t){return o.indexOf(t[0])>-1}(s)?s:(n=s.match(a))?(e=n[0],r.test(e)?\"about:blank\":s):\"about:blank\"}}},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[2,3],n=[1,7],r=[7,12,15,17,19,20,21],i=[7,11,12,15,17,19,20,21],a=[2,20],o=[1,32],s={trace:function(){},yy:{},symbols_:{error:2,start:3,GG:4,\":\":5,document:6,EOF:7,DIR:8,options:9,body:10,OPT:11,NL:12,line:13,statement:14,COMMIT:15,commit_arg:16,BRANCH:17,ID:18,CHECKOUT:19,MERGE:20,RESET:21,reset_arg:22,STR:23,HEAD:24,reset_parents:25,CARET:26,$accept:0,$end:1},terminals_:{2:\"error\",4:\"GG\",5:\":\",7:\"EOF\",8:\"DIR\",11:\"OPT\",12:\"NL\",15:\"COMMIT\",17:\"BRANCH\",18:\"ID\",19:\"CHECKOUT\",20:\"MERGE\",21:\"RESET\",23:\"STR\",24:\"HEAD\",26:\"CARET\"},productions_:[0,[3,4],[3,5],[6,0],[6,2],[9,2],[9,1],[10,0],[10,2],[13,2],[13,1],[14,2],[14,2],[14,2],[14,2],[14,2],[16,0],[16,1],[22,2],[22,2],[25,0],[25,2]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 1:return a[s-1];case 2:return r.setDirection(a[s-3]),a[s-1];case 4:r.setOptions(a[s-1]),this.$=a[s];break;case 5:a[s-1]+=a[s],this.$=a[s-1];break;case 7:this.$=[];break;case 8:a[s-1].push(a[s]),this.$=a[s-1];break;case 9:this.$=a[s-1];break;case 11:r.commit(a[s]);break;case 12:r.branch(a[s]);break;case 13:r.checkout(a[s]);break;case 14:r.merge(a[s]);break;case 15:r.reset(a[s]);break;case 16:this.$=\"\";break;case 17:this.$=a[s];break;case 18:this.$=a[s-1]+\":\"+a[s];break;case 19:this.$=a[s-1]+\":\"+r.count,r.count=0;break;case 20:r.count=0;break;case 21:r.count+=1}},table:[{3:1,4:[1,2]},{1:[3]},{5:[1,3],8:[1,4]},{6:5,7:e,9:6,12:n},{5:[1,8]},{7:[1,9]},t(r,[2,7],{10:10,11:[1,11]}),t(i,[2,6]),{6:12,7:e,9:6,12:n},{1:[2,1]},{7:[2,4],12:[1,15],13:13,14:14,15:[1,16],17:[1,17],19:[1,18],20:[1,19],21:[1,20]},t(i,[2,5]),{7:[1,21]},t(r,[2,8]),{12:[1,22]},t(r,[2,10]),{12:[2,16],16:23,23:[1,24]},{18:[1,25]},{18:[1,26]},{18:[1,27]},{18:[1,30],22:28,24:[1,29]},{1:[2,2]},t(r,[2,9]),{12:[2,11]},{12:[2,17]},{12:[2,12]},{12:[2,13]},{12:[2,14]},{12:[2,15]},{12:a,25:31,26:o},{12:a,25:33,26:o},{12:[2,18]},{12:a,25:34,26:o},{12:[2,19]},{12:[2,21]}],defaultActions:{9:[2,1],21:[2,2],23:[2,11],24:[2,17],25:[2,12],26:[2,13],27:[2,14],28:[2,15],31:[2,18],33:[2,19],34:[2,21]},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},u={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{\"case-insensitive\":!0},performAction:function(t,e,n,r){switch(n){case 0:return 12;case 1:case 2:case 3:break;case 4:return 4;case 5:return 15;case 6:return 17;case 7:return 20;case 8:return 21;case 9:return 19;case 10:case 11:return 8;case 12:return 5;case 13:return 26;case 14:this.begin(\"options\");break;case 15:this.popState();break;case 16:return 11;case 17:this.begin(\"string\");break;case 18:this.popState();break;case 19:return 23;case 20:return 18;case 21:return 7}},rules:[/^(?:(\\r?\\n)+)/i,/^(?:\\s+)/i,/^(?:#[^\\n]*)/i,/^(?:%[^\\n]*)/i,/^(?:gitGraph\\b)/i,/^(?:commit\\b)/i,/^(?:branch\\b)/i,/^(?:merge\\b)/i,/^(?:reset\\b)/i,/^(?:checkout\\b)/i,/^(?:LR\\b)/i,/^(?:BT\\b)/i,/^(?::)/i,/^(?:\\^)/i,/^(?:options\\r?\\n)/i,/^(?:end\\r?\\n)/i,/^(?:[^\\n]+\\r?\\n)/i,/^(?:[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?:[a-zA-Z][a-zA-Z0-9_]+)/i,/^(?:$)/i],conditions:{options:{rules:[15,16],inclusive:!1},string:{rules:[18,19],inclusive:!1},INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,20,21],inclusive:!0}}};function c(){this.yy={}}return s.lexer=u,c.prototype=s,s.Parser=c,new c}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[6,9,10],n={trace:function(){},yy:{},symbols_:{error:2,start:3,info:4,document:5,EOF:6,line:7,statement:8,NL:9,showInfo:10,$accept:0,$end:1},terminals_:{2:\"error\",4:\"info\",6:\"EOF\",9:\"NL\",10:\"showInfo\"},productions_:[0,[3,3],[5,0],[5,2],[7,1],[7,1],[8,1]],performAction:function(t,e,n,r,i,a,o){a.length;switch(i){case 1:return r;case 4:break;case 6:r.setInfo(!0)}},table:[{3:1,4:[1,2]},{1:[3]},t(e,[2,2],{5:3}),{6:[1,4],7:5,8:6,9:[1,7],10:[1,8]},{1:[2,1]},t(e,[2,3]),t(e,[2,4]),t(e,[2,5]),t(e,[2,6])],defaultActions:{4:[2,1]},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},r={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{\"case-insensitive\":!0},performAction:function(t,e,n,r){switch(n){case 0:return 4;case 1:return 9;case 2:return\"space\";case 3:return 10;case 4:return 6;case 5:return\"TXT\"}},rules:[/^(?:info\\b)/i,/^(?:[\\s\\n\\r]+)/i,/^(?:[\\s]+)/i,/^(?:showInfo\\b)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5],inclusive:!0}}};function i(){this.yy={}}return n.lexer=r,i.prototype=n,n.Parser=i,new i}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t,e,n){(function(t,r){var i=function(){var t=function(t,e,n,r){for(n=n||{},r=t.length;r--;n[t[r]]=e);return n},e=[6,9,10,12],n={trace:function(){},yy:{},symbols_:{error:2,start:3,pie:4,document:5,EOF:6,line:7,statement:8,NL:9,STR:10,VALUE:11,title:12,$accept:0,$end:1},terminals_:{2:\"error\",4:\"pie\",6:\"EOF\",9:\"NL\",10:\"STR\",11:\"VALUE\",12:\"title\"},productions_:[0,[3,3],[5,0],[5,2],[7,1],[7,1],[8,2],[8,1]],performAction:function(t,e,n,r,i,a,o){var s=a.length-1;switch(i){case 4:break;case 6:r.addSection(a[s-1],r.cleanupValue(a[s]));break;case 7:r.setTitle(a[s].substr(6)),this.$=a[s].substr(6)}},table:[{3:1,4:[1,2]},{1:[3]},t(e,[2,2],{5:3}),{6:[1,4],7:5,8:6,9:[1,7],10:[1,8],12:[1,9]},{1:[2,1]},t(e,[2,3]),t(e,[2,4]),t(e,[2,5]),{11:[1,10]},t(e,[2,7]),t(e,[2,6])],defaultActions:{4:[2,1]},parseError:function(t,e){if(!e.recoverable){var n=new Error(t);throw n.hash=e,n}this.trace(t)},parse:function(t){var e=this,n=[0],r=[],i=[null],a=[],o=this.table,s=\"\",u=0,c=0,f=0,l=2,h=1,d=a.slice.call(arguments,1),p=Object.create(this.lexer),g={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(g.yy[y]=this.yy[y]);p.setInput(t,g.yy),g.yy.lexer=p,g.yy.parser=this,void 0===p.yylloc&&(p.yylloc={});var b=p.yylloc;a.push(b);var v=p.options&&p.options.ranges;function m(){var t;return\"number\"!=typeof(t=r.pop()||p.lex()||h)&&(t instanceof Array&&(t=(r=t).pop()),t=e.symbols_[t]||t),t}\"function\"==typeof g.yy.parseError?this.parseError=g.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var _,w,x,k,E,A,S,M,T,D={};;){if(x=n[n.length-1],this.defaultActions[x]?k=this.defaultActions[x]:(null==_&&(_=m()),k=o[x]&&o[x][_]),void 0===k||!k.length||!k[0]){var C=\"\";for(A in T=[],o[x])this.terminals_[A]&&A>l&&T.push(\"'\"+this.terminals_[A]+\"'\");C=p.showPosition?\"Parse error on line \"+(u+1)+\":\\n\"+p.showPosition()+\"\\nExpecting \"+T.join(\", \")+\", got '\"+(this.terminals_[_]||_)+\"'\":\"Parse error on line \"+(u+1)+\": Unexpected \"+(_==h?\"end of input\":\"'\"+(this.terminals_[_]||_)+\"'\"),this.parseError(C,{text:p.match,token:this.terminals_[_]||_,line:p.yylineno,loc:b,expected:T})}if(k[0]instanceof Array&&k.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+x+\", token: \"+_);switch(k[0]){case 1:n.push(_),i.push(p.yytext),a.push(p.yylloc),n.push(k[1]),_=null,w?(_=w,w=null):(c=p.yyleng,s=p.yytext,u=p.yylineno,b=p.yylloc,f>0&&f--);break;case 2:if(S=this.productions_[k[1]][1],D.$=i[i.length-S],D._$={first_line:a[a.length-(S||1)].first_line,last_line:a[a.length-1].last_line,first_column:a[a.length-(S||1)].first_column,last_column:a[a.length-1].last_column},v&&(D._$.range=[a[a.length-(S||1)].range[0],a[a.length-1].range[1]]),void 0!==(E=this.performAction.apply(D,[s,c,u,g.yy,k[1],i,a].concat(d))))return E;S&&(n=n.slice(0,-1*S*2),i=i.slice(0,-1*S),a=a.slice(0,-1*S)),n.push(this.productions_[k[1]][0]),i.push(D.$),a.push(D._$),M=o[n[n.length-2]][n[n.length-1]],n.push(M);break;case 3:return!0}}return!0}},r={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\"},test_match:function(t,e){var n,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=t[0].match(/(?:\\r\\n?|\\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],n=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var t,e,n,r;this._input||(this.done=!0),this._more||(this.yytext=\"\",this.match=\"\");for(var i=this._currentRules(),a=0;a<i.length;a++)if((n=this._input.match(this.rules[i[a]]))&&(!e||n[0].length>e[0].length)){if(e=n,r=a,this.options.backtrack_lexer){if(!1!==(t=this.test_match(n,i[a])))return t;if(this._backtrack){e=!1;continue}return!1}if(!this.options.flex)break}return e?!1!==(t=this.test_match(e,i[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno})},lex:function(){var t=this.next();return t||this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(t){return(t=this.conditionStack.length-1-Math.abs(t||0))>=0?this.conditionStack[t]:\"INITIAL\"},pushState:function(t){this.begin(t)},stateStackSize:function(){return this.conditionStack.length},options:{\"case-insensitive\":!0},performAction:function(t,e,n,r){switch(n){case 0:case 1:break;case 2:return 4;case 3:return 9;case 4:return\"space\";case 5:return 12;case 6:this.begin(\"string\");break;case 7:this.popState();break;case 8:return\"STR\";case 9:return\"VALUE\";case 10:return 6}},rules:[/^(?:%%[^\\n]*)/i,/^(?:\\s+)/i,/^(?:pie\\b)/i,/^(?:[\\s\\n\\r]+)/i,/^(?:[\\s]+)/i,/^(?:title\\s[^#\\n;]+)/i,/^(?:[\"])/i,/^(?:[\"])/i,/^(?:[^\"]*)/i,/^(?::[\\s]*[\\d]+(?:\\.[\\d]+)?)/i,/^(?:$)/i],conditions:{string:{rules:[7,8],inclusive:!1},INITIAL:{rules:[0,1,2,3,4,5,6,9,10],inclusive:!0}}};function i(){this.yy={}}return n.lexer=r,i.prototype=n,n.Parser=i,new i}();e.parser=i,e.Parser=i.Parser,e.parse=function(){return i.parse.apply(i,arguments)},e.main=function(r){r[1]||(console.log(\"Usage: \"+r[0]+\" FILE\"),t.exit(1));var i=n(28).readFileSync(n(29).normalize(r[1]),\"utf8\");return e.parser.parse(i)},n.c[n.s]===r&&e.main(t.argv.slice(1))}).call(this,n(7),n(9)(t))},function(t){t.exports=JSON.parse('{\"name\":\"mermaid\",\"version\":\"8.4.6\",\"description\":\"Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.\",\"main\":\"dist/mermaid.core.js\",\"keywords\":[\"diagram\",\"markdown\",\"flowchart\",\"sequence diagram\",\"gantt\",\"class diagram\",\"git graph\"],\"scripts\":{\"build\":\"webpack --progress --colors\",\"postbuild\":\"documentation build src/mermaidAPI.js --shallow -f md --markdown-toc false -o docs/mermaidAPI.md\",\"build:watch\":\"yarn build --watch\",\"minify\":\"minify ./dist/mermaid.js > ./dist/mermaid.min.js\",\"release\":\"yarn build -p --config webpack.config.prod.babel.js\",\"lint\":\"eslint src\",\"e2e:depr\":\"yarn lint && jest e2e --config e2e/jest.config.js\",\"cypress\":\"percy exec -- cypress run\",\"e2e\":\"start-server-and-test dev http://localhost:9000/ cypress\",\"e2e-upd\":\"yarn lint && jest e2e -u --config e2e/jest.config.js\",\"dev\":\"webpack-dev-server --config webpack.config.e2e.js\",\"test\":\"yarn lint && jest src/.*\",\"test:watch\":\"jest --watch src\",\"prepublishOnly\":\"yarn build && yarn release && yarn test && yarn e2e\",\"prepush\":\"yarn test\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/knsv/mermaid\"},\"author\":\"Knut Sveidqvist\",\"license\":\"MIT\",\"standard\":{\"ignore\":[\"**/parser/*.js\",\"dist/**/*.js\",\"cypress/**/*.js\"],\"globals\":[\"page\"]},\"dependencies\":{\"@braintree/sanitize-url\":\"^3.1.0\",\"crypto-random-string\":\"^3.0.1\",\"d3\":\"^5.7.0\",\"dagre\":\"^0.8.4\",\"dagre-d3\":\"^0.6.4\",\"graphlib\":\"^2.1.7\",\"he\":\"^1.2.0\",\"lodash\":\"^4.17.11\",\"minify\":\"^4.1.1\",\"moment-mini\":\"^2.22.1\",\"scope-css\":\"^1.2.1\"},\"devDependencies\":{\"@babel/core\":\"^7.2.2\",\"@babel/preset-env\":\"^7.2.0\",\"@babel/register\":\"^7.0.0\",\"@percy/cypress\":\"^2.0.1\",\"babel-core\":\"7.0.0-bridge.0\",\"babel-jest\":\"^24.9.0\",\"babel-loader\":\"^8.0.4\",\"coveralls\":\"^3.0.2\",\"css-loader\":\"^2.0.1\",\"css-to-string-loader\":\"^0.1.3\",\"cypress\":\"3.4.0\",\"documentation\":\"^12.0.1\",\"eslint\":\"^6.3.0\",\"eslint-config-prettier\":\"^6.3.0\",\"eslint-plugin-prettier\":\"^3.1.0\",\"husky\":\"^1.2.1\",\"identity-obj-proxy\":\"^3.0.0\",\"jest\":\"^24.9.0\",\"jison\":\"^0.4.18\",\"moment\":\"^2.23.0\",\"node-sass\":\"^4.12.0\",\"prettier\":\"^1.18.2\",\"puppeteer\":\"^1.17.0\",\"sass-loader\":\"^7.1.0\",\"start-server-and-test\":\"^1.10.6\",\"terser-webpack-plugin\":\"^2.2.2\",\"webpack\":\"^4.41.2\",\"webpack-cli\":\"^3.1.2\",\"webpack-dev-server\":\"^3.4.1\",\"webpack-node-externals\":\"^1.7.2\",\"yarn-upgrade-all\":\"^0.5.0\"},\"files\":[\"dist\"],\"yarn-upgrade-all\":{\"ignore\":[\"babel-core\"]}}')},function(t,e,n){\"use strict\";var r=n(13);t.exports=s;var i=\"\\0\",a=\"\\0\",o=\"\u0001\";function s(t){this._isDirected=!r.has(t,\"directed\")||t.directed,this._isMultigraph=!!r.has(t,\"multigraph\")&&t.multigraph,this._isCompound=!!r.has(t,\"compound\")&&t.compound,this._label=void 0,this._defaultNodeLabelFn=r.constant(void 0),this._defaultEdgeLabelFn=r.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[a]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function u(t,e){t[e]?t[e]++:t[e]=1}function c(t,e){--t[e]||delete t[e]}function f(t,e,n,a){var s=\"\"+e,u=\"\"+n;if(!t&&s>u){var c=s;s=u,u=c}return s+o+u+o+(r.isUndefined(a)?i:a)}function l(t,e,n,r){var i=\"\"+e,a=\"\"+n;if(!t&&i>a){var o=i;i=a,a=o}var s={v:i,w:a};return r&&(s.name=r),s}function h(t,e){return f(t,e.v,e.w,e.name)}s.prototype._nodeCount=0,s.prototype._edgeCount=0,s.prototype.isDirected=function(){return this._isDirected},s.prototype.isMultigraph=function(){return this._isMultigraph},s.prototype.isCompound=function(){return this._isCompound},s.prototype.setGraph=function(t){return this._label=t,this},s.prototype.graph=function(){return this._label},s.prototype.setDefaultNodeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultNodeLabelFn=t,this},s.prototype.nodeCount=function(){return this._nodeCount},s.prototype.nodes=function(){return r.keys(this._nodes)},s.prototype.sources=function(){var t=this;return r.filter(this.nodes(),(function(e){return r.isEmpty(t._in[e])}))},s.prototype.sinks=function(){var t=this;return r.filter(this.nodes(),(function(e){return r.isEmpty(t._out[e])}))},s.prototype.setNodes=function(t,e){var n=arguments,i=this;return r.each(t,(function(t){n.length>1?i.setNode(t,e):i.setNode(t)})),this},s.prototype.setNode=function(t,e){return r.has(this._nodes,t)?(arguments.length>1&&(this._nodes[t]=e),this):(this._nodes[t]=arguments.length>1?e:this._defaultNodeLabelFn(t),this._isCompound&&(this._parent[t]=a,this._children[t]={},this._children[a][t]=!0),this._in[t]={},this._preds[t]={},this._out[t]={},this._sucs[t]={},++this._nodeCount,this)},s.prototype.node=function(t){return this._nodes[t]},s.prototype.hasNode=function(t){return r.has(this._nodes,t)},s.prototype.removeNode=function(t){var e=this;if(r.has(this._nodes,t)){var n=function(t){e.removeEdge(e._edgeObjs[t])};delete this._nodes[t],this._isCompound&&(this._removeFromParentsChildList(t),delete this._parent[t],r.each(this.children(t),(function(t){e.setParent(t)})),delete this._children[t]),r.each(r.keys(this._in[t]),n),delete this._in[t],delete this._preds[t],r.each(r.keys(this._out[t]),n),delete this._out[t],delete this._sucs[t],--this._nodeCount}return this},s.prototype.setParent=function(t,e){if(!this._isCompound)throw new Error(\"Cannot set parent in a non-compound graph\");if(r.isUndefined(e))e=a;else{for(var n=e+=\"\";!r.isUndefined(n);n=this.parent(n))if(n===t)throw new Error(\"Setting \"+e+\" as parent of \"+t+\" would create a cycle\");this.setNode(e)}return this.setNode(t),this._removeFromParentsChildList(t),this._parent[t]=e,this._children[e][t]=!0,this},s.prototype._removeFromParentsChildList=function(t){delete this._children[this._parent[t]][t]},s.prototype.parent=function(t){if(this._isCompound){var e=this._parent[t];if(e!==a)return e}},s.prototype.children=function(t){if(r.isUndefined(t)&&(t=a),this._isCompound){var e=this._children[t];if(e)return r.keys(e)}else{if(t===a)return this.nodes();if(this.hasNode(t))return[]}},s.prototype.predecessors=function(t){var e=this._preds[t];if(e)return r.keys(e)},s.prototype.successors=function(t){var e=this._sucs[t];if(e)return r.keys(e)},s.prototype.neighbors=function(t){var e=this.predecessors(t);if(e)return r.union(e,this.successors(t))},s.prototype.isLeaf=function(t){return 0===(this.isDirected()?this.successors(t):this.neighbors(t)).length},s.prototype.filterNodes=function(t){var e=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});e.setGraph(this.graph());var n=this;r.each(this._nodes,(function(n,r){t(r)&&e.setNode(r,n)})),r.each(this._edgeObjs,(function(t){e.hasNode(t.v)&&e.hasNode(t.w)&&e.setEdge(t,n.edge(t))}));var i={};return this._isCompound&&r.each(e.nodes(),(function(t){e.setParent(t,function t(r){var a=n.parent(r);return void 0===a||e.hasNode(a)?(i[r]=a,a):a in i?i[a]:t(a)}(t))})),e},s.prototype.setDefaultEdgeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultEdgeLabelFn=t,this},s.prototype.edgeCount=function(){return this._edgeCount},s.prototype.edges=function(){return r.values(this._edgeObjs)},s.prototype.setPath=function(t,e){var n=this,i=arguments;return r.reduce(t,(function(t,r){return i.length>1?n.setEdge(t,r,e):n.setEdge(t,r),r})),this},s.prototype.setEdge=function(){var t,e,n,i,a=!1,o=arguments[0];\"object\"==typeof o&&null!==o&&\"v\"in o?(t=o.v,e=o.w,n=o.name,2===arguments.length&&(i=arguments[1],a=!0)):(t=o,e=arguments[1],n=arguments[3],arguments.length>2&&(i=arguments[2],a=!0)),t=\"\"+t,e=\"\"+e,r.isUndefined(n)||(n=\"\"+n);var s=f(this._isDirected,t,e,n);if(r.has(this._edgeLabels,s))return a&&(this._edgeLabels[s]=i),this;if(!r.isUndefined(n)&&!this._isMultigraph)throw new Error(\"Cannot set a named edge when isMultigraph = false\");this.setNode(t),this.setNode(e),this._edgeLabels[s]=a?i:this._defaultEdgeLabelFn(t,e,n);var c=l(this._isDirected,t,e,n);return t=c.v,e=c.w,Object.freeze(c),this._edgeObjs[s]=c,u(this._preds[e],t),u(this._sucs[t],e),this._in[e][s]=c,this._out[t][s]=c,this._edgeCount++,this},s.prototype.edge=function(t,e,n){var r=1===arguments.length?h(this._isDirected,arguments[0]):f(this._isDirected,t,e,n);return this._edgeLabels[r]},s.prototype.hasEdge=function(t,e,n){var i=1===arguments.length?h(this._isDirected,arguments[0]):f(this._isDirected,t,e,n);return r.has(this._edgeLabels,i)},s.prototype.removeEdge=function(t,e,n){var r=1===arguments.length?h(this._isDirected,arguments[0]):f(this._isDirected,t,e,n),i=this._edgeObjs[r];return i&&(t=i.v,e=i.w,delete this._edgeLabels[r],delete this._edgeObjs[r],c(this._preds[e],t),c(this._sucs[t],e),delete this._in[e][r],delete this._out[t][r],this._edgeCount--),this},s.prototype.inEdges=function(t,e){var n=this._in[t];if(n){var i=r.values(n);return e?r.filter(i,(function(t){return t.v===e})):i}},s.prototype.outEdges=function(t,e){var n=this._out[t];if(n){var i=r.values(n);return e?r.filter(i,(function(t){return t.w===e})):i}},s.prototype.nodeEdges=function(t,e){var n=this.inEdges(t,e);if(n)return n.concat(this.outEdges(t,e))}},function(t,e,n){var r=n(32)(n(18),\"Map\");t.exports=r},function(t,e,n){var r=n(254),i=n(261),a=n(263),o=n(264),s=n(265);function u(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=i,u.prototype.get=a,u.prototype.has=o,u.prototype.set=s,t.exports=u},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}},function(t,e){var n=9007199254740991;t.exports=function(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=n}},function(t,e,n){(function(t){var r=n(131),i=e&&!e.nodeType&&e,a=i&&\"object\"==typeof t&&t&&!t.nodeType&&t,o=a&&a.exports===i&&r.process,s=function(){try{var t=a&&a.require&&a.require(\"util\").types;return t||o&&o.binding&&o.binding(\"util\")}catch(t){}}();t.exports=s}).call(this,n(9)(t))},function(t,e,n){var r=n(70),i=n(271),a=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return i(t);var e=[];for(var n in Object(t))a.call(t,n)&&\"constructor\"!=n&&e.push(n);return e}},function(t,e,n){var r=n(138),i=n(139),a=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(t){return null==t?[]:(t=Object(t),r(o(t),(function(e){return a.call(t,e)})))}:i;t.exports=s},function(t,e){t.exports=function(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t}},function(t,e,n){var r=n(144);t.exports=function(t){var e=new t.constructor(t.byteLength);return new r(e).set(new r(t)),e}},function(t,e){t.exports=function(t){return function(){return t}}},function(t,e,n){t.exports=n(148)},function(t,e,n){var r=n(102),i=n(27);t.exports=function(t,e){return t&&r(t,e,i)}},function(t,e,n){var r=n(290)();t.exports=r},function(t,e){t.exports=function(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}},function(t,e,n){var r=n(73),i=n(52);t.exports=function(t,e){for(var n=0,a=(e=r(e,t)).length;null!=t&&n<a;)t=t[i(e[n++])];return n&&n==a?t:void 0}},function(t,e,n){var r=n(6),i=n(42),a=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,o=/^\\w*$/;t.exports=function(t,e){if(r(t))return!1;var n=typeof t;return!(\"number\"!=n&&\"symbol\"!=n&&\"boolean\"!=n&&null!=t&&!i(t))||(o.test(t)||!a.test(t)||null!=e&&t in Object(e))}},function(t,e,n){var r=n(312),i=n(159);t.exports=function(t,e){return null!=t&&i(t,e,r)}},function(t,e,n){var r=n(97),i=n(324);t.exports=function t(e,n,a,o,s){var u=-1,c=e.length;for(a||(a=i),s||(s=[]);++u<c;){var f=e[u];n>0&&a(f)?n>1?t(f,n-1,a,o,s):r(s,f):o||(s[s.length]=f)}return s}},function(t,e,n){var r=n(42);t.exports=function(t,e,n){for(var i=-1,a=t.length;++i<a;){var o=t[i],s=e(o);if(null!=s&&(void 0===u?s==s&&!r(s):n(s,u)))var u=s,c=o}return c}},function(t,e){t.exports=function(t,e,n,r){var i=t.x,a=t.y,o=i-r.x,s=a-r.y,u=Math.sqrt(e*e*s*s+n*n*o*o),c=Math.abs(e*n*o/u);r.x<i&&(c=-c);var f=Math.abs(e*n*s/u);r.y<a&&(f=-f);return{x:i+c,y:a+f}}},function(t,e,n){var r=n(409),i=n(128),a=n(410);t.exports=function(t,e,n){var o=e.label,s=t.append(\"g\");\"svg\"===e.labelType?a(s,e):\"string\"!=typeof o||\"html\"===e.labelType?i(s,e):r(s,e);var u,c=s.node().getBBox();switch(n){case\"top\":u=-e.height/2;break;case\"bottom\":u=e.height/2-c.height;break;default:u=-c.height/2}return s.attr(\"transform\",\"translate(\"+-c.width/2+\",\"+u+\")\"),s}},function(t,e,n){\"use strict\";var r=n(2),i=n(192),a=n(3).Buffer,o=new Array(16);function s(){i.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function u(t,e){return t<<e|t>>>32-e}function c(t,e,n,r,i,a,o){return u(t+(e&n|~e&r)+i+a|0,o)+e|0}function f(t,e,n,r,i,a,o){return u(t+(e&r|n&~r)+i+a|0,o)+e|0}function l(t,e,n,r,i,a,o){return u(t+(e^n^r)+i+a|0,o)+e|0}function h(t,e,n,r,i,a,o){return u(t+(n^(e|~r))+i+a|0,o)+e|0}r(s,i),s.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);var n=this._a,r=this._b,i=this._c,a=this._d;n=c(n,r,i,a,t[0],3614090360,7),a=c(a,n,r,i,t[1],3905402710,12),i=c(i,a,n,r,t[2],606105819,17),r=c(r,i,a,n,t[3],3250441966,22),n=c(n,r,i,a,t[4],4118548399,7),a=c(a,n,r,i,t[5],1200080426,12),i=c(i,a,n,r,t[6],2821735955,17),r=c(r,i,a,n,t[7],4249261313,22),n=c(n,r,i,a,t[8],1770035416,7),a=c(a,n,r,i,t[9],2336552879,12),i=c(i,a,n,r,t[10],4294925233,17),r=c(r,i,a,n,t[11],2304563134,22),n=c(n,r,i,a,t[12],1804603682,7),a=c(a,n,r,i,t[13],4254626195,12),i=c(i,a,n,r,t[14],2792965006,17),n=f(n,r=c(r,i,a,n,t[15],1236535329,22),i,a,t[1],4129170786,5),a=f(a,n,r,i,t[6],3225465664,9),i=f(i,a,n,r,t[11],643717713,14),r=f(r,i,a,n,t[0],3921069994,20),n=f(n,r,i,a,t[5],3593408605,5),a=f(a,n,r,i,t[10],38016083,9),i=f(i,a,n,r,t[15],3634488961,14),r=f(r,i,a,n,t[4],3889429448,20),n=f(n,r,i,a,t[9],568446438,5),a=f(a,n,r,i,t[14],3275163606,9),i=f(i,a,n,r,t[3],4107603335,14),r=f(r,i,a,n,t[8],1163531501,20),n=f(n,r,i,a,t[13],2850285829,5),a=f(a,n,r,i,t[2],4243563512,9),i=f(i,a,n,r,t[7],1735328473,14),n=l(n,r=f(r,i,a,n,t[12],2368359562,20),i,a,t[5],4294588738,4),a=l(a,n,r,i,t[8],2272392833,11),i=l(i,a,n,r,t[11],1839030562,16),r=l(r,i,a,n,t[14],4259657740,23),n=l(n,r,i,a,t[1],2763975236,4),a=l(a,n,r,i,t[4],1272893353,11),i=l(i,a,n,r,t[7],4139469664,16),r=l(r,i,a,n,t[10],3200236656,23),n=l(n,r,i,a,t[13],681279174,4),a=l(a,n,r,i,t[0],3936430074,11),i=l(i,a,n,r,t[3],3572445317,16),r=l(r,i,a,n,t[6],76029189,23),n=l(n,r,i,a,t[9],3654602809,4),a=l(a,n,r,i,t[12],3873151461,11),i=l(i,a,n,r,t[15],530742520,16),n=h(n,r=l(r,i,a,n,t[2],3299628645,23),i,a,t[0],4096336452,6),a=h(a,n,r,i,t[7],1126891415,10),i=h(i,a,n,r,t[14],2878612391,15),r=h(r,i,a,n,t[5],4237533241,21),n=h(n,r,i,a,t[12],1700485571,6),a=h(a,n,r,i,t[3],2399980690,10),i=h(i,a,n,r,t[10],4293915773,15),r=h(r,i,a,n,t[1],2240044497,21),n=h(n,r,i,a,t[8],1873313359,6),a=h(a,n,r,i,t[15],4264355552,10),i=h(i,a,n,r,t[6],2734768916,15),r=h(r,i,a,n,t[13],1309151649,21),n=h(n,r,i,a,t[4],4149444226,6),a=h(a,n,r,i,t[11],3174756917,10),i=h(i,a,n,r,t[2],718787259,15),r=h(r,i,a,n,t[9],3951481745,21),this._a=this._a+n|0,this._b=this._b+r|0,this._c=this._c+i|0,this._d=this._d+a|0},s.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=a.allocUnsafe(16);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t},t.exports=s},function(t,e,n){t.exports=i;var r=n(113).EventEmitter;function i(){r.call(this)}n(2)(i,r),i.Readable=n(114),i.Writable=n(430),i.Duplex=n(431),i.Transform=n(432),i.PassThrough=n(433),i.Stream=i,i.prototype.pipe=function(t,e){var n=this;function i(e){t.writable&&!1===t.write(e)&&n.pause&&n.pause()}function a(){n.readable&&n.resume&&n.resume()}n.on(\"data\",i),t.on(\"drain\",a),t._isStdio||e&&!1===e.end||(n.on(\"end\",s),n.on(\"close\",u));var o=!1;function s(){o||(o=!0,t.end())}function u(){o||(o=!0,\"function\"==typeof t.destroy&&t.destroy())}function c(t){if(f(),0===r.listenerCount(this,\"error\"))throw t}function f(){n.removeListener(\"data\",i),t.removeListener(\"drain\",a),n.removeListener(\"end\",s),n.removeListener(\"close\",u),n.removeListener(\"error\",c),t.removeListener(\"error\",c),n.removeListener(\"end\",f),n.removeListener(\"close\",f),t.removeListener(\"close\",f)}return n.on(\"error\",c),t.on(\"error\",c),n.on(\"end\",f),n.on(\"close\",f),t.on(\"close\",f),t.emit(\"pipe\",n),t}},function(t,e,n){\"use strict\";var r,i=\"object\"==typeof Reflect?Reflect:null,a=i&&\"function\"==typeof i.apply?i.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};r=i&&\"function\"==typeof i.ownKeys?i.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var o=Number.isNaN||function(t){return t!=t};function s(){s.init.call(this)}t.exports=s,s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var u=10;function c(t){return void 0===t._maxListeners?s.defaultMaxListeners:t._maxListeners}function f(t,e,n,r){var i,a,o,s;if(\"function\"!=typeof n)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof n);if(void 0===(a=t._events)?(a=t._events=Object.create(null),t._eventsCount=0):(void 0!==a.newListener&&(t.emit(\"newListener\",e,n.listener?n.listener:n),a=t._events),o=a[e]),void 0===o)o=a[e]=n,++t._eventsCount;else if(\"function\"==typeof o?o=a[e]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(i=c(t))>0&&o.length>i&&!o.warned){o.warned=!0;var u=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\" \"+String(e)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");u.name=\"MaxListenersExceededWarning\",u.emitter=t,u.type=e,u.count=o.length,s=u,console&&console.warn&&console.warn(s)}return t}function l(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,a(this.listener,this.target,t))}function h(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},i=l.bind(r);return i.listener=n,r.wrapFn=i,i}function d(t,e,n){var r=t._events;if(void 0===r)return[];var i=r[e];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(i):g(i,i.length)}function p(t){var e=this._events;if(void 0!==e){var n=e[t];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function g(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}Object.defineProperty(s,\"defaultMaxListeners\",{enumerable:!0,get:function(){return u},set:function(t){if(\"number\"!=typeof t||t<0||o(t))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+t+\".\");u=t}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(t){if(\"number\"!=typeof t||t<0||o(t))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+t+\".\");return this._maxListeners=t,this},s.prototype.getMaxListeners=function(){return c(this)},s.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r=\"error\"===t,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var s=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw s.context=o,s}var u=i[t];if(void 0===u)return!1;if(\"function\"==typeof u)a(u,this,e);else{var c=u.length,f=g(u,c);for(n=0;n<c;++n)a(f[n],this,e)}return!0},s.prototype.addListener=function(t,e){return f(this,t,e,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(t,e){return f(this,t,e,!0)},s.prototype.once=function(t,e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e);return this.on(t,h(this,t,e)),this},s.prototype.prependOnceListener=function(t,e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e);return this.prependListener(t,h(this,t,e)),this},s.prototype.removeListener=function(t,e){var n,r,i,a,o;if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e);if(void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit(\"removeListener\",t,n.listener||e));else if(\"function\"!=typeof n){for(i=-1,a=n.length-1;a>=0;a--)if(n[a]===e||n[a].listener===e){o=n[a].listener,i=a;break}if(i<0)return this;0===i?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,i),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",t,o||e)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var i,a=Object.keys(n);for(r=0;r<a.length;++r)\"removeListener\"!==(i=a[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},s.prototype.listeners=function(t){return d(this,t,!0)},s.prototype.rawListeners=function(t){return d(this,t,!1)},s.listenerCount=function(t,e){return\"function\"==typeof t.listenerCount?t.listenerCount(e):p.call(t,e)},s.prototype.listenerCount=p,s.prototype.eventNames=function(){return this._eventsCount>0?r(this._events):[]}},function(t,e,n){(e=t.exports=n(193)).Stream=e,e.Readable=e,e.Writable=n(116),e.Duplex=n(35),e.Transform=n(196),e.PassThrough=n(429)},function(t,e,n){var r=n(8),i=r.Buffer;function a(t,e){for(var n in t)e[n]=t[n]}function o(t,e,n){return i(t,e,n)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=r:(a(r,e),e.Buffer=o),a(i,o),o.from=function(t,e,n){if(\"number\"==typeof t)throw new TypeError(\"Argument must not be a number\");return i(t,e,n)},o.alloc=function(t,e,n){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");var r=i(t);return void 0!==e?\"string\"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r},o.allocUnsafe=function(t){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");return i(t)},o.allocUnsafeSlow=function(t){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");return r.SlowBuffer(t)}},function(t,e,n){\"use strict\";(function(e,r,i){var a=n(78);function o(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,n){var r=t.entry;t.entry=null;for(;r;){var i=r.callback;e.pendingcb--,i(n),r=r.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}(e,t)}}t.exports=v;var s,u=!e.browser&&[\"v0.10\",\"v0.9.\"].indexOf(e.version.slice(0,5))>-1?r:a.nextTick;v.WritableState=b;var c=n(54);c.inherits=n(2);var f={deprecate:n(428)},l=n(194),h=n(115).Buffer,d=i.Uint8Array||function(){};var p,g=n(195);function y(){}function b(t,e){s=s||n(35),t=t||{};var r=e instanceof s;this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var i=t.highWaterMark,c=t.writableHighWaterMark,f=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(c||0===c)?c:f,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var l=!1===t.decodeStrings;this.decodeStrings=!l,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var n=t._writableState,r=n.sync,i=n.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(n),e)!function(t,e,n,r,i){--e.pendingcb,n?(a.nextTick(i,r),a.nextTick(E,t,e),t._writableState.errorEmitted=!0,t.emit(\"error\",r)):(i(r),t._writableState.errorEmitted=!0,t.emit(\"error\",r),E(t,e))}(t,n,r,e,i);else{var o=x(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||w(t,n),r?u(_,t,n,o,i):_(t,n,o,i)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function v(t){if(s=s||n(35),!(p.call(v,this)||this instanceof s))return new v(t);this._writableState=new b(t,this),this.writable=!0,t&&(\"function\"==typeof t.write&&(this._write=t.write),\"function\"==typeof t.writev&&(this._writev=t.writev),\"function\"==typeof t.destroy&&(this._destroy=t.destroy),\"function\"==typeof t.final&&(this._final=t.final)),l.call(this)}function m(t,e,n,r,i,a,o){e.writelen=r,e.writecb=o,e.writing=!0,e.sync=!0,n?t._writev(i,e.onwrite):t._write(i,a,e.onwrite),e.sync=!1}function _(t,e,n,r){n||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit(\"drain\"))}(t,e),e.pendingcb--,r(),E(t,e)}function w(t,e){e.bufferProcessing=!0;var n=e.bufferedRequest;if(t._writev&&n&&n.next){var r=e.bufferedRequestCount,i=new Array(r),a=e.corkedRequestsFree;a.entry=n;for(var s=0,u=!0;n;)i[s]=n,n.isBuf||(u=!1),n=n.next,s+=1;i.allBuffers=u,m(t,e,!0,e.length,i,\"\",a.finish),e.pendingcb++,e.lastBufferedRequest=null,a.next?(e.corkedRequestsFree=a.next,a.next=null):e.corkedRequestsFree=new o(e),e.bufferedRequestCount=0}else{for(;n;){var c=n.chunk,f=n.encoding,l=n.callback;if(m(t,e,!1,e.objectMode?1:c.length,c,f,l),n=n.next,e.bufferedRequestCount--,e.writing)break}null===n&&(e.lastBufferedRequest=null)}e.bufferedRequest=n,e.bufferProcessing=!1}function x(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function k(t,e){t._final((function(n){e.pendingcb--,n&&t.emit(\"error\",n),e.prefinished=!0,t.emit(\"prefinish\"),E(t,e)}))}function E(t,e){var n=x(e);return n&&(!function(t,e){e.prefinished||e.finalCalled||(\"function\"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,a.nextTick(k,t,e)):(e.prefinished=!0,t.emit(\"prefinish\")))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit(\"finish\"))),n}c.inherits(v,l),b.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(b.prototype,\"buffer\",{get:f.deprecate((function(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(t){}}(),\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(p=Function.prototype[Symbol.hasInstance],Object.defineProperty(v,Symbol.hasInstance,{value:function(t){return!!p.call(this,t)||this===v&&(t&&t._writableState instanceof b)}})):p=function(t){return t instanceof this},v.prototype.pipe=function(){this.emit(\"error\",new Error(\"Cannot pipe, not readable\"))},v.prototype.write=function(t,e,n){var r,i=this._writableState,o=!1,s=!i.objectMode&&(r=t,h.isBuffer(r)||r instanceof d);return s&&!h.isBuffer(t)&&(t=function(t){return h.from(t)}(t)),\"function\"==typeof e&&(n=e,e=null),s?e=\"buffer\":e||(e=i.defaultEncoding),\"function\"!=typeof n&&(n=y),i.ended?function(t,e){var n=new Error(\"write after end\");t.emit(\"error\",n),a.nextTick(e,n)}(this,n):(s||function(t,e,n,r){var i=!0,o=!1;return null===n?o=new TypeError(\"May not write null values to stream\"):\"string\"==typeof n||void 0===n||e.objectMode||(o=new TypeError(\"Invalid non-string/buffer chunk\")),o&&(t.emit(\"error\",o),a.nextTick(r,o),i=!1),i}(this,i,t,n))&&(i.pendingcb++,o=function(t,e,n,r,i,a){if(!n){var o=function(t,e,n){t.objectMode||!1===t.decodeStrings||\"string\"!=typeof e||(e=h.from(e,n));return e}(e,r,i);r!==o&&(n=!0,i=\"buffer\",r=o)}var s=e.objectMode?1:r.length;e.length+=s;var u=e.length<e.highWaterMark;u||(e.needDrain=!0);if(e.writing||e.corked){var c=e.lastBufferedRequest;e.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:a,next:null},c?c.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else m(t,e,!1,s,r,i,a);return u}(this,i,s,t,e,n)),o},v.prototype.cork=function(){this._writableState.corked++},v.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||w(this,t))},v.prototype.setDefaultEncoding=function(t){if(\"string\"==typeof t&&(t=t.toLowerCase()),!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((t+\"\").toLowerCase())>-1))throw new TypeError(\"Unknown encoding: \"+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(v.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),v.prototype._write=function(t,e,n){n(new Error(\"_write() is not implemented\"))},v.prototype._writev=null,v.prototype.end=function(t,e,n){var r=this._writableState;\"function\"==typeof t?(n=t,t=null,e=null):\"function\"==typeof e&&(n=e,e=null),null!=t&&this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||function(t,e,n){e.ending=!0,E(t,e),n&&(e.finished?a.nextTick(n):t.once(\"finish\",n));e.ended=!0,t.writable=!1}(this,r,n)},Object.defineProperty(v.prototype,\"destroyed\",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),v.prototype.destroy=g.destroy,v.prototype._undestroy=g.undestroy,v.prototype._destroy=function(t,e){this.end(),e(t)}}).call(this,n(7),n(426).setImmediate,n(12))},function(t,e,n){\"use strict\";var r=n(3).Buffer,i=r.isEncoding||function(t){switch((t=\"\"+t)&&t.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1}};function a(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return\"utf8\";for(var e;;)switch(t){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return t;default:if(e)return;t=(\"\"+t).toLowerCase(),e=!0}}(t);if(\"string\"!=typeof e&&(r.isEncoding===i||!i(t)))throw new Error(\"Unknown encoding: \"+t);return e||t}(t),this.encoding){case\"utf16le\":this.text=u,this.end=c,e=4;break;case\"utf8\":this.fillLast=s,e=4;break;case\"base64\":this.text=f,this.end=l,e=3;break;default:return this.write=h,void(this.end=d)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(e)}function o(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t){var e=this.lastTotal-this.lastNeed,n=function(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,\"�\";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,\"�\";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,\"�\"}}(this,t);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var n=t.toString(\"utf16le\",e);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString(\"utf16le\",e,t.length-1)}function c(t){var e=t&&t.length?this.write(t):\"\";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString(\"utf16le\",0,n)}return e}function f(t,e){var n=(t.length-e)%3;return 0===n?t.toString(\"base64\",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString(\"base64\",e,t.length-n))}function l(t){var e=t&&t.length?this.write(t):\"\";return this.lastNeed?e+this.lastChar.toString(\"base64\",0,3-this.lastNeed):e}function h(t){return t.toString(this.encoding)}function d(t){return t&&t.length?this.write(t):\"\"}e.StringDecoder=a,a.prototype.write=function(t){if(0===t.length)return\"\";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return\"\";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||\"\"},a.prototype.end=function(t){var e=t&&t.length?this.write(t):\"\";return this.lastNeed?e+\"�\":e},a.prototype.text=function(t,e){var n=function(t,e,n){var r=e.length-1;if(r<n)return 0;var i=o(e[r]);if(i>=0)return i>0&&(t.lastNeed=i-1),i;if(--r<n||-2===i)return 0;if((i=o(e[r]))>=0)return i>0&&(t.lastNeed=i-2),i;if(--r<n||-2===i)return 0;if((i=o(e[r]))>=0)return i>0&&(2===i?i=0:t.lastNeed=i-3),i;return 0}(this,t,e);if(!this.lastNeed)return t.toString(\"utf8\",e);this.lastTotal=n;var r=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,r),t.toString(\"utf8\",e,r)},a.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,n){\"use strict\";var r=n(8).Buffer,i=n(2),a=n(192),o=new Array(16),s=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],u=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],c=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],f=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],l=[0,1518500249,1859775393,2400959708,2840853838],h=[1352829926,1548603684,1836072691,2053994217,0];function d(){a.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function p(t,e){return t<<e|t>>>32-e}function g(t,e,n,r,i,a,o,s){return p(t+(e^n^r)+a+o|0,s)+i|0}function y(t,e,n,r,i,a,o,s){return p(t+(e&n|~e&r)+a+o|0,s)+i|0}function b(t,e,n,r,i,a,o,s){return p(t+((e|~n)^r)+a+o|0,s)+i|0}function v(t,e,n,r,i,a,o,s){return p(t+(e&r|n&~r)+a+o|0,s)+i|0}function m(t,e,n,r,i,a,o,s){return p(t+(e^(n|~r))+a+o|0,s)+i|0}i(d,a),d.prototype._update=function(){for(var t=o,e=0;e<16;++e)t[e]=this._block.readInt32LE(4*e);for(var n=0|this._a,r=0|this._b,i=0|this._c,a=0|this._d,d=0|this._e,_=0|this._a,w=0|this._b,x=0|this._c,k=0|this._d,E=0|this._e,A=0;A<80;A+=1){var S,M;A<16?(S=g(n,r,i,a,d,t[s[A]],l[0],c[A]),M=m(_,w,x,k,E,t[u[A]],h[0],f[A])):A<32?(S=y(n,r,i,a,d,t[s[A]],l[1],c[A]),M=v(_,w,x,k,E,t[u[A]],h[1],f[A])):A<48?(S=b(n,r,i,a,d,t[s[A]],l[2],c[A]),M=b(_,w,x,k,E,t[u[A]],h[2],f[A])):A<64?(S=v(n,r,i,a,d,t[s[A]],l[3],c[A]),M=y(_,w,x,k,E,t[u[A]],h[3],f[A])):(S=m(n,r,i,a,d,t[s[A]],l[4],c[A]),M=g(_,w,x,k,E,t[u[A]],h[4],f[A])),n=d,d=a,a=p(i,10),i=r,r=S,_=E,E=k,k=p(x,10),x=w,w=M}var T=this._b+i+k|0;this._b=this._c+a+E|0,this._c=this._d+d+_|0,this._d=this._e+n+w|0,this._e=this._a+r+x|0,this._a=T},d.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var t=r.alloc?r.alloc(20):new r(20);return t.writeInt32LE(this._a,0),t.writeInt32LE(this._b,4),t.writeInt32LE(this._c,8),t.writeInt32LE(this._d,12),t.writeInt32LE(this._e,16),t},t.exports=d},function(t,e,n){(e=t.exports=function(t){t=t.toLowerCase();var n=e[t];if(!n)throw new Error(t+\" is not supported (we accept pull requests)\");return new n}).sha=n(434),e.sha1=n(435),e.sha224=n(436),e.sha256=n(197),e.sha384=n(437),e.sha512=n(198)},function(t,e,n){\"use strict\";var r=n(16);function i(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=new Array(this.blockSize),this.bufferOff=0}t.exports=i,i.prototype._init=function(){},i.prototype.update=function(t){return 0===t.length?[]:\"decrypt\"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},i.prototype._buffer=function(t,e){for(var n=Math.min(this.buffer.length-this.bufferOff,t.length-e),r=0;r<n;r++)this.buffer[this.bufferOff+r]=t[e+r];return this.bufferOff+=n,n},i.prototype._flushBuffer=function(t,e){return this._update(this.buffer,0,t,e),this.bufferOff=0,this.blockSize},i.prototype._updateEncrypt=function(t){var e=0,n=0,r=(this.bufferOff+t.length)/this.blockSize|0,i=new Array(r*this.blockSize);0!==this.bufferOff&&(e+=this._buffer(t,e),this.bufferOff===this.buffer.length&&(n+=this._flushBuffer(i,n)));for(var a=t.length-(t.length-e)%this.blockSize;e<a;e+=this.blockSize)this._update(t,e,i,n),n+=this.blockSize;for(;e<t.length;e++,this.bufferOff++)this.buffer[this.bufferOff]=t[e];return i},i.prototype._updateDecrypt=function(t){for(var e=0,n=0,r=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,i=new Array(r*this.blockSize);r>0;r--)e+=this._buffer(t,e),n+=this._flushBuffer(i,n);return e+=this._buffer(t,e),i},i.prototype.final=function(t){var e,n;return t&&(e=this.update(t)),n=\"encrypt\"===this.type?this._finalEncrypt():this._finalDecrypt(),e?e.concat(n):n},i.prototype._pad=function(t,e){if(0===e)return!1;for(;e<t.length;)t[e++]=0;return!0},i.prototype._finalEncrypt=function(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=new Array(this.blockSize);return this._update(this.buffer,0,t,0),t},i.prototype._unpad=function(t){return t},i.prototype._finalDecrypt=function(){r.equal(this.bufferOff,this.blockSize,\"Not enough data to decrypt\");var t=new Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}},function(t,e,n){var r=n(446),i=n(454),a=n(210);e.createCipher=e.Cipher=r.createCipher,e.createCipheriv=e.Cipheriv=r.createCipheriv,e.createDecipher=e.Decipher=i.createDecipher,e.createDecipheriv=e.Decipheriv=i.createDecipheriv,e.listCiphers=e.getCiphers=function(){return Object.keys(a)}},function(t,e,n){var r={ECB:n(447),CBC:n(448),CFB:n(449),CFB8:n(450),CFB1:n(451),OFB:n(452),CTR:n(208),GCM:n(208)},i=n(210);for(var a in i)i[a].module=r[i[a].mode];t.exports=i},function(t,e,n){var r;function i(t){this.rand=t}if(t.exports=function(t){return r||(r=new i(null)),r.generate(t)},t.exports.Rand=i,i.prototype.generate=function(t){return this._rand(t)},i.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var e=new Uint8Array(t),n=0;n<e.length;n++)e[n]=this.rand.getByte();return e},\"object\"==typeof self)self.crypto&&self.crypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.crypto.getRandomValues(e),e}:self.msCrypto&&self.msCrypto.getRandomValues?i.prototype._rand=function(t){var e=new Uint8Array(t);return self.msCrypto.getRandomValues(e),e}:\"object\"==typeof window&&(i.prototype._rand=function(){throw new Error(\"Not implemented yet\")});else try{var a=n(458);if(\"function\"!=typeof a.randomBytes)throw new Error(\"Not supported\");i.prototype._rand=function(t){return a.randomBytes(t)}}catch(t){}},function(t,e,n){(function(e){var r=n(5),i=n(44);function a(t,n){var i=function(t){var e=o(t);return{blinder:e.toRed(r.mont(t.modulus)).redPow(new r(t.publicExponent)).fromRed(),unblinder:e.invm(t.modulus)}}(n),a=n.modulus.byteLength(),s=(r.mont(n.modulus),new r(t).mul(i.blinder).umod(n.modulus)),u=s.toRed(r.mont(n.prime1)),c=s.toRed(r.mont(n.prime2)),f=n.coefficient,l=n.prime1,h=n.prime2,d=u.redPow(n.exponent1),p=c.redPow(n.exponent2);d=d.fromRed(),p=p.fromRed();var g=d.isub(p).imul(f).umod(l);return g.imul(h),p.iadd(g),new e(p.imul(i.unblinder).umod(n.modulus).toArray(!1,a))}function o(t){for(var e=t.modulus.byteLength(),n=new r(i(e));n.cmp(t.modulus)>=0||!n.umod(t.prime1)||!n.umod(t.prime2);)n=new r(i(e));return n}t.exports=a,a.getr=o}).call(this,n(8).Buffer)},function(t,e,n){\"use strict\";var r=e;r.version=n(463).version,r.utils=n(17),r.rand=n(123),r.curve=n(216),r.curves=n(126),r.ec=n(474),r.eddsa=n(478)},function(t,e,n){\"use strict\";var r,i=e,a=n(127),o=n(216),s=n(17).assert;function u(t){\"short\"===t.type?this.curve=new o.short(t):\"edwards\"===t.type?this.curve=new o.edwards(t):this.curve=new o.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,s(this.g.validate(),\"Invalid curve\"),s(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}function c(t,e){Object.defineProperty(i,t,{configurable:!0,enumerable:!0,get:function(){var n=new u(e);return Object.defineProperty(i,t,{configurable:!0,enumerable:!0,value:n}),n}})}i.PresetCurve=u,c(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:a.sha256,gRed:!1,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]}),c(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:a.sha256,gRed:!1,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]}),c(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:a.sha256,gRed:!1,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]}),c(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:a.sha384,gRed:!1,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]}),c(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:a.sha512,gRed:!1,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"]}),c(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:a.sha256,gRed:!1,g:[\"9\"]}),c(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:a.sha256,gRed:!1,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});try{r=n(473)}catch(t){r=void 0}c(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:a.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:!1,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",r]})},function(t,e,n){var r=e;r.utils=n(21),r.common=n(56),r.sha=n(467),r.ripemd=n(471),r.hmac=n(472),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160},function(t,e,n){var r=n(15);t.exports=function(t,e){var n=t.append(\"foreignObject\").attr(\"width\",\"100000\"),i=n.append(\"xhtml:div\");i.attr(\"xmlns\",\"http://www.w3.org/1999/xhtml\");var a=e.label;switch(typeof a){case\"function\":i.insert(a);break;case\"object\":i.insert((function(){return a}));break;default:i.html(a)}r.applyStyle(i,e.labelStyle),i.style(\"display\",\"inline-block\"),i.style(\"white-space\",\"nowrap\");var o=i.node().getBoundingClientRect();return n.attr(\"width\",o.width).attr(\"height\",o.height),n}},function(t,e){},function(t,e,n){var r=n(61),i=n(92),a=n(66),o=n(266),s=n(272),u=n(136),c=n(137),f=n(275),l=n(276),h=n(141),d=n(277),p=n(41),g=n(281),y=n(282),b=n(146),v=n(6),m=n(39),_=n(286),w=n(14),x=n(288),k=n(27),E=1,A=2,S=4,M=\"[object Arguments]\",T=\"[object Function]\",D=\"[object GeneratorFunction]\",C=\"[object Object]\",N={};N[M]=N[\"[object Array]\"]=N[\"[object ArrayBuffer]\"]=N[\"[object DataView]\"]=N[\"[object Boolean]\"]=N[\"[object Date]\"]=N[\"[object Float32Array]\"]=N[\"[object Float64Array]\"]=N[\"[object Int8Array]\"]=N[\"[object Int16Array]\"]=N[\"[object Int32Array]\"]=N[\"[object Map]\"]=N[\"[object Number]\"]=N[C]=N[\"[object RegExp]\"]=N[\"[object Set]\"]=N[\"[object String]\"]=N[\"[object Symbol]\"]=N[\"[object Uint8Array]\"]=N[\"[object Uint8ClampedArray]\"]=N[\"[object Uint16Array]\"]=N[\"[object Uint32Array]\"]=!0,N[\"[object Error]\"]=N[T]=N[\"[object WeakMap]\"]=!1,t.exports=function t(e,n,I,L,B,O){var R,P=n&E,F=n&A,q=n&S;if(I&&(R=B?I(e,L,B,O):I(e)),void 0!==R)return R;if(!w(e))return e;var j=v(e);if(j){if(R=g(e),!P)return c(e,R)}else{var U=p(e),z=U==T||U==D;if(m(e))return u(e,P);if(U==C||U==M||z&&!B){if(R=F||z?{}:b(e),!P)return F?l(e,s(R,e)):f(e,o(R,e))}else{if(!N[U])return B?e:{};R=y(e,U,P)}}O||(O=new r);var Y=O.get(e);if(Y)return Y;O.set(e,R),x(e)?e.forEach((function(r){R.add(t(r,n,I,r,e,O))})):_(e)&&e.forEach((function(r,i){R.set(i,t(r,n,I,i,e,O))}));var V=q?F?d:h:F?keysIn:k,H=j?void 0:V(e);return i(H||e,(function(r,i){H&&(r=e[i=r]),a(R,i,t(r,n,I,i,e,O))})),R}},function(t,e,n){(function(e){var n=\"object\"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(this,n(12))},function(t,e){var n=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return n.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}},function(t,e,n){var r=n(32),i=function(){try{var t=r(Object,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}();t.exports=i},function(t,e,n){var r=n(267),i=n(50),a=n(6),o=n(39),s=n(68),u=n(51),c=Object.prototype.hasOwnProperty;t.exports=function(t,e){var n=a(t),f=!n&&i(t),l=!n&&!f&&o(t),h=!n&&!f&&!l&&u(t),d=n||f||l||h,p=d?r(t.length,String):[],g=p.length;for(var y in t)!e&&!c.call(t,y)||d&&(\"length\"==y||l&&(\"offset\"==y||\"parent\"==y)||h&&(\"buffer\"==y||\"byteLength\"==y||\"byteOffset\"==y)||s(y,g))||p.push(y);return p}},function(t,e){t.exports=function(t,e){return function(n){return t(e(n))}}},function(t,e,n){(function(t){var r=n(18),i=e&&!e.nodeType&&e,a=i&&\"object\"==typeof t&&t&&!t.nodeType&&t,o=a&&a.exports===i?r.Buffer:void 0,s=o?o.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var n=t.length,r=s?s(n):new t.constructor(n);return t.copy(r),r}}).call(this,n(9)(t))},function(t,e){t.exports=function(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,i=0,a=[];++n<r;){var o=t[n];e(o,n,t)&&(a[i++]=o)}return a}},function(t,e){t.exports=function(){return[]}},function(t,e,n){var r=n(97),i=n(71),a=n(96),o=n(139),s=Object.getOwnPropertySymbols?function(t){for(var e=[];t;)r(e,a(t)),t=i(t);return e}:o;t.exports=s},function(t,e,n){var r=n(142),i=n(96),a=n(27);t.exports=function(t){return r(t,a,i)}},function(t,e,n){var r=n(97),i=n(6);t.exports=function(t,e,n){var a=e(t);return i(t)?a:r(a,n(t))}},function(t,e,n){var r=n(32)(n(18),\"Set\");t.exports=r},function(t,e,n){var r=n(18).Uint8Array;t.exports=r},function(t,e,n){var r=n(98);t.exports=function(t,e){var n=e?r(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}},function(t,e,n){var r=n(147),i=n(71),a=n(70);t.exports=function(t){return\"function\"!=typeof t.constructor||a(t)?{}:r(i(t))}},function(t,e,n){var r=n(14),i=Object.create,a=function(){function t(){}return function(e){if(!r(e))return{};if(i)return i(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}();t.exports=a},function(t,e,n){var r=n(92),i=n(72),a=n(149),o=n(6);t.exports=function(t,e){return(o(t)?r:i)(t,a(e))}},function(t,e,n){var r=n(34);t.exports=function(t){return\"function\"==typeof t?t:r}},function(t,e,n){var r=n(138),i=n(292),a=n(24),o=n(6);t.exports=function(t,e){return(o(t)?r:i)(t,a(e,3))}},function(t,e,n){var r=n(295),i=n(20);t.exports=function t(e,n,a,o,s){return e===n||(null==e||null==n||!i(e)&&!i(n)?e!=e&&n!=n:r(e,n,a,o,t,s))}},function(t,e,n){var r=n(153),i=n(298),a=n(154),o=1,s=2;t.exports=function(t,e,n,u,c,f){var l=n&o,h=t.length,d=e.length;if(h!=d&&!(l&&d>h))return!1;var p=f.get(t);if(p&&f.get(e))return p==e;var g=-1,y=!0,b=n&s?new r:void 0;for(f.set(t,e),f.set(e,t);++g<h;){var v=t[g],m=e[g];if(u)var _=l?u(m,v,g,e,t,f):u(v,m,g,t,e,f);if(void 0!==_){if(_)continue;y=!1;break}if(b){if(!i(e,(function(t,e){if(!a(b,e)&&(v===t||c(v,t,n,u,f)))return b.push(e)}))){y=!1;break}}else if(v!==m&&!c(v,m,n,u,f)){y=!1;break}}return f.delete(t),f.delete(e),y}},function(t,e,n){var r=n(91),i=n(296),a=n(297);function o(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new r;++e<n;)this.add(t[e])}o.prototype.add=o.prototype.push=i,o.prototype.has=a,t.exports=o},function(t,e){t.exports=function(t,e){return t.has(e)}},function(t,e,n){var r=n(14);t.exports=function(t){return t==t&&!r(t)}},function(t,e){t.exports=function(t,e){return function(n){return null!=n&&(n[t]===e&&(void 0!==e||t in Object(n)))}}},function(t,e,n){var r=n(308);t.exports=function(t){return null==t?\"\":r(t)}},function(t,e,n){var r=n(309),i=n(159);t.exports=function(t,e){return null!=t&&i(t,e,r)}},function(t,e,n){var r=n(73),i=n(50),a=n(6),o=n(68),s=n(93),u=n(52);t.exports=function(t,e,n){for(var c=-1,f=(e=r(e,t)).length,l=!1;++c<f;){var h=u(e[c]);if(!(l=null!=t&&n(t,h)))break;t=t[h]}return l||++c!=f?l:!!(f=null==t?0:t.length)&&s(f)&&o(h,f)&&(a(t)||i(t))}},function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},function(t,e){t.exports=function(t){return void 0===t}},function(t,e,n){var r=n(74),i=n(24),a=n(163),o=n(6);t.exports=function(t,e){return(o(t)?r:a)(t,i(e,3))}},function(t,e,n){var r=n(72),i=n(23);t.exports=function(t,e){var n=-1,a=i(t)?Array(t.length):[];return r(t,(function(t,r,i){a[++n]=e(t,r,i)})),a}},function(t,e,n){var r=n(314),i=n(72),a=n(24),o=n(315),s=n(6);t.exports=function(t,e,n){var u=s(t)?r:o,c=arguments.length<3;return u(t,a(e,4),n,c,i)}},function(t,e,n){var r=n(325),i=Math.max;t.exports=function(t,e,n){return e=i(void 0===e?t.length-1:e,0),function(){for(var a=arguments,o=-1,s=i(a.length-e,0),u=Array(s);++o<s;)u[o]=a[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=a[o];return c[e]=n(u),r(t,this,c)}}},function(t,e,n){var r=n(326),i=n(327)(r);t.exports=i},function(t,e){t.exports=function(t,e,n,r){for(var i=t.length,a=n+(r?1:-1);r?a--:++a<i;)if(e(t[a],a,t))return a;return-1}},function(t,e,n){var r=n(23),i=n(20);t.exports=function(t){return i(t)&&r(t)}},function(t,e,n){var r=n(336),i=n(27);t.exports=function(t){return null==t?[]:r(t,i(t))}},function(t,e,n){var r=n(13),i=n(171);t.exports=function(t,e,n,r){return function(t,e,n,r){var a,o,s={},u=new i,c=function(t){var e=t.v!==a?t.v:t.w,r=s[e],i=n(t),c=o.distance+i;if(i<0)throw new Error(\"dijkstra does not allow negative edge weights. Bad edge: \"+t+\" Weight: \"+i);c<r.distance&&(r.distance=c,r.predecessor=a,u.decrease(e,c))};t.nodes().forEach((function(t){var n=t===e?0:Number.POSITIVE_INFINITY;s[t]={distance:n},u.add(t,n)}));for(;u.size()>0&&(a=u.removeMin(),(o=s[a]).distance!==Number.POSITIVE_INFINITY);)r(a).forEach(c);return s}(t,String(e),n||a,r||function(e){return t.outEdges(e)})};var a=r.constant(1)},function(t,e,n){var r=n(13);function i(){this._arr=[],this._keyIndices={}}t.exports=i,i.prototype.size=function(){return this._arr.length},i.prototype.keys=function(){return this._arr.map((function(t){return t.key}))},i.prototype.has=function(t){return r.has(this._keyIndices,t)},i.prototype.priority=function(t){var e=this._keyIndices[t];if(void 0!==e)return this._arr[e].priority},i.prototype.min=function(){if(0===this.size())throw new Error(\"Queue underflow\");return this._arr[0].key},i.prototype.add=function(t,e){var n=this._keyIndices;if(t=String(t),!r.has(n,t)){var i=this._arr,a=i.length;return n[t]=a,i.push({key:t,priority:e}),this._decrease(a),!0}return!1},i.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var t=this._arr.pop();return delete this._keyIndices[t.key],this._heapify(0),t.key},i.prototype.decrease=function(t,e){var n=this._keyIndices[t];if(e>this._arr[n].priority)throw new Error(\"New priority is greater than current priority. Key: \"+t+\" Old: \"+this._arr[n].priority+\" New: \"+e);this._arr[n].priority=e,this._decrease(n)},i.prototype._heapify=function(t){var e=this._arr,n=2*t,r=n+1,i=t;n<e.length&&(i=e[n].priority<e[i].priority?n:i,r<e.length&&(i=e[r].priority<e[i].priority?r:i),i!==t&&(this._swap(t,i),this._heapify(i)))},i.prototype._decrease=function(t){for(var e,n=this._arr,r=n[t].priority;0!==t&&!(n[e=t>>1].priority<r);)this._swap(t,e),t=e},i.prototype._swap=function(t,e){var n=this._arr,r=this._keyIndices,i=n[t],a=n[e];n[t]=a,n[e]=i,r[a.key]=t,r[i.key]=e}},function(t,e,n){var r=n(13);t.exports=function(t){var e=0,n=[],i={},a=[];return t.nodes().forEach((function(o){r.has(i,o)||function o(s){var u=i[s]={onStack:!0,lowlink:e,index:e++};if(n.push(s),t.successors(s).forEach((function(t){r.has(i,t)?i[t].onStack&&(u.lowlink=Math.min(u.lowlink,i[t].index)):(o(t),u.lowlink=Math.min(u.lowlink,i[t].lowlink))})),u.lowlink===u.index){var c,f=[];do{c=n.pop(),i[c].onStack=!1,f.push(c)}while(s!==c);a.push(f)}}(o)})),a}},function(t,e,n){var r=n(13);function i(t){var e={},n={},i=[];if(r.each(t.sinks(),(function o(s){if(r.has(n,s))throw new a;r.has(e,s)||(n[s]=!0,e[s]=!0,r.each(t.predecessors(s),o),delete n[s],i.push(s))})),r.size(e)!==t.nodeCount())throw new a;return i}function a(){}t.exports=i,i.CycleException=a,a.prototype=new Error},function(t,e,n){var r=n(13);t.exports=function(t,e,n){r.isArray(e)||(e=[e]);var i=(t.isDirected()?t.successors:t.neighbors).bind(t),a=[],o={};return r.each(e,(function(e){if(!t.hasNode(e))throw new Error(\"Graph does not have node: \"+e);!function t(e,n,i,a,o,s){r.has(a,n)||(a[n]=!0,i||s.push(n),r.each(o(n),(function(n){t(e,n,i,a,o,s)})),i&&s.push(n))}(t,e,\"post\"===n,o,i,a)})),a}},function(t,e,n){var r;try{r=n(59)}catch(t){}r||(r=window.dagre),t.exports=r},function(t,e,n){var r=n(75),i=n(36),a=n(76),o=n(40),s=Object.prototype,u=s.hasOwnProperty,c=r((function(t,e){t=Object(t);var n=-1,r=e.length,c=r>2?e[2]:void 0;for(c&&a(e[0],e[1],c)&&(r=1);++n<r;)for(var f=e[n],l=o(f),h=-1,d=l.length;++h<d;){var p=l[h],g=t[p];(void 0===g||i(g,s[p])&&!u.call(t,p))&&(t[p]=f[p])}return t}));t.exports=c},function(t,e,n){var r=n(355),i=1/0,a=17976931348623157e292;t.exports=function(t){return t?(t=r(t))===i||t===-i?(t<0?-1:1)*a:t==t?t:0:0===t?t:0}},function(t,e,n){var r=n(107);t.exports=function(t){return(null==t?0:t.length)?r(t,1):[]}},function(t,e,n){var r=n(67),i=n(36);t.exports=function(t,e,n){(void 0===n||i(t[e],n))&&(void 0!==n||e in t)||r(t,e,n)}},function(t,e,n){var r=n(33),i=n(71),a=n(20),o=\"[object Object]\",s=Function.prototype,u=Object.prototype,c=s.toString,f=u.hasOwnProperty,l=c.call(Object);t.exports=function(t){if(!a(t)||r(t)!=o)return!1;var e=i(t);if(null===e)return!0;var n=f.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&c.call(n)==l}},function(t,e){t.exports=function(t,e){if((\"constructor\"!==e||\"function\"!=typeof t[e])&&\"__proto__\"!=e)return t[e]}},function(t,e){t.exports=function(t,e){return t<e}},function(t,e,n){var r=n(369),i=n(372)((function(t,e){return null==t?{}:r(t,e)}));t.exports=i},function(t,e,n){var r=n(373)();t.exports=r},function(t,e,n){var r=n(157),i=0;t.exports=function(t){var e=++i;return r(t)+e}},function(t,e,n){\"use strict\";var r=n(4),i=n(19).Graph,a=n(77).slack;function o(t,e){return r.forEach(t.nodes(),(function n(i){r.forEach(e.nodeEdges(i),(function(r){var o=r.v,s=i===o?r.w:o;t.hasNode(s)||a(e,r)||(t.setNode(s,{}),t.setEdge(i,s,{}),n(s))}))})),t.nodeCount()}function s(t,e){return r.minBy(e.edges(),(function(n){if(t.hasNode(n.v)!==t.hasNode(n.w))return a(e,n)}))}function u(t,e,n){r.forEach(t.nodes(),(function(t){e.node(t).rank+=n}))}t.exports=function(t){var e,n,r=new i({directed:!1}),c=t.nodes()[0],f=t.nodeCount();r.setNode(c,{});for(;o(r,t)<f;)e=s(r,t),n=r.hasNode(e.v)?a(t,e):-a(t,e),u(r,t,n);return r}},function(t,e){t.exports=function(t,e){return t.intersect(e)}},function(t,e,n){var r=n(109);t.exports=function(t,e,n){return r(t,e,e,n)}},function(t,e,n){var r=n(406);t.exports=function(t,e,n){var i=t.x,a=t.y,o=[],s=Number.POSITIVE_INFINITY,u=Number.POSITIVE_INFINITY;e.forEach((function(t){s=Math.min(s,t.x),u=Math.min(u,t.y)}));for(var c=i-t.width/2-s,f=a-t.height/2-u,l=0;l<e.length;l++){var h=e[l],d=e[l<e.length-1?l+1:0],p=r(t,n,{x:c+h.x,y:f+h.y},{x:c+d.x,y:f+d.y});p&&o.push(p)}if(!o.length)return console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\",t),t;o.length>1&&o.sort((function(t,e){var r=t.x-n.x,i=t.y-n.y,a=Math.sqrt(r*r+i*i),o=e.x-n.x,s=e.y-n.y,u=Math.sqrt(o*o+s*s);return a<u?-1:a===u?0:1}));return o[0]}},function(t,e){t.exports=function(t,e){var n,r,i=t.x,a=t.y,o=e.x-i,s=e.y-a,u=t.width/2,c=t.height/2;Math.abs(s)*u>Math.abs(o)*c?(s<0&&(c=-c),n=0===s?0:c*o/s,r=c):(o<0&&(u=-u),n=u,r=0===o?0:u*s/o);return{x:i+n,y:a+r}}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},function(t,e,n){\"use strict\";var r=n(3).Buffer,i=n(112).Transform;function a(t){i.call(this),this._block=r.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}n(2)(a,i),a.prototype._transform=function(t,e,n){var r=null;try{this.update(t,e)}catch(t){r=t}n(r)},a.prototype._flush=function(t){var e=null;try{this.push(this.digest())}catch(t){e=t}t(e)},a.prototype.update=function(t,e){if(function(t,e){if(!r.isBuffer(t)&&\"string\"!=typeof t)throw new TypeError(e+\" must be a string or a buffer\")}(t,\"Data\"),this._finalized)throw new Error(\"Digest already called\");r.isBuffer(t)||(t=r.from(t,e));for(var n=this._block,i=0;this._blockOffset+t.length-i>=this._blockSize;){for(var a=this._blockOffset;a<this._blockSize;)n[a++]=t[i++];this._update(),this._blockOffset=0}for(;i<t.length;)n[this._blockOffset++]=t[i++];for(var o=0,s=8*t.length;s>0;++o)this._length[o]+=s,(s=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*s);return this},a.prototype._update=function(){throw new Error(\"_update is not implemented\")},a.prototype.digest=function(t){if(this._finalized)throw new Error(\"Digest already called\");this._finalized=!0;var e=this._digest();void 0!==t&&(e=e.toString(t)),this._block.fill(0),this._blockOffset=0;for(var n=0;n<4;++n)this._length[n]=0;return e},a.prototype._digest=function(){throw new Error(\"_digest is not implemented\")},t.exports=a},function(t,e,n){\"use strict\";(function(e,r){var i=n(78);t.exports=m;var a,o=n(191);m.ReadableState=v;n(113).EventEmitter;var s=function(t,e){return t.listeners(e).length},u=n(194),c=n(115).Buffer,f=e.Uint8Array||function(){};var l=n(54);l.inherits=n(2);var h=n(423),d=void 0;d=h&&h.debuglog?h.debuglog(\"stream\"):function(){};var p,g=n(424),y=n(195);l.inherits(m,u);var b=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function v(t,e){t=t||{};var r=e instanceof(a=a||n(35));this.objectMode=!!t.objectMode,r&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var i=t.highWaterMark,o=t.readableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(o||0===o)?o:s,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new g,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(p||(p=n(117).StringDecoder),this.decoder=new p(t.encoding),this.encoding=t.encoding)}function m(t){if(a=a||n(35),!(this instanceof m))return new m(t);this._readableState=new v(t,this),this.readable=!0,t&&(\"function\"==typeof t.read&&(this._read=t.read),\"function\"==typeof t.destroy&&(this._destroy=t.destroy)),u.call(this)}function _(t,e,n,r,i){var a,o=t._readableState;null===e?(o.reading=!1,function(t,e){if(e.ended)return;if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,E(t)}(t,o)):(i||(a=function(t,e){var n;r=e,c.isBuffer(r)||r instanceof f||\"string\"==typeof e||void 0===e||t.objectMode||(n=new TypeError(\"Invalid non-string/buffer chunk\"));var r;return n}(o,e)),a?t.emit(\"error\",a):o.objectMode||e&&e.length>0?(\"string\"==typeof e||o.objectMode||Object.getPrototypeOf(e)===c.prototype||(e=function(t){return c.from(t)}(e)),r?o.endEmitted?t.emit(\"error\",new Error(\"stream.unshift() after end event\")):w(t,o,e,!0):o.ended?t.emit(\"error\",new Error(\"stream.push() after EOF\")):(o.reading=!1,o.decoder&&!n?(e=o.decoder.write(e),o.objectMode||0!==e.length?w(t,o,e,!1):S(t,o)):w(t,o,e,!1))):r||(o.reading=!1));return function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(o)}function w(t,e,n,r){e.flowing&&0===e.length&&!e.sync?(t.emit(\"data\",n),t.read(0)):(e.length+=e.objectMode?1:n.length,r?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&E(t)),S(t,e)}Object.defineProperty(m.prototype,\"destroyed\",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),m.prototype.destroy=y.destroy,m.prototype._undestroy=y.undestroy,m.prototype._destroy=function(t,e){this.push(null),e(t)},m.prototype.push=function(t,e){var n,r=this._readableState;return r.objectMode?n=!0:\"string\"==typeof t&&((e=e||r.defaultEncoding)!==r.encoding&&(t=c.from(t,e),e=\"\"),n=!0),_(this,t,e,!1,n)},m.prototype.unshift=function(t){return _(this,t,null,!0,!1)},m.prototype.isPaused=function(){return!1===this._readableState.flowing},m.prototype.setEncoding=function(t){return p||(p=n(117).StringDecoder),this._readableState.decoder=new p(t),this._readableState.encoding=t,this};var x=8388608;function k(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=x?t=x:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function E(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(d(\"emitReadable\",e.flowing),e.emittedReadable=!0,e.sync?i.nextTick(A,t):A(t))}function A(t){d(\"emit readable\"),t.emit(\"readable\"),C(t)}function S(t,e){e.readingMore||(e.readingMore=!0,i.nextTick(M,t,e))}function M(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(d(\"maybeReadMore read 0\"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function T(t){d(\"readable nexttick read 0\"),t.read(0)}function D(t,e){e.reading||(d(\"resume read 0\"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit(\"resume\"),C(t),e.flowing&&!e.reading&&t.read(0)}function C(t){var e=t._readableState;for(d(\"flow\",e.flowing);e.flowing&&null!==t.read(););}function N(t,e){return 0===e.length?null:(e.objectMode?n=e.buffer.shift():!t||t>=e.length?(n=e.decoder?e.buffer.join(\"\"):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):n=function(t,e,n){var r;t<e.head.data.length?(r=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):r=t===e.head.data.length?e.shift():n?function(t,e){var n=e.head,r=1,i=n.data;t-=i.length;for(;n=n.next;){var a=n.data,o=t>a.length?a.length:t;if(o===a.length?i+=a:i+=a.slice(0,t),0===(t-=o)){o===a.length?(++r,n.next?e.head=n.next:e.head=e.tail=null):(e.head=n,n.data=a.slice(o));break}++r}return e.length-=r,i}(t,e):function(t,e){var n=c.allocUnsafe(t),r=e.head,i=1;r.data.copy(n),t-=r.data.length;for(;r=r.next;){var a=r.data,o=t>a.length?a.length:t;if(a.copy(n,n.length-t,0,o),0===(t-=o)){o===a.length?(++i,r.next?e.head=r.next:e.head=e.tail=null):(e.head=r,r.data=a.slice(o));break}++i}return e.length-=i,n}(t,e);return r}(t,e.buffer,e.decoder),n);var n}function I(t){var e=t._readableState;if(e.length>0)throw new Error('\"endReadable()\" called on non-empty stream');e.endEmitted||(e.ended=!0,i.nextTick(L,e,t))}function L(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit(\"end\"))}function B(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1}m.prototype.read=function(t){d(\"read\",t),t=parseInt(t,10);var e=this._readableState,n=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return d(\"read: emitReadable\",e.length,e.ended),0===e.length&&e.ended?I(this):E(this),null;if(0===(t=k(t,e))&&e.ended)return 0===e.length&&I(this),null;var r,i=e.needReadable;return d(\"need readable\",i),(0===e.length||e.length-t<e.highWaterMark)&&d(\"length less than watermark\",i=!0),e.ended||e.reading?d(\"reading or ended\",i=!1):i&&(d(\"do read\"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=k(n,e))),null===(r=t>0?N(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&I(this)),null!==r&&this.emit(\"data\",r),r},m.prototype._read=function(t){this.emit(\"error\",new Error(\"_read() is not implemented\"))},m.prototype.pipe=function(t,e){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=t;break;case 1:a.pipes=[a.pipes,t];break;default:a.pipes.push(t)}a.pipesCount+=1,d(\"pipe count=%d opts=%j\",a.pipesCount,e);var u=(!e||!1!==e.end)&&t!==r.stdout&&t!==r.stderr?f:m;function c(e,r){d(\"onunpipe\"),e===n&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,d(\"cleanup\"),t.removeListener(\"close\",b),t.removeListener(\"finish\",v),t.removeListener(\"drain\",l),t.removeListener(\"error\",y),t.removeListener(\"unpipe\",c),n.removeListener(\"end\",f),n.removeListener(\"end\",m),n.removeListener(\"data\",g),h=!0,!a.awaitDrain||t._writableState&&!t._writableState.needDrain||l())}function f(){d(\"onend\"),t.end()}a.endEmitted?i.nextTick(u):n.once(\"end\",u),t.on(\"unpipe\",c);var l=function(t){return function(){var e=t._readableState;d(\"pipeOnDrain\",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&s(t,\"data\")&&(e.flowing=!0,C(t))}}(n);t.on(\"drain\",l);var h=!1;var p=!1;function g(e){d(\"ondata\"),p=!1,!1!==t.write(e)||p||((1===a.pipesCount&&a.pipes===t||a.pipesCount>1&&-1!==B(a.pipes,t))&&!h&&(d(\"false write response, pause\",n._readableState.awaitDrain),n._readableState.awaitDrain++,p=!0),n.pause())}function y(e){d(\"onerror\",e),m(),t.removeListener(\"error\",y),0===s(t,\"error\")&&t.emit(\"error\",e)}function b(){t.removeListener(\"finish\",v),m()}function v(){d(\"onfinish\"),t.removeListener(\"close\",b),m()}function m(){d(\"unpipe\"),n.unpipe(t)}return n.on(\"data\",g),function(t,e,n){if(\"function\"==typeof t.prependListener)return t.prependListener(e,n);t._events&&t._events[e]?o(t._events[e])?t._events[e].unshift(n):t._events[e]=[n,t._events[e]]:t.on(e,n)}(t,\"error\",y),t.once(\"close\",b),t.once(\"finish\",v),t.emit(\"pipe\",n),a.flowing||(d(\"pipe resume\"),n.resume()),t},m.prototype.unpipe=function(t){var e=this._readableState,n={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit(\"unpipe\",this,n),this);if(!t){var r=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var a=0;a<i;a++)r[a].emit(\"unpipe\",this,n);return this}var o=B(e.pipes,t);return-1===o?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit(\"unpipe\",this,n),this)},m.prototype.on=function(t,e){var n=u.prototype.on.call(this,t,e);if(\"data\"===t)!1!==this._readableState.flowing&&this.resume();else if(\"readable\"===t){var r=this._readableState;r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.emittedReadable=!1,r.reading?r.length&&E(this):i.nextTick(T,this))}return n},m.prototype.addListener=m.prototype.on,m.prototype.resume=function(){var t=this._readableState;return t.flowing||(d(\"resume\"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,i.nextTick(D,t,e))}(this,t)),this},m.prototype.pause=function(){return d(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(d(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this},m.prototype.wrap=function(t){var e=this,n=this._readableState,r=!1;for(var i in t.on(\"end\",(function(){if(d(\"wrapped end\"),n.decoder&&!n.ended){var t=n.decoder.end();t&&t.length&&e.push(t)}e.push(null)})),t.on(\"data\",(function(i){(d(\"wrapped data\"),n.decoder&&(i=n.decoder.write(i)),n.objectMode&&null==i)||(n.objectMode||i&&i.length)&&(e.push(i)||(r=!0,t.pause()))})),t)void 0===this[i]&&\"function\"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));for(var a=0;a<b.length;a++)t.on(b[a],this.emit.bind(this,b[a]));return this._read=function(e){d(\"wrapped _read\",e),r&&(r=!1,t.resume())},this},Object.defineProperty(m.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),m._fromList=N}).call(this,n(12),n(7))},function(t,e,n){t.exports=n(113).EventEmitter},function(t,e,n){\"use strict\";var r=n(78);function i(t,e){t.emit(\"error\",e)}t.exports={destroy:function(t,e){var n=this,a=this._readableState&&this._readableState.destroyed,o=this._writableState&&this._writableState.destroyed;return a||o?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||r.nextTick(i,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,(function(t){!e&&t?(r.nextTick(i,n,t),n._writableState&&(n._writableState.errorEmitted=!0)):e&&e(t)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(t,e,n){\"use strict\";t.exports=o;var r=n(35),i=n(54);function a(t,e){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(!r)return this.emit(\"error\",new Error(\"write callback called multiple times\"));n.writechunk=null,n.writecb=null,null!=e&&this.push(e),r(t);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function o(t){if(!(this instanceof o))return new o(t);r.call(this,t),this._transformState={afterTransform:a.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&(\"function\"==typeof t.transform&&(this._transform=t.transform),\"function\"==typeof t.flush&&(this._flush=t.flush)),this.on(\"prefinish\",s)}function s(){var t=this;\"function\"==typeof this._flush?this._flush((function(e,n){u(t,e,n)})):u(this,null,null)}function u(t,e,n){if(e)return t.emit(\"error\",e);if(null!=n&&t.push(n),t._writableState.length)throw new Error(\"Calling transform done when ws.length != 0\");if(t._transformState.transforming)throw new Error(\"Calling transform done when still transforming\");return t.push(null)}i.inherits=n(2),i.inherits(o,r),o.prototype.push=function(t,e){return this._transformState.needTransform=!1,r.prototype.push.call(this,t,e)},o.prototype._transform=function(t,e,n){throw new Error(\"_transform() is not implemented\")},o.prototype._write=function(t,e,n){var r=this._transformState;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},o.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},o.prototype._destroy=function(t,e){var n=this;r.prototype._destroy.call(this,t,(function(t){e(t),n.emit(\"close\")}))}},function(t,e,n){var r=n(2),i=n(45),a=n(3).Buffer,o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=new Array(64);function u(){this.init(),this._w=s,i.call(this,64,56)}function c(t,e,n){return n^t&(e^n)}function f(t,e,n){return t&e|n&(t|e)}function l(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function h(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function d(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}r(u,i),u.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},u.prototype._update=function(t){for(var e,n=this._w,r=0|this._a,i=0|this._b,a=0|this._c,s=0|this._d,u=0|this._e,p=0|this._f,g=0|this._g,y=0|this._h,b=0;b<16;++b)n[b]=t.readInt32BE(4*b);for(;b<64;++b)n[b]=0|(((e=n[b-2])>>>17|e<<15)^(e>>>19|e<<13)^e>>>10)+n[b-7]+d(n[b-15])+n[b-16];for(var v=0;v<64;++v){var m=y+h(u)+c(u,p,g)+o[v]+n[v]|0,_=l(r)+f(r,i,a)|0;y=g,g=p,p=u,u=s+m|0,s=a,a=i,i=r,r=m+_|0}this._a=r+this._a|0,this._b=i+this._b|0,this._c=a+this._c|0,this._d=s+this._d|0,this._e=u+this._e|0,this._f=p+this._f|0,this._g=g+this._g|0,this._h=y+this._h|0},u.prototype._hash=function(){var t=a.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t},t.exports=u},function(t,e,n){var r=n(2),i=n(45),a=n(3).Buffer,o=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],s=new Array(160);function u(){this.init(),this._w=s,i.call(this,128,112)}function c(t,e,n){return n^t&(e^n)}function f(t,e,n){return t&e|n&(t|e)}function l(t,e){return(t>>>28|e<<4)^(e>>>2|t<<30)^(e>>>7|t<<25)}function h(t,e){return(t>>>14|e<<18)^(t>>>18|e<<14)^(e>>>9|t<<23)}function d(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^t>>>7}function p(t,e){return(t>>>1|e<<31)^(t>>>8|e<<24)^(t>>>7|e<<25)}function g(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^t>>>6}function y(t,e){return(t>>>19|e<<13)^(e>>>29|t<<3)^(t>>>6|e<<26)}function b(t,e){return t>>>0<e>>>0?1:0}r(u,i),u.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},u.prototype._update=function(t){for(var e=this._w,n=0|this._ah,r=0|this._bh,i=0|this._ch,a=0|this._dh,s=0|this._eh,u=0|this._fh,v=0|this._gh,m=0|this._hh,_=0|this._al,w=0|this._bl,x=0|this._cl,k=0|this._dl,E=0|this._el,A=0|this._fl,S=0|this._gl,M=0|this._hl,T=0;T<32;T+=2)e[T]=t.readInt32BE(4*T),e[T+1]=t.readInt32BE(4*T+4);for(;T<160;T+=2){var D=e[T-30],C=e[T-30+1],N=d(D,C),I=p(C,D),L=g(D=e[T-4],C=e[T-4+1]),B=y(C,D),O=e[T-14],R=e[T-14+1],P=e[T-32],F=e[T-32+1],q=I+R|0,j=N+O+b(q,I)|0;j=(j=j+L+b(q=q+B|0,B)|0)+P+b(q=q+F|0,F)|0,e[T]=j,e[T+1]=q}for(var U=0;U<160;U+=2){j=e[U],q=e[U+1];var z=f(n,r,i),Y=f(_,w,x),V=l(n,_),H=l(_,n),G=h(s,E),$=h(E,s),W=o[U],K=o[U+1],X=c(s,u,v),Z=c(E,A,S),J=M+$|0,Q=m+G+b(J,M)|0;Q=(Q=(Q=Q+X+b(J=J+Z|0,Z)|0)+W+b(J=J+K|0,K)|0)+j+b(J=J+q|0,q)|0;var tt=H+Y|0,et=V+z+b(tt,H)|0;m=v,M=S,v=u,S=A,u=s,A=E,s=a+Q+b(E=k+J|0,k)|0,a=i,k=x,i=r,x=w,r=n,w=_,n=Q+et+b(_=J+tt|0,J)|0}this._al=this._al+_|0,this._bl=this._bl+w|0,this._cl=this._cl+x|0,this._dl=this._dl+k|0,this._el=this._el+E|0,this._fl=this._fl+A|0,this._gl=this._gl+S|0,this._hl=this._hl+M|0,this._ah=this._ah+n+b(this._al,_)|0,this._bh=this._bh+r+b(this._bl,w)|0,this._ch=this._ch+i+b(this._cl,x)|0,this._dh=this._dh+a+b(this._dl,k)|0,this._eh=this._eh+s+b(this._el,E)|0,this._fh=this._fh+u+b(this._fl,A)|0,this._gh=this._gh+v+b(this._gl,S)|0,this._hh=this._hh+m+b(this._hl,M)|0},u.prototype._hash=function(){var t=a.allocUnsafe(64);function e(e,n,r){t.writeInt32BE(e,r),t.writeInt32BE(n,r+4)}return e(this._ah,this._al,0),e(this._bh,this._bl,8),e(this._ch,this._cl,16),e(this._dh,this._dl,24),e(this._eh,this._el,32),e(this._fh,this._fl,40),e(this._gh,this._gl,48),e(this._hh,this._hl,56),t},t.exports=u},function(t,e,n){\"use strict\";var r=n(2),i=n(438),a=n(31),o=n(3).Buffer,s=n(200),u=n(118),c=n(119),f=o.alloc(128);function l(t,e){a.call(this,\"digest\"),\"string\"==typeof e&&(e=o.from(e));var n=\"sha512\"===t||\"sha384\"===t?128:64;(this._alg=t,this._key=e,e.length>n)?e=(\"rmd160\"===t?new u:c(t)).update(e).digest():e.length<n&&(e=o.concat([e,f],n));for(var r=this._ipad=o.allocUnsafe(n),i=this._opad=o.allocUnsafe(n),s=0;s<n;s++)r[s]=54^e[s],i[s]=92^e[s];this._hash=\"rmd160\"===t?new u:c(t),this._hash.update(r)}r(l,a),l.prototype._update=function(t){this._hash.update(t)},l.prototype._final=function(){var t=this._hash.digest();return(\"rmd160\"===this._alg?new u:c(this._alg)).update(this._opad).update(t).digest()},t.exports=function(t,e){return\"rmd160\"===(t=t.toLowerCase())||\"ripemd160\"===t?new l(\"rmd160\",e):\"md5\"===t?new i(s,e):new l(t,e)}},function(t,e,n){var r=n(111);t.exports=function(t){return(new r).update(t).digest()}},function(t){t.exports=JSON.parse('{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem1.c",
    "start_line": 76,
    "start_column": 38,
    "end_line": 76,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(x)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/dbpage.c",
    "start_line": 352,
    "start_column": 7,
    "end_line": 354,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(sqlite3PagerGetData(pDbPage),\n             sqlite3_value_blob(argv[3]),\n             szPage)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_bestindex.c",
    "start_line": 186,
    "start_column": 27,
    "end_line": 186,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[3])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_bestindex.c",
    "start_line": 189,
    "start_column": 27,
    "end_line": 189,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[3])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_bestindex.c",
    "start_line": 189,
    "start_column": 5,
    "end_line": 189,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCmd, argv[3], strlen(argv[3])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_devsym.c",
    "start_line": 338,
    "start_column": 18,
    "end_line": 338,
    "end_column": 21,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pVar[1], K, L)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 43,
    "start_column": 38,
    "end_line": 43,
    "end_column": 53,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nMalloc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 24,
    "start_column": 21,
    "end_line": 24,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 24,
    "start_column": 41,
    "end_line": 24,
    "end_column": 44,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 25,
    "start_column": 21,
    "end_line": 25,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 25,
    "start_column": 37,
    "end_line": 25,
    "end_column": 40,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 27,
    "start_column": 13,
    "end_line": 27,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 28,
    "start_column": 8,
    "end_line": 28,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 33,
    "start_column": 13,
    "end_line": 33,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 35,
    "start_column": 8,
    "end_line": 35,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 38,
    "start_column": 13,
    "end_line": 38,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 42,
    "start_column": 35,
    "end_line": 42,
    "end_column": 38,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 42,
    "start_column": 67,
    "end_line": 42,
    "end_column": 70,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 43,
    "start_column": 21,
    "end_line": 43,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 45,
    "start_column": 38,
    "end_line": 45,
    "end_column": 41,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 46,
    "start_column": 46,
    "end_line": 46,
    "end_column": 49,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 57,
    "start_column": 8,
    "end_line": 57,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 70,
    "start_column": 36,
    "end_line": 70,
    "end_column": 39,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_wsd.c",
    "start_line": 72,
    "start_column": 18,
    "end_line": 72,
    "end_column": 21,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test5.c",
    "start_line": 168,
    "start_column": 7,
    "end_line": 168,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, zTmp, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 971,
    "start_column": 12,
    "end_line": 971,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAbsoluteName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 3682,
    "start_column": 15,
    "end_line": 3682,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDirname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4559,
    "start_column": 29,
    "end_line": 4559,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBasePath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 5649,
    "start_column": 22,
    "end_line": 5649,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6052,
    "start_column": 48,
    "end_line": 6052,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6065,
    "start_column": 19,
    "end_line": 6065,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6842,
    "start_column": 16,
    "end_line": 6842,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(dbPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6863,
    "start_column": 14,
    "end_line": 6863,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(lockPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7294,
    "start_column": 39,
    "end_line": 7294,
    "end_column": 76,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&writeBuffer[PROXY_PATHINDEX])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7425,
    "start_column": 18,
    "end_line": 7425,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(dbPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7451,
    "start_column": 16,
    "end_line": 7451,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(conchPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7501,
    "start_column": 18,
    "end_line": 7501,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7509,
    "start_column": 15,
    "end_line": 7509,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7509,
    "start_column": 55,
    "end_line": 7509,
    "end_column": 77,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(DOTLOCK_SUFFIX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7513,
    "start_column": 13,
    "end_line": 7513,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 975,
    "start_column": 3,
    "end_line": 975,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zCanonicalName, zAbsoluteName, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1428,
    "start_column": 5,
    "end_line": 1428,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pInode->fileId, &fileId, sizeof(fileId)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 3361,
    "start_column": 7,
    "end_line": 3361,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &((u8 *)(pFile->pMapRegion))[offset], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 3496,
    "start_column": 7,
    "end_line": 3496,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&((u8 *)(pFile->pMapRegion))[offset], pBuf, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 5915,
    "start_column": 5,
    "end_line": 5915,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDb, zPath, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6398,
    "start_column": 15,
    "end_line": 6398,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDel, zIn, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6514,
    "start_column": 7,
    "end_line": 6514,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, &t, sizeof(t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6515,
    "start_column": 7,
    "end_line": 6515,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zBuf[sizeof(t)], &randomnessPid, sizeof(randomnessPid)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7237,
    "start_column": 13,
    "end_line": 7237,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(lockPath, &readBuf[PROXY_PATHINDEX], pathLen)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7287,
    "start_column": 9,
    "end_line": 7287,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&writeBuffer[PROXY_HEADERLEN], myHostID, PROXY_HOSTIDLEN)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7434,
    "start_column": 3,
    "end_line": 7434,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(conchPath, dbPath, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7450,
    "start_column": 3,
    "end_line": 7450,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&conchPath[i+1], \"-conch\", 7)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7510,
    "start_column": 5,
    "end_line": 7510,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(dbPath, (char *)pFile->lockingContext, len + 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1261,
    "start_column": 10,
    "end_line": 1261,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 2822,
    "start_column": 28,
    "end_line": 2822,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 5719,
    "start_column": 32,
    "end_line": 5719,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 5720,
    "start_column": 32,
    "end_line": 5720,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6185,
    "start_column": 22,
    "end_line": 6185,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6191,
    "start_column": 18,
    "end_line": 6191,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6397,
    "start_column": 15,
    "end_line": 6397,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 6876,
    "start_column": 27,
    "end_line": 6876,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7074,
    "start_column": 3,
    "end_line": 7074,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7085,
    "start_column": 5,
    "end_line": 7085,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7316,
    "start_column": 15,
    "end_line": 7316,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7317,
    "start_column": 36,
    "end_line": 7317,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7319,
    "start_column": 15,
    "end_line": 7319,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7323,
    "start_column": 13,
    "end_line": 7323,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 7324,
    "start_column": 32,
    "end_line": 7324,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1166,
    "start_column": 23,
    "end_line": 1166,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1525,
    "start_column": 42,
    "end_line": 1525,
    "end_column": 45,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1610,
    "start_column": 23,
    "end_line": 1610,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 1619,
    "start_column": 21,
    "end_line": 1619,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 2135,
    "start_column": 58,
    "end_line": 2135,
    "end_column": 61,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 3851,
    "start_column": 15,
    "end_line": 3851,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tlS"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 3969,
    "start_column": 15,
    "end_line": 3969,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tlS"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4587,
    "start_column": 23,
    "end_line": 4587,
    "end_column": 26,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4692,
    "start_column": 53,
    "end_line": 4692,
    "end_column": 56,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4693,
    "start_column": 52,
    "end_line": 4693,
    "end_column": 55,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4827,
    "start_column": 53,
    "end_line": 4827,
    "end_column": 56,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_unix.c",
    "start_line": 4828,
    "start_column": 52,
    "end_line": 4828,
    "end_column": 55,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 1509,
    "start_column": 7,
    "end_line": 1509,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&temp[x], &data[x], (cbrk+size)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 1512,
    "start_column": 5,
    "end_line": 1512,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[cbrk], &src[pc], size)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 1569,
    "start_column": 9,
    "end_line": 1569,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[iAddr], &aData[pc], 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 2407,
    "start_column": 9,
    "end_line": 2407,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFullPathname, zFilename, nFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 3299,
    "start_column": 3,
    "end_line": 3299,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(data, zMagicHeader, sizeof(zMagicHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 4745,
    "start_column": 5,
    "end_line": 4745,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pBuf, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 4748,
    "start_column": 5,
    "end_line": 4748,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, pPayload, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 4930,
    "start_column": 11,
    "end_line": 4930,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSave, aWrite, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 4934,
    "start_column": 11,
    "end_line": 4934,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aWrite, aSave, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6015,
    "start_column": 9,
    "end_line": 6015,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPage1->aData[32], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6039,
    "start_column": 13,
    "end_line": 6039,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPage1->aData[32], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6045,
    "start_column": 13,
    "end_line": 6045,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPrevTrunk->aData[0], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6068,
    "start_column": 11,
    "end_line": 6068,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNewTrunk->aData[0], &pTrunk->aData[0], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6070,
    "start_column": 11,
    "end_line": 6070,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNewTrunk->aData[8], &pTrunk->aData[12], (k-1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6135,
    "start_column": 13,
    "end_line": 6135,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[8+closest*4], &aData[4+k*4], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6513,
    "start_column": 5,
    "end_line": 6513,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, nSrc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6571,
    "start_column": 7,
    "end_line": 6571,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6574,
    "start_column": 7,
    "end_line": 6574,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPayload, pSrc, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6732,
    "start_column": 7,
    "end_line": 6732,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTemp, pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6776,
    "start_column": 7,
    "end_line": 6776,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[idx+4], pCell+4, sz-4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6779,
    "start_column": 7,
    "end_line": 6779,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&data[idx], pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6961,
    "start_column": 3,
    "end_line": 6961,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pTmp[j], &aData[j], usableSize - j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6984,
    "start_column": 5,
    "end_line": 6984,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pCell, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7171,
    "start_column": 3,
    "end_line": 7171,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTmp, aData, pPg->pBt->usableSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7452,
    "start_column": 5,
    "end_line": 7452,
    "end_column": 62,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aTo[iData], &aFrom[iData], pBt->usableSize-iData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7453,
    "start_column": 5,
    "end_line": 7453,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aTo[iToHdr], &aFrom[iFromHdr], pFrom->cellOffset + 2*pFrom->nCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7651,
    "start_column": 11,
    "end_line": 7651,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aOvflSpace[iOff], apDiv[i], szNew[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7772,
    "start_column": 7,
    "end_line": 7772,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTemp, apDiv[i], sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7781,
    "start_column": 9,
    "end_line": 7781,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(b.apCell[b.nCell], &pOld->aData[8], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8032,
    "start_column": 5,
    "end_line": 8032,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&apNew[nNew-1]->aData[8], &pOld->aData[8], 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8107,
    "start_column": 7,
    "end_line": 8107,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->aData[8], pCell, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8336,
    "start_column": 3,
    "end_line": 8337,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pChild->aiOvfl, pRoot->aiOvfl,\n         pRoot->nOverflow*sizeof(pRoot->aiOvfl[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8338,
    "start_column": 3,
    "end_line": 8339,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pChild->apOvfl, pRoot->apOvfl,\n         pRoot->nOverflow*sizeof(pRoot->apOvfl[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8807,
    "start_column": 7,
    "end_line": 8807,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(newCell, oldCell, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8831,
    "start_column": 7,
    "end_line": 8831,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(oldCell, newCell, szNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8887,
    "start_column": 11,
    "end_line": 8887,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->pKey, pX->pKey, pX->nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 30,
    "start_column": 42,
    "end_line": 30,
    "end_column": 48,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 1461,
    "start_column": 11,
    "end_line": 1461,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 1469,
    "start_column": 9,
    "end_line": 1469,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6687,
    "start_column": 5,
    "end_line": 6687,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 6782,
    "start_column": 5,
    "end_line": 6782,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7072,
    "start_column": 5,
    "end_line": 7072,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7179,
    "start_column": 5,
    "end_line": 7179,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7197,
    "start_column": 5,
    "end_line": 7197,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 7211,
    "start_column": 9,
    "end_line": 7211,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/btree.c",
    "start_line": 8543,
    "start_column": 7,
    "end_line": 8543,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_thread.c",
    "start_line": 104,
    "start_column": 3,
    "end_line": 104,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEvent->zScript, zMsg, nMsg+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_thread.c",
    "start_line": 201,
    "start_column": 3,
    "end_line": 201,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zVarname, zVarname, nVarname+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_thread.c",
    "start_line": 202,
    "start_column": 3,
    "end_line": 202,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zScript, zScript, nScript+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_thread.c",
    "start_line": 251,
    "start_column": 3,
    "end_line": 251,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEvent->zScript, zMsg, nMsg+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 769,
    "start_column": 47,
    "end_line": 769,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(bufpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 789,
    "start_column": 38,
    "end_line": 789,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(bufpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 547,
    "start_column": 11,
    "end_line": 547,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &rx, sizeof(u)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 570,
    "start_column": 13,
    "end_line": 570,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buf+(prefix!=0),\"Inf\",4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 945,
    "start_column": 42,
    "end_line": 945,
    "end_column": 74,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, p->zText, p->nChar)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 980,
    "start_column": 5,
    "end_line": 980,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->zText[p->nChar], z, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 999,
    "start_column": 5,
    "end_line": 999,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->zText[p->nChar-N], z, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 1021,
    "start_column": 5,
    "end_line": 1021,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zText, p->zText, p->nChar+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/printf.c",
    "start_line": 1295,
    "start_column": 3,
    "end_line": 1295,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memdb.c",
    "start_line": 149,
    "start_column": 23,
    "end_line": 149,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, p->aData+iOfst, p->sz - iOfst)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memdb.c",
    "start_line": 152,
    "start_column": 3,
    "end_line": 152,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, p->aData+iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memdb.c",
    "start_line": 197,
    "start_column": 3,
    "end_line": 197,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aData+iOfst, z, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memdb.c",
    "start_line": 501,
    "start_column": 18,
    "end_line": 501,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, p->aData, p->sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memdb.c",
    "start_line": 531,
    "start_column": 13,
    "end_line": 531,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, sqlite3PagerGetData(pPage), szPage)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 81,
    "start_column": 28,
    "end_line": 81,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 93,
    "start_column": 24,
    "end_line": 93,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCol->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 25,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&y,&x,sizeof(y)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 619,
    "start_column": 3,
    "end_line": 619,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, &zTemp[i+1], sizeof(zTemp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 782,
    "start_column": 5,
    "end_line": 782,
    "end_column": 24,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, &u, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 823,
    "start_column": 7,
    "end_line": 823,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pValue, &u, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1263,
    "start_column": 3,
    "end_line": 1263,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1267,
    "start_column": 3,
    "end_line": 1267,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1271,
    "start_column": 3,
    "end_line": 1271,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x,p,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1280,
    "start_column": 3,
    "end_line": 1280,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&v,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1283,
    "start_column": 3,
    "end_line": 1283,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&x,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1286,
    "start_column": 3,
    "end_line": 1286,
    "end_column": 17,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p,&x,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1560,
    "start_column": 3,
    "end_line": 1560,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1657,
    "start_column": 3,
    "end_line": 1657,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/util.c",
    "start_line": 1492,
    "start_column": 39,
    "end_line": 1492,
    "end_column": 46,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 636,
    "start_column": 34,
    "end_line": 636,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTbl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 636,
    "start_column": 58,
    "end_line": 636,
    "end_column": 69,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 641,
    "start_column": 29,
    "end_line": 641,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTbl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 643,
    "start_column": 29,
    "end_line": 643,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTbl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 644,
    "start_column": 27,
    "end_line": 644,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 278,
    "start_column": 3,
    "end_line": 278,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zDir, zDir, nDir+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 643,
    "start_column": 3,
    "end_line": 643,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pVtab->zTbl, zTbl, strlen(zTbl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_fs.c",
    "start_line": 644,
    "start_column": 3,
    "end_line": 644,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pVtab->zDb, zDb, strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/notify.c",
    "start_line": 263,
    "start_column": 11,
    "end_line": 263,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, aArg, nArg*sizeof(void *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/loadext.c",
    "start_line": 591,
    "start_column": 5,
    "end_line": 591,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAltEntry, \"sqlite3_\", 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/loadext.c",
    "start_line": 600,
    "start_column": 5,
    "end_line": 600,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAltEntry+iEntry, \"_init\", 6)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/loadext.c",
    "start_line": 636,
    "start_column": 5,
    "end_line": 636,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aHandle, db->aExtension, sizeof(handle)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/utf.c",
    "start_line": 202,
    "start_column": 5,
    "end_line": 202,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/utf.c",
    "start_line": 360,
    "start_column": 5,
    "end_line": 360,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/utf.c",
    "start_line": 397,
    "start_column": 7,
    "end_line": 397,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_func.c",
    "start_line": 209,
    "start_column": 16,
    "end_line": 209,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_func.c",
    "start_line": 118,
    "start_column": 3,
    "end_line": 118,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zVal, sqlite3_value_text(argv[0]), len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_func.c",
    "start_line": 141,
    "start_column": 3,
    "end_line": 141,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zVal, sqlite3_value_text16(argv[0]), len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_func.c",
    "start_line": 212,
    "start_column": 9,
    "end_line": 212,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAux, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 143,
    "start_column": 3,
    "end_line": 143,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiCur, pWInfo->aiCurOnePass, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 167,
    "start_column": 3,
    "end_line": 167,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDest->a, pSrc->a, pDest->n*sizeof(pDest->a[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 1752,
    "start_column": 5,
    "end_line": 1752,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zType, \"....\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 1897,
    "start_column": 3,
    "end_line": 1897,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(paNew, p->aLTerm, sizeof(p->aLTerm[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 1913,
    "start_column": 3,
    "end_line": 1913,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, WHERE_LOOP_XFER_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 1914,
    "start_column": 3,
    "end_line": 1914,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->aLTerm, pFrom->aLTerm, pTo->nLTerm*sizeof(pTo->aLTerm[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 4334,
    "start_column": 9,
    "end_line": 4334,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->aLoop, pFrom->aLoop, sizeof(WhereLoop*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 5542,
    "start_column": 5,
    "end_line": 5542,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->pExpr, &p->orig, sizeof(p->orig)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 5037,
    "start_column": 9,
    "end_line": 5037,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 5494,
    "start_column": 9,
    "end_line": 5494,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/where.c",
    "start_line": 5533,
    "start_column": 47,
    "end_line": 5533,
    "end_column": 53,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pragma.c",
    "start_line": 2342,
    "start_column": 11,
    "end_line": 2342,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/fkey.c",
    "start_line": 1328,
    "start_column": 7,
    "end_line": 1328,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)pStep->zTarget, zFrom, nFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mutex_unix.c",
    "start_line": 289,
    "start_column": 5,
    "end_line": 289,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mutex_unix.c",
    "start_line": 338,
    "start_column": 5,
    "end_line": 338,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mutex_unix.c",
    "start_line": 368,
    "start_column": 5,
    "end_line": 368,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeapi.c",
    "start_line": 338,
    "start_column": 3,
    "end_line": 338,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, pOrig, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_rtree.c",
    "start_line": 215,
    "start_column": 29,
    "end_line": 215,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_rtree.c",
    "start_line": 217,
    "start_column": 30,
    "end_line": 217,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_rtree.c",
    "start_line": 219,
    "start_column": 30,
    "end_line": 219,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_rtree.c",
    "start_line": 221,
    "start_column": 38,
    "end_line": 221,
    "end_column": 42,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 479,
    "start_column": 20,
    "end_line": 479,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 480,
    "start_column": 25,
    "end_line": 480,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCrashFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 382,
    "start_column": 5,
    "end_line": 382,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zBuf, zBuf, nBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 419,
    "start_column": 5,
    "end_line": 419,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, &pCrash->zData[iOfst], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 454,
    "start_column": 3,
    "end_line": 454,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCrash->zData[iOfst], zBuf, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 955,
    "start_column": 3,
    "end_line": 955,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(g.zCrashFile, zCrashFile, nCrashFile+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 223,
    "start_column": 5,
    "end_line": 223,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 291,
    "start_column": 11,
    "end_line": 291,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 303,
    "start_column": 11,
    "end_line": 303,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 318,
    "start_column": 9,
    "end_line": 318,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 374,
    "start_column": 5,
    "end_line": 374,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 488,
    "start_column": 3,
    "end_line": 488,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test6.c",
    "start_line": 494,
    "start_column": 5,
    "end_line": 494,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/table.c",
    "start_line": 93,
    "start_column": 9,
    "end_line": 93,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, argv[i], n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_demovfs.c",
    "start_line": 470,
    "start_column": 11,
    "end_line": 470,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDir)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_demovfs.c",
    "start_line": 289,
    "start_column": 7,
    "end_line": 289,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuffer[p->nBuffer], z, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 476,
    "start_column": 3,
    "end_line": 476,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 1382,
    "start_column": 7,
    "end_line": 1382,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, pPreStmt->nSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2000,
    "start_column": 9,
    "end_line": 2000,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zAuth, zAuth, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2103,
    "start_column": 9,
    "end_line": 2103,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zBindFallback, zCallback, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2133,
    "start_column": 9,
    "end_line": 2133,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zBusy, zBusy, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2246,
    "start_column": 5,
    "end_line": 2246,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCollate->zScript, zScript, nScript+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2299,
    "start_column": 9,
    "end_line": 2299,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zCommit, zCommit, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2651,
    "start_column": 19,
    "end_line": 2651,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pBA, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2977,
    "start_column": 9,
    "end_line": 2977,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zNull, zNull, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3032,
    "start_column": 9,
    "end_line": 3032,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zProgress, zProgress, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3074,
    "start_column": 9,
    "end_line": 3074,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zProfile, zProfile, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3285,
    "start_column": 9,
    "end_line": 3285,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zTrace, zTrace, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3368,
    "start_column": 9,
    "end_line": 3368,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zTraceV2, zTraceV2, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 1174,
    "start_column": 11,
    "end_line": 1174,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nLine )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2495,
    "start_column": 12,
    "end_line": 2495,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nByte + 50 + nCol*2 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2522,
    "start_column": 13,
    "end_line": 2522,
    "end_column": 37,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(azCol[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2547,
    "start_column": 16,
    "end_line": 2547,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nErr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 591,
    "start_column": 21,
    "end_line": 591,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 607,
    "start_column": 21,
    "end_line": 607,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 742,
    "start_column": 21,
    "end_line": 742,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 911,
    "start_column": 11,
    "end_line": 911,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 2516,
    "start_column": 10,
    "end_line": 2516,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3963,
    "start_column": 7,
    "end_line": 3963,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 3965,
    "start_column": 7,
    "end_line": 3965,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tclsqlite.c",
    "start_line": 4006,
    "start_column": 5,
    "end_line": 4006,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 200,
    "start_column": 11,
    "end_line": 200,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 203,
    "start_column": 14,
    "end_line": 203,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 255,
    "start_column": 22,
    "end_line": 255,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSearch)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 377,
    "start_column": 22,
    "end_line": 377,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVar)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 432,
    "start_column": 19,
    "end_line": 432,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 248,
    "start_column": 9,
    "end_line": 248,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zName, zVal1, nVal1+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 253,
    "start_column": 7,
    "end_line": 253,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFile, zVal2, nVal2+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 439,
    "start_column": 9,
    "end_line": 439,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zFile[nFile], \"-sqllog\", 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 180,
    "start_column": 8,
    "end_line": 180,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 182,
    "start_column": 59,
    "end_line": 182,
    "end_column": 64,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 338,
    "start_column": 20,
    "end_line": 338,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 340,
    "start_column": 11,
    "end_line": 340,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 356,
    "start_column": 3,
    "end_line": 356,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 376,
    "start_column": 20,
    "end_line": 376,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 382,
    "start_column": 11,
    "end_line": 382,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 383,
    "start_column": 31,
    "end_line": 383,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 383,
    "start_column": 36,
    "end_line": 383,
    "end_column": 42,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 385,
    "start_column": 12,
    "end_line": 385,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 391,
    "start_column": 13,
    "end_line": 391,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 411,
    "start_column": 5,
    "end_line": 411,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 524,
    "start_column": 11,
    "end_line": 524,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 547,
    "start_column": 7,
    "end_line": 547,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_sqllog.c",
    "start_line": 551,
    "start_column": 11,
    "end_line": 551,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os.c",
    "start_line": 264,
    "start_column": 5,
    "end_line": 264,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBufOut, &sqlite3Config.iPrngSeed, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os.c",
    "start_line": 271,
    "start_column": 13,
    "end_line": 271,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_windirent.c",
    "start_line": 89,
    "start_column": 3,
    "end_line": 89,
    "end_column": 53,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(dirp->d_first.d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_windirent.c",
    "start_line": 122,
    "start_column": 3,
    "end_line": 122,
    "end_column": 52,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(dirp->d_next.d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_windirent.c",
    "start_line": 146,
    "start_column": 5,
    "end_line": 146,
    "end_column": 59,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(entry->d_name, dirp->d_first.d_name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_windirent.c",
    "start_line": 166,
    "start_column": 3,
    "end_line": 166,
    "end_column": 46,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(entry->d_name, data.name, NAME_MAX)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_windirent.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 679,
    "start_column": 26,
    "end_line": 679,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 728,
    "start_column": 15,
    "end_line": 728,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 686,
    "start_column": 5,
    "end_line": 686,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zRec[4], zStr, nStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 735,
    "start_column": 3,
    "end_line": 735,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->base, &vfslog_vfs, sizeof(sqlite3_vfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 738,
    "start_column": 3,
    "end_line": 738,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->base.zName, zVfs, nVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_osinst.c",
    "start_line": 747,
    "start_column": 5,
    "end_line": 747,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aBuf, \"sqlite_ostrace1.....\", 20)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 640,
    "start_column": 30,
    "end_line": 640,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 643,
    "start_column": 14,
    "end_line": 643,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 645,
    "start_column": 14,
    "end_line": 645,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 860,
    "start_column": 23,
    "end_line": 860,
    "end_column": 45,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pFd->zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 953,
    "start_column": 18,
    "end_line": 953,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zLock)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 959,
    "start_column": 19,
    "end_line": 959,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zLock[nLock])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1533,
    "start_column": 34,
    "end_line": 1533,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1550,
    "start_column": 26,
    "end_line": 1550,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 680,
    "start_column": 5,
    "end_line": 680,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMethods, &tvfs_io_methods, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 865,
    "start_column": 5,
    "end_line": 865,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuffer->zFile, pFd->zFilename, szName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1156,
    "start_column": 11,
    "end_line": 1156,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuffer->aPage[i], &a[i*pgsz], nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1550,
    "start_column": 3,
    "end_line": 1550,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zName, zVfs, strlen(zVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1553,
    "start_column": 3,
    "end_line": 1553,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pVfs, &tvfs_vfs, sizeof(sqlite3_vfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 955,
    "start_column": 7,
    "end_line": 955,
    "end_column": 37,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(&zLock[nLock], \" lock\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 957,
    "start_column": 7,
    "end_line": 957,
    "end_column": 39,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(&zLock[nLock], \" unlock\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 961,
    "start_column": 7,
    "end_line": 961,
    "end_column": 39,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(&zLock[nLock], \" shared\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 963,
    "start_column": 7,
    "end_line": 963,
    "end_column": 42,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(&zLock[nLock], \" exclusive\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 534,
    "start_column": 17,
    "end_line": 534,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 192,
    "start_column": 15,
    "end_line": 192,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 816,
    "start_column": 15,
    "end_line": 816,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 817,
    "start_column": 18,
    "end_line": 817,
    "end_column": 21,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfs.c",
    "start_line": 1463,
    "start_column": 8,
    "end_line": 1463,
    "end_column": 11,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 720,
    "start_column": 27,
    "end_line": 720,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAff)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 1130,
    "start_column": 3,
    "end_line": 1130,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->orig, pExpr, sizeof(*pExpr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 2074,
    "start_column": 7,
    "end_line": 2074,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOrTab->a, pTabItem, sizeof(*pTabItem)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 2077,
    "start_column": 9,
    "end_line": 2077,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pOrTab->a[k], &origSrc[pLevel[k].iFrom], sizeof(pOrTab->a[k])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 468,
    "start_column": 5,
    "end_line": 468,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wherecode.c",
    "start_line": 470,
    "start_column": 5,
    "end_line": 470,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 731,
    "start_column": 3,
    "end_line": 731,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)&aHdr[1], (const void*)&pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 733,
    "start_column": 3,
    "end_line": 733,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)&aHdr[0], (const void*)&pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 762,
    "start_column": 5,
    "end_line": 762,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aFrame[8], pWal->hdr.aSalt, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 1216,
    "start_column": 5,
    "end_line": 1216,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr.aSalt, &aBuf[16], 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 1577,
    "start_column": 3,
    "end_line": 1577,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aLeft, aTmp, sizeof(aTmp[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 1893,
    "start_column": 3,
    "end_line": 1893,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr.aSalt[1], &salt1, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2242,
    "start_column": 3,
    "end_line": 2242,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&h1, (void *)&aHdr[0], sizeof(h1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2244,
    "start_column": 3,
    "end_line": 2244,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&h2, (void *)&aHdr[1], sizeof(h2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2259,
    "start_column": 5,
    "end_line": 2259,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, &h1, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2469,
    "start_column": 3,
    "end_line": 2469,
    "end_column": 67,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, (void*)walIndexHdr(pWal), sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2980,
    "start_column": 9,
    "end_line": 2980,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, pSnapshot, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 3254,
    "start_column": 5,
    "end_line": 3254,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWal->hdr, (void *)walIndexHdr(pWal), sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 3558,
    "start_column": 5,
    "end_line": 3558,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aWalHdr[16], pWal->hdr.aSalt, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 3961,
    "start_column": 5,
    "end_line": 3961,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, &pWal->hdr, sizeof(WalIndexHdr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/wal.c",
    "start_line": 2643,
    "start_column": 13,
    "end_line": 2643,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/window.c",
    "start_line": 1065,
    "start_column": 9,
    "end_line": 1065,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab, pTab2, sizeof(Table)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/select.c",
    "start_line": 2099,
    "start_column": 9,
    "end_line": 2099,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCol->zName[n+1], zType, m+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4234,
    "start_column": 14,
    "end_line": 4234,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4258,
    "start_column": 11,
    "end_line": 4258,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDatabase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4258,
    "start_column": 31,
    "end_line": 4258,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zJournal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4258,
    "start_column": 50,
    "end_line": 4258,
    "end_column": 62,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4260,
    "start_column": 14,
    "end_line": 4260,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(azParam[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 351,
    "start_column": 5,
    "end_line": 351,
    "end_column": 22,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&y, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 3017,
    "start_column": 7,
    "end_line": 3017,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFile, zUri, nUri)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 3148,
    "start_column": 3,
    "end_line": 3148,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(db->aLimit, aHardLimit, sizeof(db->aLimit)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 4235,
    "start_column": 3,
    "end_line": 4235,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 1644,
    "start_column": 11,
    "end_line": 1644,
    "end_column": 14,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 1654,
    "start_column": 11,
    "end_line": 1654,
    "end_column": 14,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/main.c",
    "start_line": 3768,
    "start_column": 17,
    "end_line": 3768,
    "end_column": 20,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 786,
    "start_column": 16,
    "end_line": 786,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 1629,
    "start_column": 7,
    "end_line": 1629,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4231,
    "start_column": 14,
    "end_line": 4231,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTail)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4232,
    "start_column": 20,
    "end_line": 4232,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTail)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4290,
    "start_column": 18,
    "end_line": 4290,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4365,
    "start_column": 18,
    "end_line": 4365,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 67,
    "start_column": 5,
    "end_line": 67,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p, &v, sizeof(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 71,
    "start_column": 5,
    "end_line": 71,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p, &v2, sizeof(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 801,
    "start_column": 3,
    "end_line": 801,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->z[p->nUsed], z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 881,
    "start_column": 5,
    "end_line": 881,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zText1, nText)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 1515,
    "start_column": 3,
    "end_line": 1515,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &d, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 3760,
    "start_column": 7,
    "end_line": 3760,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&value, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4288,
    "start_column": 5,
    "end_line": 4288,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, bytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4292,
    "start_column": 5,
    "end_line": 4292,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4363,
    "start_column": 5,
    "end_line": 4363,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, bytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4367,
    "start_column": 5,
    "end_line": 4367,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4287,
    "start_column": 13,
    "end_line": 4287,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(bytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4291,
    "start_column": 13,
    "end_line": 4291,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4362,
    "start_column": 13,
    "end_line": 4362,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(bytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 4366,
    "start_column": 13,
    "end_line": 4366,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7643,
    "start_column": 11,
    "end_line": 7643,
    "end_column": 30,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7887,
    "start_column": 11,
    "end_line": 7887,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 215,
    "start_column": 3,
    "end_line": 215,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 253,
    "start_column": 22,
    "end_line": 253,
    "end_column": 27,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 284,
    "start_column": 17,
    "end_line": 284,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 546,
    "start_column": 11,
    "end_line": 546,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 548,
    "start_column": 12,
    "end_line": 548,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 1246,
    "start_column": 3,
    "end_line": 1246,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 1509,
    "start_column": 7,
    "end_line": 1509,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 6806,
    "start_column": 5,
    "end_line": 6806,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7876,
    "start_column": 12,
    "end_line": 7876,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7895,
    "start_column": 10,
    "end_line": 7895,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7900,
    "start_column": 10,
    "end_line": 7900,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test1.c",
    "start_line": 7978,
    "start_column": 9,
    "end_line": 7978,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 249,
    "start_column": 5,
    "end_line": 249,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&n, &p, sizeof(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 251,
    "start_column": 5,
    "end_line": 251,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &p, sizeof(u)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 283,
    "start_column": 5,
    "end_line": 283,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pp, &n, sizeof(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 286,
    "start_column": 5,
    "end_line": 286,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pp, &u, sizeof(u)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 462,
    "start_column": 5,
    "end_line": 462,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHex, zBin, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 755,
    "start_column": 5,
    "end_line": 755,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aKey, aFrame, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 912,
    "start_column": 11,
    "end_line": 912,
    "end_column": 25,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sz*N )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_malloc.c",
    "start_line": 245,
    "start_column": 5,
    "end_line": 245,
    "end_column": 19,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(z, \"0\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/attach.c",
    "start_line": 144,
    "start_column": 7,
    "end_line": 144,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aNew, db->aDb, sizeof(db->aDb[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/date.c",
    "start_line": 1216,
    "start_column": 13,
    "end_line": 1216,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&sNow, pTm, sizeof(sNow)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/date.c",
    "start_line": 60,
    "start_column": 20,
    "end_line": 60,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/date.c",
    "start_line": 521,
    "start_column": 8,
    "end_line": 521,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/date.c",
    "start_line": 672,
    "start_column": 31,
    "end_line": 672,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/date.c",
    "start_line": 1215,
    "start_column": 9,
    "end_line": 1215,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "gmtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/hwtime.h",
    "start_line": 42,
    "start_column": 41,
    "end_line": 42,
    "end_column": 44,
    "rule_id": "DS187371",
    "rule_name": "A weak cipher mode of operation was used",
    "severity": 2,
    "description": "A potentially weak cipher mode of operation was used.",
    "match": "EAX"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 335,
    "start_column": 54,
    "end_line": 335,
    "end_column": 69,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 428,
    "start_column": 48,
    "end_line": 428,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 214,
    "start_column": 25,
    "end_line": 214,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, buf, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 217,
    "start_column": 17,
    "end_line": 217,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, buf, t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 227,
    "start_column": 17,
    "end_line": 227,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ctx->in, buf, 64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 236,
    "start_column": 9,
    "end_line": 236,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ctx->in, buf, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 274,
    "start_column": 9,
    "end_line": 274,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ctx->in + 14*4, ctx->bits, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 278,
    "start_column": 9,
    "end_line": 278,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(digest, ctx->buf, 16)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 367,
    "start_column": 12,
    "end_line": 367,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 368,
    "start_column": 11,
    "end_line": 368,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 373,
    "start_column": 8,
    "end_line": 373,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 57,
    "start_column": 8,
    "end_line": 57,
    "end_column": 11,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 63,
    "start_column": 16,
    "end_line": 63,
    "end_column": 19,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 63,
    "start_column": 27,
    "end_line": 63,
    "end_column": 30,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 86,
    "start_column": 9,
    "end_line": 86,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 94,
    "start_column": 13,
    "end_line": 94,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 102,
    "start_column": 9,
    "end_line": 102,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 103,
    "start_column": 9,
    "end_line": 103,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 104,
    "start_column": 9,
    "end_line": 104,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 105,
    "start_column": 9,
    "end_line": 105,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 106,
    "start_column": 9,
    "end_line": 106,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 107,
    "start_column": 9,
    "end_line": 107,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 108,
    "start_column": 9,
    "end_line": 108,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 109,
    "start_column": 9,
    "end_line": 109,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 110,
    "start_column": 9,
    "end_line": 110,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 111,
    "start_column": 9,
    "end_line": 111,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 112,
    "start_column": 9,
    "end_line": 112,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 113,
    "start_column": 9,
    "end_line": 113,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 114,
    "start_column": 9,
    "end_line": 114,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 115,
    "start_column": 9,
    "end_line": 115,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 116,
    "start_column": 9,
    "end_line": 116,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 117,
    "start_column": 9,
    "end_line": 117,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 119,
    "start_column": 9,
    "end_line": 119,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 120,
    "start_column": 9,
    "end_line": 120,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 121,
    "start_column": 9,
    "end_line": 121,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 122,
    "start_column": 9,
    "end_line": 122,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 123,
    "start_column": 9,
    "end_line": 123,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 124,
    "start_column": 9,
    "end_line": 124,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 125,
    "start_column": 9,
    "end_line": 125,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 126,
    "start_column": 9,
    "end_line": 126,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 127,
    "start_column": 9,
    "end_line": 127,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 128,
    "start_column": 9,
    "end_line": 128,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 129,
    "start_column": 9,
    "end_line": 129,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 130,
    "start_column": 9,
    "end_line": 130,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 131,
    "start_column": 9,
    "end_line": 131,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 132,
    "start_column": 9,
    "end_line": 132,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 133,
    "start_column": 9,
    "end_line": 133,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 134,
    "start_column": 9,
    "end_line": 134,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 136,
    "start_column": 9,
    "end_line": 136,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 137,
    "start_column": 9,
    "end_line": 137,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 138,
    "start_column": 9,
    "end_line": 138,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 139,
    "start_column": 9,
    "end_line": 139,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 140,
    "start_column": 9,
    "end_line": 140,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 141,
    "start_column": 9,
    "end_line": 141,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 142,
    "start_column": 9,
    "end_line": 142,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 143,
    "start_column": 9,
    "end_line": 143,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 144,
    "start_column": 9,
    "end_line": 144,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 145,
    "start_column": 9,
    "end_line": 145,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 146,
    "start_column": 9,
    "end_line": 146,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 147,
    "start_column": 9,
    "end_line": 147,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 148,
    "start_column": 9,
    "end_line": 148,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 149,
    "start_column": 9,
    "end_line": 149,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 150,
    "start_column": 9,
    "end_line": 150,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 151,
    "start_column": 9,
    "end_line": 151,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 153,
    "start_column": 9,
    "end_line": 153,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 154,
    "start_column": 9,
    "end_line": 154,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 155,
    "start_column": 9,
    "end_line": 155,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 156,
    "start_column": 9,
    "end_line": 156,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 157,
    "start_column": 9,
    "end_line": 157,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 158,
    "start_column": 9,
    "end_line": 158,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 159,
    "start_column": 9,
    "end_line": 159,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 160,
    "start_column": 9,
    "end_line": 160,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 161,
    "start_column": 9,
    "end_line": 161,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 162,
    "start_column": 9,
    "end_line": 162,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 163,
    "start_column": 9,
    "end_line": 163,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 164,
    "start_column": 9,
    "end_line": 164,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 165,
    "start_column": 9,
    "end_line": 165,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 166,
    "start_column": 9,
    "end_line": 166,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 167,
    "start_column": 9,
    "end_line": 167,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 168,
    "start_column": 9,
    "end_line": 168,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 180,
    "start_column": 13,
    "end_line": 180,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 180,
    "start_column": 21,
    "end_line": 180,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 195,
    "start_column": 6,
    "end_line": 195,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 195,
    "start_column": 16,
    "end_line": 195,
    "end_column": 19,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 219,
    "start_column": 17,
    "end_line": 219,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 229,
    "start_column": 17,
    "end_line": 229,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 243,
    "start_column": 13,
    "end_line": 243,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 243,
    "start_column": 48,
    "end_line": 243,
    "end_column": 51,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 263,
    "start_column": 17,
    "end_line": 263,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 276,
    "start_column": 9,
    "end_line": 276,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 284,
    "start_column": 13,
    "end_line": 284,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 302,
    "start_column": 13,
    "end_line": 302,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 324,
    "start_column": 3,
    "end_line": 324,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 334,
    "start_column": 3,
    "end_line": 334,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 335,
    "start_column": 3,
    "end_line": 335,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 336,
    "start_column": 3,
    "end_line": 336,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 356,
    "start_column": 3,
    "end_line": 356,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 380,
    "start_column": 3,
    "end_line": 380,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 385,
    "start_column": 5,
    "end_line": 385,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 389,
    "start_column": 3,
    "end_line": 389,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 402,
    "start_column": 21,
    "end_line": 402,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 404,
    "start_column": 21,
    "end_line": 404,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 406,
    "start_column": 21,
    "end_line": 406,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 408,
    "start_column": 21,
    "end_line": 408,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 417,
    "start_column": 3,
    "end_line": 417,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 423,
    "start_column": 5,
    "end_line": 423,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 428,
    "start_column": 7,
    "end_line": 428,
    "end_column": 10,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 433,
    "start_column": 3,
    "end_line": 433,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 437,
    "start_column": 3,
    "end_line": 437,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 438,
    "start_column": 3,
    "end_line": 438,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 104,
    "start_column": 42,
    "end_line": 104,
    "end_column": 50,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "242070db"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_md5.c",
    "start_line": 124,
    "start_column": 42,
    "end_line": 124,
    "end_column": 50,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "02441453"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memjournal.c",
    "start_line": 120,
    "start_column": 5,
    "end_line": 120,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, (u8*)pChunk->zChunk + iChunkOffset, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memjournal.c",
    "start_line": 218,
    "start_column": 7,
    "end_line": 218,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((u8*)p->pFirst->zChunk, zBuf, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/memjournal.c",
    "start_line": 246,
    "start_column": 9,
    "end_line": 246,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((u8*)p->endpoint.pChunk->zChunk + iChunkOffset, zWrite, iSpace)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/alter.c",
    "start_line": 486,
    "start_column": 3,
    "end_line": 486,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aCol, pTab->aCol, sizeof(Column)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/alter.c",
    "start_line": 1120,
    "start_column": 5,
    "end_line": 1120,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zSql, nSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/alter.c",
    "start_line": 1143,
    "start_column": 7,
    "end_line": 1143,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[iOff], zReplace, nReplace)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/alter.c",
    "start_line": 1137,
    "start_column": 9,
    "end_line": 1137,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_journal.c",
    "start_line": 296,
    "start_column": 23,
    "end_line": 296,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zJournal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_journal.c",
    "start_line": 296,
    "start_column": 42,
    "end_line": 296,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(\"-journal\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_journal.c",
    "start_line": 298,
    "start_column": 15,
    "end_line": 298,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pMain->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_journal.c",
    "start_line": 734,
    "start_column": 20,
    "end_line": 734,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_journal.c",
    "start_line": 816,
    "start_column": 18,
    "end_line": 816,
    "end_column": 21,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 280,
    "start_column": 3,
    "end_line": 280,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(saveBuf, PARSE_TAIL(pParse), PARSE_TAIL_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 285,
    "start_column": 3,
    "end_line": 285,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(PARSE_TAIL(pParse), saveBuf, PARSE_TAIL_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 566,
    "start_column": 5,
    "end_line": 566,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(db->aDbStatic, db->aDb, 2*sizeof(db->aDb[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1267,
    "start_column": 3,
    "end_line": 1267,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pName->z, pName->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1304,
    "start_column": 5,
    "end_line": 1304,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zType, pType->z, pType->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1869,
    "start_column": 5,
    "end_line": 1869,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zStmt[k], zType, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1889,
    "start_column": 3,
    "end_line": 1889,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->azColl, sizeof(char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1892,
    "start_column": 3,
    "end_line": 1892,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->aiColumn, sizeof(i16)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 1895,
    "start_column": 3,
    "end_line": 1895,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, pIdx->aSortOrder, pIdx->nColumn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 3217,
    "start_column": 3,
    "end_line": 3217,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pTo->z, pTo->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 3251,
    "start_column": 7,
    "end_line": 3251,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pToCol->a[i].zEName, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 3716,
    "start_column": 3,
    "end_line": 3716,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pIndex->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 3795,
    "start_column": 7,
    "end_line": 3795,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zExtra, zColl, nColl)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 4105,
    "start_column": 3,
    "end_line": 4105,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a[1], aVal, nCopy*sizeof(LogEst)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/build.c",
    "start_line": 4582,
    "start_column": 7,
    "end_line": 4582,
    "end_column": 68,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p1->a[1], p2->a, p2->nSrc*sizeof(struct SrcList_item)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_syscall.c",
    "start_line": 200,
    "start_column": 15,
    "end_line": 200,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFunc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_syscall.c",
    "start_line": 202,
    "start_column": 9,
    "end_line": 202,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aSyscall[i].zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_syscall.c",
    "start_line": 509,
    "start_column": 11,
    "end_line": 509,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aSyscall[i].zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/treeview.c",
    "start_line": 73,
    "start_column": 3,
    "end_line": 73,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/treeview.c",
    "start_line": 751,
    "start_column": 11,
    "end_line": 751,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/treeview.c",
    "start_line": 754,
    "start_column": 11,
    "end_line": 754,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/treeview.c",
    "start_line": 756,
    "start_column": 9,
    "end_line": 756,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfstrace.c",
    "start_line": 187,
    "start_column": 7,
    "end_line": 187,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfstrace.c",
    "start_line": 848,
    "start_column": 11,
    "end_line": 848,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTraceName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfstrace.c",
    "start_line": 366,
    "start_column": 3,
    "end_line": 366,
    "end_column": 24,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, \"|0\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfstrace.c",
    "start_line": 549,
    "start_column": 3,
    "end_line": 549,
    "end_column": 24,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zLck, \"|0\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_vfstrace.c",
    "start_line": 858,
    "start_column": 3,
    "end_line": 858,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)&pInfo[1], zTraceName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test8.c",
    "start_line": 199,
    "start_column": 22,
    "end_line": 199,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test8.c",
    "start_line": 214,
    "start_column": 22,
    "end_line": 214,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSpace)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test8.c",
    "start_line": 1269,
    "start_column": 22,
    "end_line": 1269,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zThis)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test8.c",
    "start_line": 833,
    "start_column": 12,
    "end_line": 833,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_config.c",
    "start_line": 477,
    "start_column": 42,
    "end_line": 477,
    "end_column": 51,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_config.c",
    "start_line": 479,
    "start_column": 42,
    "end_line": 479,
    "end_column": 51,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 275,
    "start_column": 7,
    "end_line": 275,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBt, &aAddr[1], pHdr->nBacktrace*sizeof(void*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 284,
    "start_column": 7,
    "end_line": 284,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, mem.zTitle, mem.nTitle)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 351,
    "start_column": 5,
    "end_line": 351,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, pPrior, (int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 457,
    "start_column": 3,
    "end_line": 457,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(mem.zTitle, zTitle, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 255,
    "start_column": 7,
    "end_line": 255,
    "end_column": 24,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(totalSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 481,
    "start_column": 9,
    "end_line": 481,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 483,
    "start_column": 5,
    "end_line": 483,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 490,
    "start_column": 5,
    "end_line": 490,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 497,
    "start_column": 7,
    "end_line": 497,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 500,
    "start_column": 3,
    "end_line": 500,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 503,
    "start_column": 7,
    "end_line": 503,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem2.c",
    "start_line": 508,
    "start_column": 5,
    "end_line": 508,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test3.c",
    "start_line": 63,
    "start_column": 12,
    "end_line": 63,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test3.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFilename, argv[1], n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test3.c",
    "start_line": 539,
    "start_column": 11,
    "end_line": 539,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4714,
    "start_column": 12,
    "end_line": 4714,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4715,
    "start_column": 12,
    "end_line": 4715,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 1483,
    "start_column": 5,
    "end_line": 1483,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHeader, aJournalMagic, sizeof(aJournalMagic)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 2419,
    "start_column": 5,
    "end_line": 2419,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, (u8*)aData, pPager->pageSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 2430,
    "start_column": 7,
    "end_line": 2430,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, &((u8*)pData)[24],sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 2992,
    "start_column": 7,
    "end_line": 2992,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, dbFileVers, sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4236,
    "start_column": 9,
    "end_line": 4236,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHeader, aJournalMagic, sizeof(aJournalMagic)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4393,
    "start_column": 9,
    "end_line": 4393,
    "end_column": 75,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, &pData[24], sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4805,
    "start_column": 3,
    "end_line": 4805,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, &pPager, sizeof(pPager)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4811,
    "start_column": 5,
    "end_line": 4811,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4813,
    "start_column": 7,
    "end_line": 4813,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zUri, nUriByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4823,
    "start_column": 5,
    "end_line": 4823,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4824,
    "start_column": 5,
    "end_line": 4824,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, \"-journal\",8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4837,
    "start_column": 5,
    "end_line": 4837,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, zPathname, nPathname)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 4838,
    "start_column": 5,
    "end_line": 4838,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPtr, \"-wal\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 6276,
    "start_column": 11,
    "end_line": 6276,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pPager->dbFileVers, pCopy, sizeof(pPager->dbFileVers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pager.c",
    "start_line": 117,
    "start_column": 28,
    "end_line": 117,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os.h",
    "start_line": 201,
    "start_column": 13,
    "end_line": 201,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/callback.c",
    "start_line": 60,
    "start_column": 7,
    "end_line": 60,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColl, pColl2, sizeof(CollSeq)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/callback.c",
    "start_line": 126,
    "start_column": 7,
    "end_line": 126,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColl[0].zName, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/callback.c",
    "start_line": 461,
    "start_column": 5,
    "end_line": 461,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)&pBest[1], zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 609,
    "start_column": 10,
    "end_line": 609,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(\"-journal\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 610,
    "start_column": 16,
    "end_line": 610,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 691,
    "start_column": 20,
    "end_line": 691,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 693,
    "start_column": 10,
    "end_line": 693,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(\"-journal\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 721,
    "start_column": 20,
    "end_line": 721,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 728,
    "start_column": 10,
    "end_line": 728,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(\"-journal\")"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 276,
    "start_column": 3,
    "end_line": 276,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, &pTmp->zAlloc[iOfst], iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 299,
    "start_column": 3,
    "end_line": 299,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pTmp->zAlloc[iOfst], zBuf, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 172,
    "start_column": 13,
    "end_line": 172,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 200,
    "start_column": 6,
    "end_line": 200,
    "end_column": 9,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_onefile.c",
    "start_line": 803,
    "start_column": 13,
    "end_line": 803,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_mutex.c",
    "start_line": 102,
    "start_column": 29,
    "end_line": 102,
    "end_column": 57,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(sqlite3_mutex)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 357,
    "start_column": 23,
    "end_line": 357,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 386,
    "start_column": 7,
    "end_line": 386,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zUtf8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 857,
    "start_column": 26,
    "end_line": 857,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPattern)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 910,
    "start_column": 11,
    "end_line": 910,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFull)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 1251,
    "start_column": 11,
    "end_line": 1251,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFull)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 362,
    "start_column": 7,
    "end_line": 362,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pFile->zFilename, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 869,
    "start_column": 5,
    "end_line": 869,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)pGroup->zPattern, zPattern, nPattern+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 954,
    "start_column": 10,
    "end_line": 954,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_quota.c",
    "start_line": 1107,
    "start_column": 3,
    "end_line": 1107,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 222,
    "start_column": 5,
    "end_line": 222,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aNum, aOut, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 225,
    "start_column": 5,
    "end_line": 225,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aNum[4-nOut], aOut, nOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 432,
    "start_column": 7,
    "end_line": 432,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aOut[nOut], zVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 124,
    "start_column": 8,
    "end_line": 124,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 126,
    "start_column": 10,
    "end_line": 126,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 176,
    "start_column": 9,
    "end_line": 176,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_hexio.c",
    "start_line": 178,
    "start_column": 11,
    "end_line": 178,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 550,
    "start_column": 5,
    "end_line": 550,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aAlloc, &p->aBuffer[iBuf], nAvail)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 566,
    "start_column": 7,
    "end_line": 566,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aAlloc[nByte - nRem], aNext, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 974,
    "start_column": 5,
    "end_line": 974,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pKeyInfo, pCsr->pKeyInfo, szKeyInfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1478,
    "start_column": 5,
    "end_line": 1478,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuffer[p->iBufEnd], &pData[nData-nRem], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1862,
    "start_column": 3,
    "end_line": 1862,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(SRVAL(pNew), pVal->z, pVal->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 2705,
    "start_column": 3,
    "end_line": 2705,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->z, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1070,
    "start_column": 3,
    "end_line": 1070,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1075,
    "start_column": 3,
    "end_line": 1075,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1084,
    "start_column": 3,
    "end_line": 1084,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 1094,
    "start_column": 5,
    "end_line": 1094,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbesort.c",
    "start_line": 2607,
    "start_column": 26,
    "end_line": 2607,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 1324,
    "start_column": 3,
    "end_line": 1324,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pVar, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 1584,
    "start_column": 5,
    "end_line": 1584,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->z, pIn2->z, pIn2->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 1588,
    "start_column": 3,
    "end_line": 1588,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pOut->z[pIn2->n], pIn1->z, pIn1->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 1812,
    "start_column": 7,
    "end_line": 1812,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&uA, &iA, sizeof(uA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 1820,
    "start_column": 7,
    "end_line": 1820,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iA, &uA, sizeof(iA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 2816,
    "start_column": 7,
    "end_line": 2816,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDest->z, zData, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 3290,
    "start_column": 9,
    "end_line": 3290,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 546,
    "start_column": 5,
    "end_line": 546,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 548,
    "start_column": 5,
    "end_line": 548,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 550,
    "start_column": 5,
    "end_line": 550,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 552,
    "start_column": 5,
    "end_line": 552,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 554,
    "start_column": 5,
    "end_line": 554,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 557,
    "start_column": 5,
    "end_line": 557,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 560,
    "start_column": 5,
    "end_line": 560,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 566,
    "start_column": 5,
    "end_line": 566,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 568,
    "start_column": 32,
    "end_line": 568,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 571,
    "start_column": 3,
    "end_line": 571,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 574,
    "start_column": 5,
    "end_line": 574,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 576,
    "start_column": 3,
    "end_line": 576,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 723,
    "start_column": 7,
    "end_line": 723,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 731,
    "start_column": 22,
    "end_line": 731,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 732,
    "start_column": 11,
    "end_line": 732,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 737,
    "start_column": 44,
    "end_line": 737,
    "end_column": 50,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 7959,
    "start_column": 19,
    "end_line": 7959,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 676,
    "start_column": 14,
    "end_line": 676,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 694,
    "start_column": 12,
    "end_line": 694,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 696,
    "start_column": 12,
    "end_line": 696,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 904,
    "start_column": 26,
    "end_line": 904,
    "end_column": 29,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 906,
    "start_column": 12,
    "end_line": 906,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 908,
    "start_column": 14,
    "end_line": 908,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 8003,
    "start_column": 26,
    "end_line": 8003,
    "end_column": 29,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 8004,
    "start_column": 12,
    "end_line": 8004,
    "end_column": 15,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbe.c",
    "start_line": 8006,
    "start_column": 14,
    "end_line": 8006,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "ssL"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 92,
    "start_column": 7,
    "end_line": 92,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStr->z, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 143,
    "start_column": 3,
    "end_line": 143,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pB->aCounter, pA->aCounter, sizeof(pB->aCounter)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 399,
    "start_column": 16,
    "end_line": 399,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p4copy, zP4, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3810,
    "start_column": 7,
    "end_line": 3810,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&v, &pMem->u.r, sizeof(v)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3829,
    "start_column": 17,
    "end_line": 3829,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(buf, pMem->z, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3886,
    "start_column": 5,
    "end_line": 3886,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pMem->u.r, &x, sizeof(x)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 572,
    "start_column": 5,
    "end_line": 572,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 1851,
    "start_column": 3,
    "end_line": 1851,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 2209,
    "start_column": 11,
    "end_line": 2209,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3343,
    "start_column": 17,
    "end_line": 3343,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3345,
    "start_column": 7,
    "end_line": 3345,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3347,
    "start_column": 9,
    "end_line": 3347,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3349,
    "start_column": 7,
    "end_line": 3349,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3352,
    "start_column": 9,
    "end_line": 3352,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3354,
    "start_column": 26,
    "end_line": 3354,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3358,
    "start_column": 24,
    "end_line": 3358,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbeaux.c",
    "start_line": 3367,
    "start_column": 9,
    "end_line": 3367,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 539,
    "start_column": 7,
    "end_line": 539,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 541,
    "start_column": 7,
    "end_line": 541,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nBytes)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 597,
    "start_column": 11,
    "end_line": 597,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 599,
    "start_column": 7,
    "end_line": 599,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 605,
    "start_column": 3,
    "end_line": 605,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 609,
    "start_column": 7,
    "end_line": 609,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 614,
    "start_column": 7,
    "end_line": 614,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 619,
    "start_column": 7,
    "end_line": 619,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 624,
    "start_column": 7,
    "end_line": 624,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 626,
    "start_column": 7,
    "end_line": 626,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 632,
    "start_column": 5,
    "end_line": 632,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 634,
    "start_column": 7,
    "end_line": 634,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 637,
    "start_column": 5,
    "end_line": 637,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 641,
    "start_column": 5,
    "end_line": 641,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 643,
    "start_column": 7,
    "end_line": 643,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 646,
    "start_column": 5,
    "end_line": 646,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 648,
    "start_column": 3,
    "end_line": 648,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 649,
    "start_column": 3,
    "end_line": 649,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem3.c",
    "start_line": 650,
    "start_column": 3,
    "end_line": 650,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_superlock.c",
    "start_line": 77,
    "start_column": 18,
    "end_line": 77,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMode)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_superlock.c",
    "start_line": 333,
    "start_column": 9,
    "end_line": 333,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/sqliteInt.h",
    "start_line": 3985,
    "start_column": 31,
    "end_line": 3985,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(C)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/sqliteInt.h",
    "start_line": 4023,
    "start_column": 38,
    "end_line": 4023,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "alloca"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/sqliteInt.h",
    "start_line": 4024,
    "start_column": 45,
    "end_line": 4024,
    "end_column": 51,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "alloca"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_delete.c",
    "start_line": 48,
    "start_column": 13,
    "end_line": 48,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_delete.c",
    "start_line": 126,
    "start_column": 15,
    "end_line": 126,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_delete.c",
    "start_line": 50,
    "start_column": 31,
    "end_line": 50,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/bitvec.c",
    "start_line": 217,
    "start_column": 7,
    "end_line": 217,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiValues, p->u.aHash, sizeof(p->u.aHash)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/bitvec.c",
    "start_line": 257,
    "start_column": 5,
    "end_line": 257,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aiValues, p->u.aHash, sizeof(p->u.aHash)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 1097,
    "start_column": 33,
    "end_line": 1097,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 114,
    "start_column": 5,
    "end_line": 114,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, (char*)&p->u, (p->flags&MEM_Int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 267,
    "start_column": 5,
    "end_line": 267,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem->zMalloc, pMem->z, pMem->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 457,
    "start_column": 3,
    "end_line": 457,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem, &t, sizeof(t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 1007,
    "start_column": 3,
    "end_line": 1007,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 1024,
    "start_column": 3,
    "end_line": 1024,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, MEMCELLSIZE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 1048,
    "start_column": 3,
    "end_line": 1048,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo, pFrom, sizeof(Mem)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vdbemem.c",
    "start_line": 1122,
    "start_column": 5,
    "end_line": 1122,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMem->z, z, nAlloc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 324,
    "start_column": 5,
    "end_line": 324,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->u.aRowid, pData, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 351,
    "start_column": 3,
    "end_line": 351,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anEq, pFrom->anEq, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 352,
    "start_column": 3,
    "end_line": 352,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anLt, pFrom->anLt, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 353,
    "start_column": 3,
    "end_line": 353,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTo->anDLt, pFrom->anDLt, sizeof(tRowcnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 1042,
    "start_column": 5,
    "end_line": 1042,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStat1->zName, \"sqlite_stat1\", 13)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 1827,
    "start_column": 7,
    "end_line": 1827,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSample->p, sqlite3_column_blob(pStmt, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/analyze.c",
    "start_line": 605,
    "start_column": 5,
    "end_line": 605,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/tokenize.c",
    "start_line": 580,
    "start_column": 5,
    "end_line": 580,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 406,
    "start_column": 5,
    "end_line": 406,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pPrior, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 527,
    "start_column": 11,
    "end_line": 527,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 529,
    "start_column": 7,
    "end_line": 529,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 538,
    "start_column": 5,
    "end_line": 538,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 540,
    "start_column": 3,
    "end_line": 540,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 541,
    "start_column": 3,
    "end_line": 541,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 542,
    "start_column": 3,
    "end_line": 542,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 543,
    "start_column": 3,
    "end_line": 543,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 544,
    "start_column": 3,
    "end_line": 544,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 545,
    "start_column": 3,
    "end_line": 545,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 546,
    "start_column": 3,
    "end_line": 546,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/mem5.c",
    "start_line": 547,
    "start_column": 3,
    "end_line": 547,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_multiplex.c",
    "start_line": 623,
    "start_column": 22,
    "end_line": 623,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_multiplex.c",
    "start_line": 227,
    "start_column": 3,
    "end_line": 227,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zBase, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test_multiplex.c",
    "start_line": 519,
    "start_column": 7,
    "end_line": 519,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pGroup->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 893,
    "start_column": 7,
    "end_line": 893,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&backupInfo, pInfo, sizeof(backupInfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 1294,
    "start_column": 7,
    "end_line": 1294,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[j], zRep, nRep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 1300,
    "start_column": 3,
    "end_line": 1300,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[j], &zStr[i], nStr-i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 1773,
    "start_column": 7,
    "end_line": 1773,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 1972,
    "start_column": 14,
    "end_line": 1972,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 2038,
    "start_column": 7,
    "end_line": 2038,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 2042,
    "start_column": 9,
    "end_line": 2042,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/func.c",
    "start_line": 2044,
    "start_column": 7,
    "end_line": 2044,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vtab.c",
    "start_line": 60,
    "start_column": 5,
    "end_line": 60,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/vtab.c",
    "start_line": 1157,
    "start_column": 3,
    "end_line": 1157,
    "end_column": 68,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)&pNew[1], pDef->zName, sqlite3Strlen30(pDef->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/backup.c",
    "start_line": 276,
    "start_column": 7,
    "end_line": 276,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/expr.c",
    "start_line": 828,
    "start_column": 25,
    "end_line": 828,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->u.zToken, pToken->z, pToken->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/expr.c",
    "start_line": 1309,
    "start_column": 7,
    "end_line": 1309,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAlloc, p, nNewSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/expr.c",
    "start_line": 1312,
    "start_column": 7,
    "end_line": 1312,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zAlloc, p, nSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/expr.c",
    "start_line": 1330,
    "start_column": 7,
    "end_line": 1330,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zToken, p->u.zToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/resolve.c",
    "start_line": 100,
    "start_column": 5,
    "end_line": 100,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pExpr, pDup, sizeof(*pExpr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 526,
    "start_column": 16,
    "end_line": 526,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 637,
    "start_column": 18,
    "end_line": 637,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zScript)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 435,
    "start_column": 3,
    "end_line": 435,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, sqlite3PagerGetData(pPage), sizeof(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 529,
    "start_column": 3,
    "end_line": 529,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zFile, argv[2], nFile+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 589,
    "start_column": 5,
    "end_line": 589,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(faultSimScript+faultSimScriptSize, \"0\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 603,
    "start_column": 5,
    "end_line": 603,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(faultSimScript+faultSimScriptSize, zInt+i+1, sizeof(zInt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 650,
    "start_column": 5,
    "end_line": 650,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(faultSimScript, zScript, nScript)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 645,
    "start_column": 22,
    "end_line": 645,
    "end_column": 43,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nScript+100 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 490,
    "start_column": 3,
    "end_line": 490,
    "end_column": 43,
    "rule_id": "DS111237",
    "rule_name": "Banned C function detected (strncpy)",
    "severity": 2,
    "description": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination.",
    "match": "strncpy(pData, argv[2], test_pagesize-1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 607,
    "start_column": 5,
    "end_line": 607,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 610,
    "start_column": 10,
    "end_line": 610,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/test2.c",
    "start_line": 685,
    "start_column": 22,
    "end_line": 685,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/malloc.c",
    "start_line": 712,
    "start_column": 7,
    "end_line": 712,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/malloc.c",
    "start_line": 715,
    "start_column": 5,
    "end_line": 715,
    "end_column": 23,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/malloc.c",
    "start_line": 726,
    "start_column": 5,
    "end_line": 726,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, z, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/trigger.c",
    "start_line": 423,
    "start_column": 5,
    "end_line": 423,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pName->z, pName->n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pcache.c",
    "start_line": 84,
    "start_column": 8,
    "end_line": 84,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pcache.c",
    "start_line": 86,
    "start_column": 28,
    "end_line": 86,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/pcache.c",
    "start_line": 87,
    "start_column": 8,
    "end_line": 87,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 1350,
    "start_column": 5,
    "end_line": 1350,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDbgBuf, zBuf, nMin)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 1366,
    "start_column": 5,
    "end_line": 1366,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDbgBuf, zBuf, nMin)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 2745,
    "start_column": 7,
    "end_line": 2745,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &((u8 *)(pFile->pMapRegion))[offset], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 2823,
    "start_column": 7,
    "end_line": 2823,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&((u8 *)(pFile->pMapRegion))[offset], pBuf, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 1367,
    "start_column": 5,
    "end_line": 1367,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 1369,
    "start_column": 5,
    "end_line": 1369,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 2197,
    "start_column": 20,
    "end_line": 2197,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "localtime"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 4783,
    "start_column": 34,
    "end_line": 4783,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 4784,
    "start_column": 34,
    "end_line": 4784,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 4785,
    "start_column": 34,
    "end_line": 4785,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 4786,
    "start_column": 34,
    "end_line": 4786,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 4787,
    "start_column": 34,
    "end_line": 4787,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 953,
    "start_column": 10,
    "end_line": 953,
    "end_column": 13,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/os_win.c",
    "start_line": 1391,
    "start_column": 4,
    "end_line": 1391,
    "end_column": 7,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/src/whereexpr.c",
    "start_line": 75,
    "start_column": 5,
    "end_line": 75,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWC->a, pOld, sizeof(pWC->a[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 122,
    "start_column": 11,
    "end_line": 122,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 47,
    "start_column": 5,
    "end_line": 47,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 52,
    "start_column": 5,
    "end_line": 52,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 60,
    "start_column": 5,
    "end_line": 60,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 66,
    "start_column": 18,
    "end_line": 66,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 72,
    "start_column": 5,
    "end_line": 72,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 73,
    "start_column": 5,
    "end_line": 73,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 74,
    "start_column": 5,
    "end_line": 74,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 75,
    "start_column": 5,
    "end_line": 75,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 76,
    "start_column": 5,
    "end_line": 76,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 79,
    "start_column": 30,
    "end_line": 79,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 80,
    "start_column": 5,
    "end_line": 80,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 84,
    "start_column": 7,
    "end_line": 84,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 111,
    "start_column": 9,
    "end_line": 111,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 113,
    "start_column": 9,
    "end_line": 113,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 124,
    "start_column": 11,
    "end_line": 124,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 127,
    "start_column": 11,
    "end_line": 127,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 130,
    "start_column": 9,
    "end_line": 130,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 132,
    "start_column": 11,
    "end_line": 132,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 134,
    "start_column": 9,
    "end_line": 134,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 136,
    "start_column": 9,
    "end_line": 136,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 143,
    "start_column": 13,
    "end_line": 143,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 145,
    "start_column": 13,
    "end_line": 145,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 147,
    "start_column": 13,
    "end_line": 147,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 149,
    "start_column": 13,
    "end_line": 149,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 152,
    "start_column": 9,
    "end_line": 152,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showstat4.c",
    "start_line": 157,
    "start_column": 5,
    "end_line": 157,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 189,
    "start_column": 10,
    "end_line": 189,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nSql+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 63,
    "start_column": 5,
    "end_line": 63,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 65,
    "start_column": 16,
    "end_line": 65,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 71,
    "start_column": 5,
    "end_line": 71,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 80,
    "start_column": 7,
    "end_line": 80,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 88,
    "start_column": 7,
    "end_line": 88,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 137,
    "start_column": 26,
    "end_line": 137,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 144,
    "start_column": 9,
    "end_line": 144,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 150,
    "start_column": 7,
    "end_line": 150,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 151,
    "start_column": 32,
    "end_line": 151,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 152,
    "start_column": 7,
    "end_line": 152,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 154,
    "start_column": 9,
    "end_line": 154,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 174,
    "start_column": 4,
    "end_line": 174,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 186,
    "start_column": 8,
    "end_line": 186,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 194,
    "start_column": 3,
    "end_line": 194,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 203,
    "start_column": 16,
    "end_line": 203,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 233,
    "start_column": 16,
    "end_line": 233,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 235,
    "start_column": 3,
    "end_line": 235,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 236,
    "start_column": 3,
    "end_line": 236,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 237,
    "start_column": 3,
    "end_line": 237,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 238,
    "start_column": 3,
    "end_line": 238,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 239,
    "start_column": 3,
    "end_line": 239,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 240,
    "start_column": 3,
    "end_line": 240,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 241,
    "start_column": 3,
    "end_line": 241,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 242,
    "start_column": 3,
    "end_line": 242,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 246,
    "start_column": 3,
    "end_line": 246,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 247,
    "start_column": 3,
    "end_line": 247,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 248,
    "start_column": 3,
    "end_line": 248,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 249,
    "start_column": 3,
    "end_line": 249,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8.c",
    "start_line": 255,
    "start_column": 5,
    "end_line": 255,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/enlargedb.c",
    "start_line": 33,
    "start_column": 5,
    "end_line": 33,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/enlargedb.c",
    "start_line": 36,
    "start_column": 7,
    "end_line": 36,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/enlargedb.c",
    "start_line": 38,
    "start_column": 5,
    "end_line": 38,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/enlargedb.c",
    "start_line": 62,
    "start_column": 3,
    "end_line": 62,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/enlargedb.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/GetFile.cs",
    "start_line": 403,
    "start_column": 22,
    "end_line": 403,
    "end_column": 42,
    "rule_id": "DS440020",
    "rule_name": ".NET - Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": ".NET- Do not hardcode SSL/TLS versions within an application.",
    "match": "SecurityProtocolType"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/max-limits.c",
    "start_line": 37,
    "start_column": 7,
    "end_line": 37,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/libvers.c",
    "start_line": 12,
    "start_column": 3,
    "end_line": 12,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/libvers.c",
    "start_line": 13,
    "start_column": 3,
    "end_line": 13,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 56,
    "start_column": 12,
    "end_line": 56,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 64,
    "start_column": 15,
    "end_line": 64,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 30,
    "start_column": 25,
    "end_line": 30,
    "end_column": 34,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 20,
    "start_column": 3,
    "end_line": 20,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 35,
    "start_column": 5,
    "end_line": 35,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 38,
    "start_column": 5,
    "end_line": 38,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 55,
    "start_column": 3,
    "end_line": 55,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 59,
    "start_column": 7,
    "end_line": 59,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 61,
    "start_column": 7,
    "end_line": 61,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 67,
    "start_column": 3,
    "end_line": 67,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 78,
    "start_column": 3,
    "end_line": 78,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 102,
    "start_column": 3,
    "end_line": 102,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 111,
    "start_column": 5,
    "end_line": 111,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 114,
    "start_column": 8,
    "end_line": 114,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 116,
    "start_column": 5,
    "end_line": 116,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showjournal.c",
    "start_line": 121,
    "start_column": 3,
    "end_line": 121,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 46,
    "start_column": 11,
    "end_line": 46,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 50,
    "start_column": 9,
    "end_line": 50,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n*2 + 2 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 122,
    "start_column": 10,
    "end_line": 122,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nSql+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 75,
    "start_column": 3,
    "end_line": 75,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 76,
    "start_column": 3,
    "end_line": 76,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 82,
    "start_column": 3,
    "end_line": 82,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 89,
    "start_column": 5,
    "end_line": 89,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 95,
    "start_column": 5,
    "end_line": 95,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 114,
    "start_column": 5,
    "end_line": 114,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 119,
    "start_column": 8,
    "end_line": 119,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 127,
    "start_column": 3,
    "end_line": 127,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 134,
    "start_column": 3,
    "end_line": 134,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 160,
    "start_column": 3,
    "end_line": 160,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 161,
    "start_column": 3,
    "end_line": 161,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 162,
    "start_column": 3,
    "end_line": 162,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 163,
    "start_column": 3,
    "end_line": 163,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 164,
    "start_column": 3,
    "end_line": 164,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 165,
    "start_column": 3,
    "end_line": 165,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 166,
    "start_column": 3,
    "end_line": 166,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 167,
    "start_column": 3,
    "end_line": 167,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest16.c",
    "start_line": 168,
    "start_column": 3,
    "end_line": 168,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 185,
    "start_column": 12,
    "end_line": 185,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 193,
    "start_column": 15,
    "end_line": 193,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 341,
    "start_column": 14,
    "end_line": 341,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDesc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 403,
    "start_column": 13,
    "end_line": 403,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDesc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 410,
    "start_column": 14,
    "end_line": 410,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 420,
    "start_column": 14,
    "end_line": 420,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 427,
    "start_column": 14,
    "end_line": 427,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 502,
    "start_column": 16,
    "end_line": 502,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 503,
    "start_column": 20,
    "end_line": 503,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zMap[cofst+1], zBuf, j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 122,
    "start_column": 11,
    "end_line": 122,
    "end_column": 24,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 483,
    "start_column": 12,
    "end_line": 483,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(pagesize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 110,
    "start_column": 3,
    "end_line": 110,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 154,
    "start_column": 5,
    "end_line": 154,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 157,
    "start_column": 9,
    "end_line": 157,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 159,
    "start_column": 9,
    "end_line": 159,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 164,
    "start_column": 9,
    "end_line": 164,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 166,
    "start_column": 9,
    "end_line": 166,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 169,
    "start_column": 5,
    "end_line": 169,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 184,
    "start_column": 3,
    "end_line": 184,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 188,
    "start_column": 7,
    "end_line": 188,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 190,
    "start_column": 7,
    "end_line": 190,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 196,
    "start_column": 5,
    "end_line": 196,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 198,
    "start_column": 5,
    "end_line": 198,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 200,
    "start_column": 3,
    "end_line": 200,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 210,
    "start_column": 3,
    "end_line": 210,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 236,
    "start_column": 3,
    "end_line": 236,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 262,
    "start_column": 5,
    "end_line": 262,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 264,
    "start_column": 3,
    "end_line": 264,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 275,
    "start_column": 7,
    "end_line": 275,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 278,
    "start_column": 7,
    "end_line": 278,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 313,
    "start_column": 7,
    "end_line": 313,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 324,
    "start_column": 7,
    "end_line": 324,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 326,
    "start_column": 7,
    "end_line": 326,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 329,
    "start_column": 7,
    "end_line": 329,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 331,
    "start_column": 7,
    "end_line": 331,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 335,
    "start_column": 9,
    "end_line": 335,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 337,
    "start_column": 9,
    "end_line": 337,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 402,
    "start_column": 5,
    "end_line": 402,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 409,
    "start_column": 5,
    "end_line": 409,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 419,
    "start_column": 5,
    "end_line": 419,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 426,
    "start_column": 5,
    "end_line": 426,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 466,
    "start_column": 3,
    "end_line": 466,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 480,
    "start_column": 5,
    "end_line": 480,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 501,
    "start_column": 7,
    "end_line": 501,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 505,
    "start_column": 5,
    "end_line": 505,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 509,
    "start_column": 7,
    "end_line": 509,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 519,
    "start_column": 5,
    "end_line": 519,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 524,
    "start_column": 5,
    "end_line": 524,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 533,
    "start_column": 3,
    "end_line": 533,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 536,
    "start_column": 5,
    "end_line": 536,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 540,
    "start_column": 3,
    "end_line": 540,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 558,
    "start_column": 9,
    "end_line": 558,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showwal.c",
    "start_line": 595,
    "start_column": 9,
    "end_line": 595,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 100,
    "start_column": 9,
    "end_line": 100,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 100,
    "start_column": 23,
    "end_line": 100,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zColumn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 101,
    "start_column": 41,
    "end_line": 101,
    "end_column": 53,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 54,
    "start_column": 5,
    "end_line": 54,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 156,
    "start_column": 5,
    "end_line": 156,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 262,
    "start_column": 7,
    "end_line": 262,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 277,
    "start_column": 5,
    "end_line": 277,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 307,
    "start_column": 5,
    "end_line": 307,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 312,
    "start_column": 5,
    "end_line": 312,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 318,
    "start_column": 9,
    "end_line": 318,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 320,
    "start_column": 5,
    "end_line": 320,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/offsets.c",
    "start_line": 325,
    "start_column": 5,
    "end_line": 325,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 71,
    "start_column": 8,
    "end_line": 71,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 75,
    "start_column": 11,
    "end_line": 75,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 84,
    "start_column": 11,
    "end_line": 84,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 111,
    "start_column": 7,
    "end_line": 111,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iX, &uX, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 113,
    "start_column": 7,
    "end_line": 113,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&uX, &iX, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 62,
    "start_column": 5,
    "end_line": 62,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 76,
    "start_column": 9,
    "end_line": 76,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 85,
    "start_column": 9,
    "end_line": 85,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 93,
    "start_column": 7,
    "end_line": 93,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 104,
    "start_column": 9,
    "end_line": 104,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 117,
    "start_column": 3,
    "end_line": 117,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 119,
    "start_column": 5,
    "end_line": 119,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/varint.c",
    "start_line": 121,
    "start_column": 3,
    "end_line": 121,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 60,
    "start_column": 32,
    "end_line": 60,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(X)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3484,
    "start_column": 14,
    "end_line": 3484,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(sp->name)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 89,
    "start_column": 3,
    "end_line": 89,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zBuf[*pnUsed], zIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2657,
    "start_column": 11,
    "end_line": 2657,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, zLine, nLine)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2672,
    "start_column": 9,
    "end_line": 2672,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, zNew, nNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1536,
    "start_column": 19,
    "end_line": 1536,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1550,
    "start_column": 24,
    "end_line": 1550,
    "end_column": 46,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1560,
    "start_column": 32,
    "end_line": 1560,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2976,
    "start_column": 21,
    "end_line": 2976,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( filesize+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3188,
    "start_column": 17,
    "end_line": 3188,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sz )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3531,
    "start_column": 20,
    "end_line": 3531,
    "end_column": 46,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(argv0)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3537,
    "start_column": 24,
    "end_line": 3537,
    "end_column": 53,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(pathlist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3538,
    "start_column": 20,
    "end_line": 3538,
    "end_column": 49,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(pathlist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4108,
    "start_column": 18,
    "end_line": 4108,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( maxdtlength*2 + 1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4157,
    "start_column": 28,
    "end_line": 4157,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(stddt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5214,
    "start_column": 28,
    "end_line": 5214,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( lemonStrlen(y)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5250,
    "start_column": 23,
    "end_line": 5250,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(struct s_x1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5417,
    "start_column": 23,
    "end_line": 5417,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(struct s_x2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5614,
    "start_column": 23,
    "end_line": 5614,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(struct s_x3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5754,
    "start_column": 23,
    "end_line": 5754,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(struct s_x4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 137,
    "start_column": 9,
    "end_line": 137,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 499,
    "start_column": 7,
    "end_line": 499,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 625,
    "start_column": 5,
    "end_line": 625,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 645,
    "start_column": 7,
    "end_line": 645,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 695,
    "start_column": 7,
    "end_line": 695,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 766,
    "start_column": 3,
    "end_line": 766,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 768,
    "start_column": 5,
    "end_line": 768,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 770,
    "start_column": 3,
    "end_line": 770,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1308,
    "start_column": 7,
    "end_line": 1308,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1502,
    "start_column": 3,
    "end_line": 1502,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1504,
    "start_column": 3,
    "end_line": 1504,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1506,
    "start_column": 3,
    "end_line": 1506,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1517,
    "start_column": 3,
    "end_line": 1517,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1532,
    "start_column": 5,
    "end_line": 1532,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1538,
    "start_column": 5,
    "end_line": 1538,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1552,
    "start_column": 5,
    "end_line": 1552,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1622,
    "start_column": 3,
    "end_line": 1622,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1674,
    "start_column": 6,
    "end_line": 1674,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1678,
    "start_column": 5,
    "end_line": 1678,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1699,
    "start_column": 5,
    "end_line": 1699,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1709,
    "start_column": 3,
    "end_line": 1709,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1780,
    "start_column": 5,
    "end_line": 1780,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1792,
    "start_column": 5,
    "end_line": 1792,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1935,
    "start_column": 19,
    "end_line": 1935,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1938,
    "start_column": 5,
    "end_line": 1938,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1942,
    "start_column": 25,
    "end_line": 1942,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1944,
    "start_column": 5,
    "end_line": 1944,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1946,
    "start_column": 5,
    "end_line": 1946,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 1986,
    "start_column": 7,
    "end_line": 1986,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2000,
    "start_column": 7,
    "end_line": 2000,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2028,
    "start_column": 7,
    "end_line": 2028,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2038,
    "start_column": 11,
    "end_line": 2038,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2048,
    "start_column": 13,
    "end_line": 2048,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2060,
    "start_column": 13,
    "end_line": 2060,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2115,
    "start_column": 5,
    "end_line": 2115,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2178,
    "start_column": 9,
    "end_line": 2178,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2182,
    "start_column": 9,
    "end_line": 2182,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2187,
    "start_column": 9,
    "end_line": 2187,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2192,
    "start_column": 9,
    "end_line": 2192,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2260,
    "start_column": 3,
    "end_line": 2260,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2873,
    "start_column": 5,
    "end_line": 2873,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2874,
    "start_column": 5,
    "end_line": 2874,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2939,
    "start_column": 5,
    "end_line": 2939,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2967,
    "start_column": 8,
    "end_line": 2967,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2975,
    "start_column": 3,
    "end_line": 2975,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 2998,
    "start_column": 5,
    "end_line": 2998,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3118,
    "start_column": 7,
    "end_line": 3118,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3190,
    "start_column": 5,
    "end_line": 3190,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3217,
    "start_column": 8,
    "end_line": 3217,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3219,
    "start_column": 5,
    "end_line": 3219,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3230,
    "start_column": 3,
    "end_line": 3230,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3232,
    "start_column": 3,
    "end_line": 3232,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3236,
    "start_column": 7,
    "end_line": 3236,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3238,
    "start_column": 9,
    "end_line": 3238,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3241,
    "start_column": 7,
    "end_line": 3241,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3254,
    "start_column": 3,
    "end_line": 3254,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3265,
    "start_column": 5,
    "end_line": 3265,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3269,
    "start_column": 7,
    "end_line": 3269,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3271,
    "start_column": 5,
    "end_line": 3271,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3275,
    "start_column": 5,
    "end_line": 3275,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3276,
    "start_column": 23,
    "end_line": 3276,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3278,
    "start_column": 5,
    "end_line": 3278,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3287,
    "start_column": 3,
    "end_line": 3287,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3289,
    "start_column": 22,
    "end_line": 3289,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3293,
    "start_column": 7,
    "end_line": 3293,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3295,
    "start_column": 9,
    "end_line": 3295,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3298,
    "start_column": 7,
    "end_line": 3298,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3320,
    "start_column": 3,
    "end_line": 3320,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3323,
    "start_column": 7,
    "end_line": 3323,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3327,
    "start_column": 3,
    "end_line": 3327,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3337,
    "start_column": 5,
    "end_line": 3337,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3339,
    "start_column": 5,
    "end_line": 3339,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3357,
    "start_column": 7,
    "end_line": 3357,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3362,
    "start_column": 7,
    "end_line": 3362,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3368,
    "start_column": 7,
    "end_line": 3368,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3373,
    "start_column": 7,
    "end_line": 3373,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3376,
    "start_column": 7,
    "end_line": 3376,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3380,
    "start_column": 7,
    "end_line": 3380,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3384,
    "start_column": 7,
    "end_line": 3384,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3389,
    "start_column": 9,
    "end_line": 3389,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3397,
    "start_column": 9,
    "end_line": 3397,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3408,
    "start_column": 5,
    "end_line": 3408,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3427,
    "start_column": 5,
    "end_line": 3427,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3434,
    "start_column": 9,
    "end_line": 3434,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3436,
    "start_column": 9,
    "end_line": 3436,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3439,
    "start_column": 7,
    "end_line": 3439,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3448,
    "start_column": 5,
    "end_line": 3448,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3450,
    "start_column": 35,
    "end_line": 3450,
    "end_column": 42,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3452,
    "start_column": 5,
    "end_line": 3452,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3454,
    "start_column": 3,
    "end_line": 3454,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3455,
    "start_column": 3,
    "end_line": 3455,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3456,
    "start_column": 3,
    "end_line": 3456,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3462,
    "start_column": 5,
    "end_line": 3462,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3464,
    "start_column": 7,
    "end_line": 3464,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3466,
    "start_column": 9,
    "end_line": 3466,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3470,
    "start_column": 11,
    "end_line": 3470,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3474,
    "start_column": 23,
    "end_line": 3474,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3475,
    "start_column": 5,
    "end_line": 3475,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3477,
    "start_column": 3,
    "end_line": 3477,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3478,
    "start_column": 3,
    "end_line": 3478,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3479,
    "start_column": 3,
    "end_line": 3479,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3486,
    "start_column": 7,
    "end_line": 3486,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3490,
    "start_column": 7,
    "end_line": 3490,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3493,
    "start_column": 5,
    "end_line": 3493,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3496,
    "start_column": 13,
    "end_line": 3496,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3497,
    "start_column": 3,
    "end_line": 3497,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3498,
    "start_column": 3,
    "end_line": 3498,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3500,
    "start_column": 5,
    "end_line": 3500,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3502,
    "start_column": 5,
    "end_line": 3502,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3504,
    "start_column": 7,
    "end_line": 3504,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3507,
    "start_column": 5,
    "end_line": 3507,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3535,
    "start_column": 16,
    "end_line": 3535,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3609,
    "start_column": 26,
    "end_line": 3609,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3610,
    "start_column": 11,
    "end_line": 3610,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3616,
    "start_column": 5,
    "end_line": 3616,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3633,
    "start_column": 7,
    "end_line": 3633,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3638,
    "start_column": 10,
    "end_line": 3638,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3640,
    "start_column": 7,
    "end_line": 3640,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3662,
    "start_column": 5,
    "end_line": 3662,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3667,
    "start_column": 8,
    "end_line": 3667,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3669,
    "start_column": 5,
    "end_line": 3669,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3679,
    "start_column": 3,
    "end_line": 3679,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3685,
    "start_column": 3,
    "end_line": 3685,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3722,
    "start_column": 4,
    "end_line": 3722,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3725,
    "start_column": 4,
    "end_line": 3725,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3733,
    "start_column": 4,
    "end_line": 3733,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3739,
    "start_column": 6,
    "end_line": 3739,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3746,
    "start_column": 2,
    "end_line": 3746,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3750,
    "start_column": 2,
    "end_line": 3750,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3896,
    "start_column": 5,
    "end_line": 3896,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 3899,
    "start_column": 5,
    "end_line": 3899,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4035,
    "start_column": 4,
    "end_line": 4035,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4045,
    "start_column": 4,
    "end_line": 4045,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4047,
    "start_column": 4,
    "end_line": 4047,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4056,
    "start_column": 4,
    "end_line": 4056,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4061,
    "start_column": 4,
    "end_line": 4061,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4093,
    "start_column": 5,
    "end_line": 4093,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4110,
    "start_column": 5,
    "end_line": 4110,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4159,
    "start_column": 9,
    "end_line": 4159,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4169,
    "start_column": 17,
    "end_line": 4169,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4170,
    "start_column": 3,
    "end_line": 4170,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4172,
    "start_column": 17,
    "end_line": 4172,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4173,
    "start_column": 3,
    "end_line": 4173,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4174,
    "start_column": 3,
    "end_line": 4174,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4175,
    "start_column": 3,
    "end_line": 4175,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4178,
    "start_column": 5,
    "end_line": 4178,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4182,
    "start_column": 5,
    "end_line": 4182,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4186,
    "start_column": 3,
    "end_line": 4186,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4253,
    "start_column": 3,
    "end_line": 4253,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4257,
    "start_column": 7,
    "end_line": 4257,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4260,
    "start_column": 7,
    "end_line": 4260,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4262,
    "start_column": 9,
    "end_line": 4262,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4314,
    "start_column": 5,
    "end_line": 4314,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4325,
    "start_column": 7,
    "end_line": 4325,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4332,
    "start_column": 9,
    "end_line": 4332,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4334,
    "start_column": 9,
    "end_line": 4334,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4337,
    "start_column": 5,
    "end_line": 4337,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4351,
    "start_column": 7,
    "end_line": 4351,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4356,
    "start_column": 7,
    "end_line": 4356,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4360,
    "start_column": 11,
    "end_line": 4360,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4367,
    "start_column": 13,
    "end_line": 4367,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4375,
    "start_column": 5,
    "end_line": 4375,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4384,
    "start_column": 5,
    "end_line": 4384,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4392,
    "start_column": 5,
    "end_line": 4392,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4396,
    "start_column": 7,
    "end_line": 4396,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4399,
    "start_column": 5,
    "end_line": 4399,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4404,
    "start_column": 3,
    "end_line": 4404,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4406,
    "start_column": 3,
    "end_line": 4406,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4407,
    "start_column": 3,
    "end_line": 4407,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4410,
    "start_column": 5,
    "end_line": 4410,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4414,
    "start_column": 3,
    "end_line": 4414,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4416,
    "start_column": 5,
    "end_line": 4416,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4418,
    "start_column": 5,
    "end_line": 4418,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4420,
    "start_column": 3,
    "end_line": 4420,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4422,
    "start_column": 5,
    "end_line": 4422,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4429,
    "start_column": 5,
    "end_line": 4429,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4430,
    "start_column": 5,
    "end_line": 4430,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4431,
    "start_column": 5,
    "end_line": 4431,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4432,
    "start_column": 5,
    "end_line": 4432,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4434,
    "start_column": 5,
    "end_line": 4434,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4437,
    "start_column": 5,
    "end_line": 4437,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4438,
    "start_column": 5,
    "end_line": 4438,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4439,
    "start_column": 5,
    "end_line": 4439,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4440,
    "start_column": 5,
    "end_line": 4440,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4441,
    "start_column": 5,
    "end_line": 4441,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4447,
    "start_column": 5,
    "end_line": 4447,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4448,
    "start_column": 5,
    "end_line": 4448,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4449,
    "start_column": 5,
    "end_line": 4449,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4450,
    "start_column": 5,
    "end_line": 4450,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4452,
    "start_column": 5,
    "end_line": 4452,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4455,
    "start_column": 5,
    "end_line": 4455,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4456,
    "start_column": 5,
    "end_line": 4456,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4457,
    "start_column": 5,
    "end_line": 4457,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4458,
    "start_column": 5,
    "end_line": 4458,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4459,
    "start_column": 5,
    "end_line": 4459,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4462,
    "start_column": 5,
    "end_line": 4462,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4465,
    "start_column": 5,
    "end_line": 4465,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4466,
    "start_column": 5,
    "end_line": 4466,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4469,
    "start_column": 5,
    "end_line": 4469,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4478,
    "start_column": 5,
    "end_line": 4478,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4495,
    "start_column": 3,
    "end_line": 4495,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4528,
    "start_column": 7,
    "end_line": 4528,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4550,
    "start_column": 3,
    "end_line": 4550,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4551,
    "start_column": 3,
    "end_line": 4551,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4552,
    "start_column": 3,
    "end_line": 4552,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4554,
    "start_column": 3,
    "end_line": 4554,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4555,
    "start_column": 3,
    "end_line": 4555,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4557,
    "start_column": 3,
    "end_line": 4557,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4559,
    "start_column": 3,
    "end_line": 4559,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4560,
    "start_column": 3,
    "end_line": 4560,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4561,
    "start_column": 3,
    "end_line": 4561,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4562,
    "start_column": 3,
    "end_line": 4562,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4563,
    "start_column": 3,
    "end_line": 4563,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4565,
    "start_column": 3,
    "end_line": 4565,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4583,
    "start_column": 3,
    "end_line": 4583,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4584,
    "start_column": 3,
    "end_line": 4584,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4588,
    "start_column": 16,
    "end_line": 4588,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4589,
    "start_column": 5,
    "end_line": 4589,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4591,
    "start_column": 7,
    "end_line": 4591,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4597,
    "start_column": 3,
    "end_line": 4597,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4602,
    "start_column": 3,
    "end_line": 4602,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4606,
    "start_column": 16,
    "end_line": 4606,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4607,
    "start_column": 5,
    "end_line": 4607,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4609,
    "start_column": 7,
    "end_line": 4609,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4620,
    "start_column": 16,
    "end_line": 4620,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4621,
    "start_column": 5,
    "end_line": 4621,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4623,
    "start_column": 7,
    "end_line": 4623,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4630,
    "start_column": 14,
    "end_line": 4630,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4631,
    "start_column": 3,
    "end_line": 4631,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4636,
    "start_column": 3,
    "end_line": 4636,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4637,
    "start_column": 3,
    "end_line": 4637,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4638,
    "start_column": 3,
    "end_line": 4638,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4639,
    "start_column": 3,
    "end_line": 4639,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4648,
    "start_column": 16,
    "end_line": 4648,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4649,
    "start_column": 5,
    "end_line": 4649,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4651,
    "start_column": 7,
    "end_line": 4651,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4657,
    "start_column": 3,
    "end_line": 4657,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4662,
    "start_column": 3,
    "end_line": 4662,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4663,
    "start_column": 3,
    "end_line": 4663,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4664,
    "start_column": 3,
    "end_line": 4664,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4665,
    "start_column": 3,
    "end_line": 4665,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4673,
    "start_column": 16,
    "end_line": 4673,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4674,
    "start_column": 5,
    "end_line": 4674,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4676,
    "start_column": 7,
    "end_line": 4676,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4682,
    "start_column": 3,
    "end_line": 4682,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4685,
    "start_column": 3,
    "end_line": 4685,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4690,
    "start_column": 16,
    "end_line": 4690,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4692,
    "start_column": 7,
    "end_line": 4692,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4694,
    "start_column": 7,
    "end_line": 4694,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4697,
    "start_column": 7,
    "end_line": 4697,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4703,
    "start_column": 3,
    "end_line": 4703,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4717,
    "start_column": 9,
    "end_line": 4717,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4719,
    "start_column": 9,
    "end_line": 4719,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4731,
    "start_column": 5,
    "end_line": 4731,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4741,
    "start_column": 5,
    "end_line": 4741,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4743,
    "start_column": 5,
    "end_line": 4743,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4757,
    "start_column": 9,
    "end_line": 4757,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4760,
    "start_column": 7,
    "end_line": 4760,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4765,
    "start_column": 7,
    "end_line": 4765,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4776,
    "start_column": 9,
    "end_line": 4776,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4779,
    "start_column": 7,
    "end_line": 4779,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4785,
    "start_column": 5,
    "end_line": 4785,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4791,
    "start_column": 5,
    "end_line": 4791,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4799,
    "start_column": 10,
    "end_line": 4799,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4806,
    "start_column": 5,
    "end_line": 4806,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4821,
    "start_column": 5,
    "end_line": 4821,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4827,
    "start_column": 5,
    "end_line": 4827,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4839,
    "start_column": 5,
    "end_line": 4839,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4849,
    "start_column": 5,
    "end_line": 4849,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4855,
    "start_column": 9,
    "end_line": 4855,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4862,
    "start_column": 5,
    "end_line": 4862,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4867,
    "start_column": 3,
    "end_line": 4867,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4871,
    "start_column": 5,
    "end_line": 4871,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4877,
    "start_column": 7,
    "end_line": 4877,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4879,
    "start_column": 7,
    "end_line": 4879,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4883,
    "start_column": 3,
    "end_line": 4883,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 4937,
    "start_column": 7,
    "end_line": 4937,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lemon.c",
    "start_line": 5117,
    "start_column": 3,
    "end_line": 5117,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 410,
    "start_column": 19,
    "end_line": 410,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 625,
    "start_column": 39,
    "end_line": 625,
    "end_column": 53,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 412,
    "start_column": 5,
    "end_line": 412,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zOrigName, p->zName, p->len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 529,
    "start_column": 5,
    "end_line": 529,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zKWText[k], p->zName, p->len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 420,
    "start_column": 3,
    "end_line": 420,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 457,
    "start_column": 3,
    "end_line": 457,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 492,
    "start_column": 3,
    "end_line": 492,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 522,
    "start_column": 3,
    "end_line": 522,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 523,
    "start_column": 3,
    "end_line": 523,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 524,
    "start_column": 3,
    "end_line": 524,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 532,
    "start_column": 7,
    "end_line": 532,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 536,
    "start_column": 7,
    "end_line": 536,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 545,
    "start_column": 3,
    "end_line": 545,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 549,
    "start_column": 7,
    "end_line": 549,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 552,
    "start_column": 7,
    "end_line": 552,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 554,
    "start_column": 7,
    "end_line": 554,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 558,
    "start_column": 7,
    "end_line": 558,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 562,
    "start_column": 13,
    "end_line": 562,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 563,
    "start_column": 3,
    "end_line": 563,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 565,
    "start_column": 3,
    "end_line": 565,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 566,
    "start_column": 3,
    "end_line": 566,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 568,
    "start_column": 16,
    "end_line": 568,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 569,
    "start_column": 5,
    "end_line": 569,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 572,
    "start_column": 7,
    "end_line": 572,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 576,
    "start_column": 3,
    "end_line": 576,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 578,
    "start_column": 3,
    "end_line": 578,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 581,
    "start_column": 3,
    "end_line": 581,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 583,
    "start_column": 16,
    "end_line": 583,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 584,
    "start_column": 5,
    "end_line": 584,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 587,
    "start_column": 7,
    "end_line": 587,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 591,
    "start_column": 3,
    "end_line": 591,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 593,
    "start_column": 3,
    "end_line": 593,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 594,
    "start_column": 3,
    "end_line": 594,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 596,
    "start_column": 16,
    "end_line": 596,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 597,
    "start_column": 5,
    "end_line": 597,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 600,
    "start_column": 7,
    "end_line": 600,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 604,
    "start_column": 3,
    "end_line": 604,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 606,
    "start_column": 3,
    "end_line": 606,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 608,
    "start_column": 3,
    "end_line": 608,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 610,
    "start_column": 16,
    "end_line": 610,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 611,
    "start_column": 5,
    "end_line": 611,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 614,
    "start_column": 7,
    "end_line": 614,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 618,
    "start_column": 3,
    "end_line": 618,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 620,
    "start_column": 3,
    "end_line": 620,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 621,
    "start_column": 3,
    "end_line": 621,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 624,
    "start_column": 16,
    "end_line": 624,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 625,
    "start_column": 5,
    "end_line": 625,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 628,
    "start_column": 7,
    "end_line": 628,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 632,
    "start_column": 3,
    "end_line": 632,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 633,
    "start_column": 3,
    "end_line": 633,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 644,
    "start_column": 3,
    "end_line": 644,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 647,
    "start_column": 3,
    "end_line": 647,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 648,
    "start_column": 3,
    "end_line": 648,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 649,
    "start_column": 3,
    "end_line": 649,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 650,
    "start_column": 3,
    "end_line": 650,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 651,
    "start_column": 3,
    "end_line": 651,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 653,
    "start_column": 3,
    "end_line": 653,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 654,
    "start_column": 3,
    "end_line": 654,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 655,
    "start_column": 3,
    "end_line": 655,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 656,
    "start_column": 3,
    "end_line": 656,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 657,
    "start_column": 3,
    "end_line": 657,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 658,
    "start_column": 3,
    "end_line": 658,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 659,
    "start_column": 3,
    "end_line": 659,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 660,
    "start_column": 3,
    "end_line": 660,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 661,
    "start_column": 3,
    "end_line": 661,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 662,
    "start_column": 3,
    "end_line": 662,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 663,
    "start_column": 3,
    "end_line": 663,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 664,
    "start_column": 3,
    "end_line": 664,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 665,
    "start_column": 3,
    "end_line": 665,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 666,
    "start_column": 3,
    "end_line": 666,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 667,
    "start_column": 3,
    "end_line": 667,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 668,
    "start_column": 3,
    "end_line": 668,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 670,
    "start_column": 5,
    "end_line": 670,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 673,
    "start_column": 3,
    "end_line": 673,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 674,
    "start_column": 3,
    "end_line": 674,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 675,
    "start_column": 3,
    "end_line": 675,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 676,
    "start_column": 3,
    "end_line": 676,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 677,
    "start_column": 3,
    "end_line": 677,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 678,
    "start_column": 3,
    "end_line": 678,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 679,
    "start_column": 3,
    "end_line": 679,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 680,
    "start_column": 3,
    "end_line": 680,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 681,
    "start_column": 3,
    "end_line": 681,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 682,
    "start_column": 3,
    "end_line": 682,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 683,
    "start_column": 3,
    "end_line": 683,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 684,
    "start_column": 3,
    "end_line": 684,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 685,
    "start_column": 3,
    "end_line": 685,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 686,
    "start_column": 3,
    "end_line": 686,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 687,
    "start_column": 3,
    "end_line": 687,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 688,
    "start_column": 3,
    "end_line": 688,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 689,
    "start_column": 3,
    "end_line": 689,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 690,
    "start_column": 3,
    "end_line": 690,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 691,
    "start_column": 3,
    "end_line": 691,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 692,
    "start_column": 3,
    "end_line": 692,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 693,
    "start_column": 3,
    "end_line": 693,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mkkeywordhash.c",
    "start_line": 694,
    "start_column": 3,
    "end_line": 694,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 292,
    "start_column": 12,
    "end_line": 292,
    "end_column": 42,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(newSize*sizeof(pNew[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 302,
    "start_column": 7,
    "end_line": 302,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 419,
    "start_column": 5,
    "end_line": 419,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 496,
    "start_column": 9,
    "end_line": 496,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 538,
    "start_column": 11,
    "end_line": 538,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 554,
    "start_column": 13,
    "end_line": 554,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 609,
    "start_column": 6,
    "end_line": 609,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 629,
    "start_column": 7,
    "end_line": 629,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 633,
    "start_column": 7,
    "end_line": 633,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 728,
    "start_column": 7,
    "end_line": 728,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 734,
    "start_column": 7,
    "end_line": 734,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 817,
    "start_column": 5,
    "end_line": 817,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 859,
    "start_column": 5,
    "end_line": 859,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 921,
    "start_column": 7,
    "end_line": 921,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 924,
    "start_column": 7,
    "end_line": 924,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 954,
    "start_column": 9,
    "end_line": 954,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 984,
    "start_column": 11,
    "end_line": 984,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 1053,
    "start_column": 5,
    "end_line": 1053,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 1055,
    "start_column": 7,
    "end_line": 1055,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/lempar.c",
    "start_line": 1058,
    "start_column": 5,
    "end_line": 1058,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 107,
    "start_column": 3,
    "end_line": 107,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(block, buffer, 64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 108,
    "start_column": 3,
    "end_line": 108,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(qq,state,5*sizeof(unsigned int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 178,
    "start_column": 11,
    "end_line": 178,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&g.cx.buffer[j], data, (i = 64-j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 187,
    "start_column": 9,
    "end_line": 187,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&g.cx.buffer[j], &data[i], len - i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 307,
    "start_column": 11,
    "end_line": 307,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 324,
    "start_column": 11,
    "end_line": 324,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 216,
    "start_column": 3,
    "end_line": 216,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 227,
    "start_column": 3,
    "end_line": 227,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 229,
    "start_column": 3,
    "end_line": 229,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 231,
    "start_column": 3,
    "end_line": 231,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 241,
    "start_column": 3,
    "end_line": 241,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 243,
    "start_column": 3,
    "end_line": 243,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 245,
    "start_column": 3,
    "end_line": 245,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 299,
    "start_column": 44,
    "end_line": 299,
    "end_column": 51,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 315,
    "start_column": 13,
    "end_line": 315,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 332,
    "start_column": 13,
    "end_line": 332,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 342,
    "start_column": 13,
    "end_line": 342,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 352,
    "start_column": 13,
    "end_line": 352,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 367,
    "start_column": 3,
    "end_line": 367,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 368,
    "start_column": 3,
    "end_line": 368,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 440,
    "start_column": 7,
    "end_line": 440,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 447,
    "start_column": 7,
    "end_line": 447,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 31,
    "start_column": 16,
    "end_line": 31,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 31,
    "start_column": 28,
    "end_line": 31,
    "end_column": 32,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 32,
    "start_column": 8,
    "end_line": 32,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 45,
    "start_column": 3,
    "end_line": 45,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 103,
    "start_column": 6,
    "end_line": 103,
    "end_column": 10,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 179,
    "start_column": 5,
    "end_line": 179,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 181,
    "start_column": 7,
    "end_line": 181,
    "end_column": 11,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 369,
    "start_column": 12,
    "end_line": 369,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 162,
    "start_column": 21,
    "end_line": 162,
    "end_column": 29,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "98BADCFE"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbhash.c",
    "start_line": 164,
    "start_column": 21,
    "end_line": 164,
    "end_column": 29,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "C3D2E1F0"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 794,
    "start_column": 57,
    "end_line": 794,
    "end_column": 70,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zLine)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 807,
    "start_column": 11,
    "end_line": 807,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMHash)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 588,
    "start_column": 3,
    "end_line": 588,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(block, buffer, 64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 589,
    "start_column": 3,
    "end_line": 589,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(qq,state,5*sizeof(unsigned int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 667,
    "start_column": 15,
    "end_line": 667,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&context->buffer[j], data, (i = 64-j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 675,
    "start_column": 11,
    "end_line": 675,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&context->buffer[j], &data[i], len - i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 797,
    "start_column": 7,
    "end_line": 797,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDate, &zLine[2], 10)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 799,
    "start_column": 7,
    "end_line": 799,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zDate[11], &zLine[13], 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 505,
    "start_column": 8,
    "end_line": 505,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 715,
    "start_column": 8,
    "end_line": 715,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 735,
    "start_column": 3,
    "end_line": 735,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 775,
    "start_column": 9,
    "end_line": 775,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 786,
    "start_column": 8,
    "end_line": 786,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 788,
    "start_column": 5,
    "end_line": 788,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 815,
    "start_column": 11,
    "end_line": 815,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 820,
    "start_column": 11,
    "end_line": 820,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 821,
    "start_column": 11,
    "end_line": 821,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 822,
    "start_column": 11,
    "end_line": 822,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 830,
    "start_column": 5,
    "end_line": 830,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 832,
    "start_column": 5,
    "end_line": 832,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 530,
    "start_column": 16,
    "end_line": 530,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 530,
    "start_column": 28,
    "end_line": 530,
    "end_column": 32,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 531,
    "start_column": 8,
    "end_line": 531,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 581,
    "start_column": 13,
    "end_line": 581,
    "end_column": 17,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 641,
    "start_column": 13,
    "end_line": 641,
    "end_column": 17,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 641,
    "start_column": 22,
    "end_line": 641,
    "end_column": 26,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 655,
    "start_column": 13,
    "end_line": 655,
    "end_column": 17,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 656,
    "start_column": 3,
    "end_line": 656,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 668,
    "start_column": 9,
    "end_line": 668,
    "end_column": 13,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 670,
    "start_column": 13,
    "end_line": 670,
    "end_column": 17,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 682,
    "start_column": 13,
    "end_line": 682,
    "end_column": 17,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 682,
    "start_column": 46,
    "end_line": 682,
    "end_column": 50,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 690,
    "start_column": 5,
    "end_line": 690,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 692,
    "start_column": 9,
    "end_line": 692,
    "end_column": 13,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 693,
    "start_column": 5,
    "end_line": 693,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 711,
    "start_column": 3,
    "end_line": 711,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 719,
    "start_column": 3,
    "end_line": 719,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 723,
    "start_column": 5,
    "end_line": 723,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 726,
    "start_column": 3,
    "end_line": 726,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 645,
    "start_column": 27,
    "end_line": 645,
    "end_column": 35,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "98BADCFE"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/mksourceid.c",
    "start_line": 647,
    "start_column": 27,
    "end_line": 647,
    "end_column": 35,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "C3D2E1F0"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 51,
    "start_column": 9,
    "end_line": 51,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 53,
    "start_column": 5,
    "end_line": 53,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zReply[nReply], z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 19,
    "start_column": 3,
    "end_line": 19,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 33,
    "start_column": 5,
    "end_line": 33,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 66,
    "start_column": 5,
    "end_line": 66,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 70,
    "start_column": 5,
    "end_line": 70,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 90,
    "start_column": 20,
    "end_line": 90,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 92,
    "start_column": 9,
    "end_line": 92,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 95,
    "start_column": 9,
    "end_line": 95,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 122,
    "start_column": 7,
    "end_line": 122,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 129,
    "start_column": 7,
    "end_line": 129,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 132,
    "start_column": 5,
    "end_line": 132,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/rollback-test.c",
    "start_line": 141,
    "start_column": 9,
    "end_line": 141,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 108,
    "start_column": 18,
    "end_line": 108,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 114,
    "start_column": 5,
    "end_line": 114,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zShm, argv[1], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 115,
    "start_column": 5,
    "end_line": 115,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zShm[nName], \"-shm\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 109,
    "start_column": 12,
    "end_line": 109,
    "end_column": 33,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nName + 100 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 19,
    "start_column": 3,
    "end_line": 19,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 42,
    "start_column": 5,
    "end_line": 42,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 46,
    "start_column": 3,
    "end_line": 46,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 83,
    "start_column": 5,
    "end_line": 83,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 90,
    "start_column": 5,
    "end_line": 90,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 111,
    "start_column": 7,
    "end_line": 111,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 118,
    "start_column": 7,
    "end_line": 118,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/getlock.c",
    "start_line": 131,
    "start_column": 5,
    "end_line": 131,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 247,
    "start_column": 22,
    "end_line": 247,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 301,
    "start_column": 17,
    "end_line": 301,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 351,
    "start_column": 18,
    "end_line": 351,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(x.zSep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1050,
    "start_column": 25,
    "end_line": 1050,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zIn[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 263,
    "start_column": 3,
    "end_line": 263,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z + p->n, z, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 317,
    "start_column": 7,
    "end_line": 317,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->z[p->nUsed], p->zSep, p->szSep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 320,
    "start_column": 5,
    "end_line": 320,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->z[p->nUsed], z, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 928,
    "start_column": 13,
    "end_line": 928,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nHeap )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 943,
    "start_column": 15,
    "end_line": 943,
    "end_column": 37,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nLook*szLook )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 948,
    "start_column": 16,
    "end_line": 948,
    "end_column": 48,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nScratch*(sqlite3_int64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 955,
    "start_column": 15,
    "end_line": 955,
    "end_column": 46,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nPCache*(sqlite3_int64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 980,
    "start_column": 9,
    "end_line": 980,
    "end_column": 23,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nAlloc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 136,
    "start_column": 5,
    "end_line": 136,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 138,
    "start_column": 5,
    "end_line": 138,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 141,
    "start_column": 3,
    "end_line": 141,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 143,
    "start_column": 3,
    "end_line": 143,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 153,
    "start_column": 5,
    "end_line": 153,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 155,
    "start_column": 5,
    "end_line": 155,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 158,
    "start_column": 3,
    "end_line": 158,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 160,
    "start_column": 3,
    "end_line": 160,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 184,
    "start_column": 3,
    "end_line": 184,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 197,
    "start_column": 3,
    "end_line": 197,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 200,
    "start_column": 7,
    "end_line": 200,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 202,
    "start_column": 9,
    "end_line": 202,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 204,
    "start_column": 9,
    "end_line": 204,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 221,
    "start_column": 3,
    "end_line": 221,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 691,
    "start_column": 3,
    "end_line": 691,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 692,
    "start_column": 3,
    "end_line": 692,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 835,
    "start_column": 15,
    "end_line": 835,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 990,
    "start_column": 12,
    "end_line": 990,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1033,
    "start_column": 13,
    "end_line": 1033,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1049,
    "start_column": 9,
    "end_line": 1049,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1053,
    "start_column": 11,
    "end_line": 1053,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1057,
    "start_column": 29,
    "end_line": 1057,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1058,
    "start_column": 13,
    "end_line": 1058,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1063,
    "start_column": 9,
    "end_line": 1063,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1074,
    "start_column": 11,
    "end_line": 1074,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1169,
    "start_column": 15,
    "end_line": 1169,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1199,
    "start_column": 9,
    "end_line": 1199,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1201,
    "start_column": 11,
    "end_line": 1201,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1216,
    "start_column": 11,
    "end_line": 1216,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1221,
    "start_column": 63,
    "end_line": 1221,
    "end_column": 69,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1228,
    "start_column": 5,
    "end_line": 1228,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1237,
    "start_column": 17,
    "end_line": 1237,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fuzzershell.c",
    "start_line": 1245,
    "start_column": 7,
    "end_line": 1245,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 18,
    "start_column": 14,
    "end_line": 18,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 26,
    "start_column": 5,
    "end_line": 26,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 35,
    "start_column": 9,
    "end_line": 35,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 39,
    "start_column": 11,
    "end_line": 39,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 49,
    "start_column": 7,
    "end_line": 49,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 54,
    "start_column": 5,
    "end_line": 54,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 71,
    "start_column": 9,
    "end_line": 71,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 72,
    "start_column": 9,
    "end_line": 72,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 73,
    "start_column": 9,
    "end_line": 73,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 74,
    "start_column": 9,
    "end_line": 74,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 76,
    "start_column": 9,
    "end_line": 76,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/checkSpacing.c",
    "start_line": 77,
    "start_column": 9,
    "end_line": 77,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 24,
    "start_column": 3,
    "end_line": 24,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 25,
    "start_column": 3,
    "end_line": 25,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 39,
    "start_column": 3,
    "end_line": 39,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 45,
    "start_column": 3,
    "end_line": 45,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 75,
    "start_column": 9,
    "end_line": 75,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 87,
    "start_column": 9,
    "end_line": 87,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 93,
    "start_column": 7,
    "end_line": 93,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 104,
    "start_column": 5,
    "end_line": 104,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 109,
    "start_column": 5,
    "end_line": 109,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 123,
    "start_column": 5,
    "end_line": 123,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 137,
    "start_column": 5,
    "end_line": 137,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 146,
    "start_column": 5,
    "end_line": 146,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 155,
    "start_column": 5,
    "end_line": 155,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 170,
    "start_column": 9,
    "end_line": 170,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 178,
    "start_column": 9,
    "end_line": 178,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 192,
    "start_column": 11,
    "end_line": 192,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 214,
    "start_column": 5,
    "end_line": 214,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/index_usage.c",
    "start_line": 219,
    "start_column": 5,
    "end_line": 219,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 90,
    "start_column": 3,
    "end_line": 90,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a, &x, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 108,
    "start_column": 3,
    "end_line": 108,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 109,
    "start_column": 3,
    "end_line": 109,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 150,
    "start_column": 24,
    "end_line": 150,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 152,
    "start_column": 34,
    "end_line": 152,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 154,
    "start_column": 33,
    "end_line": 154,
    "end_column": 37,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 161,
    "start_column": 7,
    "end_line": 161,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 163,
    "start_column": 7,
    "end_line": 163,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/logest.c",
    "start_line": 166,
    "start_column": 7,
    "end_line": 166,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 262,
    "start_column": 12,
    "end_line": 262,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 270,
    "start_column": 15,
    "end_line": 270,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 367,
    "start_column": 14,
    "end_line": 367,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDesc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 430,
    "start_column": 13,
    "end_line": 430,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDesc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 437,
    "start_column": 14,
    "end_line": 437,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 447,
    "start_column": 14,
    "end_line": 447,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 454,
    "start_column": 14,
    "end_line": 454,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDesc[nDesc])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 718,
    "start_column": 16,
    "end_line": 718,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 596,
    "start_column": 12,
    "end_line": 596,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 618,
    "start_column": 12,
    "end_line": 618,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zConst+ii, \"...'\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 620,
    "start_column": 12,
    "end_line": 620,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zConst+ii, \"'\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 719,
    "start_column": 20,
    "end_line": 719,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zMap[cofst+1], zBuf, j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 65,
    "start_column": 3,
    "end_line": 65,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 108,
    "start_column": 7,
    "end_line": 108,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 116,
    "start_column": 7,
    "end_line": 116,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 151,
    "start_column": 7,
    "end_line": 151,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 170,
    "start_column": 7,
    "end_line": 170,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 217,
    "start_column": 5,
    "end_line": 217,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 220,
    "start_column": 9,
    "end_line": 220,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 222,
    "start_column": 9,
    "end_line": 222,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 227,
    "start_column": 9,
    "end_line": 227,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 229,
    "start_column": 9,
    "end_line": 229,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 232,
    "start_column": 5,
    "end_line": 232,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 244,
    "start_column": 3,
    "end_line": 244,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 261,
    "start_column": 3,
    "end_line": 261,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 265,
    "start_column": 7,
    "end_line": 265,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 267,
    "start_column": 7,
    "end_line": 267,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 272,
    "start_column": 3,
    "end_line": 272,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 273,
    "start_column": 3,
    "end_line": 273,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 282,
    "start_column": 3,
    "end_line": 282,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 339,
    "start_column": 7,
    "end_line": 339,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 350,
    "start_column": 7,
    "end_line": 350,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 352,
    "start_column": 7,
    "end_line": 352,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 355,
    "start_column": 7,
    "end_line": 355,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 357,
    "start_column": 7,
    "end_line": 357,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 361,
    "start_column": 9,
    "end_line": 361,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 363,
    "start_column": 9,
    "end_line": 363,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 429,
    "start_column": 5,
    "end_line": 429,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 436,
    "start_column": 5,
    "end_line": 436,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 446,
    "start_column": 5,
    "end_line": 446,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 453,
    "start_column": 5,
    "end_line": 453,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 473,
    "start_column": 3,
    "end_line": 473,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 476,
    "start_column": 7,
    "end_line": 476,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 478,
    "start_column": 7,
    "end_line": 478,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 511,
    "start_column": 3,
    "end_line": 511,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 515,
    "start_column": 5,
    "end_line": 515,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 523,
    "start_column": 7,
    "end_line": 523,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 525,
    "start_column": 7,
    "end_line": 525,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 536,
    "start_column": 5,
    "end_line": 536,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 542,
    "start_column": 5,
    "end_line": 542,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 552,
    "start_column": 8,
    "end_line": 552,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 568,
    "start_column": 12,
    "end_line": 568,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 573,
    "start_column": 8,
    "end_line": 573,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 587,
    "start_column": 8,
    "end_line": 587,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 597,
    "start_column": 12,
    "end_line": 597,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 599,
    "start_column": 12,
    "end_line": 599,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 608,
    "start_column": 14,
    "end_line": 608,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 622,
    "start_column": 10,
    "end_line": 622,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 629,
    "start_column": 5,
    "end_line": 629,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 633,
    "start_column": 5,
    "end_line": 633,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 683,
    "start_column": 5,
    "end_line": 683,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 686,
    "start_column": 3,
    "end_line": 686,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 696,
    "start_column": 5,
    "end_line": 696,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 717,
    "start_column": 7,
    "end_line": 717,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 722,
    "start_column": 7,
    "end_line": 722,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 728,
    "start_column": 5,
    "end_line": 728,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 730,
    "start_column": 7,
    "end_line": 730,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 749,
    "start_column": 5,
    "end_line": 749,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 757,
    "start_column": 9,
    "end_line": 757,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 758,
    "start_column": 9,
    "end_line": 758,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 759,
    "start_column": 22,
    "end_line": 759,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 761,
    "start_column": 20,
    "end_line": 761,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 788,
    "start_column": 5,
    "end_line": 788,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 794,
    "start_column": 5,
    "end_line": 794,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 795,
    "start_column": 5,
    "end_line": 795,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 796,
    "start_column": 5,
    "end_line": 796,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 993,
    "start_column": 5,
    "end_line": 993,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1024,
    "start_column": 7,
    "end_line": 1024,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1034,
    "start_column": 5,
    "end_line": 1034,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1054,
    "start_column": 5,
    "end_line": 1054,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1061,
    "start_column": 5,
    "end_line": 1061,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1067,
    "start_column": 3,
    "end_line": 1067,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1069,
    "start_column": 5,
    "end_line": 1069,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1082,
    "start_column": 7,
    "end_line": 1082,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1092,
    "start_column": 3,
    "end_line": 1092,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1093,
    "start_column": 3,
    "end_line": 1093,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1143,
    "start_column": 3,
    "end_line": 1143,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1146,
    "start_column": 3,
    "end_line": 1146,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1172,
    "start_column": 9,
    "end_line": 1172,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showdb.c",
    "start_line": 1209,
    "start_column": 9,
    "end_line": 1209,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 67,
    "start_column": 12,
    "end_line": 67,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 75,
    "start_column": 15,
    "end_line": 75,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 80,
    "start_column": 17,
    "end_line": 80,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 85,
    "start_column": 5,
    "end_line": 85,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&val, aData+ofst, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 91,
    "start_column": 5,
    "end_line": 91,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&sz, aData+ofst, 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 41,
    "start_column": 11,
    "end_line": 41,
    "end_column": 24,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 29,
    "start_column": 3,
    "end_line": 29,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 70,
    "start_column": 7,
    "end_line": 70,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 72,
    "start_column": 7,
    "end_line": 72,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 79,
    "start_column": 7,
    "end_line": 79,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 87,
    "start_column": 3,
    "end_line": 87,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 92,
    "start_column": 5,
    "end_line": 92,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 94,
    "start_column": 5,
    "end_line": 94,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 96,
    "start_column": 5,
    "end_line": 96,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 98,
    "start_column": 3,
    "end_line": 98,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 131,
    "start_column": 5,
    "end_line": 131,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 143,
    "start_column": 5,
    "end_line": 143,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showshm.c",
    "start_line": 148,
    "start_column": 5,
    "end_line": 148,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 36,
    "start_column": 24,
    "end_line": 36,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 44,
    "start_column": 24,
    "end_line": 44,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 45,
    "start_column": 5,
    "end_line": 45,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 54,
    "start_column": 14,
    "end_line": 54,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 62,
    "start_column": 5,
    "end_line": 62,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 72,
    "start_column": 5,
    "end_line": 72,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 75,
    "start_column": 3,
    "end_line": 75,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/pagesig.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 44,
    "start_column": 7,
    "end_line": 44,
    "end_column": 20,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 36,
    "start_column": 8,
    "end_line": 36,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 38,
    "start_column": 5,
    "end_line": 38,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 43,
    "start_column": 3,
    "end_line": 43,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 46,
    "start_column": 5,
    "end_line": 46,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 53,
    "start_column": 5,
    "end_line": 53,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 134,
    "start_column": 11,
    "end_line": 134,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 147,
    "start_column": 5,
    "end_line": 147,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/srcck1.c",
    "start_line": 154,
    "start_column": 5,
    "end_line": 154,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 60,
    "start_column": 5,
    "end_line": 60,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 73,
    "start_column": 5,
    "end_line": 73,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 76,
    "start_column": 3,
    "end_line": 76,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 97,
    "start_column": 3,
    "end_line": 97,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 100,
    "start_column": 5,
    "end_line": 100,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 120,
    "start_column": 5,
    "end_line": 120,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 127,
    "start_column": 3,
    "end_line": 127,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 130,
    "start_column": 5,
    "end_line": 130,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 217,
    "start_column": 3,
    "end_line": 217,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 225,
    "start_column": 3,
    "end_line": 225,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/fast_vacuum.c",
    "start_line": 227,
    "start_column": 3,
    "end_line": 227,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 36,
    "start_column": 14,
    "end_line": 36,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(aPending[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 38,
    "start_column": 5,
    "end_line": 38,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 54,
    "start_column": 5,
    "end_line": 54,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 63,
    "start_column": 7,
    "end_line": 63,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 87,
    "start_column": 5,
    "end_line": 87,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 92,
    "start_column": 5,
    "end_line": 92,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/showlocks.c",
    "start_line": 96,
    "start_column": 16,
    "end_line": 96,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 63,
    "start_column": 16,
    "end_line": 63,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 65,
    "start_column": 11,
    "end_line": 65,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 71,
    "start_column": 7,
    "end_line": 71,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 74,
    "start_column": 7,
    "end_line": 74,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 81,
    "start_column": 5,
    "end_line": 81,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 85,
    "start_column": 5,
    "end_line": 85,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 88,
    "start_column": 8,
    "end_line": 88,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 90,
    "start_column": 5,
    "end_line": 90,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 95,
    "start_column": 3,
    "end_line": 95,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 97,
    "start_column": 5,
    "end_line": 97,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 101,
    "start_column": 5,
    "end_line": 101,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 104,
    "start_column": 3,
    "end_line": 104,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 109,
    "start_column": 7,
    "end_line": 109,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 117,
    "start_column": 3,
    "end_line": 117,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 123,
    "start_column": 9,
    "end_line": 123,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 131,
    "start_column": 7,
    "end_line": 131,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 134,
    "start_column": 5,
    "end_line": 134,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 135,
    "start_column": 25,
    "end_line": 135,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 136,
    "start_column": 5,
    "end_line": 136,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/dbtotxt.c",
    "start_line": 144,
    "start_column": 3,
    "end_line": 144,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 31,
    "start_column": 10,
    "end_line": 31,
    "end_column": 21,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( n )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 21,
    "start_column": 5,
    "end_line": 21,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 24,
    "start_column": 7,
    "end_line": 24,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 26,
    "start_column": 5,
    "end_line": 26,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 29,
    "start_column": 10,
    "end_line": 29,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 30,
    "start_column": 7,
    "end_line": 30,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 33,
    "start_column": 5,
    "end_line": 33,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/extract.c",
    "start_line": 40,
    "start_column": 5,
    "end_line": 40,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 113,
    "start_column": 19,
    "end_line": 113,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->z + p->nUsed)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1641,
    "start_column": 19,
    "end_line": 1641,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 965,
    "start_column": 5,
    "end_line": 965,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, zOut, lenOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1070,
    "start_column": 11,
    "end_line": 1070,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], bestLitsz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1092,
    "start_column": 9,
    "end_line": 1092,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], lenOut-base)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1109,
    "start_column": 5,
    "end_line": 1109,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], lenOut-base)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1279,
    "start_column": 7,
    "end_line": 1279,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOtaControl, sqlite3_column_text(pStmt, nCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1507,
    "start_column": 7,
    "end_line": 1507,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&uX, &iX, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1512,
    "start_column": 7,
    "end_line": 1512,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&uX, &rX, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 72,
    "start_column": 3,
    "end_line": 72,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 74,
    "start_column": 3,
    "end_line": 74,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 76,
    "start_column": 3,
    "end_line": 76,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 86,
    "start_column": 3,
    "end_line": 86,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 88,
    "start_column": 3,
    "end_line": 88,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 90,
    "start_column": 3,
    "end_line": 90,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 358,
    "start_column": 7,
    "end_line": 358,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 362,
    "start_column": 7,
    "end_line": 362,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 370,
    "start_column": 9,
    "end_line": 370,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 372,
    "start_column": 11,
    "end_line": 372,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 374,
    "start_column": 9,
    "end_line": 374,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 377,
    "start_column": 9,
    "end_line": 377,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 386,
    "start_column": 9,
    "end_line": 386,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 388,
    "start_column": 9,
    "end_line": 388,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 391,
    "start_column": 13,
    "end_line": 391,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 395,
    "start_column": 9,
    "end_line": 395,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 400,
    "start_column": 7,
    "end_line": 400,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 421,
    "start_column": 5,
    "end_line": 421,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 457,
    "start_column": 7,
    "end_line": 457,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 460,
    "start_column": 9,
    "end_line": 460,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 464,
    "start_column": 7,
    "end_line": 464,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 473,
    "start_column": 5,
    "end_line": 473,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 504,
    "start_column": 7,
    "end_line": 504,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 506,
    "start_column": 7,
    "end_line": 506,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 508,
    "start_column": 9,
    "end_line": 508,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 509,
    "start_column": 24,
    "end_line": 509,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 511,
    "start_column": 7,
    "end_line": 511,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 520,
    "start_column": 7,
    "end_line": 520,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 544,
    "start_column": 5,
    "end_line": 544,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 551,
    "start_column": 5,
    "end_line": 551,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 636,
    "start_column": 5,
    "end_line": 636,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 651,
    "start_column": 5,
    "end_line": 651,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 663,
    "start_column": 11,
    "end_line": 663,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 667,
    "start_column": 13,
    "end_line": 667,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 672,
    "start_column": 11,
    "end_line": 672,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 676,
    "start_column": 11,
    "end_line": 676,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 680,
    "start_column": 9,
    "end_line": 680,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 682,
    "start_column": 9,
    "end_line": 682,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 683,
    "start_column": 31,
    "end_line": 683,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 684,
    "start_column": 9,
    "end_line": 684,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 687,
    "start_column": 11,
    "end_line": 687,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 692,
    "start_column": 11,
    "end_line": 692,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 695,
    "start_column": 9,
    "end_line": 695,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 711,
    "start_column": 5,
    "end_line": 711,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1261,
    "start_column": 7,
    "end_line": 1261,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1266,
    "start_column": 5,
    "end_line": 1266,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1271,
    "start_column": 19,
    "end_line": 1271,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1298,
    "start_column": 13,
    "end_line": 1298,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1299,
    "start_column": 37,
    "end_line": 1299,
    "end_column": 44,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1300,
    "start_column": 13,
    "end_line": 1300,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1310,
    "start_column": 9,
    "end_line": 1310,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1312,
    "start_column": 7,
    "end_line": 1312,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1317,
    "start_column": 5,
    "end_line": 1317,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1324,
    "start_column": 5,
    "end_line": 1324,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1363,
    "start_column": 7,
    "end_line": 1363,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1370,
    "start_column": 5,
    "end_line": 1370,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1387,
    "start_column": 5,
    "end_line": 1387,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1432,
    "start_column": 5,
    "end_line": 1432,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1457,
    "start_column": 3,
    "end_line": 1457,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1634,
    "start_column": 5,
    "end_line": 1634,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1854,
    "start_column": 3,
    "end_line": 1854,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1855,
    "start_column": 3,
    "end_line": 1855,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1897,
    "start_column": 15,
    "end_line": 1897,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1983,
    "start_column": 24,
    "end_line": 1983,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 1985,
    "start_column": 5,
    "end_line": 1985,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/sqldiff.c",
    "start_line": 2000,
    "start_column": 24,
    "end_line": 2000,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 45,
    "start_column": 8,
    "end_line": 45,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 49,
    "start_column": 3,
    "end_line": 49,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 63,
    "start_column": 3,
    "end_line": 63,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 86,
    "start_column": 3,
    "end_line": 86,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 86,
    "start_column": 38,
    "end_line": 86,
    "end_column": 46,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 95,
    "start_column": 3,
    "end_line": 95,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 179,
    "start_column": 14,
    "end_line": 179,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 183,
    "start_column": 22,
    "end_line": 183,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/loadfts.c",
    "start_line": 186,
    "start_column": 14,
    "end_line": 186,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8inst1.c",
    "start_line": 91,
    "start_column": 23,
    "end_line": 91,
    "end_column": 45,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(pVfs->szOsFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8inst1.c",
    "start_line": 102,
    "start_column": 19,
    "end_line": 102,
    "end_column": 34,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nByte+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8inst1.c",
    "start_line": 179,
    "start_column": 5,
    "end_line": 179,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8inst1.c",
    "start_line": 189,
    "start_column": 5,
    "end_line": 189,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/tool/speedtest8inst1.c",
    "start_line": 216,
    "start_column": 3,
    "end_line": 216,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/README.txt",
    "start_line": 105,
    "start_column": 24,
    "end_line": 105,
    "end_column": 30,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 295,
    "start_column": 16,
    "end_line": 295,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 423,
    "start_column": 22,
    "end_line": 423,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1037,
    "start_column": 20,
    "end_line": 1037,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 431,
    "start_column": 3,
    "end_line": 431,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z+p->n, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 587,
    "start_column": 7,
    "end_line": 587,
    "end_column": 38,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(*pzScript, (const char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 102,
    "start_column": 5,
    "end_line": 102,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 685,
    "start_column": 14,
    "end_line": 685,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 693,
    "start_column": 3,
    "end_line": 693,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 849,
    "start_column": 34,
    "end_line": 849,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 929,
    "start_column": 21,
    "end_line": 929,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 939,
    "start_column": 16,
    "end_line": 939,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1104,
    "start_column": 24,
    "end_line": 1104,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1118,
    "start_column": 32,
    "end_line": 1118,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1121,
    "start_column": 21,
    "end_line": 1121,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1133,
    "start_column": 21,
    "end_line": 1133,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1247,
    "start_column": 3,
    "end_line": 1247,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1248,
    "start_column": 3,
    "end_line": 1248,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1271,
    "start_column": 3,
    "end_line": 1271,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1273,
    "start_column": 5,
    "end_line": 1273,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1275,
    "start_column": 3,
    "end_line": 1275,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1301,
    "start_column": 5,
    "end_line": 1301,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1311,
    "start_column": 22,
    "end_line": 1311,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1318,
    "start_column": 27,
    "end_line": 1318,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1321,
    "start_column": 25,
    "end_line": 1321,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1325,
    "start_column": 17,
    "end_line": 1325,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1330,
    "start_column": 14,
    "end_line": 1330,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1337,
    "start_column": 15,
    "end_line": 1337,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1344,
    "start_column": 7,
    "end_line": 1344,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1345,
    "start_column": 29,
    "end_line": 1345,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1346,
    "start_column": 7,
    "end_line": 1346,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1347,
    "start_column": 7,
    "end_line": 1347,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1349,
    "start_column": 9,
    "end_line": 1349,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1355,
    "start_column": 25,
    "end_line": 1355,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1375,
    "start_column": 7,
    "end_line": 1375,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1464,
    "start_column": 5,
    "end_line": 1464,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1465,
    "start_column": 5,
    "end_line": 1465,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1466,
    "start_column": 27,
    "end_line": 1466,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/mptest/mptest.c",
    "start_line": 1467,
    "start_column": 5,
    "end_line": 1467,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 179,
    "start_column": 22,
    "end_line": 179,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 455,
    "start_column": 22,
    "end_line": 455,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 580,
    "start_column": 28,
    "end_line": 580,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 185,
    "start_column": 5,
    "end_line": 185,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zFilename, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 234,
    "start_column": 5,
    "end_line": 234,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pVFile->a, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 237,
    "start_column": 3,
    "end_line": 237,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pVFile->a + iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 263,
    "start_column": 3,
    "end_line": 263,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pVFile->a + iOfst, pData, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 471,
    "start_column": 3,
    "end_line": 471,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z + p->n, z, (int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 180,
    "start_column": 23,
    "end_line": 180,
    "end_column": 36,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 191,
    "start_column": 13,
    "end_line": 191,
    "end_column": 23,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 700,
    "start_column": 19,
    "end_line": 700,
    "end_column": 34,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nHeap )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 41,
    "start_column": 3,
    "end_line": 41,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 42,
    "start_column": 3,
    "end_line": 42,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 67,
    "start_column": 3,
    "end_line": 67,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 69,
    "start_column": 3,
    "end_line": 69,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 171,
    "start_column": 10,
    "end_line": 171,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 175,
    "start_column": 5,
    "end_line": 175,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 549,
    "start_column": 3,
    "end_line": 549,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 597,
    "start_column": 9,
    "end_line": 597,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 599,
    "start_column": 9,
    "end_line": 599,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 616,
    "start_column": 13,
    "end_line": 616,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 619,
    "start_column": 17,
    "end_line": 619,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 623,
    "start_column": 17,
    "end_line": 623,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 627,
    "start_column": 17,
    "end_line": 627,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 631,
    "start_column": 17,
    "end_line": 631,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 635,
    "start_column": 17,
    "end_line": 635,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 716,
    "start_column": 7,
    "end_line": 716,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz.c",
    "start_line": 723,
    "start_column": 7,
    "end_line": 723,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossfuzz.c",
    "start_line": 187,
    "start_column": 5,
    "end_line": 187,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossfuzz.c",
    "start_line": 197,
    "start_column": 5,
    "end_line": 197,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossfuzz.c",
    "start_line": 198,
    "start_column": 5,
    "end_line": 198,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 856,
    "start_column": 3,
    "end_line": 856,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, aDbBytes, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 88,
    "start_column": 26,
    "end_line": 88,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 753,
    "start_column": 5,
    "end_line": 753,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 754,
    "start_column": 5,
    "end_line": 754,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 765,
    "start_column": 9,
    "end_line": 765,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 767,
    "start_column": 5,
    "end_line": 767,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 773,
    "start_column": 5,
    "end_line": 773,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 787,
    "start_column": 5,
    "end_line": 787,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 799,
    "start_column": 14,
    "end_line": 799,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 806,
    "start_column": 5,
    "end_line": 806,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 811,
    "start_column": 3,
    "end_line": 811,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 814,
    "start_column": 5,
    "end_line": 814,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 820,
    "start_column": 5,
    "end_line": 820,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 853,
    "start_column": 5,
    "end_line": 853,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 860,
    "start_column": 5,
    "end_line": 860,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 893,
    "start_column": 5,
    "end_line": 893,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 899,
    "start_column": 5,
    "end_line": 899,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 907,
    "start_column": 7,
    "end_line": 907,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 913,
    "start_column": 7,
    "end_line": 913,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 918,
    "start_column": 7,
    "end_line": 918,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 935,
    "start_column": 7,
    "end_line": 935,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 951,
    "start_column": 26,
    "end_line": 951,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 961,
    "start_column": 11,
    "end_line": 961,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 966,
    "start_column": 13,
    "end_line": 966,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 974,
    "start_column": 13,
    "end_line": 974,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 982,
    "start_column": 24,
    "end_line": 982,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 983,
    "start_column": 9,
    "end_line": 983,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 987,
    "start_column": 9,
    "end_line": 987,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 991,
    "start_column": 9,
    "end_line": 991,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 999,
    "start_column": 5,
    "end_line": 999,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 1004,
    "start_column": 5,
    "end_line": 1004,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 1010,
    "start_column": 5,
    "end_line": 1010,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 1012,
    "start_column": 7,
    "end_line": 1012,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/sessionfuzz.c",
    "start_line": 1018,
    "start_column": 5,
    "end_line": 1018,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/tt3_checkpoint.c",
    "start_line": 119,
    "start_column": 3,
    "end_line": 119,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/tt3_checkpoint.c",
    "start_line": 122,
    "start_column": 3,
    "end_line": 122,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/tt3_checkpoint.c",
    "start_line": 123,
    "start_column": 3,
    "end_line": 123,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 200,
    "start_column": 3,
    "end_line": 200,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, aData, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 356,
    "start_column": 10,
    "end_line": 356,
    "end_column": 25,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nIn+1 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 89,
    "start_column": 5,
    "end_line": 89,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 97,
    "start_column": 5,
    "end_line": 97,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 108,
    "start_column": 5,
    "end_line": 108,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 174,
    "start_column": 5,
    "end_line": 174,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 192,
    "start_column": 5,
    "end_line": 192,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 219,
    "start_column": 7,
    "end_line": 219,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 226,
    "start_column": 7,
    "end_line": 226,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 232,
    "start_column": 5,
    "end_line": 232,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 238,
    "start_column": 5,
    "end_line": 238,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 280,
    "start_column": 11,
    "end_line": 280,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 296,
    "start_column": 11,
    "end_line": 296,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 311,
    "start_column": 11,
    "end_line": 311,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 324,
    "start_column": 22,
    "end_line": 324,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 329,
    "start_column": 9,
    "end_line": 329,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 348,
    "start_column": 14,
    "end_line": 348,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 355,
    "start_column": 3,
    "end_line": 355,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 386,
    "start_column": 5,
    "end_line": 386,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/dbfuzz2.c",
    "start_line": 389,
    "start_column": 7,
    "end_line": 389,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 63,
    "start_column": 9,
    "end_line": 63,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 64,
    "start_column": 9,
    "end_line": 64,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 70,
    "start_column": 10,
    "end_line": 70,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 72,
    "start_column": 7,
    "end_line": 72,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 81,
    "start_column": 7,
    "end_line": 81,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 85,
    "start_column": 7,
    "end_line": 85,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 89,
    "start_column": 7,
    "end_line": 89,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 90,
    "start_column": 20,
    "end_line": 90,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 93,
    "start_column": 20,
    "end_line": 93,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/ossshell.c",
    "start_line": 94,
    "start_column": 7,
    "end_line": 94,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 52,
    "start_column": 17,
    "end_line": 52,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 86,
    "start_column": 7,
    "end_line": 86,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 113,
    "start_column": 17,
    "end_line": 113,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 119,
    "start_column": 17,
    "end_line": 119,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 121,
    "start_column": 5,
    "end_line": 121,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 145,
    "start_column": 17,
    "end_line": 145,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 149,
    "start_column": 17,
    "end_line": 149,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 151,
    "start_column": 5,
    "end_line": 151,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 180,
    "start_column": 7,
    "end_line": 180,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 198,
    "start_column": 11,
    "end_line": 198,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 205,
    "start_column": 3,
    "end_line": 205,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 210,
    "start_column": 7,
    "end_line": 210,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 229,
    "start_column": 7,
    "end_line": 229,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 230,
    "start_column": 7,
    "end_line": 230,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 236,
    "start_column": 3,
    "end_line": 236,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 257,
    "start_column": 20,
    "end_line": 257,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 260,
    "start_column": 5,
    "end_line": 260,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest1.c",
    "start_line": 285,
    "start_column": 5,
    "end_line": 285,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 324,
    "start_column": 15,
    "end_line": 324,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 331,
    "start_column": 15,
    "end_line": 331,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 338,
    "start_column": 15,
    "end_line": 338,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 344,
    "start_column": 15,
    "end_line": 344,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 350,
    "start_column": 15,
    "end_line": 350,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 356,
    "start_column": 15,
    "end_line": 356,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 360,
    "start_column": 15,
    "end_line": 360,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut+i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 371,
    "start_column": 16,
    "end_line": 371,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTestName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 377,
    "start_column": 12,
    "end_line": 377,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 437,
    "start_column": 16,
    "end_line": 437,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 542,
    "start_column": 18,
    "end_line": 542,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 600,
    "start_column": 16,
    "end_line": 600,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1801,
    "start_column": 16,
    "end_line": 1801,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNum)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2123,
    "start_column": 20,
    "end_line": 2123,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aTrans[i].zPattern)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 578,
    "start_column": 9,
    "end_line": 578,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(g.zResult + g.nResult, z, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 648,
    "start_column": 3,
    "end_line": 648,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z+p->nUsed, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2326,
    "start_column": 13,
    "end_line": 2326,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nHeap )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2333,
    "start_column": 17,
    "end_line": 2333,
    "end_column": 48,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nPCache*(sqlite3_int64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2352,
    "start_column": 13,
    "end_line": 2352,
    "end_column": 35,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nLook*szLook )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 119,
    "start_column": 3,
    "end_line": 119,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 383,
    "start_column": 5,
    "end_line": 383,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 385,
    "start_column": 5,
    "end_line": 385,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 404,
    "start_column": 5,
    "end_line": 404,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 415,
    "start_column": 5,
    "end_line": 415,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 422,
    "start_column": 5,
    "end_line": 422,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 427,
    "start_column": 7,
    "end_line": 427,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 431,
    "start_column": 5,
    "end_line": 431,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 439,
    "start_column": 20,
    "end_line": 439,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 440,
    "start_column": 3,
    "end_line": 440,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 449,
    "start_column": 5,
    "end_line": 449,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 602,
    "start_column": 3,
    "end_line": 602,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1370,
    "start_column": 34,
    "end_line": 1370,
    "end_column": 40,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1373,
    "start_column": 17,
    "end_line": 1373,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1471,
    "start_column": 17,
    "end_line": 1471,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1484,
    "start_column": 22,
    "end_line": 1484,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1486,
    "start_column": 57,
    "end_line": 1486,
    "end_column": 61,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1500,
    "start_column": 17,
    "end_line": 1500,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1513,
    "start_column": 22,
    "end_line": 1513,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1515,
    "start_column": 57,
    "end_line": 1515,
    "end_column": 61,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1531,
    "start_column": 20,
    "end_line": 1531,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1533,
    "start_column": 55,
    "end_line": 1533,
    "end_column": 59,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1547,
    "start_column": 17,
    "end_line": 1547,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1577,
    "start_column": 17,
    "end_line": 1577,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 1598,
    "start_column": 17,
    "end_line": 1598,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2091,
    "start_column": 5,
    "end_line": 2091,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2106,
    "start_column": 8,
    "end_line": 2106,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2125,
    "start_column": 9,
    "end_line": 2125,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2139,
    "start_column": 3,
    "end_line": 2139,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2173,
    "start_column": 3,
    "end_line": 2173,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2244,
    "start_column": 24,
    "end_line": 2244,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2310,
    "start_column": 9,
    "end_line": 2310,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2395,
    "start_column": 20,
    "end_line": 2395,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2406,
    "start_column": 7,
    "end_line": 2406,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2469,
    "start_column": 5,
    "end_line": 2469,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2471,
    "start_column": 5,
    "end_line": 2471,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2473,
    "start_column": 5,
    "end_line": 2473,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2475,
    "start_column": 5,
    "end_line": 2475,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2477,
    "start_column": 5,
    "end_line": 2477,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2479,
    "start_column": 5,
    "end_line": 2479,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2481,
    "start_column": 5,
    "end_line": 2481,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2484,
    "start_column": 5,
    "end_line": 2484,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2487,
    "start_column": 5,
    "end_line": 2487,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2489,
    "start_column": 5,
    "end_line": 2489,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2500,
    "start_column": 5,
    "end_line": 2500,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2503,
    "start_column": 5,
    "end_line": 2503,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2506,
    "start_column": 5,
    "end_line": 2506,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2508,
    "start_column": 5,
    "end_line": 2508,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/speedtest1.c",
    "start_line": 2510,
    "start_column": 5,
    "end_line": 2510,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 126,
    "start_column": 5,
    "end_line": 126,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 131,
    "start_column": 5,
    "end_line": 131,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 140,
    "start_column": 3,
    "end_line": 140,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 141,
    "start_column": 3,
    "end_line": 141,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 143,
    "start_column": 3,
    "end_line": 143,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 144,
    "start_column": 3,
    "end_line": 144,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 145,
    "start_column": 3,
    "end_line": 145,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 147,
    "start_column": 3,
    "end_line": 147,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/atrc.c",
    "start_line": 148,
    "start_column": 3,
    "end_line": 148,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 46,
    "start_column": 5,
    "end_line": 46,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 63,
    "start_column": 5,
    "end_line": 63,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 79,
    "start_column": 3,
    "end_line": 79,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 81,
    "start_column": 22,
    "end_line": 81,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 91,
    "start_column": 3,
    "end_line": 91,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 111,
    "start_column": 5,
    "end_line": 111,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 116,
    "start_column": 5,
    "end_line": 116,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 127,
    "start_column": 5,
    "end_line": 127,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest2.c",
    "start_line": 130,
    "start_column": 5,
    "end_line": 130,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 123,
    "start_column": 3,
    "end_line": 123,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 130,
    "start_column": 3,
    "end_line": 130,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 136,
    "start_column": 3,
    "end_line": 136,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 143,
    "start_column": 3,
    "end_line": 143,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 145,
    "start_column": 5,
    "end_line": 145,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 147,
    "start_column": 3,
    "end_line": 147,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 331,
    "start_column": 21,
    "end_line": 331,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 334,
    "start_column": 20,
    "end_line": 334,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 337,
    "start_column": 26,
    "end_line": 337,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 371,
    "start_column": 10,
    "end_line": 371,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 409,
    "start_column": 7,
    "end_line": 409,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 566,
    "start_column": 7,
    "end_line": 566,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 570,
    "start_column": 9,
    "end_line": 570,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 579,
    "start_column": 7,
    "end_line": 579,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 582,
    "start_column": 9,
    "end_line": 582,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 585,
    "start_column": 50,
    "end_line": 585,
    "end_column": 57,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 586,
    "start_column": 9,
    "end_line": 586,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 613,
    "start_column": 5,
    "end_line": 613,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 621,
    "start_column": 5,
    "end_line": 621,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 623,
    "start_column": 5,
    "end_line": 623,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 625,
    "start_column": 5,
    "end_line": 625,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 627,
    "start_column": 5,
    "end_line": 627,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 629,
    "start_column": 5,
    "end_line": 629,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 631,
    "start_column": 5,
    "end_line": 631,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 633,
    "start_column": 5,
    "end_line": 633,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 635,
    "start_column": 5,
    "end_line": 635,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 637,
    "start_column": 5,
    "end_line": 637,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 639,
    "start_column": 5,
    "end_line": 639,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 648,
    "start_column": 5,
    "end_line": 648,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 650,
    "start_column": 5,
    "end_line": 650,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 652,
    "start_column": 5,
    "end_line": 652,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 654,
    "start_column": 5,
    "end_line": 654,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/wordcount.c",
    "start_line": 656,
    "start_column": 5,
    "end_line": 656,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 387,
    "start_column": 43,
    "end_line": 387,
    "end_column": 56,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 287,
    "start_column": 7,
    "end_line": 287,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, buf, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 290,
    "start_column": 5,
    "end_line": 290,
    "end_column": 22,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, buf, t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 300,
    "start_column": 5,
    "end_line": 300,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ctx->u.in, buf, 64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 309,
    "start_column": 3,
    "end_line": 309,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ctx->u.in, buf, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 352,
    "start_column": 3,
    "end_line": 352,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(digest, ctx->buf, 16)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 460,
    "start_column": 5,
    "end_line": 460,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 799,
    "start_column": 7,
    "end_line": 799,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1232,
    "start_column": 5,
    "end_line": 1232,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1233,
    "start_column": 5,
    "end_line": 1233,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1245,
    "start_column": 5,
    "end_line": 1245,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1246,
    "start_column": 5,
    "end_line": 1246,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1481,
    "start_column": 11,
    "end_line": 1481,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1503,
    "start_column": 9,
    "end_line": 1503,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1512,
    "start_column": 3,
    "end_line": 1512,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1516,
    "start_column": 3,
    "end_line": 1516,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1517,
    "start_column": 3,
    "end_line": 1517,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 1519,
    "start_column": 5,
    "end_line": 1519,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 127,
    "start_column": 8,
    "end_line": 127,
    "end_column": 11,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 136,
    "start_column": 16,
    "end_line": 136,
    "end_column": 19,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 136,
    "start_column": 27,
    "end_line": 136,
    "end_column": 30,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 159,
    "start_column": 9,
    "end_line": 159,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 167,
    "start_column": 13,
    "end_line": 167,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 175,
    "start_column": 3,
    "end_line": 175,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 176,
    "start_column": 3,
    "end_line": 176,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 177,
    "start_column": 3,
    "end_line": 177,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 178,
    "start_column": 3,
    "end_line": 178,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 179,
    "start_column": 3,
    "end_line": 179,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 180,
    "start_column": 3,
    "end_line": 180,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 181,
    "start_column": 3,
    "end_line": 181,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 182,
    "start_column": 3,
    "end_line": 182,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 183,
    "start_column": 3,
    "end_line": 183,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 184,
    "start_column": 3,
    "end_line": 184,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 185,
    "start_column": 3,
    "end_line": 185,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 186,
    "start_column": 3,
    "end_line": 186,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 187,
    "start_column": 3,
    "end_line": 187,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 188,
    "start_column": 3,
    "end_line": 188,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 189,
    "start_column": 3,
    "end_line": 189,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 190,
    "start_column": 3,
    "end_line": 190,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 192,
    "start_column": 3,
    "end_line": 192,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 193,
    "start_column": 3,
    "end_line": 193,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 194,
    "start_column": 3,
    "end_line": 194,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 195,
    "start_column": 3,
    "end_line": 195,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 196,
    "start_column": 3,
    "end_line": 196,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 197,
    "start_column": 3,
    "end_line": 197,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 198,
    "start_column": 3,
    "end_line": 198,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 199,
    "start_column": 3,
    "end_line": 199,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 200,
    "start_column": 3,
    "end_line": 200,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 201,
    "start_column": 3,
    "end_line": 201,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 202,
    "start_column": 3,
    "end_line": 202,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 203,
    "start_column": 3,
    "end_line": 203,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 204,
    "start_column": 3,
    "end_line": 204,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 205,
    "start_column": 3,
    "end_line": 205,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 206,
    "start_column": 3,
    "end_line": 206,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 207,
    "start_column": 3,
    "end_line": 207,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 209,
    "start_column": 3,
    "end_line": 209,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 210,
    "start_column": 3,
    "end_line": 210,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 211,
    "start_column": 3,
    "end_line": 211,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 212,
    "start_column": 3,
    "end_line": 212,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 213,
    "start_column": 3,
    "end_line": 213,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 214,
    "start_column": 3,
    "end_line": 214,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 215,
    "start_column": 3,
    "end_line": 215,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 216,
    "start_column": 3,
    "end_line": 216,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 217,
    "start_column": 3,
    "end_line": 217,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 218,
    "start_column": 3,
    "end_line": 218,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 219,
    "start_column": 3,
    "end_line": 219,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 220,
    "start_column": 3,
    "end_line": 220,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 221,
    "start_column": 3,
    "end_line": 221,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 222,
    "start_column": 3,
    "end_line": 222,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 223,
    "start_column": 3,
    "end_line": 223,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 224,
    "start_column": 3,
    "end_line": 224,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 226,
    "start_column": 3,
    "end_line": 226,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 227,
    "start_column": 3,
    "end_line": 227,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 228,
    "start_column": 3,
    "end_line": 228,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 229,
    "start_column": 3,
    "end_line": 229,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 230,
    "start_column": 3,
    "end_line": 230,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 231,
    "start_column": 3,
    "end_line": 231,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 232,
    "start_column": 3,
    "end_line": 232,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 233,
    "start_column": 3,
    "end_line": 233,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 234,
    "start_column": 3,
    "end_line": 234,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 235,
    "start_column": 3,
    "end_line": 235,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 236,
    "start_column": 3,
    "end_line": 236,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 237,
    "start_column": 3,
    "end_line": 237,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 238,
    "start_column": 3,
    "end_line": 238,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 239,
    "start_column": 3,
    "end_line": 239,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 240,
    "start_column": 3,
    "end_line": 240,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 241,
    "start_column": 3,
    "end_line": 241,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 253,
    "start_column": 13,
    "end_line": 253,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 253,
    "start_column": 21,
    "end_line": 253,
    "end_column": 24,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 268,
    "start_column": 6,
    "end_line": 268,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 268,
    "start_column": 16,
    "end_line": 268,
    "end_column": 19,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 292,
    "start_column": 5,
    "end_line": 292,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 302,
    "start_column": 5,
    "end_line": 302,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 316,
    "start_column": 13,
    "end_line": 316,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 316,
    "start_column": 48,
    "end_line": 316,
    "end_column": 51,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 336,
    "start_column": 5,
    "end_line": 336,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 350,
    "start_column": 3,
    "end_line": 350,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 359,
    "start_column": 13,
    "end_line": 359,
    "end_column": 16,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 376,
    "start_column": 3,
    "end_line": 376,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 382,
    "start_column": 5,
    "end_line": 382,
    "end_column": 8,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 387,
    "start_column": 7,
    "end_line": 387,
    "end_column": 10,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 392,
    "start_column": 3,
    "end_line": 392,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 396,
    "start_column": 3,
    "end_line": 396,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 397,
    "start_column": 3,
    "end_line": 397,
    "end_column": 6,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "MD5"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 177,
    "start_column": 36,
    "end_line": 177,
    "end_column": 44,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "242070db"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest3.c",
    "start_line": 197,
    "start_column": 36,
    "end_line": 197,
    "end_column": 44,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "02441453"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 71,
    "start_column": 5,
    "end_line": 71,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 97,
    "start_column": 3,
    "end_line": 97,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 116,
    "start_column": 5,
    "end_line": 116,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 140,
    "start_column": 5,
    "end_line": 140,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 154,
    "start_column": 9,
    "end_line": 154,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 160,
    "start_column": 7,
    "end_line": 160,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 193,
    "start_column": 5,
    "end_line": 193,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 262,
    "start_column": 52,
    "end_line": 262,
    "end_column": 58,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 291,
    "start_column": 3,
    "end_line": 291,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 356,
    "start_column": 3,
    "end_line": 356,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 389,
    "start_column": 9,
    "end_line": 389,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 393,
    "start_column": 17,
    "end_line": 393,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 395,
    "start_column": 9,
    "end_line": 395,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 399,
    "start_column": 7,
    "end_line": 399,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 404,
    "start_column": 5,
    "end_line": 404,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 417,
    "start_column": 5,
    "end_line": 417,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 430,
    "start_column": 5,
    "end_line": 430,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 462,
    "start_column": 7,
    "end_line": 462,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 469,
    "start_column": 5,
    "end_line": 469,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 472,
    "start_column": 7,
    "end_line": 472,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 474,
    "start_column": 7,
    "end_line": 474,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/threadtest4.c",
    "start_line": 482,
    "start_column": 3,
    "end_line": 482,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 540,
    "start_column": 14,
    "end_line": 540,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDir)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 702,
    "start_column": 20,
    "end_line": 702,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aTrans[i].zPattern)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 167,
    "start_column": 3,
    "end_line": 167,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 176,
    "start_column": 3,
    "end_line": 176,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 178,
    "start_column": 3,
    "end_line": 178,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 180,
    "start_column": 3,
    "end_line": 180,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 410,
    "start_column": 5,
    "end_line": 410,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 412,
    "start_column": 5,
    "end_line": 412,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 422,
    "start_column": 5,
    "end_line": 422,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 423,
    "start_column": 5,
    "end_line": 423,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 424,
    "start_column": 5,
    "end_line": 424,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 425,
    "start_column": 5,
    "end_line": 425,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 427,
    "start_column": 5,
    "end_line": 427,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 435,
    "start_column": 5,
    "end_line": 435,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 443,
    "start_column": 5,
    "end_line": 443,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 451,
    "start_column": 5,
    "end_line": 451,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 457,
    "start_column": 5,
    "end_line": 457,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 561,
    "start_column": 11,
    "end_line": 561,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 564,
    "start_column": 5,
    "end_line": 564,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 573,
    "start_column": 3,
    "end_line": 573,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 600,
    "start_column": 8,
    "end_line": 600,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 639,
    "start_column": 9,
    "end_line": 639,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 685,
    "start_column": 8,
    "end_line": 685,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 704,
    "start_column": 9,
    "end_line": 704,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 724,
    "start_column": 3,
    "end_line": 724,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 728,
    "start_column": 3,
    "end_line": 728,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 733,
    "start_column": 3,
    "end_line": 733,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 737,
    "start_column": 3,
    "end_line": 737,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 742,
    "start_column": 3,
    "end_line": 742,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 747,
    "start_column": 3,
    "end_line": 747,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 751,
    "start_column": 3,
    "end_line": 751,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 756,
    "start_column": 3,
    "end_line": 756,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 760,
    "start_column": 3,
    "end_line": 760,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 763,
    "start_column": 3,
    "end_line": 763,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 766,
    "start_column": 3,
    "end_line": 766,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1082,
    "start_column": 5,
    "end_line": 1082,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1085,
    "start_column": 5,
    "end_line": 1085,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1090,
    "start_column": 9,
    "end_line": 1090,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1097,
    "start_column": 3,
    "end_line": 1097,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1099,
    "start_column": 25,
    "end_line": 1099,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1100,
    "start_column": 25,
    "end_line": 1100,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1101,
    "start_column": 25,
    "end_line": 1101,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1104,
    "start_column": 5,
    "end_line": 1104,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1105,
    "start_column": 5,
    "end_line": 1105,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1106,
    "start_column": 18,
    "end_line": 1106,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1108,
    "start_column": 19,
    "end_line": 1108,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1109,
    "start_column": 3,
    "end_line": 1109,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1111,
    "start_column": 5,
    "end_line": 1111,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1112,
    "start_column": 5,
    "end_line": 1112,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1114,
    "start_column": 5,
    "end_line": 1114,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/kvtest.c",
    "start_line": 1115,
    "start_column": 5,
    "end_line": 1115,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 292,
    "start_column": 22,
    "end_line": 292,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1655,
    "start_column": 16,
    "end_line": 1655,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDbName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1770,
    "start_column": 47,
    "end_line": 1770,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zExpDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1789,
    "start_column": 48,
    "end_line": 1789,
    "end_column": 63,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zExpSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1824,
    "start_column": 16,
    "end_line": 1824,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDbName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 294,
    "start_column": 5,
    "end_line": 294,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zFilename, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 301,
    "start_column": 14,
    "end_line": 301,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->a, pData, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 436,
    "start_column": 5,
    "end_line": 436,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->a, sqlite3_column_blob(pStmt,1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 931,
    "start_column": 5,
    "end_line": 931,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSql, aData+iSql, nSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1032,
    "start_column": 5,
    "end_line": 1032,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pVFile->a + iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1035,
    "start_column": 3,
    "end_line": 1035,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pVFile->a + iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1056,
    "start_column": 3,
    "end_line": 1056,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pVFile->a + iOfst, pData, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1193,
    "start_column": 3,
    "end_line": 1193,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, &g.uRandom, nBuf<sizeof(g.uRandom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 164,
    "start_column": 3,
    "end_line": 164,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 165,
    "start_column": 19,
    "end_line": 165,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 166,
    "start_column": 24,
    "end_line": 166,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 167,
    "start_column": 3,
    "end_line": 167,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 169,
    "start_column": 3,
    "end_line": 169,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 171,
    "start_column": 3,
    "end_line": 171,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 323,
    "start_column": 8,
    "end_line": 323,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 327,
    "start_column": 3,
    "end_line": 327,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 355,
    "start_column": 8,
    "end_line": 355,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 359,
    "start_column": 3,
    "end_line": 359,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 389,
    "start_column": 9,
    "end_line": 389,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 532,
    "start_column": 5,
    "end_line": 532,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 642,
    "start_column": 5,
    "end_line": 642,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 659,
    "start_column": 15,
    "end_line": 659,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 678,
    "start_column": 13,
    "end_line": 678,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 719,
    "start_column": 5,
    "end_line": 719,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 753,
    "start_column": 20,
    "end_line": 753,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 771,
    "start_column": 5,
    "end_line": 771,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 780,
    "start_column": 19,
    "end_line": 780,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 783,
    "start_column": 15,
    "end_line": 783,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 788,
    "start_column": 15,
    "end_line": 788,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 796,
    "start_column": 15,
    "end_line": 796,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 798,
    "start_column": 17,
    "end_line": 798,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 800,
    "start_column": 15,
    "end_line": 800,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 808,
    "start_column": 15,
    "end_line": 808,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 811,
    "start_column": 19,
    "end_line": 811,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 816,
    "start_column": 15,
    "end_line": 816,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 821,
    "start_column": 9,
    "end_line": 821,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 826,
    "start_column": 7,
    "end_line": 826,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 830,
    "start_column": 5,
    "end_line": 830,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 854,
    "start_column": 5,
    "end_line": 854,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 863,
    "start_column": 5,
    "end_line": 863,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 907,
    "start_column": 5,
    "end_line": 907,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 929,
    "start_column": 5,
    "end_line": 929,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 955,
    "start_column": 5,
    "end_line": 955,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 958,
    "start_column": 5,
    "end_line": 958,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 965,
    "start_column": 5,
    "end_line": 965,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1244,
    "start_column": 9,
    "end_line": 1244,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1246,
    "start_column": 9,
    "end_line": 1246,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1260,
    "start_column": 13,
    "end_line": 1260,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1264,
    "start_column": 13,
    "end_line": 1264,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1267,
    "start_column": 17,
    "end_line": 1267,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1271,
    "start_column": 17,
    "end_line": 1271,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1275,
    "start_column": 17,
    "end_line": 1275,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1279,
    "start_column": 17,
    "end_line": 1279,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1283,
    "start_column": 17,
    "end_line": 1283,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1402,
    "start_column": 3,
    "end_line": 1402,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1403,
    "start_column": 3,
    "end_line": 1403,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1489,
    "start_column": 15,
    "end_line": 1489,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1567,
    "start_column": 21,
    "end_line": 1567,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1616,
    "start_column": 9,
    "end_line": 1616,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1618,
    "start_column": 11,
    "end_line": 1618,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1660,
    "start_column": 9,
    "end_line": 1660,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1662,
    "start_column": 9,
    "end_line": 1662,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1670,
    "start_column": 9,
    "end_line": 1670,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1678,
    "start_column": 9,
    "end_line": 1678,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1681,
    "start_column": 7,
    "end_line": 1681,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1721,
    "start_column": 29,
    "end_line": 1721,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1725,
    "start_column": 29,
    "end_line": 1725,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1764,
    "start_column": 29,
    "end_line": 1764,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1765,
    "start_column": 25,
    "end_line": 1765,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1774,
    "start_column": 11,
    "end_line": 1774,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1783,
    "start_column": 29,
    "end_line": 1783,
    "end_column": 35,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1784,
    "start_column": 26,
    "end_line": 1784,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1793,
    "start_column": 11,
    "end_line": 1793,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1829,
    "start_column": 9,
    "end_line": 1829,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1837,
    "start_column": 9,
    "end_line": 1837,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1841,
    "start_column": 24,
    "end_line": 1841,
    "end_column": 30,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1879,
    "start_column": 51,
    "end_line": 1879,
    "end_column": 57,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1886,
    "start_column": 11,
    "end_line": 1886,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1889,
    "start_column": 11,
    "end_line": 1889,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1896,
    "start_column": 13,
    "end_line": 1896,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1915,
    "start_column": 11,
    "end_line": 1915,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1918,
    "start_column": 11,
    "end_line": 1918,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1925,
    "start_column": 13,
    "end_line": 1925,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1989,
    "start_column": 13,
    "end_line": 1989,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1997,
    "start_column": 7,
    "end_line": 1997,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 1999,
    "start_column": 7,
    "end_line": 1999,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/fuzzcheck.c",
    "start_line": 2013,
    "start_column": 5,
    "end_line": 2013,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 44,
    "start_column": 5,
    "end_line": 44,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 58,
    "start_column": 5,
    "end_line": 58,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 63,
    "start_column": 3,
    "end_line": 63,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 90,
    "start_column": 5,
    "end_line": 90,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 55,
    "start_column": 8,
    "end_line": 55,
    "end_column": 13,
    "rule_id": "DS148264",
    "rule_name": "Do not use weak/non-cryptographic random number generators",
    "severity": 2,
    "description": "Use cryptographic random numbers generators for anything even close to a security function.",
    "match": "rand("
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 55,
    "start_column": 16,
    "end_line": 55,
    "end_column": 21,
    "rule_id": "DS148264",
    "rule_name": "Do not use weak/non-cryptographic random number generators",
    "severity": 2,
    "description": "Use cryptographic random numbers generators for anything even close to a security function.",
    "match": "rand("
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 91,
    "start_column": 12,
    "end_line": 91,
    "end_column": 17,
    "rule_id": "DS148264",
    "rule_name": "Do not use weak/non-cryptographic random number generators",
    "severity": 2,
    "description": "Use cryptographic random numbers generators for anything even close to a security function.",
    "match": "rand("
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/crashtest1.c",
    "start_line": 91,
    "start_column": 12,
    "end_line": 91,
    "end_column": 19,
    "rule_id": "DS148264",
    "rule_name": "Do not use weak/non-cryptographic random number generators",
    "severity": 2,
    "description": "Use cryptographic random numbers generators for anything even close to a security function.",
    "match": "rand()%"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 132,
    "start_column": 19,
    "end_line": 132,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zLine+j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 49,
    "start_column": 5,
    "end_line": 49,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 71,
    "start_column": 5,
    "end_line": 71,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 110,
    "start_column": 7,
    "end_line": 110,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 137,
    "start_column": 9,
    "end_line": 137,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 141,
    "start_column": 9,
    "end_line": 141,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 183,
    "start_column": 14,
    "end_line": 183,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 190,
    "start_column": 3,
    "end_line": 190,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 218,
    "start_column": 7,
    "end_line": 218,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 219,
    "start_column": 7,
    "end_line": 219,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 220,
    "start_column": 7,
    "end_line": 220,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 221,
    "start_column": 7,
    "end_line": 221,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 222,
    "start_column": 7,
    "end_line": 222,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 232,
    "start_column": 7,
    "end_line": 232,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 239,
    "start_column": 9,
    "end_line": 239,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 256,
    "start_column": 27,
    "end_line": 256,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 261,
    "start_column": 18,
    "end_line": 261,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 264,
    "start_column": 7,
    "end_line": 264,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 268,
    "start_column": 20,
    "end_line": 268,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 271,
    "start_column": 9,
    "end_line": 271,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 280,
    "start_column": 9,
    "end_line": 280,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 284,
    "start_column": 9,
    "end_line": 284,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 290,
    "start_column": 9,
    "end_line": 290,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 292,
    "start_column": 9,
    "end_line": 292,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 295,
    "start_column": 9,
    "end_line": 295,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/test/optfuzz.c",
    "start_line": 305,
    "start_column": 5,
    "end_line": 305,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/repair/checkindex.c",
    "start_line": 284,
    "start_column": 18,
    "end_line": 284,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/repair/checkindex.c",
    "start_line": 541,
    "start_column": 24,
    "end_line": 541,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAfterKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/repair/checkindex.c",
    "start_line": 286,
    "start_column": 16,
    "end_line": 286,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zStr, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/repair/checkindex.c",
    "start_line": 548,
    "start_column": 5,
    "end_line": 548,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zAfterKey, nAfterKey+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_mi.c",
    "start_line": 345,
    "start_column": 3,
    "end_line": 345,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zArg, zArg, i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_buffer.c",
    "start_line": 87,
    "start_column": 19,
    "end_line": 87,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_buffer.c",
    "start_line": 281,
    "start_column": 18,
    "end_line": 281,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_buffer.c",
    "start_line": 72,
    "start_column": 5,
    "end_line": 72,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pBuf->p[pBuf->n], pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_buffer.c",
    "start_line": 285,
    "start_column": 7,
    "end_line": 285,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, pIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_buffer.c",
    "start_line": 380,
    "start_column": 9,
    "end_line": 380,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->pTerm, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 838,
    "start_column": 45,
    "end_line": 838,
    "end_column": 61,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 1688,
    "start_column": 14,
    "end_line": 1688,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 1775,
    "start_column": 66,
    "end_line": 1775,
    "end_column": 79,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 2268,
    "start_column": 19,
    "end_line": 2268,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTerm->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 2751,
    "start_column": 24,
    "end_line": 2751,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTerm->zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 401,
    "start_column": 9,
    "end_line": 401,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aNew, aIter, sizeof(Fts5PoslistReader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 1604,
    "start_column": 7,
    "end_line": 1604,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSyn->zTerm, pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 1762,
    "start_column": 9,
    "end_line": 1762,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pColset, pColsetOrig, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 1979,
    "start_column": 7,
    "end_line": 1979,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, pOrig, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 2107,
    "start_column": 5,
    "end_line": 2107,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->apChild[p->nChild], pSub->apChild, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 331,
    "start_column": 9,
    "end_line": 331,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_expr.c",
    "start_line": 2248,
    "start_column": 7,
    "end_line": 2248,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_storage.c",
    "start_line": 309,
    "start_column": 21,
    "end_line": 309,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDefn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_storage.c",
    "start_line": 312,
    "start_column": 24,
    "end_line": 312,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&zDefn[iOff])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 186,
    "start_column": 21,
    "end_line": 186,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 196,
    "start_column": 20,
    "end_line": 196,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 197,
    "start_column": 21,
    "end_line": 197,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 214,
    "start_column": 7,
    "end_line": 214,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zFts5Tbl, zTab, nTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 215,
    "start_column": 7,
    "end_line": 215,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zFts5Db, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_vocab.c",
    "start_line": 641,
    "start_column": 9,
    "end_line": 641,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zLeTerm, zCopy, pCsr->nLeTerm+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_main.c",
    "start_line": 586,
    "start_column": 23,
    "end_line": 586,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&idxStr[iIdxStr])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_main.c",
    "start_line": 2568,
    "start_column": 13,
    "end_line": 2568,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_main.c",
    "start_line": 2606,
    "start_column": 11,
    "end_line": 2606,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_main.c",
    "start_line": 2574,
    "start_column": 7,
    "end_line": 2574,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAux->zFunc, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_main.c",
    "start_line": 2612,
    "start_column": 5,
    "end_line": 2612,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 210,
    "start_column": 20,
    "end_line": 210,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zEnum)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 242,
    "start_column": 19,
    "end_line": 242,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCmd)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 298,
    "start_column": 26,
    "end_line": 298,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 428,
    "start_column": 23,
    "end_line": 428,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 316,
    "start_column": 13,
    "end_line": 316,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSpace, p2, p-p2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 438,
    "start_column": 5,
    "end_line": 438,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 782,
    "start_column": 19,
    "end_line": 782,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRank, pRank, p-pRank)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_config.c",
    "start_line": 802,
    "start_column": 27,
    "end_line": 802,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRankArgs, pArgs, p-pArgs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tcl.c",
    "start_line": 188,
    "start_column": 3,
    "end_line": 188,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tcl.c",
    "start_line": 533,
    "start_column": 3,
    "end_line": 533,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 255,
    "start_column": 16,
    "end_line": 255,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 632,
    "start_column": 13,
    "end_line": 632,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 633,
    "start_column": 13,
    "end_line": 633,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zOutput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 81,
    "start_column": 7,
    "end_line": 81,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aTokenChar, aAsciiTokenChar, sizeof(aAsciiTokenChar)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 500,
    "start_column": 9,
    "end_line": 500,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aFold, p->aFold, nFold)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 641,
    "start_column": 7,
    "end_line": 641,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nStem], p->zOutput, p->nOutput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 880,
    "start_column": 9,
    "end_line": 880,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 888,
    "start_column": 9,
    "end_line": 888,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 896,
    "start_column": 9,
    "end_line": 896,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-2], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 915,
    "start_column": 11,
    "end_line": 915,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 920,
    "start_column": 11,
    "end_line": 920,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-6], \"tion\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 929,
    "start_column": 11,
    "end_line": 929,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ence\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 934,
    "start_column": 11,
    "end_line": 934,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ance\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 943,
    "start_column": 11,
    "end_line": 943,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 952,
    "start_column": 11,
    "end_line": 952,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"log\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 961,
    "start_column": 11,
    "end_line": 961,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 966,
    "start_column": 11,
    "end_line": 966,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 971,
    "start_column": 11,
    "end_line": 971,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ent\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 976,
    "start_column": 11,
    "end_line": 976,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"e\", 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 981,
    "start_column": 11,
    "end_line": 981,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ous\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 990,
    "start_column": 11,
    "end_line": 990,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ize\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 995,
    "start_column": 11,
    "end_line": 995,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1000,
    "start_column": 11,
    "end_line": 1000,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ate\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1009,
    "start_column": 11,
    "end_line": 1009,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1014,
    "start_column": 11,
    "end_line": 1014,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ive\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1019,
    "start_column": 11,
    "end_line": 1019,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ful\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1024,
    "start_column": 11,
    "end_line": 1024,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-7], \"ous\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1033,
    "start_column": 11,
    "end_line": 1033,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1038,
    "start_column": 11,
    "end_line": 1038,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ive\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1043,
    "start_column": 11,
    "end_line": 1043,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-6], \"ble\", 3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1062,
    "start_column": 11,
    "end_line": 1062,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-4], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1079,
    "start_column": 11,
    "end_line": 1079,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1084,
    "start_column": 11,
    "end_line": 1084,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"ic\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1109,
    "start_column": 11,
    "end_line": 1109,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-5], \"al\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1128,
    "start_column": 11,
    "end_line": 1128,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nBuf-3], \"ee\", 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 1191,
    "start_column": 3,
    "end_line": 1191,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aBuf, pToken, nBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_tokenize.c",
    "start_line": 280,
    "start_column": 13,
    "end_line": 280,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 1940,
    "start_column": 54,
    "end_line": 1940,
    "end_column": 67,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 2020,
    "start_column": 55,
    "end_line": 2020,
    "end_column": 68,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 2469,
    "start_column": 19,
    "end_line": 2469,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((const char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 4537,
    "start_column": 44,
    "end_line": 4537,
    "end_column": 57,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 1101,
    "start_column": 3,
    "end_line": 1101,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&(pBuf)->p[(pBuf)->n], pBlob, nBlob)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 1199,
    "start_column": 9,
    "end_line": 1199,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->aSeg, &pLvl->aSeg[is], sizeof(Fts5StructureSegment)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 5165,
    "start_column": 23,
    "end_line": 5165,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData->p, doclist.p, doclist.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 5412,
    "start_column": 18,
    "end_line": 5412,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&buf.p[1], pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 6381,
    "start_column": 13,
    "end_line": 6381,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, aBlob, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 970,
    "start_column": 9,
    "end_line": 970,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 1164,
    "start_column": 3,
    "end_line": 1164,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_index.c",
    "start_line": 4334,
    "start_column": 7,
    "end_line": 4334,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 178,
    "start_column": 32,
    "end_line": 178,
    "end_column": 54,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(fts5EntryKey(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 500,
    "start_column": 29,
    "end_line": 500,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 550,
    "start_column": 22,
    "end_line": 550,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 290,
    "start_column": 5,
    "end_line": 290,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zKey[1], pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 510,
    "start_column": 7,
    "end_line": 510,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pRet[nPre], &((u8*)p)[nHashPre], nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_hash.c",
    "start_line": 216,
    "start_column": 9,
    "end_line": 216,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_tok.c",
    "start_line": 137,
    "start_column": 22,
    "end_line": 137,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_tok.c",
    "start_line": 146,
    "start_column": 22,
    "end_line": 146,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_tok.c",
    "start_line": 148,
    "start_column": 9,
    "end_line": 148,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSpace, argv[i], n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_tok.c",
    "start_line": 352,
    "start_column": 3,
    "end_line": 352,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRow->zToken, pToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_test_tok.c",
    "start_line": 381,
    "start_column": 21,
    "end_line": 381,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zInput, zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts5/fts5_aux.c",
    "start_line": 140,
    "start_column": 24,
    "end_line": 140,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/userauth/userauth.c",
    "start_line": 165,
    "start_column": 5,
    "end_line": 165,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSalt, sqlite3_value_blob(argv[1]), sizeof(zSalt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/userauth/userauth.c",
    "start_line": 173,
    "start_column": 5,
    "end_line": 173,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zSalt, sizeof(zSalt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/userauth/userauth.c",
    "start_line": 209,
    "start_column": 3,
    "end_line": 209,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(db->auth.zAuthPW,zPW,nPW)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/userauth/user-auth.txt",
    "start_line": 164,
    "start_column": 50,
    "end_line": 164,
    "end_column": 54,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 952,
    "start_column": 11,
    "end_line": 952,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 1108,
    "start_column": 22,
    "end_line": 1108,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 1896,
    "start_column": 14,
    "end_line": 1896,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMask)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2857,
    "start_column": 11,
    "end_line": 2857,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zRbu)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2942,
    "start_column": 15,
    "end_line": 2942,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 3951,
    "start_column": 30,
    "end_line": 3951,
    "end_column": 45,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTarget)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 3952,
    "start_column": 17,
    "end_line": 3952,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zRbu)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 4133,
    "start_column": 13,
    "end_line": 4133,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zState)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 4162,
    "start_column": 22,
    "end_line": 4162,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zErrmsg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5004,
    "start_column": 19,
    "end_line": 5004,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5249,
    "start_column": 11,
    "end_line": 5249,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 599,
    "start_column": 9,
    "end_line": 599,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, &zSrc[ofst], cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 614,
    "start_column": 9,
    "end_line": 614,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zDelta, cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 1111,
    "start_column": 9,
    "end_line": 1111,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zStr, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 1265,
    "start_column": 5,
    "end_line": 1265,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pIter->abIndexed, pIter->abTblPk, sizeof(u8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2617,
    "start_column": 5,
    "end_line": 2617,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pUp->zMask, zMask, pIter->nTblCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2775,
    "start_column": 5,
    "end_line": 2775,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zStateDb, \"stat\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2777,
    "start_column": 5,
    "end_line": 2777,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zStateDb, \"main\", 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 3969,
    "start_column": 9,
    "end_line": 3969,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zTarget, zTarget, nTarget+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 3973,
    "start_column": 7,
    "end_line": 3973,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zRbu, zRbu, nRbu+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5007,
    "start_column": 13,
    "end_line": 5007,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zBase, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5262,
    "start_column": 7,
    "end_line": 5262,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew->base, &vfs_template, sizeof(sqlite3_vfs)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5267,
    "start_column": 7,
    "end_line": 5267,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zSpace, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 2944,
    "start_column": 31,
    "end_line": 2944,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 4167,
    "start_column": 9,
    "end_line": 4167,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5174,
    "start_column": 17,
    "end_line": 5174,
    "end_column": 20,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/sqlite3rbu.c",
    "start_line": 5237,
    "start_column": 10,
    "end_line": 5237,
    "end_column": 13,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 94,
    "start_column": 16,
    "end_line": 94,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 26,
    "start_column": 3,
    "end_line": 26,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 59,
    "start_column": 3,
    "end_line": 59,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 68,
    "start_column": 7,
    "end_line": 68,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 70,
    "start_column": 7,
    "end_line": 70,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 103,
    "start_column": 15,
    "end_line": 103,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 108,
    "start_column": 19,
    "end_line": 108,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 147,
    "start_column": 9,
    "end_line": 147,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 152,
    "start_column": 11,
    "end_line": 152,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 154,
    "start_column": 11,
    "end_line": 154,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 170,
    "start_column": 7,
    "end_line": 170,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 178,
    "start_column": 7,
    "end_line": 178,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rbu/rbu.c",
    "start_line": 182,
    "start_column": 7,
    "end_line": 182,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 89,
    "start_column": 3,
    "end_line": 89,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pHash->z, z, NHASH)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 347,
    "start_column": 5,
    "end_line": 347,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, zOut, lenOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 448,
    "start_column": 11,
    "end_line": 448,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], bestLitsz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 470,
    "start_column": 9,
    "end_line": 470,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], lenOut-base)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 487,
    "start_column": 5,
    "end_line": 487,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zDelta, &zOut[base], lenOut-base)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 577,
    "start_column": 9,
    "end_line": 577,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, &zSrc[ofst], cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 592,
    "start_column": 9,
    "end_line": 592,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zDelta, cnt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fossildelta.c",
    "start_line": 989,
    "start_column": 3,
    "end_line": 989,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->aDelta, a, pCur->nDelta)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/cksumvfs.c",
    "start_line": 328,
    "start_column": 3,
    "end_line": 328,
    "end_column": 23,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, &s1, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/cksumvfs.c",
    "start_line": 329,
    "start_column": 3,
    "end_line": 329,
    "end_column": 25,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut+4, &s2, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 97,
    "start_column": 23,
    "end_line": 97,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 129,
    "start_column": 5,
    "end_line": 129,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->z+p->n, zAppend, nAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 489,
    "start_column": 15,
    "end_line": 489,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&ur,&r,sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 703,
    "start_column": 5,
    "end_line": 703,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 712,
    "start_column": 5,
    "end_line": 712,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdump.c",
    "start_line": 719,
    "start_column": 5,
    "end_line": 719,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 903,
    "start_column": 22,
    "end_line": 903,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2012,
    "start_column": 12,
    "end_line": 2012,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2059,
    "start_column": 18,
    "end_line": 2059,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDbName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2412,
    "start_column": 17,
    "end_line": 2412,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zClass)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2596,
    "start_column": 19,
    "end_line": 2596,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPattern)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2765,
    "start_column": 29,
    "end_line": 2765,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCur->zPattern)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2767,
    "start_column": 26,
    "end_line": 2767,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 797,
    "start_column": 7,
    "end_line": 797,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCost->a, zFrom, nFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 798,
    "start_column": 7,
    "end_line": 798,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCost->a + nFrom, zTo, nTo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 910,
    "start_column": 3,
    "end_line": 910,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStr->z, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2066,
    "start_column": 5,
    "end_line": 2066,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zDbName, zDbName, nDbName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2424,
    "start_column": 3,
    "end_line": 2424,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHash1, zClass, iScope)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2427,
    "start_column": 3,
    "end_line": 2427,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zHash2, zHash1, iScope)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2436,
    "start_column": 3,
    "end_line": 2436,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->azPrior[p->nRun++], zHash1, iScope+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2504,
    "start_column": 5,
    "end_line": 2504,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->a[idx].zHash, zHash1, iScope+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 386,
    "start_column": 3,
    "end_line": 386,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 475,
    "start_column": 7,
    "end_line": 475,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1101,
    "start_column": 3,
    "end_line": 1101,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1102,
    "start_column": 27,
    "end_line": 1102,
    "end_column": 33,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1103,
    "start_column": 3,
    "end_line": 1103,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1106,
    "start_column": 18,
    "end_line": 1106,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1107,
    "start_column": 18,
    "end_line": 1107,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1109,
    "start_column": 3,
    "end_line": 1109,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1111,
    "start_column": 5,
    "end_line": 1111,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1114,
    "start_column": 20,
    "end_line": 1114,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1115,
    "start_column": 20,
    "end_line": 1115,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 1117,
    "start_column": 5,
    "end_line": 1117,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/spellfix.c",
    "start_line": 2625,
    "start_column": 5,
    "end_line": 2625,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/prefixes.c",
    "start_line": 184,
    "start_column": 36,
    "end_line": 184,
    "end_column": 54,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCur->zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fileio.c",
    "start_line": 312,
    "start_column": 22,
    "end_line": 312,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fileio.c",
    "start_line": 841,
    "start_column": 24,
    "end_line": 841,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCur->zBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fileio.c",
    "start_line": 140,
    "start_column": 8,
    "end_line": 140,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fileio.c",
    "start_line": 147,
    "start_column": 3,
    "end_line": 147,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fileio.c",
    "start_line": 376,
    "start_column": 19,
    "end_line": 376,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/scrub.c",
    "start_line": 586,
    "start_column": 3,
    "end_line": 586,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/scrub.c",
    "start_line": 594,
    "start_column": 5,
    "end_line": 594,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/scrub.c",
    "start_line": 600,
    "start_column": 5,
    "end_line": 600,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/scrub.c",
    "start_line": 604,
    "start_column": 5,
    "end_line": 604,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdata.c",
    "start_line": 344,
    "start_column": 9,
    "end_line": 344,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPage, pCopy, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdata.c",
    "start_line": 441,
    "start_column": 11,
    "end_line": 441,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdata.c",
    "start_line": 584,
    "start_column": 13,
    "end_line": 584,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->pRec, &pCsr->aPage[iOff], nLocal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/dbdata.c",
    "start_line": 602,
    "start_column": 17,
    "end_line": 602,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCsr->pRec[nPayload-nRem], &aOvfl[4], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 275,
    "start_column": 20,
    "end_line": 275,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zBuf+p->nUsed)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 2288,
    "start_column": 44,
    "end_line": 2288,
    "end_column": 60,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 243,
    "start_column": 5,
    "end_line": 243,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zNew, p->zBuf, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 263,
    "start_column": 3,
    "end_line": 263,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zBuf+p->nUsed, zIn, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 1082,
    "start_column": 3,
    "end_line": 1082,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char*)p->zJson, zJson, nJson+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 2417,
    "start_column": 3,
    "end_line": 2417,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zJson, z, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 2439,
    "start_column": 7,
    "end_line": 2439,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zRoot, zRoot, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/json1.c",
    "start_line": 1977,
    "start_column": 3,
    "end_line": 1977,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 565,
    "start_column": 10,
    "end_line": 565,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 629,
    "start_column": 7,
    "end_line": 629,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 631,
    "start_column": 7,
    "end_line": 631,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 666,
    "start_column": 9,
    "end_line": 666,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 669,
    "start_column": 9,
    "end_line": 669,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 691,
    "start_column": 10,
    "end_line": 691,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 693,
    "start_column": 7,
    "end_line": 693,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 698,
    "start_column": 5,
    "end_line": 698,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 701,
    "start_column": 7,
    "end_line": 701,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/normalize.c",
    "start_line": 707,
    "start_column": 7,
    "end_line": 707,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/eval.c",
    "start_line": 40,
    "start_column": 17,
    "end_line": 40,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/eval.c",
    "start_line": 90,
    "start_column": 18,
    "end_line": 90,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(x.zSep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/eval.c",
    "start_line": 56,
    "start_column": 7,
    "end_line": 56,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->z[p->nUsed], p->zSep, p->szSep)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/eval.c",
    "start_line": 59,
    "start_column": 5,
    "end_line": 59,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->z[p->nUsed], z, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/ieee754.c",
    "start_line": 123,
    "start_column": 7,
    "end_line": 123,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/ieee754.c",
    "start_line": 133,
    "start_column": 5,
    "end_line": 133,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a,&r,sizeof(a)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/ieee754.c",
    "start_line": 197,
    "start_column": 5,
    "end_line": 197,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &a, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/ieee754.c",
    "start_line": 221,
    "start_column": 5,
    "end_line": 221,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&r, &v, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/ieee754.c",
    "start_line": 238,
    "start_column": 5,
    "end_line": 238,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&v, &r, sizeof(r)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/unionvtab.c",
    "start_line": 279,
    "start_column": 27,
    "end_line": 279,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/unionvtab.c",
    "start_line": 282,
    "start_column": 7,
    "end_line": 282,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/unionvtab.c",
    "start_line": 825,
    "start_column": 30,
    "end_line": 825,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 312,
    "start_column": 16,
    "end_line": 312,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 313,
    "start_column": 14,
    "end_line": 313,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 453,
    "start_column": 9,
    "end_line": 453,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 470,
    "start_column": 18,
    "end_line": 470,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 518,
    "start_column": 15,
    "end_line": 518,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zModule)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 877,
    "start_column": 44,
    "end_line": 877,
    "end_column": 57,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 881,
    "start_column": 30,
    "end_line": 881,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 1004,
    "start_column": 12,
    "end_line": 1004,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 348,
    "start_column": 7,
    "end_line": 348,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRule->zFrom, zFrom, nFrom+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 349,
    "start_column": 7,
    "end_line": 349,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRule->zTo, zTo, nTo+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 459,
    "start_column": 7,
    "end_line": 459,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 527,
    "start_column": 7,
    "end_line": 527,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zClassName, zModule, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 632,
    "start_column": 5,
    "end_line": 632,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pStem->zBasis, pStem->nBasis+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 634,
    "start_column": 5,
    "end_line": 634,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(z, pStem->zBasis, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 635,
    "start_column": 5,
    "end_line": 635,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&z[n], pRule->zTo, pRule->nTo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 636,
    "start_column": 5,
    "end_line": 637,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&z[n+pRule->nTo], &pStem->zBasis[n+pRule->nFrom], \n           pStem->nBasis-n-pRule->nFrom+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 882,
    "start_column": 3,
    "end_line": 882,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zBasis, zWord, pNew->nBasis+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 670,
    "start_column": 5,
    "end_line": 670,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/fuzzer.c",
    "start_line": 679,
    "start_column": 5,
    "end_line": 679,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/percentile.c",
    "start_line": 85,
    "start_column": 3,
    "end_line": 85,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &r, sizeof(u)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/percentile.c",
    "start_line": 191,
    "start_column": 5,
    "end_line": 191,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/closure.c",
    "start_line": 428,
    "start_column": 9,
    "end_line": 428,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/closure.c",
    "start_line": 445,
    "start_column": 18,
    "end_line": 445,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/closure.c",
    "start_line": 484,
    "start_column": 19,
    "end_line": 484,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/closure.c",
    "start_line": 485,
    "start_column": 19,
    "end_line": 485,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/closure.c",
    "start_line": 434,
    "start_column": 7,
    "end_line": 434,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 143,
    "start_column": 14,
    "end_line": 143,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 354,
    "start_column": 14,
    "end_line": 354,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 366,
    "start_column": 7,
    "end_line": 366,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 400,
    "start_column": 38,
    "end_line": 400,
    "end_column": 52,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zParam)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 749,
    "start_column": 7,
    "end_line": 749,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->azVal[i], z, pCur->rdr.n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 133,
    "start_column": 13,
    "end_line": 133,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 534,
    "start_column": 32,
    "end_line": 534,
    "end_column": 36,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/csv.c",
    "start_line": 542,
    "start_column": 14,
    "end_line": 542,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/shathree.c",
    "start_line": 541,
    "start_column": 12,
    "end_line": 541,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/shathree.c",
    "start_line": 624,
    "start_column": 14,
    "end_line": 624,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/shathree.c",
    "start_line": 642,
    "start_column": 13,
    "end_line": 642,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/shathree.c",
    "start_line": 656,
    "start_column": 13,
    "end_line": 656,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memtrace.c",
    "start_line": 35,
    "start_column": 5,
    "end_line": 35,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memtrace.c",
    "start_line": 43,
    "start_column": 5,
    "end_line": 43,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memtrace.c",
    "start_line": 54,
    "start_column": 5,
    "end_line": 54,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/carray.c",
    "start_line": 375,
    "start_column": 5,
    "end_line": 375,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p, &i64, sizeof(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/carray.c",
    "start_line": 378,
    "start_column": 5,
    "end_line": 378,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p, &i32, sizeof(p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vfslog.c",
    "start_line": 264,
    "start_column": 20,
    "end_line": 264,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vfslog.c",
    "start_line": 233,
    "start_column": 3,
    "end_line": 233,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vfslog.c",
    "start_line": 296,
    "start_column": 17,
    "end_line": 296,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtshim.c",
    "start_line": 449,
    "start_column": 3,
    "end_line": 449,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pMod, sizeof(*p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/showauth.c",
    "start_line": 84,
    "start_column": 3,
    "end_line": 84,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 189,
    "start_column": 12,
    "end_line": 189,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 308,
    "start_column": 14,
    "end_line": 308,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 78,
    "start_column": 3,
    "end_line": 78,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(block, buffer, 64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 79,
    "start_column": 3,
    "end_line": 79,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(qq,state,5*sizeof(unsigned int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 165,
    "start_column": 11,
    "end_line": 165,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->buffer[j], data, (i = 64-j)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 174,
    "start_column": 9,
    "end_line": 174,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->buffer[j], &data[i], len - i)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 326,
    "start_column": 13,
    "end_line": 326,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 340,
    "start_column": 13,
    "end_line": 340,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&u, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 35,
    "start_column": 16,
    "end_line": 35,
    "end_column": 20,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 35,
    "start_column": 28,
    "end_line": 35,
    "end_column": 32,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 36,
    "start_column": 8,
    "end_line": 36,
    "end_column": 12,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 74,
    "start_column": 6,
    "end_line": 74,
    "end_column": 10,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 141,
    "start_column": 23,
    "end_line": 141,
    "end_column": 27,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 153,
    "start_column": 3,
    "end_line": 153,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 166,
    "start_column": 5,
    "end_line": 166,
    "end_column": 9,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 168,
    "start_column": 7,
    "end_line": 168,
    "end_column": 11,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 179,
    "start_column": 3,
    "end_line": 179,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 198,
    "start_column": 3,
    "end_line": 198,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 241,
    "start_column": 3,
    "end_line": 241,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 283,
    "start_column": 3,
    "end_line": 283,
    "end_column": 7,
    "rule_id": "DS126858",
    "rule_name": "Weak/Broken Hash Algorithm",
    "severity": 1,
    "description": "A weak or broken hash algorithm was detected.",
    "match": "SHA1"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 145,
    "start_column": 19,
    "end_line": 145,
    "end_column": 27,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "98BADCFE"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/sha1.c",
    "start_line": 147,
    "start_column": 19,
    "end_line": 147,
    "end_column": 27,
    "rule_id": "DS109733",
    "rule_name": "Source implementation of a weak/broken cryptography hash function",
    "severity": 1,
    "description": "An implementation of a weak/broken hash function was found in source code.",
    "match": "C3D2E1F0"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memvfs.c",
    "start_line": 174,
    "start_column": 3,
    "end_line": 174,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, p->aData+iOfst, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memvfs.c",
    "start_line": 193,
    "start_column": 3,
    "end_line": 193,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aData+iOfst, z, iAmt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memvfs.c",
    "start_line": 472,
    "start_column": 8,
    "end_line": 472,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memvfs.c",
    "start_line": 476,
    "start_column": 3,
    "end_line": 476,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/memvfs.c",
    "start_line": 517,
    "start_column": 9,
    "end_line": 517,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/regexp.c",
    "start_line": 210,
    "start_column": 31,
    "end_line": 210,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((char const*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/regexp.c",
    "start_line": 650,
    "start_column": 22,
    "end_line": 650,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/regexp.c",
    "start_line": 377,
    "start_column": 3,
    "end_line": 377,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aOp[p->nState], &p->aOp[iStart], N*sizeof(p->aOp[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/regexp.c",
    "start_line": 378,
    "start_column": 3,
    "end_line": 378,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aArg[p->nState], &p->aArg[iStart], N*sizeof(p->aArg[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/totype.c",
    "start_line": 390,
    "start_column": 13,
    "end_line": 390,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iVal, zBlobRev, sizeof(sqlite3_int64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/totype.c",
    "start_line": 392,
    "start_column": 13,
    "end_line": 392,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iVal, zBlob, sizeof(sqlite3_int64)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/totype.c",
    "start_line": 460,
    "start_column": 13,
    "end_line": 460,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, zBlobRev, sizeof(double)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/totype.c",
    "start_line": 462,
    "start_column": 13,
    "end_line": 462,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, zBlob, sizeof(double)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 356,
    "start_column": 18,
    "end_line": 356,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1405,
    "start_column": 9,
    "end_line": 1405,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1436,
    "start_column": 17,
    "end_line": 1436,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zA)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1559,
    "start_column": 24,
    "end_line": 1559,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDelete)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1627,
    "start_column": 20,
    "end_line": 1627,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1643,
    "start_column": 24,
    "end_line": 1643,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zPath)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 2049,
    "start_column": 20,
    "end_line": 2049,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 368,
    "start_column": 7,
    "end_line": 368,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zFile, zFile, nFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 843,
    "start_column": 7,
    "end_line": 843,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aExtra, &aRead[nFile], nExtra)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 866,
    "start_column": 11,
    "end_line": 866,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aData, &aBlob[pNew->iDataOff], pNew->cds.szCompressed)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1358,
    "start_column": 3,
    "end_line": 1358,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pCds->zFile, (int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1767,
    "start_column": 3,
    "end_line": 1767,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pCDS->zFile, pCDS->nFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1772,
    "start_column": 5,
    "end_line": 1772,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pEntry->aExtra, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 2077,
    "start_column": 5,
    "end_line": 2077,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->body.a[p->body.n], aData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 2125,
    "start_column": 7,
    "end_line": 2125,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aZip, p->body.a, p->body.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 2126,
    "start_column": 7,
    "end_line": 2126,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aZip[p->body.n], p->cds.a, p->cds.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1268,
    "start_column": 19,
    "end_line": 1268,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/zipfile.c",
    "start_line": 1457,
    "start_column": 20,
    "end_line": 1457,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 66,
    "start_column": 14,
    "end_line": 66,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 78,
    "start_column": 7,
    "end_line": 78,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 110,
    "start_column": 42,
    "end_line": 110,
    "end_column": 56,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zParam)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 178,
    "start_column": 3,
    "end_line": 178,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 179,
    "start_column": 3,
    "end_line": 179,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 181,
    "start_column": 5,
    "end_line": 181,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 183,
    "start_column": 7,
    "end_line": 183,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 185,
    "start_column": 7,
    "end_line": 185,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 210,
    "start_column": 30,
    "end_line": 210,
    "end_column": 34,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 240,
    "start_column": 3,
    "end_line": 240,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 250,
    "start_column": 3,
    "end_line": 250,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 261,
    "start_column": 3,
    "end_line": 261,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 276,
    "start_column": 3,
    "end_line": 276,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 288,
    "start_column": 3,
    "end_line": 288,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 313,
    "start_column": 3,
    "end_line": 313,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 326,
    "start_column": 3,
    "end_line": 326,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 340,
    "start_column": 3,
    "end_line": 340,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 352,
    "start_column": 7,
    "end_line": 352,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 357,
    "start_column": 7,
    "end_line": 357,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 362,
    "start_column": 7,
    "end_line": 362,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 369,
    "start_column": 7,
    "end_line": 369,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 370,
    "start_column": 26,
    "end_line": 370,
    "end_column": 32,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 371,
    "start_column": 7,
    "end_line": 371,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 380,
    "start_column": 9,
    "end_line": 380,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 382,
    "start_column": 9,
    "end_line": 382,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 387,
    "start_column": 13,
    "end_line": 387,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 391,
    "start_column": 13,
    "end_line": 391,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 399,
    "start_column": 9,
    "end_line": 399,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 420,
    "start_column": 3,
    "end_line": 420,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 436,
    "start_column": 3,
    "end_line": 436,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 457,
    "start_column": 3,
    "end_line": 457,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 458,
    "start_column": 3,
    "end_line": 458,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 460,
    "start_column": 5,
    "end_line": 460,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/vtablog.c",
    "start_line": 462,
    "start_column": 5,
    "end_line": 462,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/appendvfs.c",
    "start_line": 211,
    "start_column": 3,
    "end_line": 211,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, APND_MARK_PREFIX, APND_MARK_PREFIX_SZ)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/appendvfs.c",
    "start_line": 451,
    "start_column": 5,
    "end_line": 451,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 585,
    "start_column": 16,
    "end_line": 585,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 586,
    "start_column": 14,
    "end_line": 586,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 744,
    "start_column": 9,
    "end_line": 744,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 761,
    "start_column": 18,
    "end_line": 761,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 814,
    "start_column": 19,
    "end_line": 814,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 815,
    "start_column": 19,
    "end_line": 815,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1038,
    "start_column": 16,
    "end_line": 1038,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWordBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1039,
    "start_column": 16,
    "end_line": 1039,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zWordTail)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1158,
    "start_column": 18,
    "end_line": 1158,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pWord->zWord+2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 629,
    "start_column": 7,
    "end_line": 629,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRule->zFrom, zFrom, nFrom+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 630,
    "start_column": 7,
    "end_line": 630,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRule->zTo, zTo, nTo+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 750,
    "start_column": 7,
    "end_line": 750,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zIn, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1049,
    "start_column": 3,
    "end_line": 1049,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->zBuf, zBuf+2, 2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1050,
    "start_column": 3,
    "end_line": 1050,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->zBuf+2, zWordBase, nBase)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1051,
    "start_column": 3,
    "end_line": 1051,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->zBuf+2+nBase, zWordTail, nTail+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1057,
    "start_column": 7,
    "end_line": 1057,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1065,
    "start_column": 7,
    "end_line": 1065,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1092,
    "start_column": 3,
    "end_line": 1092,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/amatch.c",
    "start_line": 1154,
    "start_column": 5,
    "end_line": 1154,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/decimal.c",
    "start_line": 166,
    "start_column": 7,
    "end_line": 166,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/misc/decimal.c",
    "start_line": 329,
    "start_column": 5,
    "end_line": 329,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenizer1.c",
    "start_line": 77,
    "start_column": 21,
    "end_line": 77,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenizer1.c",
    "start_line": 129,
    "start_column": 22,
    "end_line": 129,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_icu.c",
    "start_line": 61,
    "start_column": 9,
    "end_line": 61,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_icu.c",
    "start_line": 117,
    "start_column": 14,
    "end_line": 117,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_icu.c",
    "start_line": 71,
    "start_column": 5,
    "end_line": 71,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zLocale, argv[0], n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_test.c",
    "start_line": 400,
    "start_column": 27,
    "end_line": 400,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_unicode.c",
    "start_line": 234,
    "start_column": 18,
    "end_line": 234,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_unicode.c",
    "start_line": 289,
    "start_column": 25,
    "end_line": 289,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 83,
    "start_column": 14,
    "end_line": 83,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 87,
    "start_column": 18,
    "end_line": 87,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 95,
    "start_column": 16,
    "end_line": 95,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 420,
    "start_column": 33,
    "end_line": 420,
    "end_column": 59,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCsr->filter.zTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 427,
    "start_column": 24,
    "end_line": 427,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pCsr->zStop)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 111,
    "start_column": 3,
    "end_line": 111,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zDb, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_aux.c",
    "start_line": 112,
    "start_column": 3,
    "end_line": 112,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zName, zFts3, nFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_term.c",
    "start_line": 91,
    "start_column": 14,
    "end_line": 91,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_term.c",
    "start_line": 93,
    "start_column": 16,
    "end_line": 93,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_term.c",
    "start_line": 110,
    "start_column": 3,
    "end_line": 110,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zDb, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_term.c",
    "start_line": 111,
    "start_column": 3,
    "end_line": 111,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((char *)p->pFts3Tab->zName, zFts3, nFts3)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_term.c",
    "start_line": 78,
    "start_column": 14,
    "end_line": 78,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_expr.c",
    "start_line": 522,
    "start_column": 21,
    "end_line": 522,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_expr.c",
    "start_line": 982,
    "start_column": 14,
    "end_line": 982,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_expr.c",
    "start_line": 216,
    "start_column": 9,
    "end_line": 216,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->pPhrase->aToken[0].z, zToken, nToken)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_expr.c",
    "start_line": 331,
    "start_column": 9,
    "end_line": 331,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zTemp[nTemp], zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_expr.c",
    "start_line": 359,
    "start_column": 7,
    "end_line": 359,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zBuf, zTemp, nTemp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_hash.c",
    "start_line": 100,
    "start_column": 30,
    "end_line": 100,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_hash.c",
    "start_line": 369,
    "start_column": 5,
    "end_line": 369,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)new_elem->pKey, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenizer.c",
    "start_line": 180,
    "start_column": 17,
    "end_line": 180,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenizer.c",
    "start_line": 190,
    "start_column": 68,
    "end_line": 190,
    "end_column": 77,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenizer.c",
    "start_line": 396,
    "start_column": 7,
    "end_line": 396,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void *)pp, sqlite3_column_blob(pStmt, 0)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_porter.c",
    "start_line": 105,
    "start_column": 22,
    "end_line": 105,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_porter.c",
    "start_line": 567,
    "start_column": 21,
    "end_line": 567,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 1342,
    "start_column": 9,
    "end_line": 1342,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCopy, pList->aData, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 1407,
    "start_column": 3,
    "end_line": 1407,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pReader->zTerm[nPrefix], pNext, nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 1645,
    "start_column": 17,
    "end_line": 1645,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pReader->aNode, zRoot, nRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 1769,
    "start_column": 7,
    "end_line": 1769,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pReader->ppNextElem, aElem, nElem*sizeof(Fts3HashElem *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2067,
    "start_column": 7,
    "end_line": 2067,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pTree->aData[nData], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2081,
    "start_column": 9,
    "end_line": 2081,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTree->zTerm, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2338,
    "start_column": 3,
    "end_line": 2338,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWriter->aData[nData], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2342,
    "start_column": 3,
    "end_line": 2342,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pWriter->aData[nData], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2362,
    "start_column": 5,
    "end_line": 2362,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->zTerm, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 2671,
    "start_column": 3,
    "end_line": 2671,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMsr->aBuffer, pList, nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3022,
    "start_column": 15,
    "end_line": 3022,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCsr->aBuffer[nDoclist], pList, nList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3787,
    "start_column": 7,
    "end_line": 3787,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->term.a[nPrefix], &p->aNode[p->iOff], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3894,
    "start_column": 9,
    "end_line": 3894,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pBlk->a[pBlk->n], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3897,
    "start_column": 9,
    "end_line": 3897,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->key.a, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3971,
    "start_column": 3,
    "end_line": 3971,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pPrev->a, zTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3978,
    "start_column": 3,
    "end_line": 3978,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNode->a[pNode->n], &zTerm[nPrefix], nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 3983,
    "start_column": 5,
    "end_line": 3983,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNode->a[pNode->n], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 4324,
    "start_column": 9,
    "end_line": 4324,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->block.a, aRoot, nRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 4338,
    "start_column": 13,
    "end_line": 4338,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->key.a, reader.term.a, reader.term.n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 4350,
    "start_column": 17,
    "end_line": 4350,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNode->block.a, aBlock, nBlock)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 4821,
    "start_column": 11,
    "end_line": 4821,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pHint->a, aHint, nHint)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 5549,
    "start_column": 3,
    "end_line": 5549,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, &p->pList->aData[nSkip], *pnData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 1741,
    "start_column": 7,
    "end_line": 1741,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 5417,
    "start_column": 11,
    "end_line": 5417,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 5421,
    "start_column": 11,
    "end_line": 5421,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 5425,
    "start_column": 27,
    "end_line": 5425,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_write.c",
    "start_line": 5428,
    "start_column": 11,
    "end_line": 5428,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 847,
    "start_column": 19,
    "end_line": 847,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1132,
    "start_column": 15,
    "end_line": 1132,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1143,
    "start_column": 22,
    "end_line": 1143,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1209,
    "start_column": 11,
    "end_line": 1209,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1214,
    "start_column": 14,
    "end_line": 1214,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1215,
    "start_column": 16,
    "end_line": 1215,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1249,
    "start_column": 9,
    "end_line": 1249,
    "end_column": 18,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1284,
    "start_column": 17,
    "end_line": 1284,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1310,
    "start_column": 18,
    "end_line": 1310,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1311,
    "start_column": 18,
    "end_line": 1311,
    "end_column": 30,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1349,
    "start_column": 24,
    "end_line": 1349,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1474,
    "start_column": 18,
    "end_line": 1474,
    "end_column": 43,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->azColumn[iCol])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1477,
    "start_column": 27,
    "end_line": 1477,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1144,
    "start_column": 9,
    "end_line": 1144,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, zCol, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1441,
    "start_column": 3,
    "end_line": 1441,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aIndex, aIndex, sizeof(struct Fts3Index)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1451,
    "start_column": 3,
    "end_line": 1451,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1454,
    "start_column": 3,
    "end_line": 1454,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1463,
    "start_column": 7,
    "end_line": 1463,
    "end_column": 25,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCsr, z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 1955,
    "start_column": 5,
    "end_line": 1955,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zBuffer[nPrefix], zCsr, nSuffix)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 2113,
    "start_column": 5,
    "end_line": 2113,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, *ppPoslist, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 2151,
    "start_column": 5,
    "end_line": 2151,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, *ppPoslist, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 2893,
    "start_column": 7,
    "end_line": 2893,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTS->aaOutput[0], aDoclist, nDoclist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3.c",
    "start_line": 4733,
    "start_column": 9,
    "end_line": 4733,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aDoclist, a[p->nToken-1].pList, nByte+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenize_vtab.c",
    "start_line": 84,
    "start_column": 20,
    "end_line": 84,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenize_vtab.c",
    "start_line": 122,
    "start_column": 22,
    "end_line": 122,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenize_vtab.c",
    "start_line": 131,
    "start_column": 22,
    "end_line": 131,
    "end_column": 37,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenize_vtab.c",
    "start_line": 133,
    "start_column": 9,
    "end_line": 133,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSpace, argv[i], n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_tokenize_vtab.c",
    "start_line": 354,
    "start_column": 21,
    "end_line": 354,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr->zInput, zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 135,
    "start_column": 24,
    "end_line": 135,
    "end_column": 42,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zMatchinfo)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 605,
    "start_column": 20,
    "end_line": 605,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 145,
    "start_column": 5,
    "end_line": 145,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet->zMatchinfo, zMatchinfo, nStr+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 186,
    "start_column": 24,
    "end_line": 186,
    "end_column": 76,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, &p->aMatchinfo[1], p->nElem*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 196,
    "start_column": 3,
    "end_line": 196,
    "end_column": 77,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aMatchinfo[2+p->nElem], &p->aMatchinfo[1], p->nElem*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/fts3_snippet.c",
    "start_line": 624,
    "start_column": 3,
    "end_line": 624,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pStr->z[pStr->n], zAppend, nAppend)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 126,
    "start_column": 16,
    "end_line": 126,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 49,
    "start_column": 3,
    "end_line": 49,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 58,
    "start_column": 3,
    "end_line": 58,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 68,
    "start_column": 3,
    "end_line": 68,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 69,
    "start_column": 3,
    "end_line": 69,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 70,
    "start_column": 3,
    "end_line": 70,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 78,
    "start_column": 5,
    "end_line": 78,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 82,
    "start_column": 5,
    "end_line": 82,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 171,
    "start_column": 5,
    "end_line": 171,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 175,
    "start_column": 9,
    "end_line": 175,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 179,
    "start_column": 11,
    "end_line": 179,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 182,
    "start_column": 11,
    "end_line": 182,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 185,
    "start_column": 11,
    "end_line": 185,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 189,
    "start_column": 5,
    "end_line": 189,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 197,
    "start_column": 3,
    "end_line": 197,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 292,
    "start_column": 6,
    "end_line": 292,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 297,
    "start_column": 49,
    "end_line": 297,
    "end_column": 55,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 302,
    "start_column": 31,
    "end_line": 302,
    "end_column": 37,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/session_speed_test.c",
    "start_line": 327,
    "start_column": 9,
    "end_line": 327,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 453,
    "start_column": 12,
    "end_line": 453,
    "end_column": 21,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 742,
    "start_column": 15,
    "end_line": 742,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 751,
    "start_column": 15,
    "end_line": 751,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 990,
    "start_column": 16,
    "end_line": 990,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOpt)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 207,
    "start_column": 3,
    "end_line": 207,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pNew[pBlob->n], pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/test_session.c",
    "start_line": 708,
    "start_column": 5,
    "end_line": 708,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, &p->aData[p->iData], nRet)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 463,
    "start_column": 14,
    "end_line": 463,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen((const char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1115,
    "start_column": 18,
    "end_line": 1115,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pGrp->zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 690,
    "start_column": 11,
    "end_line": 690,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&fVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 853,
    "start_column": 11,
    "end_line": 853,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iVal1, &d, sizeof(iVal1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 877,
    "start_column": 7,
    "end_line": 877,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pChange->aSub, pChange->pSub1, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 995,
    "start_column": 11,
    "end_line": 995,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pCopy, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1024,
    "start_column": 9,
    "end_line": 1024,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pCopy, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1046,
    "start_column": 11,
    "end_line": 1046,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pNew, szNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1056,
    "start_column": 7,
    "end_line": 1056,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, *ppOut, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1071,
    "start_column": 9,
    "end_line": 1071,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pCopy, sz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1174,
    "start_column": 9,
    "end_line": 1174,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pGrp->zTab, nTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 135,
    "start_column": 3,
    "end_line": 135,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 146,
    "start_column": 7,
    "end_line": 146,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 148,
    "start_column": 5,
    "end_line": 148,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 153,
    "start_column": 3,
    "end_line": 153,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 156,
    "start_column": 5,
    "end_line": 156,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 162,
    "start_column": 7,
    "end_line": 162,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 178,
    "start_column": 7,
    "end_line": 178,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 180,
    "start_column": 5,
    "end_line": 180,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 184,
    "start_column": 5,
    "end_line": 184,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 675,
    "start_column": 11,
    "end_line": 675,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 681,
    "start_column": 11,
    "end_line": 681,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 691,
    "start_column": 11,
    "end_line": 691,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 700,
    "start_column": 11,
    "end_line": 700,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 703,
    "start_column": 15,
    "end_line": 703,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 708,
    "start_column": 15,
    "end_line": 708,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 709,
    "start_column": 15,
    "end_line": 709,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 712,
    "start_column": 11,
    "end_line": 712,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 718,
    "start_column": 11,
    "end_line": 718,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 724,
    "start_column": 3,
    "end_line": 724,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 739,
    "start_column": 3,
    "end_line": 739,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 741,
    "start_column": 5,
    "end_line": 741,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 743,
    "start_column": 3,
    "end_line": 743,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 750,
    "start_column": 5,
    "end_line": 750,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 761,
    "start_column": 5,
    "end_line": 761,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1220,
    "start_column": 17,
    "end_line": 1220,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1221,
    "start_column": 19,
    "end_line": 1221,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changesetfuzz.c",
    "start_line": 1234,
    "start_column": 5,
    "end_line": 1234,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2346,
    "start_column": 51,
    "end_line": 2346,
    "end_column": 70,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTab->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 3896,
    "start_column": 53,
    "end_line": 3896,
    "end_column": 65,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4379,
    "start_column": 21,
    "end_line": 4379,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4831,
    "start_column": 23,
    "end_line": 4831,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5279,
    "start_column": 53,
    "end_line": 5279,
    "end_column": 72,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pIter->zTab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 393,
    "start_column": 13,
    "end_line": 393,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&i, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 417,
    "start_column": 19,
    "end_line": 417,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aBuf[nVarint + 1], z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 523,
    "start_column": 11,
    "end_line": 523,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&iVal, &rVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 679,
    "start_column": 7,
    "end_line": 679,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 682,
    "start_column": 7,
    "end_line": 682,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 777,
    "start_column": 9,
    "end_line": 777,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, aOld, nOld)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 805,
    "start_column": 7,
    "end_line": 805,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aOut, aNew, nNew)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 867,
    "start_column": 11,
    "end_line": 867,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1026,
    "start_column": 7,
    "end_line": 1026,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAlloc, zThis, nThis+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1036,
    "start_column": 7,
    "end_line": 1036,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAlloc, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1690,
    "start_column": 3,
    "end_line": 1690,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zDb, zDb, nDb+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1815,
    "start_column": 9,
    "end_line": 1815,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1915,
    "start_column": 5,
    "end_line": 1915,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuf[p->nBuf], aBlob, nBlob)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 1935,
    "start_column": 5,
    "end_line": 1935,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->aBuf[p->nBuf], zStr, nStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2008,
    "start_column": 9,
    "end_line": 2008,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&i, &r, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2091,
    "start_column": 13,
    "end_line": 2091,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&dVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2297,
    "start_column": 11,
    "end_line": 2297,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&rVal, &iVal, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2741,
    "start_column": 3,
    "end_line": 2741,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCopy, aData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2818,
    "start_column": 11,
    "end_line": 2818,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&d, &v, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2953,
    "start_column": 5,
    "end_line": 2953,
    "end_column": 67,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&p->tblhdr.aBuf[iPK], &p->in.aData[p->in.iNext], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4644,
    "start_column": 7,
    "end_line": 4644,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aRecord, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4656,
    "start_column": 11,
    "end_line": 4656,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4688,
    "start_column": 13,
    "end_line": 4688,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4691,
    "start_column": 13,
    "end_line": 4691,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4754,
    "start_column": 11,
    "end_line": 4754,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCsr, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4779,
    "start_column": 11,
    "end_line": 4779,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCsr, aRec, nRec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4849,
    "start_column": 9,
    "end_line": 4849,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->abPK, abPK, nCol)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 4851,
    "start_column": 9,
    "end_line": 4851,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTab->zName, zNew, nNew+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5142,
    "start_column": 9,
    "end_line": 5142,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, nn2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5145,
    "start_column": 9,
    "end_line": 5145,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, nn1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5198,
    "start_column": 9,
    "end_line": 5198,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5202,
    "start_column": 9,
    "end_line": 5202,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 5216,
    "start_column": 11,
    "end_line": 5216,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, a1, n1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/sqlite3session.c",
    "start_line": 2660,
    "start_column": 7,
    "end_line": 2660,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 28,
    "start_column": 3,
    "end_line": 28,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 29,
    "start_column": 3,
    "end_line": 29,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 47,
    "start_column": 7,
    "end_line": 47,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 49,
    "start_column": 5,
    "end_line": 49,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 54,
    "start_column": 3,
    "end_line": 54,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 57,
    "start_column": 5,
    "end_line": 57,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 63,
    "start_column": 7,
    "end_line": 63,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 90,
    "start_column": 7,
    "end_line": 90,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 94,
    "start_column": 7,
    "end_line": 94,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 101,
    "start_column": 7,
    "end_line": 101,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 122,
    "start_column": 7,
    "end_line": 122,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 163,
    "start_column": 3,
    "end_line": 163,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 167,
    "start_column": 5,
    "end_line": 167,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 176,
    "start_column": 3,
    "end_line": 176,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 194,
    "start_column": 7,
    "end_line": 194,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 203,
    "start_column": 7,
    "end_line": 203,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 206,
    "start_column": 7,
    "end_line": 206,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 209,
    "start_column": 7,
    "end_line": 209,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 230,
    "start_column": 11,
    "end_line": 230,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 232,
    "start_column": 7,
    "end_line": 232,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 238,
    "start_column": 7,
    "end_line": 238,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 240,
    "start_column": 7,
    "end_line": 240,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 257,
    "start_column": 7,
    "end_line": 257,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 266,
    "start_column": 7,
    "end_line": 266,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 276,
    "start_column": 11,
    "end_line": 276,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 278,
    "start_column": 11,
    "end_line": 278,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 283,
    "start_column": 11,
    "end_line": 283,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 285,
    "start_column": 11,
    "end_line": 285,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 301,
    "start_column": 11,
    "end_line": 301,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 303,
    "start_column": 7,
    "end_line": 303,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 308,
    "start_column": 7,
    "end_line": 308,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 310,
    "start_column": 7,
    "end_line": 310,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 327,
    "start_column": 7,
    "end_line": 327,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 330,
    "start_column": 5,
    "end_line": 330,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 345,
    "start_column": 9,
    "end_line": 345,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 353,
    "start_column": 11,
    "end_line": 353,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 357,
    "start_column": 13,
    "end_line": 357,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 362,
    "start_column": 11,
    "end_line": 362,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 370,
    "start_column": 11,
    "end_line": 370,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 375,
    "start_column": 15,
    "end_line": 375,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 380,
    "start_column": 11,
    "end_line": 380,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 385,
    "start_column": 13,
    "end_line": 385,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 390,
    "start_column": 11,
    "end_line": 390,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 395,
    "start_column": 11,
    "end_line": 395,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 398,
    "start_column": 13,
    "end_line": 398,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 402,
    "start_column": 11,
    "end_line": 402,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/session/changeset.c",
    "start_line": 407,
    "start_column": 5,
    "end_line": 407,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_porter.c",
    "start_line": 104,
    "start_column": 22,
    "end_line": 104,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_porter.c",
    "start_line": 550,
    "start_column": 16,
    "end_line": 550,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_porter.c",
    "start_line": 97,
    "start_column": 35,
    "end_line": 97,
    "end_column": 52,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(*c)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_hash.c",
    "start_line": 95,
    "start_column": 30,
    "end_line": 95,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_hash.c",
    "start_line": 344,
    "start_column": 5,
    "end_line": 344,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)new_elem->pKey, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_hash.c",
    "start_line": 35,
    "start_column": 13,
    "end_line": 35,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 471,
    "start_column": 26,
    "end_line": 471,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 481,
    "start_column": 18,
    "end_line": 481,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 143,
    "start_column": 5,
    "end_line": 143,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(d->pData, pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 180,
    "start_column": 3,
    "end_line": 180,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(d->pData + d->nData, c, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 325,
    "start_column": 5,
    "end_line": 325,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pUpdate->pData, pUpdate->nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 462,
    "start_column": 3,
    "end_line": 462,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(str, s, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 494,
    "start_column": 7,
    "end_line": 494,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(r, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 142,
    "start_column": 16,
    "end_line": 142,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 154,
    "start_column": 28,
    "end_line": 154,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(DocList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 461,
    "start_column": 15,
    "end_line": 461,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n + 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 491,
    "start_column": 16,
    "end_line": 491,
    "end_column": 27,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 868,
    "start_column": 25,
    "end_line": 868,
    "end_column": 53,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(fulltext_vtab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 311,
    "start_column": 5,
    "end_line": 311,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fulltext.c",
    "start_line": 324,
    "start_column": 5,
    "end_line": 324,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_tokenizer1.c",
    "start_line": 69,
    "start_column": 16,
    "end_line": 69,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_tokenizer1.c",
    "start_line": 119,
    "start_column": 22,
    "end_line": 119,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1_tokenizer1.c",
    "start_line": 112,
    "start_column": 35,
    "end_line": 112,
    "end_column": 52,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(*c)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/ft_hash.c",
    "start_line": 115,
    "start_column": 30,
    "end_line": 115,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/ft_hash.c",
    "start_line": 381,
    "start_column": 5,
    "end_line": 381,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)new_elem->pKey, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/ft_hash.c",
    "start_line": 23,
    "start_column": 13,
    "end_line": 23,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 26,
    "start_column": 22,
    "end_line": 26,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 99,
    "start_column": 32,
    "end_line": 99,
    "end_column": 46,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 26,
    "start_column": 15,
    "end_line": 26,
    "end_column": 31,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(strlen(s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 55,
    "start_column": 28,
    "end_line": 55,
    "end_column": 59,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(simple_tokenizer)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 97,
    "start_column": 35,
    "end_line": 97,
    "end_column": 73,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(simple_tokenizer_cursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/simple_tokenizer.c",
    "start_line": 27,
    "start_column": 3,
    "end_line": 27,
    "end_column": 17,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(str, s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 92,
    "start_column": 22,
    "end_line": 92,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 883,
    "start_column": 26,
    "end_line": 883,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 894,
    "start_column": 16,
    "end_line": 894,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 895,
    "start_column": 18,
    "end_line": 895,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1636,
    "start_column": 27,
    "end_line": 1636,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1836,
    "start_column": 10,
    "end_line": 1836,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1846,
    "start_column": 10,
    "end_line": 1846,
    "end_column": 19,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 2738,
    "start_column": 27,
    "end_line": 2738,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 87,
    "start_column": 3,
    "end_line": 87,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(sb->s + sb->len, zFrom, nFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 255,
    "start_column": 5,
    "end_line": 255,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(d->pData, pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 292,
    "start_column": 3,
    "end_line": 292,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(d->pData + d->nData, c, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 617,
    "start_column": 3,
    "end_line": 617,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pTarget, pSource, nSource)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 645,
    "start_column": 5,
    "end_line": 645,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAcc->pData, pUpdate->pData, pUpdate->nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 874,
    "start_column": 3,
    "end_line": 874,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(str, s, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 909,
    "start_column": 7,
    "end_line": 909,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(r, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 912,
    "start_column": 7,
    "end_line": 912,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(r, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1658,
    "start_column": 5,
    "end_line": 1658,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, aToken[i].z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 2632,
    "start_column": 3,
    "end_line": 2632,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(t->pTerm, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 3225,
    "start_column": 5,
    "end_line": 3225,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 3256,
    "start_column": 5,
    "end_line": 3256,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 74,
    "start_column": 11,
    "end_line": 74,
    "end_column": 22,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(100)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 254,
    "start_column": 16,
    "end_line": 254,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 266,
    "start_column": 28,
    "end_line": 266,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(DocList)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 644,
    "start_column": 19,
    "end_line": 644,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(pUpdate->nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 873,
    "start_column": 15,
    "end_line": 873,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n + 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 906,
    "start_column": 16,
    "end_line": 906,
    "end_column": 27,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1316,
    "start_column": 28,
    "end_line": 1316,
    "end_column": 68,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(v->nColumn * sizeof(const char *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1636,
    "start_column": 19,
    "end_line": 1636,
    "end_column": 36,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1652,
    "start_column": 21,
    "end_line": 1652,
    "end_column": 49,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nToken*sizeof(char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1838,
    "start_column": 11,
    "end_line": 1838,
    "end_column": 32,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(char*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1883,
    "start_column": 28,
    "end_line": 1883,
    "end_column": 67,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( pSpec->nColumn * sizeof(char *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1948,
    "start_column": 25,
    "end_line": 1948,
    "end_column": 53,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(fulltext_vtab)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 2631,
    "start_column": 14,
    "end_line": 2631,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nTerm+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 1845,
    "start_column": 5,
    "end_line": 1845,
    "end_column": 23,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(z, argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 58,
    "start_column": 20,
    "end_line": 58,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 506,
    "start_column": 5,
    "end_line": 506,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 511,
    "start_column": 7,
    "end_line": 511,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 513,
    "start_column": 9,
    "end_line": 513,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 516,
    "start_column": 7,
    "end_line": 516,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 519,
    "start_column": 3,
    "end_line": 519,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 606,
    "start_column": 5,
    "end_line": 606,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts1/fts1.c",
    "start_line": 614,
    "start_column": 5,
    "end_line": 614,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 467,
    "start_column": 9,
    "end_line": 467,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void *)p->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 134,
    "start_column": 5,
    "end_line": 134,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 1208,
    "start_column": 3,
    "end_line": 1208,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 1938,
    "start_column": 7,
    "end_line": 1938,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 1942,
    "start_column": 3,
    "end_line": 1942,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_shared.c",
    "start_line": 1947,
    "start_column": 5,
    "end_line": 1947,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_main.c",
    "start_line": 402,
    "start_column": 11,
    "end_line": 402,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->compress, p, sizeof(lsm_compress)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_main.c",
    "start_line": 415,
    "start_column": 7,
    "end_line": 415,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->factory, p, sizeof(lsm_compress_factory)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_main.c",
    "start_line": 421,
    "start_column": 7,
    "end_line": 421,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &pDb->compress, sizeof(lsm_compress)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_main.c",
    "start_line": 66,
    "start_column": 3,
    "end_line": 66,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 272,
    "start_column": 5,
    "end_line": 272,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aBuf, &a[nIn], n-nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 713,
    "start_column": 5,
    "end_line": 713,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 716,
    "start_column": 7,
    "end_line": 716,
    "end_column": 28,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a, pVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 753,
    "start_column": 3,
    "end_line": 753,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pMark->aBuf, &pLog->buf.z[nCksum], pMark->nBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 779,
    "start_column": 5,
    "end_line": 779,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pLog->buf.z, pMark->aBuf, pMark->nBuf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_log.c",
    "start_line": 866,
    "start_column": 22,
    "end_line": 866,
    "end_column": 73,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->buf.z, &p->buf.z[p->iBuf-nCarry], nCarry)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 373,
    "start_column": 11,
    "end_line": 373,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pBlob->a[nLoad], p, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 765,
    "start_column": 7,
    "end_line": 765,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aAlloc, &a[n-nRem], nAlloc)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 797,
    "start_column": 5,
    "end_line": 797,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aiKeyPtr, pOld->aiKeyPtr, sizeof(pNew->aiKeyPtr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 798,
    "start_column": 5,
    "end_line": 798,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->aiChildPtr, pOld->aiChildPtr, sizeof(pNew->aiChildPtr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 813,
    "start_column": 5,
    "end_line": 813,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew, pOld, sizeof(TreeLeaf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1088,
    "start_column": 5,
    "end_line": 1088,
    "end_column": 71,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->treehdr.oldroot, &pDb->treehdr.root, sizeof(TreeRoot)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1347,
    "start_column": 7,
    "end_line": 1347,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr->hdr2, &pHdr->hdr1, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1349,
    "start_column": 7,
    "end_line": 1349,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr->hdr1, &pHdr->hdr2, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1355,
    "start_column": 3,
    "end_line": 1355,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&hdr, &db->treehdr, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1366,
    "start_column": 3,
    "end_line": 1366,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&db->treehdr, &hdr, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 2385,
    "start_column": 5,
    "end_line": 2385,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->treehdr, &pShm->hdr1, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 2390,
    "start_column": 5,
    "end_line": 2390,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->treehdr, &pShm->hdr2, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 2415,
    "start_column": 3,
    "end_line": 2415,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pShm->hdr2, &pDb->treehdr, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 2417,
    "start_column": 3,
    "end_line": 2417,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pShm->hdr1, &pDb->treehdr, sizeof(TreeHeader)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 516,
    "start_column": 5,
    "end_line": 516,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 534,
    "start_column": 9,
    "end_line": 534,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 547,
    "start_column": 3,
    "end_line": 547,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 782,
    "start_column": 3,
    "end_line": 782,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1812,
    "start_column": 3,
    "end_line": 1812,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_tree.c",
    "start_line": 1814,
    "start_column": 3,
    "end_line": 1814,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 198,
    "start_column": 35,
    "end_line": 198,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 208,
    "start_column": 7,
    "end_line": 208,
    "end_column": 16,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 181,
    "start_column": 3,
    "end_line": 181,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->a+p->n, pData, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 192,
    "start_column": 5,
    "end_line": 192,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->a+n, pData, N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 692,
    "start_column": 11,
    "end_line": 692,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&v, zData, sizeof(v)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 779,
    "start_column": 9,
    "end_line": 779,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->pKey2, aKey, pCur->nKey2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 785,
    "start_column": 11,
    "end_line": 785,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->pKey2, sqlite3_value_blob(argv[1]), pCur->nKey2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_vtab.c",
    "start_line": 787,
    "start_column": 11,
    "end_line": 787,
    "end_column": 72,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCur->pKey2, sqlite3_value_text(argv[1]), pCur->nKey2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5489,
    "start_column": 21,
    "end_line": 5489,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5489,
    "start_column": 38,
    "end_line": 5489,
    "end_column": 48,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5516,
    "start_column": 10,
    "end_line": 5516,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&aBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5522,
    "start_column": 10,
    "end_line": 5522,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(&aBuf[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 387,
    "start_column": 3,
    "end_line": 387,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBlob->pData, pData, nData)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 447,
    "start_column": 9,
    "end_line": 447,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aDest[nByte-nRem], &aData[i], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 2679,
    "start_column": 11,
    "end_line": 2679,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(*ppVal, pVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3419,
    "start_column": 9,
    "end_line": 3419,
    "end_column": 27,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a1, a2, n2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3425,
    "start_column": 9,
    "end_line": 3425,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a1, a2, iEof2 - 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3426,
    "start_column": 9,
    "end_line": 3426,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a1[iEof1], &a2[iEof2], n2 - iEof2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3443,
    "start_column": 9,
    "end_line": 3443,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(a1, a2, iEof2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3444,
    "start_column": 9,
    "end_line": 3444,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&a1[iEof1], &a2[iEof2], n2 - iEof2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3681,
    "start_column": 5,
    "end_line": 3681,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[iOff], pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3897,
    "start_column": 5,
    "end_line": 3897,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aData[iOff], &aWrite[nWrite-nRem], nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4435,
    "start_column": 7,
    "end_line": 4435,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &freelist, sizeof(freelist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4889,
    "start_column": 5,
    "end_line": 4889,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aNew1[nFree], pCsr->aPtr, sizeof(SegmentPtr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4900,
    "start_column": 5,
    "end_line": 4900,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aNew2[nFree], pLvl->aRhs, sizeof(Segment)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4907,
    "start_column": 7,
    "end_line": 4907,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSeg, &pIter->lhs, sizeof(Segment)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5046,
    "start_column": 13,
    "end_line": 5046,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &freelist, sizeof(freelist)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 1383,
    "start_column": 13,
    "end_line": 1383,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 3505,
    "start_column": 9,
    "end_line": 3505,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4839,
    "start_column": 9,
    "end_line": 4839,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 4860,
    "start_column": 5,
    "end_line": 4860,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5906,
    "start_column": 9,
    "end_line": 5906,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_sorted.c",
    "start_line": 5990,
    "start_column": 3,
    "end_line": 5990,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 66,
    "start_column": 15,
    "end_line": 66,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 267,
    "start_column": 12,
    "end_line": 267,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTmp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 268,
    "start_column": 23,
    "end_line": 268,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 272,
    "start_column": 36,
    "end_line": 272,
    "end_column": 49,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 276,
    "start_column": 12,
    "end_line": 276,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 278,
    "start_column": 27,
    "end_line": 278,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 69,
    "start_column": 5,
    "end_line": 69,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zShm, p->zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 70,
    "start_column": 5,
    "end_line": 70,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zShm[nName], \"-shm\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 270,
    "start_column": 7,
    "end_line": 270,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zTmp, nTmp)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 272,
    "start_column": 7,
    "end_line": 272,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zOut[nTmp+1], zName, strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 278,
    "start_column": 7,
    "end_line": 278,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zOut, zName, strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 306,
    "start_column": 3,
    "end_line": 306,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &buf.st_dev, sizeof(buf.st_dev)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 307,
    "start_column": 3,
    "end_line": 307,
    "end_column": 78,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&(((u8 *)pBuf)[sizeof(buf.st_dev)]), &buf.st_ino, sizeof(buf.st_ino)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 482,
    "start_column": 24,
    "end_line": 482,
    "end_column": 33,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(N)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 465,
    "start_column": 21,
    "end_line": 465,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_unix.c",
    "start_line": 748,
    "start_column": 14,
    "end_line": 748,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 52,
    "start_column": 15,
    "end_line": 52,
    "end_column": 40,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pWin32File->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 499,
    "start_column": 16,
    "end_line": 499,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTempUtf8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 55,
    "start_column": 5,
    "end_line": 55,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zShm, pWin32File->zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 56,
    "start_column": 5,
    "end_line": 56,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zShm[nName], \"-shm\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 533,
    "start_column": 3,
    "end_line": 533,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf2, &fileInfo.dwVolumeSerialNumber, nReq)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 536,
    "start_column": 3,
    "end_line": 536,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf, &fileInfo.nFileIndexHigh, nReq)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 539,
    "start_column": 3,
    "end_line": 539,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuf2, &fileInfo.nFileIndexLow, nReq)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 687,
    "start_column": 5,
    "end_line": 687,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(ahNew, pWin32File->ahShm, sizeof(HANDLE)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 688,
    "start_column": 5,
    "end_line": 688,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(apNew, pWin32File->apShm, sizeof(LPVOID)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 784,
    "start_column": 21,
    "end_line": 784,
    "end_column": 24,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_win32.c",
    "start_line": 1058,
    "start_column": 14,
    "end_line": 1058,
    "end_column": 17,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "sSl"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 66,
    "start_column": 22,
    "end_line": 66,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 69,
    "start_column": 5,
    "end_line": 69,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStr->z+pStr->n, z, N+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 79,
    "start_column": 5,
    "end_line": 79,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pStr->z+pStr->n, a, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 96,
    "start_column": 14,
    "end_line": 96,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 107,
    "start_column": 12,
    "end_line": 107,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_str.c",
    "start_line": 112,
    "start_column": 14,
    "end_line": 112,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 625,
    "start_column": 13,
    "end_line": 625,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 645,
    "start_column": 5,
    "end_line": 645,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pFS->zDb, zDb, nDb+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 646,
    "start_column": 5,
    "end_line": 646,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pFS->zLog, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 647,
    "start_column": 5,
    "end_line": 647,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pFS->zLog[nDb], \"-log\", 5)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 2435,
    "start_column": 11,
    "end_line": 2435,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aMap[iOff], aData, nSz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 2774,
    "start_column": 13,
    "end_line": 2774,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aTo, aFrom, pFS->nPagesize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 2744,
    "start_column": 11,
    "end_line": 2744,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_file.c",
    "start_line": 3263,
    "start_column": 3,
    "end_line": 3263,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsmInt.h",
    "start_line": 28,
    "start_column": 20,
    "end_line": 28,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 626,
    "start_column": 7,
    "end_line": 626,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aIn, pVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 754,
    "start_column": 7,
    "end_line": 754,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCkpt, aData, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 758,
    "start_column": 9,
    "end_line": 758,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap1, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 759,
    "start_column": 9,
    "end_line": 759,
    "end_column": 54,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap2, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 760,
    "start_column": 9,
    "end_line": 760,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->aSnapshot, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 801,
    "start_column": 3,
    "end_line": 801,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap1, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 802,
    "start_column": 3,
    "end_line": 802,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap2, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 803,
    "start_column": 3,
    "end_line": 803,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->aSnapshot, aCkpt, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 857,
    "start_column": 5,
    "end_line": 857,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aData, pDb->aSnapshot, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 876,
    "start_column": 7,
    "end_line": 876,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->aSnapshot, pShm->aSnap1, nInt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 885,
    "start_column": 7,
    "end_line": 885,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->aSnapshot, pShm->aSnap2, nInt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 941,
    "start_column": 7,
    "end_line": 941,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap2, pShm->aSnap1, sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 943,
    "start_column": 7,
    "end_line": 943,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap1, pShm->aSnap2, sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 1091,
    "start_column": 3,
    "end_line": 1091,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap2, p, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 1093,
    "start_column": 3,
    "end_line": 1093,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pShm->aSnap1, p, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 1130,
    "start_column": 11,
    "end_line": 1130,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aCopy, aData, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 1216,
    "start_column": 3,
    "end_line": 1216,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->pShmhdr->aSnap1, pDb->aSnapshot, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_ckpt.c",
    "start_line": 1217,
    "start_column": 3,
    "end_line": 1217,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->pShmhdr->aSnap2, pDb->aSnapshot, nCkpt*sizeof(u32)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_mem.c",
    "start_line": 98,
    "start_column": 11,
    "end_line": 98,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm_mem.c",
    "start_line": 101,
    "start_column": 5,
    "end_line": 101,
    "end_column": 31,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zIn, nByte+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_hash.c",
    "start_line": 102,
    "start_column": 30,
    "end_line": 102,
    "end_column": 39,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_hash.c",
    "start_line": 351,
    "start_column": 5,
    "end_line": 351,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy((void*)new_elem->pKey, pKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_porter.c",
    "start_line": 106,
    "start_column": 22,
    "end_line": 106,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_porter.c",
    "start_line": 552,
    "start_column": 16,
    "end_line": 552,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_icu.c",
    "start_line": 63,
    "start_column": 9,
    "end_line": 63,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_icu.c",
    "start_line": 116,
    "start_column": 14,
    "end_line": 116,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_icu.c",
    "start_line": 73,
    "start_column": 5,
    "end_line": 73,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zLocale, argv[0], n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 547,
    "start_column": 22,
    "end_line": 547,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFrom)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1625,
    "start_column": 26,
    "end_line": 1625,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(s)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1636,
    "start_column": 16,
    "end_line": 1636,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1637,
    "start_column": 18,
    "end_line": 1637,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2504,
    "start_column": 35,
    "end_line": 2504,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2704,
    "start_column": 10,
    "end_line": 2704,
    "end_column": 25,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2714,
    "start_column": 10,
    "end_line": 2714,
    "end_column": 19,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2841,
    "start_column": 10,
    "end_line": 2841,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zTok)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 3604,
    "start_column": 27,
    "end_line": 3604,
    "end_column": 41,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6493,
    "start_column": 36,
    "end_line": 6493,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(buf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6499,
    "start_column": 36,
    "end_line": 6499,
    "end_column": 47,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(buf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6508,
    "start_column": 40,
    "end_line": 6508,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(buf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6519,
    "start_column": 38,
    "end_line": 6519,
    "end_column": 49,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(buf)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6579,
    "start_column": 23,
    "end_line": 6579,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 501,
    "start_column": 3,
    "end_line": 501,
    "end_column": 58,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuffer->pData+pBuffer->nData, pSource, nSource)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 510,
    "start_column": 3,
    "end_line": 510,
    "end_column": 60,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuffer->pData+pBuffer->nData, pSource1, nSource1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 511,
    "start_column": 3,
    "end_line": 511,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBuffer->pData+pBuffer->nData+nSource1, pSource2, nSource2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1616,
    "start_column": 3,
    "end_line": 1616,
    "end_column": 20,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(str, s, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1651,
    "start_column": 7,
    "end_line": 1651,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(r, zDb, nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 1654,
    "start_column": 7,
    "end_line": 1654,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(r, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2526,
    "start_column": 5,
    "end_line": 2526,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, aToken[i].z, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 3494,
    "start_column": 3,
    "end_line": 3494,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(t->pTerm, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4750,
    "start_column": 3,
    "end_line": 4750,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->data.pData+iData, c, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4751,
    "start_column": 3,
    "end_line": 4751,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->data.pData+iData+n, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4818,
    "start_column": 5,
    "end_line": 4818,
    "end_column": 57,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->data.pData+iDoclistData, c, nActual)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4841,
    "start_column": 3,
    "end_line": 4841,
    "end_column": 55,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->data.pData+iDoclistData, c, nActual)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4859,
    "start_column": 5,
    "end_line": 4859,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pWriter->data.pData+n, pTerm, nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 5412,
    "start_column": 13,
    "end_line": 5412,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, pBuffers, nBuffers*sizeof(*pBuffers)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 5974,
    "start_column": 5,
    "end_line": 5974,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6005,
    "start_column": 5,
    "end_line": 6005,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6208,
    "start_column": 5,
    "end_line": 6208,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6379,
    "start_column": 5,
    "end_line": 6379,
    "end_column": 65,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(result+iByte, pData[iTerm].pTerm, pData[iTerm].nTerm)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6416,
    "start_column": 5,
    "end_line": 6416,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6584,
    "start_column": 5,
    "end_line": 6584,
    "end_column": 66,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCursor, sqlite3_value_blob(argv[0]), sizeof(pCursor)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 2713,
    "start_column": 5,
    "end_line": 2713,
    "end_column": 23,
    "rule_id": "DS185832",
    "rule_name": "Banned C function detected (strcpy)",
    "severity": 2,
    "description": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination.",
    "match": "strcpy(z, argv[i])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 331,
    "start_column": 20,
    "end_line": 331,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 4834,
    "start_column": 5,
    "end_line": 4834,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 5801,
    "start_column": 13,
    "end_line": 5801,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2.c",
    "start_line": 6374,
    "start_column": 18,
    "end_line": 6374,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "qsort"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_tokenizer1.c",
    "start_line": 80,
    "start_column": 16,
    "end_line": 80,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_tokenizer1.c",
    "start_line": 131,
    "start_column": 22,
    "end_line": 131,
    "end_column": 36,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pInput)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts2/fts2_tokenizer.c",
    "start_line": 264,
    "start_column": 7,
    "end_line": 264,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pp, sqlite3_column_blob(pStmt, 0)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 1238,
    "start_column": 9,
    "end_line": 1238,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 1239,
    "start_column": 11,
    "end_line": 1239,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 276,
    "start_column": 7,
    "end_line": 276,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut->a, s.a, s.nVertex*2*sizeof(GeoCoord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 324,
    "start_column": 9,
    "end_line": 324,
    "end_column": 33,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->hdr, a, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 735,
    "start_column": 7,
    "end_line": 735,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBBox->a, a, sizeof(RtreeCoord)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 1252,
    "start_column": 3,
    "end_line": 1252,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zDb, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 1253,
    "start_column": 3,
    "end_line": 1253,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zName, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 24,
    "start_column": 35,
    "end_line": 24,
    "end_column": 41,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/geopoly.c",
    "start_line": 209,
    "start_column": 24,
    "end_line": 209,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atof"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1875,
    "start_column": 36,
    "end_line": 1875,
    "end_column": 50,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(idxStr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 3736,
    "start_column": 14,
    "end_line": 3736,
    "end_column": 29,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[1])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 3737,
    "start_column": 16,
    "end_line": 3737,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(argv[2])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 499,
    "start_column": 3,
    "end_line": 499,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 503,
    "start_column": 3,
    "end_line": 503,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 507,
    "start_column": 3,
    "end_line": 507,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&x, p, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 539,
    "start_column": 3,
    "end_line": 539,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 542,
    "start_column": 3,
    "end_line": 542,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 545,
    "start_column": 3,
    "end_line": 545,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 558,
    "start_column": 3,
    "end_line": 558,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 561,
    "start_column": 3,
    "end_line": 561,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 563,
    "start_column": 3,
    "end_line": 563,
    "end_column": 19,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p, &i, 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1165,
    "start_column": 5,
    "end_line": 1165,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&c.u,a,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1173,
    "start_column": 5,
    "end_line": 1173,
    "end_column": 21,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&c.u,a,4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1797,
    "start_column": 3,
    "end_line": 1797,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBlob, pSrc, pSrc->iSize)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2140,
    "start_column": 3,
    "end_line": 2140,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&cell, p, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2324,
    "start_column": 5,
    "end_line": 2324,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSpare, aLeft, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2393,
    "start_column": 5,
    "end_line": 2393,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(aSpare, aLeft, sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2484,
    "start_column": 7,
    "end_line": 2484,
    "end_column": 63,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&left, &aCell[aaSorted[ii][0]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2485,
    "start_column": 7,
    "end_line": 2485,
    "end_column": 70,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&right, &aCell[aaSorted[ii][nCell-1]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2514,
    "start_column": 3,
    "end_line": 2514,
    "end_column": 69,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBboxLeft, &aCell[aaSorted[iBestDim][0]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2515,
    "start_column": 3,
    "end_line": 2515,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pBboxRight, &aCell[aaSorted[iBestDim][iBestSplit]], sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2582,
    "start_column": 3,
    "end_line": 2582,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aCell[nCell], pCell, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 2877,
    "start_column": 7,
    "end_line": 2877,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&aCell[ii], pCell, sizeof(RtreeCell)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 3748,
    "start_column": 3,
    "end_line": 3748,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zDb, argv[1], nDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 3749,
    "start_column": 3,
    "end_line": 3749,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRtree->zName, argv[2], nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 4022,
    "start_column": 9,
    "end_line": 4022,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, pNode, nNode)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 826,
    "start_column": 3,
    "end_line": 826,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "memmove"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1516,
    "start_column": 16,
    "end_line": 1516,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1516,
    "start_column": 37,
    "end_line": 1516,
    "end_column": 43,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1517,
    "start_column": 3,
    "end_line": 1517,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1522,
    "start_column": 5,
    "end_line": 1522,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1524,
    "start_column": 5,
    "end_line": 1524,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1529,
    "start_column": 3,
    "end_line": 1529,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/rtree/rtree.c",
    "start_line": 1534,
    "start_column": 32,
    "end_line": 1534,
    "end_column": 38,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/icu/README.txt",
    "start_line": 35,
    "start_column": 8,
    "end_line": 35,
    "end_column": 14,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/icu/README.txt",
    "start_line": 36,
    "start_column": 8,
    "end_line": 36,
    "end_column": 14,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 1052,
    "start_column": 18,
    "end_line": 1052,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 1178,
    "start_column": 58,
    "end_line": 1178,
    "end_column": 67,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 1245,
    "start_column": 18,
    "end_line": 1245,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 615,
    "start_column": 5,
    "end_line": 615,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->zBuf, zByte, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 724,
    "start_column": 11,
    "end_line": 724,
    "end_column": 79,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&((char *)zOut)[iBeginOut], &pWrite->zBuf[iBeginIn], (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 1077,
    "start_column": 5,
    "end_line": 1077,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData->zName, zName, nName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 1114,
    "start_column": 11,
    "end_line": 1114,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pLock->zFile, pData->zName, pLock->nFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/async/sqlite3async.c",
    "start_line": 54,
    "start_column": 3,
    "end_line": 54,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 232,
    "start_column": 5,
    "end_line": 232,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->zKey, zKey, nKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 235,
    "start_column": 7,
    "end_line": 235,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pEntry->zVal, zVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 288,
    "start_column": 5,
    "end_line": 288,
    "end_column": 40,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zColl, zColl, nColl+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 718,
    "start_column": 5,
    "end_line": 718,
    "end_column": 30,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr, zCol, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 727,
    "start_column": 7,
    "end_line": 727,
    "end_column": 32,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCsr, zCol, nCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 740,
    "start_column": 5,
    "end_line": 740,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zTab, nTab+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 770,
    "start_column": 17,
    "end_line": 770,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zRet, zIn, nIn)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 771,
    "start_column": 7,
    "end_line": 771,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&zRet[nIn], zAppend, nAppend+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 1488,
    "start_column": 9,
    "end_line": 1488,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSlot->z, sqlite3_value_blob(argv[1]), nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 1490,
    "start_column": 9,
    "end_line": 1490,
    "end_column": 61,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pSlot->z, sqlite3_value_text(argv[1]), nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/sqlite3expert.c",
    "start_line": 1846,
    "start_column": 11,
    "end_line": 1846,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zSql, z, n+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 98,
    "start_column": 19,
    "end_line": 98,
    "end_column": 31,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 23,
    "start_column": 3,
    "end_line": 23,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 28,
    "start_column": 10,
    "end_line": 28,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 32,
    "start_column": 3,
    "end_line": 32,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 33,
    "start_column": 3,
    "end_line": 33,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 34,
    "start_column": 3,
    "end_line": 34,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 35,
    "start_column": 3,
    "end_line": 35,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 36,
    "start_column": 3,
    "end_line": 36,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 37,
    "start_column": 3,
    "end_line": 37,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 38,
    "start_column": 3,
    "end_line": 38,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 39,
    "start_column": 3,
    "end_line": 39,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 44,
    "start_column": 14,
    "end_line": 44,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 55,
    "start_column": 3,
    "end_line": 55,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "rewind"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 85,
    "start_column": 5,
    "end_line": 85,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 91,
    "start_column": 5,
    "end_line": 91,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 135,
    "start_column": 7,
    "end_line": 135,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 136,
    "start_column": 7,
    "end_line": 136,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 144,
    "start_column": 9,
    "end_line": 144,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 145,
    "start_column": 9,
    "end_line": 145,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 147,
    "start_column": 7,
    "end_line": 147,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/expert/expert.c",
    "start_line": 150,
    "start_column": 5,
    "end_line": 150,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 647,
    "start_column": 13,
    "end_line": 647,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->key)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 516,
    "start_column": 3,
    "end_line": 516,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(szBuffer, p, q - p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 650,
    "start_column": 7,
    "end_line": 650,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(szBuffer, szCopy, sizeof(szCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 541,
    "start_column": 28,
    "end_line": 541,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(list_item_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 38,
    "start_column": 20,
    "end_line": 38,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 156,
    "start_column": 6,
    "end_line": 156,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 231,
    "start_column": 5,
    "end_line": 231,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcpy"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 237,
    "start_column": 5,
    "end_line": 237,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 243,
    "start_column": 5,
    "end_line": 243,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 365,
    "start_column": 5,
    "end_line": 365,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcpy"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 371,
    "start_column": 5,
    "end_line": 371,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 487,
    "start_column": 16,
    "end_line": 487,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 596,
    "start_column": 10,
    "end_line": 596,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 603,
    "start_column": 7,
    "end_line": 603,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 627,
    "start_column": 3,
    "end_line": 627,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 653,
    "start_column": 6,
    "end_line": 653,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/win/nmakehlp.c",
    "start_line": 682,
    "start_column": 5,
    "end_line": 682,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 481,
    "start_column": 3,
    "end_line": 481,
    "end_column": 38,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pNew->zName, zName, nName+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 1387,
    "start_column": 7,
    "end_line": 1387,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zCopy, zSql, pPreStmt->nSql)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2005,
    "start_column": 9,
    "end_line": 2005,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zAuth, zAuth, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2108,
    "start_column": 9,
    "end_line": 2108,
    "end_column": 53,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zBindFallback, zCallback, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2138,
    "start_column": 9,
    "end_line": 2138,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zBusy, zBusy, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2251,
    "start_column": 5,
    "end_line": 2251,
    "end_column": 50,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pCollate->zScript, zScript, nScript+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2304,
    "start_column": 9,
    "end_line": 2304,
    "end_column": 45,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zCommit, zCommit, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2656,
    "start_column": 19,
    "end_line": 2656,
    "end_column": 42,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pData, pBA, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2982,
    "start_column": 9,
    "end_line": 2982,
    "end_column": 39,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zNull, zNull, len)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3037,
    "start_column": 9,
    "end_line": 3037,
    "end_column": 49,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zProgress, zProgress, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3079,
    "start_column": 9,
    "end_line": 3079,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zProfile, zProfile, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3290,
    "start_column": 9,
    "end_line": 3290,
    "end_column": 43,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zTrace, zTrace, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3373,
    "start_column": 9,
    "end_line": 3373,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zTraceV2, zTraceV2, len+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 1179,
    "start_column": 11,
    "end_line": 1179,
    "end_column": 26,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nLine )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2500,
    "start_column": 12,
    "end_line": 2500,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( nByte + 50 + nCol*2 )"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2527,
    "start_column": 13,
    "end_line": 2527,
    "end_column": 37,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc( sizeof(azCol[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2552,
    "start_column": 16,
    "end_line": 2552,
    "end_column": 28,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nErr)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 596,
    "start_column": 21,
    "end_line": 596,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 612,
    "start_column": 21,
    "end_line": 612,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 747,
    "start_column": 21,
    "end_line": 747,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 916,
    "start_column": 11,
    "end_line": 916,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 2521,
    "start_column": 10,
    "end_line": 2521,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3968,
    "start_column": 7,
    "end_line": 3968,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "getenv"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 3970,
    "start_column": 7,
    "end_line": 3970,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite-autoconf-3330000/tea/generic/tclsqlite3.c",
    "start_line": 4011,
    "start_column": 5,
    "end_line": 4011,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/unicode/CaseFolding.txt",
    "start_line": 6,
    "start_column": 25,
    "end_line": 6,
    "end_column": 31,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/unicode/CaseFolding.txt",
    "start_line": 7,
    "start_column": 26,
    "end_line": 7,
    "end_column": 32,
    "rule_id": "DS137138",
    "rule_name": "Insecure URL",
    "severity": 4,
    "description": "An HTTP-based URL without TLS was detected.",
    "match": "http:/"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 579,
    "start_column": 5,
    "end_line": 579,
    "end_column": 44,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zTerm+iPrefix, aData+i, (size_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 68,
    "start_column": 5,
    "end_line": 68,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 101,
    "start_column": 5,
    "end_line": 101,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 106,
    "start_column": 5,
    "end_line": 106,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 111,
    "start_column": 5,
    "end_line": 111,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 122,
    "start_column": 5,
    "end_line": 122,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 127,
    "start_column": 5,
    "end_line": 127,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 156,
    "start_column": 5,
    "end_line": 156,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 159,
    "start_column": 9,
    "end_line": 159,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 169,
    "start_column": 11,
    "end_line": 169,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 171,
    "start_column": 9,
    "end_line": 171,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 201,
    "start_column": 3,
    "end_line": 201,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 212,
    "start_column": 3,
    "end_line": 212,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 213,
    "start_column": 3,
    "end_line": 213,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 223,
    "start_column": 3,
    "end_line": 223,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 233,
    "start_column": 3,
    "end_line": 233,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 244,
    "start_column": 5,
    "end_line": 244,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 256,
    "start_column": 5,
    "end_line": 256,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 260,
    "start_column": 10,
    "end_line": 260,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 261,
    "start_column": 3,
    "end_line": 261,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 271,
    "start_column": 5,
    "end_line": 271,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 331,
    "start_column": 3,
    "end_line": 331,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 332,
    "start_column": 3,
    "end_line": 332,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 333,
    "start_column": 3,
    "end_line": 333,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 334,
    "start_column": 3,
    "end_line": 334,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 335,
    "start_column": 3,
    "end_line": 335,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 336,
    "start_column": 3,
    "end_line": 336,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 337,
    "start_column": 3,
    "end_line": 337,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 338,
    "start_column": 3,
    "end_line": 338,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 340,
    "start_column": 5,
    "end_line": 340,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 342,
    "start_column": 5,
    "end_line": 342,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 346,
    "start_column": 5,
    "end_line": 346,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 350,
    "start_column": 5,
    "end_line": 350,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 355,
    "start_column": 3,
    "end_line": 355,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 356,
    "start_column": 3,
    "end_line": 356,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 357,
    "start_column": 3,
    "end_line": 357,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 365,
    "start_column": 3,
    "end_line": 365,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 378,
    "start_column": 3,
    "end_line": 378,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 403,
    "start_column": 7,
    "end_line": 403,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 404,
    "start_column": 7,
    "end_line": 404,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 405,
    "start_column": 7,
    "end_line": 405,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 407,
    "start_column": 9,
    "end_line": 407,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 410,
    "start_column": 7,
    "end_line": 410,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 412,
    "start_column": 7,
    "end_line": 412,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 415,
    "start_column": 9,
    "end_line": 415,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 418,
    "start_column": 7,
    "end_line": 418,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 421,
    "start_column": 7,
    "end_line": 421,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 432,
    "start_column": 3,
    "end_line": 432,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 434,
    "start_column": 5,
    "end_line": 434,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 436,
    "start_column": 3,
    "end_line": 436,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 472,
    "start_column": 3,
    "end_line": 472,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 485,
    "start_column": 7,
    "end_line": 485,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 498,
    "start_column": 9,
    "end_line": 498,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 501,
    "start_column": 9,
    "end_line": 501,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 505,
    "start_column": 7,
    "end_line": 505,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 528,
    "start_column": 15,
    "end_line": 528,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 534,
    "start_column": 9,
    "end_line": 534,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 563,
    "start_column": 3,
    "end_line": 563,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 566,
    "start_column": 5,
    "end_line": 566,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 576,
    "start_column": 7,
    "end_line": 576,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 584,
    "start_column": 7,
    "end_line": 584,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 587,
    "start_column": 7,
    "end_line": 587,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 617,
    "start_column": 5,
    "end_line": 617,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 620,
    "start_column": 9,
    "end_line": 620,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 622,
    "start_column": 9,
    "end_line": 622,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 627,
    "start_column": 9,
    "end_line": 627,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 629,
    "start_column": 9,
    "end_line": 629,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 632,
    "start_column": 5,
    "end_line": 632,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 692,
    "start_column": 3,
    "end_line": 692,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 717,
    "start_column": 5,
    "end_line": 717,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 724,
    "start_column": 9,
    "end_line": 724,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 727,
    "start_column": 9,
    "end_line": 727,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 731,
    "start_column": 9,
    "end_line": 731,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 757,
    "start_column": 11,
    "end_line": 757,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 764,
    "start_column": 3,
    "end_line": 764,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 783,
    "start_column": 10,
    "end_line": 783,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 784,
    "start_column": 3,
    "end_line": 784,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 794,
    "start_column": 5,
    "end_line": 794,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 802,
    "start_column": 3,
    "end_line": 802,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 804,
    "start_column": 3,
    "end_line": 804,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 827,
    "start_column": 5,
    "end_line": 827,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 840,
    "start_column": 7,
    "end_line": 840,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/fts3/tool/fts3view.c",
    "start_line": 844,
    "start_column": 7,
    "end_line": 844,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_datasource.c",
    "start_line": 35,
    "start_column": 16,
    "end_line": 35,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 118,
    "start_column": 22,
    "end_line": 118,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 119,
    "start_column": 32,
    "end_line": 119,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 124,
    "start_column": 33,
    "end_line": 124,
    "end_column": 45,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 133,
    "start_column": 22,
    "end_line": 133,
    "end_column": 34,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 134,
    "start_column": 32,
    "end_line": 134,
    "end_column": 44,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1135,
    "start_column": 11,
    "end_line": 1135,
    "end_column": 20,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 399,
    "start_column": 3,
    "end_line": 399,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pRet, pCopy, nByte)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 341,
    "start_column": 13,
    "end_line": 341,
    "end_column": 42,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(struct SysName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 391,
    "start_column": 16,
    "end_line": 391,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n + 8)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 872,
    "start_column": 11,
    "end_line": 872,
    "end_column": 29,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 873,
    "start_column": 12,
    "end_line": 873,
    "end_column": 30,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 874,
    "start_column": 14,
    "end_line": 874,
    "end_column": 32,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1199,
    "start_column": 19,
    "end_line": 1199,
    "end_column": 31,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(4096)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1200,
    "start_column": 19,
    "end_line": 1200,
    "end_column": 46,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nBlock * sizeof(int)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 13,
    "start_column": 5,
    "end_line": 13,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 202,
    "start_column": 5,
    "end_line": 202,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 206,
    "start_column": 25,
    "end_line": 206,
    "end_column": 31,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 289,
    "start_column": 23,
    "end_line": 289,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 291,
    "start_column": 23,
    "end_line": 291,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 297,
    "start_column": 7,
    "end_line": 297,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 298,
    "start_column": 7,
    "end_line": 298,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 358,
    "start_column": 11,
    "end_line": 358,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 363,
    "start_column": 3,
    "end_line": 363,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vsnprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 528,
    "start_column": 5,
    "end_line": 528,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 550,
    "start_column": 7,
    "end_line": 550,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 572,
    "start_column": 3,
    "end_line": 572,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 654,
    "start_column": 33,
    "end_line": 654,
    "end_column": 37,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 666,
    "start_column": 3,
    "end_line": 666,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 670,
    "start_column": 9,
    "end_line": 670,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 672,
    "start_column": 9,
    "end_line": 672,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 676,
    "start_column": 3,
    "end_line": 676,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 697,
    "start_column": 10,
    "end_line": 697,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 753,
    "start_column": 5,
    "end_line": 753,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 836,
    "start_column": 16,
    "end_line": 836,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 839,
    "start_column": 18,
    "end_line": 839,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 878,
    "start_column": 5,
    "end_line": 878,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 897,
    "start_column": 14,
    "end_line": 897,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1001,
    "start_column": 9,
    "end_line": 1001,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1013,
    "start_column": 18,
    "end_line": 1013,
    "end_column": 23,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1015,
    "start_column": 7,
    "end_line": 1015,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1015,
    "start_column": 15,
    "end_line": 1015,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1015,
    "start_column": 50,
    "end_line": 1015,
    "end_column": 58,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1019,
    "start_column": 5,
    "end_line": 1019,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1020,
    "start_column": 5,
    "end_line": 1020,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1022,
    "start_column": 7,
    "end_line": 1022,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1024,
    "start_column": 7,
    "end_line": 1024,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1026,
    "start_column": 5,
    "end_line": 1026,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1027,
    "start_column": 5,
    "end_line": 1027,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1028,
    "start_column": 5,
    "end_line": 1028,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1029,
    "start_column": 5,
    "end_line": 1029,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1030,
    "start_column": 5,
    "end_line": 1030,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1031,
    "start_column": 5,
    "end_line": 1031,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1032,
    "start_column": 5,
    "end_line": 1032,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1037,
    "start_column": 9,
    "end_line": 1037,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1041,
    "start_column": 11,
    "end_line": 1041,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1052,
    "start_column": 7,
    "end_line": 1052,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1057,
    "start_column": 5,
    "end_line": 1057,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1061,
    "start_column": 7,
    "end_line": 1061,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1065,
    "start_column": 9,
    "end_line": 1065,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1067,
    "start_column": 7,
    "end_line": 1067,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1070,
    "start_column": 9,
    "end_line": 1070,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1073,
    "start_column": 11,
    "end_line": 1073,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1075,
    "start_column": 9,
    "end_line": 1075,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1078,
    "start_column": 11,
    "end_line": 1078,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1080,
    "start_column": 9,
    "end_line": 1080,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1084,
    "start_column": 5,
    "end_line": 1084,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1111,
    "start_column": 13,
    "end_line": 1111,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1117,
    "start_column": 5,
    "end_line": 1117,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1156,
    "start_column": 22,
    "end_line": 1156,
    "end_column": 26,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1216,
    "start_column": 3,
    "end_line": 1216,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1218,
    "start_column": 5,
    "end_line": 1218,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1220,
    "start_column": 5,
    "end_line": 1220,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1223,
    "start_column": 3,
    "end_line": 1223,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1228,
    "start_column": 48,
    "end_line": 1228,
    "end_column": 56,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "strerror"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1240,
    "start_column": 3,
    "end_line": 1240,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1246,
    "start_column": 5,
    "end_line": 1246,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1261,
    "start_column": 5,
    "end_line": 1261,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1263,
    "start_column": 5,
    "end_line": 1263,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1278,
    "start_column": 5,
    "end_line": 1278,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1292,
    "start_column": 5,
    "end_line": 1292,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1310,
    "start_column": 5,
    "end_line": 1310,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1330,
    "start_column": 5,
    "end_line": 1330,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1362,
    "start_column": 23,
    "end_line": 1362,
    "end_column": 28,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1381,
    "start_column": 16,
    "end_line": 1381,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sscanf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1427,
    "start_column": 17,
    "end_line": 1427,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1465,
    "start_column": 3,
    "end_line": 1465,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_main.c",
    "start_line": 1528,
    "start_column": 13,
    "end_line": 1528,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest3.c",
    "start_line": 46,
    "start_column": 10,
    "end_line": 46,
    "end_column": 32,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(CksumDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest3.c",
    "start_line": 55,
    "start_column": 28,
    "end_line": 55,
    "end_column": 59,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nEntry * (sizeof(char *)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb.c",
    "start_line": 770,
    "start_column": 14,
    "end_line": 770,
    "end_column": 35,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(aLib[i].zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb.c",
    "start_line": 502,
    "start_column": 5,
    "end_line": 502,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->aAlloc, aVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb.c",
    "start_line": 207,
    "start_column": 25,
    "end_line": 207,
    "end_column": 47,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(LevelDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb.c",
    "start_line": 499,
    "start_column": 27,
    "end_line": 499,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nVal*2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb.c",
    "start_line": 662,
    "start_column": 18,
    "end_line": 662,
    "end_column": 38,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(SqlDb)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 104,
    "start_column": 17,
    "end_line": 104,
    "end_column": 33,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(azArg[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 105,
    "start_column": 35,
    "end_line": 105,
    "end_column": 51,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(azArg[0])"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 30,
    "start_column": 18,
    "end_line": 30,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 35,
    "start_column": 15,
    "end_line": 35,
    "end_column": 19,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 124,
    "start_column": 13,
    "end_line": 124,
    "end_column": 17,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 158,
    "start_column": 9,
    "end_line": 158,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_func.c",
    "start_line": 165,
    "start_column": 7,
    "end_line": 165,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 270,
    "start_column": 5,
    "end_line": 270,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr2->hdr1, &pHdr1->hdr1, sizeof(pHdr1->hdr1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 276,
    "start_column": 5,
    "end_line": 276,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr2->hdr1, &pHdr2->hdr2, sizeof(pHdr1->hdr1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 277,
    "start_column": 5,
    "end_line": 277,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr2->hdr2, &pHdr1->hdr1, sizeof(pHdr1->hdr1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 283,
    "start_column": 5,
    "end_line": 283,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr2->hdr2, &pHdr2->hdr1, sizeof(pHdr1->hdr1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 291,
    "start_column": 5,
    "end_line": 291,
    "end_column": 59,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pHdr2->hdr1, &pHdr2->hdr2, sizeof(pHdr1->hdr1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 87,
    "start_column": 10,
    "end_line": 87,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest8.c",
    "start_line": 113,
    "start_column": 10,
    "end_line": 113,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 171,
    "start_column": 11,
    "end_line": 171,
    "end_column": 24,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFile)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 963,
    "start_column": 15,
    "end_line": 963,
    "end_column": 32,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFilename)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 60,
    "start_column": 5,
    "end_line": 60,
    "end_column": 48,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&env, lsm_default_env(), sizeof(env)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 636,
    "start_column": 7,
    "end_line": 636,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->pBuf, pVal, nVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 851,
    "start_column": 7,
    "end_line": 851,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zParam, zStart, nParam)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 869,
    "start_column": 7,
    "end_line": 869,
    "end_column": 37,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(zParam, zStart, nParam)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 969,
    "start_column": 3,
    "end_line": 969,
    "end_column": 47,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pDb->zName, zFilename, nFilename + 1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 982,
    "start_column": 3,
    "end_line": 982,
    "end_column": 51,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pDb->env, tdb_lsm_env(), sizeof(lsm_env)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 536,
    "start_column": 18,
    "end_line": 536,
    "end_column": 24,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 561,
    "start_column": 16,
    "end_line": 561,
    "end_column": 22,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 773,
    "start_column": 14,
    "end_line": 773,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 774,
    "start_column": 3,
    "end_line": 774,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 871,
    "start_column": 14,
    "end_line": 871,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 936,
    "start_column": 15,
    "end_line": 936,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 938,
    "start_column": 15,
    "end_line": 938,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1014,
    "start_column": 10,
    "end_line": 1014,
    "end_column": 13,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1034,
    "start_column": 13,
    "end_line": 1034,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1044,
    "start_column": 13,
    "end_line": 1044,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1059,
    "start_column": 13,
    "end_line": 1059,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1072,
    "start_column": 13,
    "end_line": 1072,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1085,
    "start_column": 13,
    "end_line": 1085,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1178,
    "start_column": 13,
    "end_line": 1178,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1353,
    "start_column": 15,
    "end_line": 1353,
    "end_column": 18,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1404,
    "start_column": 13,
    "end_line": 1404,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb3.c",
    "start_line": 1414,
    "start_column": 13,
    "end_line": 1414,
    "end_column": 16,
    "rule_id": "DS440000",
    "rule_name": "Generic: Do not hardcode SSL/TLS versions within an application.",
    "severity": 2,
    "description": "SSL/TLS version usage should be based on an OS or external configuration.",
    "match": "tLs"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 180,
    "start_column": 14,
    "end_line": 180,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zArg)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 190,
    "start_column": 17,
    "end_line": 190,
    "end_column": 38,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(pEntry->zName)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 137,
    "start_column": 3,
    "end_line": 137,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 144,
    "start_column": 3,
    "end_line": 144,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 145,
    "start_column": 3,
    "end_line": 145,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vfprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_util.c",
    "start_line": 146,
    "start_column": 3,
    "end_line": 146,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 82,
    "start_column": 11,
    "end_line": 82,
    "end_column": 23,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zOut)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 79,
    "start_column": 3,
    "end_line": 79,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 129,
    "start_column": 3,
    "end_line": 129,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "vprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 130,
    "start_column": 3,
    "end_line": 130,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 155,
    "start_column": 7,
    "end_line": 155,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 167,
    "start_column": 5,
    "end_line": 167,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 169,
    "start_column": 5,
    "end_line": 169,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest2.c",
    "start_line": 175,
    "start_column": 3,
    "end_line": 175,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_bt.c",
    "start_line": 58,
    "start_column": 21,
    "end_line": 58,
    "end_column": 25,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "atoi"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_bt.c",
    "start_line": 67,
    "start_column": 3,
    "end_line": 67,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest.h",
    "start_line": 35,
    "start_column": 20,
    "end_line": 35,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 140,
    "start_column": 5,
    "end_line": 140,
    "end_column": 41,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pUser[nByte], &rearguard, 4)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 162,
    "start_column": 9,
    "end_line": 162,
    "end_column": 52,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pAgg->aFrame, aFrame, sizeof(aFrame)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 324,
    "start_column": 41,
    "end_line": 324,
    "end_column": 50,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 272,
    "start_column": 5,
    "end_line": 272,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 278,
    "start_column": 11,
    "end_line": 278,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 280,
    "start_column": 13,
    "end_line": 280,
    "end_column": 20,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 282,
    "start_column": 11,
    "end_line": 282,
    "end_column": 18,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 286,
    "start_column": 5,
    "end_line": 286,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 291,
    "start_column": 9,
    "end_line": 291,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 292,
    "start_column": 39,
    "end_line": 292,
    "end_column": 46,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_mem.c",
    "start_line": 293,
    "start_column": 9,
    "end_line": 293,
    "end_column": 16,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_io.c",
    "start_line": 218,
    "start_column": 11,
    "end_line": 218,
    "end_column": 23,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(pgsz)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_io.c",
    "start_line": 241,
    "start_column": 3,
    "end_line": 241,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 648,
    "start_column": 13,
    "end_line": 648,
    "end_column": 22,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(z)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 906,
    "start_column": 52,
    "end_line": 906,
    "end_column": 65,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zSpec)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 209,
    "start_column": 7,
    "end_line": 209,
    "end_column": 56,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(apNew, p->apSector, p->nSector*sizeof(u8*)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 464,
    "start_column": 9,
    "end_line": 464,
    "end_column": 35,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(p->aBuffer, pV, nV)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 590,
    "start_column": 3,
    "end_line": 590,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pStart, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 600,
    "start_column": 3,
    "end_line": 600,
    "end_column": 26,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pOut, pStart, n)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 898,
    "start_column": 5,
    "end_line": 898,
    "end_column": 64,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(&pCkpter->file, &info.output, sizeof(sqlite4_buffer)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 461,
    "start_column": 29,
    "end_line": 461,
    "end_column": 41,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(nV*2)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest_tdb4.c",
    "start_line": 162,
    "start_column": 1,
    "end_line": 162,
    "end_column": 8,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest1.c",
    "start_line": 188,
    "start_column": 7,
    "end_line": 188,
    "end_column": 36,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pKey1, pKey2, nKey1+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest1.c",
    "start_line": 405,
    "start_column": 5,
    "end_line": 405,
    "end_column": 34,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(pKey1, pKey2, nKey1+1)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest1.c",
    "start_line": 235,
    "start_column": 5,
    "end_line": 235,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest1.c",
    "start_line": 248,
    "start_column": 3,
    "end_line": 248,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest1.c",
    "start_line": 549,
    "start_column": 3,
    "end_line": 549,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "sprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest9.c",
    "start_line": 71,
    "start_column": 7,
    "end_line": 71,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest9.c",
    "start_line": 79,
    "start_column": 7,
    "end_line": 79,
    "end_column": 14,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 147,
    "start_column": 14,
    "end_line": 147,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 148,
    "start_column": 14,
    "end_line": 148,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 172,
    "start_column": 14,
    "end_line": 172,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 173,
    "start_column": 14,
    "end_line": 173,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 350,
    "start_column": 14,
    "end_line": 350,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zKey)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 351,
    "start_column": 14,
    "end_line": 351,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zVal)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest6.c",
    "start_line": 648,
    "start_column": 7,
    "end_line": 648,
    "end_column": 13,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest5.c",
    "start_line": 166,
    "start_column": 14,
    "end_line": 166,
    "end_column": 28,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zFirst)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest5.c",
    "start_line": 167,
    "start_column": 13,
    "end_line": 167,
    "end_column": 26,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(zLast)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest5.c",
    "start_line": 494,
    "start_column": 3,
    "end_line": 494,
    "end_column": 9,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/ext/lsm1/lsm-test/lsmtest5.c",
    "start_line": 616,
    "start_column": 9,
    "end_line": 616,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 647,
    "start_column": 13,
    "end_line": 647,
    "end_column": 27,
    "rule_id": "DS140021",
    "rule_name": "Problematic C function detected (strlen)",
    "severity": 8,
    "description": "If a string is missing a null terminator, strlen will read past the end of the buffer",
    "match": "strlen(p->key)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 516,
    "start_column": 3,
    "end_line": 516,
    "end_column": 29,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(szBuffer, p, q - p)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 650,
    "start_column": 7,
    "end_line": 650,
    "end_column": 46,
    "rule_id": "DS121708",
    "rule_name": "Problematic C function detected (memcpy)",
    "severity": 8,
    "description": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer",
    "match": "memcpy(szBuffer, szCopy, sizeof(szCopy)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 541,
    "start_column": 28,
    "end_line": 541,
    "end_column": 54,
    "rule_id": "DS161085",
    "rule_name": "Problematic C function detected (malloc)",
    "severity": 8,
    "description": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. ",
    "match": "malloc(sizeof(list_item_t)"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 38,
    "start_column": 20,
    "end_line": 38,
    "end_column": 29,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "_snprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 156,
    "start_column": 6,
    "end_line": 156,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 231,
    "start_column": 5,
    "end_line": 231,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcpy"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 237,
    "start_column": 5,
    "end_line": 237,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 243,
    "start_column": 5,
    "end_line": 243,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 365,
    "start_column": 5,
    "end_line": 365,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcpy"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 371,
    "start_column": 5,
    "end_line": 371,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "lstrcat"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 487,
    "start_column": 16,
    "end_line": 487,
    "end_column": 21,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 596,
    "start_column": 10,
    "end_line": 596,
    "end_column": 15,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 603,
    "start_column": 7,
    "end_line": 603,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fopen"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 627,
    "start_column": 3,
    "end_line": 627,
    "end_column": 10,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "fprintf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 653,
    "start_column": 6,
    "end_line": 653,
    "end_column": 12,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  },
  {
    "filename": "/src/lib/sql-extensions/sqlite/autoconf/tea/win/nmakehlp.c",
    "start_line": 682,
    "start_column": 5,
    "end_line": 682,
    "end_column": 11,
    "rule_id": "DS154189",
    "rule_name": "Banned C function detected",
    "severity": 4,
    "description": "These functions are historically error-prone and have been associated with a significant number of vulnerabilities. Most of these functions have safer alternatives, such as replacing 'strcpy' with 'strlcpy' or 'strcpy_s'.",
    "match": "printf"
  }
]