/src/modules/community/todoApp/todoApp.js-36-  var mongoose = require('mongoose');
/src/modules/community/todoApp/todoApp.js:37:  var db = mongoose.connect('mongodb://localhost/todoApp');
/src/modules/community/todoApp/todoApp.js-38-  var schemaTodo = new mongoose.Schema({
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.min.js-27763-		 *  };
/src/modules/core/aloha/public/lib/aloha-bare.min.js:27764:		 *  Aloha.RepositoryManager.query(params, function (items) {
/src/modules/core/aloha/public/lib/aloha-bare.min.js-27765-		 *      Console.log(items);
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.min.js-27950-			for (i = 0; i < queue.length; i++) {
/src/modules/core/aloha/public/lib/aloha-bare.min.js:27951:				queue[i].query(params, makeProcess(queue[i]));
/src/modules/core/aloha/public/lib/aloha-bare.min.js-27952-			}
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.min.js-78759-				var that = this;
/src/modules/core/aloha/public/lib/aloha-bare.min.js:78760:				this.repositoryManager.query(params, function (response) {
/src/modules/core/aloha/public/lib/aloha-bare.min.js-78761-					that._processRepoResponse(
##############################################
/src/modules/core/aloha/public/lib/aloha-full.js-39275-		 *  };
/src/modules/core/aloha/public/lib/aloha-full.js:39276:		 *  Aloha.RepositoryManager.query(params, function (items) {
/src/modules/core/aloha/public/lib/aloha-full.js-39277-		 *      Console.log(items);
##############################################
/src/modules/core/aloha/public/lib/aloha-full.js-39462-			for (i = 0; i < queue.length; i++) {
/src/modules/core/aloha/public/lib/aloha-full.js:39463:				queue[i].query(params, makeProcess(queue[i]));
/src/modules/core/aloha/public/lib/aloha-full.js-39464-			}
##############################################
/src/modules/core/aloha/public/lib/aloha-full.js-90271-				var that = this;
/src/modules/core/aloha/public/lib/aloha-full.js:90272:				this.repositoryManager.query(params, function (response) {
/src/modules/core/aloha/public/lib/aloha-full.js-90273-					that._processRepoResponse(
##############################################
/src/modules/core/aloha/public/lib/aloha-full.min.js-27982-		 *  };
/src/modules/core/aloha/public/lib/aloha-full.min.js:27983:		 *  Aloha.RepositoryManager.query(params, function (items) {
/src/modules/core/aloha/public/lib/aloha-full.min.js-27984-		 *      Console.log(items);
##############################################
/src/modules/core/aloha/public/lib/aloha-full.min.js-28169-			for (i = 0; i < queue.length; i++) {
/src/modules/core/aloha/public/lib/aloha-full.min.js:28170:				queue[i].query(params, makeProcess(queue[i]));
/src/modules/core/aloha/public/lib/aloha-full.min.js-28171-			}
##############################################
/src/modules/core/aloha/public/lib/aloha-full.min.js-78978-				var that = this;
/src/modules/core/aloha/public/lib/aloha-full.min.js:78979:				this.repositoryManager.query(params, function (response) {
/src/modules/core/aloha/public/lib/aloha-full.min.js-78980-					that._processRepoResponse(
##############################################
/src/modules/core/aloha/public/lib/vendor/repository-browser/js/repository-browser.js-24-this._pagingCount:this._i18n("numerous")));b&&b.timeout&&this.handleTimeout()},_createOverlay:function(){0===d(".repository-browser-modal-overlay").length&&d("body").append('<div class="repository-browser-modal-overlay" style="top: -99999px; z-index: 99999;"></div>');var a=this;d(".repository-browser-modal-overlay").click(function(){a.close()});var b=d('<div class="repository-browser-modal-window" style="top: -99999px; z-index: 99999;">');d("body").append(b);return b},_fetchSubnodes:function(a,b){if(-1===
/src/modules/core/aloha/public/lib/vendor/repository-browser/js/repository-browser.js:25:a)this._fetchRepoRoot(b);else{var c;for(c=0;c<a.length;c++){var d=this._getObjectFromCache(a.eq(c));d&&this.fetchChildren(d,b)}}},getRepoChildren:function(a,b){if(this.repositoryManager){var c=this;this.repositoryManager.getChildren(a,function(a){c._processRepoResponse(a,b)})}},queryRepository:function(a,b){if(this.repositoryManager){var c=this;this.repositoryManager.query(a,function(a){c._processRepoResponse(a.results>0?a.items:[],{numItems:a.numItems,hasMoreItems:a.hasMoreItems,timeout:a.timeout},
/src/modules/core/aloha/public/lib/vendor/repository-browser/js/repository-browser.js-26-b)})}},renderRowCols:function(a){var b={};d.each(this.columns,function(c){switch(c){case "icon":b.icon='<div class="repository-browser-icon repository-browser-icon-'+a.type+'"></div>';break;default:b[c]=a[c]||"--"}});return b},onSelect:function(){},fetchChildren:function(a,b){if((!0===a.hasMoreItems||"folder"===a.baseType)&&!1===a.loaded){var c=this;this.getRepoChildren({inFolderId:a.id,repositoryId:a.repositoryId},function(d){c._cachedRepositoryObjects[a.uid].loaded=!0;typeof b==="function"&&b(d)})}},
##############################################
/src/modules/core/aloha/public/lib/aloha.js-27768-		 *  };
/src/modules/core/aloha/public/lib/aloha.js:27769:		 *  Aloha.RepositoryManager.query(params, function (items) {
/src/modules/core/aloha/public/lib/aloha.js-27770-		 *      Console.log(items);
##############################################
/src/modules/core/aloha/public/lib/aloha.js-27955-			for (i = 0; i < queue.length; i++) {
/src/modules/core/aloha/public/lib/aloha.js:27956:				queue[i].query(params, makeProcess(queue[i]));
/src/modules/core/aloha/public/lib/aloha.js-27957-			}
##############################################
/src/modules/core/aloha/public/lib/aloha.js-85310-				var that = this;
/src/modules/core/aloha/public/lib/aloha.js:85311:				this.repositoryManager.query(params, function (response) {
/src/modules/core/aloha/public/lib/aloha.js-85312-					that._processRepoResponse(
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.js-27789-		 *  };
/src/modules/core/aloha/public/lib/aloha-bare.js:27790:		 *  Aloha.RepositoryManager.query(params, function (items) {
/src/modules/core/aloha/public/lib/aloha-bare.js-27791-		 *      Console.log(items);
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.js-27976-			for (i = 0; i < queue.length; i++) {
/src/modules/core/aloha/public/lib/aloha-bare.js:27977:				queue[i].query(params, makeProcess(queue[i]));
/src/modules/core/aloha/public/lib/aloha-bare.js-27978-			}
##############################################
/src/modules/core/aloha/public/lib/aloha-bare.js-78785-				var that = this;
/src/modules/core/aloha/public/lib/aloha-bare.js:78786:				this.repositoryManager.query(params, function (response) {
/src/modules/core/aloha/public/lib/aloha-bare.js-78787-					that._processRepoResponse(
##############################################
/src/lib/core/Storage.js-39-      mongoose.disconnect(function () {
/src/lib/core/Storage.js:40:        calipso.db = mongoose.createConnection(dbUri, function (err) {
/src/lib/core/Storage.js-41-          if (err) {
##############################################
/src/lib/core/Storage.js-47-    } else {
/src/lib/core/Storage.js:48:      calipso.db = mongoose.createConnection(dbUri, function (err) {
/src/lib/core/Storage.js-49-        if (err) {
##############################################
/src/lib/core/Storage.js-66-      // TODO - what the hell is going on with mongoose?
/src/lib/core/Storage.js:67:      calipso.db = mongoose.createConnection(dbUri, proceed);
/src/lib/core/Storage.js-68-    });
##############################################
/src/lib/core/Storage.js-72-    // Create a dummy connection to enable models to be defined
/src/lib/core/Storage.js:73:    calipso.db = mongoose.createConnection();
/src/lib/core/Storage.js-74-
##############################################
/src/docs/coverage.html-27022-                    <td class="hits">0</td>
/src/docs/coverage.html:27023:                    <td class="source"> var db = mongoose.createConnection(dbUri, function(err) {</td>
/src/docs/coverage.html-27024-                </tr>
##############################################
/src/docs/coverage.html-27082-                    <td class="hits">2</td>
/src/docs/coverage.html:27083:                    <td class="source"> calipso.db = mongoose.createConnection(dbUri, function(err) {</td>
/src/docs/coverage.html-27084-                </tr>
##############################################
/src/docs/coverage.html-27370-                    <td class="hits">0</td>
/src/docs/coverage.html:27371:                    <td class="source"> calipso.db = mongoose.createConnection('');</td>
/src/docs/coverage.html-27372-                </tr>
