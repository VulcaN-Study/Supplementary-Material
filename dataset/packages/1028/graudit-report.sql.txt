/src/src/stores/sources/HistogramDataStore.js-43-
/src/src/stores/sources/HistogramDataStore.js:44:    url.query(urlQuery);
/src/src/stores/sources/HistogramDataStore.js-45-
##############################################
/src/src/components/indices/IndexSetsComponent.jsx-17-const IndexSetsComponent = React.createClass({
/src/src/components/indices/IndexSetsComponent.jsx:18:  mixins: [Reflux.connect(IndexSetsStore)],
/src/src/components/indices/IndexSetsComponent.jsx-19-
##############################################
/src/src/components/lookup-tables/DataAdaptersContainer.jsx-20-
/src/src/components/lookup-tables/DataAdaptersContainer.jsx:21:  mixins: [Reflux.connect(LookupTableDataAdaptersStore)],
/src/src/components/lookup-tables/DataAdaptersContainer.jsx-22-
##############################################
/src/src/components/lookup-tables/CachesContainer.jsx-20-
/src/src/components/lookup-tables/CachesContainer.jsx:21:  mixins: [Reflux.connect(LookupTableCachesStore)],
/src/src/components/lookup-tables/CachesContainer.jsx-22-
##############################################
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx-16-const AlertNotificationsComponent = React.createClass({
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx:17:  mixins: [Reflux.connect(AlertNotificationsStore)],
/src/src/components/alertnotifications/AlertNotificationsComponent.jsx-18-
##############################################
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-18-const CreateAlertNotificationInput = React.createClass({
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx:19:  mixins: [Reflux.connect(AlertNotificationsStore)],
/src/src/components/alertnotifications/CreateAlertNotificationInput.jsx-20-  getInitialState() {
##############################################
/src/src/components/alertnotifications/AlertNotification.jsx-23-  },
/src/src/components/alertnotifications/AlertNotification.jsx:24:  mixins: [Reflux.connect(AlertNotificationsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertnotifications/AlertNotification.jsx-25-
##############################################
/src/src/components/notifications/NotificationsList.jsx-11-const NotificationsList = React.createClass({
/src/src/components/notifications/NotificationsList.jsx:12:  mixins: [Reflux.connect(NotificationsStore)],
/src/src/components/notifications/NotificationsList.jsx-13-  _formatNotificationCount(count) {
##############################################
/src/src/components/alertconditions/AlertConditionForm.jsx-17-  },
/src/src/components/alertconditions/AlertConditionForm.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/AlertConditionForm.jsx-19-
##############################################
/src/src/components/alertconditions/EditAlertConditionForm.jsx-19-
/src/src/components/alertconditions/EditAlertConditionForm.jsx:20:  mixins: [Reflux.connect(AlertConditionsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertconditions/EditAlertConditionForm.jsx-21-
##############################################
/src/src/components/alertconditions/AlertCondition.jsx-17-  },
/src/src/components/alertconditions/AlertCondition.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/alertconditions/AlertCondition.jsx-19-
##############################################
/src/src/components/alertconditions/AlertConditionsComponent.jsx-16-const AlertConditionsComponent = React.createClass({
/src/src/components/alertconditions/AlertConditionsComponent.jsx:17:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/AlertConditionsComponent.jsx-18-
##############################################
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-17-const CreateAlertConditionInput = React.createClass({
/src/src/components/alertconditions/CreateAlertConditionInput.jsx:18:  mixins: [Reflux.connect(AlertConditionsStore)],
/src/src/components/alertconditions/CreateAlertConditionInput.jsx-19-  getInitialState() {
##############################################
/src/src/components/layout/Footer.jsx-8-const Footer = React.createClass({
/src/src/components/layout/Footer.jsx:9:  mixins: [Reflux.connect(SystemStore)],
/src/src/components/layout/Footer.jsx-10-  componentDidMount() {
##############################################
/src/src/components/inputs/InputStateBadge.jsx-17-  },
/src/src/components/inputs/InputStateBadge.jsx:18:  mixins: [Reflux.connect(InputStatesStore), Reflux.connect(NodesStore)],
/src/src/components/inputs/InputStateBadge.jsx-19-  comparator: new InputStateComparator(),
##############################################
/src/src/components/inputs/InputsList.jsx-25-  },
/src/src/components/inputs/InputsList.jsx:26:  mixins: [Reflux.connect(SingleNodeStore), Reflux.listenTo(InputsStore, '_splitInputs')],
/src/src/components/inputs/InputsList.jsx-27-  getInitialState() {
##############################################
/src/src/components/inputs/CreateInputControl.jsx-16-const CreateInputControl = React.createClass({
/src/src/components/inputs/CreateInputControl.jsx:17:  mixins: [Reflux.connect(InputTypesStore)],
/src/src/components/inputs/CreateInputControl.jsx-18-  getInitialState() {
##############################################
/src/src/components/inputs/InputListItem.jsx-26-  },
/src/src/components/inputs/InputListItem.jsx:27:  mixins: [PermissionsMixin, Reflux.connect(InputTypesStore)],
/src/src/components/inputs/InputListItem.jsx-28-  _deleteInput() {
##############################################
/src/src/components/inputs/NodeOrGlobalSelect.jsx-16-  },
/src/src/components/inputs/NodeOrGlobalSelect.jsx:17:  mixins: [Reflux.connect(NodesStore)],
/src/src/components/inputs/NodeOrGlobalSelect.jsx-18-  getInitialState() {
##############################################
/src/src/components/inputs/InputThroughput.jsx-18-  },
/src/src/components/inputs/InputThroughput.jsx:19:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/inputs/InputThroughput.jsx-20-  getInitialState() {
##############################################
/src/src/components/navigation/Navigation.jsx-35-
/src/src/components/navigation/Navigation.jsx:36:  mixins: [PermissionsMixin, Reflux.connect(NotificationsStore)],
/src/src/components/navigation/Navigation.jsx-37-
##############################################
/src/src/components/users/RolesComponent.jsx-18-export default React.createClass({
/src/src/components/users/RolesComponent.jsx:19:  mixins: [Reflux.connect(DashboardsStore, 'dashboards')],
/src/src/components/users/RolesComponent.jsx-20-  getInitialState() {
##############################################
/src/src/components/users/RoleList.jsx-14-const RoleList = React.createClass({
/src/src/components/users/RoleList.jsx:15:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/users/RoleList.jsx-16-  propTypes: {
##############################################
/src/src/components/users/UserForm.jsx-30-  },
/src/src/components/users/UserForm.jsx:31:  mixins: [PermissionsMixin, Reflux.connect(CurrentUserStore), Reflux.connect(DashboardsStore)],
/src/src/components/users/UserForm.jsx-32-  getInitialState() {
##############################################
/src/src/components/extractors/ExtractorsList.jsx-23-  },
/src/src/components/extractors/ExtractorsList.jsx:24:  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],
/src/src/components/extractors/ExtractorsList.jsx-25-  componentDidMount() {
##############################################
/src/src/components/extractors/ExportExtractors.jsx-19-  },
/src/src/components/extractors/ExportExtractors.jsx:20:  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],
/src/src/components/extractors/ExportExtractors.jsx-21-  componentDidMount() {
##############################################
/src/src/components/metrics/MetricContainer.jsx-20-  },
/src/src/components/metrics/MetricContainer.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricContainer.jsx-22-
##############################################
/src/src/components/metrics/MetricsMapper.jsx-12-  },
/src/src/components/metrics/MetricsMapper.jsx:13:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricsMapper.jsx-14-
##############################################
/src/src/components/metrics/MetricDetails.jsx-17-  },
/src/src/components/metrics/MetricDetails.jsx:18:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/metrics/MetricDetails.jsx-19-  componentDidMount() {
##############################################
/src/src/components/source-tagging/ConfigurationBundles.jsx-18-const ConfigurationBundles = React.createClass({
/src/src/components/source-tagging/ConfigurationBundles.jsx:19:  mixins: [Reflux.connect(ConfigurationBundlesStore)],
/src/src/components/source-tagging/ConfigurationBundles.jsx-20-
##############################################
/src/src/components/streams/StreamThroughput.jsx-16-  },
/src/src/components/streams/StreamThroughput.jsx:17:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/streams/StreamThroughput.jsx-18-  componentWillMount() {
##############################################
/src/src/components/times/TimesList.jsx-13-const TimesList = React.createClass({
/src/src/components/times/TimesList.jsx:14:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(SystemStore)],
/src/src/components/times/TimesList.jsx-15-  getInitialState() {
##############################################
/src/src/components/alerts/AlertTimeline.jsx-21-
/src/src/components/alerts/AlertTimeline.jsx:22:  mixins: [Reflux.connect(AlertNotificationsStore), Reflux.connect(AlarmCallbackHistoryStore)],
/src/src/components/alerts/AlertTimeline.jsx-23-
##############################################
/src/src/components/alerts/AlertsComponent.jsx-14-const AlertsComponent = React.createClass({
/src/src/components/alerts/AlertsComponent.jsx:15:  mixins: [Reflux.connect(AlertsStore), Reflux.connect(AlertConditionsStore)],
/src/src/components/alerts/AlertsComponent.jsx-16-
##############################################
/src/src/components/loggers/LogLevelDropdown.jsx-18-  },
/src/src/components/loggers/LogLevelDropdown.jsx:19:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LogLevelDropdown.jsx-20-  _changeLoglevel(loglevel) {
##############################################
/src/src/components/loggers/NodeLoggers.jsx-19-  },
/src/src/components/loggers/NodeLoggers.jsx:20:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/loggers/NodeLoggers.jsx-21-  getInitialState() {
##############################################
/src/src/components/loggers/LoggerOverview.jsx-10-const LoggerOverview = React.createClass({
/src/src/components/loggers/LoggerOverview.jsx:11:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LoggerOverview.jsx-12-  render() {
##############################################
/src/src/components/loggers/LogLevelMetrics.jsx-20-  },
/src/src/components/loggers/LogLevelMetrics.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/loggers/LogLevelMetrics.jsx-22-  componentDidMount() {
##############################################
/src/src/components/loggers/LogLevelMetricsOverview.jsx-13-  },
/src/src/components/loggers/LogLevelMetricsOverview.jsx:14:  mixins: [Reflux.connect(LoggersStore)],
/src/src/components/loggers/LogLevelMetricsOverview.jsx-15-  render() {
##############################################
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx-19-
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx:20:  mixins: [Reflux.connect(AlarmCallbackHistoryStore), Reflux.connect(AlertNotificationsStore)],
/src/src/components/alarmcallbacks/AlarmCallbackHistoryOverview.jsx-21-
##############################################
/src/src/components/throughput/GlobalThroughput.jsx-10-const GlobalThroughput = React.createClass({
/src/src/components/throughput/GlobalThroughput.jsx:11:  mixins: [Reflux.connect(GlobalThroughputStore)],
/src/src/components/throughput/GlobalThroughput.jsx-12-  render() {
##############################################
/src/src/components/throughput/NodeThroughput.jsx-21-  },
/src/src/components/throughput/NodeThroughput.jsx:22:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/throughput/NodeThroughput.jsx-23-  getDefaultProps() {
##############################################
/src/src/components/dashboard/AddToDashboardMenu.jsx-39-
/src/src/components/dashboard/AddToDashboardMenu.jsx:40:  mixins: [Reflux.connect(DashboardsStore), PermissionsMixin],
/src/src/components/dashboard/AddToDashboardMenu.jsx-41-
##############################################
/src/src/components/dashboard/DashboardListPage.jsx-23-  },
/src/src/components/dashboard/DashboardListPage.jsx:24:  mixins: [Reflux.connect(DashboardsStore, 'dashboards'), PermissionsMixin],
/src/src/components/dashboard/DashboardListPage.jsx-25-  getInitialState() {
##############################################
/src/src/components/dashboard/Dashboard.jsx-23-  },
/src/src/components/dashboard/Dashboard.jsx:24:  mixins: [PermissionsMixin, Reflux.connect(CurrentUserStore)],
/src/src/components/dashboard/Dashboard.jsx-25-  _setStartpage() {
##############################################
/src/src/components/common/LinkToNode.jsx-15-  },
/src/src/components/common/LinkToNode.jsx:16:  mixins: [Reflux.connect(NodesStore)],
/src/src/components/common/LinkToNode.jsx-17-  render() {
##############################################
/src/src/components/common/LocaleSelect.jsx-10-const LocaleSelect = React.createClass({
/src/src/components/common/LocaleSelect.jsx:11:  mixins: [Reflux.connect(SystemStore)],
/src/src/components/common/LocaleSelect.jsx-12-  propTypes: {
##############################################
/src/src/components/common/IfPermitted.jsx-18-  },
/src/src/components/common/IfPermitted.jsx:19:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/common/IfPermitted.jsx-20-  getDefaultProps() {
##############################################
/src/src/components/indexers/IndexerClusterHealth.jsx-13-const IndexerClusterHealth = React.createClass({
/src/src/components/indexers/IndexerClusterHealth.jsx:14:  mixins: [Reflux.connect(IndexerClusterStore)],
/src/src/components/indexers/IndexerClusterHealth.jsx-15-
##############################################
/src/src/components/cluster/GraylogClusterOverview.jsx-21-const GraylogClusterOverview = React.createClass({
/src/src/components/cluster/GraylogClusterOverview.jsx:22:  mixins: [Reflux.connect(NodesStore, 'nodes'), Reflux.connect(ClusterTrafficStore, 'traffic')],
/src/src/components/cluster/GraylogClusterOverview.jsx-23-
##############################################
/src/src/components/authentication/AuthenticationComponent.jsx-30-
/src/src/components/authentication/AuthenticationComponent.jsx:31:  mixins: [Reflux.connect(AuthenticationStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/authentication/AuthenticationComponent.jsx-32-
##############################################
/src/src/components/search/AddDecoratorButton.jsx-24-  },
/src/src/components/search/AddDecoratorButton.jsx:25:  mixins: [Reflux.connect(DecoratorsStore), PureRenderMixin],
/src/src/components/search/AddDecoratorButton.jsx-26-  getDefaultProps() {
##############################################
/src/src/components/search/DecoratorSidebar.jsx-26-  },
/src/src/components/search/DecoratorSidebar.jsx:27:  mixins: [Reflux.connect(DecoratorsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/search/DecoratorSidebar.jsx-28-  getInitialState() {
##############################################
/src/src/components/search/Decorator.jsx-25-  },
/src/src/components/search/Decorator.jsx:26:  mixins: [Reflux.connect(DecoratorsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/components/search/Decorator.jsx-27-  componentDidMount() {
##############################################
/src/src/components/search/RefreshControls.jsx-14-const RefreshControls = React.createClass({
/src/src/components/search/RefreshControls.jsx:15:  mixins: [Reflux.connect(RefreshStore, 'refresh')],
/src/src/components/search/RefreshControls.jsx-16-  INTERVAL_OPTIONS: {
##############################################
/src/src/components/field-analyzers/FieldQuickValues.jsx-31-  },
/src/src/components/field-analyzers/FieldQuickValues.jsx:32:  mixins: [Reflux.listenTo(RefreshStore, '_setupTimer', '_setupTimer'), Reflux.connect(FieldQuickValuesStore)],
/src/src/components/field-analyzers/FieldQuickValues.jsx-33-
##############################################
/src/src/components/systemjobs/SystemJobsComponent.jsx-14-const SystemJobsComponent = React.createClass({
/src/src/components/systemjobs/SystemJobsComponent.jsx:15:  mixins: [Reflux.connect(SystemJobsStore)],
/src/src/components/systemjobs/SystemJobsComponent.jsx-16-  componentDidMount() {
##############################################
/src/src/components/nodes/JournalState.jsx-19-  },
/src/src/components/nodes/JournalState.jsx:20:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JournalState.jsx-21-  componentWillMount() {
##############################################
/src/src/components/nodes/JvmHeapUsage.jsx-20-  },
/src/src/components/nodes/JvmHeapUsage.jsx:21:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JvmHeapUsage.jsx-22-  componentWillMount() {
##############################################
/src/src/components/nodes/BufferUsage.jsx-23-  },
/src/src/components/nodes/BufferUsage.jsx:24:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/BufferUsage.jsx-25-  componentWillMount() {
##############################################
/src/src/components/nodes/JournalDetails.jsx-27-  },
/src/src/components/nodes/JournalDetails.jsx:28:  mixins: [Reflux.connect(MetricsStore)],
/src/src/components/nodes/JournalDetails.jsx-29-
##############################################
/src/src/components/nodes/NodesList.jsx-16-  },
/src/src/components/nodes/NodesList.jsx:17:  mixins: [Reflux.connect(NodesStore), Reflux.connect(ClusterOverviewStore)],
/src/src/components/nodes/NodesList.jsx-18-  _isLoading() {
##############################################
/src/src/components/messageloaders/RawMessageLoader.jsx-26-
/src/src/components/messageloaders/RawMessageLoader.jsx:27:  mixins: [Reflux.connect(CodecTypesStore), Reflux.connect(InputsStore)],
/src/src/components/messageloaders/RawMessageLoader.jsx-28-
##############################################
/src/src/pages/DashboardsPage.jsx-8-const DashboardsPage = React.createClass({
/src/src/pages/DashboardsPage.jsx:9:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/DashboardsPage.jsx-10-  render() {
##############################################
/src/src/pages/ImportExtractorsPage.jsx-17-  },
/src/src/pages/ImportExtractorsPage.jsx:18:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/ImportExtractorsPage.jsx-19-  getInitialState() {
##############################################
/src/src/pages/AlertsPage.jsx-17-const AlertsPage = React.createClass({
/src/src/pages/AlertsPage.jsx:18:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertsPage.jsx-19-  render() {
##############################################
/src/src/pages/StreamOutputsPage.jsx-15-const StreamOutputsPage = React.createClass({
/src/src/pages/StreamOutputsPage.jsx:16:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/StreamOutputsPage.jsx-17-  getInitialState() {
##############################################
/src/src/pages/NodeInputsPage.jsx-23-  },
/src/src/pages/NodeInputsPage.jsx:24:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connectFilter(NodesStore, 'node', nodeFilter)],
/src/src/pages/NodeInputsPage.jsx-25-  componentDidMount() {
##############################################
/src/src/pages/IndexSetCreationPage.jsx-24-
/src/src/pages/IndexSetCreationPage.jsx:25:  mixins: [Reflux.connect(IndexSetsStore), Reflux.connect(IndicesConfigurationStore)],
/src/src/pages/IndexSetCreationPage.jsx-26-
##############################################
/src/src/pages/UsersPage.jsx-15-const UsersPage = React.createClass({
/src/src/pages/UsersPage.jsx:16:  mixins: [Reflux.connect(CurrentUserStore), PermissionsMixin],
/src/src/pages/UsersPage.jsx-17-  render() {
##############################################
/src/src/pages/EditExtractorsPage.jsx-25-  },
/src/src/pages/EditExtractorsPage.jsx:26:  mixins: [Reflux.connect(ExtractorsStore), Reflux.connect(InputsStore)],
/src/src/pages/EditExtractorsPage.jsx-27-  getInitialState() {
##############################################
/src/src/pages/SystemOutputsPage.jsx-10-const SystemOutputsPage = React.createClass({
/src/src/pages/SystemOutputsPage.jsx:11:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/SystemOutputsPage.jsx-12-  render() {
##############################################
/src/src/pages/ExportContentPackPage.jsx-26-const ExportContentPackPage = React.createClass({
/src/src/pages/ExportContentPackPage.jsx:27:  mixins: [Reflux.connect(InputsStore), Reflux.connect(DashboardsStore)],
/src/src/pages/ExportContentPackPage.jsx-28-  getInitialState() {
##############################################
/src/src/pages/ShowAlertPage.jsx-25-
/src/src/pages/ShowAlertPage.jsx:26:  mixins: [Reflux.connect(AlertsStore), Reflux.connect(AlertConditionsStore)],
/src/src/pages/ShowAlertPage.jsx-27-
##############################################
/src/src/pages/StreamEditPage.jsx-17-  },
/src/src/pages/StreamEditPage.jsx:18:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/StreamEditPage.jsx-19-
##############################################
/src/src/pages/NodesPage.jsx-10-const NodesPage = React.createClass({
/src/src/pages/NodesPage.jsx:11:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NodesPage.jsx-12-  render() {
##############################################
/src/src/pages/AlertNotificationsPage.jsx-13-const AlertNotificationsPage = React.createClass({
/src/src/pages/AlertNotificationsPage.jsx:14:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertNotificationsPage.jsx-15-  render() {
##############################################
/src/src/pages/ShowMetricsPage.jsx-19-  },
/src/src/pages/ShowMetricsPage.jsx:20:  mixins: [Reflux.connect(NodesStore), Reflux.connect(MetricsStore), Reflux.listenTo(NodesStore, '_getMetrics')],
/src/src/pages/ShowMetricsPage.jsx-21-
##############################################
/src/src/pages/ShowDashboardPage.jsx-33-  },
/src/src/pages/ShowDashboardPage.jsx:34:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(FocusStore), PermissionsMixin],
/src/src/pages/ShowDashboardPage.jsx-35-
##############################################
/src/src/pages/ConfigurationsPage.jsx-16-const ConfigurationsPage = React.createClass({
/src/src/pages/ConfigurationsPage.jsx:17:  mixins: [Reflux.connect(ConfigurationsStore)],
/src/src/pages/ConfigurationsPage.jsx-18-
##############################################
/src/src/pages/ShowNodePage.jsx-29-    Reflux.connectFilter(ClusterOverviewStore, 'systemOverview', clusterOverviewFilter),
/src/src/pages/ShowNodePage.jsx:30:    Reflux.connect(InputTypesStore),
/src/src/pages/ShowNodePage.jsx-31-  ],
##############################################
/src/src/pages/IndexSetPage.jsx-28-  mixins: [
/src/src/pages/IndexSetPage.jsx:29:    Reflux.connect(IndexSetsStore),
/src/src/pages/IndexSetPage.jsx:30:    Reflux.connect(IndicesStore, 'indexDetails'),
/src/src/pages/IndexSetPage.jsx:31:    Reflux.connect(IndexerOverviewStore),
/src/src/pages/IndexSetPage.jsx-32-  ],
##############################################
/src/src/pages/ExportExtractorsPage.jsx-17-  },
/src/src/pages/ExportExtractorsPage.jsx:18:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/ExportExtractorsPage.jsx-19-  getInitialState() {
##############################################
/src/src/pages/NewAlertNotificationPage.jsx-14-const NewAlertNotificationPage = React.createClass({
/src/src/pages/NewAlertNotificationPage.jsx:15:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NewAlertNotificationPage.jsx-16-  render() {
##############################################
/src/src/pages/ExtractorsPage.jsx-26-  },
/src/src/pages/ExtractorsPage.jsx:27:  mixins: [Reflux.connect(InputsStore), Reflux.listenTo(NodesStore, 'onNodesChange')],
/src/src/pages/ExtractorsPage.jsx-28-  getInitialState() {
##############################################
/src/src/pages/LoginPage.jsx-17-const LoginPage = React.createClass({
/src/src/pages/LoginPage.jsx:18:  mixins: [Reflux.connect(SessionStore), Reflux.ListenerMethods],
/src/src/pages/LoginPage.jsx-19-
##############################################
/src/src/pages/IndexSetConfigurationPage.jsx-24-
/src/src/pages/IndexSetConfigurationPage.jsx:25:  mixins: [Reflux.connect(IndexSetsStore), Reflux.connect(IndicesConfigurationStore)],
/src/src/pages/IndexSetConfigurationPage.jsx-26-
##############################################
/src/src/pages/NewAlertConditionPage.jsx-16-const NewAlertConditionPage = React.createClass({
/src/src/pages/NewAlertConditionPage.jsx:17:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/NewAlertConditionPage.jsx-18-  render() {
##############################################
/src/src/pages/StreamsPage.jsx-22-const StreamsPage = React.createClass({
/src/src/pages/StreamsPage.jsx:23:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(IndexSetsStore)],
/src/src/pages/StreamsPage.jsx-24-  getInitialState() {
##############################################
/src/src/pages/CreateExtractorsPage.jsx-28-  },
/src/src/pages/CreateExtractorsPage.jsx:29:  mixins: [Reflux.connect(InputsStore)],
/src/src/pages/CreateExtractorsPage.jsx-30-  getInitialState() {
##############################################
/src/src/pages/LUTDataAdaptersPage.jsx-25-  mixins: [
/src/src/pages/LUTDataAdaptersPage.jsx:26:    Reflux.connect(LookupTableDataAdaptersStore),
/src/src/pages/LUTDataAdaptersPage.jsx:27:    Reflux.connect(LookupTablesStore, 'tableStore'),
/src/src/pages/LUTDataAdaptersPage.jsx-28-  ],
##############################################
/src/src/pages/StartPage.jsx-20-  },
/src/src/pages/StartPage.jsx:21:  mixins: [Reflux.connect(CurrentUserStore), Reflux.listenTo(GettingStartedStore, 'onGettingStartedUpdate')],
/src/src/pages/StartPage.jsx-22-  getInitialState() {
##############################################
/src/src/pages/GettingStartedPage.jsx-19-  },
/src/src/pages/GettingStartedPage.jsx:20:  mixins: [Reflux.connect(SystemStore)],
/src/src/pages/GettingStartedPage.jsx-21-  _isLoading() {
##############################################
/src/src/pages/ShowMessagePage.jsx-24-  },
/src/src/pages/ShowMessagePage.jsx:25:  mixins: [Reflux.connect(NodesStore), Reflux.listenTo(InputsStore, '_formatInput')],
/src/src/pages/ShowMessagePage.jsx-26-  getInitialState() {
##############################################
/src/src/pages/EditAlertConditionPage.jsx-23-
/src/src/pages/EditAlertConditionPage.jsx:24:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(AlertConditionsStore)],
/src/src/pages/EditAlertConditionPage.jsx-25-
##############################################
/src/src/pages/LUTTablesPage.jsx-24-  mixins: [
/src/src/pages/LUTTablesPage.jsx:25:    Reflux.connect(LookupTablesStore),
/src/src/pages/LUTTablesPage.jsx-26-  ],
##############################################
/src/src/pages/ThreadDumpPage.jsx-22-  },
/src/src/pages/ThreadDumpPage.jsx:23:  mixins: [Reflux.connect(CurrentUserStore), Reflux.connectFilter(NodesStore, 'node', nodeFilter)],
/src/src/pages/ThreadDumpPage.jsx-24-  componentDidMount() {
##############################################
/src/src/pages/AlertConditionsPage.jsx-16-const AlertConditionsPage = React.createClass({
/src/src/pages/AlertConditionsPage.jsx:17:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/AlertConditionsPage.jsx-18-  render() {
##############################################
/src/src/pages/LUTCachesPage.jsx-24-  mixins: [
/src/src/pages/LUTCachesPage.jsx:25:    Reflux.connect(LookupTableCachesStore),
/src/src/pages/LUTCachesPage.jsx-26-  ],
##############################################
/src/src/pages/SearchPage.jsx-28-  mixins: [
/src/src/pages/SearchPage.jsx:29:    Reflux.connect(NodesStore),
/src/src/pages/SearchPage.jsx:30:    Reflux.connect(MessageFieldsStore),
/src/src/pages/SearchPage.jsx:31:    Reflux.connect(CurrentUserStore),
/src/src/pages/SearchPage.jsx-32-    Reflux.listenTo(InputsStore, '_formatInputs'),
##############################################
/src/src/pages/InputsPage.jsx-11-const InputsPage = React.createClass({
/src/src/pages/InputsPage.jsx:12:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/pages/InputsPage.jsx-13-  componentDidMount() {
##############################################
/src/src/routing/App.jsx-25-
/src/src/routing/App.jsx:26:  mixins: [Reflux.connect(CurrentUserStore)],
/src/src/routing/App.jsx-27-  render() {
##############################################
/src/src/routing/AppFacade.jsx-21-const AppFacade = React.createClass({
/src/src/routing/AppFacade.jsx:22:  mixins: [Reflux.connect(SessionStore), Reflux.connect(ServerAvailabilityStore), Reflux.connect(CurrentUserStore)],
/src/src/routing/AppFacade.jsx-23-
##############################################
/src/src/routing/AppWithSearchBar.jsx-28-  mixins: [
/src/src/routing/AppWithSearchBar.jsx:29:    Reflux.connect(CurrentUserStore),
/src/src/routing/AppWithSearchBar.jsx:30:    Reflux.connect(SavedSearchesStore),
/src/src/routing/AppWithSearchBar.jsx:31:    Reflux.connect(ConfigurationsStore),
/src/src/routing/AppWithSearchBar.jsx-32-  ],
##############################################
/src/src/routing/Routes.jsx-129-    }
/src/src/routing/Routes.jsx:130:    route.query(queryParams);
/src/src/routing/Routes.jsx-131-    return route.resource();
##############################################
/src/src/routing/Routes.jsx-145-
/src/src/routing/Routes.jsx:146:    route.query(queryParams);
/src/src/routing/Routes.jsx-147-    return route.resource();
