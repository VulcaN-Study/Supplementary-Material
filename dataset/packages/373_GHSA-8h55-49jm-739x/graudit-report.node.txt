/src/easyquick.js-10-
/src/easyquick.js:11:var httpServer = http.createServer(function(req, res) {
/src/easyquick.js-12-    var body = "";
##############################################
/src/easyquick.js-49-    // a standalone HTTPS proxy server
/src/easyquick.js:50:    httpProxy.createServer(argv.p || 80, argv.h || 'localhost', options).listen(443);
/src/easyquick.js-51-}
##############################################
/src/example/socket.io.js-1164-        try {
/src/example/socket.io.js:1165:          var opts = JSON.parse(data);
/src/example/socket.io.js-1166-          packet.name = opts.name;
##############################################
/src/example/socket.io.js-1174-        try {
/src/example/socket.io.js:1175:          packet.data = JSON.parse(data);
/src/example/socket.io.js-1176-        } catch (e) { }
##############################################
/src/example/socket.io.js-1190-            try {
/src/example/socket.io.js:1191:              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];
/src/example/socket.io.js-1192-            } catch (e) { }
##############################################
/src/example/socket.io.js-1441-    this.reopenTimeout = setTimeout(function () {
/src/example/socket.io.js:1442:      self.open();
/src/example/socket.io.js-1443-    }, this.socket.options['reopen delay']);*/
##############################################
/src/example/socket.io.js-1632-
/src/example/socket.io.js:1633:      xhr.open('GET', url, true);
/src/example/socket.io.js-1634-      xhr.withCredentials = true;
##############################################
/src/example/socket.io.js-1707-          self.publish('connecting', self.transport.name);
/src/example/socket.io.js:1708:          self.transport.open();
/src/example/socket.io.js-1709-
##############################################
/src/example/socket.io.js-1848-         
/src/example/socket.io.js:1849:    xhr.open('GET', uri, true);
/src/example/socket.io.js-1850-    xhr.send(null); 
##############################################
/src/example/socket.io.js-3186-
/src/example/socket.io.js:3187:    req.open(method || 'GET', this.prepareUrl() + query, true);
/src/example/socket.io.js-3188-
##############################################
/src/example/socket.io.js-3303-    this.doc = new window[(['Active'].concat('Object').join('X'))]('htmlfile');
/src/example/socket.io.js:3304:    this.doc.open();
/src/example/socket.io.js-3305-    this.doc.write('<html></html>');
##############################################
/src/tools.js-41-	var url = new RegExp('\/'+serviceUrl+'\/');
/src/tools.js:42:    callService(req.url.replace(url,''), JSON.parse(postData), function(responseData){
/src/tools.js-43-        res.writeHead(200, { 'content-type': 'application/json' });
##############################################
/src/tools.js-107-	if ( readAsText === false && (contentType.indexOf('image') >= 0 || contentType.indexOf('application') >= 0) ) {
/src/tools.js:108:		fs.readFile(filename, function (err, data) {
/src/tools.js-109-			if (err) {
##############################################
/src/tools.js-120-		if (isAllowedExt) {
/src/tools.js:121:			fs.readFile(filename, 'utf8', function (err, data) {
/src/tools.js-122-				if (err) {
##############################################
/src/tools.js-144-function loadTemplate (filename, callback) {
/src/tools.js:145:    fs.readFile(filename, 'utf8', function(err, data) {
/src/tools.js-146-        if(err) throw err;
