{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 44,
          "line": 3
        },
        "extra": {
          "line": "Copyright (c) 2014 Eyal Arubas <eyalarubas@gmail.com>",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 43,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 14,
          "line": 1
        },
        "extra": {
          "line": "Michael Brown <michael_brown_uk[AT]hotmail.com>",
          "message": "Syntax error"
        },
        "path": "/src/src/lib/gif/AUTHORS",
        "start": {
          "col": 9,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 11,
          "line": 1
        },
        "extra": {
          "line": "The GIFLIB distribution is Copyright (c) 1997  Eric S. Raymond",
          "message": "Syntax error"
        },
        "path": "/src/src/lib/gif/COPYING",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "= GIFLIB =",
          "message": "Syntax error"
        },
        "path": "/src/src/lib/gif/README",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 381
        },
        "extra": {
          "line": "Please send bug reports, offers of help, etc. to jpeg-info@jpegclub.org.",
          "message": "Lexical error: WIERD end of file in quoted string"
        },
        "path": "/src/src/lib/jpeg/README",
        "start": {
          "col": 1,
          "line": 381
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 107
        },
        "extra": {
          "line": "July 23, 2015",
          "message": "Lexical error: WIERD end of file in quoted string"
        },
        "path": "/src/src/lib/png/LICENSE",
        "start": {
          "col": 1,
          "line": 107
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 15,
          "line": 106
        },
        "extra": {
          "line": "along with a #define variable to tell what compiler/system you are on.",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/src/lib/png/README",
        "start": {
          "col": 14,
          "line": 106
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 53,
          "line": 10
        },
        "extra": {
          "line": "(volunteer to write man pages welcome, contact zlib@gzip.org).  A usage example",
          "message": "Lexical error: unrecognised symbol, in token rule:@"
        },
        "path": "/src/src/lib/zlib/README",
        "start": {
          "col": 52,
          "line": 10
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 1
        },
        "extra": {
          "line": "GIF89a\ufffd\u0001M\u0001\ufffd\u0000\u0000o\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd+*\u0010FhvAk\ufffdo\ufffd\u01ec\ufffd\u0297\ufffd\ufffd1.#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffdokK\ufffd\ufffd\ufffd:c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdx\ufffd\ufffdRz\ufffdUw\ufffdONJf\ufffd\ufffdIs\ufffdf\ufffd\ufffd\u000f\r\b\ufffd\ufffd\ufffdhx\ufffd\ufffd\ufffd\ufffd8dr(HW\ufffd\ufffd\ufffd3Z\ufffdmnpVw\ufffdx\ufffd\ufffd4Whgh4\ufffd\ufffd\ufffdEE$FJ\u0012WV6HWi\ufffd\ufffdt'Teq\ufffd\ufffd8>\u0016\ufffd\ufffd\ufffd?8&2Z\ufffdu\ufffd\ufffdTV%hWHFE6\ufffd\ufffd\u01c4uchV6Ht\ufffd'Tw)4D4Yy\ufffd\ufffd\ufffdd{\ufffd\u0018Ch^\ufffd\ufffd\u001e\u001a\u0013Ei\ufffd#Ih[c0Wy\ufffd7f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdTI5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd#JsIS#\ufffd\ufffd\ufffdj\ufffd\ufffdJs\ufffdWi~\u001d \t^`J\u0235\ufffd|\u007f_Eh\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffdNJ(\u001aEVz\ufffd\ufffdMk\ufffd\u001d$0JS4:H^Iu\ufffd\ufffd}\ufffd\ufffd\u023f\u0017\u0016\u001b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd%\u001f!\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\ufffd\ufffd\ufffd=:A\ufffd\ufffd\ufffdWa\u0019\ufffd\ufffd\ufffddh\u001f\ufffd\ufffd\ufffdJk\ufffdEZ\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03fe\ufffd\ufffd`_c\ufffd\ufffd\ufffdZk\ufffd\\Z\u0019\ufffd\ufffd\ufffdRk\ufffdM\ufffd\u0199\ufffd\ufffdBZ\ufffd!\ufffd\u0004\u0000\u0000\u0000\u0000\u0000,\u0000\u0000\u0000\u0000\ufffd\u0001M\u0001\u0000\u0007\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\u000f\ufffdsX\ufffd^\ufffd^X\ufffd\ufffd\u0014\u0014\ufffd\u0014E^yy\u0014>\ufffd\ufffd\ufffd>-2\ufffdx\ufffd\u0001\ufffd\ufffdx\u001f\ufffd\ufffd\ufffdx2\ufffd2\u0016\ufffd>\ufffd\u06fa^\ufffd\ufffd\ufffd\ufffd\u2461\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ue9a9\ufffd\u000f\udb7a\udf2d\ufffd\ufffd\ufffd\u0014R\ufffd\ufffd\ufffd\u0016\u0144a\ufffd`\ufffd\ufffd\ufffdix\ufffd9{\ufffd\u0001\ufffd\ufffdc\u01c6q\ufffd6\ufffd\u014b\u0018\u0005\ufffd\ufffd\u0231\ufffd\u01cf \ufffdeD\u0015C\\\ufffdz\u007f\ufffd\u0015\ufffd5\ufffd\ufffd0\f\u0018",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/tests/images/rgbgif",
        "start": {
          "col": 7,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\ufffd\ufffd\ufffd\ufffd\u0018.Exif\u0000\u0000II*\u0000\b\u0000\u0000\u0000\u0011\u0000\u0000\u0001\u0003\u0000\u0001\u0000\u0000\u0000`\u0015\u0000\u0000\u0001\u0001\u0003\u0000\u0001\u0000\u0000\u0000@\u000e\u0000\u0000\u0002\u0001\u0003\u0000\u0003\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0006\u0001\u0003\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u000e\u0001\u0002\u0000 \u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u000f\u0001\u0002\u0000\u0005\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0001\u0002\u0000\f\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0012\u0001\u0003\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0015\u0001\u0003\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u001a\u0001\u0005\u0000\u0001\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u001b\u0001\u0005\u0000\u0001\u0000\u0000\u0000\u0019\u0001\u0000\u0000(\u0001\u0003\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u00001\u0001\u0002\u0000 \u0000\u0000\u0000!\u0001\u0000\u00002\u0001\u0002\u0000\u0014\u0000\u0000\u0000A\u0001\u0000\u0000\u0013\u0002\u0003\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\ufffd\u0007\u0000\u001c\u0000\u0000\u0000U\u0001\u0000\u0000i\ufffd\u0004\u0000\u0001\u0000\u0000\u0000t\u0001\u0000\u0000<\u0004\u0000\u0000\b\u0000\b\u0000\b\u0000                               \u0000SONY\u0000DSC-RX100M2\u0000\ufffdg5\u0000\u0010'\u0000\u0000\ufffdg5\u0000\u0010'\u0000\u0000Adobe Photoshop CS6 (Macintosh)\u00002014:07:05 01:33:22\u0000PrintIM\u00000300\u0000\u0000\u0002\u0000\u0002\u0000\u0001\u0000\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000&\u0000\ufffd\ufffd\u0005\u0000\u0001\u0000\u0000\u0000B\u0003\u0000\u0000\ufffd\ufffd\u0005\u0000\u0001\u0000\u0000\u0000J\u0003\u0000\u0000\"\ufffd\u0003\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000'\ufffd\u0003\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u00000\ufffd\u0003\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u00002\ufffd\u0004\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\ufffd\u0007\u0000\u0004\u0000\u0000\u00000230\u0003\ufffd\u0002\u0000\u0014\u0000\u0000\u0000R\u0003\u0000\u0000\u0004\ufffd\u0002\u0000\u0014\u0000\u0000\u0000f\u0003\u0000\u0000\u0001\ufffd\u0007\u0000\u0004\u0000\u0000\u0000\u0001\u0002\u0003\u0000\u0002\ufffd\u0005\u0000\u0001\u0000\u0000\u0000z\u0003\u0000\u0000\u0001\ufffd",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/tests/images/rgbjpg",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\ufffdPNG\r",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/tests/images/rgbpng",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            9,
            9
          ],
          "match_position": [
            28,
            39
          ],
          "match_string": "        var r = Math.floor(Math.random() * 16);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            12,
            12
          ],
          "match_position": [
            37,
            48
          ],
          "match_string": "                var sd = Math.floor(Math.random() * 20);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            17,
            17
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var a = Math.floor(Math.random() * 360);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            22,
            22
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var w = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            23,
            23
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var h = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            28,
            28
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var w = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            29,
            29
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var h = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            34,
            34
          ],
          "match_position": [
            26,
            37
          ],
          "match_string": "                var wr = Math.random() * 1 + 0.1;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            26,
            37
          ],
          "match_string": "                var hr = Math.random() * 1 + 0.1;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            40,
            40
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var i = Math.floor(Math.random() * 3);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            46,
            46
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var b = Math.floor(Math.random() * 30);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            51,
            51
          ],
          "match_position": [
            38,
            49
          ],
          "match_string": "                var amp = Math.floor(Math.random() * 300);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            56,
            56
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "                var d = Math.random() * 2;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            61,
            61
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "                var d = Math.random() * 2;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            66,
            66
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "                var d = Math.random() * 0.5;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            71,
            71
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var s = Math.floor(Math.random() * 360);"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            76,
            76
          ],
          "match_position": [
            25,
            36
          ],
          "match_string": "                var d = Math.random() * 2 - 1;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            85,
            85
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var w = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            86,
            86
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var h = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            91,
            91
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var w = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            92,
            92
          ],
          "match_position": [
            36,
            47
          ],
          "match_string": "                var h = Math.floor(Math.random() * 1000) + 10;"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            103,
            103
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "        r: Math.floor(Math.random() * 256),"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            104,
            104
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "        g: Math.floor(Math.random() * 256),"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            105,
            105
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "        b: Math.floor(Math.random() * 256),"
        },
        {
          "file_path": "/src/tests/utils.js",
          "match_lines": [
            106,
            106
          ],
          "match_position": [
            23,
            34
          ],
          "match_string": "        a: Math.floor(Math.random() * 50) + 51"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
