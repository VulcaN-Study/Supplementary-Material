/src/src/lib/zlib/zlib.h-1358-   unpredictable consequences, which is possible only if zlib was compiled with
/src/src/lib/zlib/zlib.h:1359:   the insecure functions sprintf() or vsprintf() because the secure snprintf()
/src/src/lib/zlib/zlib.h-1360-   or vsnprintf() functions were not available.  This can be determined using
##############################################
/src/src/lib/cimg/CImg.h-2214-    // Evaluate math expression.
/src/src/lib/cimg/CImg.h:2215:    inline double eval(const char *const expression,
/src/src/lib/cimg/CImg.h-2216-                       const double x=0, const double y=0, const double z=0, const double c=0);
##############################################
/src/src/lib/cimg/CImg.h-17465-    **/
/src/src/lib/cimg/CImg.h:17466:    double eval(const char *const expression,
/src/src/lib/cimg/CImg.h-17467-                const double x=0, const double y=0, const double z=0, const double c=0) {
/src/src/lib/cimg/CImg.h:17468:      return _eval(this,expression,x,y,z,c);
/src/src/lib/cimg/CImg.h-17469-    }
##############################################
/src/src/lib/cimg/CImg.h-17471-    //! Evaluate math formula \const.
/src/src/lib/cimg/CImg.h:17472:    double eval(const char *const expression,
/src/src/lib/cimg/CImg.h-17473-                const double x=0, const double y=0, const double z=0, const double c=0) const {
/src/src/lib/cimg/CImg.h:17474:      return _eval(0,expression,x,y,z,c);
/src/src/lib/cimg/CImg.h-17475-    }
/src/src/lib/cimg/CImg.h-17476-
/src/src/lib/cimg/CImg.h:17477:    double _eval(CImg<T> *const output, const char *const expression,
/src/src/lib/cimg/CImg.h-17478-                 const double x=0, const double y=0, const double z=0, const double c=0) const {
##############################################
/src/src/lib/cimg/CImg.h-17497-    template<typename t>
/src/src/lib/cimg/CImg.h:17498:    CImg<doubleT> eval(const char *const expression, const CImg<t>& xyzc) {
/src/src/lib/cimg/CImg.h:17499:      return _eval(this,expression,xyzc);
/src/src/lib/cimg/CImg.h-17500-    }
##############################################
/src/src/lib/cimg/CImg.h-17503-    template<typename t>
/src/src/lib/cimg/CImg.h:17504:    CImg<doubleT> eval(const char *const expression, const CImg<t>& xyzc) const {
/src/src/lib/cimg/CImg.h:17505:      return _eval(0,expression,xyzc);
/src/src/lib/cimg/CImg.h-17506-    }
##############################################
/src/src/lib/cimg/CImg.h-17508-    template<typename t>
/src/src/lib/cimg/CImg.h:17509:    CImg<doubleT> _eval(CImg<T> *const output, const char *const expression, const CImg<t>& xyzc) const {
/src/src/lib/cimg/CImg.h-17510-      CImg<doubleT> res(1,xyzc.size()/4);
##############################################
/src/src/lib/cimg/CImg.h-41534-      minc::minc_1_reader rdr;
/src/src/lib/cimg/CImg.h:41535:      rdr.open(filename);
/src/src/lib/cimg/CImg.h-41536-      assign(rdr.ndim(1)?rdr.ndim(1):1,
##############################################
/src/src/lib/cimg/CImg.h-45381-     if (imitate_file)
/src/src/lib/cimg/CImg.h:45382:       wtr.open(filename, imitate_file);
/src/src/lib/cimg/CImg.h-45383-     else {
##############################################
/src/src/lib/cimg/CImg.h-45388-       if(spectrum()) di.push_back(minc::dim_info(spectrum(),spectrum()*0.5,-1,minc::dim_info::DIM_TIME));
/src/src/lib/cimg/CImg.h:45389:       wtr.open(filename,di,1,NC_FLOAT,0);
/src/src/lib/cimg/CImg.h-45390-     }
##############################################
/src/src/lib/cimg/CImg.h-52399-     const double
/src/src/lib/cimg/CImg.h:52400:     res1 = cimg::eval("cos(x)^2 + sin(y)^2",2,2),  // will return '1'.
/src/src/lib/cimg/CImg.h:52401:     res2 = cimg::eval(0,1,1);                    // will return '1' too.
/src/src/lib/cimg/CImg.h-52402-     \endcode
/src/src/lib/cimg/CImg.h-52403-  **/
/src/src/lib/cimg/CImg.h:52404:  inline double eval(const char *const expression, const double x, const double y, const double z, const double c) {
/src/src/lib/cimg/CImg.h-52405-    static const CImg<float> empty;
/src/src/lib/cimg/CImg.h:52406:    return empty.eval(expression,x,y,z,c);
/src/src/lib/cimg/CImg.h-52407-  }
##############################################
/src/src/lib/cimg/CImg.h-52409-  template<typename t>
/src/src/lib/cimg/CImg.h:52410:  inline CImg<typename cimg::superset<double,t>::type> eval(const char *const expression, const CImg<t>& xyzc) {
/src/src/lib/cimg/CImg.h-52411-    static const CImg<float> empty;
/src/src/lib/cimg/CImg.h:52412:    return empty.eval(expression,xyzc);
/src/src/lib/cimg/CImg.h-52413-  }
##############################################
/src/examples/rotate_scale_blur.js-7-
/src/examples/rotate_scale_blur.js:8:lwip.open('lena.png', function(err, image) {
/src/examples/rotate_scale_blur.js-9-    if (err) return console.log(err);
##############################################
/src/examples/rotate_scale_blur.js-13-        .blur(5)
/src/examples/rotate_scale_blur.js:14:        .writeFile('lena_rotate_scale_blur.jpg', function(err) {
/src/examples/rotate_scale_blur.js-15-            if (err) return console.log(err);
##############################################
/src/examples/fade.js-7-
/src/examples/fade.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/fade.js-9-    if (err) return console.log(err);
##############################################
/src/examples/fade.js-11-        .fade(0.5)
/src/examples/fade.js:12:        .writeFile('lena_fade.png', function(err) {
/src/examples/fade.js-13-            if (err) return console.log(err);
##############################################
/src/examples/rotate.js-7-
/src/examples/rotate.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/rotate.js-9-    if (err) return console.log(err);
##############################################
/src/examples/rotate.js-15-        })
/src/examples/rotate.js:16:        .writeFile('lena_rotate.gif', function(err) {
/src/examples/rotate.js-17-            if (err) return console.log(err);
##############################################
/src/examples/png_interlaced.js-7-
/src/examples/png_interlaced.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/png_interlaced.js-9-    if (err) return console.log(err);
/src/examples/png_interlaced.js:10:    image.writeFile('lena_interlaced.png', {
/src/examples/png_interlaced.js-11-        compression: 'high',
##############################################
/src/examples/blur.js-7-
/src/examples/blur.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/blur.js-9-    if (err) return console.log(err);
##############################################
/src/examples/blur.js-11-        .blur(10)
/src/examples/blur.js:12:        .writeFile('lena_blur.jpg', function(err) {
/src/examples/blur.js-13-            if (err) return console.log(err);
##############################################
/src/examples/paste_mosiac.js-8-
/src/examples/paste_mosiac.js:9:lwip.open('lena.jpg', function(err, image) {
/src/examples/paste_mosiac.js-10-    if (err) return console.log(err);
##############################################
/src/examples/paste_mosiac.js-58-                    if (err) return console.log(err);
/src/examples/paste_mosiac.js:59:                    canvas.writeFile('lena_paste_mosiac.jpg', function(err) {
/src/examples/paste_mosiac.js-60-                        if (err) return console.log(err);
##############################################
/src/examples/lighten.js-7-
/src/examples/lighten.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/lighten.js-9-    if (err) return console.log(err);
##############################################
/src/examples/lighten.js-11-        .lighten(0.5)
/src/examples/lighten.js:12:        .writeFile('lena_lighten.jpg', function(err) {
/src/examples/lighten.js-13-            if (err) return console.log(err);
##############################################
/src/examples/reduce_quality.js-7-
/src/examples/reduce_quality.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/reduce_quality.js-9-    if (err) return console.log(err);
/src/examples/reduce_quality.js:10:    image.writeFile('lena_low_quality.jpg', {
/src/examples/reduce_quality.js-11-        quality: 10
##############################################
/src/examples/saturate.js-7-
/src/examples/saturate.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/saturate.js-9-    if (err) return console.log(err);
##############################################
/src/examples/saturate.js-11-        .saturate(0.5)
/src/examples/saturate.js:12:        .writeFile('lena_saturate.jpg', function(err) {
/src/examples/saturate.js-13-            if (err) return console.log(err);
##############################################
/src/examples/contain.js-7-
/src/examples/contain.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/contain.js-9-    if (err) return console.log(err);
/src/examples/contain.js-10-    image.contain(400,700,'green',function(err, image){
/src/examples/contain.js:11:        image.writeFile('lena_contain.jpg', function(err){
/src/examples/contain.js-12-            if (err) return console.log(err);
##############################################
/src/examples/pad.js-7-
/src/examples/pad.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/pad.js-9-    if (err) return console.log(err);
##############################################
/src/examples/pad.js-11-        .pad(10, 5, 10, 5, 'blue')
/src/examples/pad.js:12:        .writeFile('lena_pad.jpg', function(err) {
/src/examples/pad.js-13-            if (err) return console.log(err);
##############################################
/src/examples/convert_png_gif.js-7-
/src/examples/convert_png_gif.js:8:lwip.open('lena.png', function(err, image) {
/src/examples/convert_png_gif.js-9-    if (err) return console.log(err);
/src/examples/convert_png_gif.js:10:    image.writeFile('lena_from_png.gif', function(err) {
/src/examples/convert_png_gif.js-11-        if (err) return console.log(err);
##############################################
/src/examples/convert_jpg_png.js-7-
/src/examples/convert_jpg_png.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/convert_jpg_png.js-9-    if (err) return console.log(err);
/src/examples/convert_jpg_png.js:10:    image.writeFile('lena_from_jpg.png', function(err) {
/src/examples/convert_jpg_png.js-11-        if (err) return console.log(err);
##############################################
/src/examples/cover.js-7-
/src/examples/cover.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/cover.js-9-    if (err) return console.log(err);
/src/examples/cover.js-10-    image.cover(400,800,function(err, image){
/src/examples/cover.js:11:        image.writeFile('lena_cover.jpg', function(err){
/src/examples/cover.js-12-            if (err) return console.log(err);
##############################################
/src/examples/hue.js-7-
/src/examples/hue.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/hue.js-9-    if (err) return console.log(err);
##############################################
/src/examples/hue.js-11-        .hue(50)
/src/examples/hue.js:12:        .writeFile('lena_hue.jpg', function(err) {
/src/examples/hue.js-13-            if (err) return console.log(err);
##############################################
/src/examples/gif_interlaced.js-7-
/src/examples/gif_interlaced.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/gif_interlaced.js-9-    if (err) return console.log(err);
/src/examples/gif_interlaced.js:10:    image.writeFile('lena_interlaced.gif', {
/src/examples/gif_interlaced.js-11-        colors: 222,
##############################################
/src/examples/convert_gif_png.js-7-
/src/examples/convert_gif_png.js:8:lwip.open('lena.gif', function(err, image) {
/src/examples/convert_gif_png.js-9-    if (err) return console.log(err);
/src/examples/convert_gif_png.js:10:    image.writeFile('lena_from_gif.png', function(err) {
/src/examples/convert_gif_png.js-11-        if (err) return console.log(err);
##############################################
/src/examples/extract.js-7-
/src/examples/extract.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/extract.js-9-    if (err) return console.log(err);
##############################################
/src/examples/extract.js-11-    image.extract(230, 230, 370, 300, function(err, eyes) {
/src/examples/extract.js:12:        eyes.writeFile('lena_eyes.jpg', function(err) {
/src/examples/extract.js-13-            if (err) return console.log("eyes:", err);
##############################################
/src/examples/extract.js-17-        eyes.extract(0, 0, 70, 71, function(err, left_eye) {
/src/examples/extract.js:18:            left_eye.writeFile('lena_eyes_left.jpg', function(err) {
/src/examples/extract.js-19-                if (err) return console.log("eyes left:", err);
##############################################
/src/examples/extract.js-24-        eyes.extract(71, 0, 141, 71, function(err, right_eye) {
/src/examples/extract.js:25:            right_eye.writeFile('lena_eyes_right.jpg', function(err) {
/src/examples/extract.js-26-                if (err) return console.log("eyes right:", err);
##############################################
/src/examples/extract.js-32-    image.extract(240, 320, 350, 380, function(err, eyes) {
/src/examples/extract.js:33:        eyes.writeFile('lena_mouth.jpg', function(err) {
/src/examples/extract.js-34-            if (err) return console.log("mouth:", err);
##############################################
/src/examples/sharpen.js-7-
/src/examples/sharpen.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/sharpen.js-9-    if (err) return console.log(err);
##############################################
/src/examples/sharpen.js-11-        .sharpen(200)
/src/examples/sharpen.js:12:        .writeFile('lena_sharpen.jpg', function(err) {
/src/examples/sharpen.js-13-            if (err) return console.log(err);
##############################################
/src/examples/paste_blend.js-11-    function(next) {
/src/examples/paste_blend.js:12:        lwip.open('lena.jpg', next);
/src/examples/paste_blend.js-13-    },
##############################################
/src/examples/paste_blend.js-34-    function(image, next) {
/src/examples/paste_blend.js:35:        image.writeFile('lena_paste_blend.jpg', next);
/src/examples/paste_blend.js-36-    }
##############################################
/src/examples/open_pixelbuffer.js-42-
/src/examples/open_pixelbuffer.js:43:lwip.open(buffer, { width: w, height: h }, function(err, image) {
/src/examples/open_pixelbuffer.js-44-    if (err) return console.log("err open", err);
##############################################
/src/examples/open_pixelbuffer.js-46-    	.blur(9)
/src/examples/open_pixelbuffer.js:47:    	.writeFile('image_from_pixelbuffer.png', function(err){
/src/examples/open_pixelbuffer.js-48-    		if (err) return console.log("err write", err);
##############################################
/src/examples/border.js-7-
/src/examples/border.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/border.js-9-    if (err) return console.log(err);
##############################################
/src/examples/border.js-11-        .border(10, 'green')
/src/examples/border.js:12:        .writeFile('lena_border.jpg', function(err) {
/src/examples/border.js-13-            if (err) return console.log(err);
##############################################
/src/examples/mirror.js-7-
/src/examples/mirror.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/mirror.js-9-    if (err) return console.log(err);
##############################################
/src/examples/mirror.js-11-        .mirror('x')
/src/examples/mirror.js:12:        .writeFile('lena_mirror.jpg', function(err) {
/src/examples/mirror.js-13-            if (err) return console.log(err);
##############################################
/src/examples/convert_png_jpg.js-7-
/src/examples/convert_png_jpg.js:8:lwip.open('lena.png', function(err, image) {
/src/examples/convert_png_jpg.js-9-    if (err) return console.log(err);
/src/examples/convert_png_jpg.js:10:    image.writeFile('lena_from_png.jpg', function(err) {
/src/examples/convert_png_jpg.js-11-        if (err) return console.log(err);
##############################################
/src/examples/clone.js-10-
/src/examples/clone.js:11:lwip.open('lena.jpg', function(err, image) {
/src/examples/clone.js-12-    if (err) return console.log(err);
##############################################
/src/examples/clone.js-24-                    .hue(100)
/src/examples/clone.js:25:                    .writeFile('lena_clone1.png', function(err) {
/src/examples/clone.js-26-                        if (err) return console.log(err);
##############################################
/src/examples/clone.js-35-                    .mirror('x')
/src/examples/clone.js:36:                    .writeFile('lena_clone2.png', function(err) {
/src/examples/clone.js-37-                        if (err) return console.log(err);
##############################################
/src/examples/set_pixel.js-35-
/src/examples/set_pixel.js:36:    batch.writeFile(output, function(err){
/src/examples/set_pixel.js-37-        if (err) console.log(err);
##############################################
/src/examples/crop.js-7-
/src/examples/crop.js:8:lwip.open('lena.jpg', function(err, image) {
/src/examples/crop.js-9-    if (err) return console.log(err);
##############################################
/src/examples/crop.js-11-        .crop(400, 400)
/src/examples/crop.js:12:        .writeFile('lena_crop.jpg', function(err) {
/src/examples/crop.js-13-            if (err) return console.log(err);
##############################################
/src/README.md-91-// obtain an image object:
/src/README.md:92:require('lwip').open('image.jpg', function(err, image){
/src/README.md-93-
##############################################
/src/README.md-100-    .blur(5)              // Gaussian blur with SD=5
/src/README.md:101:    .writeFile('output.jpg', function(err){
/src/README.md-102-      // check err...
##############################################
/src/README.md-114-// obtain an image object:
/src/README.md:115:lwip.open('image.jpg', function(err, image){
/src/README.md-116-
##############################################
/src/README.md-209-
/src/README.md:210:`lwip.open(source, type, callback)`
/src/README.md-211-
##############################################
/src/README.md-237-var lwip = require('lwip');
/src/README.md:238:lwip.open('path/to/image.jpg', function(err, image){
/src/README.md-239-    // check 'err'. use 'image'.
##############################################
/src/README.md-249-
/src/README.md:250:fs.readFile('path/to/image.png', function(err, buffer){
/src/README.md-251-  // check err
/src/README.md:252:  lwip.open(buffer, 'png', function(err, image){
/src/README.md-253-      // check 'err'. use 'image'.
##############################################
/src/README.md-691-
/src/README.md:692:`image.writeFile(path, format, params, callback)`
/src/README.md-693-
##############################################
/src/README.md-779-
/src/README.md:780:`batch.writeFile(path, format, params, callback)`
/src/README.md-781-
/src/README.md:782:See parameters of [`image.writeFile()`](#write-to-file).
/src/README.md-783-
##############################################
/src/tests/01.getters/index.js-10-before(function(done) {
/src/tests/01.getters/index.js:11:    lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/01.getters/index.js-12-        image = img;
##############################################
/src/tests/01.getters/index.js-93-    it('should return correct metadata', function(done) {
/src/tests/01.getters/index.js:94:        lwip.open(imgs.png.hasMetadata, function(err, img) {
/src/tests/01.getters/index.js-95-            assert(img.getMetadata() === "Lorem ipsum dolor sit amet");
##############################################
/src/tests/01.getters/index.js-100-    it('should return null if no metadata found', function(done) {
/src/tests/01.getters/index.js:101:        lwip.open(imgs.png.noMetadata, function(err, img) {
/src/tests/01.getters/index.js-102-            assert(img.getMetadata() === null);
##############################################
/src/tests/00.argsValidation/208.batch.border.js-10-    before(function(done) {
/src/tests/00.argsValidation/208.batch.border.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/208.batch.border.js-12-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/205.batch.writeFile.js-10-    before(function(done) {
/src/tests/00.argsValidation/205.batch.writeFile.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/205.batch.writeFile.js-12-            batch = img.batch().blur(2);
##############################################
/src/tests/00.argsValidation/107.image.pad.js-10-    before(function(done) {
/src/tests/00.argsValidation/107.image.pad.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/107.image.pad.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/108.image.border.js-10-    before(function(done) {
/src/tests/00.argsValidation/108.image.border.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/108.image.border.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/202.batch.scale.js-10-    before(function(done) {
/src/tests/00.argsValidation/202.batch.scale.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/202.batch.scale.js-12-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/110.image.getPixel.js-10-    before(function(done) {
/src/tests/00.argsValidation/110.image.getPixel.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/110.image.getPixel.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/206.batch.mirror.js-10-    before(function(done) {
/src/tests/00.argsValidation/206.batch.mirror.js:11:        lwip.open(imgs.gif.trans, function(err, img) {
/src/tests/00.argsValidation/206.batch.mirror.js-12-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/110.image.setPixel.js-10-    before(function(done) {
/src/tests/00.argsValidation/110.image.setPixel.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/110.image.setPixel.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/001.open.js-53-        before(function(done) {
/src/tests/00.argsValidation/001.open.js:54:            fs.readFile(imgs.jpg.rgb, function(err, buff) {
/src/tests/00.argsValidation/001.open.js-55-                buffer = buff;
##############################################
/src/tests/00.argsValidation/207.batch.pad.js-10-    before(function(done) {
/src/tests/00.argsValidation/207.batch.pad.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/207.batch.pad.js-12-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/209.batch.paste.js-11-    beforeEach(function(done) {
/src/tests/00.argsValidation/209.batch.paste.js:12:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/209.batch.paste.js-13-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/209.batch.paste.js-71-        beforeEach(function(done) {
/src/tests/00.argsValidation/209.batch.paste.js:72:            lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/00.argsValidation/209.batch.paste.js-73-                pst = img;
##############################################
/src/tests/00.argsValidation/201.batch.resize.js-10-    before(function(done) {
/src/tests/00.argsValidation/201.batch.resize.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/201.batch.resize.js-12-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/104.image.toBuffer.js-10-    beforeEach(function(done) {
/src/tests/00.argsValidation/104.image.toBuffer.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/104.image.toBuffer.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/210.batch.setPixel.js-11-    beforeEach(function(done) {
/src/tests/00.argsValidation/210.batch.setPixel.js:12:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/210.batch.setPixel.js-13-            batch = img.batch();
##############################################
/src/tests/00.argsValidation/102.image.scale.js-10-    before(function(done) {
/src/tests/00.argsValidation/102.image.scale.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/102.image.scale.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/105.image.writeFile.js-10-    before(function(done) {
/src/tests/00.argsValidation/105.image.writeFile.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/105.image.writeFile.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/204.batch.toBuffer.js-10-    beforeEach(function(done) {
/src/tests/00.argsValidation/204.batch.toBuffer.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/204.batch.toBuffer.js-12-            batch = img.batch().blur(2);
##############################################
/src/tests/00.argsValidation/101.image.resize.js-10-    before(function(done) {
/src/tests/00.argsValidation/101.image.resize.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/101.image.resize.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/109.image.paste.js-11-    before(function(done) {
/src/tests/00.argsValidation/109.image.paste.js:12:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/109.image.paste.js-13-            image = img;
##############################################
/src/tests/00.argsValidation/103.image.rotate.js-10-    before(function(done) {
/src/tests/00.argsValidation/103.image.rotate.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/103.image.rotate.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/106.image.mirror.js-10-    before(function(done) {
/src/tests/00.argsValidation/106.image.mirror.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/00.argsValidation/106.image.mirror.js-12-            image = img;
##############################################
/src/tests/00.argsValidation/203.batch.rotate.js-10-    before(function(done) {
/src/tests/00.argsValidation/203.batch.rotate.js:11:        lwip.open(imgs.gif.rgb, function(err, img) {
/src/tests/00.argsValidation/203.batch.rotate.js-12-            batch = img.batch();
##############################################
/src/tests/05.stress/index.js-25-            async.times(300, function(i, done) {
/src/tests/05.stress/index.js:26:                lwip.open(imgs.png.rgb, 'png', function(err, image) {
/src/tests/05.stress/index.js-27-                    if (err) return done(err);
/src/tests/05.stress/index.js:28:                    image.writeFile(outpathJpeg, 'jpeg', {
/src/tests/05.stress/index.js-29-                        quality: 50
##############################################
/src/tests/05.stress/index.js-38-            async.times(100, function(i, done) {
/src/tests/05.stress/index.js:39:                lwip.open(imgs.jpg.rgb, 'jpeg', function(err, image) {
/src/tests/05.stress/index.js-40-                    if (err) return done(err);
/src/tests/05.stress/index.js:41:                    image.writeFile(outpathPng, 'png', {
/src/tests/05.stress/index.js-42-                        compression: 'high',
##############################################
/src/tests/05.stress/index.js-52-            async.times(300, function(i, done) {
/src/tests/05.stress/index.js:53:                lwip.open(imgs.gif.rgb, 'gif', function(err, image) {
/src/tests/05.stress/index.js-54-                    if (err) return done(err);
/src/tests/05.stress/index.js:55:                    image.writeFile(outpathPng, 'png', {
/src/tests/05.stress/index.js-56-                        compression: 'fast',
##############################################
/src/tests/05.stress/index.js-66-            async.times(300, function(i, done) {
/src/tests/05.stress/index.js:67:                lwip.open(imgs.png.trans, 'png', function(err, image) {
/src/tests/05.stress/index.js-68-                    if (err) return done(err);
/src/tests/05.stress/index.js:69:                    image.writeFile(outpathGif, 'gif', {
/src/tests/05.stress/index.js-70-                        colors: 128,
##############################################
/src/tests/05.stress/index.js-81-            async.times(50, function(i, done) {
/src/tests/05.stress/index.js:82:                lwip.open(imgs.jpg.rgb, 'jpeg', function(err, image) {
/src/tests/05.stress/index.js-83-                    if (err) return done(err);
##############################################
/src/tests/05.stress/index.js-85-                    var ops = utils.generateRandomBatch(batch, 7);
/src/tests/05.stress/index.js:86:                    batch.writeFile(join(tmpDir, 'stress-rnd-' + i + '.jpg'), 'jpeg', {
/src/tests/05.stress/index.js-87-                        quality: 50
##############################################
/src/tests/05.stress/index.js-90-                        var data = ops.join('\n');
/src/tests/05.stress/index.js:91:                        fs.writeFile(join(tmpDir, 'stress-rnd-' + i + '.txt'), data, done);
/src/tests/05.stress/index.js-92-                    });
##############################################
/src/tests/05.stress/index.js-100-            var a = 3;
/src/tests/05.stress/index.js:101:            lwip.open(imgs.jpg.rgb, 'jpeg', function(err, image) {
/src/tests/05.stress/index.js-102-                if (err) return done(err);
##############################################
/src/tests/05.stress/index.js-106-                    if (err) return done(err);
/src/tests/05.stress/index.js:107:                    image.writeFile(outpathJpeg, 'jpeg', {
/src/tests/05.stress/index.js-108-                        quality: 90
##############################################
/src/tests/05.stress/index.js-117-            var a = 3;
/src/tests/05.stress/index.js:118:            lwip.open(imgs.png.trans, 'png', function(err, image) {
/src/tests/05.stress/index.js-119-                if (err) return done(err);
##############################################
/src/tests/05.stress/index.js-123-                    if (err) return done(err);
/src/tests/05.stress/index.js:124:                    image.writeFile(outpathPng, 'png', {
/src/tests/05.stress/index.js-125-                        compression: 'fast',
##############################################
/src/tests/05.stress/index.js-134-        it('should succeed', function(done) {
/src/tests/05.stress/index.js:135:            lwip.open(imgs.png.rgb, 'png', function(err, image) {
/src/tests/05.stress/index.js-136-                if (err) return done(err);
##############################################
/src/tests/05.stress/index.js-138-                var ops = utils.generateRandomBatch(batch, 25);
/src/tests/05.stress/index.js:139:                batch.writeFile(join(tmpDir, 'stress-25rnd.jpg'), 'jpeg', {
/src/tests/05.stress/index.js-140-                    quality: 85
##############################################
/src/tests/05.stress/index.js-143-                    var data = ops.join('\n');
/src/tests/05.stress/index.js:144:                    fs.writeFile(join(tmpDir, 'stress-25rnd.jpg.txt'), data, done);
/src/tests/05.stress/index.js-145-                });
##############################################
/src/tests/05.stress/index.js-151-        it('should succeed', function(done) {
/src/tests/05.stress/index.js:152:            lwip.open(imgs.png.trans, 'png', function(err, image) {
/src/tests/05.stress/index.js-153-                if (err) return done(err);
##############################################
/src/tests/05.stress/index.js-155-                var ops = utils.generateRandomBatch(batch, 25);
/src/tests/05.stress/index.js:156:                batch.writeFile(join(tmpDir, 'stress-25rnd.png'), 'png', {
/src/tests/05.stress/index.js-157-                    compression: 'fast',
##############################################
/src/tests/05.stress/index.js-161-                    var data = ops.join('\n');
/src/tests/05.stress/index.js:162:                    fs.writeFile(join(tmpDir, 'stress-25rnd.png.txt'), data, done);
/src/tests/05.stress/index.js-163-                });
##############################################
/src/tests/03.safety/01.releases.js-10-    beforeEach(function(done) {
/src/tests/03.safety/01.releases.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/03.safety/01.releases.js-12-            image = img;
##############################################
/src/tests/03.safety/00.locks.js-10-    beforeEach(function(done) {
/src/tests/03.safety/00.locks.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/03.safety/00.locks.js-12-            image = img;
##############################################
/src/tests/03.safety/03.extract.js-10-    beforeEach(function(done) {
/src/tests/03.safety/03.extract.js:11:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/03.safety/03.extract.js-12-            image = img;
##############################################
/src/tests/03.safety/03.extract.js-24-                if (err) return done(err);
/src/tests/03.safety/03.extract.js:25:                extimg.writeFile(join(tmpDir, 'extract_behaviour_SHOULD_HAVE_ORIGINAL_HUE.jpg'), done);
/src/tests/03.safety/03.extract.js-26-            });
##############################################
/src/tests/03.safety/02.clone.js-9-    beforeEach(function(done) {
/src/tests/03.safety/02.clone.js:10:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/03.safety/02.clone.js-11-            image = img;
##############################################
/src/tests/04.batch/index.js-13-    beforeEach(function(done) {
/src/tests/04.batch/index.js:14:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/04.batch/index.js-15-            if (err) return done(err);
##############################################
/src/tests/04.batch/index.js-208-                it('should succeed', function(done) {
/src/tests/04.batch/index.js:209:                    batch.writeFile(join(tmpDir, 'btch-q0-' + ops.join('#') + '.jpg'), 'jpg', {
/src/tests/04.batch/index.js-210-                        quality: 0
##############################################
/src/tests/04.batch/index.js-216-                it('should succeed', function(done) {
/src/tests/04.batch/index.js:217:                    batch.writeFile(join(tmpDir, 'btch-q100-' + ops.join('#') + '.jpg'), 'jpg', {
/src/tests/04.batch/index.js-218-                        quality: 100
##############################################
/src/tests/04.batch/index.js-230-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:231:                        batch.writeFile(join(tmpDir, 'btch--noint#nocomp--' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-232-                            interlaced: false,
##############################################
/src/tests/04.batch/index.js-239-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:240:                        batch.writeFile(join(tmpDir, 'btch--noint#fstcomp--' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-241-                            interlaced: false,
##############################################
/src/tests/04.batch/index.js-248-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:249:                        batch.writeFile(join(tmpDir, 'btch-noint#hicomp-' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-250-                            interlaced: false,
##############################################
/src/tests/04.batch/index.js-261-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:262:                        batch.writeFile(join(tmpDir, 'btch-intr#nocomp-' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-263-                            interlaced: true,
##############################################
/src/tests/04.batch/index.js-270-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:271:                        batch.writeFile(join(tmpDir, 'btch-intr#fstcomp-' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-272-                            interlaced: true,
##############################################
/src/tests/04.batch/index.js-279-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:280:                        batch.writeFile(join(tmpDir, 'btch-intr#hicomp-' + ops.join('#') + '.png'), 'png', {
/src/tests/04.batch/index.js-281-                            interlaced: true,
##############################################
/src/tests/04.batch/index.js-296-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:297:                        batch.writeFile(join(tmpDir, 'btch--noint#notrn--' + ops.join('#') + '.gif'), 'gif', {
/src/tests/04.batch/index.js-298-                            interlaced: false,
##############################################
/src/tests/04.batch/index.js-305-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:306:                        batch.writeFile(join(tmpDir, 'btch--noint#trn--' + ops.join('#') + '.gif'), 'gif', {
/src/tests/04.batch/index.js-307-                            interlaced: false,
##############################################
/src/tests/04.batch/index.js-318-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:319:                        batch.writeFile(join(tmpDir, 'btch--noint#notrn--' + ops.join('#') + '.gif'), 'gif', {
/src/tests/04.batch/index.js-320-                            interlaced: true,
##############################################
/src/tests/04.batch/index.js-327-                    it('should succeed', function(done) {
/src/tests/04.batch/index.js:328:                        batch.writeFile(join(tmpDir, 'btch--noint#trn--' + ops.join('#') + '.gif'), 'gif', {
/src/tests/04.batch/index.js-329-                            interlaced: true,
##############################################
/src/tests/02.operations/113.darken.js-19-    beforeEach(function(done) {
/src/tests/02.operations/113.darken.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/113.darken.js-21-            image = img;
##############################################
/src/tests/02.operations/113.darken.js-30-    afterEach(function(done) {
/src/tests/02.operations/113.darken.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/113.darken.js-32-            quality: 100
##############################################
/src/tests/02.operations/115.hslaAdjust.js-19-    beforeEach(function(done) {
/src/tests/02.operations/115.hslaAdjust.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/115.hslaAdjust.js-21-            image = img;
##############################################
/src/tests/02.operations/115.hslaAdjust.js-30-    afterEach(function(done) {
/src/tests/02.operations/115.hslaAdjust.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.png'), 'png', done);
/src/tests/02.operations/115.hslaAdjust.js-32-    });
##############################################
/src/tests/02.operations/121.setMetadata.js-23-                img.setMetadata(metadata);
/src/tests/02.operations/121.setMetadata.js:24:                img.writeFile(join(tmpDir, filename), function(err) {
/src/tests/02.operations/121.setMetadata.js:25:                    lwip.open(join(tmpDir, filename), function(err, imgWithMetadata) {
/src/tests/02.operations/121.setMetadata.js-26-                        if (err) return done(err);
##############################################
/src/tests/02.operations/121.setMetadata.js-39-
/src/tests/02.operations/121.setMetadata.js:40:                img.writeFile(join(tmpDir, filename), function(err) {
/src/tests/02.operations/121.setMetadata.js:41:                    lwip.open(join(tmpDir, filename), function(err, imgNoMetadata) {
/src/tests/02.operations/121.setMetadata.js-42-                        if (err) return done(err);
##############################################
/src/tests/02.operations/121.setMetadata.js-62-        it('should remove metadata if called with null parameter', function(done) {
/src/tests/02.operations/121.setMetadata.js:63:            lwip.open(imgs.png.hasMetadata, function(err, img) {
/src/tests/02.operations/121.setMetadata.js-64-                var filename = 'noMetadata.png';
##############################################
/src/tests/02.operations/121.setMetadata.js-69-
/src/tests/02.operations/121.setMetadata.js:70:                img.writeFile(join(tmpDir, filename), function(err) {
/src/tests/02.operations/121.setMetadata.js:71:                    lwip.open(join(tmpDir, filename), function(err, imgWithMetadata) {
/src/tests/02.operations/121.setMetadata.js-72-                        if (err) return done(err);
##############################################
/src/tests/02.operations/121.setMetadata.js-80-        it('can reset metadata on image with existing metadata', function(done) {
/src/tests/02.operations/121.setMetadata.js:81:            lwip.open(imgs.png.hasMetadata, function(err, img) {
/src/tests/02.operations/121.setMetadata.js-82-                var filename = 'changedMetadata.png';
##############################################
/src/tests/02.operations/121.setMetadata.js-88-
/src/tests/02.operations/121.setMetadata.js:89:                img.writeFile(join(tmpDir, filename), function(err) {
/src/tests/02.operations/121.setMetadata.js:90:                    lwip.open(join(tmpDir, filename), function(err, imgWithMetadata) {
/src/tests/02.operations/121.setMetadata.js-91-                        if (err) return done(err);
##############################################
/src/tests/02.operations/107.mirror.js-19-    beforeEach(function(done) {
/src/tests/02.operations/107.mirror.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/107.mirror.js-21-            image = img;
##############################################
/src/tests/02.operations/107.mirror.js-26-    afterEach(function(done) {
/src/tests/02.operations/107.mirror.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.gif'), 'gif', {
/src/tests/02.operations/107.mirror.js-28-            colors: 256
##############################################
/src/tests/02.operations/112.lighten.js-19-    beforeEach(function(done) {
/src/tests/02.operations/112.lighten.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/112.lighten.js-21-            image = img;
##############################################
/src/tests/02.operations/112.lighten.js-30-    afterEach(function(done) {
/src/tests/02.operations/112.lighten.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.png'), 'png', {
/src/tests/02.operations/112.lighten.js-32-            compression: 'fast',
##############################################
/src/tests/02.operations/102.resize.js-19-    beforeEach(function(done) {
/src/tests/02.operations/102.resize.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/102.resize.js-21-            image = img;
##############################################
/src/tests/02.operations/102.resize.js-26-    afterEach(function(done) {
/src/tests/02.operations/102.resize.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/102.resize.js-28-            quality: 100
##############################################
/src/tests/02.operations/106.blur.js-19-    beforeEach(function(done) {
/src/tests/02.operations/106.blur.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/106.blur.js-21-            image = img;
##############################################
/src/tests/02.operations/106.blur.js-30-    afterEach(function(done) {
/src/tests/02.operations/106.blur.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/106.blur.js-32-            quality: 100
##############################################
/src/tests/02.operations/116.opacify.js-17-    beforeEach(function(done) {
/src/tests/02.operations/116.opacify.js:18:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/116.opacify.js-19-            image = img;
##############################################
/src/tests/02.operations/116.opacify.js-24-    afterEach(function(done) {
/src/tests/02.operations/116.opacify.js:25:        image.writeFile(join(tmpDir, 'opacify.png'), 'png', {
/src/tests/02.operations/116.opacify.js-26-            compression: 'fast',
##############################################
/src/tests/02.operations/117.paste.js-20-    beforeEach(function(done) {
/src/tests/02.operations/117.paste.js:21:        lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/02.operations/117.paste.js-22-            if (err) return done(err);
##############################################
/src/tests/02.operations/117.paste.js-39-    afterEach(function(done) {
/src/tests/02.operations/117.paste.js:40:        back.writeFile(join(tmpDir, current.join('_') + '.png'), done);
/src/tests/02.operations/117.paste.js-41-    });
##############################################
/src/tests/02.operations/116.fade.js-19-    beforeEach(function(done) {
/src/tests/02.operations/116.fade.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/116.fade.js-21-            image = img;
##############################################
/src/tests/02.operations/116.fade.js-30-    afterEach(function(done) {
/src/tests/02.operations/116.fade.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.png'), 'png', {
/src/tests/02.operations/116.fade.js-32-            compression: 'fast',
##############################################
/src/tests/02.operations/002.create.js-22-                assert(img.height() === height);
/src/tests/02.operations/002.create.js:23:                img.writeFile(join(tmpDir, 'create500X500[255,0,0,50].png'), done);
/src/tests/02.operations/002.create.js-24-            });
##############################################
/src/tests/02.operations/002.create.js-36-                assert(img.height() === height);
/src/tests/02.operations/002.create.js:37:                img.writeFile(join(tmpDir, 'create500X500[0,255,0].png'), done);
/src/tests/02.operations/002.create.js-38-            });
##############################################
/src/tests/02.operations/002.create.js-49-                assert(img.height() === height);
/src/tests/02.operations/002.create.js:50:                img.writeFile(join(tmpDir, 'create500X500nocolor.png'), done);
/src/tests/02.operations/002.create.js-51-            });
##############################################
/src/tests/02.operations/001.open.js-8-        it('should fail', function(done) {
/src/tests/02.operations/001.open.js:9:            lwip.open(imgs.inv, 'jpg', function(err, img) {
/src/tests/02.operations/001.open.js-10-                should(err).be.Error();
##############################################
/src/tests/02.operations/001.open.js-19-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:20:                lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/001.open.js-21-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-29-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:30:                lwip.open(imgs.jpg.noex, 'jpg', function(err, img) {
/src/tests/02.operations/001.open.js-31-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-39-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:40:                lwip.open(imgs.jpg.gs, function(err, img) {
/src/tests/02.operations/001.open.js-41-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-49-            it('should fail', function(done) {
/src/tests/02.operations/001.open.js:50:                lwip.open(imgs.jpg.inv, function(err, img) {
/src/tests/02.operations/001.open.js-51-                    should(err).be.Error();
##############################################
/src/tests/02.operations/001.open.js-62-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:63:                lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/02.operations/001.open.js-64-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-72-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:73:                lwip.open(imgs.png.noex, 'png', function(err, img) {
/src/tests/02.operations/001.open.js-74-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-82-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:83:                lwip.open(imgs.png.gs, function(err, img) {
/src/tests/02.operations/001.open.js-84-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-92-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:93:                lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/001.open.js-94-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-102-            it('should fail', function(done) {
/src/tests/02.operations/001.open.js:103:                lwip.open(imgs.png.inv, function(err, img) {
/src/tests/02.operations/001.open.js-104-                    should(err).be.Error();
##############################################
/src/tests/02.operations/001.open.js-115-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:116:                lwip.open(imgs.gif.rgb, function(err, img) {
/src/tests/02.operations/001.open.js-117-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-125-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:126:                lwip.open(imgs.gif.noex, 'gif', function(err, img) {
/src/tests/02.operations/001.open.js-127-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-135-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:136:                lwip.open(imgs.gif.gs, function(err, img) {
/src/tests/02.operations/001.open.js-137-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-145-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:146:                lwip.open(imgs.gif.trans, function(err, img) {
/src/tests/02.operations/001.open.js-147-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-155-            it('should fail', function(done) {
/src/tests/02.operations/001.open.js:156:                lwip.open(imgs.gif.inv, function(err, img) {
/src/tests/02.operations/001.open.js-157-                    should(err).be.Error();
##############################################
/src/tests/02.operations/001.open.js-169-            before(function(done) {
/src/tests/02.operations/001.open.js:170:                fs.readFile(imgs.jpg.rgb, function(err, imbuf) {
/src/tests/02.operations/001.open.js-171-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-176-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:177:                lwip.open(buffer, 'jpg', function(err, img) {
/src/tests/02.operations/001.open.js-178-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-187-            before(function(done) {
/src/tests/02.operations/001.open.js:188:                fs.readFile(imgs.jpg.gs, function(err, imbuf) {
/src/tests/02.operations/001.open.js-189-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-194-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:195:                lwip.open(buffer, 'jpg', function(err, img) {
/src/tests/02.operations/001.open.js-196-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-209-            before(function(done) {
/src/tests/02.operations/001.open.js:210:                fs.readFile(imgs.png.rgb, function(err, imbuf) {
/src/tests/02.operations/001.open.js-211-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-216-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:217:                lwip.open(buffer, 'png', function(err, img) {
/src/tests/02.operations/001.open.js-218-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-227-            before(function(done) {
/src/tests/02.operations/001.open.js:228:                fs.readFile(imgs.png.gs, function(err, imbuf) {
/src/tests/02.operations/001.open.js-229-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-234-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:235:                lwip.open(buffer, 'png', function(err, img) {
/src/tests/02.operations/001.open.js-236-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-249-            before(function(done) {
/src/tests/02.operations/001.open.js:250:                fs.readFile(imgs.gif.rgb, function(err, imbuf) {
/src/tests/02.operations/001.open.js-251-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-256-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:257:                lwip.open(buffer, 'gif', function(err, img) {
/src/tests/02.operations/001.open.js-258-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-267-            before(function(done) {
/src/tests/02.operations/001.open.js:268:                fs.readFile(imgs.gif.gs, function(err, imbuf) {
/src/tests/02.operations/001.open.js-269-                    buffer = imbuf;
##############################################
/src/tests/02.operations/001.open.js-274-            it('should succeed', function(done) {
/src/tests/02.operations/001.open.js:275:                lwip.open(buffer, 'gif', function(err, img) {
/src/tests/02.operations/001.open.js-276-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-295-            it('should construct an all-black pixels image', function(done) {
/src/tests/02.operations/001.open.js:296:                lwip.open(buffer, { width: 100, height: 100 }, function(err, img) {
/src/tests/02.operations/001.open.js-297-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-318-            it('should construct an all-black transparent pixels image', function(done) {
/src/tests/02.operations/001.open.js:319:                lwip.open(buffer, { width: 100, height: 100 }, function(err, img) {
/src/tests/02.operations/001.open.js-320-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-342-            it('should construct an all-black pixels image', function(done) {
/src/tests/02.operations/001.open.js:343:                lwip.open(buffer, { width: 100, height: 100 }, function(err, img) {
/src/tests/02.operations/001.open.js-344-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/001.open.js-367-            it('should construct an all-black transparent pixels image', function(done) {
/src/tests/02.operations/001.open.js:368:                lwip.open(buffer, { width: 100, height: 100 }, function(err, img) {
/src/tests/02.operations/001.open.js-369-                    should(err).not.be.Error();
##############################################
/src/tests/02.operations/118.setPixel.js-19-    beforeEach(function(done) {
/src/tests/02.operations/118.setPixel.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/118.setPixel.js-21-            image = img;
##############################################
/src/tests/02.operations/118.setPixel.js-26-    afterEach(function(done) {
/src/tests/02.operations/118.setPixel.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/118.setPixel.js-28-            quality: 100
##############################################
/src/tests/02.operations/111.saturate.js-19-    beforeEach(function(done) {
/src/tests/02.operations/111.saturate.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/111.saturate.js-21-            image = img;
##############################################
/src/tests/02.operations/111.saturate.js-30-    afterEach(function(done) {
/src/tests/02.operations/111.saturate.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/111.saturate.js-32-            quality: 100
##############################################
/src/tests/02.operations/103.scale.js-19-    beforeEach(function(done) {
/src/tests/02.operations/103.scale.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/103.scale.js-21-            image = img;
##############################################
/src/tests/02.operations/103.scale.js-26-    afterEach(function(done) {
/src/tests/02.operations/103.scale.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.png'), 'png', {
/src/tests/02.operations/103.scale.js-28-            compression: 'high',
##############################################
/src/tests/02.operations/120.cover.js-19-    beforeEach(function(done) {
/src/tests/02.operations/120.cover.js:20:        lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/02.operations/120.cover.js-21-            image = img;
##############################################
/src/tests/02.operations/120.cover.js-26-    afterEach(function(done) {
/src/tests/02.operations/120.cover.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpg', {
/src/tests/02.operations/120.cover.js-28-            quality: 90
##############################################
/src/tests/02.operations/119.contain.js-19-    beforeEach(function(done) {
/src/tests/02.operations/119.contain.js:20:        lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/02.operations/119.contain.js-21-            image = img;
##############################################
/src/tests/02.operations/119.contain.js-26-    afterEach(function(done) {
/src/tests/02.operations/119.contain.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.gif'), 'gif', {
/src/tests/02.operations/119.contain.js-28-            colors: 256,
##############################################
/src/tests/02.operations/109.border.js-23-    beforeEach(function(done) {
/src/tests/02.operations/109.border.js:24:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/109.border.js-25-            image = img;
##############################################
/src/tests/02.operations/109.border.js-30-    afterEach(function(done) {
/src/tests/02.operations/109.border.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.gif'), 'gif', {
/src/tests/02.operations/109.border.js-32-            colors: 256
##############################################
/src/tests/02.operations/105.crop.js-19-    beforeEach(function(done) {
/src/tests/02.operations/105.crop.js:20:        lwip.open(imgs.png.trans, function(err, img) {
/src/tests/02.operations/105.crop.js-21-            image = img;
##############################################
/src/tests/02.operations/105.crop.js-26-    afterEach(function(done) {
/src/tests/02.operations/105.crop.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/105.crop.js-28-            quality: 100
##############################################
/src/tests/02.operations/104.rotate.js-18-    beforeEach(function(done) {
/src/tests/02.operations/104.rotate.js:19:        lwip.open(imgs.gif.trans, function(err, img) {
/src/tests/02.operations/104.rotate.js-20-            image = img;
##############################################
/src/tests/02.operations/104.rotate.js-25-    afterEach(function(done) {
/src/tests/02.operations/104.rotate.js:26:        image.writeFile(join(tmpDir, current.join('_') + '.png'), 'png', {
/src/tests/02.operations/104.rotate.js-27-            compressions: 'fast'
##############################################
/src/tests/02.operations/114.hue.js-19-    beforeEach(function(done) {
/src/tests/02.operations/114.hue.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/114.hue.js-21-            image = img;
##############################################
/src/tests/02.operations/114.hue.js-30-    afterEach(function(done) {
/src/tests/02.operations/114.hue.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/114.hue.js-32-            quality: 100
##############################################
/src/tests/02.operations/108.pad.js-19-    beforeEach(function(done) {
/src/tests/02.operations/108.pad.js:20:        lwip.open(imgs.png.rgb, function(err, img) {
/src/tests/02.operations/108.pad.js-21-            image = img;
##############################################
/src/tests/02.operations/108.pad.js-26-    afterEach(function(done) {
/src/tests/02.operations/108.pad.js:27:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/108.pad.js-28-            quality: 100
##############################################
/src/tests/02.operations/101.writeFile.js-22-    before(function(done) {
/src/tests/02.operations/101.writeFile.js:23:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/101.writeFile.js-24-            image = img;
##############################################
/src/tests/02.operations/101.writeFile.js-34-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:35:                    image.writeFile(outpathJpeg, done);
/src/tests/02.operations/101.writeFile.js-36-                });
##############################################
/src/tests/02.operations/101.writeFile.js-40-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:41:                    image.writeFile(outpathJpeg, {
/src/tests/02.operations/101.writeFile.js-42-                        quality: 20
##############################################
/src/tests/02.operations/101.writeFile.js-48-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:49:                    image.writeFile(outpathJpeg, {
/src/tests/02.operations/101.writeFile.js-50-                        quality: 0
##############################################
/src/tests/02.operations/101.writeFile.js-60-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:61:                    image.writeFile(outpathJpeg, 'jpeg', done);
/src/tests/02.operations/101.writeFile.js-62-                });
##############################################
/src/tests/02.operations/101.writeFile.js-66-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:67:                    image.writeFile(outpathJpeg, 'jpeg', {
/src/tests/02.operations/101.writeFile.js-68-                        quality: 20
##############################################
/src/tests/02.operations/101.writeFile.js-82-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:83:                    image.writeFile(outpathPng, done);
/src/tests/02.operations/101.writeFile.js-84-                });
##############################################
/src/tests/02.operations/101.writeFile.js-88-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:89:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-90-                        compression: 'none',
##############################################
/src/tests/02.operations/101.writeFile.js-97-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:98:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-99-                        compression: 'none',
##############################################
/src/tests/02.operations/101.writeFile.js-106-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:107:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-108-                        compression: 'fast',
##############################################
/src/tests/02.operations/101.writeFile.js-115-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:116:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-117-                        compression: 'fast',
##############################################
/src/tests/02.operations/101.writeFile.js-124-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:125:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-126-                        compression: 'high',
##############################################
/src/tests/02.operations/101.writeFile.js-133-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:134:                    image.writeFile(outpathPng, {
/src/tests/02.operations/101.writeFile.js-135-                        compression: 'high',
##############################################
/src/tests/02.operations/101.writeFile.js-146-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:147:                    image.writeFile(outpathPng, 'png', done);
/src/tests/02.operations/101.writeFile.js-148-                });
##############################################
/src/tests/02.operations/101.writeFile.js-160-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:161:                    image.writeFile(outpathGif, done);
/src/tests/02.operations/101.writeFile.js-162-                });
##############################################
/src/tests/02.operations/101.writeFile.js-166-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:167:                    image.writeFile(outpathGif, {
/src/tests/02.operations/101.writeFile.js-168-                        colors: 256,
##############################################
/src/tests/02.operations/101.writeFile.js-177-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:178:                    image.writeFile(outpathGif, {
/src/tests/02.operations/101.writeFile.js-179-                        colors: 99,
##############################################
/src/tests/02.operations/101.writeFile.js-188-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:189:                    image.writeFile(outpathGif, {
/src/tests/02.operations/101.writeFile.js-190-                        colors: 256,
##############################################
/src/tests/02.operations/101.writeFile.js-199-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:200:                    image.writeFile(outpathGif, {
/src/tests/02.operations/101.writeFile.js-201-                        colors: 16,
##############################################
/src/tests/02.operations/101.writeFile.js-214-                it('should succeed', function(done) {
/src/tests/02.operations/101.writeFile.js:215:                    image.writeFile(outpathGif, 'gif', done);
/src/tests/02.operations/101.writeFile.js-216-                });
##############################################
/src/tests/02.operations/110.sharpen.js-19-    beforeEach(function(done) {
/src/tests/02.operations/110.sharpen.js:20:        lwip.open(imgs.jpg.rgb, function(err, img) {
/src/tests/02.operations/110.sharpen.js-21-            image = img;
##############################################
/src/tests/02.operations/110.sharpen.js-30-    afterEach(function(done) {
/src/tests/02.operations/110.sharpen.js:31:        image.writeFile(join(tmpDir, current.join('_') + '.jpg'), 'jpeg', {
/src/tests/02.operations/110.sharpen.js-32-            quality: 100
##############################################
/src/lib/ImagePrototypeInit.js-605-        var that = this;
/src/lib/ImagePrototypeInit.js:606:        judges.writeFile(
/src/lib/ImagePrototypeInit.js-607-            arguments,
##############################################
/src/lib/ImagePrototypeInit.js-611-                    if (err) return callback(err);
/src/lib/ImagePrototypeInit.js:612:                    fs.writeFile(outpath, buffer, {
/src/lib/ImagePrototypeInit.js-613-                        encoding: 'binary'
##############################################
/src/lib/obtain.js-28-                opener = getOpener(type);
/src/lib/obtain.js:29:                fs.readFile(source, function(err, imbuff) {
/src/lib/obtain.js-30-                    if (err) return callback(err);
##############################################
/src/lib/BatchPrototypeInit.js-254-        var that = this;
/src/lib/BatchPrototypeInit.js:255:        judges.writeFile(arguments, function(outpath, type, params, callback) {
/src/lib/BatchPrototypeInit.js-256-            type = type || path.extname(outpath).slice(1).toLowerCase();
##############################################
/src/lib/BatchPrototypeInit.js-258-                if (err) return callback(err);
/src/lib/BatchPrototypeInit.js:259:                fs.writeFile(outpath, buffer, {
/src/lib/BatchPrototypeInit.js-260-                    encoding: 'binary'
##############################################
/src/prebuild.js-146-    }
/src/prebuild.js:147:    var sem_ver = semver.parse(versions.node);
/src/prebuild.js-148-    if (sem_ver.major === 0 && sem_ver.minor % 2) { // odd series
##############################################
/src/prebuild.js-189-    var v = package_json.version;
/src/prebuild.js:190:    var module_version = semver.parse(v);
/src/prebuild.js-191-    var runtime = 'node';
