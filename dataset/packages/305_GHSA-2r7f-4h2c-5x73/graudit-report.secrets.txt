/src/lib/parser.map:1:{"version":3,"sources":["src/parser.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;sBAEc,QAAQ;;;;sBACL,SAAS;;;;2BAEF,eAAe;;;;yBACjB,aAAa;;;;2BACX,gBAAgB;;;;oBACvB,QAAQ;;;;uBACL,WAAW;;;;mBACf,OAAO;;;;6BACG,gBAAgB;;;;AAE1C,IAAM,iBAAiB,GAAG,kBAAkB,CAAC;AAC7C,IAAM,iBAAiB,GAAG,mCAAmC,CAAC;;;;AAI9D,SAAS,QAAQ,CAAC,EAAE,EAAE;AACpB,MAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;AAC/B,WAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;GACtB,MAAM;AACL,MAAE,EAAE,CAAC;GACN;CACF;;;AAGD,SAAS,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE;AAC/B,SAAO,oBAAE,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;CAChC;;;;;;IAKoB,MAAM;AACd,WADQ,MAAM,CACb,IAAkC,EAAE;QAAnC,KAAK,GAAN,IAAkC,CAAjC,KAAK;QAAE,MAAM,GAAd,IAAkC,CAA1B,MAAM;QAAE,iBAAiB,GAAjC,IAAkC,CAAlB,iBAAiB;;0BAD1B,MAAM;;;AAGvB,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;;;AAG3C,QAAI,CAAC,aAAa,GAAG,EAAE,CAAC;;;AAGxB,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEpB,QAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEnB,QAAI,CAAC,GAAG,GAAG,IAAI,CAAC;;AAEhB,QAAI,CAAC,IAAI,GAAG,EAAE,CAAC;;AAEf,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;GACnB;;eApBkB,MAAM;;WAsBpB,eAAC,IAAI,EAAE;;;4BAGN,IAAI,CAAC,KAAK,CAAC,QAAQ;UADrB,QAAQ,mBAAR,QAAQ;UAAE,WAAW,mBAAX,WAAW;UAAE,SAAS,mBAAT,SAAS;;AAElC,UAAM,aAAa,GAAG,gCAAmB,CAAC;;AAE1C,UAAI,CAAC,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC;;;AAGhC,UAAI,MAAM,YAAA,CAAC;AACX,UAAI;AACF,cAAM,GAAG,oBAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,oBAAK,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;OAC7E,CAAC,OAAO,GAAG,EAAE;AACZ,YAAI,CAAC,gBAAgB,CAAC,yBAAY,YAAY,EAAE,IAAI,EACjD,GAAG,CAAC,MAAM,IAAI,2BAA2B,CAAE,CAAC;;AAE/C,YAAI,GAAG,CAAC,IAAI,EAAE;AACZ,cAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAC9C,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC,CAAC;SACJ;;AAED,eAAO,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;OAClD;;;AAGD,UAAI,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;AAC7B,cAAM,CAAC,IAAI,GAAG,EAAE,CAAC;OAClB;;AAED,UAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AAC9B,cAAM,CAAC,KAAK,GAAG,EAAE,CAAC;OACnB;;;;AAID,mBAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAC,GAAG,EAAK;AACtC,YAAM,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC;AAClC,cAAK,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC;;AAEjC,YAAI,GAAG,EAAE;AACP,cAAI,MAAK,OAAO,KAAK,SAAS,EAAE;AAC9B,mBAAO,IAAI,CAAC,GAAG,EAAE,MAAK,MAAM,CAAC,CAAC;WAC/B;;;;AAID,cAAI,GAAG,CAAC,OAAO,EAAE;AACf,gBAAM,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC5B,mBAAO,KAAK,CAAC,MAAM,EAAE;;;;;;AACnB,kDAAmB,KAAK,CAAC,CAAC,CAAC,4GAAE;sBAAlB,IAAI;;AACb,wBAAK,gBAAgB,CAAC,yBAAY,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAC3D,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEhB,sBAAI,IAAI,CAAC,KAAK,EAAE;;;;;AAKd,yBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;mBACxB;iBACF;;;;;;;;;;;;;;;;AACD,mBAAK,CAAC,KAAK,EAAE,CAAC;aACf;;AAED,mBAAO,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,MAAK,MAAM,CAAC,CAAC;WAClD;;;;AAID,cAAI,SAAQ,GAAG,IAAI,CAAC;AACpB,cAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;;AAE3D,cAAI,OAAO,EAAE;AACX,qBAAQ,GAAG,CAAC,MAAK,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;WACjE;;AAED,cAAM,UAAU,GAAG,MAAK,gBAAgB,CAAC,yBAAY,gBAAgB,EACjE,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;;AAEvB,cAAI,SAAQ,KAAK,IAAI,EAAE;AACrB,sBAAU,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CACrC,IAAI,SAAS,CAAC,CAAC,SAAQ,CAAC,CAAC,CAC1B,CAAC,CAAC;WACJ;;AAED,iBAAO,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,MAAK,MAAM,CAAC,CAAC;SAClD;;AAED,YAAI;;;AAEF,kBAAK,GAAG,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC1B,kBAAK,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,kBAAK,MAAM,CAAC,IAAI,CAAC,MAAK,GAAG,CAAC,CAAC;;;AAG3B,kBAAK,KAAK,GAAG,MAAK,GAAG,CAAC;;AAEtB,kBAAK,iBAAiB,EAAE,CAAC;AACzB,kBAAK,iBAAiB,EAAE,CAAC;AACzB,kBAAK,iBAAiB,EAAE,CAAC;;AAEzB,gBAAI,OAAO,CAAC,YAAY,EAAE;AACxB,oBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,CAAC,cAAc,CAAC,EAC3D,6CAA6C,CAAC,CAAC;aAClD;;AAED,gBAAM,QAAQ,GAAG,SAAX,QAAQ,GAAS;AACrB,oBAAK,6BAA6B,CAAC,MAAK,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5D,qBAAO,IAAI,CAAC,IAAI,EAAE,MAAK,MAAM,CAAC,CAAC;aAChC,CAAC;;;;;;AAMF,gBAAM,KAAK,GAAG,oBAAE,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACnD,gBAAI,YAAY,GAAG,aAAY,KAAK,CAAC,CAAC,MAAM,CAAC;;AAE7C,gBAAI,YAAY,KAAK,CAAC,EAAE;;AAEtB;mBAAO,QAAQ,EAAE;gBAAC;aACnB;;AAED,gCAAE,OAAO,CAAC,KAAK,EAAE,UAAC,SAAS,EAAE,IAAI,EAAK;AACpC,sBAAQ,CAAC,YAAM;AACb,sBAAK,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAExC,oBAAI,EAAE,YAAY,KAAK,CAAC,EAAE;;AAExB,0BAAQ,EAAE,CAAC;iBACZ;eACF,CAAC,CAAC;aACJ,CAAC,CAAC;;;;SACJ,CAAC,OAAO,SAAS,EAAE;AAClB,gBAAK,gBAAgB,CAAC,yBAAY,cAAc,EAAE,IAAI,EACnD,qDAAqD,CAAE,CAAC;;AAE3D,iBAAO,IAAI,CAAC,SAAS,EAAE,MAAK,MAAM,CAAC,CAAC;SACrC;OACF,CAAC,CAAC;KACJ;;;;;;;;;;WAkDO,oBAAU;AAChB,UAAI,CAAC,YAAA,CAAC;;wCADI,IAAI;AAAJ,YAAI;;;AAGd,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;OACzB;;AAED,UAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE5C,WAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,YAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;OACjB;KACF;;;;;;WAIa,0BAAU;AACtB,UAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;yCADpB,IAAI;AAAJ,YAAI;;;AAIpB,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,UAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,UAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;KACtB;;;;;WAGgB,6BAAG;;;UACX,IAAI,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAA3B,IAAI;;AAEX,UAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACrB,YAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAM;AAC1B,cAAI,OAAK,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;AAC3B,mBAAK,QAAQ,CAAC,OAAO,EAAE,YAAM;AAC3B,qBAAK,GAAG,CAAC,KAAK,GAAG,OAAK,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEzC,kBAAI,OAAK,iBAAiB,EAAE;AAC1B,uBAAK,eAAe,CAAC,OAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;eAC7D;;AAED,qBAAO,OAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACnC,CAAC,CAAC;WACJ;;AAED,cAAI,OAAK,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE;AACjC,mBAAK,QAAQ,CAAC,aAAa,EAAE,YAAM;AACjC,kBAAM,WAAW,GAAG,IAAI,IAAI,CAAC,OAAK,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5D,qBAAK,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAEnC,kBAAI,OAAK,iBAAiB,EAAE;AAC1B,uBAAK,eAAe,CAAC,WAAW,EAAE,OAAK,IAAI,CAAC,CAAC;eAC9C;;AAED,qBAAO,WAAW,CAAC;aACpB,CAAC,CAAC;WACJ;;AAED,iBAAK,6BAA6B,CAAC,OAAK,GAAG,EAAE,OAAK,OAAO,CAAC,IAAI,CAAC,CAAC;SACjE,CAAC,CAAC;OACJ;KACF;;;;;WAGgB,6BAAG;;;UACH,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAA5C,MAAM;;AAEb,UAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACrB,YAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAM;AAC1B,cAAI,QAAQ,GAAG,OAAK,OAAO,CAAC,IAAI,CAAC;;AAEjC,cAAI,OAAK,OAAO,CAAC,OAAO,EAAE;AACxB,gBAAI,OAAK,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,qBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,CAAC,SAAS,CAAC,EACtD,yDAAyD,CAAC,CAAC;aAC9D;;AAED,oBAAQ,GAAM,OAAK,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,WAAM,QAAQ,AAAE,CAAC;WACvD;;AAED,cAAM,IAAI,GAAG,EAAE,CAAC;AAChB,cAAM,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;AAEnD,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;;AAErC,cAAI,OAAK,iBAAiB,EAAE;AAC1B,mBAAK,eAAe,CAAC,MAAM,EAAE,OAAK,IAAI,CAAC,CAAC;WACzC;;AAED,cAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,iBAAK,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;AAEtC,iBAAO,MAAM,CAAC;SACf,CAAC,CAAC;OACJ;KACF;;;;;WAGS,oBAAC,OAAO,EAAE,MAAM,EAAE;UACX,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAA5C,MAAM;;AACb,UAAI,MAAM,YAAA,CAAC;;AAEX,UAAI,MAAM,MAAG,KAAK,OAAO,EAAE;AACzB,cAAM,GAAG,oBAAoB,CAAC;OAC/B,MAAM,IAAI,MAAM,MAAG,KAAK,QAAQ,EAAE;AACjC,cAAM,GAAG,gBAAgB,CAAC;OAC3B;;AAED,UAAM,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEtD,UAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OAC1D;;AAED,aAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9B;;;;;WAGa,wBAAC,OAAO,EAAE,IAAI,EAAE;UACb,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAA5C,MAAM;;AACb,UAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,UAAI,IAAI,KAAK,UAAU,EAAE;AACvB,iBAAS,GAAG,qCAAqC,CAAC;OACnD,MAAM,IAAI,IAAI,KAAK,aAAa,EAAE;AACjC,iBAAS,GAAG,oBAAoB,CAAC;OAClC,MAAM,IAAI,IAAI,KAAK,YAAY,EAAE;AAChC,iBAAS,GAAG,oBAAoB,CAAC;OAClC;;AAED,UAAM,MAAM,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;;AAEzD,UAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OAC1D;;AAED,aAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9B;;;;;WAGU,qBAAC,OAAO,EAAE,KAAK,EAAE;;;6BACkD,IAAI,CAAC,KAAK,CAAC,QAAQ;UAAhF,aAAa,oBAArB,MAAM;UAAwB,YAAY,oBAAnB,KAAK;UAAwB,aAAa,oBAArB,MAAM;;AACzD,UAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,UAAI,YAAY,GAAG,IAAI,CAAC;AACxB,UAAI,UAAU,GAAG,KAAK,CAAC;;AAEvB,UAAI,oBAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAE,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1C,oBAAY,GAAG,eAAc,KAAK,CAAC,CAAC;AACpC,kBAAU,GAAG,aAAY,KAAK,CAAC,CAAC;OACjC;;;AAGD,0BAAE,OAAO,CAAC,UAAU,EAAE,UAAC,SAAS,EAAE,KAAK,EAAK;AAC1C,YAAM,KAAK,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;;AAE3C,YAAI,YAAY,EAAE;AAChB,eAAK,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;;AAExC,cAAI,OAAK,iBAAiB,EAAE;AAC1B,mBAAK,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,OAAK,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;WACpF;SACF;;AAED,YAAI,OAAK,iBAAiB,EAAE;AAC1B,cAAM,KAAK,GAAG,YAAY,GAAG,SAAS,GAAG,KAAK,CAAC;AAC/C,iBAAK,eAAe,CAAC,KAAK,EAAE,OAAK,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxD;;AAED,cAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC5B,CAAC,CAAC;;AAEH,UAAI,MAAM,CAAC,MAAM,EAAE;AACjB,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;OAC3D;KACF;;;;;WAGe,0BAAC,OAAO,EAAE,KAAK,EAAE;UACxB,UAAU,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAjC,UAAU;;AAEjB,UAAI,KAAK,CAAC,gBAAgB,EAAE;AAC1B,YAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;AAEpC,kBAAU,CAAC,QAAQ,GAAG,WAAW,CAAC;AAClC,kBAAU,CAAC,IAAI,GAAG,KAAK,CAAC,gBAAgB,CAAC;;AAEzC,YAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;AAChG,cAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;SACrG;;AAED,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;OAClC;;AAED,UAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,YAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;AAEpC,kBAAU,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC9B,kBAAU,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;;AAEjC,YAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACxF,cAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC7F;;AAED,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;OAClC;KACF;;;;;WAGgB,6BAAG;;;6BACa,IAAI,CAAC,KAAK,CAAC,QAAQ;UAA3C,QAAQ,oBAAR,QAAQ;UAAE,UAAU,oBAAV,UAAU;;AAC3B,UAAM,OAAO,GAAG,EAAE,CAAC;;AAEnB,UAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;AACpC,4BAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AACzD,iBAAK,QAAQ,CAAC,qBAAqB,EAAE,IAAI,EAAE,YAAM;AAC/C,gBAAM,IAAI,GAAG,OAAK,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACpD,gBAAM,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;;AAEjC,oBAAQ,IAAI,CAAC,IAAI;AACjB,mBAAK,OAAO;AACV,uBAAO,CAAC,OAAO,GAAG,6BAA6B,CAAC;AAChD,sBAAM;;AAAA,AAER,mBAAK,QAAQ;AACX,uBAAO,CAAC,OAAO,GAAG,6BAA6B,CAAC;AAChD,uBAAK,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC/B,sBAAM;;AAAA,AAER,mBAAK,QAAQ;AACX,uBAAO,CAAC,OAAO,GAAG,eAAe,CAAC;AAClC,uBAAK,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;AAExC,oBAAI,IAAI,CAAC,MAAM,EAAE;AACf,yBAAK,QAAQ,CAAC,QAAQ,EAAE,YAAM;AAC5B,2BAAK,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;mBACxC,CAAC,CAAC;iBACJ;;AAED,uBAAK,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACrC,sBAAM;;AAAA,AAER;AACE,sBAAM;AAAA,aACP;;AAED,mBAAO,CAAC,EAAE,GAAG,IAAI,CAAC;;AAElB,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;aACzD;;AAED,gBAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AACrB,qBAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;;AAElC,kBAAI,OAAK,iBAAiB,EAAE;AAC1B,uBAAK,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAK,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;eAClF;aACF;;AAED,gBAAI,IAAI,CAAC,WAAW,EAAE;AACpB,qBAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;;AAEvC,kBAAI,OAAK,iBAAiB,EAAE;AAC1B,uBAAK,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,OAAK,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;eAC1F;aACF;;AAED,mBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;WACvB,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;AAED,UAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;;AAEhC,gBAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;AAC9C,gBAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;;AAE3B,YAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OACjC;;AAED,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AAC1B,eAAO;OACR;;AAED,UAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACvE;;;WAEoB,+BAAC,QAAQ,EAAE,OAAO,EAAE;;;UAChC,UAAU,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAjC,UAAU;;AAEjB,0BAAE,OAAO,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAE,KAAK,EAAK;AACnC,4BAAE,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AAC7B,iBAAK,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,YAAM;AAC3C,gBAAM,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;;;AAGjC,mBAAK,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEtC,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,OAAO,EAAE,OAAK,IAAI,CAAC,CAAC;aAC1C;;AAED,mBAAO,CAAC,OAAO,GAAG,IAAI,CAAC;AACvB,mBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;WACvB,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAE0B,qCAAC,WAAW,EAAE;AACvC,UAAM,OAAO,GAAG,EAAE,CAAC;;AAEnB,UAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;AACzB,eAAO,IAAI,CAAC,aAAa,CAAC;OAC3B;;AAED,UAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;AAE1D,aAAO,OAAO,CAAC;KAChB;;;;;WAGgB,2BAAC,SAAS,EAAE,IAAI,EAAE;;;6BACR,IAAI,CAAC,KAAK,CAAC,QAAQ;UAArC,IAAI,oBAAJ,IAAI;UAAE,QAAQ,oBAAR,QAAQ;;AACrB,UAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;;AAEhC,UAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,YAAM;;AAEjC,YAAI,SAAS,CAAC,WAAW,CAAC,EAAE;AAC1B,iBAAK,QAAQ,CAAC,WAAW,EAAE,YAAM;AAC/B,oBAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;;AAExC,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;aAC7D;;AAED,mBAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;WACnC,CAAC,CAAC;SACJ;;;AAGD,YAAI,SAAS,CAAC,eAAe,CAAC,EAAE;AAC9B,iBAAK,QAAQ,CAAC,eAAe,EAAE,YAAM;AACnC,gBAAM,mBAAmB,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;AACjE,oBAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;;AAEnC,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,mBAAmB,EAAE,OAAK,IAAI,CAAC,CAAC;aACtD;;AAED,mBAAO,mBAAmB,CAAC;WAC5B,CAAC,CAAC;SACJ;;AAED,YAAI,OAAK,iBAAiB,EAAE,EAAE;AAC5B,iBAAK,mBAAmB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;SACrD;;AAED,eAAK,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAElC,YAAM,oBAAoB,GAAG,SAAS,CAAC,UAAU,IAAI,EAAE,CAAC;AACxD,YAAM,qBAAqB,GAAG,OAAK,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;;AAE7E,YAAI,qBAAqB,EAAE;AACzB,kBAAQ,CAAC,aAAa,GAAG,qBAAqB,CAAC;SAChD;;;;;;AAMD,gBAAQ,CAAC,IAAI,GAAG,8BAAY,OAAK,QAAQ,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC;;AAEvE,YAAI,OAAK,iBAAiB,EAAE;AAC1B,iBAAK,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;SAClE;;;AAGD,YAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,8BAAE,OAAO,CAAC,oBAAoB,EAAE,UAAC,SAAS,EAAE,KAAK,EAAK;AACpD,mBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,UAAC,IAAI,EAAK;AAC3C,kBAAI,SAAS,MAAG,KAAK,MAAM,EAAE;AAC3B,uBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,IAAI,EAC/C,kDAAkD,CAAC,CAAC;eACvD,MAAM,IAAI,SAAS,MAAG,KAAK,UAAU,EAAE;AACtC,uBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,IAAI,EAC/C,uDAAuD,CAAC,CAAC;eAC5D;aACF,CAAC,CAAC;WACJ,CAAC,CAAC;SACJ;;AAED,YAAM,eAAe,GAAG,oBAAE,KAAK,CAAC,SAAS,CAAC,CACvC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAC1B,MAAM,CAAC,WAAW,CAAC,CACnB,KAAK,EAAE,CAAC;;;AAGX,4BAAE,OAAO,CAAC,eAAe,EAAE,UAAC,WAAW,EAAE,MAAM,EAAK;AAClD,iBAAK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,EAAE,oBAAoB,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;SACrF,CAAC,CAAC;;AAEH,eAAK,6BAA6B,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAExD,eAAO,QAAQ,CAAC;OACjB,CAAC,CAAC;KACJ;;;;;WAG4B,uCAAC,OAAO,EAAE,MAAM,EAAE;AAC7C,UAAM,UAAU,GAAG,oBAAE,KAAK,CAAC,MAAM,CAAC,CAC/B,MAAM,CAAC,WAAW,CAAC,CACnB,IAAI,CAAC,eAAe,EAAE,WAAW,EAAE,cAAc,CAAC,CAClD,KAAK,EAAE,CAAC;;AAEX,UAAI,aAAY,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;+BACZ,IAAI,CAAC,KAAK,CAAC,QAAQ;YAAtC,IAAI,oBAAJ,IAAI;YAAE,SAAS,oBAAT,SAAS;;AACtB,YAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;AAC/B,mBAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC,mBAAW,CAAC,IAAI,GAAG,iEAAiE,CAAC;AACrF,YAAM,SAAS,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC;AAC5C,iBAAS,CAAC,KAAK,GAAG,CAAC,WAAW,CAAC,CAAC;AAChC,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;OACjC;KACF;;;;;WAGkB,6BAAC,QAAQ,EAAE,IAAI,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,EAAE;;;6BAChD,IAAI,CAAC,KAAK,CAAC,QAAQ;UAAvC,IAAI,oBAAJ,IAAI;UAAE,UAAU,oBAAV,UAAU;;AACvB,UAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;;AAEpC,cAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAElC,UAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAM;AAC1B,YAAM,OAAO,GAAG,OAAK,2BAA2B,CAAC,WAAW,CAAC,CAAC;;AAE9D,YAAI,WAAW,CAAC,YAAY,EAAE;AAC5B,iBAAK,QAAQ,CAAC,cAAc,EAAE,UAAC,IAAI,EAAK;AACtC,mBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,IAAI,EACjD,6CAA6C,CAAC,CAAC;WAChD,CAAC,CAAC;SACJ;;AAED,YAAM,oBAAoB,GAAG,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC;;AAE1D,YAAM,eAAe,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAC,SAAS,EAAK;AACjE,iBAAO,SAAS,MAAG,KAAK,OAAO,CAAC;SACjC,CAAC,CAAC;;;;;AAKH,YAAM,iBAAiB,GAAG,8BAAY,OAAK,QAAQ,EAAE,IAAI,EAAE,kBAAkB,EAAE,eAAe,CAAC,CAAC;;AAEhG,YAAI,iBAAiB,KAAK,QAAQ,CAAC,IAAI,EAAE;AACvC,oBAAU,CAAC,IAAI,GAAG,iBAAiB,CAAC;SACrC;;AAED,YAAI,WAAW,CAAC,OAAO,EAAE;AACvB,iBAAK,QAAQ,CAAC,SAAS,EAAE,YAAM;AAC7B,sBAAU,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;;AAEvC,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAK,IAAI,CAAC,CAAC;aAC/D;;AAED,mBAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;WACrC,CAAC,CAAC;SACJ;;AAED,YAAI,WAAW,CAAC,WAAW,EAAE;AAC3B,iBAAK,QAAQ,CAAC,aAAa,EAAE,YAAM;AACjC,gBAAM,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACtD,sBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAE7B,gBAAI,OAAK,iBAAiB,EAAE;AAC1B,qBAAK,eAAe,CAAC,WAAW,EAAE,OAAK,IAAI,CAAC,CAAC;aAC9C;;AAED,mBAAO,WAAW,CAAC;WACpB,CAAC,CAAC;SACJ;;AAED,YAAI,WAAW,CAAC,WAAW,EAAE;;AAE3B,oBAAU,CAAC,EAAE,GAAG,WAAW,CAAC,WAAW,CAAC;SACzC;;;AAGD,YAAM,mBAAmB,GAAG,OAAK,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;AAC3E,YAAI,mBAAmB,EAAE;AACvB,oBAAU,CAAC,aAAa,GAAG,mBAAmB,CAAC;SAChD;;;AAGD,YAAM,iBAAiB,GAAG,oBAAE,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CACrD,IAAI,CAAC,SAAS,CAAC,CACf,MAAM,CAAC,WAAW,CAAC,CACnB,KAAK,EAAE,CAAC;;AAEX,YAAI,WAAW,CAAC,SAAS,IAAI,WAAW,CAAC,SAAS,WAAQ,EAAE;AAC1D,iBAAK,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,UAAC,IAAI,EAAK;AAC9C,mBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,IAAI,EAC/C,uCAAuC,CAAC,CAAC;WAC5C,CAAC,CAAC;SACJ;;AAED,YAAI,oBAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1C,cAAI,oBAAoB,CAAC,MAAM,CAAC,UAAC,CAAC;mBAAK,CAAC,MAAG,KAAK,MAAM;WAAA,CAAC,CAAC,MAAM,EAAE;;;;AAI9D,6BAAiB,QAAK,GAAG,EAAE,CAAC;WAC7B,MAAM;AACL,mBAAK,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;WACrD;SACF;;;AAGD,4BAAE,OAAO,CAAC,iBAAiB,EAAE,UAAC,aAAa,EAAE,UAAU,EAAK;AAC1D,iBAAK,qBAAqB,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;SACvH,CAAC,CAAC;;AAEH,eAAK,6BAA6B,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;;AAE5D,eAAO,UAAU,CAAC;OACnB,CAAC,CAAC;KACJ;;;;;WAGoB,+BAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE;;;AAC/G,UAAI,QAAQ,YAAA,CAAC;;AAEb,UAAI,aAAa,CAAC,QAAQ,EAAE;AAC1B,gBAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;OACnC,MAAM;;;;;;AAML,gBAAQ,GAAG;AACT,YAAE,EAAE,SAAS;SACd,CAAC;OACH;;AAED,cAAQ,GAAG,oBAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,0BAAE,OAAO,CAAC,QAAQ,EAAE,UAAC,YAAY,EAAE,WAAW,EAAK;AACjD,YAAM,WAAW,GAAG,OAAK,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;;AAExE,eAAK,2BAA2B,CAAC,WAAW,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC;AACjF,eAAK,4BAA4B,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;OACnH,CAAC,CAAC;KACJ;;;;;WAG0B,qCAAC,WAAW,EAAE,WAAW,EAAE,oBAAoB,EAAE;;;6BAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ;UAA3D,aAAa,oBAAb,aAAa;UAAU,aAAa,oBAArB,MAAM;;AAC5B,UAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;;AAEpC,UAAI,CAAC,QAAQ,CAAC,YAAM;;AAElB,YAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAC,SAAS,EAAK;AAChE,iBAAO,SAAS,MAAG,KAAK,MAAM,CAAC;SAChC,CAAC,CAAC;;;AAGH,YAAM,cAAc,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAC,SAAS,EAAK;AAChE,iBAAO,SAAS,MAAG,KAAK,UAAU,CAAC;SACpC,CAAC,CAAC;;;AAGH,YAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAC,SAAS,EAAK;AAClE,iBAAO,SAAS,MAAG,KAAK,QAAQ,CAAC;SAClC,CAAC,CAAC;;;AAGH,YAAM,UAAU,GAAG,CAAC,WAAW,CAAC,QAAQ,IAAI,QAAK,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAA,CAAE,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3G,YAAM,UAAU,GAAG,CAAC,WAAW,CAAC,QAAQ,IAAI,QAAK,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAA,CAAE,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;;;AAG3G,YAAI,UAAU,EAAE;AACd,+BAAQ,UAAU,CAAC,cAAc,EAAE,iBAAiB,EAAE,OAAO,WAAQ,uBAAuB,CAAC,CAAC;SAC/F;;AAED,YAAI,UAAU,EAAE;AACd,+BAAQ,UAAU,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,WAAQ,iBAAiB,CAAC,CAAC;SACnF;;AAED,4BAAE,OAAO,CAAC,gBAAgB,EAAE,UAAC,KAAK,EAAK;AACrC,cAAM,KAAK,GAAG,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAElD,kBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,YAAM;AACvC,iCAAQ,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,UAAO,CAAC;WAC5D,CAAC,CAAC;SACJ,CAAC,CAAC;;;;AAIH,4BAAE,OAAO,CAAC,cAAc,EAAE,UAAC,KAAK,EAAK;AACnC,cAAM,KAAK,GAAG,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAElD,cAAI,KAAK,CAAC,WAAW,CAAC,EAAE;AACtB,oBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE,YAAM;AACpD,sBAAK,gBAAgB,CAAC,yBAAY,gBAAgB,EAAE,QAAK,IAAI,EAC3D,gGAAgG,CAAC,CAAC;aACrG,CAAC,CAAC;WACJ;;AAED,kBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAM;AACjD,gBAAI,UAAU,EAAE;AACd,qCAAU,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,UAAO,CAAC;aACvD;;AAED,oBAAK,eAAe,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,QAAK,IAAI,CAAC,CAAC;WACxD,CAAC,CAAC;SACJ,CAAC,CAAC;;;;AAIH,YAAI,cAAc,CAAC,MAAM,EAAE;;AACzB,iCAAQ,UAAU,CAAC,cAAc,EAAE,iBAAiB,EAAE,OAAO,WAAQ,wBAAwB,CAAC,CAAC;;;AAG/F,oBAAK,8BAA8B,CAAC,oBAAoB,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;;;AAGnF,gBAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;AAC1C,gBAAM,UAAU,GAAG,IAAI,aAAa,EAAE,CAAC;;AAEvC,gCAAE,OAAO,CAAC,cAAc,EAAE,UAAC,KAAK,EAAK;AACnC,kBAAM,KAAK,GAAG,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClD,sBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,YAAM;AACvC,oBAAM,MAAM,GAAG,QAAK,wBAAwB,CAAC,KAAK,EAAE,QAAK,IAAI,CAAC,CAAC;AAC/D,0BAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;eACjC,CAAC,CAAC;aACJ,CAAC,CAAC;;AAEH,yBAAa,CAAC,OAAO,GAAG,UAAU,CAAC;AACnC,mBAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;SACrC;;AAED,eAAO,OAAO,CAAC;OAChB,CAAC,CAAC;KACJ;;;;;WAG6B,wCAAC,oBAAoB,EAAE,cAAc,EAAE,OAAO,EAAE;;;;;AAG5E,UAAM,MAAM,GAAG,EAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAC,CAAC;;AAE9D,0BAAE,OAAO,CAAC,cAAc,EAAE,UAAC,KAAK,EAAK;AACnC,YAAM,KAAK,GAAG,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,YAAM;AACvC,cAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;AAC1B,oBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,QAAK,IAAI,EACpD,uDAAuD,CAAC,CAAC;AAC3D,mBAAO;WACR;AACD,cAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;AACzB,oBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,QAAK,IAAI,EACpD,sDAAsD,CAAC,CAAC;AAC1D,mBAAO;WACR;AACD,cAAI,KAAK,CAAC,eAAe,EAAE;AACzB,oBAAK,gBAAgB,CAAC,yBAAY,SAAS,EAAE,QAAK,IAAI,EACpD,qDAAqD,CAAC,CAAC;WAC1D;SACF,CAAC,CAAC;;AAEH,YAAM,WAAW,GAAG,oBAAE,KAAK,CAAC,KAAK,CAAC,CAAC;;;;AAInC,YAAI,KAAK,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE;AACpC,qBAAW,QAAK,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;SACzC;;AAED,eAAO,WAAW,CAAC,IAAI,CAAC;AACxB,eAAO,WAAW,MAAG,CAAC;AACtB,eAAO,WAAW,CAAC,MAAM,CAAC;AAC1B,eAAO,WAAW,CAAC,QAAQ,CAAC;AAC5B,eAAO,WAAW,CAAC,WAAW,CAAC,CAAC;AAChC,eAAO,WAAW,CAAC,gBAAgB,CAAC;AACpC,eAAO,WAAW,CAAC,eAAe,CAAC;AACnC,eAAO,WAAW,CAAC,KAAK,CAAC;;AAEzB,cAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;AAC5C,YAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,gBAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAClC;OACF,CAAC,CAAC;AACH,6BAAU,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;KACpE;;;;;WAG2B,sCAAC,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE;;;6BACrF,IAAI,CAAC,KAAK,CAAC,QAAQ;UAAlC,KAAK,oBAAL,KAAK;UAAE,IAAI,oBAAJ,IAAI;;AAClB,UAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;;AAEtC,UAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,YAAM;AAC3C,YAAI,aAAa,CAAC,WAAW,EAAE;AAC7B,cAAM,WAAW,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AACxD,kBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAEnC,cAAI,QAAK,iBAAiB,EAAE;AAC1B,oBAAK,eAAe,CAAC,WAAW,EAAE,QAAK,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;WACtE;SACF;;AAED,YAAI,WAAW,EAAE;AACf,kBAAK,QAAQ,CAAC,UAAU,EAAE,WAAW,EAAE,YAAM;AAC3C,iCAAQ,UAAU,CAAC,cAAc,EAAE,WAAW,EAAE,QAAQ,UAAO,CAAC;WACjE,CAAC,CAAC;SACJ;;AAED,YAAM,UAAU,GAAG,CAAC,WAAW,CAAC,QAAQ,IAAI,QAAK,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAA,CAAE,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;;AAE3G,YAAI,UAAU,EAAE;AACd,+BAAQ,UAAU,CAAC,cAAc,EAAE,iBAAiB,EAAE,QAAQ,WAAQ,uBAAuB,CAAC,CAAC;SAChG;;AAED,YAAI,aAAa,CAAC,OAAO,EAAE;AACzB,kBAAK,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC;SACrD;;AAED,gBAAK,QAAQ,CAAC,UAAU,EAAE,YAAM;;AAE9B,cAAI,YAAY,KAAK,SAAS,EAAE;AAC9B,oBAAK,QAAQ,CAAC,WAAW,EAAE,YAAM;AAC/B,kBAAI,qBAAqB,GAAG,YAAY,CAAC;;AAEzC,kBAAI,OAAO,YAAY,AAAC,KAAK,QAAQ,EAAE;AACrC,qCAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;eAC/D;;AAED,kBAAM,SAAS,GAAG,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;AACnD,uBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;AAEtC,kBAAI,QAAK,iBAAiB,EAAE;AAC1B,wBAAK,eAAe,CAAC,SAAS,EAAE,QAAK,IAAI,CAAC,CAAC;eAC5C;;AAED,sBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClC,CAAC,CAAC;WACJ;;;AAGD,cAAM,MAAM,GAAG,aAAa,CAAC,MAAM,IAAK,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,AAAC,CAAC;;AAEjG,cAAI,MAAM,EAAE;AACV,gBAAI,IAAI,YAAA,CAAC;;AAET,gBAAI,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC3D,kBAAI,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;aAClC,MAAM;AACL,kBAAI,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;aACtB;;AAED,oBAAK,cAAc,CAAC,KAAK,UAAO,IAAI,CAAC,MAAM,CAAC,CAAC,YAAM;AACjD,kBAAI,UAAU,IAAI,YAAY,KAAK,SAAS,EAAE;AAC5C,uCAAU,cAAc,CAAC,MAAM,EAAE,QAAQ,UAAO,CAAC;eAClD;;AAED,sBAAK,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAK,IAAI,CAAC,CAAC;aACnD,CAAC,CAAC,CAAC,CAAC;WACN;;AAED,cAAI,UAAU,KAAK,MAAM,EAAE;AACzB,oBAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;;AAEjC,gBAAI,QAAK,iBAAiB,EAAE;AAC1B,sBAAK,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,QAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACrF;WACF;SACF,CAAC,CAAC;;AAGH,gBAAK,6BAA6B,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;;AAE5D,eAAO,QAAQ,CAAC;OACjB,CAAC,CAAC;KACJ;;;;;;WAIY,uBAAC,OAAO,EAAE,WAAW,EAAE;;;4BACvB,UAAU;AACnB,YAAI,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;;AAE1C,kBAAK,QAAQ,CAAC,SAAS,EAAE,UAAU,EAAE,YAAM;AACzC,iCAAQ,gBAAgB,CAAC,UAAU,EAAE,WAAW,CAAC,UAAU,CAAC,EAAE,OAAO,UAAO,CAAC;WAC9E,CAAC,CAAC;;SAEJ;;;AAPH,WAAK,IAAM,UAAU,IAAI,WAAW,EAAE;cAA3B,UAAU;OAQpB;KACF;;;;;;WAIgB,6BAAG;AAClB,UAAM,IAAI,GAAG,EAAE,CAAC;;AAEhB,UAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACtB,4BAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,IAAI,EAAK;AACtC,cAAI,GAAG,GAAG,IAAI,CAAC;;AAEf,cAAI,IAAI,EAAE;AACR,gBAAM,UAAU,GAAG,oBAAE,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;;AAE/C,gCAAE,OAAO,CAAC,UAAU,EAAE,UAAC,SAAS,EAAK;AACnC,kBAAI,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;AAC3C,oBAAI,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;;AAE7B,yBAAO,KAAK,CAAC;iBACd;;AAED,oBAAI,GAAG,KAAK,IAAI,EAAE;AAChB,qBAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACzB,MAAM,IAAI,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;AAEpC,yBAAO,KAAK,CAAC;iBACd;eACF;aACF,CAAC,CAAC;WACJ;;AAED,cAAI,GAAG,EAAE;AACP,gBAAI,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;AAC3B,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;WAChB;SACF,CAAC,CAAC;OACJ;;AAED,aAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACxB;;;;;WAGkB,6BAAC,IAAI,EAAE;;;6BACC,IAAI,CAAC,KAAK,CAAC,QAAQ;UAArC,QAAQ,oBAAR,QAAQ;UAAE,IAAI,oBAAJ,IAAI;;AAErB,UAAI,IAAI,EAAE;AACR,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAC,EAAE;iBAAK,EAAE,CAAC,OAAO,KAAK,UAAU,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI;SAAA,CAAC,CAAC,KAAK,EAAE,CAAC;;AAEnI,YAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;;;AAIf,cAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC5B,cAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;AACxB,cAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;AAEzC,cAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,oBAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrD,gCAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,GAAG,EAAK;;AAEpC,kBAAI,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,WAAW,EAAE;AACxC,wBAAK,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;eACpD;aACF,CAAC,CAAC;WACJ;;AAED,cAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;OACF;KACF;;;;;WAGwB,mCAAC,SAAS,EAAE,IAAI,EAAyB;;;UAAvB,aAAa,yDAAG,KAAK;8BAI1D,IAAI,CAAC,KAAK,CAAC,QAAQ;UAFd,YAAY,qBAAnB,KAAK;UAAyB,cAAc,qBAAvB,OAAO;UAA0B,aAAa,qBAArB,MAAM;UAC5C,aAAa,qBAArB,MAAM;;AAGR,UAAI,OAAO,YAAA,CAAC;AACZ,UAAI,IAAI,YAAA,CAAC;;;AAGT,UAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC/B,YAAI,GAAG,aAAa,CAAC;OACtB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtE,YAAI,GAAG,aAAa,CAAC;OACtB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,EAAE;AACvC,YAAI,GAAG,cAAc,CAAC;OACvB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;AACrC,YAAI,GAAG,YAAY,CAAC;OACrB,MAAM;;AAEL,YAAI,GAAG,aAAa,CAAC;OACtB;;AAED,UAAI,SAAS,QAAK,EAAE;AAClB,eAAO,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7B,eAAO,CAAC,OAAO,GAAG,MAAM,CAAC;;AAEzB,4BAAE,OAAO,CAAC,SAAS,QAAK,EAAE,UAAC,KAAK,EAAE,KAAK,EAAK;AAC1C,cAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;AACrB,WAAC,CAAC,OAAO,GAAG,KAAK,CAAC;;AAElB,cAAI,QAAK,iBAAiB,EAAE;AAC1B,oBAAK,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;WACrD;;AAED,iBAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACzB,CAAC,CAAC;;AAEH,YAAI,SAAS,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE;AACxC,cAAM,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;AACjC,uBAAa,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;;AAE/C,cAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,gBAAI,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;WACjE;;AAED,cAAM,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;AAC1C,wBAAc,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;AAE3C,cAAM,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7B,WAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;AAE/B,iBAAO,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SACtC;OACF,MAAM;AACL,eAAO,GAAG,IAAI,IAAI,EAAE,CAAC;;AAErB,YAAI,SAAS,CAAC,WAAW,CAAC,KAAK,SAAS,EAAE;AACxC,iBAAO,CAAC,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;SAC1C;OACF;;;;AAID,UAAI,SAAS,WAAQ,EAAE;AACrB,YAAI,CAAC,YAAA,CAAC;;AAEN,YAAI,SAAS,QAAK,EAAE;AAClB,WAAC,GAAG,IAAI,YAAY,EAAE,CAAC;AACvB,cAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;AAClC,wBAAc,CAAC,OAAO,GAAG,SAAS,WAAQ,CAAC;;AAE3C,cAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,gBAAI,CAAC,eAAe,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;WAChE;;AAED,WAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAChC,MAAM;AACL,WAAC,GAAG,IAAI,IAAI,EAAE,CAAC;;AAEf,cAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;AAC9B,gBAAM,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAA,CAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7G,0BAAc,CAAC,OAAO,GAAG,SAAS,WAAQ,CAAC;;AAE3C,aAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;WAChC,MAAM;AACL,aAAC,CAAC,OAAO,GAAG,SAAS,WAAQ,CAAC;;AAE9B,gBAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,kBAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACnD;WACF;SACF;;AAED,eAAO,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;OACtC;;AAED,UAAI,SAAS,CAAC,IAAI,KAAK,OAAO,IAAI,SAAS,CAAC,KAAK,EAAE;AACjD,eAAO,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAA,CAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;OAC3G;;AAED,UAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;OACrC;;AAED,UAAI,aAAa,EAAE;AACjB,YAAI,SAAS,CAAC,WAAW,EAAE;AACzB,iBAAO,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;;AAE5C,cAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,gBAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;WACrF;SACF;;AAED,YAAI,SAAS,CAAC,QAAQ,EAAE;AACtB,iBAAO,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;SACxD;;AAED,YAAI,SAAS,WAAQ,KAAK,SAAS,EAAE;AACnC,iBAAO,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,WAAQ,CAAC,CAAC;SACtD;OACF;;AAED,aAAO,OAAO,CAAC;KAChB;;;;;;WAIuB,kCAAC,SAAS,EAAoB;UAAlB,IAAI,yDAAG,IAAI,CAAC,IAAI;;AAClD,UAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AAC3D,UAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;;;AAIpE,UAAM,MAAM,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACjD,YAAM,CAAC,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;;AAEnC,UAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;OACpC;;AAED,UAAI,SAAS,CAAC,WAAW,EAAE;AACzB,cAAM,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;;AAE3C,YAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACpF;OACF;;AAED,UAAI,SAAS,CAAC,QAAQ,EAAE;AACtB,cAAM,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;OACvD;;AAED,aAAO,MAAM,CAAC;KACf;;;;;WAGc,yBAAC,OAAO,EAAE,IAAI,EAAE;AAC7B,UAAI,IAAI,CAAC,GAAG,EAAE;AACZ,YAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AAC1D,YAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;AAE5C,YAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC9D,iBAAO,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CAClC,IAAI,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CACjE,CAAC,CAAC;SACJ;OACF;KACF;;;;;WAGe,0BAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;UAC7B,UAAU,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAjC,UAAU;;AAEjB,UAAM,UAAU,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AAC3C,gBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,gBAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;AAE5B,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAErC,UAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,0BAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;OAC9C;;AAED,UAAI,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE;AACpB,YAAI,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;OACxC;;AAED,aAAO,UAAU,CAAC;KACnB;;;;;;WAIkB,6BAAC,MAAM,EAAE;;;UACnB,aAAa,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAApC,aAAa;;AACpB,UAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;;AAE1C,0BAAE,OAAO,CAAC,MAAM,EAAE,UAAC,SAAS,EAAE,KAAK,EAAK;AACtC,gBAAK,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,YAAM;AACvC,cAAI,MAAM,YAAA,CAAC;;AAEX,cAAI,SAAS,MAAG,KAAK,OAAO,IAAI,SAAS,MAAG,KAAK,MAAM,EAAE;AACvD,kBAAM,GAAG,QAAK,wBAAwB,CAAC,SAAS,CAAC,CAAC;AAClD,yBAAa,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;WACpC;;AAED,iBAAO,MAAM,CAAC;SACf,CAAC,CAAC;OACJ,CAAC,CAAC;;AAEH,aAAO,aAAa,CAAC,MAAM,GAAG,aAAa,GAAG,SAAS,CAAC;KACzD;;;;;WAGc,yBAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;AACrC,UAAI,YAAY,GAAG,oBAAE,IAAI,CAAC,MAAM,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC;AACnG,kBAAY,GAAG,oBAAE,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;;AAEnD,UAAI;AACF,YAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAClD,YAAM,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;;AAE5D,mBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC9C,mBAAW,CAAC,WAAW,GAAG,yBAAyB,CAAC;;AAEpD,YAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACzC;;AAED,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;OACnC,CAAC,OAAO,SAAS,EAAE;AAClB,YAAI,CAAC,gBAAgB,CAAC,yBAAY,SAAS,EAAE,IAAI,EAC9C,qDAAqD,CAAE,CAAC;OAC5D;KACF;;;;;WAGgB,2BAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE;8BACQ,IAAI,CAAC,KAAK,CAAC,QAAQ;UAAjE,WAAW,qBAAX,WAAW;UAAE,YAAY,qBAAZ,YAAY;UAAE,eAAe,qBAAf,eAAe;;AACjD,UAAM,WAAW,GAAG,IAAI,eAAe,EAAE,CAAC;AAC1C,iBAAW,CAAC,OAAO,GAAG,CAAC,IAAI,WAAW,EAAE,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC;;AAE9D,UAAI,UAAU,EAAE;AACd,kBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;OACtC;;AAED,UAAI,MAAM,EAAE;AACV,mBAAW,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;;AAElD,YAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/E;OACF;;AAED,UAAI,OAAO,CAAC,MAAM,EAAE;AAClB,mBAAW,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;OACpD;;AAED,aAAO,WAAW,CAAC;KACpB;;;SAtpCW,eAAG;AACb,aAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAA,CAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;KAC3D;;;;;;SAIM,eAAG;AACR,UAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;AAC3B,eAAO,IAAI,CAAC,IAAI,CAAC;OAClB;;AAED,UAAI,oBAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC3B,YAAI;AACF,cAAI,CAAC,IAAI,GAAG,qBAAQ,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC,CAAC,OAAO,GAAG,EAAE;AACZ,cAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,cAAI,OAAO,GAAG,mBAAmB,CAAC;AAClC,cAAI,GAAG,CAAC,OAAO,EAAE;AACf,mBAAO,GAAM,OAAO,UAAK,GAAG,CAAC,OAAO,AAAE,CAAC;WACxC;;AAED,cAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,yBAAY,eAAe,EAAE,IAAI,EACxE,OAAO,CAAC,CAAC;;AAEX,cAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE;AAChD,gBAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AAC1D,gBAAM,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC;;AAE1C,sBAAU,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,CACrC,IAAI,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAC/B,CAAC,CAAC;WACJ;SACF;OACF,MAAM;AACL,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAI,CAAC,gBAAgB,CAAC,yBAAY,eAAe,EAAE,IAAI,EACrD,kDAAkD,CAAC,CAAC;OACvD;;AAED,aAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;SAjNkB,MAAM;;;qBAAN,MAAM","file":"src/parser.js","sourcesContent":["// The main Swagger parsing component that outputs refract.\n\nimport _ from 'lodash';\nimport yaml from 'js-yaml';\n\nimport annotations from './annotations';\nimport generator from './generator';\nimport uriTemplate from './uri-template';\nimport link from './link';\nimport headers from './headers';\nimport Ast from './ast';\nimport SwaggerParser from 'swagger-parser';\n\nconst JSON_CONTENT_TYPE = 'application/json';\nconst FORM_CONTENT_TYPE = 'application/x-www-form-urlencoded';\n\n// Provide a `nextTick` function that either is Node's nextTick or a fallback\n// for browsers\nfunction nextTick(cb) {\n  if (process && process.nextTick) {\n    process.nextTick(cb);\n  } else {\n    cb();\n  }\n}\n\n// Test whether a key is a special Swagger extension.\nfunction isExtension(value, key) {\n  return _.startsWith(key, 'x-');\n}\n\n// The parser holds state about the current parsing environment and converts\n// the input Swagger into Refract elements. The `parse` function is its main\n// interface.\nexport default class Parser {\n  constructor({minim, source, generateSourceMap}) {\n    // Parser options\n    this.minim = minim;\n    this.source = source;\n    this.generateSourceMap = generateSourceMap;\n\n    // Global scheme requirements\n    this.globalSchemes = [];\n\n    // Loaded, dereferenced Swagger API\n    this.swagger = null;\n    // Refract parse result\n    this.result = null;\n    // Refract API category\n    this.api = null;\n    // State of the current parsing path\n    this.path = [];\n    // Current resource group, if any\n    this.group = null;\n  }\n\n  parse(done) {\n    const {\n      Category, ParseResult, SourceMap,\n    } = this.minim.elements;\n    const swaggerParser = new SwaggerParser();\n\n    this.result = new ParseResult();\n\n    // First, we load the YAML if it is a string, and handle any errors.\n    let loaded;\n    try {\n      loaded = _.isString(this.source) ? yaml.safeLoad(this.source) : this.source;\n    } catch (err) {\n      this.createAnnotation(annotations.CANNOT_PARSE, null,\n        (err.reason || 'Problem loading the input'));\n\n      if (err.mark) {\n        this.result.first().attributes.set('sourceMap', [\n          new SourceMap([[err.mark.position, 1]]),\n        ]);\n      }\n\n      return done(new Error(err.message), this.result);\n    }\n\n    // Some sane defaults since these are sometimes left out completely\n    if (loaded.info === undefined) {\n      loaded.info = {};\n    }\n\n    if (loaded.paths === undefined) {\n      loaded.paths = {};\n    }\n\n    // Next, we dereference and validate the loaded Swagger object. Any schema\n    // violations get converted into annotations with source maps.\n    swaggerParser.validate(loaded, (err) => {\n      const swagger = swaggerParser.api;\n      this.swagger = swaggerParser.api;\n\n      if (err) {\n        if (this.swagger === undefined) {\n          return done(err, this.result);\n        }\n\n        // Non-fatal errors, so let us try and create annotations for them and\n        // continue with the parsing as best we can.\n        if (err.details) {\n          const queue = [err.details];\n          while (queue.length) {\n            for (const item of queue[0]) {\n              this.createAnnotation(annotations.VALIDATION_ERROR, item.path,\n                item.message);\n\n              if (item.inner) {\n                // TODO: I am honestly not sure what the correct behavior is\n                // here. Some items will have within them a tree of other items,\n                // some of which might contain more info (but it's unclear).\n                // Do we treat them as their own error or do something else?\n                queue.push(item.inner);\n              }\n            }\n            queue.shift();\n          }\n\n          return done(new Error(err.message), this.result);\n        }\n\n        // Maybe there is some information in the error itself? Let's check\n        // whether it is a messed up reference!\n        let location = null;\n        const matches = err.message.match(/\\$ref pointer \"(.*?)\"/);\n\n        if (matches) {\n          location = [this.source.indexOf(matches[1]), matches[1].length];\n        }\n\n        const annotation = this.createAnnotation(annotations.VALIDATION_ERROR,\n            null, err.message);\n\n        if (location !== null) {\n          annotation.attributes.set('sourceMap', [\n            new SourceMap([location]),\n          ]);\n        }\n\n        return done(new Error(err.message), this.result);\n      }\n\n      try {\n        // Root API Element\n        this.api = new Category();\n        this.api.classes.push('api');\n        this.result.push(this.api);\n\n        // By default there are no groups, just the root API element\n        this.group = this.api;\n\n        this.handleSwaggerInfo();\n        this.handleSwaggerHost();\n        this.handleSwaggerAuth();\n\n        if (swagger.externalDocs) {\n          this.createAnnotation(annotations.DATA_LOST, ['externalDocs'],\n            'External documentation is not yet supported');\n        }\n\n        const complete = () => {\n          this.handleSwaggerVendorExtensions(this.api, swagger.paths);\n          return done(null, this.result);\n        };\n\n        // Swagger has a paths object to loop through that describes resources\n        // We will run each path on it's own tick since it may take some time\n        // and we want to ensure that other events in the event queue are not\n        // held up.\n        const paths = _.omitBy(swagger.paths, isExtension);\n        let pendingPaths = Object.keys(paths).length;\n\n        if (pendingPaths === 0) {\n          // If there are no paths, let's go ahead and call the callback.\n          return complete();\n        }\n\n        _.forEach(paths, (pathValue, href) => {\n          nextTick(() => {\n            this.handleSwaggerPath(pathValue, href);\n\n            if (--pendingPaths === 0) {\n              // Last path, let's call the completion callback.\n              complete();\n            }\n          });\n        });\n      } catch (exception) {\n        this.createAnnotation(annotations.UNCAUGHT_ERROR, null,\n          ('There was a problem converting the Swagger document'));\n\n        return done(exception, this.result);\n      }\n    });\n  }\n\n  // == Internal properties & functions ==\n\n  // Base path (URL) name for the API\n  get basePath() {\n    return (this.swagger.basePath || '').replace(/[/]+$/, '');\n  }\n\n  // Lazy-loaded input AST is made available when we need it. If it can't be\n  // loaded, then an annotation is generated with more information about why.\n  get ast() {\n    if (this._ast !== undefined) {\n      return this._ast;\n    }\n\n    if (_.isString(this.source)) {\n      try {\n        this._ast = new Ast(this.source);\n      } catch (err) {\n        this._ast = null;\n\n        let message = 'YAML Syntax Error';\n        if (err.problem) {\n          message = `${message}: ${err.problem}`;\n        }\n\n        const annotation = this.createAnnotation(annotations.AST_UNAVAILABLE, null,\n          message);\n\n        if (err.problem_mark && err.problem_mark.pointer) {\n          const SourceMap = this.minim.getElementClass('sourceMap');\n          const position = err.problem_mark.pointer;\n\n          annotation.attributes.set('sourceMap', [\n            new SourceMap([[position, 1]]),\n          ]);\n        }\n      }\n    } else {\n      this._ast = null;\n      this.createAnnotation(annotations.AST_UNAVAILABLE, null,\n        'Source maps are only available with string input');\n    }\n\n    return this._ast;\n  }\n\n  // This method lets you set the current parsing path and synchronously run\n  // a function (e.g. to create an element).\n  withPath(...args) {\n    let i;\n\n    for (i = 0; i < args.length - 1; i++) {\n      this.path.push(args[i]);\n    }\n\n    args[args.length - 1].bind(this)(this.path);\n\n    for (i = 0; i < args.length - 1; i++) {\n      this.path.pop();\n    }\n  }\n\n  // This is like `withPath` above, but slices the path before calling by\n  // using the first argument as a length (starting at index 0).\n  withSlicedPath(...args) {\n    const original = this.path.slice(0);\n\n    // First, we slice the path, then call `withPath` and finally reset the path.\n    this.path = this.path.slice(0, args[0]);\n    this.withPath.apply(this, args.slice(1));\n    this.path = original;\n  }\n\n  // Converts the Swagger title and description\n  handleSwaggerInfo() {\n    const {Copy} = this.minim.elements;\n\n    if (this.swagger.info) {\n      this.withPath('info', () => {\n        if (this.swagger.info.title) {\n          this.withPath('title', () => {\n            this.api.title = this.swagger.info.title;\n\n            if (this.generateSourceMap) {\n              this.createSourceMap(this.api.meta.get('title'), this.path);\n            }\n\n            return this.api.meta.get('title');\n          });\n        }\n\n        if (this.swagger.info.description) {\n          this.withPath('description', () => {\n            const description = new Copy(this.swagger.info.description);\n            this.api.content.push(description);\n\n            if (this.generateSourceMap) {\n              this.createSourceMap(description, this.path);\n            }\n\n            return description;\n          });\n        }\n\n        this.handleSwaggerVendorExtensions(this.api, this.swagger.info);\n      });\n    }\n  }\n\n  // Converts the Swagger hostname and schemes to a Refract host metadata entry.\n  handleSwaggerHost() {\n    const {Member: MemberElement} = this.minim.elements;\n\n    if (this.swagger.host) {\n      this.withPath('host', () => {\n        let hostname = this.swagger.host;\n\n        if (this.swagger.schemes) {\n          if (this.swagger.schemes.length > 1) {\n            this.createAnnotation(annotations.DATA_LOST, ['schemes'],\n              'Only the first scheme will be used to create a hostname');\n          }\n\n          hostname = `${this.swagger.schemes[0]}://${hostname}`;\n        }\n\n        const meta = [];\n        const member = new MemberElement('HOST', hostname);\n\n        member.meta.set('classes', ['user']);\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(member, this.path);\n        }\n\n        meta.push(member);\n        this.api.attributes.set('meta', meta);\n\n        return member;\n      });\n    }\n  }\n\n  // Conver api key name into Refract elements\n  apiKeyName(element, apiKey) {\n    const {Member: MemberElement} = this.minim.elements;\n    let config;\n\n    if (apiKey.in === 'query') {\n      config = 'queryParameterName';\n    } else if (apiKey.in === 'header') {\n      config = 'httpHeaderName';\n    }\n\n    const member = new MemberElement(config, apiKey.name);\n\n    if (this.generateSourceMap) {\n      this.createSourceMap(member, this.path.concat(['name']));\n    }\n\n    element.content.push(member);\n  }\n\n  // Convert Oauth2 flow into Refract elements\n  oauthGrantType(element, flow) {\n    const {Member: MemberElement} = this.minim.elements;\n    let grantType = flow;\n\n    if (flow === 'password') {\n      grantType = 'resource owner password credentials';\n    } else if (flow === 'application') {\n      grantType = 'client credentials';\n    } else if (flow === 'accessCode') {\n      grantType = 'authorization code';\n    }\n\n    const member = new MemberElement('grantType', grantType);\n\n    if (this.generateSourceMap) {\n      this.createSourceMap(member, this.path.concat(['flow']));\n    }\n\n    element.content.push(member);\n  }\n\n  // Convert OAuth2 scopes into Refract elements\n  oauthScopes(element, items) {\n    const {Member: MemberElement, Array: ArrayElement, String: StringElement} = this.minim.elements;\n    const scopes = new ArrayElement();\n    let descriptions = null;\n    let scopesList = items;\n\n    if (_.isObject(items) && !_.isArray(items)) {\n      descriptions = Object.values(items);\n      scopesList = Object.keys(items);\n    }\n\n    // If value is not an empty array, then they are scopes\n    _.forEach(scopesList, (scopeName, index) => {\n      const scope = new StringElement(scopeName);\n\n      if (descriptions) {\n        scope.description = descriptions[index];\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(scope.meta.get('description'), this.path.concat([scopeName]));\n        }\n      }\n\n      if (this.generateSourceMap) {\n        const value = descriptions ? scopeName : index;\n        this.createSourceMap(scope, this.path.concat([value]));\n      }\n\n      scopes.content.push(scope);\n    });\n\n    if (scopes.length) {\n      element.content.push(new MemberElement('scopes', scopes));\n    }\n  }\n\n  // Conver OAuth2 transition information into Refract elements\n  oauthTransitions(element, oauth) {\n    const {Transition} = this.minim.elements;\n\n    if (oauth.authorizationUrl) {\n      const transition = new Transition();\n\n      transition.relation = 'authorize';\n      transition.href = oauth.authorizationUrl;\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(transition.attributes.get('href'), this.path.concat(['authorizationUrl']));\n        this.createSourceMap(transition.attributes.get('relation'), this.path.concat(['authorizationUrl']));\n      }\n\n      element.content.push(transition);\n    }\n\n    if (oauth.tokenUrl) {\n      const transition = new Transition();\n\n      transition.relation = 'token';\n      transition.href = oauth.tokenUrl;\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(transition.attributes.get('href'), this.path.concat(['tokenUrl']));\n        this.createSourceMap(transition.attributes.get('relation'), this.path.concat(['tokenUrl']));\n      }\n\n      element.content.push(transition);\n    }\n  }\n\n  // Convert a Swagger auth object into Refract elements.\n  handleSwaggerAuth() {\n    const {Category, AuthScheme} = this.minim.elements;\n    const schemes = [];\n\n    if (this.swagger.securityDefinitions) {\n      _.keys(this.swagger.securityDefinitions).forEach((name) => {\n        this.withPath('securityDefinitions', name, () => {\n          const item = this.swagger.securityDefinitions[name];\n          const element = new AuthScheme();\n\n          switch (item.type) {\n          case 'basic':\n            element.element = 'Basic Authentication Scheme';\n            break;\n\n          case 'apiKey':\n            element.element = 'Token Authentication Scheme';\n            this.apiKeyName(element, item);\n            break;\n\n          case 'oauth2':\n            element.element = 'OAuth2 Scheme';\n            this.oauthGrantType(element, item.flow);\n\n            if (item.scopes) {\n              this.withPath('scopes', () => {\n                this.oauthScopes(element, item.scopes);\n              });\n            }\n\n            this.oauthTransitions(element, item);\n            break;\n\n          default:\n            break;\n          }\n\n          element.id = name;\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(element.meta.get('id'), this.path);\n          }\n\n          if (item['x-summary']) {\n            element.title = item['x-summary'];\n\n            if (this.generateSourceMap) {\n              this.createSourceMap(element.meta.get('title'), this.path.concat(['x-summary']));\n            }\n          }\n\n          if (item.description) {\n            element.description = item.description;\n\n            if (this.generateSourceMap) {\n              this.createSourceMap(element.meta.get('description'), this.path.concat(['description']));\n            }\n          }\n\n          schemes.push(element);\n        });\n      });\n    }\n\n    if (schemes.length) {\n      const category = new Category();\n\n      category.meta.set('classes', ['authSchemes']);\n      category.content = schemes;\n\n      this.api.content.push(category);\n    }\n\n    if (!this.swagger.security) {\n      return;\n    }\n\n    this.handleSwaggerSecurity(this.swagger.security, this.globalSchemes);\n  }\n\n  handleSwaggerSecurity(security, schemes) {\n    const {AuthScheme} = this.minim.elements;\n\n    _.forEach(security, (item, index) => {\n      _.keys(item).forEach((name) => {\n        this.withPath('security', index, name, () => {\n          const element = new AuthScheme();\n\n          // If value is not an empty array, then they are scopes\n          this.oauthScopes(element, item[name]);\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(element, this.path);\n          }\n\n          element.element = name;\n          schemes.push(element);\n        });\n      });\n    });\n  }\n\n  handleSwaggerTransitionAuth(methodValue) {\n    const schemes = [];\n\n    if (!methodValue.security) {\n      return this.globalSchemes;\n    }\n\n    this.handleSwaggerSecurity(methodValue.security, schemes);\n\n    return schemes;\n  }\n\n  // Convert a Swagger path into a Refract resource.\n  handleSwaggerPath(pathValue, href) {\n    const {Copy, Resource} = this.minim.elements;\n    const resource = new Resource();\n\n    this.withPath('paths', href, () => {\n      // Provide users with a way to add a title to a resource in Swagger\n      if (pathValue['x-summary']) {\n        this.withPath('x-summary', () => {\n          resource.title = pathValue['x-summary'];\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(resource.meta.get('title'), this.path);\n          }\n\n          return resource.meta.get('title');\n        });\n      }\n\n      // Provide users a way to add a description to a resource in Swagger\n      if (pathValue['x-description']) {\n        this.withPath('x-description', () => {\n          const resourceDescription = new Copy(pathValue['x-description']);\n          resource.push(resourceDescription);\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(resourceDescription, this.path);\n          }\n\n          return resourceDescription;\n        });\n      }\n\n      if (this.useResourceGroups()) {\n        this.updateResourceGroup(pathValue['x-group-name']);\n      }\n\n      this.group.content.push(resource);\n\n      const pathObjectParameters = pathValue.parameters || [];\n      const resourceHrefVariables = this.createHrefVariables(pathObjectParameters);\n\n      if (resourceHrefVariables) {\n        resource.hrefVariables = resourceHrefVariables;\n      }\n\n      // Set the resource-wide URI template, which can further be overridden\n      // by individual transition URI templates. When creating a transition\n      // below, we *only* set the transition URI template if it differs from\n      // the one we've generated here.\n      resource.href = uriTemplate(this.basePath, href, pathObjectParameters);\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(resource.attributes.get('href'), this.path);\n      }\n\n      // TODO: It should add support for `body` and `formData` parameters as well.\n      if (pathObjectParameters.length > 0) {\n        _.forEach(pathObjectParameters, (parameter, index) => {\n          this.withPath('parameters', index, (path) => {\n            if (parameter.in === 'body') {\n              this.createAnnotation(annotations.DATA_LOST, path,\n                'Path-level body parameters are not yet supported');\n            } else if (parameter.in === 'formData') {\n              this.createAnnotation(annotations.DATA_LOST, path,\n                'Path-level form data parameters are not yet supported');\n            }\n          });\n        });\n      }\n\n      const relevantMethods = _.chain(pathValue)\n        .omit('parameters', '$ref')\n        .omitBy(isExtension)\n        .value();\n\n      // Each path is an object with methods as properties\n      _.forEach(relevantMethods, (methodValue, method) => {\n        this.handleSwaggerMethod(resource, href, pathObjectParameters, methodValue, method);\n      });\n\n      this.handleSwaggerVendorExtensions(resource, pathValue);\n\n      return resource;\n    });\n  }\n\n  // Converts all unknown Swagger vendor extensions from an object into a API Element extension\n  handleSwaggerVendorExtensions(element, object) {\n    const extensions = _.chain(object)\n      .pickBy(isExtension)\n      .omit('x-description', 'x-summary', 'x-group-name')\n      .value();\n\n    if (Object.keys(extensions).length > 0) {\n      const {Link, Extension} = this.minim.elements;\n      const profileLink = new Link();\n      profileLink.relation = 'profile';\n      profileLink.href = 'https://help.apiary.io/profiles/api-elements/vendor-extensions/';\n      const extension = new Extension(extensions);\n      extension.links = [profileLink];\n      element.content.push(extension);\n    }\n  }\n\n  // Convert a Swagger method into a Refract transition.\n  handleSwaggerMethod(resource, href, resourceParameters, methodValue, method) {\n    const {Copy, Transition} = this.minim.elements;\n    const transition = new Transition();\n\n    resource.content.push(transition);\n\n    this.withPath(method, () => {\n      const schemes = this.handleSwaggerTransitionAuth(methodValue);\n\n      if (methodValue.externalDocs) {\n        this.withPath('externalDocs', (path) => {\n          this.createAnnotation(annotations.DATA_LOST, path,\n          'External documentation is not yet supported');\n        });\n      }\n\n      const transitionParameters = methodValue.parameters || [];\n\n      const queryParameters = transitionParameters.filter((parameter) => {\n        return parameter.in === 'query';\n      });\n\n      // Here we generate a URI template specific to this transition. If it\n      // is different from the resource URI template, then we set the\n      // transition's `href` attribute.\n      const hrefForTransition = uriTemplate(this.basePath, href, resourceParameters, queryParameters);\n\n      if (hrefForTransition !== resource.href) {\n        transition.href = hrefForTransition;\n      }\n\n      if (methodValue.summary) {\n        this.withPath('summary', () => {\n          transition.title = methodValue.summary;\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(transition.meta.get('title'), this.path);\n          }\n\n          return transition.meta.get('title');\n        });\n      }\n\n      if (methodValue.description) {\n        this.withPath('description', () => {\n          const description = new Copy(methodValue.description);\n          transition.push(description);\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(description, this.path);\n          }\n\n          return description;\n        });\n      }\n\n      if (methodValue.operationId) {\n        // TODO: Add a source map?\n        transition.id = methodValue.operationId;\n      }\n\n      // For each uriParameter, create an hrefVariable\n      const methodHrefVariables = this.createHrefVariables(transitionParameters);\n      if (methodHrefVariables) {\n        transition.hrefVariables = methodHrefVariables;\n      }\n\n      // Currently, default responses are not supported in API Description format\n      const relevantResponses = _.chain(methodValue.responses)\n        .omit('default')\n        .omitBy(isExtension)\n        .value();\n\n      if (methodValue.responses && methodValue.responses.default) {\n        this.withPath('responses', 'default', (path) => {\n          this.createAnnotation(annotations.DATA_LOST, path,\n            'Default response is not yet supported');\n        });\n      }\n\n      if (_.keys(relevantResponses).length === 0) {\n        if (transitionParameters.filter((p) => p.in === 'body').length) {\n          // Create an empty successful response so that the request/response\n          // pair gets properly generated. In the future we may want to\n          // refactor the code below as this is a little weird.\n          relevantResponses.null = {};\n        } else {\n          this.createTransaction(transition, method, schemes);\n        }\n      }\n\n      // Transactions are created for each response in the document\n      _.forEach(relevantResponses, (responseValue, statusCode) => {\n        this.handleSwaggerResponse(transition, method, methodValue, transitionParameters, responseValue, statusCode, schemes);\n      });\n\n      this.handleSwaggerVendorExtensions(transition, methodValue);\n\n      return transition;\n    });\n  }\n\n  // Convert a Swagger response & status code into Refract transactions.\n  handleSwaggerResponse(transition, method, methodValue, transitionParameters, responseValue, statusCode, schemes) {\n    let examples;\n\n    if (responseValue.examples) {\n      examples = responseValue.examples;\n    } else {\n      // The only way to specify an HTTP method is by creating a transaction,\n      // and according to the Refract spec a transaction *MUST* have a request\n      // and response within it, so here we seed the examples to create a blank\n      // request/response within a new transaction. See:\n      // https://github.com/refractproject/refract-spec/blob/master/namespaces/api-description-namespace.md#http-transaction-element\n      examples = {\n        '': undefined,\n      };\n    }\n\n    examples = _.omit(examples, 'schema');\n\n    _.forEach(examples, (responseBody, contentType) => {\n      const transaction = this.createTransaction(transition, method, schemes);\n\n      this.handleSwaggerExampleRequest(transaction, methodValue, transitionParameters);\n      this.handleSwaggerExampleResponse(transaction, methodValue, responseValue, statusCode, responseBody, contentType);\n    });\n  }\n\n  // Convert a Swagger example into a Refract request.\n  handleSwaggerExampleRequest(transaction, methodValue, transitionParameters) {\n    const {DataStructure, Object: ObjectElement} = this.minim.elements;\n    const request = transaction.request;\n\n    this.withPath(() => {\n      // Body parameters are ones that define JSON Schema\n      const bodyParameters = transitionParameters.filter((parameter) => {\n        return parameter.in === 'body';\n      });\n\n      // Form parameters are send as encoded form data in the body\n      const formParameters = transitionParameters.filter((parameter) => {\n        return parameter.in === 'formData';\n      });\n\n      // Header parameters\n      const headerParameters = transitionParameters.filter((parameter) => {\n        return parameter.in === 'header';\n      });\n\n      // Check if application/json is in consumes\n      const inConsumes = (methodValue.consumes || this.swagger.consumes || []).indexOf(JSON_CONTENT_TYPE) !== -1;\n      const inProduces = (methodValue.produces || this.swagger.produces || []).indexOf(JSON_CONTENT_TYPE) !== -1;\n\n      // Add content-type headers\n      if (inConsumes) {\n        headers.pushHeader('Content-Type', JSON_CONTENT_TYPE, request, this, 'consumes-content-type');\n      }\n\n      if (inProduces) {\n        headers.pushHeader('Accept', JSON_CONTENT_TYPE, request, this, 'produces-accept');\n      }\n\n      _.forEach(headerParameters, (param) => {\n        const index = transitionParameters.indexOf(param);\n\n        this.withPath('parameters', index, () => {\n          headers.pushHeaderObject(param.name, param, request, this);\n        });\n      });\n\n      // Body parameters define request schemas\n      // There can only be 1 body parameter. So, no issues.\n      _.forEach(bodyParameters, (param) => {\n        const index = transitionParameters.indexOf(param);\n\n        if (param['x-example']) {\n          this.withPath('parameters', index, 'x-example', () => {\n            this.createAnnotation(annotations.VALIDATION_ERROR, this.path,\n              'The \\'x-example\\' property isn\\'t allowed for body parameters - use \\'schema.example\\' instead');\n          });\n        }\n\n        this.withPath('parameters', index, 'schema', () => {\n          if (inConsumes) {\n            generator.bodyFromSchema(param.schema, request, this);\n          }\n\n          this.pushSchemaAsset(param.schema, request, this.path);\n        });\n      });\n\n      // Using form parameters instead of body? We will convert those to\n      // data structures and will generate form-urlencoded body.\n      if (formParameters.length) {\n        headers.pushHeader('Content-Type', FORM_CONTENT_TYPE, request, this, 'form-data-content-type');\n\n        // Generating body asset\n        this.generateBodyFromFormParameters(transitionParameters, formParameters, request);\n\n        // Generating data structure\n        const dataStructure = new DataStructure();\n        const dataObject = new ObjectElement(); // a form is essentially an object with key/value members\n\n        _.forEach(formParameters, (param) => {\n          const index = transitionParameters.indexOf(param);\n          this.withPath('parameters', index, () => {\n            const member = this.convertParameterToMember(param, this.path);\n            dataObject.content.push(member);\n          });\n        });\n\n        dataStructure.content = dataObject;\n        request.content.push(dataStructure);\n      }\n\n      return request;\n    });\n  }\n\n  // Generates body asset from formData parameters.\n  generateBodyFromFormParameters(transitionParameters, formParameters, request) {\n    // Preparing throwaway schema. Later we will feed the 'bodyFromSchema'\n    // with it.\n    const schema = {type: 'object', properties: {}, required: []};\n\n    _.forEach(formParameters, (param) => {\n      const index = transitionParameters.indexOf(param);\n      this.withPath('parameters', index, () => {\n        if (param.type === 'array') {\n          this.createAnnotation(annotations.DATA_LOST, this.path,\n            'Arrays in form parameters are not fully supported yet');\n          return;\n        }\n        if (param.type === 'file') {\n          this.createAnnotation(annotations.DATA_LOST, this.path,\n            'Files in form parameters are not fully supported yet');\n          return;\n        }\n        if (param.allowEmptyValue) {\n          this.createAnnotation(annotations.DATA_LOST, this.path,\n            'The allowEmptyValue flag is not fully supported yet');\n        }\n      });\n\n      const paramSchema = _.clone(param);\n\n      // If there's example value, we want to force the body generator\n      // to use it. This is done using 'enum' with a single value.\n      if (param['x-example'] !== undefined) {\n        paramSchema.enum = [param['x-example']];\n      }\n\n      delete paramSchema.name;\n      delete paramSchema.in;\n      delete paramSchema.format;\n      delete paramSchema.required;\n      delete paramSchema['x-example'];\n      delete paramSchema.collectionFormat;\n      delete paramSchema.allowEmptyValue; // allowEmptyValue is not supported yet\n      delete paramSchema.items; // arrays are not supported yet\n\n      schema.properties[param.name] = paramSchema;\n      if (param.required) {\n        schema.required.push(param.name);\n      }\n    });\n    generator.bodyFromSchema(schema, request, this, FORM_CONTENT_TYPE);\n  }\n\n  // Convert a Swagger example into a Refract response.\n  handleSwaggerExampleResponse(transaction, methodValue, responseValue, statusCode, responseBody, contentType) {\n    const {Asset, Copy} = this.minim.elements;\n    const response = transaction.response;\n\n    this.withPath('responses', statusCode, () => {\n      if (responseValue.description) {\n        const description = new Copy(responseValue.description);\n        response.content.push(description);\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(description, this.path.concat(['description']));\n        }\n      }\n\n      if (contentType) {\n        this.withPath('examples', contentType, () => {\n          headers.pushHeader('Content-Type', contentType, response, this);\n        });\n      }\n\n      const inProduces = (methodValue.produces || this.swagger.produces || []).indexOf(JSON_CONTENT_TYPE) !== -1;\n\n      if (inProduces) {\n        headers.pushHeader('Content-Type', JSON_CONTENT_TYPE, response, this, 'produces-content-type');\n      }\n\n      if (responseValue.headers) {\n        this.updateHeaders(response, responseValue.headers);\n      }\n\n      this.withPath('examples', () => {\n        // Responses can have bodies\n        if (responseBody !== undefined) {\n          this.withPath(contentType, () => {\n            let formattedResponseBody = responseBody;\n\n            if (typeof(responseBody) !== 'string') {\n              formattedResponseBody = JSON.stringify(responseBody, null, 2);\n            }\n\n            const bodyAsset = new Asset(formattedResponseBody);\n            bodyAsset.classes.push('messageBody');\n\n            if (this.generateSourceMap) {\n              this.createSourceMap(bodyAsset, this.path);\n            }\n\n            response.content.push(bodyAsset);\n          });\n        }\n\n        // Responses can have schemas in Swagger\n        const schema = responseValue.schema || (responseValue.examples && responseValue.examples.schema);\n\n        if (schema) {\n          let args;\n\n          if (responseValue.examples && responseValue.examples.schema) {\n            args = [5, 'examples', 'schema'];\n          } else {\n            args = [5, 'schema'];\n          }\n\n          this.withSlicedPath.apply(this, args.concat([() => {\n            if (inProduces && responseBody === undefined) {\n              generator.bodyFromSchema(schema, response, this);\n            }\n\n            this.pushSchemaAsset(schema, response, this.path);\n          }]));\n        }\n\n        if (statusCode !== 'null') {\n          response.statusCode = statusCode;\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(response.attributes.get('statusCode'), this.path.slice(0, -1));\n          }\n        }\n      });\n\n\n      this.handleSwaggerVendorExtensions(response, responseValue);\n\n      return response;\n    });\n  }\n\n  // Takes in an `payload` element and a list of Swagger headers. Adds\n  // the Swagger headers to the headers element in the payload\n  updateHeaders(payload, httpHeaders) {\n    for (const headerName in httpHeaders) {\n      if (httpHeaders.hasOwnProperty(headerName)) {\n        /* eslint-disable no-loop-func */\n        this.withPath('headers', headerName, () => {\n          headers.pushHeaderObject(headerName, httpHeaders[headerName], payload, this);\n        });\n        /* eslint-enable no-loop-func */\n      }\n    }\n  }\n\n  // Test whether tags can be treated as resource groups, and if so it sets a\n  // group name for each resource (used later to create groups).\n  useResourceGroups() {\n    const tags = [];\n\n    if (this.swagger.paths) {\n      _.forEach(this.swagger.paths, (path) => {\n        let tag = null;\n\n        if (path) {\n          const operations = _.omitBy(path, isExtension);\n\n          _.forEach(operations, (operation) => {\n            if (operation.tags && operation.tags.length) {\n              if (operation.tags.length > 1) {\n                // Too many tags... each resource can only be in one group!\n                return false;\n              }\n\n              if (tag === null) {\n                tag = operation.tags[0];\n              } else if (tag !== operation.tags[0]) {\n                // Non-matching tags... can't have a resource in multiple groups!\n                return false;\n              }\n            }\n          });\n        }\n\n        if (tag) {\n          path['x-group-name'] = tag;\n          tags.push(tag);\n        }\n      });\n    }\n\n    return tags.length > 0;\n  }\n\n  // Update the current group by either selecting or creating it.\n  updateResourceGroup(name) {\n    const {Category, Copy} = this.minim.elements;\n\n    if (name) {\n      this.group = this.api.find((el) => el.element === 'category' && el.classes.contains('resourceGroup') && el.title === name).first();\n\n      if (!this.group) {\n        // TODO: Source maps for these groups. The problem is that the location\n        // may not always make sense. Do we point to the tag description,\n        // the resource, or the transition?\n        this.group = new Category();\n        this.group.title = name;\n        this.group.classes.push('resourceGroup');\n\n        if (this.swagger.tags && _.isArray(this.swagger.tags)) {\n          _.forEach(this.swagger.tags, (tag) => {\n            // TODO: Check for external docs here?\n            if (tag.name === name && tag.description) {\n              this.group.content.push(new Copy(tag.description));\n            }\n          });\n        }\n\n        this.api.content.push(this.group);\n      }\n    }\n  }\n\n  // Convert a Swagger parameter into a Refract element.\n  convertParameterToElement(parameter, path, setAttributes = false) {\n    const {\n      Array: ArrayElement, Boolean: BooleanElement, Number: NumberElement,\n      String: StringElement,\n    } = this.minim.elements;\n\n    let element;\n    let Type;\n\n    // Convert from Swagger types to Minim elements\n    if (parameter.type === 'string') {\n      Type = StringElement;\n    } else if (parameter.type === 'integer' || parameter.type === 'number') {\n      Type = NumberElement;\n    } else if (parameter.type === 'boolean') {\n      Type = BooleanElement;\n    } else if (parameter.type === 'array') {\n      Type = ArrayElement;\n    } else {\n      // Default to a string in case we get a type we haven't seen\n      Type = StringElement;\n    }\n\n    if (parameter.enum) {\n      element = new ArrayElement();\n      element.element = 'enum';\n\n      _.forEach(parameter.enum, (value, index) => {\n        const e = new Type();\n        e.content = value;\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(e, path.concat('enum', index));\n        }\n\n        element.content.push(e);\n      });\n\n      if (parameter['x-example'] !== undefined) {\n        const sampleElement = new Type();\n        sampleElement.content = parameter['x-example'];\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(sampleElement, path.concat(['x-example']));\n        }\n\n        const samplesElement = new ArrayElement();\n        samplesElement.content.push(sampleElement);\n\n        const e = new ArrayElement();\n        e.content.push(samplesElement);\n\n        element.attributes.set('samples', e);\n      }\n    } else {\n      element = new Type();\n\n      if (parameter['x-example'] !== undefined) {\n        element.content = parameter['x-example'];\n      }\n    }\n\n    // If there is a default, it is set on the member value instead of the member\n    // element itself because the default value applies to the value.\n    if (parameter.default) {\n      let e;\n\n      if (parameter.enum) {\n        e = new ArrayElement();\n        const defaultElement = new Type();\n        defaultElement.content = parameter.default;\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(defaultElement, path.concat(['default']));\n        }\n\n        e.content.push(defaultElement);\n      } else {\n        e = new Type();\n\n        if (parameter.type === 'array') {\n          const defaultElement = this.convertParameterToElement(parameter.items, (path || []).concat(['items']), true);\n          defaultElement.content = parameter.default;\n\n          e.content.push(defaultElement);\n        } else {\n          e.content = parameter.default;\n\n          if (this.generateSourceMap) {\n            this.createSourceMap(e, path.concat(['default']));\n          }\n        }\n      }\n\n      element.attributes.set('default', e);\n    }\n\n    if (parameter.type === 'array' && parameter.items) {\n      element.content = [this.convertParameterToElement(parameter.items, (path || []).concat(['items']), true)];\n    }\n\n    if (this.generateSourceMap) {\n      this.createSourceMap(element, path);\n    }\n\n    if (setAttributes) {\n      if (parameter.description) {\n        element.description = parameter.description;\n\n        if (this.generateSourceMap) {\n          this.createSourceMap(element.meta.get('description'), path.concat(['description']));\n        }\n      }\n\n      if (parameter.required) {\n        element.attributes.set('typeAttributes', ['required']);\n      }\n\n      if (parameter.default !== undefined) {\n        element.attributes.set('default', parameter.default);\n      }\n    }\n\n    return element;\n  }\n\n  // Convert a Swagger parameter into a Refract member element for use in an\n  // object element (or subclass).\n  convertParameterToMember(parameter, path = this.path) {\n    const MemberElement = this.minim.getElementClass('member');\n    const memberValue = this.convertParameterToElement(parameter, path);\n\n    // TODO: Update when Minim has better support for elements as values\n    // should be: new MemberType(parameter.name, memberValue);\n    const member = new MemberElement(parameter.name);\n    member.content.value = memberValue;\n\n    if (this.generateSourceMap) {\n      this.createSourceMap(member, path);\n    }\n\n    if (parameter.description) {\n      member.description = parameter.description;\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(member.meta.get('description'), path.concat(['description']));\n      }\n    }\n\n    if (parameter.required) {\n      member.attributes.set('typeAttributes', ['required']);\n    }\n\n    return member;\n  }\n\n  // Make a new source map for the given element\n  createSourceMap(element, path) {\n    if (this.ast) {\n      const SourceMap = this.minim.getElementClass('sourceMap');\n      const position = this.ast.getPosition(path);\n\n      if (position && !isNaN(position.start) && !isNaN(position.end)) {\n        element.attributes.set('sourceMap', [\n          new SourceMap([[position.start, position.end - position.start]]),\n        ]);\n      }\n    }\n  }\n\n  // Make a new annotation for the given path and message\n  createAnnotation(info, path, message) {\n    const {Annotation} = this.minim.elements;\n\n    const annotation = new Annotation(message);\n    annotation.classes.push(info.type);\n    annotation.code = info.code;\n\n    this.result.content.push(annotation);\n\n    if (info.fragment) {\n      link.origin(info.fragment, annotation, this);\n    }\n\n    if (path && this.ast) {\n      this.createSourceMap(annotation, path);\n    }\n\n    return annotation;\n  }\n\n  // Create a new HrefVariables element from a parameter list. Returns either\n  // the new HrefVariables element or `undefined`.\n  createHrefVariables(params) {\n    const {HrefVariables} = this.minim.elements;\n    const hrefVariables = new HrefVariables();\n\n    _.forEach(params, (parameter, index) => {\n      this.withPath('parameters', index, () => {\n        let member;\n\n        if (parameter.in === 'query' || parameter.in === 'path') {\n          member = this.convertParameterToMember(parameter);\n          hrefVariables.content.push(member);\n        }\n\n        return member;\n      });\n    });\n\n    return hrefVariables.length ? hrefVariables : undefined;\n  }\n\n  // Create a Refract asset element containing JSON Schema and push into payload\n  pushSchemaAsset(schema, payload, path) {\n    let actualSchema = _.omit(schema, ['discriminator', 'readOnly', 'xml', 'externalDocs', 'example']);\n    actualSchema = _.omitBy(actualSchema, isExtension);\n\n    try {\n      const Asset = this.minim.getElementClass('asset');\n      const schemaAsset = new Asset(JSON.stringify(actualSchema));\n\n      schemaAsset.classes.push('messageBodySchema');\n      schemaAsset.contentType = 'application/schema+json';\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(schemaAsset, path);\n      }\n\n      payload.content.push(schemaAsset);\n    } catch (exception) {\n      this.createAnnotation(annotations.DATA_LOST, path,\n        ('Circular references in schema are not yet supported'));\n    }\n  }\n\n  // Create a new Refract transition element with a blank request and response.\n  createTransaction(transition, method, schemes) {\n    const {HttpRequest, HttpResponse, HttpTransaction} = this.minim.elements;\n    const transaction = new HttpTransaction();\n    transaction.content = [new HttpRequest(), new HttpResponse()];\n\n    if (transition) {\n      transition.content.push(transaction);\n    }\n\n    if (method) {\n      transaction.request.method = method.toUpperCase();\n\n      if (this.generateSourceMap) {\n        this.createSourceMap(transaction.request.attributes.get('method'), this.path);\n      }\n    }\n\n    if (schemes.length) {\n      transaction.attributes.set('authSchemes', schemes);\n    }\n\n    return transaction;\n  }\n}\n"]}
##############################################
/src/lib/parser.js-397-  }, {
/src/lib/parser.js:398:    key: 'apiKeyName',
/src/lib/parser.js:399:    value: function apiKeyName(element, apiKey) {
/src/lib/parser.js-400-      var MemberElement = this.minim.elements.Member;
##############################################
/src/lib/parser.js-403-
/src/lib/parser.js:404:      if (apiKey['in'] === 'query') {
/src/lib/parser.js-405-        config = 'queryParameterName';
/src/lib/parser.js:406:      } else if (apiKey['in'] === 'header') {
/src/lib/parser.js-407-        config = 'httpHeaderName';
##############################################
/src/lib/parser.js-409-
/src/lib/parser.js:410:      var member = new MemberElement(config, apiKey.name);
/src/lib/parser.js-411-
##############################################
/src/lib/parser.js-546-
/src/lib/parser.js:547:              case 'apiKey':
/src/lib/parser.js-548-                element.element = 'Token Authentication Scheme';
/src/lib/parser.js:549:                _this5.apiKeyName(element, item);
/src/lib/parser.js-550-                break;
