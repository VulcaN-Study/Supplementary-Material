/src/README.md-54-var openwhisk = require('openwhisk');
/src/README.md:55:var options = {apihost: 'openwhisk.ng.bluemix.net', api_key: '...'};
/src/README.md-56-var ow = openwhisk(options);
##############################################
/src/README.md-64-- **apihost.** Hostname and optional port for openwhisk platform, e.g. `openwhisk.ng.bluemix.net` or `my_whisk_host:80`. Used with API URL template `${protocol}://${apihost}/api/v1/`. If port is missing or port value is 443 in the apihost string, protocol is HTTPS. Otherwise, protocol is HTTP.
/src/README.md:65:- **api_key.** Authorisation key for user account registered with OpenWhisk platform.
/src/README.md-66-
##############################################
/src/README.md-75-
/src/README.md:76:Client constructor will read values for the `apihost`, `namespace` and `api_key` options from the environment if the following parameters are set. Explicit parameter values override these values.
/src/README.md-77-
##############################################
/src/README.md-79-- *\_\_OW_NAMESPACE__*
/src/README.md:80:- *__OW_API_KEY*
/src/README.md-81-
##############################################
/src/lib/client.js-13-  parse_options (options) {
/src/lib/client.js:14:    const api_key = options.api_key || process.env['__OW_API_KEY']
/src/lib/client.js-15-    const ignore_certs = options.ignore_certs || false
##############################################
/src/lib/client.js-19-
/src/lib/client.js:20:    if (!api_key) {
/src/lib/client.js:21:      throw new Error(`${messages.INVALID_OPTIONS_ERROR} Missing api_key parameter.`)
/src/lib/client.js-22-    } else if (!api) {
##############################################
/src/lib/client.js-25-
/src/lib/client.js:26:    return {api_key, api, ignore_certs}
/src/lib/client.js-27-  }
##############################################
/src/lib/client.js-70-  auth_header () {
/src/lib/client.js:71:    const api_key_base64 = new Buffer(this.options.api_key).toString('base64')
/src/lib/client.js:72:    return `Basic ${api_key_base64}`
/src/lib/client.js-73-  }
##############################################
/src/lib/routes.js-57-      backendUrl: this.action_url_path(id, namespace),
/src/lib/routes.js:58:      authkey: this.client.options.api_key
/src/lib/routes.js-59-    }
##############################################
/src/lib/feeds.js-58-      lifecycleEvent: event,
/src/lib/feeds.js:59:      authKey: this.client.options.api_key,
/src/lib/feeds.js-60-      triggerName: this.trigger_name(options)
##############################################
/src/test/unit/client.test.js-6-test('should use default constructor options', t => {
/src/test/unit/client.test.js:7:  const client = new Client({api_key: 'aaa', apihost: 'my_host'})
/src/test/unit/client.test.js-8-  t.false(client.options.ignore_certs)
/src/test/unit/client.test.js:9:  t.is(client.options.api_key, 'aaa')
/src/test/unit/client.test.js-10-  t.is(client.options.api, 'https://my_host/api/v1/')
##############################################
/src/test/unit/client.test.js-13-test('should support explicit constructor options', t => {
/src/test/unit/client.test.js:14:  const client = new Client({ignore_certs: true, api_key: 'aaa', api: 'my_host'})
/src/test/unit/client.test.js-15-  t.is(client.options.api, 'my_host')
##############################################
/src/test/unit/client.test.js-19-test('should use environment parameters for options if not set explicitly.', t => {
/src/test/unit/client.test.js:20:  process.env['__OW_API_KEY'] = 'some_user:some_pass'
/src/test/unit/client.test.js-21-  process.env['__OW_API_HOST'] = 'mywhiskhost'
/src/test/unit/client.test.js-22-  const client = new Client()
/src/test/unit/client.test.js:23:  t.is(client.options.api_key, process.env['__OW_API_KEY'])
/src/test/unit/client.test.js-24-  t.is(client.options.api, 'https://mywhiskhost/api/v1/')
/src/test/unit/client.test.js:25:  delete process.env['__OW_API_KEY']
/src/test/unit/client.test.js-26-  delete process.env['__OW_API_HOST']
##############################################
/src/test/unit/client.test.js-29-test('should use options for parameters even if environment parameters are available.', t => {
/src/test/unit/client.test.js:30:  process.env['__OW_API_KEY'] = 'some_user:some_pass'
/src/test/unit/client.test.js-31-  process.env['__OW_API_HOST'] = 'mywhiskhost'
/src/test/unit/client.test.js:32:  const client = new Client({apihost: 'openwhisk', api_key: 'mykey'})
/src/test/unit/client.test.js:33:  t.is(client.options.api_key, 'mykey')
/src/test/unit/client.test.js-34-  t.is(client.options.api, 'https://openwhisk/api/v1/')
/src/test/unit/client.test.js:35:  delete process.env['__OW_API_KEY']
/src/test/unit/client.test.js-36-  delete process.env['__OW_API_HOST']
##############################################
/src/test/unit/client.test.js-39-test('should throw error when missing API key option.', t => {
/src/test/unit/client.test.js:40:  t.throws(() => new Client({api: true}), /Missing api_key parameter./)
/src/test/unit/client.test.js-41-})
##############################################
/src/test/unit/client.test.js-43-test('should throw error when missing both API and API Host options.', t => {
/src/test/unit/client.test.js:44:  t.throws(() => new Client({api_key: true}), /Missing either api or apihost parameters/)
/src/test/unit/client.test.js-45-})
##############################################
/src/test/unit/client.test.js-47-test('should handle multiple api parameter formats', t => {
/src/test/unit/client.test.js:48:  const client = new Client({api_key: true, apihost: 'blah'})
/src/test/unit/client.test.js-49-  t.is(client.url_from_apihost('my_host'), 'https://my_host/api/v1/')
##############################################
/src/test/unit/client.test.js-54-test('should return default request parameters without options', t => {
/src/test/unit/client.test.js:55:  const client = new Client({api_key: 'username:password', apihost: 'blah'})
/src/test/unit/client.test.js-56-  const METHOD = 'get'
##############################################
/src/test/unit/client.test.js-67-test('should return request parameters with merged options', t => {
/src/test/unit/client.test.js:68:  const client = new Client({api_key: 'username:password', apihost: 'blah'})
/src/test/unit/client.test.js-69-  const METHOD = 'get'
##############################################
/src/test/unit/client.test.js-83-test('should return request parameters with explicit api option', t => {
/src/test/unit/client.test.js:84:  const client = new Client({api_key: 'username:password', api: 'https://api.com/api/v1'})
/src/test/unit/client.test.js-85-  const METHOD = 'get'
##############################################
/src/test/unit/client.test.js-94-test('should generate auth header from API key', t => {
/src/test/unit/client.test.js:95:  const api_key = 'some sample api key'
/src/test/unit/client.test.js:96:  const client = new Client({api: true, api_key: api_key})
/src/test/unit/client.test.js:97:  t.is(client.auth_header(), `Basic ${new Buffer(api_key).toString('base64')}`)
/src/test/unit/client.test.js-98-})
##############################################
/src/test/unit/client.test.js-100-test('should throw errors for HTTP response failures', t => {
/src/test/unit/client.test.js:101:  const client = new Client({api_key: true, api: true})
/src/test/unit/client.test.js-102-  t.throws(() => client.handle_errors({statusCode: 400}), /invalid request/)
##############################################
/src/test/unit/client.test.js-115-test('should throw errors for non-HTTP response failures', t => {
/src/test/unit/client.test.js:116:  const client = new Client({api_key: true, api: true})
/src/test/unit/client.test.js-117-  t.throws(() => client.handle_errors({message: 'error message'}), /error message/)
##############################################
/src/test/unit/feeds.test.js-7-  const feed_name = 'feed_name'
/src/test/unit/feeds.test.js:8:  const api_key = 'username:password'
/src/test/unit/feeds.test.js-9-  const trigger_name = '/trigger_ns/trigger_name'
/src/test/unit/feeds.test.js-10-  const client = {}
/src/test/unit/feeds.test.js:11:  client.options = { api_key } 
/src/test/unit/feeds.test.js-12-
##############################################
/src/test/unit/feeds.test.js-19-    t.deepEqual(options.qs, {blocking: true})
/src/test/unit/feeds.test.js:20:    t.deepEqual(options.body, {authKey: client.options.api_key, lifecycleEvent: 'DELETE', triggerName: `${trigger_name}`})
/src/test/unit/feeds.test.js-21-  }
##############################################
/src/test/unit/feeds.test.js-29-  const feed_name = 'feed_name'
/src/test/unit/feeds.test.js:30:  const api_key = 'username:password'
/src/test/unit/feeds.test.js-31-  const trigger_name = 'trigger_name'
/src/test/unit/feeds.test.js-32-  const client = {}
/src/test/unit/feeds.test.js:33:  client.options = { api_key } 
/src/test/unit/feeds.test.js-34-
##############################################
/src/test/unit/feeds.test.js-41-    t.deepEqual(options.qs, {blocking: true})
/src/test/unit/feeds.test.js:42:    t.deepEqual(options.body, {foo: 'bar', authKey: client.options.api_key, lifecycleEvent: 'DELETE', triggerName: `/_/${trigger_name}`})
/src/test/unit/feeds.test.js-43-  }
##############################################
/src/test/unit/feeds.test.js-52-  const feed_name = 'feed_name'
/src/test/unit/feeds.test.js:53:  const api_key = 'username:password'
/src/test/unit/feeds.test.js-54-  const trigger_name = '/trigger_ns/trigger_name'
/src/test/unit/feeds.test.js-55-  const client = {}
/src/test/unit/feeds.test.js:56:  client.options = { api_key } 
/src/test/unit/feeds.test.js-57-
##############################################
/src/test/unit/feeds.test.js-64-    t.deepEqual(options.qs, {blocking: true})
/src/test/unit/feeds.test.js:65:    t.deepEqual(options.body, {authKey: client.options.api_key, lifecycleEvent: 'CREATE', triggerName: `${trigger_name}`})
/src/test/unit/feeds.test.js-66-  }
##############################################
/src/test/unit/feeds.test.js-74-  const feed_name = 'feed_name'
/src/test/unit/feeds.test.js:75:  const api_key = 'username:password'
/src/test/unit/feeds.test.js-76-  const trigger_name = 'trigger_name'
/src/test/unit/feeds.test.js-77-  const client = {}
/src/test/unit/feeds.test.js:78:  client.options = { api_key } 
/src/test/unit/feeds.test.js-79-
##############################################
/src/test/unit/feeds.test.js-86-    t.deepEqual(options.qs, {blocking: true})
/src/test/unit/feeds.test.js:87:    t.deepEqual(options.body, {foo: 'bar', authKey: client.options.api_key, lifecycleEvent: 'CREATE', triggerName: `/_/${trigger_name}`})
/src/test/unit/feeds.test.js-88-  }
##############################################
/src/test/unit/routes.test.js-76-  const path_url = path => `https://openwhisk.ng.bluemix.net/api/v1/${path}`
/src/test/unit/routes.test.js:77:  const api_key = 'username:password'
/src/test/unit/routes.test.js:78:  const client_options = { api_key }
/src/test/unit/routes.test.js-79-  const client = { path_url, options: client_options }
##############################################
/src/test/unit/routes.test.js-94-        backendUrl: 'https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/helloAction',
/src/test/unit/routes.test.js:95:        authkey: api_key }
/src/test/unit/routes.test.js-96-    }
##############################################
/src/test/unit/routes.test.js-111-  const path_url = path => `https://openwhisk.ng.bluemix.net/api/v1/${path}`
/src/test/unit/routes.test.js:112:  const api_key = 'username:password'
/src/test/unit/routes.test.js:113:  const client_options = { api_key }
/src/test/unit/routes.test.js-114-  const client = { path_url, options: client_options }
##############################################
/src/test/unit/routes.test.js-129-        backendUrl: 'https://openwhisk.ng.bluemix.net/api/v1/namespaces/_/actions/helloAction',
/src/test/unit/routes.test.js:130:        authkey: api_key }
/src/test/unit/routes.test.js-131-    }
##############################################
/src/test/unit/routes.test.js-146-  const path_url = path => `https://openwhisk.ng.bluemix.net/api/v1/${path}`
/src/test/unit/routes.test.js:147:  const api_key = 'username:password'
/src/test/unit/routes.test.js:148:  const client_options = { api_key }
/src/test/unit/routes.test.js-149-  const client = { path_url, options: client_options }
##############################################
/src/test/unit/routes.test.js-164-        backendUrl: 'https://openwhisk.ng.bluemix.net/api/v1/namespaces/test/actions/foo/helloAction',
/src/test/unit/routes.test.js:165:        authkey: api_key }
/src/test/unit/routes.test.js-166-    }
##############################################
/src/test/unit/routes.test.js-181-  const path_url = path => `https://openwhisk.ng.bluemix.net/api/v1/${path}`
/src/test/unit/routes.test.js:182:  const api_key = 'username:password'
/src/test/unit/routes.test.js:183:  const client_options = { api_key }
/src/test/unit/routes.test.js-184-  const client = { path_url, options: client_options }
##############################################
/src/test/unit/routes.test.js-199-        backendUrl: 'https://openwhisk.ng.bluemix.net/api/v1/namespaces/test/actions/helloAction',
/src/test/unit/routes.test.js:200:        authkey: api_key }
/src/test/unit/routes.test.js-201-    }
##############################################
/src/test/integration/actions.test.js-7-
/src/test/integration/actions.test.js:8:const API_KEY = process.env.OW_API_KEY
/src/test/integration/actions.test.js-9-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/actions.test.js-11-
/src/test/integration/actions.test.js:12:if (!API_KEY) {
/src/test/integration/actions.test.js:13:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/actions.test.js-14-}
##############################################
/src/test/integration/actions.test.js-24-test('list all actions using default namespace', t => {
/src/test/integration/actions.test.js:25:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/actions.test.js-26-
##############################################
/src/test/integration/actions.test.js-40-test('list all actions using options namespace', t => {
/src/test/integration/actions.test.js:41:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/actions.test.js-42-
##############################################
/src/test/integration/actions.test.js-56-test('create, get and delete an action', t => {
/src/test/integration/actions.test.js:57:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/actions.test.js-58-
##############################################
/src/test/integration/actions.test.js-79-test('create and update an action', t => {
/src/test/integration/actions.test.js:80:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/actions.test.js-81-
##############################################
/src/test/integration/actions.test.js-101-test('invoke action with fully-qualified name', t => {
/src/test/integration/actions.test.js:102:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/actions.test.js-103-
##############################################
/src/test/integration/actions.test.js-117-test('create, invoke and remove package action', t => {
/src/test/integration/actions.test.js:118:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/actions.test.js-119-
##############################################
/src/test/integration/activations.test.js-6-
/src/test/integration/activations.test.js:7:const API_KEY = process.env.OW_API_KEY
/src/test/integration/activations.test.js-8-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/activations.test.js-10-
/src/test/integration/activations.test.js:11:if (!API_KEY) {
/src/test/integration/activations.test.js:12:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/activations.test.js-13-}
##############################################
/src/test/integration/activations.test.js-23-test('list all activations', t => {
/src/test/integration/activations.test.js:24:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/activations.test.js-25-
##############################################
/src/test/integration/activations.test.js-37-test('retrieve individual activations', t => {
/src/test/integration/activations.test.js:38:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/activations.test.js-39-
##############################################
/src/test/integration/activations.test.js-50-test('retrieve individual activation logs', t => {
/src/test/integration/activations.test.js:51:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/activations.test.js-52-
##############################################
/src/test/integration/activations.test.js-63-test('retrieve individual activation result', t => {
/src/test/integration/activations.test.js:64:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/activations.test.js-65-
##############################################
/src/test/integration/README.md-5-
/src/test/integration/README.md:6:    export OW_API_KEY=<your api key>
/src/test/integration/README.md-7-    export OW_API_URL=<openwhisk API url>
##############################################
/src/test/integration/rules.test.js-7-
/src/test/integration/rules.test.js:8:const API_KEY = process.env.OW_API_KEY
/src/test/integration/rules.test.js-9-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/rules.test.js-11-
/src/test/integration/rules.test.js:12:if (!API_KEY) {
/src/test/integration/rules.test.js:13:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/rules.test.js-14-}
##############################################
/src/test/integration/rules.test.js-24-test('list all rules using default namespace', t => {
/src/test/integration/rules.test.js:25:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/rules.test.js-26-
##############################################
/src/test/integration/rules.test.js-40-test('list all rules using options namespace', t => {
/src/test/integration/rules.test.js:41:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/rules.test.js-42-
##############################################
/src/test/integration/rules.test.js-57-test.serial('create, get and delete a rule', t => {
/src/test/integration/rules.test.js:58:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/rules.test.js-59-
##############################################
/src/test/integration/rules.test.js-85-test.serial('create and update a rule', t => {
/src/test/integration/rules.test.js:86:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/rules.test.js-87-
##############################################
/src/test/integration/triggers.test.js-6-
/src/test/integration/triggers.test.js:7:const API_KEY = process.env.OW_API_KEY
/src/test/integration/triggers.test.js-8-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/triggers.test.js-10-
/src/test/integration/triggers.test.js:11:if (!API_KEY) {
/src/test/integration/triggers.test.js:12:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/triggers.test.js-13-}
##############################################
/src/test/integration/triggers.test.js-23-test('list all triggers using default namespace', t => {
/src/test/integration/triggers.test.js:24:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/triggers.test.js-25-
##############################################
/src/test/integration/triggers.test.js-39-test('list all triggers using options namespace', t => {
/src/test/integration/triggers.test.js:40:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/triggers.test.js-41-
##############################################
/src/test/integration/triggers.test.js-55-test('create, get and delete an trigger', t => {
/src/test/integration/triggers.test.js:56:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/triggers.test.js-57-
##############################################
/src/test/integration/triggers.test.js-80-test('create and update an trigger', t => {
/src/test/integration/triggers.test.js:81:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/triggers.test.js-82-
##############################################
/src/test/integration/triggers.test.js-103-test('fire a trigger', t => {
/src/test/integration/triggers.test.js:104:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/triggers.test.js-105-
##############################################
/src/test/integration/namespaces.test.js-6-
/src/test/integration/namespaces.test.js:7:const API_KEY = process.env.OW_API_KEY
/src/test/integration/namespaces.test.js-8-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/namespaces.test.js-10-
/src/test/integration/namespaces.test.js:11:if (!API_KEY) {
/src/test/integration/namespaces.test.js:12:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/namespaces.test.js-13-}
##############################################
/src/test/integration/namespaces.test.js-23-test('list all namespaces', t => {
/src/test/integration/namespaces.test.js:24:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/namespaces.test.js-25-
##############################################
/src/test/integration/namespaces.test.js-36-test('retrieve individual namespaces', t => {
/src/test/integration/namespaces.test.js:37:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/namespaces.test.js-38-
##############################################
/src/test/integration/packages.test.js-6-
/src/test/integration/packages.test.js:7:const API_KEY = process.env.OW_API_KEY
/src/test/integration/packages.test.js-8-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/packages.test.js-10-
/src/test/integration/packages.test.js:11:if (!API_KEY) {
/src/test/integration/packages.test.js:12:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/packages.test.js-13-}
##############################################
/src/test/integration/packages.test.js-23-test('list all packages using default namespace', t => {
/src/test/integration/packages.test.js:24:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/packages.test.js-25-
##############################################
/src/test/integration/packages.test.js-39-test('list all packages using options namespace', t => {
/src/test/integration/packages.test.js:40:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/packages.test.js-41-
##############################################
/src/test/integration/packages.test.js-55-test('create, get and delete an package', t => {
/src/test/integration/packages.test.js:56:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/packages.test.js-57-
##############################################
/src/test/integration/packages.test.js-78-test('create and update an package', t => {
/src/test/integration/packages.test.js:79:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/packages.test.js-80-
##############################################
/src/test/integration/feeds.test.js-7-
/src/test/integration/feeds.test.js:8:const API_KEY = process.env.OW_API_KEY
/src/test/integration/feeds.test.js-9-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/feeds.test.js-11-
/src/test/integration/feeds.test.js:12:if (!API_KEY) {
/src/test/integration/feeds.test.js:13:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/feeds.test.js-14-}
##############################################
/src/test/integration/feeds.test.js-24-test('create and delete a feed', t => {
/src/test/integration/feeds.test.js:25:  const params = {api: API_URL, api_key: API_KEY, namespace: NAMESPACE}
/src/test/integration/feeds.test.js-26-
##############################################
/src/test/integration/routes.test.js-7-
/src/test/integration/routes.test.js:8:const API_KEY = process.env.OW_API_KEY
/src/test/integration/routes.test.js-9-const API_URL = process.env.OW_API_URL
##############################################
/src/test/integration/routes.test.js-11-
/src/test/integration/routes.test.js:12:if (!API_KEY) {
/src/test/integration/routes.test.js:13:  throw new Error('Missing OW_API_KEY environment parameter')
/src/test/integration/routes.test.js-14-}
##############################################
/src/test/integration/routes.test.js-24-test('create, retrieve and delete action route', t => {
/src/test/integration/routes.test.js:25:  const params = {api: API_URL, api_key: API_KEY}
/src/test/integration/routes.test.js-26-
