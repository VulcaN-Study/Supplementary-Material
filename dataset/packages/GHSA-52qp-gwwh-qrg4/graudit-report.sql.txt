/src/lib/tasks/mysql/restore-theme-config.js-25-        const themeKeys = Object.keys(themes[0]);
/src/lib/tasks/mysql/restore-theme-config.js:26:        await mysqlConnection.query('delete from theme;');
/src/lib/tasks/mysql/restore-theme-config.js-27-
##############################################
/src/lib/tasks/mysql/connect-to-mysql.js-20-            try {
/src/lib/tasks/mysql/connect-to-mysql.js:21:                const connection = await mysql.createConnection({
/src/lib/tasks/mysql/connect-to-mysql.js-22-                    host: 'localhost',
##############################################
/src/lib/tasks/mysql/dump-theme-config.js-9-
/src/lib/tasks/mysql/dump-theme-config.js:10:        const [themes] = await mysqlConnection.query('select * from theme;');
/src/lib/tasks/mysql/dump-theme-config.js-11-        if (themes.length === 0) {
##############################################
/src/lib/tasks/mysql/dump-theme-config.js-14-
/src/lib/tasks/mysql/dump-theme-config.js:15:        const [themeIdConfig] = await mysqlConnection.query('select * from core_config_data where path = \'design/theme/theme_id\';');
/src/lib/tasks/mysql/dump-theme-config.js-16-        if (themeIdConfig.length !== 0) {
##############################################
/src/lib/util/portscanner.js-69-
/src/lib/util/portscanner.js:70:    socket.connect(port, host);
/src/lib/util/portscanner.js-71-});
##############################################
/src/lib/util/wait-for-it.js-4-const connectToHostPort = ({ host, port }) => new Promise((resolve, reject) => {
/src/lib/util/wait-for-it.js:5:    const socket = net.createConnection({ host, port, timeout: 15 * 1000 });
/src/lib/util/wait-for-it.js-6-
