/src/src/bridge.ts-546-        if (typeof this.opts.registration === "string") {
/src/src/bridge.ts:547:            const regObj = yaml.load(await fs.readFile(this.opts.registration, 'utf8'));
/src/src/bridge.ts-548-            if (typeof regObj !== "object") {
##############################################
/src/examples/slack-starter/src/index.ts-29-
/src/examples/slack-starter/src/index.ts:30:http.createServer(function (request, response) {
/src/examples/slack-starter/src/index.ts-31-    console.log(request.method + " " + request.url);
##############################################
/src/examples/slack-starter/src/index.ts-38-    request.on("end", function () {
/src/examples/slack-starter/src/index.ts:39:        const params = querystring.parse(body);
/src/examples/slack-starter/src/index.ts-40-        if (params.user_id !== "USLACKBOT") {
##############################################
/src/HOWTO.md-41-
/src/HOWTO.md:42:http.createServer(function(request, response) {
/src/HOWTO.md-43-    console.log(request.method + " " + request.url);
##############################################
/src/HOWTO.md-149-request.on("end", function() {
/src/HOWTO.md:150:    const params = qs.parse(body);
/src/HOWTO.md-151-    if (params.user_id !== "USLACKBOT") {
##############################################
/src/HOWTO.md-219-
/src/HOWTO.md:220:http.createServer(function(request, response) {
/src/HOWTO.md-221-    console.log(request.method + " " + request.url);
##############################################
/src/HOWTO.md-228-    request.on("end", function() {
/src/HOWTO.md:229:        const params = qs.parse(body);
/src/HOWTO.md-230-        if (params.user_id !== "USLACKBOT") {
##############################################
/src/spec/integ/cli.spec.js-30-    const filePath = path.join(tempDir, filename);
/src/spec/integ/cli.spec.js:31:    await fs.writeFile(filePath, JSON.stringify(content), "utf-8");
/src/spec/integ/cli.spec.js-32-    return filePath;
##############################################
/src/spec/integ/cli.spec.js-36-    const filePath = path.join(tempDir, "config.yaml");
/src/spec/integ/cli.spec.js:37:    await fs.writeFile(filePath, JSON.stringify(content), "utf-8");
/src/spec/integ/cli.spec.js-38-    return filePath;
##############################################
/src/spec/unit/intent.spec.js-192-            };
/src/spec/unit/intent.spec.js:193:            validPowerLevels = JSON.parse(JSON.stringify(basePowerLevelEvent));
/src/spec/unit/intent.spec.js-194-            validPowerLevels.content.users[userId] = 100;
##############################################
/src/lib/bridge.js-194-        if (typeof this.opts.registration === "string") {
/src/lib/bridge.js:195:            const regObj = js_yaml_1.default.load(await fs_1.promises.readFile(this.opts.registration, 'utf8'));
/src/lib/bridge.js-196-            if (typeof regObj !== "object") {
