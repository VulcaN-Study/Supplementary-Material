/src/scripts/install.js-23-    request.on('error', function(err) {
/src/scripts/install.js:24:        fs.unlink(dest);
/src/scripts/install.js-25-
##############################################
/src/scripts/install.js-31-    file.on('error', function(err) { // Handle errors
/src/scripts/install.js:32:        fs.unlink(dest); // Delete the file async. (But we don't check the result)
/src/scripts/install.js-33-
##############################################
/src/node-sass/scripts/build.js-36-
/src/node-sass/scripts/build.js:37:      fs.rename(target, install, function(err) {
/src/node-sass/scripts/build.js-38-        if (err) {
##############################################
/src/node-sass/scripts/install.js-31-
/src/node-sass/scripts/install.js:32:  applyProxy({ rejectUnauthorized: false }, function(options) {
/src/node-sass/scripts/install.js-33-    options.headers = {
##############################################
/src/node-sass/lib/render.js-73-
/src/node-sass/lib/render.js:74:      fs.writeFile(destination, result.css.toString(), function(err) {
/src/node-sass/lib/render.js-75-        if (err) {
##############################################
/src/node-sass/lib/render.js-91-        }
/src/node-sass/lib/render.js:92:        fs.writeFile(sourceMap, result.map, function(err) {
/src/node-sass/lib/render.js-93-          if (err) {
##############################################
/src/node-sass/lib/index.js-275-  options.error = function(err) {
/src/node-sass/lib/index.js:276:    var payload = util._extend(new Error(), JSON.parse(err));
/src/node-sass/lib/index.js-277-
##############################################
/src/node-sass/lib/index.js-408-
/src/node-sass/lib/index.js:409:  throw util._extend(new Error(), JSON.parse(result.error));
/src/node-sass/lib/index.js-410-};
