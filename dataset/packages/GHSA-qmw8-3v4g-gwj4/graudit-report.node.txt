/src/test/full-querystring-rewrite-option-complex.js-13-
/src/test/full-querystring-rewrite-option-complex.js:14:const target = http.createServer((req, res) => {
/src/test/full-querystring-rewrite-option-complex.js-15-  t.pass('request proxied')
##############################################
/src/test/unix-http.js-28-
/src/test/unix-http.js:29:const target = http.createServer((req, res) => {
/src/test/unix-http.js-30-  t.pass('request proxied')
##############################################
/src/test/fastify-multipart-incompatibility.js-32-
/src/test/fastify-multipart-incompatibility.js:33:const target = http.createServer((req, res) => {
/src/test/fastify-multipart-incompatibility.js-34-  t.pass('request proxied')
##############################################
/src/test/fastify-multipart-incompatibility.js-75-    form.append('key', 'value')
/src/test/fastify-multipart-incompatibility.js:76:    form.append('file', fs.createReadStream(filetPath, { encoding: 'utf-8' }))
/src/test/fastify-multipart-incompatibility.js-77-
##############################################
/src/test/fastify-multipart-incompatibility.js-86-      t.error(err)
/src/test/fastify-multipart-incompatibility.js:87:      t.deepEqual(JSON.parse(data), { something: 'else' })
/src/test/fastify-multipart-incompatibility.js-88-    })
##############################################
/src/test/http2-invalid-target.js-27-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-invalid-target.js:28:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http2-invalid-target.js-29-      statusCode: 503,
##############################################
/src/test/https-agents.js-23-
/src/test/https-agents.js:24:const target = https.createServer(certs, (req, res) => {
/src/test/https-agents.js-25-  t.pass('request proxied')
##############################################
/src/test/padded-body.js-18-
/src/test/padded-body.js:19:const parsedLength = Buffer.byteLength(JSON.stringify(JSON.parse(bodyString)))
/src/test/padded-body.js-20-
/src/test/padded-body.js:21:const target = http.createServer((req, res) => {
/src/test/padded-body.js-22-  t.pass('request proxied')
##############################################
/src/test/padded-body.js-31-  req.on('end', () => {
/src/test/padded-body.js:32:    t.same(JSON.parse(data), { hello: 'world' })
/src/test/padded-body.js-33-    res.statusCode = 200
##############################################
/src/test/padded-body.js-59-      t.error(err)
/src/test/padded-body.js:60:      const parsed = JSON.parse(data)
/src/test/padded-body.js-61-      t.deepEqual(parsed, { something: 'else' })
##############################################
/src/test/undici-body.js-17-
/src/test/undici-body.js:18:const target = http.createServer((req, res) => {
/src/test/undici-body.js-19-  t.pass('request proxied')
##############################################
/src/test/undici-body.js-28-  req.on('end', () => {
/src/test/undici-body.js:29:    t.same(JSON.parse(data), { hello: 'world' })
/src/test/undici-body.js-30-    res.statusCode = 200
##############################################
/src/test/undici-body.js-65-      t.error(err)
/src/test/undici-body.js:66:      const parsed = JSON.parse(data)
/src/test/undici-body.js-67-      t.deepEqual(parsed, { something: 'else' })
##############################################
/src/test/base-get.js-13-
/src/test/base-get.js:14:const target = http.createServer((req, res) => {
/src/test/base-get.js-15-  t.pass('request proxied')
##############################################
/src/test/full-querystring-rewrite-string.js-13-
/src/test/full-querystring-rewrite-string.js:14:const target = http.createServer((req, res) => {
/src/test/full-querystring-rewrite-string.js-15-  t.pass('request proxied')
##############################################
/src/test/transform-body.js-15-
/src/test/transform-body.js:16:const target = http.createServer((req, res) => {
/src/test/transform-body.js-17-  t.pass('request proxied')
##############################################
/src/test/unix-https.js-35-
/src/test/unix-https.js:36:const target = https.createServer(certs, (req, res) => {
/src/test/unix-https.js-37-  t.pass('request proxied')
##############################################
/src/test/full-querystring-rewrite-option.js-13-
/src/test/full-querystring-rewrite-option.js:14:const target = http.createServer((req, res) => {
/src/test/full-querystring-rewrite-option.js-15-  t.pass('request proxied')
##############################################
/src/test/base-path.js-33-    t.strictEqual(res.headers['content-type'], 'application/json')
/src/test/base-path.js:34:    t.strictEqual(typeof JSON.parse(data).origin, 'string')
/src/test/base-path.js-35-  })
##############################################
/src/test/on-error.js-49-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/on-error.js:50:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/on-error.js-51-      statusCode: 504,
##############################################
/src/test/http2-http2.js-55-  t.match(headers['content-type'], /application\/json/)
/src/test/http2-http2.js:56:  t.deepEqual(JSON.parse(body), { hello: 'world' })
/src/test/http2-http2.js-57-})
##############################################
/src/test/full-https-get.js-22-
/src/test/full-https-get.js:23:const target = https.createServer(certs, (req, res) => {
/src/test/full-https-get.js-24-  t.pass('request proxied')
##############################################
/src/test/http-http2.js-44-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http-http2.js:45:    t.deepEqual(JSON.parse(err.response.body), { hello: 'world' })
/src/test/http-http2.js-46-    return
##############################################
/src/test/http-agents.js-14-
/src/test/http-agents.js:15:const target = http.createServer((req, res) => {
/src/test/http-agents.js-16-  t.pass('request proxied')
##############################################
/src/test/modifyCoreObjects-false.js-13-
/src/test/modifyCoreObjects-false.js:14:const target = http.createServer((req, res) => {
/src/test/modifyCoreObjects-false.js-15-  t.pass('request proxied')
##############################################
/src/test/full-rewrite-body.js-14-
/src/test/full-rewrite-body.js:15:const target = http.createServer((req, res) => {
/src/test/full-rewrite-body.js-16-  t.pass('request proxied')
##############################################
/src/test/full-rewrite-body.js-25-  req.on('end', () => {
/src/test/full-rewrite-body.js:26:    t.deepEqual(JSON.parse(data), { something: 'else' })
/src/test/full-rewrite-body.js-27-    res.statusCode = 200
##############################################
/src/test/unexpected-error.js-37-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/unexpected-error.js:38:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/unexpected-error.js-39-      statusCode: 500,
##############################################
/src/test/http-timeout.js-43-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http-timeout.js:44:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http-timeout.js-45-      statusCode: 504,
##############################################
/src/test/http2-https.js-58-    t.match(headers['content-type'], /application\/json/)
/src/test/http2-https.js:59:    t.deepEqual(JSON.parse(body), { hello: 'world' })
/src/test/http2-https.js-60-  })
##############################################
/src/test/http2-https.js-72-      t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-https.js:73:      t.deepEqual(JSON.parse(err.response.body), { hello: 'world' })
/src/test/http2-https.js-74-      return
##############################################
/src/test/async-route-handler.js-13-
/src/test/async-route-handler.js:14:const target = http.createServer((req, res) => {
/src/test/async-route-handler.js-15-  t.pass('request proxied')
##############################################
/src/test/head-with-body.js-13-
/src/test/head-with-body.js:14:const target = http.createServer((req, res) => {
/src/test/head-with-body.js-15-  t.pass('request proxied')
##############################################
/src/test/get-with-body.js-13-
/src/test/get-with-body.js:14:const target = http.createServer((req, res) => {
/src/test/get-with-body.js-15-  t.pass('request proxied')
##############################################
/src/test/base-querystring.js-13-
/src/test/base-querystring.js:14:const target = http.createServer((req, res) => {
/src/test/base-querystring.js-15-  t.pass('request proxied')
##############################################
/src/test/http2-target-multi-crash.js-37-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-target-multi-crash.js:38:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http2-target-multi-crash.js-39-      statusCode: 503,
##############################################
/src/test/full-post-extended-content-type.js-14-
/src/test/full-post-extended-content-type.js:15:const target = http.createServer((req, res) => {
/src/test/full-post-extended-content-type.js-16-  t.pass('request proxied')
##############################################
/src/test/full-post-extended-content-type.js-24-  req.on('end', () => {
/src/test/full-post-extended-content-type.js:25:    t.deepEqual(JSON.parse(data), { hello: 'world' })
/src/test/full-post-extended-content-type.js-26-    res.statusCode = 200
##############################################
/src/test/full-post-extended-content-type.js-55-      t.equal(res.headers['content-type'], 'application/json')
/src/test/full-post-extended-content-type.js:56:      t.deepEqual(JSON.parse(data.toString()), { something: 'else' })
/src/test/full-post-extended-content-type.js-57-    })
##############################################
/src/test/full-querystring.js-13-
/src/test/full-querystring.js:14:const target = http.createServer((req, res) => {
/src/test/full-querystring.js-15-  t.pass('request proxied')
##############################################
/src/test/http2-target-crash.js-44-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-target-crash.js:45:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http2-target-crash.js-46-      statusCode: 503,
##############################################
/src/test/full-querystring-rewrite.js-13-
/src/test/full-querystring-rewrite.js:14:const target = http.createServer((req, res) => {
/src/test/full-querystring-rewrite.js-15-  t.pass('request proxied')
##############################################
/src/test/no-stream-body-option.js-15-
/src/test/no-stream-body-option.js:16:const target = http.createServer((req, res) => {
/src/test/no-stream-body-option.js-17-  t.fail('the target server should never be called')
##############################################
/src/test/full-rewrite-body-content-type.js-15-
/src/test/full-rewrite-body-content-type.js:16:const target = http.createServer((req, res) => {
/src/test/full-rewrite-body-content-type.js-17-  t.pass('request proxied')
##############################################
/src/test/http-invalid-target.js-26-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http-invalid-target.js:27:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http-invalid-target.js-28-      statusCode: 503,
##############################################
/src/test/full-get.js-14-
/src/test/full-get.js:15:const target = http.createServer((req, res) => {
/src/test/full-get.js-16-  t.pass('request proxied')
##############################################
/src/test/undici.js-13-
/src/test/undici.js:14:const target = http.createServer((req, res) => {
/src/test/undici.js-15-  t.pass('request proxied')
##############################################
/src/test/no-body-opts-with-get.js-13-
/src/test/no-body-opts-with-get.js:14:const target = http.createServer((req, res) => {
/src/test/no-body-opts-with-get.js-15-  t.fail('this should never get called')
##############################################
/src/test/host-header.js-34-  t.strictEqual(res.headers['content-type'], 'application/json')
/src/test/host-header.js:35:  t.strictEqual(typeof JSON.parse(res.body).origin, 'string')
/src/test/host-header.js-36-})
##############################################
/src/test/host-header.js-63-  t.strictEqual(res.headers['content-type'], 'application/json')
/src/test/host-header.js:64:  t.strictEqual(typeof JSON.parse(res.body).origin, 'string')
/src/test/host-header.js-65-})
##############################################
/src/test/full-post.js-14-
/src/test/full-post.js:15:const target = http.createServer((req, res) => {
/src/test/full-post.js-16-  t.pass('request proxied')
##############################################
/src/test/full-post.js-24-  req.on('end', () => {
/src/test/full-post.js:25:    t.deepEqual(JSON.parse(data), { hello: 'world' })
/src/test/full-post.js-26-    res.statusCode = 200
##############################################
/src/test/post-plain-text.js-14-
/src/test/post-plain-text.js:15:const target = http.createServer((req, res) => {
/src/test/post-plain-text.js-16-  t.pass('request proxied')
##############################################
/src/test/http2-timeout.js-38-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-timeout.js:39:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http2-timeout.js-40-      statusCode: 504,
##############################################
/src/test/http2-timeout.js-81-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/http2-timeout.js:82:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/http2-timeout.js-83-      statusCode: 504,
##############################################
/src/test/rewrite-headers.js-14-
/src/test/rewrite-headers.js:15:const target = http.createServer((req, res) => {
/src/test/rewrite-headers.js-16-  t.pass('request proxied')
##############################################
/src/test/rewrite-request-headers.js-14-
/src/test/rewrite-request-headers.js:15:const target = http.createServer((req, res) => {
/src/test/rewrite-request-headers.js-16-  t.pass('request proxied')
##############################################
/src/test/full-post-stream.js-20-
/src/test/full-post-stream.js:21:const target = http.createServer((req, res) => {
/src/test/full-post-stream.js-22-  t.pass('request proxied')
##############################################
/src/test/full-post-stream.js-30-  req.on('end', () => {
/src/test/full-post-stream.js:31:    t.deepEqual(JSON.parse(data), { hello: 'world' })
/src/test/full-post-stream.js-32-    res.statusCode = 200
##############################################
/src/test/full-post-stream.js-60-      t.error(err)
/src/test/full-post-stream.js:61:      t.deepEqual(JSON.parse(data), { something: 'else' })
/src/test/full-post-stream.js-62-    })
##############################################
/src/test/undici-timeout.js-48-    t.match(err.response.headers['content-type'], /application\/json/)
/src/test/undici-timeout.js:49:    t.deepEqual(JSON.parse(err.response.body), {
/src/test/undici-timeout.js-50-      statusCode: 504,
