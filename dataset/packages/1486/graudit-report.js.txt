/src/README.md-66-```javascript
/src/README.md:67:http.createServer(function(req, res) {
/src/README.md-68-  proxy.web(req, res, { target: 'http://mytarget.com:8080' });
##############################################
/src/README.md-108-//
/src/README.md:109:http.createServer(function (req, res) {
/src/README.md-110-  res.writeHead(200, { 'Content-Type': 'text/plain' });
##############################################
/src/README.md-136-//
/src/README.md:137:var server = http.createServer(function(req, res) {
/src/README.md-138-  // You can define here your custom logic to handle the request
##############################################
/src/README.md-173-
/src/README.md:174:var server = http.createServer(function(req, res) {
/src/README.md-175-  // You can define here your custom logic to handle the request
##############################################
/src/README.md-209-//
/src/README.md:210:http.createServer(function (req, res) {
/src/README.md-211-  // This simulates an operation that takes 500ms to execute
##############################################
/src/README.md-221-//
/src/README.md:222:http.createServer(function (req, res) {
/src/README.md-223-  res.writeHead(200, { 'Content-Type': 'text/plain' });
##############################################
/src/README.md-239-//
/src/README.md:240:httpProxy.createServer({
/src/README.md-241-  target: {
##############################################
/src/README.md-257-//
/src/README.md:258:httpProxy.createServer({
/src/README.md-259-  ssl: {
##############################################
/src/README.md-294-//
/src/README.md:295:httpProxy.createServer({
/src/README.md-296-  target: 'ws://localhost:9014',
##############################################
/src/README.md-312-});
/src/README.md:313:var proxyServer = http.createServer(function (req, res) {
/src/README.md-314-  proxy.web(req, res);
##############################################
/src/README.md-336-*  **agent**: object to be passed to http(s).request (see Node's [https agent](http://nodejs.org/api/https.html#https_class_https_agent) and [http agent](http://nodejs.org/api/http.html#http_class_http_agent) objects)
/src/README.md:337:*  **ssl**: object to be passed to https.createServer()
/src/README.md-338-*  **ws**: true/false, if you want to proxy websockets
##############################################
/src/README.md-404-
/src/README.md:405: *  **ssl**: object to be passed to https.createServer()
/src/README.md-406- *  **ws**: true/false, if you want to proxy websockets
##############################################
/src/README.md-426-//
/src/README.md:427:var proxy = httpProxy.createServer({
/src/README.md-428-  target:'http://localhost:9005'
##############################################
/src/lib/http-proxy.js-28-   *    agent  : <object to be passed to http(s).request>
/src/lib/http-proxy.js:29:   *    ssl    : <object to be passed to https.createServer()>
/src/lib/http-proxy.js-30-   *    ws     : <true/false, if you want to proxy websockets>
##############################################
/src/lib/http-proxy/passes/web-outgoing.js-53-        && redirectRegex.test(proxyRes.statusCode)) {
/src/lib/http-proxy/passes/web-outgoing.js:54:      var target = url.parse(options.target);
/src/lib/http-proxy/passes/web-outgoing.js:55:      var u = url.parse(proxyRes.headers['location']);
/src/lib/http-proxy/passes/web-outgoing.js-56-
##############################################
/src/lib/http-proxy/index.js-128-  this._server  = this.options.ssl ?
/src/lib/http-proxy/index.js:129:    https.createServer(this.options.ssl, closure) :
/src/lib/http-proxy/index.js:130:    http.createServer(closure);
/src/lib/http-proxy/index.js-131-
##############################################
/src/lib/http-proxy/common.js-57-  if (isSSL.test(options[forward || 'target'].protocol)) {
/src/lib/http-proxy/common.js:58:    outgoing.rejectUnauthorized = (typeof options.secure === "undefined") ? true : options.secure;
/src/lib/http-proxy/common.js-59-  }
##############################################
/src/lib/http-proxy/common.js-86-  var outgoingPath = !options.toProxy
/src/lib/http-proxy/common.js:87:    ? (url.parse(req.url).path || '')
/src/lib/http-proxy/common.js-88-    : req.url;
##############################################
/src/CHANGELOG.md-477-- style changes [`84036e9`](https://github.com/http-party/node-http-proxy/commit/84036e9ddd1d4d925006c5438b3bcc0f17ba7a48)
/src/CHANGELOG.md:478:- [fix] be defensive and ensure location is in headers before running url.parse() [`8d68ac0`](https://github.com/http-party/node-http-proxy/commit/8d68ac0e0fa3080b31580aa08e92a46cc1f27696)
/src/CHANGELOG.md-479-- [dist] Version bump. 1.7.0 [`276f65a`](https://github.com/http-party/node-http-proxy/commit/276f65a3b810ded01757ec4bfd4fe2b00a1e66a8)
##############################################
/src/CHANGELOG.md-831-- [fix] fixes #341 [`#341`](https://github.com/http-party/node-http-proxy/issues/341)
/src/CHANGELOG.md:832:- [tests] https test pass, fix #511. Exposed the rejectUnauthorized flag [`#511`](https://github.com/http-party/node-http-proxy/issues/511)
/src/CHANGELOG.md-833-- [fix] pass proper options object that extend the global options and parse the per proxy args into options. fixes #510 [`#510`](https://github.com/http-party/node-http-proxy/issues/510)
##############################################
/src/CHANGELOG.md-1475-- [test] Updated tests to reflect finalized API of the RoutingProxy [`734769f`](https://github.com/http-party/node-http-proxy/commit/734769fa9b2c3054d45e33c3e552af80ce3f4740)
/src/CHANGELOG.md:1476:- [api doc] Rebuilt httpProxy.createServer() with the newer high-level RoutingProxy API [`598fe2e`](https://github.com/http-party/node-http-proxy/commit/598fe2e38def56518a1f0a8196b2fcb7f1bc569e)
/src/CHANGELOG.md-1477-- [minor] Remove commented out debug statements. [`5575bcf`](https://github.com/http-party/node-http-proxy/commit/5575bcf60c87def74d1755b2e5cc73e085dbf8c3)
##############################################
/src/CHANGELOG.md-1526-- [api breaking] Begin refactor to optimize node-http-proxy by managing one instance of HttpProxy per `host:port` location [`d2b0e43`](https://github.com/http-party/node-http-proxy/commit/d2b0e4399e8026d3e2ece78ac8fdb1def6649950)
/src/CHANGELOG.md:1527:- [api test] Updated httpProxy.createServer() for new API exposed by simplified HttpProxy object. [`be4562d`](https://github.com/http-party/node-http-proxy/commit/be4562da9fafef8b26856f7f73f6c5a2c4e389b0)
/src/CHANGELOG.md-1528-- [test fix] A few minor fixes to ensure basic WebSocket tests are working. Better scope tests by supported protocol [`daf9231`](https://github.com/http-party/node-http-proxy/commit/daf9231a66f10a25782d2227df1b1501099ac5d1)
##############################################
/src/CHANGELOG.md-1558-- [minor] Added body decoder middleware example.  Needs fixing. [`8eaec35`](https://github.com/http-party/node-http-proxy/commit/8eaec3507456731c1138c0b8ebb4e51dedc7c300)
/src/CHANGELOG.md:1559:- [minor dist] Use `pkginfo`. Minor updates to variable scoping in `.createServer()` [`5d0bbb3`](https://github.com/http-party/node-http-proxy/commit/5d0bbb38c3af14907567e2dc7c4f84a915b60ce5)
/src/CHANGELOG.md-1560-- [doc] add comments to examples/url-middleware.js [`f6484de`](https://github.com/http-party/node-http-proxy/commit/f6484de4112463c74105db82d27f131d64478f1d)
##############################################
/src/CHANGELOG.md-1569-- Updating to enableXForwarded [`ee3506a`](https://github.com/http-party/node-http-proxy/commit/ee3506a8e7262f780eeada331898d42ca0e9838a)
/src/CHANGELOG.md:1570:- [api] Expose adapted version of `stack` so it can be used with HttpProxy instances not created by `httpProxy.createServer()` [`5d6e6b9`](https://github.com/http-party/node-http-proxy/commit/5d6e6b9f78eb98b28db01490a36b23c1aade133f)
/src/CHANGELOG.md-1571-- The number of maxSockets has to be set after the agent is created. Setting the property in the constructor does not work. [`2caa5d2`](https://github.com/http-party/node-http-proxy/commit/2caa5d2b0d55898c133a0bf3a0048ee969efb121)
