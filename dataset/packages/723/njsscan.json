{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 29,
          "line": 2
        },
        "extra": {
          "line": "Copyright (c) 2016 Josef Fr\u00f6hle",
          "message": "Lexical error: unrecognised symbol, in token rule:\ufffd"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 28,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/helper.js",
          "match_lines": [
            73,
            73
          ],
          "match_position": [
            98,
            137
          ],
          "match_string": "  if (!options || !options.hasOwnProperty('password') || !options.hasOwnProperty('passType') || !/^(word|in|out)$/.test(options.passType)) {"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            33,
            33
          ],
          "match_position": [
            10,
            71
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN EC PARAMETERS-----\\r?\\n/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            34,
            34
          ],
          "match_position": [
            10,
            67
          ],
          "match_string": "  expect(/\\r?\\n-----END EC PARAMETERS-----\\r?\\n/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            10,
            70
          ],
          "match_string": "  expect(/\\r?\\n-----BEGIN EC PRIVATE KEY-----\\r?\\n/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            36,
            36
          ],
          "match_position": [
            10,
            70
          ],
          "match_string": "  expect(/\\r?\\n-----END EC PRIVATE KEY-----\\r?\\n*$/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            44,
            44
          ],
          "match_position": [
            10,
            72
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN EC PRIVATE KEY-----\\r?\\n/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            45,
            45
          ],
          "match_position": [
            10,
            70
          ],
          "match_string": "  expect(/\\r?\\n-----END EC PRIVATE KEY-----\\r?\\n*$/.test(data.ecparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            53,
            53
          ],
          "match_position": [
            10,
            71
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN DH PARAMETERS-----\\r?\\n/.test(data.dhparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            54,
            54
          ],
          "match_position": [
            10,
            69
          ],
          "match_string": "  expect(/\\r?\\n-----END DH PARAMETERS-----\\r?\\n*$/.test(data.dhparam)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            61,
            61
          ],
          "match_position": [
            27,
            57
          ],
          "match_string": "  if (encrypted) { expect(/ENCRYPTED\\r?\\n/.test(data.key)).to.be.true() }"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            62,
            62
          ],
          "match_position": [
            10,
            69
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN RSA PRIVATE KEY-----\\r?\\n/.test(data.key)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            63,
            63
          ],
          "match_position": [
            10,
            67
          ],
          "match_string": "  expect(/\\r?\\n-----END RSA PRIVATE KEY-----\\r?\\n*$/.test(data.key)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            74,
            74
          ],
          "match_position": [
            10,
            73
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN CERTIFICATE REQUEST-----\\r?\\n/.test(data.csr)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            75,
            75
          ],
          "match_position": [
            10,
            71
          ],
          "match_string": "  expect(/\\r?\\n-----END CERTIFICATE REQUEST-----\\r?\\n*$/.test(data.csr)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            84,
            84
          ],
          "match_position": [
            10,
            73
          ],
          "match_string": "  expect(/^\\r?\\n*-----BEGIN CERTIFICATE-----\\r?\\n/.test(data.certificate)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            85,
            85
          ],
          "match_position": [
            10,
            71
          ],
          "match_string": "  expect(/\\r?\\n-----END CERTIFICATE-----\\r?\\n*$/.test(data.certificate)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            111,
            111
          ],
          "match_position": [
            14,
            49
          ],
          "match_string": "      expect(/^[a-f0-9]{32}$/i.test(data.modulus)).to.be.true()"
        },
        {
          "file_path": "/src/test/pem.helper.js",
          "match_lines": [
            114,
            114
          ],
          "match_position": [
            14,
            45
          ],
          "match_string": "      expect(/^[0-9A-F]*$/.test(data.modulus)).to.be.true()"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
