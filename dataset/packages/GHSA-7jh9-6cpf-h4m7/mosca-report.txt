<report_mosca>
 <Path>/src/src/modules/dropbox.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 117 -  			// Map DELETE requests

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/yahoo.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 52 -  				// Add the old token and the refresh token, including path to the query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/twitter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 83 -  						// Assign the post body to the query parameters

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/soundcloud.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 57 -  		// Alter the querystring

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/tumblr.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 91 -  	// Converts post parameters to query

 Line: 92 -  	function query(p, callback) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/windows.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 71 -  			// Map DELETE requests

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/modules/google.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 107 -  			// Map DELETE requests

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/hello.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 409 -  			var timer = setInterval(function() {

 Line: 755 -  					setTimeout(self, 16);

 Line: 995 -  			/* global setTimeout: true */

 Line: 1015 -  				setTimeout(func, 0);

 Line: 1177 -  			setTimeout(function() {

 Line: 1603 -  		setTimeout(self, 1000);

 Line: 2219 -  				window.setTimeout(function() {

 Line: 2269 -  			window.setTimeout(function() {

 Line: 2340 -  			setTimeout(function() {

 Line: 2473 -  		setTimeout(function() {

 Line: 2476 -  			setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/hello.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 183 -  		// Get all the custom options and store to be appended to the querystring

 Line: 257 -  		// Query string parameters, we may pass our own arguments to form the querystring

 Line: 351 -  		// Override login querystrings from auth_options

 Line: 551 -  	// Append the querystring to a url

 Line: 1314 -  		// FACEBOOK is returning auth errors within as a query_string... thats a stickler for consistency.

 Line: 1315 -  		// SoundCloud is the state in the querystring and the token in the hashtag, so we'll mix the two together

 Line: 1614 -  // @param query   object (optional)

 Line: 1631 -  	var p = utils.args({path: 's!', query: 'o', method: 's', data: 'o', timeout: 'i', callback: 'f'}, arguments);

 Line: 1642 -  	// If get, put all parameters into query

 Line: 1711 -  	// Append the access_token to the query

 Line: 1720 -  	// Store the query as options

 Line: 1735 -  	// Move the querystring into the data

 Line: 1738 -  		var query = url.split(/[\?#]/)[1];

 Line: 1742 -  			// Remove the query part from the URL

 Line: 1928 -  		// Clone the query object

 Line: 1929 -  		// Each request modifies the query object and needs to be tared after each one.

 Line: 1940 -  			// Clone the query object

 Line: 1958 -  				// It's not compatible reset query

 Line: 1967 -  			// Add some additional query parameters to the URL

 Line: 2004 -  			// Remove the token from the query before signing

 Line: 2017 -  			// POST body to querystring

 Line: 2019 -  				// Attach the p.data to the querystring.

 Line: 2143 -  		// Should we add the query to the URL?

 Line: 2144 -  		if (method === 'GET' || method === 'DELETE') {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/modules/api.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 17 -  			var query = m[4];

 Line: 20 -  			// Format query

 Line: 30 -  					query: query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/utils/responseHandler.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 148 -  					setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/utils/responseHandler.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 78 -  			it('should redirect to oauth proxy and preserve the query string', function() {

 Line: 90 -  				// of query string parameters is not guaranteed

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/utils/param.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 29 -  		it('should turn URL query into an object', function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/core/hello.login.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 397 -  		describe('custom query string parameters', function() {

 Line: 399 -  			it('should attach custom parameters to the querystring', function(done) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/core/hello.api.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 23 -  				setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/core/hello.api.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 107 -  		it('should attach query object to the req.query', function(done) {

 Line: 256 -  				it('should define the path using the query parameters and remove them from the query', function(done) {

 Line: 280 -  				it('should define the path using the query parameters and remove them from the post data', function(done) {

 Line: 304 -  				it('should trigger an error if there was no query parameter arg, i.e. @{arg}', function(done) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/tests/specs/unit/core/session.monitor.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 61 -  			setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/bundle.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 177 -              v = r(a = c(l, a));n && n.callbackonload && (v.onload = l.bind(null, { response: "posted", message: "Content was posted" })), u && (f = setTimeout(l.bind(null, new Error("timeout")), u));var y = o(t);e = e.replace(new RegExp("=\\?(&|$)"), "=" + a + "$1"), s(y, { method: "POST", target: a, action: e }), y.target = a, setTimeout(function () {

 Line: 192 -          };n && (s = window.setTimeout(function () {

 Line: 520 -                e(a, u), i || (o = setTimeout(n, t));

 Line: 599 -          return setTimeout(e, 0);

 Line: 845 -            }setTimeout(r, 1e3);

 Line: 3967 -    // - setTimeout

 Line: 4594 -        setTimeout(ctx(run, id, 1), 0);

 Line: 8613 -  // ie9- setTimeout & setInterval additional parameters fix

 Line: 8630 -    setTimeout:  wrap(global.setTimeout),

 Line: 8631 -    setInterval: wrap(global.setInterval)

 Line: 8921 -          setTimeout(function () {

 Line: 9001 -          setTimeout(function () {

 Line: 11324 -              j = eval('(' + text + ')');

 Line: 11680 -  // http://www.adequatelygood.com/Replacing-setTimeout-Globally.html

 Line: 11682 -      global.setTimeout = global.setTimeout;

 Line: 11684 -      global.setInterval = global.setInterval;

 Line: 11696 -  // node expects setTimeout/setInterval to return a fn object w/ .ref()/.unref()

 Line: 11701 -  var timeoutResult = setTimeout(NOOP, 0);

 Line: 11964 -              eval(timer.func);

 Line: 12071 -      setTimeout: setTimeout,

 Line: 12075 -      setInterval: setInterval,

 Line: 12112 -      clock.setTimeout = function setTimeout(func, timeout) {

 Line: 12124 -      clock.setInterval = function setInterval(func, timeout) {

 Line: 12779 -      throw new Error('setTimeout has not been defined');

 Line: 12786 -          if (typeof setTimeout === 'function') {

 Line: 12787 -              cachedSetTimeout = setTimeout;

 Line: 12805 -      if (cachedSetTimeout === setTimeout) {

 Line: 12807 -          return setTimeout(fun, 0);

 Line: 12809 -      // if setTimeout wasn't available but was latter defined

 Line: 12810 -      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {

 Line: 12811 -          cachedSetTimeout = setTimeout;

 Line: 12812 -          return setTimeout(fun, 0);

 Line: 12815 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 12840 -          // when when somebody has screwed with setTimeout but no I.E. maddness

 Line: 12848 -              // Some versions of I.E. have different rules for clearTimeout vs setTimeout

 Line: 13685 -    // use indirect eval (which violates Content Security Policy).

 Line: 14436 -          setTimeout(callback, 0);

 Line: 17560 -  // cache a reference to setTimeout, so that our reference won't be stubbed out

 Line: 17563 -  var realSetTimeout = setTimeout;

 Line: 17577 -      if (!config.hasOwnProperty("setTimeout")) {

 Line: 17578 -          config.setTimeout = realSetTimeout;

 Line: 17599 -              config.setTimeout(throwLoggedError, 0);

 Line: 18107 -                  setTimeout(function () {

 Line: 18257 -          if (typeof setTimeout.clock === "object") {

 Line: 18258 -              this.clock = setTimeout.clock;

 Line: 18265 -              var clockSetTimeout = this.clock.setTimeout;

 Line: 18266 -              var clockSetInterval = this.clock.setInterval;

 Line: 18269 -              this.clock.setTimeout = function (fn, timeout) {

 Line: 18275 -              this.clock.setInterval = function (fn, timeout) {

 Line: 18339 -      setTimeout: setTimeout,

 Line: 18343 -      setInterval: setInterval,

 Line: 22850 -  		timer = setTimeout(cb.bind(null, new Error('timeout')), timeout);

 Line: 22874 -  	setTimeout(function () {

 Line: 23066 -  		timer = window.setTimeout(function () {

 Line: 23985 -  					timer = setTimeout(tick, defer);

 Line: 24122 -    return setTimeout(cb, 0);

 Line: 25545 -  		setTimeout(self, 1000);

 Line: 29113 -  			setTimeout(function () {

 Line: 30483 -  		setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/bundle.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 251 -          }, l.onerror = l.onload, "GET" === e || "DELETE" === e ? f = null : !f || "string" == typeof f || o(f, window.FormData) || o(f, window.File) || o(f, window.Blob) || (f = r(f)), l.open(e, t, !0), "responseType" in l ? a(function () {

 Line: 854 -                    if ((f = u({ path: "s!", query: "o", method: "s", data: "o", timeout: "i", callback: "f" }, o)) && f.path) {

 Line: 23207 -  		// Add some additional query parameters to the URL

 Line: 23282 -  	// Should we add the query to the URL?

 Line: 23283 -  	if (method === 'GET' || method === 'DELETE') {

 Line: 23999 -  var querystringify = require('./querystringify.js');

 Line: 24022 -  		return url + (url.indexOf('?') > -1 ? '&' : '?') + querystringify(params, formatFunction);

 Line: 24643 -  var queryparse = require('tricks/string/queryparse');

 Line: 24644 -  var querystringify = require('tricks/string/querystringify');

 Line: 24816 -  							// Get all the custom options and store to be appended to the querystring

 Line: 24892 -  							// Query string parameters, we may pass our own arguments to form the querystring

 Line: 24997 -  							// Override login querystrings from auth_options

 Line: 25253 -  		p = queryparse(location.search);

 Line: 25275 -  		// FACEBOOK is returning auth errors within as a query_string... thats a stickler for consistency.

 Line: 25276 -  		// SoundCloud is the state in the querystring and the token in the hashtag, so we'll mix the two together

 Line: 25278 -  		p = merge(queryparse(location.search || ''), queryparse(location.hash || ''));

 Line: 25555 -  // @param query   object (optional)

 Line: 25569 -  		var p, data, a, reg, o, url, m, actions, query, promise;

 Line: 25576 -  						p = argmap({ path: 's!', query: 'o', method: 's', data: 'o', timeout: 'i', callback: 'f' }, args);

 Line: 25602 -  						// If get, put all parameters into query

 Line: 25670 -  						// Append the access_token to the query

 Line: 25679 -  						// Store the query as options

 Line: 25695 -  						// Move the querystring into the data

 Line: 25701 -  								extend(p.query, queryparse(query));

 Line: 25703 -  								// Remove the query part from the URL

 Line: 25881 -  	// Remove the token from the query before signing

 Line: 25894 -  	// POST body to querystring

 Line: 25896 -  		// Attach the p.data to the querystring.

 Line: 26135 -  var querystringify = require('tricks/string/querystringify');

 Line: 26294 -  					var qs = querystringify({ path: path });

 Line: 26300 -  			// Map DELETE requests

 Line: 26381 -  var querystringify = require('tricks/string/querystringify');

 Line: 26496 -  				var qs = querystringify({

 Line: 27555 -  			// Map DELETE requests

 Line: 28196 -  		// Alter the querystring

 Line: 28444 -  								// Assign the post body to the query parameters

 Line: 28740 -  			// Map DELETE requests

 Line: 28801 -   			// Add the old token and the refresh token, including path to the query

 Line: 29179 -  	it('should attach query object to the req.query', function (done) {

 Line: 29315 -  			it('should define the path using the query parameters and remove them from the query', function (done) {

 Line: 29337 -  			it('should define the path using the query parameters and remove them from the post data', function (done) {

 Line: 29359 -  			it('should trigger an error if there was no query parameter arg, i.e. @{arg}', function (done) {

 Line: 29530 -  var queryparse = require('tricks/string/queryparse');

 Line: 29654 -  				var params = queryparse(url.split('?')[1]);

 Line: 29693 -  				var params = queryparse(url.split('?')[1]);

 Line: 29714 -  				var params = queryparse(url.split('?')[1]);

 Line: 29737 -  				var params = queryparse(url.split('?')[1]);

 Line: 29760 -  				var params = queryparse(url.split('?')[1]);

 Line: 29959 -  	describe('custom query string parameters', function () {

 Line: 29961 -  		it('should attach custom parameters to the querystring', function (done) {

 Line: 29969 -  				var params = queryparse(url.split('?')[1]);

 Line: 30265 -  		it('should redirect to oauth proxy and preserve the query string', function () {

 Line: 30277 -  			// of query string parameters is not guaranteed

 Line: 30555 -  		var query = m[4];

 Line: 30558 -  		// Format query

 Line: 30568 -  				query: query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 3 -  tanceof String&&m.push(h.scope),m=m.join(",").split(d),m=n.unique(m).filter(b),i.qs.state.scope=m.join(","),m=(m=m.map(function(e){return e in y?y[e]:e})).join(",").split(d),m=n.unique(m).filter(b),i.qs.scope=m.join(l.scope_delim||","),!1===a.force)&&(h&&"access_token"in h&&h.access_token&&"expires"in h&&h.expires>(new Date).getTime()/1e3&&0===n.diff((h.scope||"").split(d),(i.qs.state.scope||"").split(d)).length))return o.fulfill({unchanged:!0,network:i.network,authResponse:h}),o;if("page"===a.display&&a.page_uri&&(i.qs.state.page_uri=n.url(a.page_uri).href),"login"in l&&"function"==typeof l.login&&l.login(i),(!/\btoken\b/.test(f)||parseInt(l.oauth.version,10)<2||"none"===a.display&&l.oauth.grant&&h&&h.refresh_token)&&(i.qs.state.oauth=l.oauth,i.qs.state.oauth_proxy=a.oauth_proxy),i.qs.state=encodeURIComponent(JSON.stringify(i.qs.state)),1===parseInt(l.oauth.version,10)?e=n.qs(a.oauth_proxy,i.qs,w):"none"===a.display&&l.oauth.grant&&h&&h.refresh_token?(i.qs.refresh_token=h.refresh_token,e=n.qs(a.oauth_proxy,i.qs,w)):e=n.qs(l.oauth.auth,i.qs,w),c("auth.init",i),"none"===a.display)n.iframe(e,p);else if("popup"===a.display)var v=n.popup(e,p,a.popup),g=setInterval(function(){if((!v||v.closed)&&(clearInterval(g),!o.state)){var e=r("cancelled","Login has been cancelled");v||(e=r("blocked","Popup was blocked")),e.network=i.network,o.reject(e)}},100);else window.location=e;return o.proxy;function w(e){return e}function b(e){return!!e}},logout:function(){var e=this.utils,t=e.error,n=e.Promise(),r=e.args({name:"s",options:"o",callback:"f"},arguments);function o(e,t){hello.emit(e,t)}if(r.options=r.options||{},n.proxy.then(r.callback,r.callback),n.proxy.then(o.bind(this,"auth.logout auth"),o.bind(this,"error")),r.name=r.name||this.settings.default_service,r.authResponse=e.store(r.name),!r.name||r.name in this.services)if(r.name&&r.authResponse){var i=function(t){e.store(r.name,null),n.fulfill(hello.utils.merge({network:r.name},t||{}))},s={};if(r.options.force){var a=this.services[r.name].logout;if(a)if("function"==typeof a&&(a=a(i,r)),"string"==typeof a)e.iframe(a),s.force=null,s.message=" Line: 5 -  y"===n?function e(){document.body?document.body.appendChild(r):setTimeout(e,16)}():"object"==typeof n?n.appendChild(r):"string"==typeof n&&document.getElementsByTagName(n)[0].appendChild(r),r},iframe:function(e){this.append("iframe",{src:e,style:{position:"absolute",left:"-1000px",bottom:0,height:"1px",width:"1px"}},"body")},merge:function(){var e=Array.prototype.slice.call(arguments);return e.unshift({}),this.extend.apply(null,e)},args:function(e,t){var n={},r=0,o=null,i=null;for(i in e)if(e.hasOwnProperty(i))break;if(1===t.length&&"object"==typeof t[0]&&"o!"!=e[i])for(i in t[0])if(e.hasOwnProperty(i)&&i in e)return t[0];for(i in e)if(e.hasOwnProperty(i))if(o=typeof t[r],"function"==typeof e[i]&&e[i].test(t[r])||"string"==typeof e[i]&&(e[i].indexOf("s")>-1&&"string"===o||e[i].indexOf("o")>-1&&"object"===o||e[i].indexOf("i")>-1&&"number"===o||e[i].indexOf("a")>-1&&"object"===o||e[i].indexOf("f")>-1&&"function"===o))n[i]=t[r++];else if("string"==typeof e[i]&&e[i].indexOf("!")>-1)return!1;return n},url:function(e){if(e){if(window.URL&&URL instanceof Function&&0!==URL.length)return new URL(e,window.location);var t=document.createElement("a");return t.href=e,t.cloneNode(!1)}return window.location},diff:function(e,t){return t.filter(function(t){return-1===e.indexOf(t)})},diffKey:function(e,t){if(e||!t){var n={};for(var r in e)r in t||(n[r]=e[r]);return n}return e},unique:function(e){return Array.isArray(e)?e.filter(function(t,n){return e.indexOf(t)===n}):[]},isEmpty:function(e){if(!e)return!0;if(Array.isArray(e))return!e.length;if("object"==typeof e)for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},Promise:function(){var e=function(t){if(!(this instanceof e))return new e(t);this.id="Thenable/1.0.6",this.state=0,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},"function"==typeof t&&t.call(this,this.fulfill.bind(this),this.reject.bind(this))};e.prototype={fulfill:function(e){return t(this,1,"fulfillValue",e)},reject:function(e){return t(this,2,"rejectReason",e)},then:function(t,r){var i=new e;return  Line: 6 -  lled.push(o(t,i,"fulfill")),this.onRejected.push(o(r,i,"reject")),n(this),i.proxy}};var t=function(e,t,r,o){return 0===e.state&&(e.state=t,e[r]=o,n(e)),e},n=function(e){1===e.state?r(e,"onFulfilled",e.fulfillValue):2===e.state&&r(e,"onRejected",e.rejectReason)},r=function(e,t,n){if(0!==e[t].length){var r=e[t];e[t]=[];var o=function(){for(var e=0;e<r.length;e++)r[e](n)};"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick(o):"function"==typeof setImmediate?setImmediate(o):setTimeout(o,0)}},o=function(e,t,n){return function(r){if("function"!=typeof e)t[n].call(t,r);else{var o;try{o=e(r)}catch(e){return void t.reject(e)}i(t,o)}}},i=function(e,t){if(e!==t&&e.proxy!==t){var n;if("object"==typeof t&&null!==t||"function"==typeof t)try{n=t.then}catch(t){return void e.reject(t)}if("function"!=typeof n)e.fulfill(t);else{var r=!1;try{n.call(t,function(n){r||(r=!0,n===t?e.reject(new TypeError("circular thenable chain")):i(e,n))},function(t){r||(r=!0,e.reject(t))})}catch(t){r||e.reject(t)}}}else e.reject(new TypeError("cannot resolve promise with itself"))};return e}(),Event:function(){var e=/[\s\,]+/;return this.parent={events:this.events,findEvents:this.findEvents,parent:this.parent,utils:this.utils},this.events={},this.on=function(t,n){if(n&&"function"==typeof n)for(var r=t.split(e),o=0;o<r.length;o++)this.events[r[o]]=[n].concat(this.events[r[o]]||[]);return this},this.off=function(e,t){return this.findEvents(e,function(e,n){t&&this.events[e][n]!==t||(this.events[e][n]=null)}),this},this.emit=function(e){var t=Array.prototype.slice.call(arguments,1);t.push(e);for(var n=function(n,r){t[t.length-1]="*"===n?e:n,this.events[n][r].apply(this,t)},r=this;r&&r.findEvents;)r.findEvents(e+",*",n),r=r.parent;return this},this.emitAfter=function(){var e=this,t=arguments;return setTimeout(function(){e.emit.apply(e,t)},0),this},this.findEvents=function(t,n){var r=t.split(e);for(var o in this.events)if(this.events.hasOwnProperty(o)&&r.indexOf(o)>-1)for(var i=0;i<this.events[o].length;i++)this.events[o][i]&&n.call(this,o,i)},this},globalEvent:function(e,t){return t=t||"_helloj Line: 8 -  r.store(i,e);var s=JSON.stringify(e);try{h(n,o)(s)}catch(e){}}d()}}function h(e,t){return 0!==t.indexOf("_hellojs_")?function(){throw"Could not execute callback "+t}:e[t]}function d(){if(e.frameElement)t.document.body.removeChild(e.frameElement);else{try{e.close()}catch(e){}e.addEventListener&&e.addEventListener("load",function(){e.close()})}}}}),hello.utils.Event.call(hello),function(e){var t={},n={};e.on("auth.login, auth.logout",function(n){n&&"object"==typeof n&&n.network&&(t[n.network]=e.utils.store(n.network)||{})}),function r(){var o=(new Date).getTime()/1e3,i=function(t){e.emit("auth."+t,{network:s,authResponse:a})};for(var s in e.services)if(e.services.hasOwnProperty(s)){if(!e.services[s].id)continue;var a=e.utils.store(s)||{},c=e.services[s],l=t[s]||{};if(a&&"callback"in a){var u=a.callback;try{delete a.callback}catch(e){}e.utils.store(s,a);try{window[u](a)}catch(e){}}if(a&&"expires"in a&&a.expires<o){var p=c.refresh||a.refresh_token;!p||s in n&&!(n[s]<o)?p||s in n||(i("expired"),n[s]=!0):(e.emit("notice",s+" has expired trying to resignin"),e.login(s,{display:"none",force:!1}),n[s]=o+600);continue}if(l.access_token===a.access_token&&l.expires===a.expires)continue;!a.access_token&&l.access_token?i("logout"):a.access_token&&!l.access_token?i("login"):a.expires!==l.expires&&i("update"),t[s]=a,s in n&&delete n[s]}setTimeout(r,1e3)}()}(hello),hello.api=function(){var e=this,t=e.utils,n=t.error,r=t.Promise(),o=t.args({path:"s!",query:"o",method:"s",data:"o",timeout:"i",callback:"f"},arguments);o.method=(o.method||"get").toLowerCase(),o.headers=o.headers||{},o.query=o.query||{},"get"!==o.method&&"delete"!==o.method||(t.extend(o.query,o.data),o.data={});var i=o.data=o.data||{};if(r.then(o.callback,o.callback),!o.path)return r.reject(n("invalid_path","Missing the path parameter from the request"));o.path=o.path.replace(/^\/+/,"");var s=(o.path.split(/[\/\:]/,2)||[])[0].toLowerCase();if(s in e.services){o.network=s;var a=new RegExp("^"+s+":?/?");o.path=o.path.replace(a,"")}o.network=e.settings.default_service=o.network||e.settings.default_service;var c=e.services[o.network];if Line: 11 -  new XMLHttpRequest,a=this.error,c=!1;if("blob"===e&&(c=e,e="GET"),e=e.toUpperCase(),s.onload=function(t){var n=s.response;try{n=JSON.parse(s.responseText)}catch(e){401===s.status&&(n=a("access_denied",s.statusText))}var r=function(e){var t,n={},r=/([a-z\-]+):\s?(.*);?/gi;for(;t=r.exec(e);)n[t[1]]=t[2];return n}(s.getAllResponseHeaders());r.statusCode=s.status,o(n||("GET"===e?a("empty_response","Could not get resource"):{}),r)},s.onerror=function(e){var t=s.responseText;try{t=JSON.parse(s.responseText)}catch(e){}o(t||a("access_denied","Could not get resource"))},"GET"===e||"DELETE"===e)r=null;else if(r&&"string"!=typeof r&&!(r instanceof FormData)&&!(r instanceof File)&&!(r instanceof Blob)){var l=new FormData;for(i in r)r.hasOwnProperty(i)&&(r[i]instanceof HTMLInputElement?"files"in r[i]&&r[i].files.length>0&&l.append(i,r[i].files[0]):r[i]instanceof Blob?l.append(i,r[i],r.name):l.append(i,r[i]));r=l}if(s.open(e,t,!0),c&&("responseType"in s?s.responseType=c:s.overrideMimeType("text/plain; charset=x-user-defined")),n)for(i in n)s.setRequestHeader(i,n[i]);return s.send(r),s},jsonp:function(e,t,n,r){var o,i=this.error,s=0,a=document.getElementsByTagName("head")[0],c=i("server_error","server_error"),l=function(){s++||window.setTimeout(function(){t(c),a.removeChild(u)},0)};n=this.globalEvent(function(e){return c=e,!0},n),e=e.replace(new RegExp("=\\?(&|$)"),"="+n+"$1");var u=this.append("script",{id:n,name:n,src:e,async:!0,onload:l,onerror:l,onreadystatechange:function(){/loaded|complete/i.test(this.readyState)&&l()}});window.navigator.userAgent.toLowerCase().indexOf("opera")>-1&&(o=this.append("script",{text:"document.getElementById('"+n+"').onerror();"}),u.async=!1),r&&window.setTimeout(function(){c=i("timeout","timeout"),l()},r),a.appendChild(u),o&&a.appendChild(o)},post:function(e,t,n,r,o,i){var s,a,c=this,l=c.error,u=document,p=null,f=[],h=0,d=null,m=0,y=function(e){m++||r(e)};c.globalEvent(y,o);try{a=u.createElement('<iframe name="'+o+'">')}catch(e){a=u.createElement("iframe")}if(a.name=o,a.id=o,a.style.display="none",n&&n.callbackonload&&(a.onload=function(){y({response:"poste Line: 12 -  ontent was posted"})}),i&&setTimeout(function(){y(l("timeout","The post operation timed out"))},i),u.body.appendChild(a),c.domInstance("form",t)){for(p=t.form,h=0;h<p.elements.length;h++)p.elements[h]!==t&&p.elements[h].setAttribute("disabled",!0);t=p}if(c.domInstance("form",t))for(p=t,h=0;h<p.elements.length;h++)p.elements[h].disabled||"file"!==p.elements[h].type||(p.encoding=p.enctype="multipart/form-data",p.elements[h].setAttribute("name","file"));else{for(d in t)t.hasOwnProperty(d)&&c.domInstance("input",t[d])&&"file"===t[d].type&&((p=t[d].form).encoding=p.enctype="multipart/form-data");var v;for(d in p||(p=u.createElement("form"),u.body.appendChild(p),s=p),t)if(t.hasOwnProperty(d)){var g=c.domInstance("input",t[d])||c.domInstance("textArea",t[d])||c.domInstance("select",t[d]);if(g&&t[d].form===p)g&&t[d].name!==d&&(t[d].setAttribute("name",d),t[d].name=d);else{var w=p.elements[d];if(v)for(w instanceof NodeList||(w=[w]),h=0;h<w.length;h++)w[h].parentNode.removeChild(w[h]);(v=u.createElement("input")).setAttribute("type","hidden"),v.setAttribute("name",d),g?v.value=t[d].value:c.domInstance(null,t[d])?v.value=t[d].innerHTML||t[d].innerText:v.value=t[d],p.appendChild(v)}}for(h=0;h<p.elements.length;h++)(v=p.elements[h]).name in t||!0===v.getAttribute("disabled")||(v.setAttribute("disabled",!0),f.push(v))}p.setAttribute("method","POST"),p.setAttribute("target",o),p.target=o,p.setAttribute("action",e),setTimeout(function(){p.submit(),setTimeout(function(){try{s&&s.parentNode.removeChild(s)}catch(e){try{console.error("HelloJS: could not remove iframe")}catch(e){}}for(var e=0;e<f.length;e++)f[e]&&(f[e].setAttribute("disabled",!1),f[e].disabled=!1)},0)},100)},hasBinary:function(e){for(var t in e)if(e.hasOwnProperty(t)&&this.isBinary(e[t]))return!0;return!1},isBinary:function(e){return e instanceof Object&&(this.domInstance("input",e)&&"file"===e.type||"FileList"in window&&e instanceof window.FileList||"File"in window&&e instanceof window.File||"Blob"in window&&e instanceof window.Blob)},toBlob:function(e){var t=/^data\:([^;,]+(\;charset=[^;,]+)?)(\;base64)?,/i,n=e.match(t);if(!n)re</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -  new XMLHttpRequest,a=this.error,c=!1;if("blob"===e&&(c=e,e="GET"),e=e.toUpperCase(),s.onload=function(t){var n=s.response;try{n=JSON.parse(s.responseText)}catch(e){401===s.status&&(n=a("access_denied",s.statusText))}var r=function(e){var t,n={},r=/([a-z\-]+):\s?(.*);?/gi;for(;t=r.exec(e);)n[t[1]]=t[2];return n}(s.getAllResponseHeaders());r.statusCode=s.status,o(n||("GET"===e?a("empty_response","Could not get resource"):{}),r)},s.onerror=function(e){var t=s.responseText;try{t=JSON.parse(s.responseText)}catch(e){}o(t||a("access_denied","Could not get resource"))},"GET"===e||"DELETE"===e)r=null;else if(r&&"string"!=typeof r&&!(r instanceof FormData)&&!(r instanceof File)&&!(r instanceof Blob)){var l=new FormData;for(i in r)r.hasOwnProperty(i)&&(r[i]instanceof HTMLInputElement?"files"in r[i]&&r[i].files.length>0&&l.append(i,r[i].files[0]):r[i]instanceof Blob?l.append(i,r[i],r.name):l.append(i,r[i]));r=l}if(s.open(e,t,!0),c&&("responseType"in s?s.responseType=c:s.overrideMimeType("text/plain; charset=x-user-defined")),n)for(i in n)s.setRequestHeader(i,n[i]);return s.send(r),s},jsonp:function(e,t,n,r){var o,i=this.error,s=0,a=document.getElementsByTagName("head")[0],c=i("server_error","server_error"),l=function(){s++||window.setTimeout(function(){t(c),a.removeChild(u)},0)};n=this.globalEvent(function(e){return c=e,!0},n),e=e.replace(new RegExp("=\\?(&|$)"),"="+n+"$1");var u=this.append("script",{id:n,name:n,src:e,async:!0,onload:l,onerror:l,onreadystatechange:function(){/loaded|complete/i.test(this.readyState)&&l()}});window.navigator.userAgent.toLowerCase().indexOf("opera")>-1&&(o=this.append("script",{text:"document.getElementById('"+n+"').onerror();"}),u.async=!1),r&&window.setTimeout(function(){c=i("timeout","timeout"),l()},r),a.appendChild(u),o&&a.appendChild(o)},post:function(e,t,n,r,o,i){var s,a,c=this,l=c.error,u=document,p=null,f=[],h=0,d=null,m=0,y=function(e){m++||r(e)};c.globalEvent(y,o);try{a=u.createElement('<iframe name="'+o+'">')}catch(e){a=u.createElement("iframe")}if(a.name=o,a.id=o,a.style.display="none",n&&n.callbackonload&&(a.onload=function(){y({response:"poste</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.all.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 562 -  			var timer = setInterval(function() {

 Line: 908 -  					setTimeout(self, 16);

 Line: 1148 -  			/* global setTimeout: true */

 Line: 1168 -  				setTimeout(func, 0);

 Line: 1330 -  			setTimeout(function() {

 Line: 1756 -  		setTimeout(self, 1000);

 Line: 2372 -  				window.setTimeout(function() {

 Line: 2422 -  			window.setTimeout(function() {

 Line: 2493 -  			setTimeout(function() {

 Line: 2626 -  		setTimeout(function() {

 Line: 2629 -  			setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.all.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 336 -  		// Get all the custom options and store to be appended to the querystring

 Line: 410 -  		// Query string parameters, we may pass our own arguments to form the querystring

 Line: 504 -  		// Override login querystrings from auth_options

 Line: 704 -  	// Append the querystring to a url

 Line: 1467 -  		// FACEBOOK is returning auth errors within as a query_string... thats a stickler for consistency.

 Line: 1468 -  		// SoundCloud is the state in the querystring and the token in the hashtag, so we'll mix the two together

 Line: 1767 -  // @param query   object (optional)

 Line: 1784 -  	var p = utils.args({path: 's!', query: 'o', method: 's', data: 'o', timeout: 'i', callback: 'f'}, arguments);

 Line: 1795 -  	// If get, put all parameters into query

 Line: 1864 -  	// Append the access_token to the query

 Line: 1873 -  	// Store the query as options

 Line: 1888 -  	// Move the querystring into the data

 Line: 1891 -  		var query = url.split(/[\?#]/)[1];

 Line: 1895 -  			// Remove the query part from the URL

 Line: 2081 -  		// Clone the query object

 Line: 2082 -  		// Each request modifies the query object and needs to be tared after each one.

 Line: 2093 -  			// Clone the query object

 Line: 2111 -  				// It's not compatible reset query

 Line: 2120 -  			// Add some additional query parameters to the URL

 Line: 2157 -  			// Remove the token from the query before signing

 Line: 2170 -  			// POST body to querystring

 Line: 2172 -  				// Attach the p.data to the querystring.

 Line: 2296 -  		// Should we add the query to the URL?

 Line: 2297 -  		if (method === 'GET' || method === 'DELETE') {

 Line: 3159 -  			// Map DELETE requests

 Line: 4051 -  			// Map DELETE requests

 Line: 5148 -  		// Alter the querystring

 Line: 5360 -  						// Assign the post body to the query parameters

 Line: 5663 -  			// Map DELETE requests

 Line: 5831 -  				// Add the old token and the refresh token, including path to the query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 562 -  			var timer = setInterval(function() {

 Line: 908 -  					setTimeout(self, 16);

 Line: 1148 -  			/* global setTimeout: true */

 Line: 1168 -  				setTimeout(func, 0);

 Line: 1330 -  			setTimeout(function() {

 Line: 1756 -  		setTimeout(self, 1000);

 Line: 2372 -  				window.setTimeout(function() {

 Line: 2422 -  			window.setTimeout(function() {

 Line: 2493 -  			setTimeout(function() {

 Line: 2626 -  		setTimeout(function() {

 Line: 2629 -  			setTimeout(function() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 336 -  		// Get all the custom options and store to be appended to the querystring

 Line: 410 -  		// Query string parameters, we may pass our own arguments to form the querystring

 Line: 504 -  		// Override login querystrings from auth_options

 Line: 704 -  	// Append the querystring to a url

 Line: 1467 -  		// FACEBOOK is returning auth errors within as a query_string... thats a stickler for consistency.

 Line: 1468 -  		// SoundCloud is the state in the querystring and the token in the hashtag, so we'll mix the two together

 Line: 1767 -  // @param query   object (optional)

 Line: 1784 -  	var p = utils.args({path: 's!', query: 'o', method: 's', data: 'o', timeout: 'i', callback: 'f'}, arguments);

 Line: 1795 -  	// If get, put all parameters into query

 Line: 1864 -  	// Append the access_token to the query

 Line: 1873 -  	// Store the query as options

 Line: 1888 -  	// Move the querystring into the data

 Line: 1891 -  		var query = url.split(/[\?#]/)[1];

 Line: 1895 -  			// Remove the query part from the URL

 Line: 2081 -  		// Clone the query object

 Line: 2082 -  		// Each request modifies the query object and needs to be tared after each one.

 Line: 2093 -  			// Clone the query object

 Line: 2111 -  				// It's not compatible reset query

 Line: 2120 -  			// Add some additional query parameters to the URL

 Line: 2157 -  			// Remove the token from the query before signing

 Line: 2170 -  			// POST body to querystring

 Line: 2172 -  				// Attach the p.data to the querystring.

 Line: 2296 -  		// Should we add the query to the URL?

 Line: 2297 -  		if (method === 'GET' || method === 'DELETE') {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.all.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 3 -  tanceof String&&h.push(p.scope),h=h.join(",").split(m),h=n.unique(h).filter(_),a.qs.state.scope=h.join(","),h=(h=h.map(function(e){return e in g?g[e]:e})).join(",").split(m),h=n.unique(h).filter(_),a.qs.scope=h.join(u.scope_delim||","),!1===s.force)&&(p&&"access_token"in p&&p.access_token&&"expires"in p&&p.expires>(new Date).getTime()/1e3&&0===n.diff((p.scope||"").split(m),(a.qs.state.scope||"").split(m)).length))return i.fulfill({unchanged:!0,network:a.network,authResponse:p}),i;if("page"===s.display&&s.page_uri&&(a.qs.state.page_uri=n.url(s.page_uri).href),"login"in u&&"function"==typeof u.login&&u.login(a),(!/\btoken\b/.test(f)||parseInt(u.oauth.version,10)<2||"none"===s.display&&u.oauth.grant&&p&&p.refresh_token)&&(a.qs.state.oauth=u.oauth,a.qs.state.oauth_proxy=s.oauth_proxy),a.qs.state=encodeURIComponent(JSON.stringify(a.qs.state)),1===parseInt(u.oauth.version,10)?e=n.qs(s.oauth_proxy,a.qs,w):"none"===s.display&&u.oauth.grant&&p&&p.refresh_token?(a.qs.refresh_token=p.refresh_token,e=n.qs(s.oauth_proxy,a.qs,w)):e=n.qs(u.oauth.auth,a.qs,w),l("auth.init",a),"none"===s.display)n.iframe(e,d);else if("popup"===s.display)var v=n.popup(e,d,s.popup),y=setInterval(function(){if((!v||v.closed)&&(clearInterval(y),!i.state)){var e=o("cancelled","Login has been cancelled");v||(e=o("blocked","Popup was blocked")),e.network=a.network,i.reject(e)}},100);else window.location=e;return i.proxy;function w(e){return e}function _(e){return!!e}},logout:function(){var e=this.utils,t=e.error,n=e.Promise(),o=e.args({name:"s",options:"o",callback:"f"},arguments);function i(e,t){hello.emit(e,t)}if(o.options=o.options||{},n.proxy.then(o.callback,o.callback),n.proxy.then(i.bind(this,"auth.logout auth"),i.bind(this,"error")),o.name=o.name||this.settings.default_service,o.authResponse=e.store(o.name),!o.name||o.name in this.services)if(o.name&&o.authResponse){var a=function(t){e.store(o.name,null),n.fulfill(hello.utils.merge({network:o.name},t||{}))},r={};if(o.options.force){var s=this.services[o.name].logout;if(s)if("function"==typeof s&&(s=s(a,o)),"string"==typeof s)e.iframe(s),r.force=null,r.message=" Line: 5 -  y"===n?function e(){document.body?document.body.appendChild(o):setTimeout(e,16)}():"object"==typeof n?n.appendChild(o):"string"==typeof n&&document.getElementsByTagName(n)[0].appendChild(o),o},iframe:function(e){this.append("iframe",{src:e,style:{position:"absolute",left:"-1000px",bottom:0,height:"1px",width:"1px"}},"body")},merge:function(){var e=Array.prototype.slice.call(arguments);return e.unshift({}),this.extend.apply(null,e)},args:function(e,t){var n={},o=0,i=null,a=null;for(a in e)if(e.hasOwnProperty(a))break;if(1===t.length&&"object"==typeof t[0]&&"o!"!=e[a])for(a in t[0])if(e.hasOwnProperty(a)&&a in e)return t[0];for(a in e)if(e.hasOwnProperty(a))if(i=typeof t[o],"function"==typeof e[a]&&e[a].test(t[o])||"string"==typeof e[a]&&(e[a].indexOf("s")>-1&&"string"===i||e[a].indexOf("o")>-1&&"object"===i||e[a].indexOf("i")>-1&&"number"===i||e[a].indexOf("a")>-1&&"object"===i||e[a].indexOf("f")>-1&&"function"===i))n[a]=t[o++];else if("string"==typeof e[a]&&e[a].indexOf("!")>-1)return!1;return n},url:function(e){if(e){if(window.URL&&URL instanceof Function&&0!==URL.length)return new URL(e,window.location);var t=document.createElement("a");return t.href=e,t.cloneNode(!1)}return window.location},diff:function(e,t){return t.filter(function(t){return-1===e.indexOf(t)})},diffKey:function(e,t){if(e||!t){var n={};for(var o in e)o in t||(n[o]=e[o]);return n}return e},unique:function(e){return Array.isArray(e)?e.filter(function(t,n){return e.indexOf(t)===n}):[]},isEmpty:function(e){if(!e)return!0;if(Array.isArray(e))return!e.length;if("object"==typeof e)for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},Promise:function(){var e=function(t){if(!(this instanceof e))return new e(t);this.id="Thenable/1.0.6",this.state=0,this.fulfillValue=void 0,this.rejectReason=void 0,this.onFulfilled=[],this.onRejected=[],this.proxy={then:this.then.bind(this)},"function"==typeof t&&t.call(this,this.fulfill.bind(this),this.reject.bind(this))};e.prototype={fulfill:function(e){return t(this,1,"fulfillValue",e)},reject:function(e){return t(this,2,"rejectReason",e)},then:function(t,o){var a=new e;return  Line: 6 -  lled.push(i(t,a,"fulfill")),this.onRejected.push(i(o,a,"reject")),n(this),a.proxy}};var t=function(e,t,o,i){return 0===e.state&&(e.state=t,e[o]=i,n(e)),e},n=function(e){1===e.state?o(e,"onFulfilled",e.fulfillValue):2===e.state&&o(e,"onRejected",e.rejectReason)},o=function(e,t,n){if(0!==e[t].length){var o=e[t];e[t]=[];var i=function(){for(var e=0;e<o.length;e++)o[e](n)};"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick(i):"function"==typeof setImmediate?setImmediate(i):setTimeout(i,0)}},i=function(e,t,n){return function(o){if("function"!=typeof e)t[n].call(t,o);else{var i;try{i=e(o)}catch(e){return void t.reject(e)}a(t,i)}}},a=function(e,t){if(e!==t&&e.proxy!==t){var n;if("object"==typeof t&&null!==t||"function"==typeof t)try{n=t.then}catch(t){return void e.reject(t)}if("function"!=typeof n)e.fulfill(t);else{var o=!1;try{n.call(t,function(n){o||(o=!0,n===t?e.reject(new TypeError("circular thenable chain")):a(e,n))},function(t){o||(o=!0,e.reject(t))})}catch(t){o||e.reject(t)}}}else e.reject(new TypeError("cannot resolve promise with itself"))};return e}(),Event:function(){var e=/[\s\,]+/;return this.parent={events:this.events,findEvents:this.findEvents,parent:this.parent,utils:this.utils},this.events={},this.on=function(t,n){if(n&&"function"==typeof n)for(var o=t.split(e),i=0;i<o.length;i++)this.events[o[i]]=[n].concat(this.events[o[i]]||[]);return this},this.off=function(e,t){return this.findEvents(e,function(e,n){t&&this.events[e][n]!==t||(this.events[e][n]=null)}),this},this.emit=function(e){var t=Array.prototype.slice.call(arguments,1);t.push(e);for(var n=function(n,o){t[t.length-1]="*"===n?e:n,this.events[n][o].apply(this,t)},o=this;o&&o.findEvents;)o.findEvents(e+",*",n),o=o.parent;return this},this.emitAfter=function(){var e=this,t=arguments;return setTimeout(function(){e.emit.apply(e,t)},0),this},this.findEvents=function(t,n){var o=t.split(e);for(var i in this.events)if(this.events.hasOwnProperty(i)&&o.indexOf(i)>-1)for(var a=0;a<this.events[i].length;a++)this.events[i][a]&&n.call(this,i,a)},this},globalEvent:function(e,t){return t=t||"_helloj Line: 8 -  o.store(a,e);var r=JSON.stringify(e);try{p(n,i)(r)}catch(e){}}m()}}function p(e,t){return 0!==t.indexOf("_hellojs_")?function(){throw"Could not execute callback "+t}:e[t]}function m(){if(e.frameElement)t.document.body.removeChild(e.frameElement);else{try{e.close()}catch(e){}e.addEventListener&&e.addEventListener("load",function(){e.close()})}}}}),hello.utils.Event.call(hello),function(e){var t={},n={};e.on("auth.login, auth.logout",function(n){n&&"object"==typeof n&&n.network&&(t[n.network]=e.utils.store(n.network)||{})}),function o(){var i=(new Date).getTime()/1e3,a=function(t){e.emit("auth."+t,{network:r,authResponse:s})};for(var r in e.services)if(e.services.hasOwnProperty(r)){if(!e.services[r].id)continue;var s=e.utils.store(r)||{},l=e.services[r],u=t[r]||{};if(s&&"callback"in s){var c=s.callback;try{delete s.callback}catch(e){}e.utils.store(r,s);try{window[c](s)}catch(e){}}if(s&&"expires"in s&&s.expires<i){var d=l.refresh||s.refresh_token;!d||r in n&&!(n[r]<i)?d||r in n||(a("expired"),n[r]=!0):(e.emit("notice",r+" has expired trying to resignin"),e.login(r,{display:"none",force:!1}),n[r]=i+600);continue}if(u.access_token===s.access_token&&u.expires===s.expires)continue;!s.access_token&&u.access_token?a("logout"):s.access_token&&!u.access_token?a("login"):s.expires!==u.expires&&a("update"),t[r]=s,r in n&&delete n[r]}setTimeout(o,1e3)}()}(hello),hello.api=function(){var e=this,t=e.utils,n=t.error,o=t.Promise(),i=t.args({path:"s!",query:"o",method:"s",data:"o",timeout:"i",callback:"f"},arguments);i.method=(i.method||"get").toLowerCase(),i.headers=i.headers||{},i.query=i.query||{},"get"!==i.method&&"delete"!==i.method||(t.extend(i.query,i.data),i.data={});var a=i.data=i.data||{};if(o.then(i.callback,i.callback),!i.path)return o.reject(n("invalid_path","Missing the path parameter from the request"));i.path=i.path.replace(/^\/+/,"");var r=(i.path.split(/[\/\:]/,2)||[])[0].toLowerCase();if(r in e.services){i.network=r;var s=new RegExp("^"+r+":?/?");i.path=i.path.replace(s,"")}i.network=e.settings.default_service=i.network||e.settings.default_service;var l=e.services[i.network];if Line: 11 -  new XMLHttpRequest,s=this.error,l=!1;if("blob"===e&&(l=e,e="GET"),e=e.toUpperCase(),r.onload=function(t){var n=r.response;try{n=JSON.parse(r.responseText)}catch(e){401===r.status&&(n=s("access_denied",r.statusText))}var o=function(e){var t,n={},o=/([a-z\-]+):\s?(.*);?/gi;for(;t=o.exec(e);)n[t[1]]=t[2];return n}(r.getAllResponseHeaders());o.statusCode=r.status,i(n||("GET"===e?s("empty_response","Could not get resource"):{}),o)},r.onerror=function(e){var t=r.responseText;try{t=JSON.parse(r.responseText)}catch(e){}i(t||s("access_denied","Could not get resource"))},"GET"===e||"DELETE"===e)o=null;else if(o&&"string"!=typeof o&&!(o instanceof FormData)&&!(o instanceof File)&&!(o instanceof Blob)){var u=new FormData;for(a in o)o.hasOwnProperty(a)&&(o[a]instanceof HTMLInputElement?"files"in o[a]&&o[a].files.length>0&&u.append(a,o[a].files[0]):o[a]instanceof Blob?u.append(a,o[a],o.name):u.append(a,o[a]));o=u}if(r.open(e,t,!0),l&&("responseType"in r?r.responseType=l:r.overrideMimeType("text/plain; charset=x-user-defined")),n)for(a in n)r.setRequestHeader(a,n[a]);return r.send(o),r},jsonp:function(e,t,n,o){var i,a=this.error,r=0,s=document.getElementsByTagName("head")[0],l=a("server_error","server_error"),u=function(){r++||window.setTimeout(function(){t(l),s.removeChild(c)},0)};n=this.globalEvent(function(e){return l=e,!0},n),e=e.replace(new RegExp("=\\?(&|$)"),"="+n+"$1");var c=this.append("script",{id:n,name:n,src:e,async:!0,onload:u,onerror:u,onreadystatechange:function(){/loaded|complete/i.test(this.readyState)&&u()}});window.navigator.userAgent.toLowerCase().indexOf("opera")>-1&&(i=this.append("script",{text:"document.getElementById('"+n+"').onerror();"}),c.async=!1),o&&window.setTimeout(function(){l=a("timeout","timeout"),u()},o),s.appendChild(c),i&&s.appendChild(i)},post:function(e,t,n,o,i,a){var r,s,l=this,u=l.error,c=document,d=null,f=[],p=0,m=null,h=0,g=function(e){h++||o(e)};l.globalEvent(g,i);try{s=c.createElement('<iframe name="'+i+'">')}catch(e){s=c.createElement("iframe")}if(s.name=i,s.id=i,s.style.display="none",n&&n.callbackonload&&(s.onload=function(){g({response:"poste Line: 12 -  ontent was posted"})}),a&&setTimeout(function(){g(u("timeout","The post operation timed out"))},a),c.body.appendChild(s),l.domInstance("form",t)){for(d=t.form,p=0;p<d.elements.length;p++)d.elements[p]!==t&&d.elements[p].setAttribute("disabled",!0);t=d}if(l.domInstance("form",t))for(d=t,p=0;p<d.elements.length;p++)d.elements[p].disabled||"file"!==d.elements[p].type||(d.encoding=d.enctype="multipart/form-data",d.elements[p].setAttribute("name","file"));else{for(m in t)t.hasOwnProperty(m)&&l.domInstance("input",t[m])&&"file"===t[m].type&&((d=t[m].form).encoding=d.enctype="multipart/form-data");var v;for(m in d||(d=c.createElement("form"),c.body.appendChild(d),r=d),t)if(t.hasOwnProperty(m)){var y=l.domInstance("input",t[m])||l.domInstance("textArea",t[m])||l.domInstance("select",t[m]);if(y&&t[m].form===d)y&&t[m].name!==m&&(t[m].setAttribute("name",m),t[m].name=m);else{var w=d.elements[m];if(v)for(w instanceof NodeList||(w=[w]),p=0;p<w.length;p++)w[p].parentNode.removeChild(w[p]);(v=c.createElement("input")).setAttribute("type","hidden"),v.setAttribute("name",m),y?v.value=t[m].value:l.domInstance(null,t[m])?v.value=t[m].innerHTML||t[m].innerText:v.value=t[m],d.appendChild(v)}}for(p=0;p<d.elements.length;p++)(v=d.elements[p]).name in t||!0===v.getAttribute("disabled")||(v.setAttribute("disabled",!0),f.push(v))}d.setAttribute("method","POST"),d.setAttribute("target",i),d.target=i,d.setAttribute("action",e),setTimeout(function(){d.submit(),setTimeout(function(){try{r&&r.parentNode.removeChild(r)}catch(e){try{console.error("HelloJS: could not remove iframe")}catch(e){}}for(var e=0;e<f.length;e++)f[e]&&(f[e].setAttribute("disabled",!1),f[e].disabled=!1)},0)},100)},hasBinary:function(e){for(var t in e)if(e.hasOwnProperty(t)&&this.isBinary(e[t]))return!0;return!1},isBinary:function(e){return e instanceof Object&&(this.domInstance("input",e)&&"file"===e.type||"FileList"in window&&e instanceof window.FileList||"File"in window&&e instanceof window.File||"Blob"in window&&e instanceof window.Blob)},toBlob:function(e){var t=/^data\:([^;,]+(\;charset=[^;,]+)?)(\;base64)?,/i,n=e.match(t);if(!n)re</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/hello.all.min.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -  new XMLHttpRequest,s=this.error,l=!1;if("blob"===e&&(l=e,e="GET"),e=e.toUpperCase(),r.onload=function(t){var n=r.response;try{n=JSON.parse(r.responseText)}catch(e){401===r.status&&(n=s("access_denied",r.statusText))}var o=function(e){var t,n={},o=/([a-z\-]+):\s?(.*);?/gi;for(;t=o.exec(e);)n[t[1]]=t[2];return n}(r.getAllResponseHeaders());o.statusCode=r.status,i(n||("GET"===e?s("empty_response","Could not get resource"):{}),o)},r.onerror=function(e){var t=r.responseText;try{t=JSON.parse(r.responseText)}catch(e){}i(t||s("access_denied","Could not get resource"))},"GET"===e||"DELETE"===e)o=null;else if(o&&"string"!=typeof o&&!(o instanceof FormData)&&!(o instanceof File)&&!(o instanceof Blob)){var u=new FormData;for(a in o)o.hasOwnProperty(a)&&(o[a]instanceof HTMLInputElement?"files"in o[a]&&o[a].files.length>0&&u.append(a,o[a].files[0]):o[a]instanceof Blob?u.append(a,o[a],o.name):u.append(a,o[a]));o=u}if(r.open(e,t,!0),l&&("responseType"in r?r.responseType=l:r.overrideMimeType("text/plain; charset=x-user-defined")),n)for(a in n)r.setRequestHeader(a,n[a]);return r.send(o),r},jsonp:function(e,t,n,o){var i,a=this.error,r=0,s=document.getElementsByTagName("head")[0],l=a("server_error","server_error"),u=function(){r++||window.setTimeout(function(){t(l),s.removeChild(c)},0)};n=this.globalEvent(function(e){return l=e,!0},n),e=e.replace(new RegExp("=\\?(&|$)"),"="+n+"$1");var c=this.append("script",{id:n,name:n,src:e,async:!0,onload:u,onerror:u,onreadystatechange:function(){/loaded|complete/i.test(this.readyState)&&u()}});window.navigator.userAgent.toLowerCase().indexOf("opera")>-1&&(i=this.append("script",{text:"document.getElementById('"+n+"').onerror();"}),c.async=!1),o&&window.setTimeout(function(){l=a("timeout","timeout"),u()},o),s.appendChild(c),i&&s.appendChild(i)},post:function(e,t,n,o,i,a){var r,s,l=this,u=l.error,c=document,d=null,f=[],p=0,m=null,h=0,g=function(e){h++||o(e)};l.globalEvent(g,i);try{s=c.createElement('<iframe name="'+i+'">')}catch(e){s=c.createElement("iframe")}if(s.name=i,s.id=i,s.style.display="none",n&&n.callbackonload&&(s.onload=function(){g({response:"poste</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/requirejs/require.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 8 -  /*global window, navigator, document, importScripts, setTimeout, opera */

 Line: 710 -                      checkLoadedTimeoutId = setTimeout(function () {

 Line: 1758 -       * that have a better solution than setTimeout.

 Line: 1761 -      req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {

 Line: 1762 -          setTimeout(fn, 4);

 Line: 2070 -          return eval(text);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/requirejs/require.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1601 -                  //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/css-social-buttons/site/html5slider.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 87 -      setTimeout(check, 0, input, true);

 Line: 158 -      setTimeout(function() { isClick = false; }, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/css-social-buttons/site/html5slider.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 19 -  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/expect/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1259 -              j = eval('(' + text + ')');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 24 -  var query = {

 Line: 182 -  		data : query,

 Line: 197 -  		data : query,

 Line: 212 -  		data : query,

 Line: 227 -  		data : query,

 Line: 243 -  		data : query,

 Line: 295 -  		data : query,

 Line: 327 -  		data : query,

 Line: 375 -  		data : query,

 Line: 505 -  		data : query,

 Line: 553 -  		data : query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/subscribables/dependentObservable.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 200 -              this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/subscribables/extenders.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 15 -                  writeTimeoutInstance = ko.utils.setTimeout(function() {

 Line: 76 -              timeoutInstance = ko.utils.setTimeout(function () {

 Line: 88 -          timeoutInstance = ko.utils.setTimeout(callback, timeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/tasks.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 30 -              setTimeout(callback, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/utils.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 354 -          setTimeout: function (handler, timeout) {

 Line: 355 -              return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);

 Line: 359 -              setTimeout(function () {

 Line: 575 -              setTimeout(function () { form.parentNode.removeChild(form); }, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/defaultBindings/value.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 59 -                      ko.utils.setTimeout(valueUpdateHandler, 0);

 Line: 71 -                  ko.utils.setTimeout(updateFromModel, 0);

 Line: 93 -                          ko.utils.setTimeout(applyValueAction, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/defaultBindings/value.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 90 -                          // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/defaultBindings/textInput.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 70 -                  timeoutHandle = ko.utils.setTimeout(handler, 4);

 Line: 86 -                  ko.utils.setTimeout(updateView, 4);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/defaultBindings/selectedOptions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -              throw new Error("values binding applies only to SELECT elements");

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/defaultBindings/options.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -              throw new Error("options binding applies only to SELECT elements");

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/src/binding/selectExtensions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -      // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values

 Line: 4 -      // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/Gruntfile.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 73 -          eval(grunt.file.read(sourceReferencesFilename));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/dist/knockout.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 6 -  (function() {(function(n){var x=this||(0,eval)("this"),u=x.document,M=x.navigator,v=x.jQuery,F=x.JSON;(function(n){"function"===typeof define&&define.amd?define(["exports","require"],n):"object"===typeof exports&&"object"===typeof module?n(module.exports||exports):n(x.ko={})})(function(N,O){function J(a,c){return null===a||typeof a in T?a===c:!1}function U(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function V(b,c){var d;return function(){clearTimeout(d);d=a.a.setTimeout(b,c)}}function W(a,

 Line: 15 -  b;)a=a.parentNode;return!!a},nb:function(b){return a.a.Mc(b,b.ownerDocument.documentElement)},Qb:function(b){return!!a.a.Sb(b,a.a.nb)},A:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},Wb:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Wb(b),c)},$b:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},p:function(b,c,d){var e=a.a.Wb(d);d=h&&m[c];if(a.options.useOnlyNativeEvents||

 Line: 22 -  c.type="hidden";c.name=a;c.value=b;r.appendChild(c)});u.body.appendChild(r);e.submitter?e.submitter(r):r.submit();setTimeout(function(){r.parentNode.removeChild(r)},0)}}}();a.b("utils",a.a);a.b("utils.arrayForEach",a.a.q);a.b("utils.arrayFirst",a.a.Sb);a.b("utils.arrayFilter",a.a.Ka);a.b("utils.arrayGetDistinctValues",a.a.Tb);a.b("utils.arrayIndexOf",a.a.o);a.b("utils.arrayMap",a.a.fb);a.b("utils.arrayPushAll",a.a.ra);a.b("utils.arrayRemoveItem",a.a.La);a.b("utils.extend",a.a.extend);a.b("utils.fieldsIncludedWithJsonPost",

 Line: 33 -  function(){b.onreadystatechange=null;u.documentElement.removeChild(b);b=null;a()};u.documentElement.appendChild(b)}:function(a){setTimeout(a,0)},Wa:function(b){e||a.Y.scheduler(c);d[e++]=b;return f++},cancel:function(a){a-=f-e;a>=g&&a<e&&(d[a]=null)},resetForTesting:function(){var a=e-g;g=e=d.length=0;return a},md:b}}();a.b("tasks",a.Y);a.b("tasks.schedule",a.Y.Wa);a.b("tasks.runEarly",a.Y.md);a.ya={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.B({read:b,write:function(e){clearTimeout(d);

 Line: 34 -  d=a.a.setTimeout(function(){b(e)},c)}})},rateLimit:function(a,c){var d,e,f;"number"==typeof c?d=c:(d=c.timeout,e=c.method);a.cb=!1;f="notifyWhenChangesStop"==e?V:U;a.Ta(function(a){return f(a,d)})},deferred:function(b,c){if(!0!==c)throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.");b.cb||(b.cb=!0,b.Ta(function(c){var e;return function(){a.Y.cancel(e);e=a.Y.Wa(c);b.notifySubscribers(n,"dirty")}}))},notify:function(a,c){a.equalityComparer=

 Line: 49 -  ld:function(){this.Mb||this.ac()},uc:function(a){if(a.cb&&!this[s].i){var c=a.X(this.bd,this,"dirty"),d=a.X(this.ld,this);return{ia:a,k:function(){c.k();d.k()}}}return a.X(this.ac,this)},ac:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[s].bc),this[s].bc=a.a.setTimeout(function(){b.aa(!0)},c)):b.Fa?b.Fa():b.aa(!0)},aa:function(b){var c=this[s],d=c.wa;if(!c.Ra&&!c.R){if(c.i&&!a.a.nb(c.i)||d&&d()){if(!c.Fb){this.k();return}}else c.Fb=!1;c.Ra=!0;try{this.Qc(b)}finally{c.Ra=!1}c.L||

 Line: 98 -  if(10>a.a.C)var g=a.a.e.I(),k=a.a.e.I(),l=function(b){var c=this.activeElement;(c=c&&a.a.e.get(c,k))&&c(b)},m=function(b,c){var d=b.ownerDocument;a.a.e.get(d,g)||(a.a.e.set(d,g,!0),a.a.p(d,"selectionchange",l));a.a.e.set(b,k,c)};a.d.textInput={init:function(b,d,g){function l(c,d){a.a.p(b,c,d)}function k(){var c=a.a.c(d());if(null===c||c===n)c="";v!==n&&c===v?a.a.setTimeout(k,4):b.value!==c&&(u=c,b.value=c)}function y(){s||(v=b.value,s=a.a.setTimeout(t,4))}function t(){clearTimeout(s);v=s=n;var c=

 Line: 101 -  "off"==b.autocomplete||b.form&&"off"==b.form.autocomplete||-1!=a.a.o(e,"propertychange")||(a.a.p(b,"propertychange",function(){g=!0}),a.a.p(b,"focus",function(){g=!1}),a.a.p(b,"blur",function(){g&&l()}));a.a.q(e,function(c){var d=l;a.a.nd(c,"after")&&(d=function(){k=a.j.u(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.p(b,c,d)});var m=function(){var e=a.a.c(c()),f=a.j.u(b);if(null!==k&&e===k)a.a.setTimeout(m,0);else if(e!==f)if("select"===a.a.A(b)){var g=d.get("valueAllowUnset"),f=function(){a.j.ha(b,

 Line: 102 -  e,g)};f();g||e===a.j.u(b)?a.a.setTimeout(f,0):a.l.w(a.a.Da,null,[b,"change"])}else a.j.ha(b,e)};a.m(m,null,{i:b})}else a.Ja(b,{checkedValue:c})},update:function(){}};a.h.ea.value=!0;a.d.visible={update:function(b,c){var d=a.a.c(c()),e="none"!=b.style.display;d&&!e?b.style.display="":!d&&e&&(b.style.display="none")}};(function(b){a.d[b]={init:function(c,d,e,f,g){return a.d.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})("click");a.O=function(){};a.O.prototype.renderTemplateSource=

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/dist/knockout.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 92 -  a.d.options={init:function(b){if("select"!==a.a.A(b))throw Error("options binding applies only to SELECT elements");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.Ka(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return"function"==d?b(a):"string"==d?a[b]:c}function g(c,e){if(A&&h)a.j.ha(b,a.a.c(d.get("value")),!0);else if(p.length){var f=0<=a.a.o(p,a.j.u(e[0]));a.a.sc(e[0],f);A&&!f&&a.l.w(a.a.Da,null,[b,

 Line: 96 -  a.a.A(b))throw Error("values binding applies only to SELECT elements");var d=a.a.c(c()),e=b.scrollTop;d&&"number"==typeof d.length&&a.a.q(b.getElementsByTagName("option"),function(b){var c=0<=a.a.o(d,a.j.u(b));b.selected!=c&&a.a.sc(b,c)});b.scrollTop=e}};a.h.ea.selectedOptions=!0;a.d.style={update:function(b,c){var d=a.a.c(c()||{});a.a.D(d,function(c,d){d=a.a.c(d);if(null===d||d===n||!1===d)d="";b.style[c]=d})}};a.d.submit={init:function(b,c,d,e,f){if("function"!=typeof c())throw Error("The value for a submit binding must be a function");

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/dist/knockout.debug.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 411 -          setTimeout: function (handler, timeout) {

 Line: 412 -              return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);

 Line: 416 -              setTimeout(function () {

 Line: 632 -              setTimeout(function () { form.parentNode.removeChild(form); }, 0);

 Line: 1064 -              setTimeout(callback, 0);

 Line: 1157 -                  writeTimeoutInstance = ko.utils.setTimeout(function() {

 Line: 1218 -              timeoutInstance = ko.utils.setTimeout(function () {

 Line: 1230 -          timeoutInstance = ko.utils.setTimeout(callback, timeout);

 Line: 2037 -              this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {

 Line: 4676 -                  timeoutHandle = ko.utils.setTimeout(handler, 4);

 Line: 4692 -                  ko.utils.setTimeout(updateView, 4);

 Line: 4855 -                      ko.utils.setTimeout(valueUpdateHandler, 0);

 Line: 4867 -                  ko.utils.setTimeout(updateFromModel, 0);

 Line: 4889 -                          ko.utils.setTimeout(applyValueAction, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/knockout/dist/knockout.debug.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 2403 -      // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values

 Line: 2404 -      // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values

 Line: 4367 -              throw new Error("options binding applies only to SELECT elements");

 Line: 4543 -              throw new Error("values binding applies only to SELECT elements");

 Line: 4886 -                          // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/mocha/mocha.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 1963 -    , setTimeout = global.setTimeout

 Line: 1964 -    , setInterval = global.setInterval

 Line: 2618 -    , setTimeout = global.setTimeout

 Line: 2619 -    , setInterval = global.setInterval

 Line: 4086 -    , setTimeout = global.setTimeout

 Line: 4087 -    , setInterval = global.setInterval

 Line: 4212 -    , setTimeout = global.setTimeout

 Line: 4213 -    , setInterval = global.setInterval

 Line: 4272 -    if (this.timer) this.resetTimeout();

 Line: 4351 -  Runnable.prototype.resetTimeout = function(){

 Line: 4357 -    this.timer = setTimeout(function(){

 Line: 4410 -    // for .resetTimeout()

 Line: 4415 -      this.resetTimeout();

 Line: 4453 -        self.resetTimeout();

 Line: 4486 -    'setTimeout',

 Line: 4488 -    'setInterval',

 Line: 5943 -  var setTimeout = global.setTimeout;

 Line: 5944 -  var setInterval = global.setInterval;

 Line: 6017 -      immediateTimeout = setTimeout(timeslice, 0);

 Line: 6030 -      immediateTimeout = setTimeout(timeslice, 0);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/mocha/mocha.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6075 -    var query = Mocha.utils.parseQuery(global.location.search || '');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/sinonjs/sinon.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 913 -              setTimeout(function () {

 Line: 1523 -              eval("p = (function proxy(" + vars.substring(0, func.length * 2 - 1) +

 Line: 1869 -  /*global module, require, sinon, process, setImmediate, setTimeout*/

 Line: 1902 -                  setTimeout(callback, 0);

 Line: 2970 -   * setTimeout

 Line: 2971 -   * setInterval

 Line: 2991 -      // node expects setTimeout/setInterval to return a fn object w/ .ref()/.unref()

 Line: 2994 -      var timeoutResult = setTimeout(function() {}, 0);

 Line: 3097 -          setTimeout: function setTimeout(callback, timeout) {

 Line: 3115 -          setInterval: function setInterval(callback, timeout) {

 Line: 3200 -                      eval(timer.func);

 Line: 3287 -      var methods = ["Date", "setTimeout", "setInterval",

 Line: 3358 -      setTimeout: setTimeout,

 Line: 3362 -      setInterval: setInterval,

 Line: 4138 -                      setTimeout(function () {

 Line: 4262 -   * it polls the object for completion with setInterval. Dispite the direct

 Line: 4264 -   * in any environment where the ajax implementation depends on setInterval or

 Line: 4265 -   * setTimeout.

 Line: 4281 -              if (typeof setTimeout.clock == "object") {

 Line: 4282 -                  this.clock = setTimeout.clock;

 Line: 4289 -                  var clockSetTimeout = this.clock.setTimeout;

 Line: 4290 -                  var clockSetInterval = this.clock.setInterval;

 Line: 4293 -                  this.clock.setTimeout = function (fn, timeout) {

 Line: 4299 -                  this.clock.setInterval = function (fn, timeout) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json_parse_state.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 44 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 509 -                  j = eval('(' + text + ')');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 15 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json2.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 473 -                  j = eval('(' + text + ')');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json2.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/json_parse.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 44 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/cycle.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 146 -                                  value[i] = eval(path);

 Line: 159 -                                      value[name] = eval(path);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/assets/json2/cycle.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/demos/Collage/fabric.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 65 -          readyStatus[fabric.document.readyState] ? perform() : setTimeout(arguments.callee, 10);

 Line: 76 -            setTimeout(arguments.callee, 1);

 Line: 153 -          else setTimeout(arguments.callee, 10);

 Line: 340 -        setTimeout(function() {

 Line: 1701 -                  j = eval('(' + text + ')');

 Line: 1944 -                              fabric.window.setTimeout(callback, 1000 / 60);

 Line: 6256 -        setTimeout(function () {

 Line: 7423 -                    setTimeout(function () {

 Line: 8282 -        // setTimeout(function() {

 Line: 13893 -        eval(body);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/demos/Collage/fabric.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1244 -      USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO

</Result>
</report_mosca>

