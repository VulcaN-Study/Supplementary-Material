/src/public/vendor/jquery.cookie/jquery.cookie.js-81-		// in case there are no cookies at all. Also prevents odd result when
/src/public/vendor/jquery.cookie/jquery.cookie.js:82:		// calling $.cookie().
/src/public/vendor/jquery.cookie/jquery.cookie.js-83-		var cookies = document.cookie ? document.cookie.split('; ') : [];
##############################################
/src/public/vendor/jquery.cookie/jquery.cookie.js-107-	$.removeCookie = function (key, options) {
/src/public/vendor/jquery.cookie/jquery.cookie.js:108:		if ($.cookie(key) === undefined) {
/src/public/vendor/jquery.cookie/jquery.cookie.js-109-			return false;
##############################################
/src/public/vendor/jquery.cookie/jquery.cookie.js-112-		// Must not alter options, thus extending a fresh object...
/src/public/vendor/jquery.cookie/jquery.cookie.js:113:		$.cookie(key, '', $.extend({}, options, { expires: -1 }));
/src/public/vendor/jquery.cookie/jquery.cookie.js:114:		return !$.cookie(key);
/src/public/vendor/jquery.cookie/jquery.cookie.js-115-	};
##############################################
/src/public/js/code.js-15-  cookie.get = function () {
/src/public/js/code.js:16:    return $.cookie(cookie.options.name);
/src/public/js/code.js-17-  };
##############################################
/src/public/js/code.js-19-  cookie.set = function (value) {
/src/public/js/code.js:20:    $.cookie(cookie.options.name, value);
/src/public/js/code.js-21-  };
