{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .editorconfig as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 1
          },
          "file": "/src/.editorconfig",
          "source_hash": "80d3d711f8b341e83eed190f695bf8f3fe42b6dc9f55e8052e28c7684583b622",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .editorconfig as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 1
          },
          "file": "/src/.editorconfig",
          "source_hash": "80d3d711f8b341e83eed190f695bf8f3fe42b6dc9f55e8052e28c7684583b622",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 2
          },
          "file": "/src/.npmignore",
          "source_hash": "674953958f6826b4c8d311029e3d1e17089641d9a724556a540431df30841766",
          "start": {
            "col": 1,
            "line": 2
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 2
          },
          "file": "/src/.npmignore",
          "source_hash": "674953958f6826b4c8d311029e3d1e17089641d9a724556a540431df30841766",
          "start": {
            "col": 1,
            "line": 2
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/lib/arrayUtils.js",
          "match_lines": [
            100,
            100
          ],
          "match_position": [
            34,
            47
          ],
          "match_string": "        randomIndex = Math.floor(Math.random() * currentIndex);"
        },
        {
          "file_path": "/src/lib/arrayUtils.js",
          "match_lines": [
            257,
            257
          ],
          "match_position": [
            29,
            42
          ],
          "match_string": "    return array[Math.floor(Math.random() * array.length)];"
        },
        {
          "file_path": "/src/lib/numberUtils.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            23,
            36
          ],
          "match_string": "    return Math.floor(Math.random() * (max - min + 1)) + min;"
        },
        {
          "file_path": "/src/lib/stringUtils.js",
          "match_lines": [
            366,
            366
          ],
          "match_position": [
            17,
            30
          ],
          "match_string": "        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_md5": {
      "files": [
        {
          "file_path": "/src/lib/cryptoUtils.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            12,
            36
          ],
          "match_string": "    return crypto.createHash('md5').update(value).digest('hex');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_password": {
      "files": [
        {
          "file_path": "/src/tests/cryptoUtilsTest.js",
          "match_lines": [
            47,
            47
          ],
          "match_position": [
            17,
            38
          ],
          "match_string": "                password = 'password',"
        },
        {
          "file_path": "/src/tests/cryptoUtilsTest.js",
          "match_lines": [
            56,
            56
          ],
          "match_position": [
            17,
            38
          ],
          "match_string": "                password = 'password';"
        },
        {
          "file_path": "/src/tests/cryptoUtilsTest.js",
          "match_lines": [
            69,
            69
          ],
          "match_position": [
            17,
            38
          ],
          "match_string": "                password = 'password',"
        }
      ],
      "metadata": {
        "cwe": "CWE-798: Use of Hard-coded Credentials",
        "description": "A hardcoded password in plain text is identified. Store it properly in an environment variable.",
        "owasp": "A3: Sensitive Data Exposure",
        "severity": "ERROR"
      }
    },
    "node_sha1": {
      "files": [
        {
          "file_path": "/src/lib/cryptoUtils.js",
          "match_lines": [
            31,
            31
          ],
          "match_position": [
            12,
            37
          ],
          "match_string": "    return crypto.createHash('sha1').update(value).digest('hex');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "SHA1 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/stringUtils.js",
          "match_lines": [
            681,
            681
          ],
          "match_position": [
            12,
            64
          ],
          "match_string": "    return new RegExp('^[0-9a-zA-Z]' + size + '$').test(string);"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}