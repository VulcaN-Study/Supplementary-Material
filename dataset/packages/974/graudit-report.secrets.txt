/src/src/otr.js-1498-    this.smpstate = CONST.SMPSTATE_EXPECT1
/src/src/otr.js:1499:    this.secret = null
/src/src/otr.js-1500-  }
/src/src/otr.js-1501-
/src/src/otr.js:1502:  SM.prototype.makeSecret = function (our, secret) {
/src/src/otr.js-1503-    var sha256 = CryptoJS.algo.SHA256.create()
##############################################
/src/src/otr.js-1509-    var hash = sha256.finalize()
/src/src/otr.js:1510:    this.secret = HLP.bits2bigInt(hash.toString(CryptoJS.enc.Latin1))
/src/src/otr.js-1511-  }
##############################################
/src/src/otr.js-1781-
/src/src/otr.js:1782:  SM.prototype.rcvSecret = function (secret, question) {
/src/src/otr.js-1783-    HLP.debug.call(this, 'receive secret')
##############################################
/src/src/otr.js-2385-
/src/src/otr.js:2386:  OTR.prototype.smpSecret = function (secret, question) {
/src/src/otr.js-2387-    if (this.msgstate !== CONST.MSGSTATE_ENCRYPTED)
##############################################
/src/src/otr.js-2395-    // utf8 inputs
/src/src/otr.js:2396:    secret = CryptoJS.enc.Utf8.parse(secret).toString(CryptoJS.enc.Latin1)
/src/src/otr.js-2397-    question = CryptoJS.enc.Utf8.parse(question).toString(CryptoJS.enc.Latin1)
##############################################
/src/dist/converse.js-45405-    this.smpstate = CONST.SMPSTATE_EXPECT1
/src/dist/converse.js:45406:    this.secret = null
/src/dist/converse.js-45407-  }
/src/dist/converse.js-45408-
/src/dist/converse.js:45409:  SM.prototype.makeSecret = function (our, secret) {
/src/dist/converse.js-45410-    var sha256 = CryptoJS.algo.SHA256.create()
##############################################
/src/dist/converse.js-45416-    var hash = sha256.finalize()
/src/dist/converse.js:45417:    this.secret = HLP.bits2bigInt(hash.toString(CryptoJS.enc.Latin1))
/src/dist/converse.js-45418-  }
##############################################
/src/dist/converse.js-45688-
/src/dist/converse.js:45689:  SM.prototype.rcvSecret = function (secret, question) {
/src/dist/converse.js-45690-    HLP.debug.call(this, 'receive secret')
##############################################
/src/dist/converse.js-46292-
/src/dist/converse.js:46293:  OTR.prototype.smpSecret = function (secret, question) {
/src/dist/converse.js-46294-    if (this.msgstate !== CONST.MSGSTATE_ENCRYPTED)
##############################################
/src/dist/converse.js-46302-    // utf8 inputs
/src/dist/converse.js:46303:    secret = CryptoJS.enc.Utf8.parse(secret).toString(CryptoJS.enc.Latin1)
/src/dist/converse.js-46304-    question = CryptoJS.enc.Utf8.parse(question).toString(CryptoJS.enc.Latin1)
##############################################
/src/dist/converse-mobile.js-45405-    this.smpstate = CONST.SMPSTATE_EXPECT1
/src/dist/converse-mobile.js:45406:    this.secret = null
/src/dist/converse-mobile.js-45407-  }
/src/dist/converse-mobile.js-45408-
/src/dist/converse-mobile.js:45409:  SM.prototype.makeSecret = function (our, secret) {
/src/dist/converse-mobile.js-45410-    var sha256 = CryptoJS.algo.SHA256.create()
##############################################
/src/dist/converse-mobile.js-45416-    var hash = sha256.finalize()
/src/dist/converse-mobile.js:45417:    this.secret = HLP.bits2bigInt(hash.toString(CryptoJS.enc.Latin1))
/src/dist/converse-mobile.js-45418-  }
##############################################
/src/dist/converse-mobile.js-45688-
/src/dist/converse-mobile.js:45689:  SM.prototype.rcvSecret = function (secret, question) {
/src/dist/converse-mobile.js-45690-    HLP.debug.call(this, 'receive secret')
##############################################
/src/dist/converse-mobile.js-46292-
/src/dist/converse-mobile.js:46293:  OTR.prototype.smpSecret = function (secret, question) {
/src/dist/converse-mobile.js-46294-    if (this.msgstate !== CONST.MSGSTATE_ENCRYPTED)
##############################################
/src/dist/converse-mobile.js-46302-    // utf8 inputs
/src/dist/converse-mobile.js:46303:    secret = CryptoJS.enc.Utf8.parse(secret).toString(CryptoJS.enc.Latin1)
/src/dist/converse-mobile.js-46304-    question = CryptoJS.enc.Utf8.parse(question).toString(CryptoJS.enc.Latin1)
