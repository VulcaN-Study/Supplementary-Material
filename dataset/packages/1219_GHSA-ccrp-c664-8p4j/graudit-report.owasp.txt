/src/README.md-72-
/src/README.md:73:render(<Markdown># Hello world!</Markdown>, document.body);
/src/README.md-74-
##############################################
/src/README.md-158-    </Markdown>,
/src/README.md:159:    document.body
/src/README.md-160-);
##############################################
/src/README.md-224-    />,
/src/README.md:225:    document.body
/src/README.md-226-);
##############################################
/src/README.md-228-
/src/README.md:229:`markdown-to-jsx` also handles JSX interpolation syntax, but in a minimal way to not introduce a potential attack vector. Interpolations are sent to the component as their raw string, which the consumer can then `eval()` or process as desired to their security needs.
/src/README.md-230-
##############################################
/src/README.md-263-    />,
/src/README.md:264:    document.body
/src/README.md-265-);
##############################################
/src/README.md-312-    />,
/src/README.md:313:    document.body
/src/README.md-314-);
##############################################
/src/README.md-342-    />,
/src/README.md:343:    document.body
/src/README.md-344-);
##############################################
/src/README.md-483-
/src/README.md:484:render(compiler('# Hello world!'), document.body);
/src/README.md-485-
