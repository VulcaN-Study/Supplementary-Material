<report_mosca>
 <Path>/src/static/start/jquery-1.8.1.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 393 -  			return setTimeout( jQuery.ready, 1 );

 Line: 851 -  			setTimeout( jQuery.ready, 1 );

 Line: 886 -  							return setTimeout( doScrollCheck, 50 );

 Line: 1952 -  			var timeout = setTimeout( next, time );

 Line: 7825 -  				timeoutTimer = setTimeout( function(){

 Line: 8374 -  						setTimeout( callback, 0 );

 Line: 8452 -  	setTimeout(function() {

 Line: 9032 -  		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/static/start/jquery-1.8.1.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 5093 -  			// Only use querySelectorAll when not filtering,

 Line: 7058 -  //key/values into a query string

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/action/fileUpload.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  	main: function (request, query){

 Line: 6 -  	upload: function (request, query){

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/action/ajax.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 3 -  	main: function (request, query){

 Line: 9 -  	getJson: function (request, query){

 Line: 16 -  	getXml: function (request, query){

 Line: 22 -  	getHtml: function (request, query){

 Line: 28 -  	getJsonp: function (request, query){

 Line: 30 -  		var callback = query['mycallback'];

 Line: 40 -  	getScript: function (request, query){

 Line: 46 -  	getMembersOfRequest: function (request, query){

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/action/register.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  	main: function (request, query){

 Line: 6 -  	saveMessage: function (request, query, response){

 Line: 25 -  	connection.query('SELECT 1 + 1 AS solution', function(err, rows, fields) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/action/serverSent.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  	main : function (request, query) {

 Line: 6 -  	serverSent : function (request, query) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/controller.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  var querystring = require("querystring");

 Line: 13 -  	var query = {}; //保存请求参数

 Line: 92 -  				proxy(request, response, query);

 Line: 97 -  			query = querystring.parse(parsedUrl.query); 

 Line: 98 -  			proxy(request, response, query);

 Line: 109 -  function proxy(request, response, query){

 Line: 125 -  			var result = action[methodName](request, query, response);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/controller_v0.1.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  var querystring = require("querystring");

 Line: 11 -  	var query = {}; //保存请求参数

 Line: 27 -  					// query = convertQueryFromBuffer(dataBuffer, boundary);

 Line: 30 -  					query = querystring.parse(dataBuffer.toString());

 Line: 32 -  				proxy(request, response, query);

 Line: 107 -  				proxy(request, response, query);

 Line: 112 -  			query = querystring.parse(parsedUrl.query); 

 Line: 113 -  			proxy(request, response, query);

 Line: 124 -  function proxy(request, response, query){

 Line: 141 -  			var result = action[entryName](request, query);

 Line: 221 -  	var query = {};

 Line: 222 -  	var queryArray = data.split('--' + boundary);

 Line: 224 -  	console.log("@@@queryArray.length=" + queryArray.length); */

 Line: 226 -  		var currStr = queryArray[i];

 Line: 250 -  					if(typeof query[name] === 'undefined'){

 Line: 264 -  	return query;

 Line: 272 -  	var query = {};

 Line: 286 -  	return query;

</Result>
</report_mosca>

