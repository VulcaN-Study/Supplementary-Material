{
  "errors": [
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0001_+\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000#\u0000\u0000\u0015com.macromates.caret\u0000{",
          "message": "Lexical error: unrecognised symbol, in token rule:\u0000"
        },
        "path": "/src/._LICENSE",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0001e\ufffd\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000!\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000!\u0000\u0000\u0015com.macromates.caret\u0000x\ufffd\ufffd\ufffdR\u0000\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<\u0005[\u0005#\u0013k\ufffd@Nf^*\ufffd[\u000b\u0000\ufffd\u0013\b\ufffd",
          "message": "Lexical error: unrecognised symbol, in token rule:\u0000"
        },
        "path": "/src/._README",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 19,
          "line": 1
        },
        "extra": {
          "line": "Copyright (c) 2010 Jeremy Ashkenas, DocumentCloud",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 15,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 8,
          "line": 2
        },
        "extra": {
          "line": " |  _ \\           | |   | |                      (_)    ",
          "message": "Lexical error: unrecognised symbol, in token rule:\\"
        },
        "path": "/src/README",
        "start": {
          "col": 7,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 37
        },
        "extra": {
          "line": "# Check for the existence of an executable.",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/Rakefile",
        "start": {
          "col": 1,
          "line": 37
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0001h\ufffd\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000 \u0000\u0000\u0015com.macromates.caret\u0000x\ufffd\ufffd\ufffdR\u0000\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<\u0005[\u0005\u0003k0?'3/\u0015\u00ab\u0005\u0000\ufffd\ufffd\b\u001d",
          "message": "Lexical error: unrecognised symbol, in token rule:\u0000"
        },
        "path": "/src/test/._events.js",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0001{\ufffd\u0004\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000 \u0000\u0000\u0015com.macromates.caret\u0000x\ufffd\ufffd\ufffdR\u0000\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd<\u0005[\u0005\u0003k0?'3/\u0015\u00ab\u0005\u0000\ufffd\ufffd\b\u001d",
          "message": "Lexical error: unrecognised symbol, in token rule:\u0000"
        },
        "path": "/src/test/._sync.js",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 1
        },
        "extra": {
          "line": "\u0000\u0005\u0016\u0007\u0000\u0002\u0000\u0000Mac OS X        \u0000\u0002\u0000\u0000\u0000\t\u0000\u0000\u00002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0002\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ATTR\u0001d\ufffdC\u0000\u0000\u0000\ufffd\u0000\u0000\u0000\ufffd\u0000\u0000\u0000#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffd\u0000\u0000\u0000#\u0000\u0000\u0015com.macromates.caret\u0000{",
          "message": "Lexical error: unrecognised symbol, in token rule:\u0000"
        },
        "path": "/src/test/vendor/._json2.js",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/test/speed.js",
          "match_lines": [
            28,
            28
          ],
          "match_position": [
            24,
            35
          ],
          "match_string": "    model.set({number: Math.random()});"
        },
        {
          "file_path": "/src/test/speed.js",
          "match_lines": [
            35,
            35
          ],
          "match_position": [
            29,
            40
          ],
          "match_string": "    eventModel.set({number: Math.random()});"
        },
        {
          "file_path": "/src/test/speed.js",
          "match_lines": [
            42,
            42
          ],
          "match_position": [
            27,
            38
          ],
          "match_string": "    keyModel.set({number: Math.random()});"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/test/vendor/json2.js",
          "match_lines": [
            437,
            437
          ],
          "match_position": [
            17,
            29
          ],
          "match_string": "            if (cx.test(text)) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
