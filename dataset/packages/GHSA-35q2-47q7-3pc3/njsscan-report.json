{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 4,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "cc4ebcaa201b6d8a8facd3e2a92218aff78680074a7eaf45526752f054cab14c",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 4,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "cc4ebcaa201b6d8a8facd3e2a92218aff78680074a7eaf45526752f054cab14c",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/lib/createClient.js",
          "match_lines": [
            8,
            8
          ],
          "match_position": [
            73,
            95
          ],
          "match_string": "    if (typeof port_arg === 'number' || typeof port_arg === 'string' && /^\\d+$/.test(port_arg)) {"
        },
        {
          "file_path": "/src/lib/individualCommands.js",
          "match_lines": [
            186,
            186
          ],
          "match_position": [
            17,
            53
          ],
          "match_string": "            if (no_password_is_set.test(err.message)) {"
        },
        {
          "file_path": "/src/lib/individualCommands.js",
          "match_lines": [
            190,
            190
          ],
          "match_position": [
            24,
            49
          ],
          "match_string": "            } else if (loading.test(err.message)) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}