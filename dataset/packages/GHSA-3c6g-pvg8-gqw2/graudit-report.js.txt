/src/lib/json.js-128-    var quoted = '"' + s.replace(/\\"/, '"').replace('"', '\\"') + '"';
/src/lib/json.js:129:    return eval(quoted);
/src/lib/json.js-130-}
##############################################
/src/lib/json.js-592-                try {
/src/lib/json.js:593:                    obj = JSON.parse(block);
/src/lib/json.js-594-                } catch (e) {
##############################################
/src/lib/json.js-607-            s = bits[0] + bits[1];
/src/lib/json.js:608:            emitter.emit('chunk', s, JSON.parse(s));
/src/lib/json.js-609-            for (var i = 3; i < n; i += 4) {
/src/lib/json.js-610-                s = bits[i] + bits[i + 1] + bits[i + 2];
/src/lib/json.js:611:                emitter.emit('chunk', s, JSON.parse(s));
/src/lib/json.js-612-            }
##############################################
/src/lib/json.js-655-                    var next = opts.inputFiles[i++];
/src/lib/json.js:656:                    var nextFile = fs.createReadStream(next,
/src/lib/json.js-657-                        {encoding: 'utf8'});
##############################################
/src/lib/json.js-671-        }
/src/lib/json.js:672:        var first = fs.createReadStream(opts.inputFiles[i++],
/src/lib/json.js-673-            {encoding: 'utf8'});
##############################################
/src/lib/json.js-953-            return {
/src/lib/json.js:954:                datum: JSON.parse(newBuffer)
/src/lib/json.js-955-            };
##############################################
/src/lib/json.js-971-        try {
/src/lib/json.js:972:            objs = JSON.parse(newBuffer);
/src/lib/json.js-973-        } catch (e) {
##############################################
/src/lib/json.js-1010-            return {
/src/lib/json.js:1011:                datum: JSON.parse(buffer)
/src/lib/json.js-1012-            };
