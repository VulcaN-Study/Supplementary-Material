/src/src/browser/style/index.css-131-    background: var(--theia-editor-background);
/src/src/browser/style/index.css:132:    background-image: var(--theia-preloader);
/src/src/browser/style/index.css-133-    background-size: 60px 60px;
##############################################
/src/src/browser/mini-browser-open-handler.ts-110-    async open(uri: URI, options?: MiniBrowserOpenerOptions): Promise<MiniBrowser> {
/src/src/browser/mini-browser-open-handler.ts:111:        const widget = await super.open(uri, options);
/src/src/browser/mini-browser-open-handler.ts-112-        const area = this.shell.getAreaFor(widget);
##############################################
/src/src/browser/mini-browser-open-handler.ts-233-        }
/src/src/browser/mini-browser-open-handler.ts:234:        await this.open(uri, {
/src/src/browser/mini-browser-open-handler.ts-235-            mode: 'reveal',
##############################################
/src/src/browser/mini-browser-open-handler.ts-257-    protected async openUrl(arg?: string): Promise<void> {
/src/src/browser/mini-browser-open-handler.ts:258:        const url = arg ? arg : await this.quickInputService.open({
/src/src/browser/mini-browser-open-handler.ts-259-            prompt: 'URL to open',
##############################################
/src/src/browser/mini-browser-open-handler.ts-268-        const props = await this.getOpenPreviewProps(await this.locationMapperService.map(startPage));
/src/src/browser/mini-browser-open-handler.ts:269:        return this.open(MiniBrowserOpenHandler.PREVIEW_URI, props);
/src/src/browser/mini-browser-open-handler.ts-270-    }
##############################################
/src/src/browser/mini-browser-content.ts-87-        /**
/src/src/browser/mini-browser-content.ts:88:         * Allows popups, such as `window.open()`, `showModalDialog()`, `target=”_blank”`, etc.
/src/src/browser/mini-browser-content.ts-89-         */
##############################################
/src/src/browser/mini-browser-content.ts-385-        // Actually hide the load indicator after the transition is finished.
/src/src/browser/mini-browser-content.ts:386:        const preloadStyle = window.getComputedStyle(this.loadIndicator);
/src/src/browser/mini-browser-content.ts:387:        const transitionDuration = parseCssTime(preloadStyle.transitionDuration, 0);
/src/src/browser/mini-browser-content.ts-388-        setTimeout(() => {
##############################################
/src/src/node/mini-browser-endpoint.ts-232-    respond(statWithContent: FileStatWithContent, response: Response): MaybePromise<Response> {
/src/src/node/mini-browser-endpoint.ts:233:        fs.readFile(FileUri.fsPath(statWithContent.stat.uri), (error, data) => {
/src/src/node/mini-browser-endpoint.ts-234-            if (error) {
##############################################
/src/src/node/mini-browser-endpoint.ts-269-        const fileName = FileUri.create(statWithContent.stat.uri).path.base;
/src/src/node/mini-browser-endpoint.ts:270:        fs.readFile(FileUri.fsPath(statWithContent.stat.uri), (error, data) => {
/src/src/node/mini-browser-endpoint.ts-271-            if (error) {
##############################################
/src/lib/browser/mini-browser-content.d.ts-66-        /**
/src/lib/browser/mini-browser-content.d.ts:67:         * Allows popups, such as `window.open()`, `showModalDialog()`, `target=”_blank”`, etc.
/src/lib/browser/mini-browser-content.d.ts-68-         */
##############################################
/src/lib/browser/mini-browser-open-handler.js-299-                        }
/src/lib/browser/mini-browser-open-handler.js:300:                        return [4 /*yield*/, this.open(uri, {
/src/lib/browser/mini-browser-open-handler.js-301-                                mode: 'reveal',
##############################################
/src/lib/browser/mini-browser-open-handler.js-318-                        if (!uri) return [3 /*break*/, 2];
/src/lib/browser/mini-browser-open-handler.js:319:                        return [4 /*yield*/, opener_service_1.open(this.openerService, uri, {
/src/lib/browser/mini-browser-open-handler.js-320-                                widgetOptions: { ref: ref, mode: 'open-to-left' }
##############################################
/src/lib/browser/mini-browser-open-handler.js-345-                        return [3 /*break*/, 3];
/src/lib/browser/mini-browser-open-handler.js:346:                    case 1: return [4 /*yield*/, this.quickInputService.open({
/src/lib/browser/mini-browser-open-handler.js-347-                            prompt: 'URL to open',
##############################################
/src/lib/browser/mini-browser-open-handler.js-375-                        props = _b.sent();
/src/lib/browser/mini-browser-open-handler.js:376:                        return [2 /*return*/, this.open(MiniBrowserOpenHandler_1.PREVIEW_URI, props)];
/src/lib/browser/mini-browser-open-handler.js-377-                }
##############################################
/src/lib/browser/mini-browser-content.js-147-        /**
/src/lib/browser/mini-browser-content.js:148:         * Allows popups, such as `window.open()`, `showModalDialog()`, `target=”_blank”`, etc.
/src/lib/browser/mini-browser-content.js-149-         */
##############################################
/src/lib/browser/mini-browser-content.js-390-        // Actually hide the load indicator after the transition is finished.
/src/lib/browser/mini-browser-content.js:391:        var preloadStyle = window.getComputedStyle(this.loadIndicator);
/src/lib/browser/mini-browser-content.js:392:        var transitionDuration = browser_1.parseCssTime(preloadStyle.transitionDuration, 0);
/src/lib/browser/mini-browser-content.js-393-        setTimeout(function () {
##############################################
/src/lib/node/mini-browser-endpoint.js-340-    ImageHandler.prototype.respond = function (statWithContent, response) {
/src/lib/node/mini-browser-endpoint.js:341:        fs.readFile(file_uri_1.FileUri.fsPath(statWithContent.stat.uri), function (error, data) {
/src/lib/node/mini-browser-endpoint.js-342-            if (error) {
##############################################
/src/lib/node/mini-browser-endpoint.js-378-        var fileName = file_uri_1.FileUri.create(statWithContent.stat.uri).path.base;
/src/lib/node/mini-browser-endpoint.js:379:        fs.readFile(file_uri_1.FileUri.fsPath(statWithContent.stat.uri), function (error, data) {
/src/lib/node/mini-browser-endpoint.js-380-            if (error) {
