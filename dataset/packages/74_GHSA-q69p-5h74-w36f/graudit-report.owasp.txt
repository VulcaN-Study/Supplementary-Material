/src/src/request.js-15-            // XDomainRequest in use; doesn't support cross-protocol requests
/src/src/request.js:16:            return document.location.protocol;
/src/src/request.js:17:        } else if (protocol === 'https:' || document.location.protocol === 'https:' || config.FORCE_HTTPS) {
/src/src/request.js-18-            return 'https:';
##############################################
/src/src/map.js-194-        }
/src/src/map.js:195:        window.setTimeout(L.bind(this._updateMapFeedbackLink, this), 0); // Update after attribution control resets the HTML.
/src/src/map.js-196-    },
##############################################
/src/src/map.js-201-        }
/src/src/map.js:202:        window.setTimeout(L.bind(this._updateMapFeedbackLink, this), 0); // Update after attribution control resets the HTML.
/src/src/map.js-203-    },
##############################################
/src/src/format_url.js-13-
/src/src/format_url.js:14:    var url = (document.location.protocol === 'https:' || config.FORCE_HTTPS) ? config.HTTPS_URL : config.HTTP_URL;
/src/src/format_url.js-15-    url = url.replace(/\/v4$/, '');
##############################################
/src/src/share_control.js-55-        var tilejson = this._tilejson || this._map._tilejson || {},
/src/src/share_control.js:56:            url = encodeURIComponent(this.options.url || tilejson.webpage || window.location),
/src/src/share_control.js-57-            name = encodeURIComponent(tilejson.name),
##############################################
/src/src/mapbox.js-47-    // to https if they're detected.
/src/src/mapbox.js:48:    ((document.location.protocol === 'https:' ||
/src/src/mapbox.js:49:    document.location.protocol === 'http:') ? '' : 'https:') +
/src/src/mapbox.js-50-    '//api.tiles.mapbox.com/mapbox.js/' + 'v' +
##############################################
/src/src/grid_control.js-100-    _navigateTo: function(url) {
/src/src/grid_control.js:101:        window.top.location.href = url;
/src/src/grid_control.js-102-    },
##############################################
/src/JS.md-100-
/src/JS.md:101:This is probably the simplest possible callback: `window.setTimeout` is a built-in function that lets you set a timer for something to happen, and it takes as arguments another function, and a number of milliseconds.
/src/JS.md-102-
##############################################
/src/JS.md-105-```js
/src/JS.md:106:window.setTimeout(function() {
/src/JS.md-107-  alert('hi');
##############################################
/src/_docs/leaflet-reference.html-1691-
/src/_docs/leaflet-reference.html:1692:<p>You can use custom keys in the template, which will be <a href="#util-template">evaluated</a> from TileLayer options, like this:</p>
/src/_docs/leaflet-reference.html-1693-
##############################################
/src/_docs/leaflet-reference.html-5220-		<td><code>String</code></td>
/src/_docs/leaflet-reference.html:5221:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/_docs/leaflet-reference.html-5222-	</tr>
##############################################
/src/API.md-146-        if (e.data && e.data.url) {
/src/API.md:147:            window.open(e.data.url);
/src/API.md-148-        }
##############################################
/src/API.md-437-| layer | `L.mapbox.gridLayer` | The first argument must be a layer created with `L.mapbox.gridLayer()` |
/src/API.md:438:| options | object | Valid options are:<ul><li>`sanitizer`: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li>`template`: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li>`follow`: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is `false` and the tooltip is stationary.</li><li>`pinnable`: Whether clicking will 'pin' the tooltip open and expose a 'close' button for the user to close the tooltip. By default, this is `true`.</li><li>`touchTeaser`: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is `true`.</li><li>`location`: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is `true`.</li></ul> |
/src/API.md-439-
##############################################
/src/test/manual/timeline.html-105-        for (var i = 0; i < yearlist.length; i++) {
/src/test/manual/timeline.html:106:            var a = timeline.appendChild(document.createElement('a'));
/src/test/manual/timeline.html-107-            a.innerHTML = yearlist[i] + ' ';
##############################################
/src/test/manual/timeline.html-112-
/src/test/manual/timeline.html:113:        var stop = controls.appendChild(document.createElement('a')),
/src/test/manual/timeline.html:114:            play = controls.appendChild(document.createElement('a')),
/src/test/manual/timeline.html-115-            playStep;
##############################################
/src/test/manual/timeline.html-125-            // the animation.
/src/test/manual/timeline.html:126:            playStep = window.setInterval(function() {
/src/test/manual/timeline.html-127-                if (step < yearlist.length) {
##############################################
/src/test/manual/leaflet-hash.js-93-		update: function() {
/src/test/manual/leaflet-hash.js:94:			var hash = location.hash;
/src/test/manual/leaflet-hash.js-95-			if (hash === this.lastHash) {
##############################################
/src/test/manual/tooltips-on-hover.html-27-    mapfeatureLayerr.on('mouseout', function(e) {
/src/test/manual/tooltips-on-hover.html:28:        e.layer._closeTimeout = window.setTimeout(function() {
/src/test/manual/tooltips-on-hover.html-29-            e.layer.closePopup();
##############################################
/src/test/manual/layers.html-73-        // and off.
/src/test/manual/layers.html:74:        var item = document.createElement('li');
/src/test/manual/layers.html:75:        var link = document.createElement('a');
/src/test/manual/layers.html-76-
##############################################
/src/test/manual/interactive-navigation.html-16-        if (e.data && e.data.admin) {
/src/test/manual/interactive-navigation.html:17:            window.open("http://en.wikipedia.org/wiki/" + e.data.admin.replace(' ', '_'));
/src/test/manual/interactive-navigation.html-18-        }
##############################################
/src/test/manual/access_token.js:1:var match = location.search.match(/access_token=([^&\/]*)/);
/src/test/manual/access_token.js-2-var accessToken = match && match[1];
##############################################
/src/test/manual/marker-movement.html-27-    var t = 0;
/src/test/manual/marker-movement.html:28:    window.setInterval(function() {
/src/test/manual/marker-movement.html-29-        // making a lissajous curve here just for fun. this isn't necessary
##############################################
/src/test/manual/cycle-markers.html-26-        function loop() {
/src/test/manual/cycle-markers.html:27:            window.setTimeout(function() {
/src/test/manual/cycle-markers.html-28-                if (++i > markers.length - 1) i = 0;
##############################################
/src/test/manual/external-marker-tooltip.html-42-    // Add a header and paragraph, and fill them with content
/src/test/manual/external-marker-tooltip.html:43:    var h1 = alert.appendChild(document.createElement('h1'));
/src/test/manual/external-marker-tooltip.html:44:    var p = alert.appendChild(document.createElement('p'));
/src/test/manual/external-marker-tooltip.html-45-
##############################################
/src/test/manual/markers-as-links.html-49-        e.layer.unbindPopup();
/src/test/manual/markers-as-links.html:50:        window.open(e.layer.feature.properties.url);
/src/test/manual/markers-as-links.html-51-    });
##############################################
/src/test/spec/info_control.js-15-        it('adds a map info element to its container', function() {
/src/test/spec/info_control.js:16:            var elem = document.createElement('div');
/src/test/spec/info_control.js-17-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/info_control.js-24-        it('handles multiple infos', function() {
/src/test/spec/info_control.js:25:            var elem = document.createElement('div');
/src/test/spec/info_control.js-26-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/info_control.js-43-        it('adds and removes dom elements', function() {
/src/test/spec/info_control.js:44:            var elem = document.createElement('div');
/src/test/spec/info_control.js-45-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/info_control.js-56-    it('sanitizes its content', function() {
/src/test/spec/info_control.js:57:        var map = L.map(document.createElement('div'));
/src/test/spec/info_control.js-58-        var info = L.mapbox.infoControl().addTo(map);
##############################################
/src/test/spec/info_control.js-65-    it('supports a custom sanitizer', function() {
/src/test/spec/info_control.js:66:        var map = L.map(document.createElement('div'));
/src/test/spec/info_control.js-67-        var info = L.mapbox.infoControl({
##############################################
/src/test/spec/info_control.js-77-        var server = sinon.fakeServer.create();
/src/test/spec/info_control.js:78:        var element = document.createElement('div');
/src/test/spec/info_control.js-79-        var map = L.mapbox.map(element, 'mapbox.map-0l53fhk2', {
##############################################
/src/test/spec/attribution_control.js-6-    beforeEach(function() {
/src/test/spec/attribution_control.js:7:        el = document.querySelector('body').appendChild(document.createElement('div'));
/src/test/spec/attribution_control.js-8-    });
##############################################
/src/test/spec/mapbox_logo.js-5-        server = sinon.fakeServer.create();
/src/test/spec/mapbox_logo.js:6:        element = document.createElement('div');
/src/test/spec/mapbox_logo.js-7-    });
##############################################
/src/test/spec/map.js-5-        server = sinon.fakeServer.create();
/src/test/spec/map.js:6:        element = document.createElement('div');
/src/test/spec/map.js-7-    });
##############################################
/src/test/spec/share_control.js-5-    beforeEach(function() {
/src/test/spec/share_control.js:6:        element = document.createElement('div');
/src/test/spec/share_control.js:7:        document.body.appendChild(element);
/src/test/spec/share_control.js-8-        element.style.width = '256px';
##############################################
/src/test/spec/legend_control.js-14-        it('adds a map legend element to its container', function() {
/src/test/spec/legend_control.js:15:            var elem = document.createElement('div');
/src/test/spec/legend_control.js-16-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/legend_control.js-23-        it('handles multiple legends', function() {
/src/test/spec/legend_control.js:24:            var elem = document.createElement('div');
/src/test/spec/legend_control.js-25-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/legend_control.js-42-        it('adds and removes dom elements', function() {
/src/test/spec/legend_control.js:43:            var elem = document.createElement('div');
/src/test/spec/legend_control.js-44-            var map = L.mapbox.map(elem);
##############################################
/src/test/spec/legend_control.js-55-    it('sanitizes its content', function() {
/src/test/spec/legend_control.js:56:        var map = L.map(document.createElement('div'));
/src/test/spec/legend_control.js-57-        var legend = L.mapbox.legendControl().addTo(map);
##############################################
/src/test/spec/legend_control.js-64-    it('supports a custom sanitizer', function() {
/src/test/spec/legend_control.js:65:        var map = L.map(document.createElement('div'));
/src/test/spec/legend_control.js-66-        var legend = L.mapbox.legendControl({
##############################################
/src/test/spec/grid_control.js-6-    beforeEach(function() {
/src/test/spec/grid_control.js:7:        element = document.createElement('div');
/src/test/spec/grid_control.js-8-        map = L.mapbox.map(element);
##############################################
/src/test/spec/grid_layer.js-21-        server = sinon.fakeServer.create();
/src/test/spec/grid_layer.js:22:        element = document.createElement('div');
/src/test/spec/grid_layer.js:23:        document.body.appendChild(element);
/src/test/spec/grid_layer.js-24-        element.style.width = '256px';
##############################################
/src/test/spec/geocoder_control.js-13-    it('performs forward geolocation, centering the map on the first result', function() {
/src/test/spec/geocoder_control.js:14:        var map = new L.Map(document.createElement('div')),
/src/test/spec/geocoder_control.js-15-            control = L.mapbox.geocoderControl('mapbox.places', { proximity: false }).addTo(map);
##############################################
/src/test/spec/geocoder_control.js-30-    it('performs forward geolocation, centering the map on the first result even if a point', function() {
/src/test/spec/geocoder_control.js:31:        var map = new L.Map(document.createElement('div')),
/src/test/spec/geocoder_control.js-32-            control = L.mapbox.geocoderControl('mapbox.places', { proximity: false }).addTo(map);
##############################################
/src/test/spec/geocoder_control.js-46-    it('supports the pointzoom option for preferred zoom for point results', function() {
/src/test/spec/geocoder_control.js:47:        var map = new L.Map(document.createElement('div')),
/src/test/spec/geocoder_control.js-48-            control = L.mapbox.geocoderControl('mapbox.places', {
##############################################
/src/test/spec/geocoder_control.js-65-    it('pointzoom does not zoom out zoomed-in maps', function() {
/src/test/spec/geocoder_control.js:66:        var map = new L.Map(document.createElement('div')),
/src/test/spec/geocoder_control.js-67-            control = L.mapbox.geocoderControl('mapbox.places', {
##############################################
/src/test/spec/geocoder_control.js-121-        it('true', function() {
/src/test/spec/geocoder_control.js:122:            var map = new L.Map(document.createElement('div'));
/src/test/spec/geocoder_control.js-123-            var control = L.mapbox.geocoderControl('http://example.com/{query}.json', {
##############################################
/src/test/spec/geocoder_control.js-128-        it('false', function() {
/src/test/spec/geocoder_control.js:129:            var map = new L.Map(document.createElement('div'));
/src/test/spec/geocoder_control.js-130-            var control = L.mapbox.geocoderControl('http://example.com/{query}.json').addTo(map);
##############################################
/src/test/spec/geocoder_control.js-138-        beforeEach(function() {
/src/test/spec/geocoder_control.js:139:            map = new L.Map(document.createElement('div'));
/src/test/spec/geocoder_control.js-140-            control = L.mapbox.geocoderControl('http://example.com/{query}.json', {
##############################################
/src/test/spec/geocoder_control.js-209-        beforeEach(function() {
/src/test/spec/geocoder_control.js:210:            map = new L.Map(document.createElement('div'));
/src/test/spec/geocoder_control.js-211-            control = L.mapbox.geocoderControl('http://example.com/{query}.json', {
##############################################
/src/test/spec/geocoder_control.js-235-        beforeEach(function() {
/src/test/spec/geocoder_control.js:236:            map = new L.Map(document.createElement('div'), { center: [0,0], zoom: 0});
/src/test/spec/geocoder_control.js-237-            control = L.mapbox.geocoderControl('http://example.com/{query}.json', {
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-list-click.html-38-      map.featureLayer.eachLayer(function(layer) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-list-click.html:39:          var item = markerList.appendChild(document.createElement('li'));
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-list-click.html-40-          item.innerHTML = layer.toGeoJSON().properties.title;
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-multiple-marker-filters.html-47-    // Create an an input checkbox and label inside.
/src/docs/_posts/examples/v1.0.0/0100-01-01-multiple-marker-filters.html:48:    var item = filters.appendChild(document.createElement('div'));
/src/docs/_posts/examples/v1.0.0/0100-01-01-multiple-marker-filters.html:49:    var checkbox = item.appendChild(document.createElement('input'));
/src/docs/_posts/examples/v1.0.0/0100-01-01-multiple-marker-filters.html:50:    var label = item.appendChild(document.createElement('label'));
/src/docs/_posts/examples/v1.0.0/0100-01-01-multiple-marker-filters.html-51-    checkbox.type = 'checkbox';
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-markers-as-links.html-52-myLayer.on('click', function(e) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-markers-as-links.html:53:    window.open(e.layer.feature.properties.url);
/src/docs/_posts/examples/v1.0.0/0100-01-01-markers-as-links.html-54-});
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-movement.html-23-var t = 0;
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-movement.html:24:window.setInterval(function() {
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-movement.html-25-    // Making a lissajous curve just for fun.
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-choropleth.html-95-      statesLayer.resetStyle(e.target);
/src/docs/_posts/examples/v1.0.0/0100-01-01-choropleth.html:96:      closeTooltip = window.setTimeout(function() {
/src/docs/_posts/examples/v1.0.0/0100-01-01-choropleth.html-97-          map.closePopup();
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-leaflet-image.html-42-function doImage(err, canvas) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-leaflet-image.html:43:    var img = document.createElement('img');
/src/docs/_posts/examples/v1.0.0/0100-01-01-leaflet-image.html-44-    var dimensions = map.getSize();
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-reorder-listing-based-on-marker-proximity.html-82-
/src/docs/_posts/examples/v1.0.0/0100-01-01-reorder-listing-based-on-marker-proximity.html:83:        var link = document.createElement('a');
/src/docs/_posts/examples/v1.0.0/0100-01-01-reorder-listing-based-on-marker-proximity.html-84-        link.className = 'item';
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html-52-
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html:53:window.setInterval(function() {
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html-54-  var ll = marker.getLatLng();
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html-64-// Add manual control of the airplane with left and right arrow keys, just because
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html:65:document.body.addEventListener('keydown', function(e) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-rotating-controlling-marker.html-66-  if (e.which == 37) {
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-layers.html-67-    // toggles layers on and off.
/src/docs/_posts/examples/v1.0.0/0100-01-01-layers.html:68:    var link = document.createElement('a');
/src/docs/_posts/examples/v1.0.0/0100-01-01-layers.html-69-        link.href = '#';
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-cycle-markers.html-27-        markers[i].openPopup();
/src/docs/_posts/examples/v1.0.0/0100-01-01-cycle-markers.html:28:        window.setTimeout(run, 3000);
/src/docs/_posts/examples/v1.0.0/0100-01-01-cycle-markers.html-29-    }
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-dynamically-drawing-a-line.html-40-    // until `pointsAdded` reaches 360.
/src/docs/_posts/examples/v1.0.0/0100-01-01-dynamically-drawing-a-line.html:41:    if (++pointsAdded < 360) window.setTimeout(add, 100);
/src/docs/_posts/examples/v1.0.0/0100-01-01-dynamically-drawing-a-line.html-42-}
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-93-
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html:94:    var tabs = document.createElement('div');
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-95-    tabs.className = 'tabs-ui';
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-97-    for (var key in p) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html:98:        var tab = document.createElement('div');
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-99-        tab.className = 'tab';
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-100-
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html:101:        var input = document.createElement('input');
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-tooltip-tab-groups.html-102-        input.type = 'radio';
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-live-data-marker.html-27-    });
/src/docs/_posts/examples/v1.0.0/0100-01-01-live-data-marker.html:28:    window.setTimeout(function() {
/src/docs/_posts/examples/v1.0.0/0100-01-01-live-data-marker.html-29-        featureLayer.loadURL('https://wanderdrone.appspot.com/');
##############################################
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-navigation-from-menu-list.html-72-myLayer.eachLayer(function(marker) {
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-navigation-from-menu-list.html:73:  var link = info.appendChild(document.createElement('a'));
/src/docs/_posts/examples/v1.0.0/0100-01-01-marker-navigation-from-menu-list.html-74-  link.className = 'item';
##############################################
/src/docs/_posts/api/v1.6.2/0200-01-01-l-util.html-111-		<td><code>String</code></td>
/src/docs/_posts/api/v1.6.2/0200-01-01-l-util.html:112:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v1.6.2/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v1.6.2/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v1.6.2/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v1.6.2/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v1.6.2/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridlayer.html-72-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridlayer.html:73:        window.open(e.data.url);
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridlayer.html-74-    }
##############################################
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v1.6.2/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v2.1.7/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.7/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.7/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.7/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.7/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.7/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.7/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.7/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v2.1.2/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.2/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.2/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.2/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.2/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v2.1.2/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.2/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.2/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v2.1.8/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.8/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.8/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.8/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.8/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.8/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.8/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.8/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.1.0.html-731-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.1.0.html:732:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.1.0.html-733-interaction.</li>
##############################################
/src/docs/_posts/api/v1.6.1/0200-01-01-l-util.html-111-		<td><code>String</code></td>
/src/docs/_posts/api/v1.6.1/0200-01-01-l-util.html:112:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v1.6.1/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v1.6.1/0200-01-01-l-tilelayer.html-45-
/src/docs/_posts/api/v1.6.1/0200-01-01-l-tilelayer.html:46:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v1.6.1/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v1.6.1/0200-01-01-l-tilelayer.html-47-
##############################################
/src/docs/_posts/api/v1.6.1/0200-01-01-l-mapbox-gridcontrol.html-26-<td>object</td>
/src/docs/_posts/api/v1.6.1/0200-01-01-l-mapbox-gridcontrol.html:27:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v1.6.1/0200-01-01-l-mapbox-gridcontrol.html-28-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.3.1.html-482-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.3.1.html:483:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.3.1.html-484-interaction.</li>
##############################################
/src/docs/_posts/api/v2.1.1/0200-01-01-l-util.html-111-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.1/0200-01-01-l-util.html:112:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.1/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v2.1.1/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v2.1.1/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.1/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.1/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.1/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.0.2.html-460-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.0.2.html:461:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.0.2.html-462-interaction.</li>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-576-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html:577:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-578-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-2585-
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html:2586:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-2587-
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-6104-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html:6105:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v1.6.0-all.html-6106-	</tr>
##############################################
/src/docs/_posts/api/v2.0.1/0200-01-01-l-util.html-111-<td><code>String</code></td>
/src/docs/_posts/api/v2.0.1/0200-01-01-l-util.html:112:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.0.1/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v2.0.1/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v2.0.1/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.0.1/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.0.1/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.0.1/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.0.0.html-535-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.0.0.html:536:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.0.0.html-537-interaction.</li>
##############################################
/src/docs/_posts/api/0200-01-01-v1.5.0.html-643-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.5.0.html:644:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.5.0.html-645-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.3.0.html-737-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.3.0.html:738:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.3.0.html-739-interaction.</li>
##############################################
/src/docs/_posts/api/v2.1.5/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.5/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.5/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.5/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.5/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.5/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.5/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.5/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.2.0.html-533-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.2.0.html:534:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.2.0.html-535-interaction.</li>
##############################################
/src/docs/_posts/api/v2.2.0/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.2.0/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.2.0/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.2.0/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.2.0/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.2.0/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.2.0/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.2.0/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v1.6.0/0200-01-01-l-util.html-111-		<td><code>String</code></td>
/src/docs/_posts/api/v1.6.0/0200-01-01-l-util.html:112:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v1.6.0/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v1.6.0/0200-01-01-l-tilelayer.html-45-
/src/docs/_posts/api/v1.6.0/0200-01-01-l-tilelayer.html:46:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v1.6.0/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v1.6.0/0200-01-01-l-tilelayer.html-47-
##############################################
/src/docs/_posts/api/v1.6.0/0200-01-01-l-mapbox-gridcontrol.html-26-<td>object</td>
/src/docs/_posts/api/v1.6.0/0200-01-01-l-mapbox-gridcontrol.html:27:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v1.6.0/0200-01-01-l-mapbox-gridcontrol.html-28-</tr>
##############################################
/src/docs/_posts/api/v1.6.4/0200-01-01-l-util.html-111-<td><code>String</code></td>
/src/docs/_posts/api/v1.6.4/0200-01-01-l-util.html:112:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v1.6.4/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v1.6.4/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v1.6.4/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v1.6.4/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v1.6.4/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridlayer.html-73-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridlayer.html:74:        window.open(e.data.url);
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridlayer.html-75-    }
##############################################
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v1.6.4/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.0.4.html-487-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.0.4.html:488:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.0.4.html-489-interaction.</li>
##############################################
/src/docs/_posts/api/v2.1.3/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.3/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.3/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.3/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.3/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.3/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.3/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.3/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-203-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html:204:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-205-    }
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-621-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html:622:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-623-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-2657-
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html:2658:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-2659-
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-6176-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html:6177:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v1.6.2-all.html-6178-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-2724-
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html:2725:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-2726-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-6253-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html:6254:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.9-all.html-6255-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-2717-
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html:2718:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-2719-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-6246-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html:6247:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.6-all.html-6248-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-207-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html:208:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-209-    }
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-630-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html:631:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-632-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-2670-
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html:2671:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-2672-
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-6189-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html:6190:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v1.6.3-all.html-6191-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.5.1.html-643-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.5.1.html:644:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.5.1.html-645-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-2699-
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html:2700:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-2701-
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-6218-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html:6219:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.0.1-all.html-6220-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-2699-
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html:2700:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-2701-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-6218-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html:6219:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.1-all.html-6220-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-628-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html:629:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-630-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-2729-
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html:2730:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-2731-
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-6258-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html:6259:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.2.2-all.html-6260-	</tr>
##############################################
/src/docs/_posts/api/v2.1.6/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.6/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.6/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.6/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.6/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.6/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.6/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.6/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v2.2.2/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.2.2/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.2.2/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.2.2/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.2.2/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.2.2/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.2.2/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.2.2/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-628-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html:629:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-630-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-2729-
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html:2730:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-2731-
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-6258-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html:6259:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.2.0-all.html-6260-	</tr>
##############################################
/src/docs/_posts/api/v2.2.1/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.2.1/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.2.1/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.2.1/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.2.1/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.2.1/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.2.1/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.2.1/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-628-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html:629:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-630-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-2729-
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html:2730:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-2731-
##############################################
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-6258-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html:6259:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.2.1-all.html-6260-	</tr>
##############################################
/src/docs/_posts/api/v2.0.0/0200-01-01-l-util.html-111-<td><code>String</code></td>
/src/docs/_posts/api/v2.0.0/0200-01-01-l-util.html:112:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.0.0/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v2.0.0/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v2.0.0/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.0.0/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.0.0/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.0.0/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.4.0.html-573-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.4.0.html:574:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.4.0.html-575-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-2717-
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html:2718:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-2719-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-6246-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html:6247:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.3-all.html-6248-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-2724-
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html:2725:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-2726-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-6253-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html:6254:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.7-all.html-6255-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.0.3.html-474-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.0.3.html:475:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.0.3.html-476-interaction.</li>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-2699-
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html:2700:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-2701-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-6218-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html:6219:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.0-all.html-6220-	</tr>
##############################################
/src/docs/_posts/api/v2.1.9/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.9/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.9/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.9/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.9/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.9/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.9/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.9/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/v2.1.4/0200-01-01-l-util.html-115-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.4/0200-01-01-l-util.html:116:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.4/0200-01-01-l-util.html-117-	</tr>
##############################################
/src/docs/_posts/api/v2.1.4/0200-01-01-l-tilelayer.html-42-
/src/docs/_posts/api/v2.1.4/0200-01-01-l-tilelayer.html:43:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.4/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.4/0200-01-01-l-tilelayer.html-44-
##############################################
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.4/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-2717-
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html:2718:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-2719-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-6246-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html:6247:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.5-all.html-6248-	</tr>
##############################################
/src/docs/_posts/api/v1.6.3/0200-01-01-l-util.html-111-		<td><code>String</code></td>
/src/docs/_posts/api/v1.6.3/0200-01-01-l-util.html:112:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v1.6.3/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v1.6.3/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v1.6.3/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v1.6.3/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v1.6.3/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridlayer.html-73-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridlayer.html:74:        window.open(e.data.url);
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridlayer.html-75-    }
##############################################
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v1.6.3/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-572-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html:573:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-574-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-2592-
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html:2593:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-2594-
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-6111-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html:6112:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v1.6.1-all.html-6113-	</tr>
##############################################
/src/docs/_posts/api/v2.1.0/0200-01-01-l-util.html-111-<td><code>String</code></td>
/src/docs/_posts/api/v2.1.0/0200-01-01-l-util.html:112:<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/v2.1.0/0200-01-01-l-util.html-113-	</tr>
##############################################
/src/docs/_posts/api/v2.1.0/0200-01-01-l-url-template.html-15-
/src/docs/_posts/api/v2.1.0/0200-01-01-l-url-template.html:16:<p>You can use custom keys in the template, which will be <a href="/mapbox.js/api/v2.1.0/l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/v2.1.0/0200-01-01-l-url-template.html-17-
##############################################
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridlayer.html-78-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridlayer.html:79:        window.open(e.data.url);
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridlayer.html-80-    }
##############################################
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridcontrol.html-27-<td>object</td>
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridcontrol.html:28:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/v2.1.0/0200-01-01-l-mapbox-gridcontrol.html-29-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-2717-
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html:2718:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-2719-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-6246-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html:6247:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.4-all.html-6248-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.0.1.html-460-<li><code>template</code>: A string in the <a href="http://mustache.github.io/">Mustache</a> template
/src/docs/_posts/api/0200-01-01-v1.0.1.html:461:language that will be evaluated with data from the grid to produce HTML for the
/src/docs/_posts/api/0200-01-01-v1.0.1.html-462-interaction.</li>
##############################################
/src/docs/_posts/api/0200-01-01-v1.5.2.html-643-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.5.2.html:644:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.5.2.html-645-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-2717-
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html:2718:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-2719-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-6246-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html:6247:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.2-all.html-6248-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-207-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html:208:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-209-    }
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-630-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html:631:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-632-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-2670-
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html:2671:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-2672-
##############################################
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-6189-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html:6190:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v1.6.4-all.html-6191-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-2699-
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html:2700:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-2701-
##############################################
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-6218-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html:6219:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.0.0-all.html-6220-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-198-    if (e.data &amp;&amp; e.data.url) {
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html:199:        window.open(e.data.url);
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-200-    }
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-623-<td>object</td>
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html:624:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-625-</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-2724-
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html:2725:<p>You can use custom keys in the template, which will be <a href="#l-util">evaluated</a> from TileLayer options, like this:</p>
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-2726-
##############################################
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-6253-		<td><code>String</code></td>
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html:6254:		<td>Simple templating facility, accepts a template string of the form <code><span class="string">'Hello {a}, {b}'</span></code> and a data object like <code>{a: 'foo', b: 'bar'}</code>, returns evaluated string (<code><span class="string">'Hello foo, bar'</span></code>). You can also specify functions instead of strings for data values &mdash; they will be evaluated passing <code>data</code> as an argument.</td>
/src/docs/_posts/api/0200-01-01-v2.1.8-all.html-6255-	</tr>
##############################################
/src/docs/_posts/api/0200-01-01-v1.4.2.html-573-<td>object</td>
/src/docs/_posts/api/0200-01-01-v1.4.2.html:574:<td>Valid options are:<ul><li><code>sanitizer</code>: A function that accepts a string containing interactivity data, and returns a sanitized result for HTML display. The default will remove dangerous script content, and is recommended.</li><li><code>template</code>: A string in the Mustache template language that will be evaluated with data from the grid to produce HTML for the interaction.</li><li><code>follow</code>: Whether the tooltip should follow the mouse in a constant relative position, or should be fixed in the top-right side of the map. By default, this is <code>false</code> and the tooltip is stationary.</li><li><code>pinnable</code>: Whether clicking will &#39;pin&#39; the tooltip open and expose a &#39;close&#39; button for the user to close the tooltip. By default, this is <code>true</code>.</li><li><code>touchTeaser</code>: On touch devices, show the teaser formatter if there is no output from the full formatter. By default, this is <code>true</code>.</li><li><code>location</code>: Evaluate the location formatter on click events, and if it provides output, navigate to that location. By default, this is <code>true</code>.</li></ul></td>
/src/docs/_posts/api/0200-01-01-v1.4.2.html-575-</tr>
##############################################
/src/docs/api/index.html-8-          var redirect = '{{site.baseurl}}/api/{{site.mapboxjs}}/';
/src/docs/api/index.html:9:          if (window.location && window.location.hash) {
/src/docs/api/index.html:10:              window.location.href = redirect + window.location.hash;
/src/docs/api/index.html:11:          } else { window.location.href = redirect }
/src/docs/api/index.html-12-      </script>
##############################################
/src/docs/_layouts/default.html-147-  var KM_COOKIE_DOMAIN = 'www.mapbox.com';
/src/docs/_layouts/default.html:148:  var analytics=analytics||[];(function(){var e=['identify','track','trackLink','trackForm','trackClick','trackSubmit','page','pageview','ab','alias','ready','group'],t=function(e){return function(){analytics.push([e].concat(Array.prototype.slice.call(arguments,0)))}};for(var n=0;n<e.length;n++)analytics[e[n]]=t(e[n])})(),analytics.load=function(e){var t=document.createElement('script');t.type='text/javascript',t.async=!0,t.src=('https:'===document.location.protocol?'https://':"http://")+'d2dq2ahtl5zl1z.cloudfront.net/analytics.js/v1/'+e+'/analytics.min.js';var n=document.getElementsByTagName('script')[0];n.parentNode.insertBefore(t,n)};
/src/docs/_layouts/default.html:149:  analytics.load(window.location.hostname.indexOf('mapbox.com') !== -1 ? 'fl0c8p240n' : '0biiejpgfj');
/src/docs/_layouts/default.html-150-
/src/docs/_layouts/default.html:151:  Stripe.setPublishableKey(window.location.hostname.indexOf('mapbox.com') !== -1 ?
/src/docs/_layouts/default.html-152-    'pk_live_hI6mmOTIg7KkywK6vo3vJvpk' : 'pk_test_gmIyREg3sKzAiyMkAEeCsxUG');
##############################################
/src/docs/assets/leaflet-hash.js-93-		update: function() {
/src/docs/assets/leaflet-hash.js:94:			var hash = location.hash;
/src/docs/assets/leaflet-hash.js-95-			if (hash === this.lastHash) {
##############################################
/src/docs/assets/js/site.js-10-
/src/docs/assets/js/site.js:11:    if (!window.location.origin) {
/src/docs/assets/js/site.js:12:        window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
/src/docs/assets/js/site.js-13-    }
##############################################
/src/docs/assets/js/site.js-15-    ZeroClipboard.config({
/src/docs/assets/js/site.js:16:        swfPath: window.location.origin + '/mapbox.js/assets/js/ZeroClipboard.swf',
/src/docs/assets/js/site.js-17-        forceHandCursor: true
##############################################
/src/docs/assets/js/prettify.js-92-  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,
/src/docs/assets/js/prettify.js:93:      "debugger,eval,export,function,get,null,set,undefined,var,with," +
/src/docs/assets/js/prettify.js-94-      "Infinity,NaN"];
/src/docs/assets/js/prettify.js:95:  var PERL_KEYWORDS = "caller,delete,die,do,dump,elsif,eval,exit,foreach,for," +
/src/docs/assets/js/prettify.js-96-      "goto,if,import,last,local,my,next,no,our,print,package,redo,require," +
##############################################
/src/docs/assets/js/prettify.js-105-      "BEGIN,END"];
/src/docs/assets/js/prettify.js:106:  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "case,done,elif,esac,eval,fi," +
/src/docs/assets/js/prettify.js-107-      "function,in,local,set,then,until"];
##############################################
/src/docs/assets/js/prettify.js-926-  
/src/docs/assets/js/prettify.js:927:    var li = document.createElement('LI');
/src/docs/assets/js/prettify.js-928-    while (node.firstChild) {
##############################################
/src/docs/assets/js/prettify.js-961-                parent.insertBefore(
/src/docs/assets/js/prettify.js:962:                    document.createTextNode(tail), node.nextSibling);
/src/docs/assets/js/prettify.js-963-              }
##############################################
/src/docs/assets/js/prettify.js-1030-  
/src/docs/assets/js/prettify.js:1031:    var ol = document.createElement('OL');
/src/docs/assets/js/prettify.js-1032-    ol.className = 'linenums';
##############################################
/src/docs/assets/js/prettify.js-1040-      if (!li.firstChild) {
/src/docs/assets/js/prettify.js:1041:        li.appendChild(document.createTextNode('\xA0'));
/src/docs/assets/js/prettify.js-1042-      }
##############################################
/src/docs/assets/js/prettify.js-1133-        var document = textNode.ownerDocument;
/src/docs/assets/js/prettify.js:1134:        var span = document.createElement('SPAN');
/src/docs/assets/js/prettify.js-1135-        span.className = decorations[decorationIndex + 1];
##############################################
/src/docs/assets/js/prettify.js-1141-              // TODO: Possibly optimize by using '' if there's no flicker.
/src/docs/assets/js/prettify.js:1142:              = document.createTextNode(source.substring(end, spanEnd));
/src/docs/assets/js/prettify.js-1143-          parentNode.insertBefore(textNode, span.nextSibling);
##############################################
/src/docs/assets/js/prettify.js-1328-  function prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {
/src/docs/assets/js/prettify.js:1329:    var container = document.createElement('PRE');
/src/docs/assets/js/prettify.js-1330-    // This could cause images to load and onload listeners to fire.
##############################################
/src/bower-utils.inc-183-function setVar {
/src/bower-utils.inc:184:  eval "$1=\"$2\""
/src/bower-utils.inc-185-}
