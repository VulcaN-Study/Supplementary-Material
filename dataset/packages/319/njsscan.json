{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 3,
          "line": 3
        },
        "extra": {
          "line": "[*]",
          "message": "Syntax error"
        },
        "path": "/src/.editorconfig",
        "start": {
          "col": 2,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 15,
          "line": 5
        },
        "extra": {
          "line": "node_modules/",
          "message": "Syntax error"
        },
        "path": "/src/.eslintignore",
        "start": {
          "col": 1,
          "line": 5
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 4,
          "line": 14
        },
        "extra": {
          "line": "  # default-case:         2",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 3,
          "line": 14
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 2,
          "line": 7
        },
        "extra": {
          "line": "# npmignore",
          "message": "Lexical error: unrecognised symbol, in token rule:#"
        },
        "path": "/src/.npmignore",
        "start": {
          "col": 1,
          "line": 7
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 8,
          "line": 1
        },
        "extra": {
          "line": "The MIT License (MIT)",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 76
        },
        "extra": {
          "line": ".SILENT: help lint test todo",
          "message": "Lexical error: WIERD end of file in quoted string"
        },
        "path": "/src/Makefile",
        "start": {
          "col": 1,
          "line": 76
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/dist/remarkable.js",
          "match_lines": [
            9707,
            9707
          ],
          "match_position": [
            12,
            61
          ],
          "match_string": "\t\t\treturn !this.hasWordCharAfterProtocolRegex.test( urlMatch );"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
