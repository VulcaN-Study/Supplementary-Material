|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$4$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$5$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$4$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$5$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$0$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$1$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$2$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$3$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 45	function detailWindows(drive, callback) {
  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$4$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 12	function detail(drive, callback) {
  if (arguments.length === 1) {
    return detailPromise(drive)
  } else {
    detailCallback(drive, callback)
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

|checker| success id$5$color:green$: 
==========================
$FilePath$/src/freediskspace.js
Line 34	function detailCallback(drive, callback) {
  if (os.platform() == "win32") {
    detailWindows(drive, callback);
  }
  else {
    detailPosix(drive, callback);
  }
}
$FilePath$/src/freediskspace.js
Line 46	  cp.exec("wmic logicaldisk where \"DeviceID='" + drive + "'\" get FreeSpace, Name, Size", function (error, stdout) {
      if (error) {
        callback(error);
        return;
      }
      var match = windowsDetailsPattern.exec(stdout);

      if (match) {
        var detail = {
          drive: match[2],
          total: match[3],
          used: match[3] - match[1],
          free: match[1]
        };
        callback(error, detail);
      }
      else {
        callback(new Error('Parsing error: ' + stdout));
      }
    }
  )
$FilePath$/app/ODGen/builtin_packages/child_process.js
Line 6	  sink_hqbpillvul_exec(sink);

