/src/lib/validator.js-61-    if(typeof formatString!=='string') {
/src/lib/validator.js:62:        value = new Date(Date.parse(value));
/src/lib/validator.js-63-        if(value) {
##############################################
/src/lib/fsExt.js-75-                    // folders are created, so create file
/src/lib/fsExt.js:76:                    fs.writeFile(fp.fullPath, opts.data, opts.encoding, function(err){
/src/lib/fsExt.js-77-                        if (err) cb(new Error('fsExt.existsOrCreate: creating file failed').cause(err));
##############################################
/src/lib/fsExt.js-163-    if(!_modules[filePath]){
/src/lib/fsExt.js:164:        fs.readFile(filePath, { encoding: opts.encoding }, function(err, data) {
/src/lib/fsExt.js-165-            var loadingModule = {
##############################################
/src/lib/fsExt.js-172-                try {
/src/lib/fsExt.js:173:                    loadingModule.exports = JSON.parse(data, opts.jsonParse);
/src/lib/fsExt.js-174-                }
##############################################
/src/lib/fsExt.js-181-                try {
/src/lib/fsExt.js:182:                    eval(code);
/src/lib/fsExt.js-183-                }
##############################################
/src/lib/fsExt.js-241-            try {
/src/lib/fsExt.js:242:                loadingModule.exports = JSON.parse(data, opts.jsonParse);
/src/lib/fsExt.js-243-            }
##############################################
/src/lib/fsExt.js-250-            try {
/src/lib/fsExt.js:251:                eval(code);
/src/lib/fsExt.js-252-            }
##############################################
/src/lib/fsExt.js-304-    
/src/lib/fsExt.js:305:    fs.writeFile(filePath, data, function(err) {
/src/lib/fsExt.js-306-        if(err) {
##############################################
/src/lib/fsExt.js-331-    
/src/lib/fsExt.js:332:    fs.readFile(filePath, opts, function(err, data) {
/src/lib/fsExt.js-333-        if(err) {
##############################################
/src/lib/fsExt.js-365-                if(stat.isDirectory()) rmdirRecursive(file, rmFile);
/src/lib/fsExt.js:366:                else fs.unlink(file, rmFile);
/src/lib/fsExt.js-367-            });
##############################################
/src/lib/fsExt.js-421-                            });
/src/lib/fsExt.js:422:                            else fs.readFile(file, function(err, data){
/src/lib/fsExt.js-423-                                if (err) return clbk(err);
/src/lib/fsExt.js:424:                                fs.writeFile(newFile, data, copyFiles);
/src/lib/fsExt.js-425-                            });
##############################################
/src/lib/object.js-202-    if(typeof input === 'string' && (match = input.match(regexIso8601))) {
/src/lib/object.js:203:        var milliseconds = Date.parse(match[0]);
/src/lib/object.js-204-        if (!isNaN(milliseconds)) {
##############################################
/src/lib/object.js-220-        if(typeof value === 'string' && (match = value.match(regexIso8601))) {
/src/lib/object.js:221:            var milliseconds = Date.parse(match[0]);
/src/lib/object.js-222-            if (!isNaN(milliseconds)) {
##############################################
/src/test/fsExt/fsExt.js-85-                        
/src/test/fsExt/fsExt.js:86:                        fsExt.writeFile('./test_folder/subfolder/file2.json', '{some data}', function(err){
/src/test/fsExt/fsExt.js-87-                            if(err) throw err;
