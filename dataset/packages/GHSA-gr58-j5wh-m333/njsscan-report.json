{
  "errors": [
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 8,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "7546b08a91e0b2a7de2382e05a7c1cf6ac47f4590891922c001a37ca87126fb0",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as javascript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 588,
            "line": 1
          },
          "file": "/src/.npmignore",
          "source_hash": "abcbd5929ba2d059647bd4c6c99a74df2676bfbaaf44535e4713b53fbd14e6a8",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse LICENSE as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 8,
            "line": 1
          },
          "file": "/src/LICENSE",
          "source_hash": "7546b08a91e0b2a7de2382e05a7c1cf6ac47f4590891922c001a37ca87126fb0",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    },
    {
      "code": 3,
      "help": "If the code appears to be valid, this may be a semgrep bug.",
      "level": "warn",
      "long_msg": "Could not parse .npmignore as typescript",
      "short_msg": "parse error",
      "spans": [
        {
          "context_end": null,
          "context_start": null,
          "end": {
            "col": 2,
            "line": 1
          },
          "file": "/src/.npmignore",
          "source_hash": "abcbd5929ba2d059647bd4c6c99a74df2676bfbaaf44535e4713b53fbd14e6a8",
          "start": {
            "col": 1,
            "line": 1
          }
        }
      ],
      "type": "SourceParseError"
    }
  ],
  "njsscan_version": "0.2.8",
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/lib/guid.js",
          "match_lines": [
            6,
            6
          ],
          "match_position": [
            26,
            39
          ],
          "match_string": "  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);"
        },
        {
          "file_path": "/src/lib/password.js",
          "match_lines": [
            29,
            29
          ],
          "match_position": [
            28,
            41
          ],
          "match_string": "        var p = Math.floor(Math.random() * setLen);"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_md5": {
      "files": [
        {
          "file_path": "/src/lib/password.js",
          "match_lines": [
            36,
            36
          ],
          "match_position": [
            12,
            36
          ],
          "match_string": "    return crypto.createHash('md5').update(string).digest('hex');"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "MD5 is a a weak hash which is known to have collision. Use a strong hashing function.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "node_timing_attack": {
      "files": [
        {
          "file_path": "/src/lib/password.js",
          "match_lines": [
            21,
            21
          ],
          "match_position": [
            5,
            31
          ],
          "match_string": "    return hash === validHash;"
        },
        {
          "file_path": "/src/lib/validator.js",
          "match_lines": [
            350,
            350
          ],
          "match_position": [
            21,
            53
          ],
          "match_string": "                    if (token==='yyyy') { x=4;y=4; }"
        },
        {
          "file_path": "/src/lib/validator.js",
          "match_lines": [
            351,
            351
          ],
          "match_position": [
            21,
            53
          ],
          "match_string": "                    if (token==='yy')   { x=2;y=2; }"
        },
        {
          "file_path": "/src/lib/validator.js",
          "match_lines": [
            352,
            352
          ],
          "match_position": [
            21,
            53
          ],
          "match_string": "                    if (token==='y')    { x=2;y=4; }"
        },
        {
          "file_path": "/src/lib/validator.js",
          "match_lines": [
            417,
            425
          ],
          "match_position": [
            18,
            22
          ],
          "match_string": "            else if (token==='a') {\n                    if (val.substring(i_val,i_val+2).toLowerCase()==='am') {ampm='AM';}\n                    else if (val.substring(i_val,i_val+2).toLowerCase()==='pm') {ampm='PM';}\n                    else {return 0;}\n                    i_val+=2;}\n            else {\n                    if (val.substring(i_val,i_val+token.length)!==token) {return 0;}\n                    else {i_val+=token.length;}\n                    }"
        },
        {
          "file_path": "/src/lib/validator.js",
          "match_lines": [
            423,
            424
          ],
          "match_position": [
            21,
            48
          ],
          "match_string": "                    if (val.substring(i_val,i_val+token.length)!==token) {return 0;}\n                    else {i_val+=token.length;}"
        }
      ],
      "metadata": {
        "cwe": "CWE-208: Observable Timing Discrepancy",
        "description": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}