<report_mosca>
 <Path>/src/lib/client.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 69 -              setTimeout(() => callback(err), 0);

 Line: 204 -          const timeout = (options.timeout ? setTimeout(timeoutHandler, options.timeout) : null);

 Line: 365 -          this._reconnectionTimer = setTimeout(() => {

 Line: 444 -                  record.timeout = setTimeout(() => {

 Line: 719 -          this._heartbeat = setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/listener.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 168 -          this._timeout = setTimeout(() => {

 Line: 183 -      this._heartbeat = setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/listener.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 357 -          return next(Boom.badRequest('Subscription path cannot contain query'));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/socket.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 531 -          this.auth._timeout = setTimeout(() => this.disconnect(), config.timeout);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/dist/client.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 64 -              setTimeout(function () {

 Line: 205 -          var timeout = options.timeout ? setTimeout(timeoutHandler, options.timeout) : null;

 Line: 368 -          this._reconnectionTimer = setTimeout(function () {

 Line: 446 -                  record.timeout = setTimeout(function () {

 Line: 714 -          this._heartbeat = setTimeout(function () {

</Result>
</report_mosca>

