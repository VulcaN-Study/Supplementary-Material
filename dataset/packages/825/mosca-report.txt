<report_mosca>
 <Path>/src/src/commands/database.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 53 -        const query = getCreateDatabaseQuery(sequelize, config, options);

 Line: 99 -        return 'IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = N\'' + config.database + '\')'

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/assets/seeders/skeleton.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -        return queryInterface.bulkInsert('People', [{

 Line: 22 -        return queryInterface.bulkDelete('People', null, {});

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/assets/migrations/skeleton.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -        return queryInterface.createTable('users', { id: Sequelize.INTEGER });

 Line: 19 -        return queryInterface.dropTable('users');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/assets/migrations/create-table.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -      return queryInterface

 Line: 32 -      return queryInterface.dropTable('<%= tableName %>');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/src/core/migrator.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 81 -    const queryInterface = migrator.options.storageOptions.sequelize.getQueryInterface();

 Line: 99 -    return queryInterface.showAllTables()

 Line: 104 -        return queryInterface.describeTable(tableName);

 Line: 115 -    const queryInterface = sequelize.getQueryInterface();

 Line: 125 -          .then(() => queryInterface.renameTable(tableName, tableName + 'Backup'))

 Line: 127 -            const sql = queryInterface.QueryGenerator.selectQuery(tableName + 'Backup');

 Line: 128 -            return helpers.generic.execQuery(sequelize, sql, { type: 'SELECT', raw: true });

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/commands/database.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 53 -          const query = getCreateDatabaseQuery(sequelize, config, options);

 Line: 94 -        return 'IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = N\'' + config.database + '\')' + ' BEGIN' + ' CREATE DATABASE ' + sequelize.getQueryInterface().quoteIdentifier(config.database) + (options.collate ? ' COLLATE ' + options.collate : '') + ' END;';

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/assets/seeders/skeleton.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -        return queryInterface.bulkInsert('People', [{

 Line: 22 -        return queryInterface.bulkDelete('People', null, {});

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/assets/migrations/skeleton.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -        return queryInterface.createTable('users', { id: Sequelize.INTEGER });

 Line: 19 -        return queryInterface.dropTable('users');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/assets/migrations/create-table.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 4 -      return queryInterface

 Line: 32 -      return queryInterface.dropTable('<%= tableName %>');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/lib/core/migrator.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 96 -    const queryInterface = migrator.options.storageOptions.sequelize.getQueryInterface();

 Line: 112 -    return queryInterface.showAllTables().then(tableNames => {

 Line: 116 -      return queryInterface.describeTable(tableName);

 Line: 127 -    const queryInterface = sequelize.getQueryInterface();

 Line: 135 -      return ensureCurrentMetaSchema(migrator).then(() => queryInterface.renameTable(tableName, tableName + 'Backup')).then(() => {

 Line: 136 -        const sql = queryInterface.QueryGenerator.selectQuery(tableName + 'Backup');

 Line: 137 -        return _index2.default.generic.execQuery(sequelize, sql, { type: 'SELECT', raw: true });

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/support/helpers.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 196 -        .query('SELECT count(*) as count FROM ' + QueryGenerator.quoteTable(table))

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/model/create.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 162 -                      .pipe(helpers.ensureContent('return queryInterface'))

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/db/db-create.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 30 -            this.sequelize.query(`SELECT 1 as exists FROM pg_database WHERE datname = '${databaseName}';`, {

 Line: 31 -              type: this.sequelize.QueryTypes.SELECT

 Line: 48 -            this.sequelize.query(`SELECT 1 as exists FROM pg_database WHERE datname = '${databaseName}';`, {

 Line: 49 -              type: this.sequelize.QueryTypes.SELECT

 Line: 66 -            this.sequelize.query(`SELECT

 Line: 71 -             FROM pg_database WHERE datname = '${databaseName}';`, {

 Line: 72 -              type: this.sequelize.QueryTypes.SELECT

 Line: 92 -            this.sequelize.query(`SELECT

 Line: 97 -             FROM pg_database WHERE datname = '${databaseName}';`, {

 Line: 98 -              type: this.sequelize.QueryTypes.SELECT

 Line: 120 -            this.sequelize.query(`SELECT IF('${databaseName}' IN(SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA), 1, 0) AS found;`, {

 Line: 121 -              type: this.sequelize.QueryTypes.SELECT

 Line: 138 -            this.sequelize.query(`SELECT IF('${databaseName}' IN(SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA), 1, 0) AS found;`, {

 Line: 139 -              type: this.sequelize.QueryTypes.SELECT

 Line: 156 -            this.sequelize.query(`SELECT

 Line: 159 -              FROM information_schema.SCHEMATA WHERE schema_name = '${databaseName}';`, {

 Line: 160 -              type: this.sequelize.QueryTypes.SELECT

 Line: 179 -            this.sequelize.query(`SELECT

 Line: 182 -              FROM information_schema.SCHEMATA WHERE schema_name = '${databaseName}';`, {

 Line: 183 -              type: this.sequelize.QueryTypes.SELECT

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/db/migrate/schema/add_timestamps.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 83 -          { raw: true, type: 'SELECT' }

 Line: 101 -              { raw: true, type: 'SELECT' }

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/test/db/db-drop.test.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -            this.sequelize.query(`SELECT 1 as exists FROM pg_database WHERE datname = '${databaseName}';`, {

 Line: 32 -              type: this.sequelize.QueryTypes.SELECT

 Line: 51 -            this.sequelize.query(`SELECT IF('${databaseName}' IN(SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA), 1, 0) AS found;`, {

 Line: 52 -              type: this.sequelize.QueryTypes.SELECT

</Result>
</report_mosca>

