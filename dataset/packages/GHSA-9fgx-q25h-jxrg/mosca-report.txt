<report_mosca>
 <Path>/src/Gruntfile.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 26 -          setTimeout(logBuildingClient, 5000, grunt);

 Line: 48 -          setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/built/assets/simplemde/simplemde-1f8ccff0dd405606a22864b214fa253d.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 306 -  return-1}R.prototype.set=function(e,t){clearTimeout(this.id),this.id=setTimeout(t,e)}

 Line: 553 -  an?r=an.delayedCallbacks:ln?r=ln:(r=ln=[],setTimeout(un,0))

 Line: 719 -  t.cursorDiv.style.visibility="",e.options.cursorBlinkRate>0?t.blinker=setInterval((function(){return t.cursorDiv.style.visibility=(n=!n)?"":"hidden"}),e.options.cursorBlinkRate):e.options.cursorBlinkRate<0&&(t.cursorDiv.style.visibility="hidden")}}function Cr(e){e.state.focused||(e.display.input.focus(),Sr(e))}function kr(e){e.state.delayingBlurEvent=!0,setTimeout((function(){e.state.delayingBlurEvent&&(e.state.delayingBlurEvent=!1,Lr(e))}),100)}function Sr(e,t){e.state.delayingBlurEvent&&(e.state.delayingBlurEvent=!1),"nocursor"!=e.options.readOnly&&(e.state.focused||(pe(e,"focus",e,t),e.state.focused=!0,O(e.display.wrapper,"CodeMirror-focused"),e.curOp||e.display.selForContextMenu==e.doc.sel||(e.display.input.reset(),s&&setTimeout((function(){return e.display.input.reset(!0)}),20)),e.display.input.receivedFocus()),wr(e))}function Lr(e,t){e.state.delayingBlurEvent||(e.state.focused&&(pe(e,"blur",e,t),e.state.focused=!1,T(e.display.wrapper,"CodeMirror-focused")),clearInterval(e.display.blinker),setTimeout((function(){e.state.focused||(e.display.shift=!1)}),150))}function Tr(e){for(var t=e.display,n=t.lineDiv.offsetTop,r=0;r<t.view.length;r++){var i=t.view[r],o=e.options.lineWrapping,s=void 0,u=0

 Line: 763 -  function qr(e){e.display.scrollbars&&(e.display.scrollbars.clear(),e.display.scrollbars.addClass&&T(e.display.wrapper,e.display.scrollbars.addClass)),e.display.scrollbars=new Ur[e.options.scrollbarStyle]((function(t){e.display.wrapper.insertBefore(t,e.display.scrollbarFiller),fe(t,"mousedown",(function(){e.state.focused&&setTimeout((function(){return e.display.input.focus()}),0)})),t.setAttribute("cm-not-content","true")}),(function(t,n){"horizontal"==n?Wr(e,t):Br(e,t)}),e),e.display.scrollbars.addClass&&O(e.display.wrapper,e.display.scrollbars.addClass)}var Gr=0

 Line: 862 -  m<0?g=Math.max(0,g+m-50):v=Math.min(e.doc.height,v+m+50),si(e,{top:g,bottom:v})}vi<20&&(null==a.wheelStartX?(a.wheelStartX=l.scrollLeft,a.wheelStartY=l.scrollTop,a.wheelDX=i,a.wheelDY=o,setTimeout((function(){if(null!=a.wheelStartX){var e=l.scrollLeft-a.wheelStartX,t=l.scrollTop-a.wheelStartY,n=t&&a.wheelDY&&t/a.wheelDY||e&&a.wheelDX&&e/a.wheelDX

 Line: 1129 -  else{if(t.state.draggingText&&t.doc.sel.contains(n)>-1)return t.state.draggingText(e),void setTimeout((function(){return t.display.input.focus()}),20)

 Line: 1219 -  if(!(me(t,e)||n.activeTouch&&n.input.supportsTouch()))if(n.input.ensurePolled(),n.shift=e.shiftKey,Cn(n,e))s||(n.scroller.draggable=!1,setTimeout((function(){return n.scroller.draggable=!0}),100))

 Line: 1225 -  try{e.isReadOnly()&&(e.state.suppressEdits=!0),r=t(e,n)!=j}finally{e.state.suppressEdits=!1}return r}))}(t,i,r,o,e)||(1==i?r?function(e,t,n,r){a?setTimeout(H(Cr,e),0):e.curOp.focus=F()

 Line: 1229 -  e.options.dragDrop&&Me&&!e.isReadOnly()&&"single"==n&&(i=u.contains(t))>-1&&(tt((i=u.ranges[i]).from(),t)<0||t.xRel>0)&&(tt(i.to(),t)>0||t.xRel<0)?function(e,t,n,r){var i=e.display,o=!1,u=ei(e,(function(t){s&&(i.scroller.draggable=!1),e.state.draggingText=!1,he(i.wrapper.ownerDocument,"mouseup",u),he(i.wrapper.ownerDocument,"mousemove",c),he(i.scroller,"dragstart",f),he(i.scroller,"drop",u),o||(xe(t),r.addNew||$i(e.doc,n,null,null,r.extend),s||a&&9==l?setTimeout((function(){i.wrapper.ownerDocument.body.focus(),i.input.focus()}),20):i.input.focus())})),c=function(e){o=o||Math.abs(t.clientX-e.clientX)+Math.abs(t.clientY-e.clientY)>=10},f=function(){return o=!0}

 Line: 1230 -  s&&(i.scroller.draggable=!0),e.state.draggingText=u,u.copy=!r.moveOnDrag,i.scroller.dragDrop&&i.scroller.dragDrop(),fe(i.wrapper.ownerDocument,"mouseup",u),fe(i.wrapper.ownerDocument,"mousemove",c),fe(i.scroller,"dragstart",f),fe(i.scroller,"drop",u),kr(e),setTimeout((function(){return i.input.focus()}),20)}(e,r,t,o):function(e,t,n,r){var i=e.display,o=e.doc

 Line: 1255 -  var l=Ar(i,o);(a.line>=l.to||a.line<l.from)&&setTimeout(ei(e,(function(){p==n&&m(t)})),150)}else{var s=t.clientY<h.top?-20:t.clientY>h.bottom?20:0

 Line: 1256 -  s&&setTimeout(ei(e,(function(){p==n&&(i.scroller.scrollTop+=s,m(t))})),50)}}function g(t){e.state.selectingText=!1,p=1/0,t&&(xe(t),i.input.focus()),he(i.wrapper.ownerDocument,"mousemove",v),he(i.wrapper.ownerDocument,"mouseup",y),o.history.lastSelOrigin=null}var v=ei(e,(function(e){0!==e.buttons&&Se(e)?m(e):g(e)})),y=ei(e,g)

 Line: 1257 -  e.state.selectingText=y,fe(i.wrapper.ownerDocument,"mousemove",v),fe(i.wrapper.ownerDocument,"mouseup",y)}(e,r,t,o)}(t,r,o,e):ke(e)==n.scroller&&xe(e):2==i?(r&&$i(t.doc,r),setTimeout((function(){return n.input.focus()}),20)):3==i&&(k?t.display.input.onContextMenu(e):kr(t)))}}function ma(e,t,n){if("char"==n)return new ki(t,t)

 Line: 1272 -  i(e.display.scroller,"dragstart",r.start),i(e.display.scroller,"dragenter",r.enter),i(e.display.scroller,"dragover",r.over),i(e.display.scroller,"dragleave",r.leave),i(e.display.scroller,"drop",r.drop)}}function ka(e){e.options.lineWrapping?(O(e.display.wrapper,"CodeMirror-wrap"),e.display.sizer.style.minWidth="",e.display.sizerWidth=null):(T(e.display.wrapper,"CodeMirror-wrap"),Gt(e)),sr(e),fr(e),zn(e),setTimeout((function(){return jr(e)}),100)}function Sa(e,t){var n=this

 Line: 1278 -  for(var u in o.wrapper.CodeMirror=this,ya(this),t.lineWrapping&&(this.display.wrapper.className+=" CodeMirror-wrap"),qr(this),this.state={keyMaps:[],overlays:[],modeGen:0,overwrite:!1,delayingBlurEvent:!1,focused:!1,suppressEdits:!1,pasteIncoming:-1,cutIncoming:-1,selectingText:!1,draggingText:!1,highlight:new R,keySeq:null,specialChars:null},t.autofocus&&!v&&o.input.focus(),a&&l<11&&setTimeout((function(){return n.display.input.reset(!0)}),20),function(e){var t=e.display

 Line: 1284 -  function i(){t.activeTouch&&(n=setTimeout((function(){return t.activeTouch=null}),1e3),(r=t.activeTouch).end=+new Date)}function o(e,t){if(null==t.left)return!0

 Line: 1299 -  Bo||(fe(window,"resize",(function(){null==e&&(e=setTimeout((function(){e=null,Io(Ho)}),100))})),fe(window,"blur",(function(){return Io(Lr)})),Bo=!0)}(),Vr(this),this.curOp.forceUpdate=!0,Bi(this,r),t.autofocus&&!v||this.hasFocus()?setTimeout(H(Sr,this),20):Lr(this),wa)wa.hasOwnProperty(u)&&wa[u](n,t[u],xa)

 Line: 1392 -  B(l),setTimeout((function(){r.display.lineSpace.removeChild(a),s.focus(),s==i&&n.showPrimarySelection()}),50)}}Oa(i,r.options.spellcheck,r.options.autocorrect,r.options.autocapitalize),fe(i,"paste",(function(e){me(r,e)||Ea(e,r)||l<=11&&setTimeout(ei(r,(function(){return t.updateFromDOM()})),20)})),fe(i,"compositionstart",(function(e){t.composing={data:e.data,done:!1}})),fe(i,"compositionupdate",(function(e){t.composing||(t.composing={data:e.data,done:!1})})),fe(i,"compositionend",(function(e){t.composing&&(e.data!=t.composing.data&&t.readFromDOMSoon(),t.composing.done=!0)})),fe(i,"touchstart",(function(){return n.forceCompositionEnd()})),fe(i,"input",(function(){t.composing||t.readFromDOMSoon()})),fe(i,"copy",o),fe(i,"cut",o)},Wa.prototype.prepareSelection=function(){var e=vr(this.cm,!1)

 Line: 1400 -  clearTimeout(this.gracePeriod),this.gracePeriod=setTimeout((function(){e.gracePeriod=!1,e.selectionChanged()&&e.cm.operation((function(){return e.cm.curOp.selectionChanged=!0}))}),20)},Wa.prototype.showMultipleSelections=function(e){A(this.cm.display.cursorDiv,e.cursors),A(this.cm.display.selectionDiv,e.selection)},Wa.prototype.rememberSelection=function(){var e=this.getSelection()

 Line: 1435 -  null==this.readDOMTimeout&&(this.readDOMTimeout=setTimeout((function(){if(e.readDOMTimeout=null,e.composing){if(!e.composing.done)return

 Line: 1469 -  var m=function(){he(window,"mouseup",m),setTimeout(v,20)}

 Line: 1470 -  fe(window,"mouseup",m)}else setTimeout(v,50)}function g(){if(null!=i.selectionStart){var e=n.somethingSelected(),o="​"+(e?i.value:"")

 Line: 1472 -  var e=0,o=function(){r.selForContextMenu==n.doc.sel&&0==i.selectionStart&&i.selectionEnd>0&&"​"==t.prevInput?ei(n,ao)(n):e++<10?r.detectingSelectAll=setTimeout(o,500):(r.selForContextMenu=null,r.input.reset())}

 Line: 1473 -  r.detectingSelectAll=setTimeout(o,200)}}},_a.prototype.readOnlyChanged=function(e){e||this.reset(),this.textarea.disabled="nocursor"==e},_a.prototype.setUneditable=function(){},_a.prototype.needsContentAttribute=!1,function(e){var t=e.optionHandlers

 Line: 1804 -  t.redo(),t.focus()}function H(e){var t=e.codemirror,n=t.getWrapperElement(),r=n.nextSibling,i=e.toolbarElements["side-by-side"],o=!1;/editor-preview-active-side/.test(r.className)?(r.className=r.className.replace(/\s*editor-preview-active-side\s*/g,""),i.className=i.className.replace(/\s*active\s*/g,""),n.className=n.className.replace(/\s*CodeMirror-sided\s*/g," ")):(setTimeout((function(){t.getOption("fullScreen")||g(e),r.className+=" editor-preview-active-side"}),1),i.className+=" active",n.className+=" CodeMirror-sided",o=!0)

 Line: 1809 -  o&&/editor-preview/.test(o.className)||((o=document.createElement("div")).className="editor-preview",n.appendChild(o)),/editor-preview-active/.test(o.className)?(o.className=o.className.replace(/\s*editor-preview-active\s*/g,""),i&&(i.className=i.className.replace(/\s*active\s*/g,""),r.className=r.className.replace(/\s*disabled-for-preview*/g,""))):(setTimeout((function(){o.className+=" editor-preview-active"}),1),i&&(i.className+=" active",r.className+=" disabled-for-preview")),o.innerHTML=e.options.previewRender(e.value(),o)

 Line: 1838 -  setTimeout(function(){h.refresh()}.bind(h),0)}},K.prototype.autosave=function(){if(Y()){var e=this

 Line: 1843 -  a>=12&&(a=r-12,o="pm"),0==a&&(a=12),i=i<10?"0"+i:i,t.innerHTML="Autosaved: "+a+":"+i+" "+o}this.autosaveTimeoutId=setTimeout((function(){e.autosave()}),this.options.autosave.delay||1e4)}else console.log("SimpleMDE: localStorage not available, cannot autosave")},K.prototype.clearAutosavedValue=function(){if(Y()){if(null==this.options.autosave||null==this.options.autosave.uniqueId||""==this.options.autosave.uniqueId)return void console.log("SimpleMDE: You must set a uniqueId to clear the autosave value")

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/built/assets/vendor.min-3afd0f95b9e50c6660737c1f2ae26765.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 718 -  t?c():(M.Deferred.getStackHook&&(c.stackTrace=M.Deferred.getStackHook()),e.setTimeout(c))}}return M.Deferred((function(e){n[0][3].add(o(0,e,f(i)?i:N,e.notifyWith)),n[1][3].add(o(0,e,f(t)?t:N)),n[2][3].add(o(0,e,f(r)?r:D))})).promise()},promise:function(e){return null!=e?M.extend(e,i):i}},a={}

 Line: 725 -  M.Deferred.exceptionHook=function(t,n){e.console&&e.console.warn&&t&&B.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,n)},M.readyException=function(t){e.setTimeout((function(){throw t}))}

 Line: 727 -  function H(){g.removeEventListener("DOMContentLoaded",H),e.removeEventListener("load",H),M.ready()}M.fn.ready=function(e){return F.then(e).catch((function(e){M.readyException(e)})),this},M.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--M.readyWait:M.isReady)||(M.isReady=!0,!0!==e&&--M.readyWait>0||F.resolveWith(g,[M]))}}),M.ready.then=F.then,"complete"===g.readyState||"loading"!==g.readyState&&!g.documentElement.doScroll?e.setTimeout(M.ready):(g.addEventListener("DOMContentLoaded",H),e.addEventListener("load",H))

 Line: 866 -  function st(){it&&(!1===g.hidden&&e.requestAnimationFrame?e.requestAnimationFrame(st):e.setTimeout(st,M.fx.interval),M.fx.tick())}function lt(){return e.setTimeout((function(){rt=void 0})),rt=Date.now()}function ut(e,t){var n,r=0,i={height:e}

 Line: 896 -  n.length||M.fx.stop(),rt=void 0},M.fx.timer=function(e){M.timers.push(e),M.fx.start()},M.fx.interval=13,M.fx.start=function(){it||(it=!0,st())},M.fx.stop=function(){it=null},M.fx.speeds={slow:600,fast:200,_default:400},M.fn.delay=function(t,n){return t=M.fx&&M.fx.speeds[t]||t,n=n||"fx",this.queue(n,(function(n,r){var i=e.setTimeout(n,t)

 Line: 980 -  p.async&&p.timeout>0&&(s=e.setTimeout((function(){E.abort("timeout")}),p.timeout))

 Line: 1004 -  n=function(e){return function(){n&&(n=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?a(0,"error"):a(s.status,s.statusText):a(Wt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),r=s.onerror=s.ontimeout=n("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&e.setTimeout((function(){n&&r()}))},n=n("abort")

 Line: 2275 -  if(!t||t.setInterval)return!1

 Line: 3966 -  var t=setTimeout,n=()=>{}

 Line: 3970 -  return{setTimeout:(e,t)=>setTimeout(e,t),clearTimeout:e=>clearTimeout(e),now:()=>Date.now(),next:r(e),clearNext:t}}var a=/\d+/

 Line: 4004 -  this._platform=n(this._boundAutorunEnd)}get counters(){return{begin:_,end:M,events:{begin:w,end:0},autoruns:{created:N,completed:D},run:k,join:E,defer:A,schedule:C,scheduleIterable:x,deferOnce:T,scheduleOnce:O,setTimeout:S,later:L,throttle:j,debounce:P,cancelTimers:R,cancel:z,loops:{total:I,nested:B}}}get defaultQueue(){return this._defaultQueue}begin(){_++

 Line: 4023 -  return this._ensureInstance().schedule(e,n,r,i,!0,a)}setTimeout(){return S++,this.later(...arguments)}later(){L++

 Line: 4055 -  this._timerTimeoutId=this._platform.setTimeout(this._boundRunExpiredTimers,n)}}_ensureInstance(){var e=this.currentInstance

 Line: 4413 -  function s(e,t,n){1===o.push({name:e,payload:{key:t._guidKey,id:t._id,eventName:e,detail:t._result,childId:n&&n._id,label:t._label,timeStamp:Date.now(),error:i["instrument-with-stack"]?new Error(t._label):null}})&&setTimeout((()=>{for(var e=0;e<o.length;e++){var t=o[e],n=t.payload

 Line: 4463 -  return new D(E,e,!1,t).promise}))}function B(e){throw setTimeout((()=>{throw e})),e}function F(e){var t={resolve:void 0,reject:void 0}

 Line: 4474 -  function ne(){return()=>setTimeout(de,1)}var re,ie,ae,oe,se,le,ue,ce=new Array(1e3)

 Line: 4476 -  return void 0!==(Z=e.runOnLoop||e.runOnContext)?function(){Z(de)}:ne()}catch(t){return ne()}}():ne(),i.async=J,i.after=e=>setTimeout(e,0)

 Line: 5473 -  return(t?r<1.5?1:r<3?2:r<7?5:10:r<=1?1:r<=2?2:r<=5?5:10)*Math.pow(10,n)},q.requestAnimFrame="undefined"==typeof window?function(e){e()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){return window.setTimeout(e,1e3/60)},q.getRelativePosition=function(e,t){var n,r,i=e.originalEvent||e,a=e.target||e.srcElement,o=a.getBoundingClientRect(),s=i.touches

 Line: 5581 -  setTimeout((function(){n(new E(i,r))}),0)},l.onerror=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){a(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){a(new e.DOMException("Aborted","AbortError"))}),0)},l.open(o.method,function(e){try{return""===e&&t.location.href?t.location.href:e}catch(n){return e}}(o.url),!0),"include"===o.credentials?l.withCredentials=!0:"omit"===o.credentials&&(l.withCredentials=!1),"responseType"in l&&(s?l.responseType="blob":u&&o.headers.get("Content-Type")&&-1!==o.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!i||"object"!=typeof i.headers||i.headers instanceof m?o.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(i.headers).forEach((function(e){l.setRequestHeader(e,p(i.headers[e]))})),o.signal&&(o.signal.addEventListener("abort",c),l.onreadystatechange=function(){4===l.readyState&&o.signal.removeEventListener("abort",c)}),l.send(void 0===o._bodyInit?null:o._bodyInit)}))}C.polyfill=!0,t.fetch||(t.fetch=C,t.Headers=m,t.Request=w,t.Response=E),e.Headers=m,e.Request=w,e.Response=E,e.fetch=C})({})

 Line: 5626 -  return function(){n||(n=!0,setTimeout((function(){n=!1,e()}),t))}}

 Line: 5819 -  this._showTimeout=window.setTimeout((function(){return r._show(e,n)}),i)}},{key:"_scheduleHide",value:function(e,t,n,r){var i=this

 Line: 5822 -  window.clearTimeout(this._showTimeout),window.setTimeout((function(){if(!1!==i._isOpen&&document.body.contains(i._tooltipNode)){if("mouseleave"===r.type)if(i._setTooltipNodeEvent(r,e,t,n))return

 Line: 5863 -  return t=Math.max(0,16-(n-i)),i=n+t,setTimeout((function(){e(n+t)}),t)}),s=function(){var e=t.performance||{}

 Line: 5986 -  case"finish":case"finishAll":case"stop":d.each(l,(function(e,t){w(t)&&w(t).delayTimer&&(clearTimeout(w(t).delayTimer.setTimeout),w(t).delayTimer.next&&w(t).delayTimer.next(),delete w(t).delayTimer),"finishAll"!==p||!0!==m&&!h.isString(m)||(d.each(d.queue(t,h.isString(m)?m:""),(function(e,t){h.isFunction(t)&&t()})),d.queue(t,h.isString(m)?m:"",[]))}))

 Line: 6004 -  w(e).delayBegin=(new Date).getTime(),w(e).delay=parseFloat(s.delay),w(e).delayTimer={setTimeout:setTimeout(t,parseFloat(s.delay)),next:a}})),s.duration.toString().toLowerCase()){case"fast":s.duration=200

 Line: 6011 -  if(s.begin&&0===C)try{s.begin.call(l,l)}catch(Z){setTimeout((function(){throw Z}),1)}if("scroll"===M){var y,k,E,O=/^x$/i.test(s.axis)?"Left":"Top",S=parseFloat(s.offset)||0

 Line: 6061 -  w(e).delayBegin=(new Date).getTime(),w(e).delay=parseFloat(s.delay),w(e).delayTimer={setTimeout:setTimeout(b,parseFloat(s.delay)),next:k}}else b()

 Line: 6066 -  if(!g.State.isMobile&&n.hidden!==r){var M=function(){n.hidden?(_=function(e){return setTimeout((function(){e(!0)}),16)},T()):_=t.requestAnimationFrame||o}

 Line: 6074 -  n&&n.delayTimer&&!n.delayPaused&&(n.delayRemaining=n.delay-t+n.delayBegin,n.delayPaused=!0,clearTimeout(n.delayTimer.setTimeout))}function E(e,t){var n=w(e)

 Line: 6075 -  n&&n.delayTimer&&n.delayPaused&&(n.delayPaused=!1,n.delayTimer.setTimeout=setTimeout(n.delayTimer.next,n.delayRemaining))}function A(e){return function(t){return Math.round(t*e)*(1/e)}}function C(e,n,r,i){var a=4,o=.001,s=1e-7,l=10,u=11,c=1/(u-1),d="Float32Array"in t

 Line: 6118 -  h.transformCache[t]!==r&&new RegExp("^\\("+n+"[^.]").test(i)&&(p=!0,delete h.transformCache[t])})),a.mobileHA&&(p=!0,delete h.transformCache.translate3d),p&&v.flushTransformCache(c),v.Values.removeClass(c,"velocity-animating")}if(!t&&a.complete&&!a.loop&&l===u-1)try{a.complete.call(i,i)}catch(b){setTimeout((function(){throw b}),1)}o&&!0!==a.loop&&o(i),h&&!0===a.loop&&!t&&(d.each(h.tweensContainer,(function(e,t){if(/^rotate/.test(e)&&(parseFloat(t.startValue)-parseFloat(t.endValue))%360==0){var n=t.startValue

 Line: 7902 -  o&&o.isContentEditable&&(a=setTimeout((function(){r.showLink(o.href,o)}),200))})),this.addEventListener(i,"mouseout",(function(e){clearTimeout(a),r.elementObserver&&r.elementObserver.cancel()

 Line: 9241 -  return e.items=null==t?[]:t,e.estimateHeight=this.get("estimateHeight"),e.renderAll=this.get("renderAll"),e.bufferSize=this.get("bufferSize"),e.scheduleUpdate(!0),e.virtualComponents})),schedule(e,t){return n.scheduler.schedule(e,t,this.token)},_scheduleSendAction(e,t){this._scheduledActions.push([e,t]),null===this._nextSendActions&&(this._nextSendActions=setTimeout((()=>{this._nextSendActions=null,Ember.run((()=>{const e=this.get("items"),t=this.get("key")

 Line: 9403 -  null!==t&&t.focus(),setTimeout((function(){if(e.target)try{let t=document.createEvent("MouseEvents")

 Line: 9879 -  class o extends a{constructor(){super(),this.timerId=null}[n](e,t){this.timerId=requestAnimationFrame((()=>{e.proceed(t,r,e._result)}))}[t](){cancelAnimationFrame(this.timerId),this.timerId=null}}class s extends a{constructor(e){super(),this.ms=e,this.timerId=null}[n](e,t){this.timerId=setTimeout((()=>{e.proceed(t,r,e._result)}),this.ms)}[t](){clearTimeout(this.timerId),this.timerId=null}}const l=new class extends a{[n](){}[t](){}}

 Line: 10037 -  this._generatorValue=n.value,n.done?this._generatorState=r:this._generatorState="HAS_MORE_VALUES"}catch(n){this._generatorValue=n,this._generatorState=i}finally{this._expectsLinkedYield&&(this._generatorValue&&this._generatorValue._performType===s||console.warn("You performed a .linked() task without immediately yielding/returning it. This is currently unsupported (but might be supported in future version of ember-concurrency)."),this._expectsLinkedYield=!1),l.pop()}},_getIterator(){return this.iterator||(this.iterator=this._makeIterator()),this.iterator},_makeIterator(){return this.fn.apply(this.context,this.args)},_advanceIndex(e){if(this._index===e)return++this._index},_proceedSoon(e,t){this._advanceIndex(this._index),this._runLoop?Ember.run.join((()=>{Ember.run.schedule("actions",this,this._proceed,e,t)})):setTimeout((()=>this._proceed(e,t)),1)},proceed(e,t,n){this._completionState||this._advanceIndex(e)&&this._proceedSoon(t,n)},_scheduleProceed(e,t){this._completionState||(!this._runLoop||Ember.run.currentRunLoop?this._runLoop||!Ember.run.currentRunLoop?this._proceed(e,t):setTimeout((()=>this._proceed(e,t)),1):Ember.run(this,this._proceed,e,t))},_proceed(e,t){this._completionState||(this._generatorState===r?this._handleResolvedReturnedValue(e,t):this._handleResolvedContinueValue(e,t))},_handleResolvedReturnedValue(e,n){switch(e){case t.YIELDABLE_CONTINUE:case t.YIELDABLE_RETURN:this._finalize(n,1)

 Line: 10128 -  class p extends u{constructor(e){super(),this.ms=e,this.timerId=null}[a](e,t){this.timerId=setTimeout((()=>{e.proceed(t,o,e._result)}),this.ms)}[i](){clearTimeout(this.timerId),this.timerId=null}}class f extends u{constructor(){super(),this.timerId=null}[a](e,t){this.timerId=requestAnimationFrame((()=>{e.proceed(t,o,e._result)}))}[i](){cancelAnimationFrame(this.timerId),this.timerId=null}}function m(e){let t=Ember.RSVP.defer(),n={proceed(e,n,r){n==o||n==s?t.resolve(r):t.reject(r)}},r=e.__ec_yieldable__(n,0)

 Line: 10798 -  Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Helper.extend({moment:Ember.inject.service(),disableInterval:!1,globalAllowEmpty:Ember.computed.bool("moment.__config__.allowEmpty"),supportsGlobalAllowEmpty:!0,localeOrTimeZoneChanged:Ember.observer("moment.locale","moment.timeZone",(function(){this.recompute()})),compute(e,{interval:t}){Ember.get(this,"disableInterval")||(this.clearTimer(),t&&(this.intervalTimer=setTimeout((()=>{Ember.run((()=>this.recompute()))}),parseInt(t,10))))},morphMoment(e,{locale:t,timeZone:n}){const r=Ember.get(this,"moment")

 Line: 13279 -  function i(e){this.callback=e}i.prototype={observe:function(){this.interval=setInterval(this.callback,100),r.push(this)},disconnect:function(){clearInterval(this.interval),r.splice(r.indexOf(this),1)}},n=(0,t.default)()&&(window.MutationObserver||window.WebkitMutationObserver)||i

 Line: 13412 -  Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e,t,...n){return t=void 0!==t?t:{},new Ember.RSVP.Promise((r=>{setTimeout((()=>{r(this.lookup(t.then||"default").call(this,...n))}),e)}))}})),define("liquid-fire/velocity-ext",["velocity"],(function(e){"use strict"

 Line: 13623 -  dfff]",_e="(?:\\ud83c[\\udde6-\\uddff]){2}",Me="[\\ud800-\\udbff][\\udc00-\\udfff]",we="[A-Z\\xc0-\\xd6\\xd8-\\xde]",ke="(?:"+ge+"|"+be+")",Ee="(?:"+we+"|"+be+")",Ae="(?:"+fe+"|"+ve+")?",Ce="[\\ufe0e\\ufe0f]?"+Ae+"(?:\\u200d(?:"+[ye,_e,Me].join("|")+")[\\ufe0e\\ufe0f]?"+Ae+")*",xe="(?:"+["[\\u2700-\\u27bf]",_e,Me].join("|")+")"+Ce,Te="(?:"+[ye+fe+"?",fe,_e,Me,"[\\ud800-\\udfff]"].join("|")+")",Oe=RegExp("['’]","g"),Se=RegExp(fe,"g"),Le=RegExp(ve+"(?="+ve+")|"+Te+Ce,"g"),je=RegExp([we+"?"+ge+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[pe,we,"$"].join("|")+")",Ee+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[pe,we+ke,"$"].join("|")+")",we+"?"+ke+"+(?:['’](?:d|ll|m|re|s|t|ve))?",we+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",me,xe].join("|"),"g"),Pe=RegExp("[\\u200d\\ud800-\\udfff"+de+"\\ufe0e\\ufe0f]"),Re=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ze=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Ne=-1,De={}

 Line: 13657 -  return e({},"",{}),e}catch(e){}}(),Vt=t.clearTimeout!==Ye.clearTimeout&&t.clearTimeout,Jt=Z&&Z.now!==Ye.Date.now&&Z.now,Kt=t.setTimeout!==Ye.setTimeout&&t.setTimeout,Qt=pe.ceil,$t=pe.floor,en=fe.getOwnPropertySymbols,tn=Pe?Pe.isBuffer:void 0,nn=t.isFinite,rn=ve.join,an=Bt(fe.keys,fe),on=pe.max,sn=pe.min,ln=Z.now,un=t.parseInt,cn=pe.random,dn=ve.reverse,hn=Qi(t,"DataView"),pn=Qi(t,"Map"),fn=Qi(t,"Promise"),mn=Qi(t,"Set"),gn=Qi(t,"WeakMap"),bn=Qi(fe,"create"),vn=gn&&new gn,yn={},_n=Aa(hn),Mn=Aa(pn),wn=Aa(fn),kn=Aa(mn),En=Aa(gn),An=Be?Be.prototype:void 0,Cn=An?An.valueOf:void 0,xn=An?An.toString:void 0

 Line: 13973 -  e[r]=aa(a,n)?i[a]:void 0}return e}function ga(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var ba=Ma(Hr),va=Kt||function(e,t){return Ye.setTimeout(e,t)},ya=Ma(qr)

 Line: 14379 -  return e.preview&&e.header&&c.preview++,t=i,n=new m(c),b=n.parse(t,a,s),w(),h?{meta:{paused:!0}}:b||{meta:{paused:!1}}},this.paused=function(){return h},this.pause=function(){h=!0,n.abort(),t=M(e.chunk)?"":t.substring(n.getCharIndex())},this.resume=function(){u.streamer._halted?(h=!1,u.streamer.parseChunk(t,!0)):setTimeout(u.resume,3)},this.aborted=function(){return p},this.abort=function(){p=!0,n.abort(),b.meta.aborted=!0,M(e.complete)&&e.complete(b),t=""}}function f(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function m(e){var t,n=(e=e||{}).delimiter,r=e.newline,i=e.comments,a=e.step,s=e.preview,l=e.fastMode,u=t=void 0===e.quoteChar?'"':e.quoteChar

 Line: 14933 -  ]",_e="(?:\\ud83c[\\udde6-\\uddff]){2}",Me="[\\ud800-\\udbff][\\udc00-\\udfff]",we="[A-Z\\xc0-\\xd6\\xd8-\\xde]",ke="(?:"+ge+"|"+be+")",Ee="(?:"+we+"|"+be+")",Ae="(?:"+fe+"|"+ve+")?",Ce="[\\ufe0e\\ufe0f]?"+Ae+"(?:\\u200d(?:"+[ye,_e,Me].join("|")+")[\\ufe0e\\ufe0f]?"+Ae+")*",xe="(?:"+["[\\u2700-\\u27bf]",_e,Me].join("|")+")"+Ce,Te="(?:"+[ye+fe+"?",fe,_e,Me,"[\\ud800-\\udfff]"].join("|")+")",Oe=RegExp("['’]","g"),Se=RegExp(fe,"g"),Le=RegExp(ve+"(?="+ve+")|"+Te+Ce,"g"),je=RegExp([we+"?"+ge+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[pe,we,"$"].join("|")+")",Ee+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[pe,we+ke,"$"].join("|")+")",we+"?"+ke+"+(?:['’](?:d|ll|m|re|s|t|ve))?",we+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",me,xe].join("|"),"g"),Pe=RegExp("[\\u200d\\ud800-\\udfff"+de+"\\ufe0e\\ufe0f]"),Re=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,ze=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Ne=-1,De={}

 Line: 14967 -  return e({},"",{}),e}catch(e){}}(),Zt=t.clearTimeout!==Ye.clearTimeout&&t.clearTimeout,Vt=de&&de.now!==Ye.Date.now&&de.now,Jt=t.setTimeout!==Ye.setTimeout&&t.setTimeout,Kt=fe.ceil,Qt=fe.floor,$t=me.getOwnPropertySymbols,en=Be?Be.isBuffer:void 0,tn=t.isFinite,nn=ye.join,rn=It(me.keys,me),an=fe.max,on=fe.min,sn=de.now,ln=t.parseInt,un=fe.random,cn=ye.reverse,dn=Ki(t,"DataView"),hn=Ki(t,"Map"),pn=Ki(t,"Promise"),fn=Ki(t,"Set"),mn=Ki(t,"WeakMap"),gn=Ki(me,"create"),bn=mn&&new mn,vn={},yn=Ea(dn),_n=Ea(hn),Mn=Ea(pn),wn=Ea(fn),kn=Ea(mn),En=qe?qe.prototype:void 0,An=En?En.valueOf:void 0,Cn=En?En.toString:void 0

 Line: 15283 -  e[r]=ia(a,n)?i[a]:void 0}return e}function ma(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var ga=_a(Fr),ba=Jt||function(e,t){return Ye.setTimeout(e,t)},va=_a(Hr)

 Line: 16192 -  s=i(),e.process()}l=!1}function c(){o=setTimeout(u,0)}return{add:function(e,t){!l&&a&&n&&0===s.size()&&c(),s.add(e,t)},force:function(e){l||(void 0===e&&(e=n),o&&(clearTimeout(o),o=null),e?c():u())}}}},function(e,t,n){"use strict";(e.exports={}).getOption=function(e,t,n){var r=e[t]

 Line: 16206 -  return r.checkForObjectDocumentTimeoutId&&window.clearTimeout(r.checkForObjectDocumentTimeoutId),void(r.checkForObjectDocumentTimeoutId=setTimeout((function(){r.checkForObjectDocumentTimeoutId=0,e(t,n)}),100))}n(t.contentDocument)}(this,(function(e){s(o)}))},r.isIE()||(a.data="about:blank"),i(o)&&(o.appendChild(a),i(o).object=a,r.isIE()&&(a.data="about:blank"))}i(o).startSize={width:d,height:h},n?n.add(p):p()}(o,s)},addListener:function(e,t){function n(){t(e)}if(r.isIE(8))i(e).object={proxy:n},e.attachEvent("onresize",n)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/built/assets/vendor.min-3afd0f95b9e50c6660737c1f2ae26765.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1200 -  void 0!==i&&void 0!==i[u.UPDATE_REFERENCED_VALUE]&&i[u.UPDATE_REFERENCED_VALUE](2===arguments.length?t:(0,r.get)(this,e))}},getAttr(e){return this.get(e)},readDOMAttr(e){var t=(0,s.getViewElement)(this),n=t,r="http://www.w3.org/2000/svg"===n.namespaceURI,{type:i,normalized:a}=(0,c.normalizeProperty)(n,e)

 Line: 1293 -  class Te extends u.RootReference{constructor(e,t){super(t),this.inner=e,this.tag=e.tag,this[xe]=e}value(){return this.inner.value()}get(e){return this.inner.get(e)}[u.UPDATE_REFERENCED_VALUE](e){return this.inner[u.UPDATE_REFERENCED_VALUE](e)}[Ce](e){return this.inner[u.UPDATE_REFERENCED_VALUE](e)}}var Oe=(0,o.symbol)("ACTION")

 Line: 1301 -  "function"==typeof l&&l[Oe]?n[o]=l:s[u.UPDATE_REFERENCED_VALUE]&&(n[o]=new Re(s,l)),i[o]=s,r[o]=l}return r.attrs=n,r}var Pe=(0,o.symbol)("REF")

 Line: 1302 -  class Re{constructor(e,t){this[s.MUTABLE_CELL]=!0,this[Pe]=e,this.value=t}update(e){this[Pe][u.UPDATE_REFERENCED_VALUE](e)}}var ze=function(e,t){var n={}

 Line: 1414 -  return(0,r.get)(t,String(n))}}class It extends u.HelperRootReference{constructor(e,t){super(Dt,e,t),this.sourceReference=e.positional.at(0),this.pathReference=e.positional.at(1)}[u.UPDATE_REFERENCED_VALUE](e){var t=this.sourceReference.value()

 Line: 3220 -  Object.defineProperty(e,"__esModule",{value:!0}),e.isModified=function(e){return e!==r},e.IterationItemReference=e.PropertyReference=e.HelperRootReference=e.ComponentRootReference=e.RootReference=e.UPDATE_REFERENCED_VALUE=e.IterableReference=e.ConstReference=e.ReferenceCache=e.CachedReference=void 0

 Line: 3232 -  var a=(0,t.symbol)("UPDATE_REFERENCED_VALUE")

 Line: 3233 -  e.UPDATE_REFERENCED_VALUE=a

 Line: 3384 -  var ge={INPUT:{form:!0,autocorrect:!0,list:!0},SELECT:{form:!0},OPTION:{form:!0},TEXTAREA:{form:!0},LABEL:{form:!0},FIELDSET:{form:!0},LEGEND:{form:!0},OBJECT:{form:!0},BUTTON:{form:!0}}

 Line: 4263 -  return e[e.length-1]},get params(){return s},get queryParams(){return n}}

 Line: 4349 -  if(void 0!==i&&i.hasOwnProperty("queryParams")&&(a=t.pop().queryParams),void 0===e){c(this,"Updating query params")

 Line: 5555 -  var M=["DELETE","GET","HEAD","OPTIONS","POST","PUT"]

 Line: 5617 -   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

 Line: 5783 -   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

 Line: 6390 -  return!("INPUT"==t||"SELECT"==t||"TEXTAREA"==t)},e.key.isPressed=function(e){return"string"==typeof e&&(e=s(e)),-1!=u(l,e)},e.key.getPressedKeyCodes=function(){return l.slice(0)},e.key.noConflict=function(){var t=e.key

 Line: 6571 -  throw new P.default("Unknown atom encountered: "+t.name)},mobiledoc:null,html:null},D={DID_UPDATE:"didUpdate",WILL_RENDER:"willRender",DID_RENDER:"didRender",WILL_DELETE:"willDelete",DID_DELETE:"didDelete",WILL_HANDLE_NEWLINE:"willHandleNewline",CURSOR_DID_CHANGE:"cursorDidChange",DID_REPARSE:"didReparse",POST_DID_CHANGE:"postDidChange",INPUT_MODE_DID_CHANGE:"inputModeDidChange"},I=function(){function e(){var t=this,n=arguments.length<=0||void 0===arguments[0]?{}:arguments[0]

 Line: 6584 -  this.runCallbacks(D.WILL_DELETE,[r,t,n]),r.isCollapsed?this.deleteAtPosition(r.head,t,{unit:n}):this.deleteRange(r),this.runCallbacks(D.DID_DELETE,[r,t,n])}},{key:"handleNewline",value:function(e){var t=this

 Line: 6606 -  return this.runCallbacks(D.DID_UPDATE,[t]),t.complete(),this._readRangeFromDOM(),t._shouldCancelSnapshot&&(this._editHistory._pendingSnapshot=null),this._editHistory.storeSnapshot(t.editActionTaken),r}},{key:"didUpdatePost",value:function(e){this.addCallback(D.DID_UPDATE,e)}},{key:"postDidChange",value:function(e){this.addCallback(D.POST_DID_CHANGE,e)}},{key:"onTextInput",value:function(e){this._eventManager.registerInputHandler(e)}},{key:"unregisterAllTextInputHandlers",value:function(){this._eventManager.unregisterAllTextInputHandlers()}},{key:"unregisterTextInputHandler",value:function(e){this._eventManager.unregisterInputHandler(e)}},{key:"inputModeDidChange",value:function(e){this.addCallback(D.INPUT_MODE_DID_CHANGE,e)}},{key:"willRender",value:function(e){this.addCallback(D.WILL_RENDER,e)}},{key:"didRender",value:function(e){this.addCallback(D.DID_RENDER,e)}},{key:"willDelete",value:function(e){this.addCallback(D.WILL_DELETE,e)}},{key:"didDelete",value:function(e){this.addCallback(D.DID_DELETE,e)}},{key:"willHandleNewline",value:function(e){this.addCallback(D.WILL_HANDLE_NEWLINE,e)}},{key:"cursorDidChange",value:function(e){this.addCallback(D.CURSOR_DID_CHANGE,e)}},{key:"_rangeDidChange",value:function(){this.hasRendered&&this.runCallbacks(D.CURSOR_DID_CHANGE)}},{key:"_inputModeDidChange",value:function(){this.runCallbacks(D.INPUT_MODE_DID_CHANGE)}},{key:"_insertEmptyMarkupSectionAtCursor",value:function(){var e=this

 Line: 7765 -  var u={BACKSPACE:t.default.BACKSPACE,TAB:t.default.TAB,ENTER:t.default.ENTER,ESC:t.default.ESC,SPACE:t.default.SPACE,PAGEUP:t.default.PAGEUP,PAGEDOWN:t.default.PAGEDOWN,END:t.default.END,HOME:t.default.HOME,LEFT:t.default.LEFT,UP:t.default.UP,RIGHT:t.default.RIGHT,DOWN:t.default.DOWN,INS:t.default.INS,DEL:t.default.DELETE}

 Line: 7766 -  var c=function(){function e(t){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.key=t.key,this.keyCode=t.keyCode,this.charCode=t.charCode,this.event=t,this.modifierMask=l(t)}return a(e,[{key:"toString",value:function(){return this.isTab()?r.TAB:String.fromCharCode(this.charCode)}},{key:"isKeySupported",value:function(){return this.key}},{key:"isKey",value:function(e){return this.isKeySupported()?((0,i.default)("Must define Keys."+e+".",n.default[e]),this.key===n.default[e]):((0,i.default)("Must define Keycodes."+e+".",t.default[e]),this.keyCode===t.default[e])}},{key:"isEscape",value:function(){return this.isKey("ESC")}},{key:"isDelete",value:function(){return this.isKey("BACKSPACE")||this.isForwardDelete()}},{key:"isForwardDelete",value:function(){return this.isKey("DELETE")}},{key:"isArrow",value:function(){return this.isHorizontalArrow()||this.isVerticalArrow()}},{key:"isHorizontalArrow",value:function(){return this.isLeftArrow()||this.isRightArrow()}},{key:"isHorizontalArrowWithoutModifiersOtherThanShift",value:function(){return this.isHorizontalArrow()&&!(this.ctrlKey||this.metaKey||this.altKey)}},{key:"isVerticalArrow",value:function(){return this.isKey("UP")||this.isKey("DOWN")}},{key:"isLeftArrow",value:function(){return this.isKey("LEFT")}},{key:"isRightArrow",value:function(){return this.isKey("RIGHT")}},{key:"isHome",value:function(){return this.isKey("HOME")}},{key:"isEnd",value:function(){return this.isKey("END")}},{key:"isPageUp",value:function(){return this.isKey("PAGEUP")}},{key:"isPageDown",value:function(){return this.isKey("PAGEDOWN")}},{key:"isInsert",value:function(){return this.isKey("INS")}},{key:"isClear",value:function(){return this.isKey("CLEAR")}},{key:"isPause",value:function(){return this.isKey("PAUSE")}},{key:"isSpace",value:function(){return this.isKey("SPACE")}},{key:"isTab",value:function(){return!this.hasAnyModifier()&&this.isKey("TAB")}},{key:"isEnter",value:function(){return this.isKey("ENTER")}},{key:"isShiftKey",value:function(){return this.isKey("SHIFT")}},{key:"isAltKey",value: Line: 7776 -  e.default={BACKSPACE:8,SPACE:32,ENTER:13,SHIFT:16,ESC:27,DELETE:46,0:48,9:57,A:65,Z:90,a:97,z:122,NUMPAD_0:186,NUMPAD_9:111,";":186,".":190,"`":192,"[":219,'"':222,IME:229,TAB:9,CLEAR:12,PAUSE:19,PAGEUP:33,PAGEDOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,INS:45,META:91,ALT:18,CTRL:17}})),define("mobiledoc-kit/utils/keys",["exports"],(function(e){"use strict"

 Line: 7777 -  e.default={BACKSPACE:"Backspace",SPACE:" ",ENTER:"Enter",SHIFT:"Shift",ESC:"Escape",DELETE:"Delete",INS:"Insert",HOME:"Home",END:"End",PAGEUP:"PageUp",PAGEDOWN:"PageDown",CLEAR:"Clear",PAUSE:"Pause",TAB:"Tab",ALT:"Alt",CTRL:"Control",LEFT:"ArrowLeft",RIGHT:"ArrowRight",UP:"ArrowUp",DOWN:"ArrowDown"}})),define("mobiledoc-kit/utils/linked-item",["exports"],(function(e){"use strict"

 Line: 8028 -      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM

 Line: 8139 -  return this.ajax(this.buildURL(t.modelName,r,n,"deleteRecord"),"DELETE")},_stripIDFromURL(e,t){var n,r,i=this.buildURL(t.modelName,t.id,t).split("/"),a=i[i.length-1],o=t.id

 Line: 8760 -  class Se{constructor(e,t,n={}){this._snapshots=void 0,this._recordArray=void 0,this._type=void 0,this.length=void 0,this.meta=void 0,this.adapterOptions=void 0,this.include=void 0,this._snapshots=null,this._recordArray=e,this.length=e.get("length"),this._type=null,this.meta=t,this.adapterOptions=n.adapterOptions,this.include=n.include}get type(){return this._type||(this._type=this._recordArray.get("type"))}get modelName(){return this._recordArray.modelName}snapshots(){return null!==this._snapshots||(this._snapshots=this._recordArray._takeSnapshot()),this._snapshots}}var Le=Ember.ArrayProxy.extend(Oe,{init(){this._super(...arguments),this.set("content",this.content||null),this.isLoaded=this.isLoaded||!1,this.isUpdating=!1,this.store=this.store||null,this._updatingPromise=null},replace(){throw new Error(`The result of a server query (for all ${this.modelName} types) is immutable. To modify contents, use toArray()`)},type:Ember.computed("modelName",(function(){return this.modelName?this.store.modelFor(this.modelName):null})).readOnly(),objectAtContent(e){var t=Ember.get(this,"content").objectAt(e)

 Line: 8766 -  t&&t.delete(this)}))},_unregisterFromManager(){this.manager.unregisterRecordArray(this)},willDestroy(){this._unregisterFromManager(),this._dissociateFromOwnRecords(),Ember.set(this,"content",null),Ember.set(this,"length",0),this._super(...arguments)},_createSnapshot(e){return new Se(this,this.get("meta"),e)},_takeSnapshot(){return Ember.get(this,"content").map((e=>e.createSnapshot()))}}),je=Le.extend({init(){this.set("content",this.get("content")||Ember.A()),this._super(...arguments),this.query=this.query||null,this.links=this.links||null},replace(){throw new Error(`The result of a server query (on ${this.modelName}) is immutable.`)},_update(){var e=Ember.get(this,"store"),t=Ember.get(this,"query")

 Line: 8889 -  return i?i._setInternalModels(s,a):i=t.recordArrayManager.createAdapterPopulatedRecordArray(n,r,s,a),i}),null,`DS: Extract payload of query ${n}`)}(this.adapterFor(e),this,e,t,n,r))}queryRecord(e,t,n){var r=a(e),i=this.adapterFor(r),o={}

 Line: 8892 -  return t._push(r)}),null,`DS: Extract payload of queryRecord ${n}`)}(i,this,r,t,o).then((e=>e?e.getRecord():null)))}findAll(e,t){var n=a(e)

 Line: 9313 -  return u.xhr=l,u},post(e,t){return this.request(e,this._addTypeToOptionsFor(t,"POST"))},put(e,t){return this.request(e,this._addTypeToOptionsFor(t,"PUT"))},patch(e,t){return this.request(e,this._addTypeToOptionsFor(t,"PATCH"))},del(e,t){return this.request(e,this._addTypeToOptionsFor(t,"DELETE"))},delete(e,t){return this.del(e,t)},get(e){if(arguments.length>1||-1!==e.indexOf("/"))throw new Ember.Error("It seems you tried to use `.get` to make a request! Use the `.request` method instead.")

 Line: 10440 -  return n||e}_ensureCustomStoreCompatibility(e,t,n){if(!t[n])throw new Ember.Error("Ember Infinity: Custom data store must specify query method")}_ensureCompatibility(e,t){if(!e||!e[t])throw new Ember.Error("Ember Infinity: Store is not available to infinity.model")}}e.default=s})),define("ember-infinity/templates/components/infinity-loader",["exports"],(function(e){"use strict"

 Line: 12830 -  Object.defineProperty(e,"__esModule",{value:!0}),e.GHOST_ZINDEX=e.GHOST_CONTAINER_ID=e.DROP_INDICATOR_ZINDEX=e.DROP_INDICATOR_ID=e.DRAG_DISABLED_SELECTOR=e.DRAG_DISABLED_DATA_ATTR=e.DROPPABLE_SELECTOR=e.DROPPABLE_DATA_ATTR=e.DRAGGABLE_SELECTOR=e.DRAGGABLE_DATA_ATTR=e.CONTAINER_SELECTOR=e.CONTAINER_DATA_ATTR=void 0

 Line: 12834 -  e.CONTAINER_SELECTOR=n

 Line: 12838 -  e.DRAGGABLE_SELECTOR=i

 Line: 12842 -  e.DROPPABLE_SELECTOR=o

 Line: 12846 -  e.DRAG_DISABLED_SELECTOR=l

 Line: 13014 -  return this.containers.pushObject(n),{enableDrag:()=>{n.enableDrag()},disableDrag:()=>{n.disableDrag()},refresh:()=>{n.refresh()},destroy:()=>{this.containers.removeObject(n)}}},cleanup(){this.containers=Ember.A([]),this._resetDrag()},_onMouseDown(e){if(!this.isDragging&&(void 0===e.button||0===e.button)&&(this.grabbedElement=n.getParent(e.target,t.DRAGGABLE_SELECTOR),this.grabbedElement)){let r=n.getParent(e.target,t.DRAG_DISABLED_SELECTOR)

 Line: 13016 -  let i=n.getParent(this.grabbedElement,t.CONTAINER_SELECTOR),o=this.containers.findBy("element",i)

 Line: 13032 -  let r=n.getParent(e,t.CONTAINER_SELECTOR),i=n.getParent(e,t.DROPPABLE_SELECTOR)

 Line: 13048 -  "top"===r?(e=n.getPreviousSibling(u,t.DROPPABLE_SELECTOR),s=u):"bottom"===r&&(e=u,s=n.getNextSibling(u,t.DROPPABLE_SELECTOR))

 Line: 14910 -  if(!t.currentCountQuery)throw new a.IncorrectUsageError("Attempted to setup a max limit without a current count query")

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/built/assets/codemirror/codemirror-993b89ee64b558b2ae87953d44ab3f22.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 29 -  return-1}R.prototype.set=function(e,t){clearTimeout(this.id),this.id=setTimeout(t,e)}

 Line: 276 -  or?n=or.delayedCallbacks:ar?n=ar:(n=ar=[],setTimeout(sr,0))

 Line: 442 -  t.cursorDiv.style.visibility="",e.options.cursorBlinkRate>0?t.blinker=setInterval((function(){return t.cursorDiv.style.visibility=(r=!r)?"":"hidden"}),e.options.cursorBlinkRate):e.options.cursorBlinkRate<0&&(t.cursorDiv.style.visibility="hidden")}}function kn(e){e.state.focused||(e.display.input.focus(),Sn(e))}function Cn(e){e.state.delayingBlurEvent=!0,setTimeout((function(){e.state.delayingBlurEvent&&(e.state.delayingBlurEvent=!1,Ln(e))}),100)}function Sn(e,t){e.state.delayingBlurEvent&&(e.state.delayingBlurEvent=!1),"nocursor"!=e.options.readOnly&&(e.state.focused||(pe(e,"focus",e,t),e.state.focused=!0,z(e.display.wrapper,"CodeMirror-focused"),e.curOp||e.display.selForContextMenu==e.doc.sel||(e.display.input.reset(),s&&setTimeout((function(){return e.display.input.reset(!0)}),20)),e.display.input.receivedFocus()),xn(e))}function Ln(e,t){e.state.delayingBlurEvent||(e.state.focused&&(pe(e,"blur",e,t),e.state.focused=!1,T(e.display.wrapper,"CodeMirror-focused")),clearInterval(e.display.blinker),setTimeout((function(){e.state.focused||(e.display.shift=!1)}),150))}function Tn(e){for(var t=e.display,r=t.lineDiv.offsetTop,n=0;n<t.view.length;n++){var i=t.view[n],o=e.options.lineWrapping,s=void 0,u=0

 Line: 486 -  function Gn(e){e.display.scrollbars&&(e.display.scrollbars.clear(),e.display.scrollbars.addClass&&T(e.display.wrapper,e.display.scrollbars.addClass)),e.display.scrollbars=new Kn[e.options.scrollbarStyle]((function(t){e.display.wrapper.insertBefore(t,e.display.scrollbarFiller),de(t,"mousedown",(function(){e.state.focused&&setTimeout((function(){return e.display.input.focus()}),0)})),t.setAttribute("cm-not-content","true")}),(function(t,r){"horizontal"==r?En(e,t):Hn(e,t)}),e),e.display.scrollbars.addClass&&z(e.display.wrapper,e.display.scrollbars.addClass)}var Un=0

 Line: 585 -  g<0?m=Math.max(0,m+g-50):v=Math.min(e.doc.height,v+g+50),si(e,{top:m,bottom:v})}vi<20&&(null==a.wheelStartX?(a.wheelStartX=l.scrollLeft,a.wheelStartY=l.scrollTop,a.wheelDX=i,a.wheelDY=o,setTimeout((function(){if(null!=a.wheelStartX){var e=l.scrollLeft-a.wheelStartX,t=l.scrollTop-a.wheelStartY,r=t&&a.wheelDY&&t/a.wheelDY||e&&a.wheelDX&&e/a.wheelDX

 Line: 852 -  else{if(t.state.draggingText&&t.doc.sel.contains(r)>-1)return t.state.draggingText(e),void setTimeout((function(){return t.display.input.focus()}),20)

 Line: 942 -  if(!(ge(t,e)||r.activeTouch&&r.input.supportsTouch()))if(r.input.ensurePolled(),r.shift=e.shiftKey,xr(r,e))s||(r.scroller.draggable=!1,setTimeout((function(){return r.scroller.draggable=!0}),100))

 Line: 948 -  try{e.isReadOnly()&&(e.state.suppressEdits=!0),n=t(e,r)!=j}finally{e.state.suppressEdits=!1}return n}))}(t,i,n,o,e)||(1==i?n?function(e,t,r,n){a?setTimeout(I(kn,e),0):e.curOp.focus=D()

 Line: 952 -  e.options.dragDrop&&Me&&!e.isReadOnly()&&"single"==r&&(i=u.contains(t))>-1&&(tt((i=u.ranges[i]).from(),t)<0||t.xRel>0)&&(tt(i.to(),t)>0||t.xRel<0)?function(e,t,r,n){var i=e.display,o=!1,u=ei(e,(function(t){s&&(i.scroller.draggable=!1),e.state.draggingText=!1,he(i.wrapper.ownerDocument,"mouseup",u),he(i.wrapper.ownerDocument,"mousemove",c),he(i.scroller,"dragstart",d),he(i.scroller,"drop",u),o||(be(t),n.addNew||_i(e.doc,r,null,null,n.extend),s||a&&9==l?setTimeout((function(){i.wrapper.ownerDocument.body.focus(),i.input.focus()}),20):i.input.focus())})),c=function(e){o=o||Math.abs(t.clientX-e.clientX)+Math.abs(t.clientY-e.clientY)>=10},d=function(){return o=!0}

 Line: 953 -  s&&(i.scroller.draggable=!0),e.state.draggingText=u,u.copy=!n.moveOnDrag,i.scroller.dragDrop&&i.scroller.dragDrop(),de(i.wrapper.ownerDocument,"mouseup",u),de(i.wrapper.ownerDocument,"mousemove",c),de(i.scroller,"dragstart",d),de(i.scroller,"drop",u),Cn(e),setTimeout((function(){return i.input.focus()}),20)}(e,n,t,o):function(e,t,r,n){var i=e.display,o=e.doc

 Line: 978 -  var l=Nn(i,o);(a.line>=l.to||a.line<l.from)&&setTimeout(ei(e,(function(){p==r&&g(t)})),150)}else{var s=t.clientY<h.top?-20:t.clientY>h.bottom?20:0

 Line: 979 -  s&&setTimeout(ei(e,(function(){p==r&&(i.scroller.scrollTop+=s,g(t))})),50)}}function m(t){e.state.selectingText=!1,p=1/0,t&&(be(t),i.input.focus()),he(i.wrapper.ownerDocument,"mousemove",v),he(i.wrapper.ownerDocument,"mouseup",y),o.history.lastSelOrigin=null}var v=ei(e,(function(e){0!==e.buttons&&Se(e)?g(e):m(e)})),y=ei(e,m)

 Line: 980 -  e.state.selectingText=y,de(i.wrapper.ownerDocument,"mousemove",v),de(i.wrapper.ownerDocument,"mouseup",y)}(e,n,t,o)}(t,n,o,e):Ce(e)==r.scroller&&be(e):2==i?(n&&_i(t.doc,n),setTimeout((function(){return r.input.focus()}),20)):3==i&&(C?t.display.input.onContextMenu(e):Cn(t)))}}function ga(e,t,r){if("char"==r)return new Ci(t,t)

 Line: 995 -  i(e.display.scroller,"dragstart",n.start),i(e.display.scroller,"dragenter",n.enter),i(e.display.scroller,"dragover",n.over),i(e.display.scroller,"dragleave",n.leave),i(e.display.scroller,"drop",n.drop)}}function Ca(e){e.options.lineWrapping?(z(e.display.wrapper,"CodeMirror-wrap"),e.display.sizer.style.minWidth="",e.display.sizerWidth=null):(T(e.display.wrapper,"CodeMirror-wrap"),Ut(e)),sn(e),dn(e),Rr(e),setTimeout((function(){return jn(e)}),100)}function Sa(e,t){var r=this

 Line: 1001 -  for(var u in o.wrapper.CodeMirror=this,ya(this),t.lineWrapping&&(this.display.wrapper.className+=" CodeMirror-wrap"),Gn(this),this.state={keyMaps:[],overlays:[],modeGen:0,overwrite:!1,delayingBlurEvent:!1,focused:!1,suppressEdits:!1,pasteIncoming:-1,cutIncoming:-1,selectingText:!1,draggingText:!1,highlight:new R,keySeq:null,specialChars:null},t.autofocus&&!v&&o.input.focus(),a&&l<11&&setTimeout((function(){return r.display.input.reset(!0)}),20),function(e){var t=e.display

 Line: 1007 -  function i(){t.activeTouch&&(r=setTimeout((function(){return t.activeTouch=null}),1e3),(n=t.activeTouch).end=+new Date)}function o(e,t){if(null==t.left)return!0

 Line: 1022 -  Ho||(de(window,"resize",(function(){null==e&&(e=setTimeout((function(){e=null,Po(Io)}),100))})),de(window,"blur",(function(){return Po(Ln)})),Ho=!0)}(),qn(this),this.curOp.forceUpdate=!0,Hi(this,n),t.autofocus&&!v||this.hasFocus()?setTimeout(I(Sn,this),20):Ln(this),xa)xa.hasOwnProperty(u)&&xa[u](r,t[u],ba)

 Line: 1115 -  H(l),setTimeout((function(){n.display.lineSpace.removeChild(a),s.focus(),s==i&&r.showPrimarySelection()}),50)}}za(i,n.options.spellcheck,n.options.autocorrect,n.options.autocapitalize),de(i,"paste",(function(e){ge(n,e)||Oa(e,n)||l<=11&&setTimeout(ei(n,(function(){return t.updateFromDOM()})),20)})),de(i,"compositionstart",(function(e){t.composing={data:e.data,done:!1}})),de(i,"compositionupdate",(function(e){t.composing||(t.composing={data:e.data,done:!1})})),de(i,"compositionend",(function(e){t.composing&&(e.data!=t.composing.data&&t.readFromDOMSoon(),t.composing.done=!0)})),de(i,"touchstart",(function(){return r.forceCompositionEnd()})),de(i,"input",(function(){t.composing||t.readFromDOMSoon()})),de(i,"copy",o),de(i,"cut",o)},Ea.prototype.prepareSelection=function(){var e=vn(this.cm,!1)

 Line: 1123 -  clearTimeout(this.gracePeriod),this.gracePeriod=setTimeout((function(){e.gracePeriod=!1,e.selectionChanged()&&e.cm.operation((function(){return e.cm.curOp.selectionChanged=!0}))}),20)},Ea.prototype.showMultipleSelections=function(e){N(this.cm.display.cursorDiv,e.cursors),N(this.cm.display.selectionDiv,e.selection)},Ea.prototype.rememberSelection=function(){var e=this.getSelection()

 Line: 1158 -  null==this.readDOMTimeout&&(this.readDOMTimeout=setTimeout((function(){if(e.readDOMTimeout=null,e.composing){if(!e.composing.done)return

 Line: 1192 -  var g=function(){he(window,"mouseup",g),setTimeout(v,20)}

 Line: 1193 -  de(window,"mouseup",g)}else setTimeout(v,50)}function m(){if(null!=i.selectionStart){var e=r.somethingSelected(),o="​"+(e?i.value:"")

 Line: 1195 -  var e=0,o=function(){n.selForContextMenu==r.doc.sel&&0==i.selectionStart&&i.selectionEnd>0&&"​"==t.prevInput?ei(r,ao)(r):e++<10?n.detectingSelectAll=setTimeout(o,500):(n.selForContextMenu=null,n.input.reset())}

 Line: 1196 -  n.detectingSelectAll=setTimeout(o,200)}}},Va.prototype.readOnlyChanged=function(e){e||this.reset(),this.textarea.disabled="nocursor"==e},Va.prototype.setUneditable=function(){},Va.prototype.needsContentAttribute=!1,function(e){var t=e.optionHandlers

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/relations/authors.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 256 -                      const query = {};

 Line: 259 -                          query.id = author.id;

 Line: 261 -                          query.slug = author.slug;

 Line: 263 -                          query.email = author.email;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/single-use-token.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 22 -              setTimeout(async () => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/session.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 12 -          // including for SELECTs meaning that if we call findOne without

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/include-count.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 55 -                  // Call the query builder

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/collision.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 13 -           * The `sync` method is called for any query e.g. update, add, delete, fetch

 Line: 62 -                                      code: 'UPDATE_COLLISION',

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/order.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -              // CASE: repeat order query parameter keys are present

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/eager-load.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 5 -   * Enchances knex query builder with a join to relation configured in

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/pagination.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 26 -   * @type {{parseOptions: Function, query: Function, formatResponse: Function}}

 Line: 48 -       * Apply the necessary parameters to paginate the query

 Line: 156 -           * 1. count query to know how many pages left (important: we don't attach any group/order statements!)

 Line: 157 -           * 2. the actualy fetch query with limit and page property

 Line: 173 -              // Add any where or join clauses which need to be included with the aggregate query

 Line: 175 -              // Clone the base query & set up a promise to get the count of total items in the full set

 Line: 193 -                  // Add any where or join clauses which need to NOT be included with the aggregate query

 Line: 227 -                  // Setup the promise to do a fetch on our collection, running the specified query

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/plugins/filter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 88 -           * Method which makes the necessary query builder calls (through knex) for the filters set on this model

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/base/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 41 -  // Load the Ghost custom-query plugin, which applying a custom query to findPage requests

 Line: 50 -  // Load the Ghost search plugin, which handles applying a search query to findPage requests

 Line: 75 -                  const queryOptions = {

 Line: 76 -                      query: {

 Line: 87 -                      queryOptions.query.where[existing.relatedData.otherKey] = target.id;

 Line: 91 -                      }, _.extend({}, options, queryOptions));

 Line: 194 -       * If the query runs in a txn, `_previousAttributes` will be empty.

 Line: 844 -       * @param {Object} unfilteredOptions Represents options to filter in order to be passed to the Bookshelf query.

 Line: 878 -          // Apply model-specific query behaviour

 Line: 964 -          // Ensure only valid fields/columns are added to query

 Line: 1023 -          // Ensure only valid fields/columns are added to query

 Line: 1036 -       * Based on the `method` option Bookshelf and Ghost can determine if a query is an insert or an update.

 Line: 1275 -              let query = ghostBookshelf.knex(tableNames[modelName]);

 Line: 1278 -                  query.offset(options.offset);

 Line: 1282 -                  query.limit(options.limit);

 Line: 1296 -                  query.select(toSelect);

 Line: 1307 -                  query.where({id: options.id});

 Line: 1310 -              return query.then((objects) => {

 Line: 1370 -                                  return queryRelations.reduce((obj, item) => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/post.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 549 -          // email_recipient_filter is read-only and should only be set using a query param when publishing/scheduling

 Line: 859 -              order = `(SELECT count(*) FROM posts_tags WHERE post_id = posts.id) DESC, ${order}`;

 Line: 864 -              order = `(SELECT count(*) FROM posts_authors WHERE post_id = posts.id) DESC, ${order}`;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/member.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 41 -                  // avoids bookshelf adding a `DISTINCT` to the query

 Line: 42 -                  // we know the result set will already be unique and DISTINCT hurts query performance

 Line: 52 -                  // avoids bookshelf adding a `DISTINCT` to the query

 Line: 53 -                  // we know the result set will already be unique and DISTINCT hurts query performance

 Line: 216 -      searchQuery: function searchQuery(queryBuilder, query) {

 Line: 217 -          queryBuilder.where('members.name', 'like', `%${query}%`);

 Line: 218 -          queryBuilder.orWhere('members.email', 'like', `%${query}%`);

 Line: 233 -          // Inject a computed avatar url. Uses gravatar's default ?d= query param

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/models/user.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 410 -          let query;

 Line: 415 -          // Ensure only valid fields/columns are added to query

 Line: 433 -              query = this.forge(data);

 Line: 435 -              query.query('join', 'roles_users', 'users.id', '=', 'roles_users.user_id');

 Line: 436 -              query.query('join', 'roles', 'roles_users.role_id', '=', 'roles.id');

 Line: 437 -              query.query('where', 'roles.name', '=', lookupRole);

 Line: 439 -              query = this.forge(data);

 Line: 443 -              query.query('whereIn', 'status', activeStates);

 Line: 445 -              query.query('where', {status: status});

 Line: 448 -          return query.fetch(options);

 Line: 1007 -          // We fetch all users and process them in JS as there is no easy way to make this query across all DBs

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/pages.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -          query(frame) {

 Line: 70 -          query(frame) {

 Line: 106 -          query(frame) {

 Line: 149 -          query(frame) {

 Line: 198 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/config.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/users.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 56 -          query(frame) {

 Line: 82 -          query(frame) {

 Line: 115 -          query(frame) {

 Line: 150 -          async query(frame) {

 Line: 175 -          query(frame) {

 Line: 188 -          query(frame) {

 Line: 205 -          query(frame) {

 Line: 226 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/images.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/tags.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

 Line: 83 -          query(frame) {

 Line: 105 -          query(frame) {

 Line: 144 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/notifications.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query(frame) {

 Line: 27 -          query(frame) {

 Line: 57 -          query(frame) {

 Line: 84 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/slack.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/email-preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 22 -          query(frame) {

 Line: 62 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/email.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 17 -          async query(frame) {

 Line: 35 -          query(frame) {

 Line: 54 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/session.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -           * Don't query db for user, when new api http wrapper is in we can

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/labels.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 27 -          query(frame) {

 Line: 50 -          query(frame) {

 Line: 78 -          async query(frame) {

 Line: 108 -          query(frame) {

 Line: 147 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/themes.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 17 -          query() {

 Line: 37 -          async query(frame) {

 Line: 79 -          async query(frame) {

 Line: 146 -          async query(frame) {

 Line: 186 -          query(frame) {

 Line: 209 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/mail.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/products.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 30 -          async query(frame) {

 Line: 53 -          async query(frame) {

 Line: 74 -          async query(frame) {

 Line: 96 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/membersStripeConnect.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/identities.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 30 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/pages-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/authors-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 26 -          query(frame) {

 Line: 51 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/webhooks.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          async query(frame) {

 Line: 89 -          query({data, options}) {

 Line: 141 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/actions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/authentication.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -          query(frame) {

 Line: 56 -          query(frame) {

 Line: 80 -          query() {

 Line: 102 -          query(frame) {

 Line: 128 -          query(frame) {

 Line: 155 -          query(frame) {

 Line: 174 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/memberSigninUrls.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 12 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/roles.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/schedules.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

 Line: 109 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/site.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/posts.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -          query(frame) {

 Line: 69 -          query(frame) {

 Line: 104 -          query(frame) {

 Line: 154 -          async query(frame) {

 Line: 244 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/settings.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -          query(frame) {

 Line: 56 -          query(frame) {

 Line: 111 -          async query(frame) {

 Line: 153 -          async query(frame) {

 Line: 185 -          async query(frame) {

 Line: 233 -          async query(frame) {

 Line: 314 -          async query(frame) {

 Line: 334 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/invites.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 47 -          query(frame) {

 Line: 73 -          query(frame) {

 Line: 108 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/slugs.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/snippets.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 15 -          query(frame) {

 Line: 26 -          query(frame) {

 Line: 44 -          async query(frame) {

 Line: 70 -          query(frame) {

 Line: 98 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/redirects.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 33 -          query() {

 Line: 43 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/settings-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/members.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 21 -          async query() {

 Line: 41 -          async query(frame) {

 Line: 66 -          async query(frame) {

 Line: 109 -          async query(frame) {

 Line: 185 -          async query(frame) {

 Line: 248 -          async query(frame) {

 Line: 284 -          async query(frame) {

 Line: 313 -          async query(frame) {

 Line: 318 -                      message: 'DELETE /members/ must be used with a filter or ?all=true'

 Line: 381 -          async query(frame) {

 Line: 400 -          async query(frame) {

 Line: 428 -          async query() {

 Line: 450 -          async query() {

 Line: 473 -          async query() {

 Line: 495 -          async query() {

 Line: 522 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/db.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 23 -          query(frame) {

 Line: 50 -          async query(frame) {

 Line: 81 -          query(frame) {

 Line: 89 -          query() {

 Line: 100 -                      const queryOpts = {

 Line: 110 -                                  return models.Post.destroy(Object.assign({id: post.id}, queryOpts));

 Line: 116 -                                  return models.Tag.destroy(Object.assign({id: tag.id}, queryOpts));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/oembed.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          query({data}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/tags-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/integrations.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 19 -          query({options}) {

 Line: 43 -          query({data, options}) {

 Line: 77 -          query({data, options}) {

 Line: 134 -          query({data, options}) {

 Line: 157 -          query({options}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/canary/posts-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/shared/http.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 40 -              query: req.query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/shared/pipeline.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 148 -      query(apiUtils, apiConfig, apiImpl, frame) {

 Line: 149 -          debug('stages: query');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/shared/frame.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -           * data:        Body or if the ctrl wants query/url params inside body

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/pages.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -          query(frame) {

 Line: 70 -          query(frame) {

 Line: 105 -          query(frame) {

 Line: 146 -          query(frame) {

 Line: 195 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/config.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/users.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 29 -          query(frame) {

 Line: 55 -          query(frame) {

 Line: 88 -          query(frame) {

 Line: 124 -          query(frame) {

 Line: 157 -          query(frame) {

 Line: 170 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/images.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/tags.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

 Line: 83 -          query(frame) {

 Line: 105 -          query(frame) {

 Line: 144 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/notifications.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query(frame) {

 Line: 27 -          query(frame) {

 Line: 57 -          query(frame) {

 Line: 84 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/slack.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/session.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -           * Don't query db for user, when new api http wrapper is in we can

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/themes.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          query() {

 Line: 30 -          query(frame) {

 Line: 54 -          async query(frame) {

 Line: 95 -          query(frame) {

 Line: 118 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/mail.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/pages-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/authors-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 26 -          query(frame) {

 Line: 51 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/webhooks.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 26 -          query(frame) {

 Line: 88 -          query({data, options}) {

 Line: 140 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/actions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 25 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/authentication.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -          query(frame) {

 Line: 56 -          query(frame) {

 Line: 80 -          query() {

 Line: 102 -          query(frame) {

 Line: 128 -          query(frame) {

 Line: 155 -          query(frame) {

 Line: 174 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/roles.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/schedules.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

 Line: 109 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/site.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/posts.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

 Line: 68 -          query(frame) {

 Line: 102 -          query(frame) {

 Line: 142 -          query(frame) {

 Line: 190 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/settings.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          query(frame) {

 Line: 54 -          query(frame) {

 Line: 119 -          query(frame) {

 Line: 169 -          async query(frame) {

 Line: 189 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/invites.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 47 -          query(frame) {

 Line: 73 -          query(frame) {

 Line: 108 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/slugs.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/redirects.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query() {

 Line: 24 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/settings-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/db.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 23 -          query(frame) {

 Line: 49 -          query(frame) {

 Line: 70 -          query(frame) {

 Line: 78 -          query() {

 Line: 89 -                      const queryOpts = {

 Line: 99 -                                  return models.Post.destroy(Object.assign({id: post.id}, queryOpts));

 Line: 105 -                                  return models.Tag.destroy(Object.assign({id: tag.id}, queryOpts));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/oembed.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 173 -          query({data: {url}}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/tags-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/integrations.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 19 -          query({options}) {

 Line: 43 -          query({data, options}) {

 Line: 76 -          query({data, options}) {

 Line: 111 -          query({data, options}) {

 Line: 134 -          query({options}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v2/posts-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/pages.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -          query(frame) {

 Line: 70 -          query(frame) {

 Line: 106 -          query(frame) {

 Line: 149 -          query(frame) {

 Line: 198 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/config.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/users.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 56 -          query(frame) {

 Line: 82 -          query(frame) {

 Line: 115 -          query(frame) {

 Line: 150 -          async query(frame) {

 Line: 175 -          query(frame) {

 Line: 188 -          query(frame) {

 Line: 205 -          query(frame) {

 Line: 226 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/images.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/tags.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

 Line: 83 -          query(frame) {

 Line: 105 -          query(frame) {

 Line: 144 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/notifications.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query(frame) {

 Line: 27 -          query(frame) {

 Line: 57 -          query(frame) {

 Line: 84 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/slack.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/email-preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 22 -          query(frame) {

 Line: 62 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/email.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 21 -          query(frame) {

 Line: 40 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/session.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -           * Don't query db for user, when new api http wrapper is in we can

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/labels.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 27 -          query(frame) {

 Line: 50 -          query(frame) {

 Line: 78 -          async query(frame) {

 Line: 108 -          query(frame) {

 Line: 147 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/themes.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 10 -          query() {

 Line: 30 -          query(frame) {

 Line: 54 -          async query(frame) {

 Line: 93 -          query(frame) {

 Line: 116 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/mail.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 37 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/membersStripeConnect.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/identities.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 30 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/pages-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/authors-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 26 -          query(frame) {

 Line: 51 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/webhooks.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          async query(frame) {

 Line: 93 -          query({data, options}) {

 Line: 145 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/actions.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/authentication.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -          query(frame) {

 Line: 56 -          query(frame) {

 Line: 80 -          query() {

 Line: 102 -          query(frame) {

 Line: 128 -          query(frame) {

 Line: 155 -          query(frame) {

 Line: 174 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/memberSigninUrls.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 12 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/roles.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/schedules.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

 Line: 109 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/site.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/posts.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 35 -          query(frame) {

 Line: 69 -          query(frame) {

 Line: 104 -          query(frame) {

 Line: 154 -          async query(frame) {

 Line: 244 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/settings.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 18 -          query(frame) {

 Line: 56 -          query(frame) {

 Line: 111 -          async query(frame) {

 Line: 153 -          async query(frame) {

 Line: 185 -          async query(frame) {

 Line: 233 -          async query(frame) {

 Line: 314 -          async query(frame) {

 Line: 334 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/invites.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 47 -          query(frame) {

 Line: 73 -          query(frame) {

 Line: 108 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/slugs.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 34 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/snippets.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 15 -          query(frame) {

 Line: 26 -          query(frame) {

 Line: 44 -          async query(frame) {

 Line: 70 -          query(frame) {

 Line: 98 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/redirects.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 33 -          query() {

 Line: 43 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/settings-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -          query() {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/members.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 20 -          async query() {

 Line: 40 -          async query(frame) {

 Line: 65 -          async query(frame) {

 Line: 108 -          async query(frame) {

 Line: 184 -          async query(frame) {

 Line: 247 -          async query(frame) {

 Line: 283 -          async query(frame) {

 Line: 323 -          async query(frame) {

 Line: 342 -          async query(frame) {

 Line: 380 -          async query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/db.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 23 -          query(frame) {

 Line: 50 -          async query(frame) {

 Line: 81 -          query(frame) {

 Line: 89 -          query() {

 Line: 100 -                      const queryOpts = {

 Line: 110 -                                  return models.Post.destroy(Object.assign({id: post.id}, queryOpts));

 Line: 116 -                                  return models.Tag.destroy(Object.assign({id: tag.id}, queryOpts));

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/oembed.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          query({data}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/tags-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 28 -          query(frame) {

 Line: 53 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/integrations.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 19 -          query({options}) {

 Line: 43 -          query({data, options}) {

 Line: 77 -          query({data, options}) {

 Line: 134 -          query({data, options}) {

 Line: 157 -          query({options}) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/api/v3/posts-public.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 31 -          query(frame) {

 Line: 60 -          query(frame) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/adapters/scheduling/SchedulingDefault.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 104 -          timeout = setTimeout(function () {

 Line: 203 -   *    - setTimeout is limited to 24,3 days

 Line: 205 -   * The execution of "setTimeout" is never guaranteed, therefor we've optimised the execution by using "setImmediate".

 Line: 206 -   * The executor will put each job to sleep using `setTimeout` with a threshold of 70ms. And "setImmediate" is then

 Line: 220 -          timeout = setTimeout(function () {

 Line: 303 -              setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/ghost-server.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 139 -              setTimeout(() => {

 Line: 144 -              setTimeout(() => {

 Line: 225 -          const connectionInterval = setInterval(() => this.httpServer.getConnections(

 Line: 236 -          setInterval(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/canary/admin/middleware.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          posts: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 17 -          pages: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 19 -          webhooks: ['POST', 'PUT', 'DELETE'],

 Line: 22 -          tags: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 23 -          labels: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 26 -          members: ['GET', 'PUT', 'DELETE', 'POST'],

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/v2/admin/middleware.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          posts: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 17 -          pages: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 19 -          webhooks: ['POST', 'PUT', 'DELETE'],

 Line: 20 -          tags: ['GET', 'PUT', 'DELETE', 'POST'],

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/testmode/jobs/graceful-job.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 13 -  const setTimeoutPromise = util.promisify(setTimeout);

 Line: 27 -      await setTimeoutPromise(5 * 1000);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/testmode/jobs/say-hello.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 8 -          setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/testmode/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 18 -          setTimeout(() => {

 Line: 34 -                      setTimeout(() => {

 Line: 67 -                          setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/api/v3/admin/middleware.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          posts: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 17 -          pages: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 19 -          webhooks: ['POST', 'PUT', 'DELETE'],

 Line: 22 -          tags: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 23 -          labels: ['GET', 'PUT', 'DELETE', 'POST'],

 Line: 26 -          members: ['GET', 'PUT', 'DELETE', 'POST'],

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/shared/middlewares/custom-redirects.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 2 -  const querystring = require('querystring');

 Line: 55 -                  const toURLParams = querystring.parse(toURL.query);

 Line: 57 -                  const currentURLParams = querystring.parse(currentURL.query);

 Line: 59 -                  const search = querystring.stringify(params);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/web/shared/middlewares/url-redirects.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 7 -  _private.redirectUrl = ({redirectTo, query, pathname}) => {

 Line: 22 -          query

 Line: 32 -  _private.getAdminRedirectUrl = ({requestedHost, requestedUrl, queryParameters, secure}) => {

 Line: 51 -              query: queryParameters

 Line: 62 -              query: queryParameters

 Line: 72 -  _private.getFrontendRedirectUrl = ({requestedHost, requestedUrl, queryParameters, secure}) => {

 Line: 84 -              query: queryParameters

 Line: 93 -          queryParameters: req.query,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.3/04-attach-members-to-product.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 36 -          // SQLite max variables is 999, we have 3 per insert (id, member_id, product_id) so most inserts in a query is 999/3 = 333

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/14-remove-orphaned-stripe-records.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 11 -          DELETE FROM

 Line: 13 -          WHERE

 Line: 16 -              SELECT

 Line: 18 -              FROM members

 Line: 24 -          DELETE FROM

 Line: 26 -          WHERE

 Line: 29 -              SELECT

 Line: 31 -              FROM members_stripe_customers

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/18-transform-urls-absolute-to-transform-ready.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          // pushing all queries into the query builder buffer in parallel

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/21-sanitize-email-batches-provider-id.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6 -      await knex.raw('UPDATE email_batches SET provider_id = REPLACE(REPLACE(provider_id, "<", ""), ">", "")');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/03-populate-status-column-for-members.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 51 -          // and so we're left with 998 for our WHERE IN clause values

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/23-regenerate-posts-html.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 16 -          // pushing all queries into the query builder buffer in parallel

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.0/01-update-mobiledoc.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 14 -          // pushing all queries into the query builder buffer in parallel

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/3.29/05-add-member-constraints.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 12 -          // member_labels already has a foreign key constraint, we want to add ON DELETE CASCADE

 Line: 15 -          const [dbConstraints] = await knex.raw('SELECT * FROM information_schema.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_SCHEMA=?', [dbName]);

 Line: 18 -          if (memberIdConstraint && memberIdConstraint.DELETE_RULE === 'CASCADE') {

 Line: 19 -              logging.warn('Skipping ON DELETE CASCADE for "members_labels_member_id_foreign" constraint - already set');

 Line: 21 -              logging.info('Adding ON DELETE CASCADE to "members_labels_member_id_foreign" constraint');

 Line: 27 -              // then re-add with ON DELETE CASCADE

 Line: 34 -          if (labelIdConstraint && labelIdConstraint.DELETE_RULE === 'CASCADE') {

 Line: 35 -              logging.warn('Skipping ON DELETE CASCADE for "members_labels_label_id_foreign" constraint - already set');

 Line: 37 -              logging.info('Adding ON DELETE CASCADE to "members_labels_label_id_foreign" constraint');

 Line: 43 -              // then re-add with ON DELETE CASCADE

 Line: 49 -          // stripe tables have not had any indexes/constraints in the past, add them now with ON DELETE CASCADE

 Line: 51 -          const [membersStripeCustomersIndexes] = await knex.raw('SHOW INDEXES FROM members_stripe_customers');

 Line: 119 -          const [membersStripeCustomersIndexes] = await knex.raw('SHOW INDEXES FROM members_stripe_customers');

 Line: 141 -          const [dbConstraints] = await knex.raw('SELECT * FROM information_schema.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_SCHEMA=?', [dbName]);

 Line: 144 -          if (memberIdConstraint && memberIdConstraint.DELETE_RULE !== 'CASCADE') {

 Line: 145 -              logging.warn('Skipping removal of ON DELETE CASCADE for "members_labels_member_id_foreign" constraint - not set');

 Line: 147 -              logging.info('Removing ON DELETE CASCADE from "members_labels_member_id_foreign" constraint');

 Line: 153 -              // then re-add without ON DELETE CASCADE

 Line: 160 -          if (labelIdConstraint && labelIdConstraint.DELETE_RULE !== 'CASCADE') {

 Line: 161 -              logging.warn('Skipping removal of ON DELETE CASCADE for "members_labels_label_id_foreign" constraint - not set');

 Line: 163 -              logging.info('Removing ON DELETE CASCADE from "members_labels_label_id_foreign" constraint');

 Line: 169 -              // then re-add without ON DELETE CASCADE

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/2.0/5-remove-demo-post.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 52 -              // @NOTE: raw knex query, because of https://github.com/TryGhost/Ghost/issues/9983

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/3.40/03-populate-members-email-counts.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 8 -                  email_count: knex.raw('(SELECT COUNT(id) FROM email_recipients WHERE email_recipients.member_id = members.id)'),

 Line: 9 -                  email_opened_count: knex.raw('(SELECT COUNT(id) FROM email_recipients WHERE email_recipients.member_id = members.id AND email_recipients.opened_at IS NOT NULL)')

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/2.27/3-add-subdirectory-to-relative-canonical-urls.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 32 -      // perform a specific query for the type of canonical URLs we're looking for

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/4.2/01-fix-incorrect-mrr-delta-events.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 6 -          await knex.raw('UPDATE members_paid_subscription_events SET mrr_delta = ROUND(mrr_delta / 2) WHERE from_plan = to_plan');

 Line: 10 -          await knex.raw('UPDATE members_paid_subscription_events SET mrr_delta = ROUND(mrr_delta * 2) WHERE from_plan = to_plan');

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/migrations/versions/3.38/04-populate-recipient-filter-column.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 22 -          // and so we're left with 998 for our WHERE IN clause values

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/exporter/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 106 -          const query = (options.transacting || db.knex)(tableName);

 Line: 108 -          return query.select();

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/schema/schema.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 41 -           * If we keep it, then only, because you can easier query post.author_id than posts_authors[*].sort_order.

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/schema/fixtures/utils.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 105 -          // CASE: if id is specified, only query by id

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/schema/clients/mysql.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 24 -      return doRawAndFlatten('SHOW COLUMNS FROM ' + table, transaction, function (response) {

 Line: 34 -      return (transaction || db.knex).raw('SHOW FIELDS FROM posts where Field ="html" OR Field = "markdown"').then(function (response) {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/data/importer/importers/data/base.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 345 -           *       at the same time, but memory can only be released if the query finished.

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/auth/api-key/admin.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 27 -   * Extract JWT token from admin API URL query

 Line: 33 -      return query.token;

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/members/stats/index.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 21 -          const result = await this._db.knex.raw('SELECT COUNT(id) AS total FROM members');

 Line: 37 -          const result = await this._db.knex.raw('SELECT COUNT(id) AS total FROM members WHERE created_at >= ?', [startOfRange]);

 Line: 48 -          const result = await this._db.knex.raw('SELECT count(id) AS total FROM members WHERE created_at >= ?', [startOfToday]);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/email-analytics/jobs/fetch-all.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 12 -          setTimeout(() => {

 Line: 55 -          setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/email-analytics/jobs/fetch-latest.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 13 -          setTimeout(() => {

 Line: 92 -          setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/email-analytics/lib/queries.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 29 -              delivered_count: db.knex.raw(`(SELECT COUNT(id) FROM email_recipients WHERE email_id = ? AND delivered_at IS NOT NULL)`, [emailId]),

 Line: 30 -              opened_count: db.knex.raw(`(SELECT COUNT(id) FROM email_recipients WHERE email_id = ? AND opened_at IS NOT NULL)`, [emailId]),

 Line: 31 -              failed_count: db.knex.raw(`(SELECT COUNT(id) FROM email_recipients WHERE email_id = ? AND failed_at IS NOT NULL)`, [emailId])

 Line: 44 -              email_count: db.knex.raw('(SELECT COUNT(id) FROM email_recipients WHERE member_id = ?)', [memberId]),

 Line: 45 -              email_opened_count: db.knex.raw('(SELECT COUNT(id) FROM email_recipients WHERE member_id = ? AND opened_at IS NOT NULL)', [memberId])

 Line: 50 -                  ROUND(((SELECT COUNT(id) FROM email_recipients WHERE member_id = ? AND opened_at IS NOT NULL) * 1.0 / ? * 100), 0)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/email-analytics/lib/event-processor.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 9 -          // avoid having to query email_batch by provider_id for every event

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/server/services/mega/mega.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 183 -   * Takes a request/response pair and reads the `unsubscribe` query parameter,

 Line: 208 -          uuid: query.uuid

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/apps/amp/lib/router.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 69 -      helpers.entryLookup(urlWithoutSubdirectoryWithoutAmp, {permalinks, query: {controller: 'postsPublic', resource: 'posts'}}, res.locals)

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/helpers/get.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 70 -              // Do the query, which always returns an array of matches

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/settings/validate.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 38 -              query: {},

 Line: 92 -              query: {},

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/themes/preview.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 1 -  // The preview header contains a query string with the custom preview data

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/url/Resources.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 73 -              // NOTE: We are querying knex directly, because the Bookshelf ORM overhead is too slow.

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/url/Queue.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 158 -                  this.toNotify[action].timeout = setTimeout(() => {

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/StaticPagesRouter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 66 -              query: this.RESOURCE_CONFIG,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/controllers/collection.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 63 -               * it can happen that your database query will load the same posts, but we cannot show a post on two

 Line: 67 -               * People should always invert their filters to ensure that the database query loads unique posts per collection.

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/controllers/static.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 7 -      query = _.cloneDeep(query);

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/PreviewRouter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 41 -              query: this.RESOURCE_CONFIG,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/helpers/fetch-data.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 7 -  // The default settings for a default post query

 Line: 9 -  const queryDefaults = {

 Line: 36 -   * @description Process query request.

 Line: 40 -   * Converts the query config to a promise for the result

 Line: 42 -   * @param {Object} query

 Line: 49 -      query = _.cloneDeep(query);

 Line: 51 -      _.defaultsDeep(query, queryDefaults);

 Line: 55 -          query.options[name] = _.isString(option) ? option.replace(/%s/g, slugParam) : option;

 Line: 58 -      query.options.context = {member: locals.member};

 Line: 66 -   * Calls out to get posts per page, builds the final posts query & builds any additional queries

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/frontend/services/routing/CollectionRouter.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible SQL injection</Title>
 <Description> notification possible SQL injection</Description>
 <Level> High</Level>
 <Reference> https://www.owasp.org/index.php/Testing_for_Stack_Overflow </Reference>
 <Match> query|YQL|WHERE|FROM|SELECT|UPDATE|DELETE|INSERT|UNION|getResults</Match>
 <Result> Line: 106 -              query: this.RESOURCE_CONFIG,

</Result>
</report_mosca>

<report_mosca>
 <Path>/src/core/boot.js</Path>
 <Module>/app/Mosca/eggs/javascript_common_fail.egg</Module>
 <Title> Possible code injection</Title>
 <Description> Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application.</Description>
 <Level> High</Level>
 <Reference> https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=2130132 </Reference>
 <Match> eval\s?\(|setTimeout|setInterval</Match>
 <Result> Line: 322 -              setTimeout(() => {

</Result>
</report_mosca>

