/src/src/interpolation/Interpolator.js-21-    this.interpolateString = function(context, value) {
/src/src/interpolation/Interpolator.js:22:        return parser.assemble(context, parser.parse(value))
/src/src/interpolation/Interpolator.js-23-    },
##############################################
/src/test/interpolator.test.js-9-        var mark = "abc[123]def[/123]hij"
/src/test/interpolator.test.js:10:        var parsed = interpolator.parse(mark) 
/src/test/interpolator.test.js-11-        assert.equal(parsed[0](),"abc")
##############################################
/src/test/interpolator.test.js-16-        var mark = "[123]def[/123]"
/src/test/interpolator.test.js:17:        var parsed = interpolator.parse(mark) 
/src/test/interpolator.test.js-18-        assert.deepEqual(parsed[0].source,{tag:"123", content:"def"})
##############################################
/src/test/interpolator.test.js-84-        var mark = "[hbs]42[/hbs]"
/src/test/interpolator.test.js:85:        var parsed = interpolator.parse(mark) 
/src/test/interpolator.test.js-86-        assert.equal(parsed[0]({a:1}), "42")
##############################################
/src/test/interpolator.test.js-109-        var mark = "[eval]a[f][/eval]"
/src/test/interpolator.test.js:110:        var parsed = interpolator.parse(mark) 
/src/test/interpolator.test.js-111-        assert.equal(parsed[0]({f : 1, a:['x','y','z']}),'y')
