{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 12,
          "line": 1
        },
        "extra": {
          "line": "MIT License",
          "message": "Syntax error"
        },
        "path": "/src/LICENSE",
        "start": {
          "col": 5,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 1,
          "line": 1
        },
        "extra": {
          "line": "/dist",
          "message": "Lexical error: WIERD end of file in regexp"
        },
        "path": "/src/.eslintignore",
        "start": {
          "col": 1,
          "line": 1
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 13,
          "line": 2
        },
        "extra": {
          "line": "  \"extends\": \"airbnb\",",
          "message": "Syntax error"
        },
        "path": "/src/.eslintrc",
        "start": {
          "col": 12,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 13,
          "line": 2
        },
        "extra": {
          "line": "  \"presets\": [",
          "message": "Syntax error"
        },
        "path": "/src/.babelrc",
        "start": {
          "col": 12,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 3,
          "line": 3
        },
        "extra": {
          "line": "[*]",
          "message": "Syntax error"
        },
        "path": "/src/.editorconfig",
        "start": {
          "col": 2,
          "line": 3
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "AstGenericError",
        "end": {
          "col": 156,
          "line": 29
        },
        "extra": {
          "line": "    (_typeof(exports)) === 'object' && 'object' !== 'undefined' ? module.exports = factory() : typeof undefined === 'function' && undefined.amd ? undefined(factory) : global.moment = factory();",
          "message": "AST generic error: Weird: literal in call position"
        },
        "path": "/src/dist/vue-moment.js",
        "start": {
          "col": 147,
          "line": 29
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 9,
          "line": 2
        },
        "extra": {
          "line": "  \"env\": {",
          "message": "Syntax error"
        },
        "path": "/src/tests/.eslintrc",
        "start": {
          "col": 8,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {},
  "templates": {}
}
