/src/lib/structures.js-96-var readEndRecord = function (buffer) {
/src/lib/structures.js:97:    var data = binary.parse(buffer)
/src/lib/structures.js-98-    .word32lu('signature')
##############################################
/src/lib/structures.js-123-    while (index < buffer.length) {
/src/lib/structures.js:124:        current = binary.parse(buffer.slice(index, index + 46))
/src/lib/structures.js-125-        .word32lu('signature')
##############################################
/src/lib/structures.js-185-
/src/lib/structures.js:186:    var fileEntry = binary.parse(buffer.slice(index, 30))
/src/lib/structures.js-187-    .word32lu('signature')
##############################################
/src/lib/extractors.js-63-            var input = new stream.Readable();
/src/lib/extractors.js:64:            input.wrap(fs.createReadStream(zip.filename, {start: file._offset, end: file._offset + file.uncompressedSize - 1}));
/src/lib/extractors.js-65-            writer = pipePromise.bind(null, input, destination, { mode: file.mode });
##############################################
/src/lib/extractors.js-91-                var input = new stream.Readable();
/src/lib/extractors.js:92:                input.wrap(fs.createReadStream(zip.filename, {start: file._offset}));
/src/lib/extractors.js-93-                var inflater = input.pipe(zlib.createInflateRaw({highWaterMark: 32 * 1024}));
##############################################
/src/lib/extractors.js-130-                    var input = new stream.Readable();
/src/lib/extractors.js:131:                    input.wrap(fs.createReadStream(path.resolve(parent, linkTo)));
/src/lib/extractors.js-132-                    return pipePromise(input, destination);
