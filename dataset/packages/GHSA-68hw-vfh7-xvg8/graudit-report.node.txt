/src/stores/cookie-store.js-25-    try {
/src/stores/cookie-store.js:26:      return JSON.parse(value);
/src/stores/cookie-store.js-27-    } catch (err) {
##############################################
/src/middleware/admin.js-38-    let parts = data.split('.');
/src/middleware/admin.js:39:    let payload = JSON.parse(new Buffer(parts[1], 'base64').toString());
/src/middleware/admin.js-40-    if (payload.action === 'LOGOUT') {
##############################################
/src/middleware/admin.js-71-    let parts = data.split('.');
/src/middleware/admin.js:72:    let payload = JSON.parse(new Buffer(parts[1], 'base64').toString());
/src/middleware/admin.js-73-    if (payload.action === 'PUSH_NOT_BEFORE') {
##############################################
/src/middleware/auth-utils/config.js-52-  const json = fs.readFileSync(configPath);
/src/middleware/auth-utils/config.js:53:  const config = JSON.parse(json.toString());
/src/middleware/auth-utils/config.js-54-  this.configure(config);
##############################################
/src/middleware/auth-utils/grant-manager.js-180-      if (authzRequest.response_mode === 'decision' || authzRequest.response_mode === 'permissions') {
/src/middleware/auth-utils/grant-manager.js:181:        callback(JSON.parse(json));
/src/middleware/auth-utils/grant-manager.js-182-      } else {
##############################################
/src/middleware/auth-utils/grant-manager.js-279-  const url = this.realmUrl + '/protocol/openid-connect/userinfo';
/src/middleware/auth-utils/grant-manager.js:280:  const options = URL.parse(url);
/src/middleware/auth-utils/grant-manager.js-281-  options.method = 'GET';
##############################################
/src/middleware/auth-utils/grant-manager.js-299-      response.on('end', () => {
/src/middleware/auth-utils/grant-manager.js:300:        const data = JSON.parse(json);
/src/middleware/auth-utils/grant-manager.js-301-        if (data.error) reject(data);
##############################################
/src/middleware/auth-utils/grant-manager.js-333-  let grantData = rawData;
/src/middleware/auth-utils/grant-manager.js:334:  if (typeof rawData !== 'object') grantData = JSON.parse(grantData);
/src/middleware/auth-utils/grant-manager.js-335-
##############################################
/src/middleware/auth-utils/grant-manager.js-484-const validationHandler = (manager, token) => (resolve, reject, json) => {
/src/middleware/auth-utils/grant-manager.js:485:  const data = JSON.parse(json);
/src/middleware/auth-utils/grant-manager.js-486-  if (!data.active) resolve(false);
##############################################
/src/middleware/auth-utils/grant-manager.js-491-  const realPath = path || '/protocol/openid-connect/token';
/src/middleware/auth-utils/grant-manager.js:492:  const opts = URL.parse(manager.realmUrl + realPath);
/src/middleware/auth-utils/grant-manager.js-493-  opts.headers = {
##############################################
/src/middleware/auth-utils/token.js-36-      const parts = token.split('.');
/src/middleware/auth-utils/token.js:37:      this.header = JSON.parse(new Buffer(parts[0], 'base64').toString());
/src/middleware/auth-utils/token.js:38:      this.content = JSON.parse(new Buffer(parts[1], 'base64').toString());
/src/middleware/auth-utils/token.js-39-      this.signature = new Buffer(parts[2], 'base64');
##############################################
/src/middleware/auth-utils/rotation.js-37-  const url = this.realmUrl + '/protocol/openid-connect/certs';
/src/middleware/auth-utils/rotation.js:38:  const options = URL.parse(url);
/src/middleware/auth-utils/rotation.js-39-  options.method = 'GET';
##############################################
/src/middleware/auth-utils/rotation.js-47-      response.on('end', () => {
/src/middleware/auth-utils/rotation.js:48:        const data = JSON.parse(json);
/src/middleware/auth-utils/rotation.js-49-        if (data.error) reject(data);
##############################################
/src/index.js-303-  if (typeof (grantData) === 'string') {
/src/index.js:304:    grantData = JSON.parse(grantData);
/src/index.js-305-  }
##############################################
/src/test/keycloak-connect-rest-spec.js-45-  .then(x => {
/src/test/keycloak-connect-rest-spec.js:46:    t.equal(JSON.parse(x.body).message, 'public');
/src/test/keycloak-connect-rest-spec.js-47-  });
##############################################
/src/test/keycloak-connect-rest-spec.js-68-    .then(x => {
/src/test/keycloak-connect-rest-spec.js:69:      t.equal(JSON.parse(x.body).message, 'admin');
/src/test/keycloak-connect-rest-spec.js-70-    });
##############################################
/src/test/keycloak-connect-rest-spec.js-134-        .then(x => {
/src/test/keycloak-connect-rest-spec.js:135:          t.equal(JSON.parse(x.body).message, 'admin');
/src/test/keycloak-connect-rest-spec.js-136-
##############################################
/src/test/keycloak-connect-rest-spec.js-173-        .then(x => {
/src/test/keycloak-connect-rest-spec.js:174:          t.equal(JSON.parse(x.body).message, 'admin');
/src/test/keycloak-connect-rest-spec.js-175-
##############################################
/src/test/fixtures/node-console/index.js-116-    app.get('/login', keycloak.protect(), function (req, res) {
/src/test/fixtures/node-console/index.js:117:      output(res, JSON.stringify(JSON.parse(req.session['keycloak-token']), null, 4), 'Auth Success');
/src/test/fixtures/node-console/index.js-118-    });
##############################################
/src/test/keycloak-connect-rest-enforcer-spec.js-48-    .then(x => {
/src/test/keycloak-connect-rest-enforcer-spec.js:49:      t.equal(JSON.parse(x.body).message, 'resource:view');
/src/test/keycloak-connect-rest-enforcer-spec.js-50-    });
##############################################
/src/test/keycloak-connect-rest-enforcer-spec.js-64-    .then(x => {
/src/test/keycloak-connect-rest-enforcer-spec.js:65:      t.equal(JSON.parse(x.body).message, 'resource:update');
/src/test/keycloak-connect-rest-enforcer-spec.js-66-    });
##############################################
/src/test/keycloak-connect-rest-enforcer-spec.js-106-    .then(x => {
/src/test/keycloak-connect-rest-enforcer-spec.js:107:      t.equal(JSON.parse(x.body).message, 'mozilla');
/src/test/keycloak-connect-rest-enforcer-spec.js-108-    });
##############################################
/src/test/keycloak-connect-rest-enforcer-spec.js-135-    .then(x => {
/src/test/keycloak-connect-rest-enforcer-spec.js:136:      t.equal(JSON.parse(x.body).message, 'always grant, no permissions defined');
/src/test/keycloak-connect-rest-enforcer-spec.js-137-    });
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-63-    .then(x => {
/src/test/keycloak-connect-rest-mixed-client-spec.js:64:      t.equal(JSON.parse(x.body).message, 'admin');
/src/test/keycloak-connect-rest-mixed-client-spec.js-65-    });
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-86-  return roi.post({ endpoint }, auth)
/src/test/keycloak-connect-rest-mixed-client-spec.js:87:  .then(res => JSON.parse(res.body))
/src/test/keycloak-connect-rest-mixed-client-spec.js-88-  .then(body => {
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-101-    return roi.get({ endpoint, headers: { cookie } })
/src/test/keycloak-connect-rest-mixed-client-spec.js:102:    .then(res => JSON.parse(res.body))
/src/test/keycloak-connect-rest-mixed-client-spec.js-103-    .then(body => {
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-119-      cookie: getSessionCookie(res),
/src/test/keycloak-connect-rest-mixed-client-spec.js:120:      grant: JSON.parse(res.body)
/src/test/keycloak-connect-rest-mixed-client-spec.js-121-    };
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-134-    return roi.get(opt)
/src/test/keycloak-connect-rest-mixed-client-spec.js:135:    .then(res => JSON.parse(res.body))
/src/test/keycloak-connect-rest-mixed-client-spec.js-136-    .then(body => {
##############################################
/src/test/keycloak-connect-rest-mixed-client-spec.js-146-      return roi.get(opt)
/src/test/keycloak-connect-rest-mixed-client-spec.js:147:      .then(res => JSON.parse(res.body))
/src/test/keycloak-connect-rest-mixed-client-spec.js-148-      .then(body => {
##############################################
/src/test/utils/helper.js-33-    .replace(/{{realm}}/g, realmName);
/src/test/utils/helper.js:34:  return JSON.parse(content);
/src/test/utils/helper.js-35-}
##############################################
/src/test/utils/helper.js-41-    .replace(/{{port}}/g, port);
/src/test/utils/helper.js:42:  var json = JSON.parse(content);
/src/test/utils/helper.js-43-  return json;
##############################################
/src/example/index.js-79-  res.render('index', {
/src/example/index.js:80:    result: JSON.stringify(JSON.parse(req.session['keycloak-token']), null, 4),
/src/example/index.js-81-    event: '1. Authentication\n2. Login'
##############################################
/src/example/index.js-88-  res.render('index', {
/src/example/index.js:89:    result: JSON.stringify(JSON.parse(req.session['keycloak-token']), null, 4),
/src/example/index.js-90-    event: '1. Access granted to Default Resource\n'
