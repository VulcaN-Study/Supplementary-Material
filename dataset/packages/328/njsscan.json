{
  "errors": [
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 9,
          "line": 2
        },
        "extra": {
          "line": "\t\"boss\": true,",
          "message": "Syntax error"
        },
        "path": "/src/src/.jshintrc",
        "start": {
          "col": 8,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "LexicalError",
        "end": {
          "col": 80,
          "line": 38
        },
        "extra": {
          "line": "}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {",
          "message": "Lexical error: look_close '}'"
        },
        "path": "/src/src/intro.js",
        "start": {
          "col": 79,
          "line": 38
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    },
    {
      "data": {
        "check_id": "ParseError",
        "end": {
          "col": 2,
          "line": 2
        },
        "extra": {
          "line": "}));",
          "message": "Syntax error"
        },
        "path": "/src/src/outro.js",
        "start": {
          "col": 1,
          "line": 2
        }
      },
      "message": "SemgrepCoreRuntimeErrors"
    }
  ],
  "nodejs": {
    "node_insecure_random_generator": {
      "files": [
        {
          "file_path": "/src/external/sizzle/dist/sizzle.js",
          "match_lines": [
            1861,
            1861
          ],
          "match_position": [
            61,
            72
          ],
          "match_string": "\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),"
        },
        {
          "file_path": "/src/src/core.js",
          "match_lines": [
            194,
            194
          ],
          "match_position": [
            34,
            45
          ],
          "match_string": "\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),"
        }
      ],
      "metadata": {
        "cwe": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
        "description": "crypto.pseudoRandomBytes()/Math.random() is a cryptographically weak random number generator.",
        "owasp": "A9: Using Components with Known Vulnerabilities",
        "severity": "WARNING"
      }
    },
    "regex_dos": {
      "files": [
        {
          "file_path": "/src/external/sizzle/dist/sizzle.js",
          "match_lines": [
            273,
            273
          ],
          "match_position": [
            21,
            45
          ],
          "match_string": "\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {"
        },
        {
          "file_path": "/src/external/sizzle/dist/sizzle.js",
          "match_lines": [
            302,
            302
          ],
          "match_position": [
            19,
            42
          ],
          "match_string": "\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||"
        },
        {
          "file_path": "/src/external/sizzle/dist/sizzle.js",
          "match_lines": [
            2028,
            2028
          ],
          "match_position": [
            7,
            47
          ],
          "match_string": "\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;"
        },
        {
          "file_path": "/src/external/sizzle/dist/sizzle.js",
          "match_lines": [
            2064,
            2064
          ],
          "match_position": [
            15,
            38
          ],
          "match_string": "\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context"
        },
        {
          "file_path": "/src/src/ajax.js",
          "match_lines": [
            393,
            581
          ],
          "match_position": [
            3,
            42
          ],
          "match_string": "\t\tvar transport,\n\n\n\n\t\t\t// URL without anti-cache param\n\n\t\t\tcacheURL,\n\n\n\n\t\t\t// Response headers\n\n\t\t\tresponseHeadersString,\n\n\t\t\tresponseHeaders,\n\n\n\n\t\t\t// timeout handle\n\n\t\t\ttimeoutTimer,\n\n\n\n\t\t\t// Url cleanup var\n\n\t\t\turlAnchor,\n\n\n\n\t\t\t// To know if global events are to be dispatched\n\n\t\t\tfireGlobals,\n\n\n\n\t\t\t// Loop variable\n\n\t\t\ti,\n\n\n\n\t\t\t// Create the final options object\n\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\n\n\t\t\t// Callbacks context\n\n\t\t\tcallbackContext = s.context || s,\n\n\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\n\t\t\tglobalEventContext = s.context &&\n\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\n\t\t\t\t\tjQuery( callbackContext ) :\n\n\t\t\t\t\tjQuery.event,\n\n\n\n\t\t\t// Deferreds\n\n\t\t\tdeferred = jQuery.Deferred(),\n\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\n\n\t\t\t// Status-dependent callbacks\n\n\t\t\tstatusCode = s.statusCode || {},\n\n\n\n\t\t\t// Headers (they are sent all at once)\n\n\t\t\trequestHeaders = {},\n\n\t\t\trequestHeadersNames = {},\n\n\n\n\t\t\t// The jqXHR state\n\n\t\t\tstate = 0,\n\n\n\n\t\t\t// Default abort message\n\n\t\t\tstrAbort = \"canceled\",\n\n\n\n\t\t\t// Fake xhr\n\n\t\t\tjqXHR = {\n\n\t\t\t\treadyState: 0,\n\n\n\n\t\t\t\t// Builds headers hashtable if needed\n\n\t\t\t\tgetResponseHeader: function( key ) {\n\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif ( state === 2 ) {\n\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\n\t\t\t\t\t\t\tresponseHeaders = {};\n\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn match == null ? null : match;\n\n\t\t\t\t},\n\n\n\n\t\t\t\t// Raw string\n\n\t\t\t\tgetAllResponseHeaders: function() {\n\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\n\t\t\t\t},\n\n\n\n\t\t\t\t// Caches the header\n\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\n\t\t\t\t\tvar lname = name.toLowerCase();\n\n\t\t\t\t\tif ( !state ) {\n\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t},\n\n\n\n\t\t\t\t// Overrides response content-type header\n\n\t\t\t\toverrideMimeType: function( type ) {\n\n\t\t\t\t\tif ( !state ) {\n\n\t\t\t\t\t\ts.mimeType = type;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t},\n\n\n\n\t\t\t\t// Status-dependent callbacks\n\n\t\t\t\tstatusCode: function( map ) {\n\n\t\t\t\t\tvar code;\n\n\t\t\t\t\tif ( map ) {\n\n\t\t\t\t\t\tif ( state < 2 ) {\n\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t},\n\n\n\n\t\t\t\t// Cancel the request\n\n\t\t\t\tabort: function( statusText ) {\n\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\n\t\t\t\t\tif ( transport ) {\n\n\t\t\t\t\t\ttransport.abort( finalText );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdone( 0, finalText );\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\n\n\t\t// Attach deferreds\n\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\n\t\tjqXHR.success = jqXHR.done;\n\n\t\tjqXHR.error = jqXHR.fail;\n\n\n\n\t\t// Remove hash character (#7531: and string promotion)\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\n\t\t// We also use the url parameter if available\n\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\n\n\t\t// Alias method option to type as per ticket #12004\n\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\n\n\t\t// Extract dataTypes list\n\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\n\t\tif ( s.crossDomain == null ) {\n\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\n\n\t\t\t// Support: IE8-11+\n\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\n\t\t\ttry {\n\n\t\t\t\turlAnchor.href = s.url;\n\n\n\n\t\t\t\t// Support: IE8-11+\n\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\n\t\t\t} catch ( e ) {\n\n\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\n\t\t\t\ts.crossDomain = true;\n\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t// Convert data if not already a string\n\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\n\t\t}\n\n\n\n\t\t// Apply prefilters\n\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\n\n\t\t// If request was aborted inside a prefilter, stop there\n\n\t\tif ( state === 2 ) {\n\n\t\t\treturn jqXHR;\n\n\t\t}\n\n\n\n\t\t// We can fire global events as of now if asked to\n\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\t\tfireGlobals = jQuery.event && s.global;\n\n\n\n\t\t// Watch for a new set of requests\n\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\t\t}\n\n\n\n\t\t// Uppercase the type\n\n\t\ts.type = s.type.toUpperCase();\n\n\n\n\t\t// Determine if request has content\n\n\t\ts.hasContent = !rnoContent.test( s.type );"
        },
        {
          "file_path": "/src/src/ajax/jsonp.js",
          "match_lines": [
            25,
            25
          ],
          "match_position": [
            37,
            55
          ],
          "match_string": "\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?"
        },
        {
          "file_path": "/src/src/ajax/jsonp.js",
          "match_lines": [
            30,
            30
          ],
          "match_position": [
            5,
            24
          ],
          "match_string": "\t\t\t\trjsonp.test( s.data ) && \"data\""
        },
        {
          "file_path": "/src/src/ajax/jsonp.js",
          "match_lines": [
            45,
            45
          ],
          "match_position": [
            15,
            33
          ],
          "match_string": "\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;"
        },
        {
          "file_path": "/src/src/css.js",
          "match_lines": [
            373,
            373
          ],
          "match_position": [
            12,
            58
          ],
          "match_string": "\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&"
        },
        {
          "file_path": "/src/src/css.js",
          "match_lines": [
            452,
            452
          ],
          "match_position": [
            8,
            28
          ],
          "match_string": "\tif ( !rmargin.test( prefix ) ) {"
        },
        {
          "file_path": "/src/src/data.js",
          "match_lines": [
            28,
            45
          ],
          "match_position": [
            3,
            20
          ],
          "match_string": "\t\tdata = elem.getAttribute( name );\n\n\n\n\t\tif ( typeof data === \"string\" ) {\n\n\t\t\ttry {\n\n\t\t\t\tdata = data === \"true\" ? true :\n\n\t\t\t\t\tdata === \"false\" ? false :\n\n\t\t\t\t\tdata === \"null\" ? null :\n\n\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\n\t\t\t\t\t+data + \"\" === data ? +data :\n\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\n\t\t\t\t\tdata;\n\n\t\t\t} catch ( e ) {}\n\n\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\n\t\t\tdataUser.set( elem, key, data );\n\n\t\t} else {\n\n\t\t\tdata = undefined;"
        },
        {
          "file_path": "/src/src/event/trigger.js",
          "match_lines": [
            30,
            30
          ],
          "match_position": [
            8,
            55
          ],
          "match_string": "\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {"
        },
        {
          "file_path": "/src/src/manipulation.js",
          "match_lines": [
            107,
            107
          ],
          "match_position": [
            31,
            60
          ],
          "match_string": "\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {"
        },
        {
          "file_path": "/src/src/serialize.js",
          "match_lines": [
            22,
            22
          ],
          "match_position": [
            24,
            45
          ],
          "match_string": "\t\t\tif ( traditional || rbracket.test( prefix ) ) {"
        },
        {
          "file_path": "/src/src/traversing.js",
          "match_lines": [
            42,
            42
          ],
          "match_position": [
            10,
            39
          ],
          "match_string": "\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?"
        },
        {
          "file_path": "/src/src/traversing.js",
          "match_lines": [
            165,
            165
          ],
          "match_position": [
            9,
            32
          ],
          "match_string": "\t\t\tif ( rparentsprev.test( name ) ) {"
        }
      ],
      "metadata": {
        "cwe": "CWE-185: Incorrect Regular Expression",
        "description": "Ensure that the regex used to compare with user supplied input is safe from regular expression denial of service.",
        "owasp": "A6: Security Misconfiguration",
        "severity": "WARNING"
      }
    }
  },
  "templates": {}
}
